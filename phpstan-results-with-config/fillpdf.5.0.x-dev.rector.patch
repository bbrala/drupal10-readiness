diff --git a/fillpdf.api.php b/fillpdf.api.php
index fc8e1f5..030158e 100644
--- a/fillpdf.api.php
+++ b/fillpdf.api.php
@@ -11,13 +11,12 @@ use Drupal\fillpdf\Form\FillPdfFormForm;
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter a FillPdfFormForm prior to building its edit form.
  *
  * This is triggered in FillPdfFormForm::form().
  *
- * @param Drupal\fillpdf\Form\FillPdfFormForm $fillpdf_form_form
+ * @param FillPdfFormForm $fillpdf_form_form
  *   The FillPdfFormForm object to alter.
  */
 function hook_fillpdf_form_form_pre_form_build_alter(FillPdfFormForm $fillpdf_form_form): void {
diff --git a/fillpdf.install b/fillpdf.install
index 749b8f8..89df82a 100644
--- a/fillpdf.install
+++ b/fillpdf.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ModuleInstaller;
 /**
  * @file
  * Install functions for FillPDF.
@@ -204,7 +205,7 @@ function fillpdf_update_8109() {
  * Install 'fillpdf_legacy' sub-module, uninstall 'fillpdf_next' sub-module.
  */
 function fillpdf_update_8110() {
-  /** @var \Drupal\Core\Extension\ModuleInstaller $module_installer */
+  /** @var ModuleInstaller $module_installer */
   $module_installer = \Drupal::service('module_installer');
 
   if (\Drupal::moduleHandler()->moduleExists('fillpdf_next')) {
diff --git a/src/Annotation/FillPdfActionPlugin.php b/src/Annotation/FillPdfActionPlugin.php
index 9e5d092..f978a66 100644
--- a/src/Annotation/FillPdfActionPlugin.php
+++ b/src/Annotation/FillPdfActionPlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class FillPdfActionPlugin extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/PdfBackend.php b/src/Annotation/PdfBackend.php
index 656a4fc..c835e65 100644
--- a/src/Annotation/PdfBackend.php
+++ b/src/Annotation/PdfBackend.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class PdfBackend extends Plugin {
   /**
    * The plugin's label.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -33,7 +34,7 @@ class PdfBackend extends Plugin {
   /**
    * The plugin's description.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Component/Utility/FillPdf.php b/src/Component/Utility/FillPdf.php
index f04fdc3..4ca1fa4 100644
--- a/src/Component/Utility/FillPdf.php
+++ b/src/Component/Utility/FillPdf.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Component\Utility;
 
+use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\Core\Config\Config;
 use Drupal\views\Views;
 use GuzzleHttp\Client;
@@ -28,7 +29,7 @@ class FillPdf {
     if (empty($pdftk_path)) {
       $pdftk_path = 'pdftk';
     }
-    $process = new Process($pdftk_path . ' --version');
+    $process = new Process([$pdftk_path, '--version']);
     $process->run();
 
     // Check there's no error code and the --version output includes "pdftk".
@@ -79,7 +80,7 @@ class FillPdf {
    */
   public static function buildFileUri($scheme, $path) {
     $uri = $scheme . '://' . $path;
-    /** @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $streamWrapperManager */
+    /** @var StreamWrapperManagerInterface $streamWrapperManager */
     $streamWrapperManager = \Drupal::service('stream_wrapper_manager');
     return $streamWrapperManager->normalizeUri($uri);
   }
@@ -87,9 +88,9 @@ class FillPdf {
   /**
    * Tests the connection to a local service endpoint.
    *
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The Guzzle http client.
-   * @param \Drupal\Core\Config\Config $fillpdf_config
+   * @param Config $fillpdf_config
    *   FillPDF configuration object.
    *
    * @return bool
diff --git a/src/Controller/HandlePdfController.php b/src/Controller/HandlePdfController.php
index 9f0c546..326127d 100644
--- a/src/Controller/HandlePdfController.php
+++ b/src/Controller/HandlePdfController.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\fillpdf\Controller;
 
+use Symfony\Component\HttpFoundation\Response;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\fillpdf\Plugin\FillPdfActionPluginInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -29,95 +34,95 @@ class HandlePdfController extends ControllerBase {
   /**
    * The FillPDF link manipulator.
    *
-   * @var \Drupal\fillpdf\FillPdfLinkManipulatorInterface
+   * @var FillPdfLinkManipulatorInterface
    */
   protected $linkManipulator;
 
   /**
    * The FillPDF context manager.
    *
-   * @var \Drupal\fillpdf\FillPdfContextManagerInterface
+   * @var FillPdfContextManagerInterface
    */
   protected $contextManager;
 
   /**
    * The FillPDF token resolver.
    *
-   * @var \Drupal\fillpdf\TokenResolverInterface
+   * @var TokenResolverInterface
    */
   protected $tokenResolver;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The FillPDF backend manager.
    *
-   * @var \Drupal\fillpdf\Plugin\PdfBackendManager
+   * @var PdfBackendManager
    */
   protected $backendManager;
 
   /**
    * The FillPDF action manager.
    *
-   * @var \Drupal\fillpdf\Plugin\FillPdfActionPluginManager
+   * @var FillPdfActionPluginManager
    */
   protected $actionManager;
 
   /**
    * The backend proxy.
    *
-   * @var \Drupal\fillpdf\Service\BackendProxyInterface
+   * @var BackendProxyInterface
    */
   protected $backendProxy;
 
   /**
    * Provides a StreamWrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a FillPdfBackendManager object.
    *
-   * @param \Drupal\fillpdf\FillPdfLinkManipulatorInterface $link_manipulator
+   * @param FillPdfLinkManipulatorInterface $link_manipulator
    *   The FillPDF link manipulator.
-   * @param \Drupal\fillpdf\FillPdfContextManagerInterface $context_manager
+   * @param FillPdfContextManagerInterface $context_manager
    *   The FillPDF context manager.
-   * @param \Drupal\fillpdf\TokenResolverInterface $token_resolver
+   * @param TokenResolverInterface $token_resolver
    *   The FillPDF token resolver.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\fillpdf\Plugin\PdfBackendManager $backend_manager
+   * @param PdfBackendManager $backend_manager
    *   The FillPDF backend manager.
-   * @param \Drupal\fillpdf\Plugin\FillPdfActionPluginManager $action_manager
+   * @param FillPdfActionPluginManager $action_manager
    *   The FillPDF action manager.
-   * @param \Drupal\fillpdf\Service\BackendProxyInterface $backend_proxy
+   * @param BackendProxyInterface $backend_proxy
    *   The backend proxy.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   Provides a StreamWrapper manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(
@@ -177,12 +182,12 @@ class HandlePdfController extends ControllerBase {
   /**
    * Populates PDF template from context.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The action plugin's response object.
    *
    * @throws \InvalidArgumentException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws PluginException
+   * @throws EntityMalformedException
    *   If one of the passed arguments is missing or does not pass the
    *   validation.
    */
@@ -234,7 +239,7 @@ class HandlePdfController extends ControllerBase {
    *
    * @param string $original
    *   The original filename without tokens being replaced.
-   * @param \Drupal\Core\Entity\EntityInterface[] $entities
+   * @param EntityInterface[] $entities
    *   An array of entities to be used for replacing tokens.
    *
    * @return string
@@ -254,7 +259,7 @@ class HandlePdfController extends ControllerBase {
   /**
    * Figure out what to do with the PDF and do it.
    *
-   * @param \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form
+   * @param FillPdfFormInterface $fillpdf_form
    *   An object containing the loaded record from {fillpdf_forms}.
    * @param string $pdf_data
    *   A string containing the content of the merged PDF.
@@ -263,15 +268,15 @@ class HandlePdfController extends ControllerBase {
    *   FillPdfLinkManipulatorInterface::parseLink().
    * @param string $filename
    *   Filename of the merged PDF.
-   * @param \Drupal\Core\Entity\EntityInterface[] $entities
+   * @param EntityInterface[] $entities
    *   An array of entities to be used for replacing tokens. These may be still
    *   needed for generating the destination path, if the file is saved.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The action plugin's response object.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws PluginException
+   * @throws EntityMalformedException
    *
    * @see \Drupal\fillpdf\FillPdfLinkManipulatorInterface::parseLink()
    */
@@ -318,7 +323,7 @@ class HandlePdfController extends ControllerBase {
       'filename' => $filename,
     ];
 
-    /** @var \Drupal\fillpdf\Plugin\FillPdfActionPluginInterface $fillpdf_action */
+    /** @var FillPdfActionPluginInterface $fillpdf_action */
     $fillpdf_action = $this->actionManager->createInstance($action_plugin_id, $action_configuration);
     $response = $fillpdf_action->execute();
 
diff --git a/src/Entity/FillPdfForm.php b/src/Entity/FillPdfForm.php
index 7215aef..0a22fb1 100644
--- a/src/Entity/FillPdfForm.php
+++ b/src/Entity/FillPdfForm.php
@@ -57,11 +57,11 @@ class FillPdfForm extends ContentEntityBase implements FillPdfFormInterface {
    * @param int $id
    *   The ID of the form.
    *
-   * @return \Drupal\fillpdf\FillPdfFormInterface|null
+   * @return FillPdfFormInterface|null
    *   The FillPDF Form, or NULL if the ID didn't match any.
    */
   public static function load($id) {
-    /** @var \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form */
+    /** @var FillPdfFormInterface $fillpdf_form */
     $fillpdf_form = parent::load($id);
 
     return $fillpdf_form;
@@ -209,9 +209,9 @@ class FillPdfForm extends ContentEntityBase implements FillPdfFormInterface {
    *
    * Deletes the FillPdfForm's FillPdfFormFields.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage object.
-   * @param \Drupal\fillpdf\FillPdfFormInterface[] $entities
+   * @param FillPdfFormInterface[] $entities
    *   An array of FillPdfForms.
    */
   public static function preDelete(EntityStorageInterface $storage, array $entities) {
diff --git a/src/FillPdfAccessController.php b/src/FillPdfAccessController.php
index a5ff1bd..cd8c852 100644
--- a/src/FillPdfAccessController.php
+++ b/src/FillPdfAccessController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -23,50 +24,50 @@ class FillPdfAccessController implements ContainerInjectionInterface {
   /**
    * The FillPDF access helper.
    *
-   * @var \Drupal\fillpdf\FillPdfAccessHelperInterface
+   * @var FillPdfAccessHelperInterface
    */
   protected $accessHelper;
 
   /**
    * The FillPDF link manipulator.
    *
-   * @var \Drupal\fillpdf\FillPdfLinkManipulatorInterface
+   * @var FillPdfLinkManipulatorInterface
    */
   protected $linkManipulator;
 
   /**
    * The FillPDF context manager.
    *
-   * @var \Drupal\fillpdf\FillPdfContextManagerInterface
+   * @var FillPdfContextManagerInterface
    */
   protected $contextManager;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a FillPdfAccessManager object.
    *
-   * @param \Drupal\fillpdf\FillPdfAccessHelperInterface $access_helper
+   * @param FillPdfAccessHelperInterface $access_helper
    *   The FillPDF access helper.
-   * @param \Drupal\fillpdf\FillPdfLinkManipulatorInterface $link_manipulator
+   * @param FillPdfLinkManipulatorInterface $link_manipulator
    *   The FillPDF link manipulator.
-   * @param \Drupal\fillpdf\FillPdfContextManagerInterface $context_manager
+   * @param FillPdfContextManagerInterface $context_manager
    *   The FillPDF context manager.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(
@@ -99,7 +100,7 @@ class FillPdfAccessController implements ContainerInjectionInterface {
   /**
    * Checks whether the current user has access to the current request.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   Access result value object.
    */
   public function checkLink() {
diff --git a/src/FillPdfAccessHelper.php b/src/FillPdfAccessHelper.php
index 9589b07..ff909e6 100644
--- a/src/FillPdfAccessHelper.php
+++ b/src/FillPdfAccessHelper.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\fillpdf\Service\FillPdfLinkManipulator;
+use Drupal\fillpdf\Service\FillPdfContextManager;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
@@ -16,23 +19,23 @@ class FillPdfAccessHelper implements FillPdfAccessHelperInterface {
   /**
    * The FillPDF link manipulator.
    *
-   * @var \Drupal\fillpdf\Service\FillPdfLinkManipulator
+   * @var FillPdfLinkManipulator
    */
   protected $linkManipulator;
 
   /**
    * The FillPDF context manager.
    *
-   * @var \Drupal\fillpdf\Service\FillPdfContextManager
+   * @var FillPdfContextManager
    */
   protected $contextManager;
 
   /**
    * Constructs a FillPdfAccessManager object.
    *
-   * @param \Drupal\fillpdf\FillPdfLinkManipulatorInterface $link_manipulator
+   * @param FillPdfLinkManipulatorInterface $link_manipulator
    *   The FillPDF link manipulator.
-   * @param \Drupal\fillpdf\FillPdfContextManagerInterface $context_manager
+   * @param FillPdfContextManagerInterface $context_manager
    *   The FillPDF context manager.
    */
   public function __construct(FillPdfLinkManipulatorInterface $link_manipulator, FillPdfContextManagerInterface $context_manager) {
@@ -81,7 +84,7 @@ class FillPdfAccessHelper implements FillPdfAccessHelperInterface {
     if (!$is_sample && $can_publish) {
       $entities = $this->contextManager->loadEntities($context);
 
-      /** @var \Drupal\Core\Entity\EntityInterface[] $type_entities */
+      /** @var EntityInterface[] $type_entities */
       foreach ($entities as $type_entities) {
         foreach ($type_entities as $entity) {
           // If there are any entities in the context that the user can't view,
diff --git a/src/FillPdfAccessHelperInterface.php b/src/FillPdfAccessHelperInterface.php
index 4b529ad..533a71f 100644
--- a/src/FillPdfAccessHelperInterface.php
+++ b/src/FillPdfAccessHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
 
@@ -20,10 +21,10 @@ interface FillPdfAccessHelperInterface {
    * @param string $url
    *   The root-relative FillPDF URL that would be used to generate the PDF.
    *   e.g. /fillpdf?fid=1&entity_type=node&entity_id=1.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access results.
    *
    * @see \Drupal\fillpdf\FillPdfAccessHelperInterface::canGeneratePdfFromContext()
@@ -36,12 +37,12 @@ interface FillPdfAccessHelperInterface {
    * This function should build a FillPdfLinkManipulator-compatible $context and
    * then pass control to self::canGeneratePdfFromLink().
    *
-   * @param \Drupal\Core\Url $link
+   * @param Url $link
    *   The FillPDF Link containing the entities whose access to check.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user whose access is being checked.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access results.
    *
    * @see \Drupal\fillpdf\FillPdfAccessHelperInterface::canGeneratePdfFromContext()
@@ -55,10 +56,10 @@ interface FillPdfAccessHelperInterface {
    *
    * @param array $context
    *   As returned by FillPdfLinkManipulator's parse functions.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user whose access is being checked.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access results.
    *
    * @see \Drupal\fillpdf\FillPdfAccessHelperInterface::canGeneratePdfFromLink()
diff --git a/src/FillPdfAdminFormHelperInterface.php b/src/FillPdfAdminFormHelperInterface.php
index aa0a049..824e53a 100644
--- a/src/FillPdfAdminFormHelperInterface.php
+++ b/src/FillPdfAdminFormHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * Common methods used on admin screens.
  *
@@ -45,7 +46,7 @@ interface FillPdfAdminFormHelperInterface {
   /**
    * Returns the help text for FillPDF replacements.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The help text.
    */
   public static function getReplacementsDescription();
diff --git a/src/FillPdfContextManagerInterface.php b/src/FillPdfContextManagerInterface.php
index f329e97..77483a0 100644
--- a/src/FillPdfContextManagerInterface.php
+++ b/src/FillPdfContextManagerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\Core\Entity\EntityInterface;
 /**
  * Load entities from a FillPDF $context.
  *
@@ -19,7 +20,7 @@ interface FillPdfContextManagerInterface {
    *   The FillPDF request context as returned by
    *   FillPdfLinkManipulatorInterface::parseLink().
    *
-   * @return \Drupal\Core\Entity\EntityInterface[][]
+   * @return EntityInterface[][]
    *   Multidimensional array of entities, keyed by ID and grouped by entity
    *   type. Returns an empty array if no matching entities are found.
    *
diff --git a/src/FillPdfFileContextAccessControlHandler.php b/src/FillPdfFileContextAccessControlHandler.php
index e91bece..f92b7f5 100644
--- a/src/FillPdfFileContextAccessControlHandler.php
+++ b/src/FillPdfFileContextAccessControlHandler.php
@@ -20,7 +20,7 @@ class FillPdfFileContextAccessControlHandler extends EntityAccessControlHandler
   /**
    * The access helper.
    *
-   * @var \Drupal\fillpdf\FillPdfAccessHelperInterface
+   * @var FillPdfAccessHelperInterface
    */
   protected $accessHelper;
 
diff --git a/src/FillPdfFormInterface.php b/src/FillPdfFormInterface.php
index 7e4cfea..e740bf7 100644
--- a/src/FillPdfFormInterface.php
+++ b/src/FillPdfFormInterface.php
@@ -20,7 +20,7 @@ interface FillPdfFormInterface extends ExportableContentEntityInterface {
   /**
    * Returns all FillPdfFormFields associated with this FillPdfForm.
    *
-   * @return \Drupal\fillpdf\FillPdfFormFieldInterface[]
+   * @return FillPdfFormFieldInterface[]
    *   Associative array of FillPdfFormFields keyed by the pdf_key.
    */
   public function getFormFields();
diff --git a/src/FillPdfLinkManipulatorInterface.php b/src/FillPdfLinkManipulatorInterface.php
index 3f76139..a779389 100644
--- a/src/FillPdfLinkManipulatorInterface.php
+++ b/src/FillPdfLinkManipulatorInterface.php
@@ -17,7 +17,7 @@ interface FillPdfLinkManipulatorInterface {
   /**
    * Parses a request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request containing the query string to parse.
    *
    * @return array
@@ -46,7 +46,7 @@ interface FillPdfLinkManipulatorInterface {
   /**
    * Parses a Url object.
    *
-   * @param \Drupal\Core\Url $link
+   * @param Url $link
    *   The valid URL containing the FillPDF generation metadata. e.g.
    *   'http://example.com/fillpdf?entity_ids[]=node:1&entity_ids[]=contact:7'.
    *
@@ -75,7 +75,7 @@ interface FillPdfLinkManipulatorInterface {
    *   The array of parameters to be converted into a
    *   URL and query string.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Url object.
    */
   public function generateLink(array $parameters);
diff --git a/src/Form/FillPdfFormExportForm.php b/src/Form/FillPdfFormExportForm.php
index 36351a5..725a2aa 100644
--- a/src/Form/FillPdfFormExportForm.php
+++ b/src/Form/FillPdfFormExportForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Form;
 
+use Drupal\fillpdf\FillPdfFormInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\fillpdf\SerializerInterface;
@@ -15,14 +16,14 @@ class FillPdfFormExportForm extends EntityForm {
   /**
    * The FillPdf serializer.
    *
-   * @var \Drupal\fillpdf\SerializerInterface
+   * @var SerializerInterface
    */
   protected $serializer;
 
   /**
    * Constructs a FillPdfFormExportForm object.
    *
-   * @param \Drupal\fillpdf\SerializerInterface $serializer
+   * @param SerializerInterface $serializer
    *   The FillPDF serializer.
    */
   public function __construct(SerializerInterface $serializer) {
@@ -44,7 +45,7 @@ class FillPdfFormExportForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     parent::form($form, $form_state);
 
-    /** @var \Drupal\fillpdf\FillPdfFormInterface $entity */
+    /** @var FillPdfFormInterface $entity */
     $entity = $this->getEntity();
 
     $code = $this->serializer->getFormExportCode($entity);
diff --git a/src/Form/FillPdfFormFieldForm.php b/src/Form/FillPdfFormFieldForm.php
index 365432a..4d10e62 100644
--- a/src/Form/FillPdfFormFieldForm.php
+++ b/src/Form/FillPdfFormFieldForm.php
@@ -18,20 +18,20 @@ class FillPdfFormFieldForm extends ContentEntityForm {
   /**
    * The FillPdf admin form helper.
    *
-   * @var \Drupal\fillpdf\FillPdfAdminFormHelperInterface
+   * @var FillPdfAdminFormHelperInterface
    */
   protected $adminFormHelper;
 
   /**
    * Constructs a FillPdfFormFieldForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\fillpdf\FillPdfAdminFormHelperInterface $admin_form_helper
+   * @param FillPdfAdminFormHelperInterface $admin_form_helper
    *   FillPdf admin form helper service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, FillPdfAdminFormHelperInterface $admin_form_helper, EntityTypeBundleInfoInterface $entity_type_bundle_info, TimeInterface $time) {
diff --git a/src/Form/FillPdfFormForm.php b/src/Form/FillPdfFormForm.php
index 86539ad..f4275bd 100644
--- a/src/Form/FillPdfFormForm.php
+++ b/src/Form/FillPdfFormForm.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\fillpdf\Form;
 
+use Drupal\fillpdf\FillPdfFormInterface;
+use Drupal\file\FileInterface;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\fillpdf\FillPdfFormFieldInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Entity\EntityRepositoryInterface;
@@ -34,56 +39,56 @@ class FillPdfFormForm extends ContentEntityForm {
   /**
    * The FillPdf admin form helper.
    *
-   * @var \Drupal\fillpdf\FillPdfAdminFormHelperInterface
+   * @var FillPdfAdminFormHelperInterface
    */
   protected $adminFormHelper;
 
   /**
    * The FillPdf link manipulator.
    *
-   * @var \Drupal\fillpdf\FillPdfLinkManipulatorInterface
+   * @var FillPdfLinkManipulatorInterface
    */
   protected $linkManipulator;
 
   /**
    * The FillPdf link manipulator.
    *
-   * @var \Drupal\fillpdf\InputHelperInterface
+   * @var InputHelperInterface
    */
   protected $inputHelper;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The FillPdf serializer.
    *
-   * @var \Drupal\fillpdf\SerializerInterface
+   * @var SerializerInterface
    */
   protected $serializer;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The FillPDF token resolver.
    *
-   * @var \Drupal\fillpdf\TokenResolverInterface
+   * @var TokenResolverInterface
    */
   protected $tokenResolver;
 
   /**
    * The Renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -149,7 +154,7 @@ class FillPdfFormForm extends ContentEntityForm {
 
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form */
+    /** @var FillPdfFormInterface $fillpdf_form */
     $fillpdf_form = $this->entity;
 
     $existing_fields = $fillpdf_form->getFormFields();
@@ -263,7 +268,7 @@ class FillPdfFormForm extends ContentEntityForm {
 
     $fid = $fillpdf_form->id();
 
-    /** @var \Drupal\file\FileInterface $file_entity */
+    /** @var FileInterface $file_entity */
     $file_entity = $this->entityTypeManager->getStorage('file')->load($fillpdf_form->get('file')->first()->target_id);
     $pdf_info_weight = 0;
     $form['pdf_info'] = [
@@ -503,7 +508,7 @@ class FillPdfFormForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -528,7 +533,7 @@ class FillPdfFormForm extends ContentEntityForm {
     $actions = parent::actions($form, $form_state);
 
     // Replace inherited '?destination' query parameter with current URL.
-    /** @var \Drupal\Core\Url $route_info */
+    /** @var Url $route_info */
     $route_info = $actions['delete']['#url'];
     $route_info->setOption('query', []);
     $actions['delete']['#url'] = $route_info;
@@ -539,11 +544,11 @@ class FillPdfFormForm extends ContentEntityForm {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityStorageException
+   * @throws EntityMalformedException
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\fillpdf\FillPdfFormInterface $entity */
+    /** @var FillPdfFormInterface $entity */
     $entity = $this->getEntity();
 
     $this->messenger()->addStatus($this->t('FillPDF Form %link has been updated.', ['%link' => $entity->toLink()->toString()]));
@@ -551,7 +556,7 @@ class FillPdfFormForm extends ContentEntityForm {
     if ($form_state->getValue('upload_pdf')) {
       $existing_fields = $entity->getFormFields();
 
-      /** @var \Drupal\file\FileInterface $new_file */
+      /** @var FileInterface $new_file */
       $new_file = $this->entityTypeManager->getStorage('file')->load($form_state->getValue('upload_pdf')['0']);
       $new_file->setPermanent();
       $new_file->save();
@@ -566,12 +571,12 @@ class FillPdfFormForm extends ContentEntityForm {
       $non_matching_fields = $this->serializer->importFormFields($existing_fields, $new_fields, FALSE);
 
       // Save new fields.
-      /** @var \Drupal\fillpdf\FillPdfFormFieldInterface $field */
+      /** @var FillPdfFormFieldInterface $field */
       foreach ($new_fields as $field) {
         $field->save();
       }
       // Delete existing fields. Importing the new fields saved them.
-      /** @var \Drupal\fillpdf\FillPdfFormFieldInterface $field */
+      /** @var FillPdfFormFieldInterface $field */
       foreach ($existing_fields as $field) {
         $field->delete();
       }
diff --git a/src/Form/FillPdfFormImportForm.php b/src/Form/FillPdfFormImportForm.php
index 00005fe..06450cb 100644
--- a/src/Form/FillPdfFormImportForm.php
+++ b/src/Form/FillPdfFormImportForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\fillpdf\Form;
 
+use Drupal\fillpdf\FillPdfFormInterface;
+use Drupal\fillpdf\FillPdfFormFieldInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\fillpdf\SerializerInterface;
@@ -15,14 +17,14 @@ class FillPdfFormImportForm extends EntityForm {
   /**
    * The FillPdf serializer.
    *
-   * @var \Drupal\fillpdf\SerializerInterface
+   * @var SerializerInterface
    */
   protected $serializer;
 
   /**
    * Constructs a FillPdfFormImportForm object.
    *
-   * @param \Drupal\fillpdf\SerializerInterface $serializer
+   * @param SerializerInterface $serializer
    *   The FillPDF serializer.
    */
   public function __construct(SerializerInterface $serializer) {
@@ -83,10 +85,10 @@ class FillPdfFormImportForm extends EntityForm {
     $code = $form_state->getValue('code');
     $return = $this->serializer->deserializeForm($code);
 
-    /** @var \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form */
+    /** @var FillPdfFormInterface $fillpdf_form */
     $fillpdf_form = $return['form'];
 
-    /** @var \Drupal\fillpdf\FillPdfFormFieldInterface[] $fields */
+    /** @var FillPdfFormFieldInterface[] $fields */
     $fields = $return['fields'];
 
     if (!is_object($fillpdf_form) || !count($fields)) {
@@ -106,15 +108,15 @@ class FillPdfFormImportForm extends EntityForm {
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $form_state->cleanValues();
 
-    /** @var \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form */
+    /** @var FillPdfFormInterface $fillpdf_form */
     $fillpdf_form = $this->getEntity();
 
     $mappings = $form_state->getValue('mappings');
 
-    /** @var \Drupal\fillpdf\FillPdfFormInterface $imported_form */
+    /** @var FillPdfFormInterface $imported_form */
     $imported_form = $mappings['form'];
 
-    /** @var \Drupal\fillpdf\FillPdfFormFieldInterface[] $imported_fields */
+    /** @var FillPdfFormFieldInterface[] $imported_fields */
     $imported_fields = $mappings['fields'];
 
     $unmatched_pdf_keys = $this->serializer->importForm($fillpdf_form, $imported_form, $imported_fields);
diff --git a/src/Form/FillPdfOverviewForm.php b/src/Form/FillPdfOverviewForm.php
index f2ca507..0c7f926 100644
--- a/src/Form/FillPdfOverviewForm.php
+++ b/src/Form/FillPdfOverviewForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\fillpdf\Form;
 
+use Drupal\file\FileInterface;
+use Drupal\fillpdf\Entity\FillPdfForm;
+use Drupal\fillpdf\FillPdfFormFieldInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\File\FileSystemInterface;
@@ -23,50 +26,50 @@ class FillPdfOverviewForm extends FormBase {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The FillPDF backend manager.
    *
-   * @var \Drupal\fillpdf\Plugin\PdfBackendManager
+   * @var PdfBackendManager
    */
   protected $backendManager;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The FillPDF input helper.
    *
-   * @var \Drupal\fillpdf\InputHelperInterface
+   * @var InputHelperInterface
    */
   protected $inputHelper;
 
   /**
    * The Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a FillPdfSettingsForm object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\fillpdf\Plugin\PdfBackendManager $backend_manager
+   * @param PdfBackendManager $backend_manager
    *   The FillPDF backend manager.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\fillpdf\InputHelperInterface $input_helper
+   * @param InputHelperInterface $input_helper
    *   The FillPDF input helper.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   The Entity type manager service.
    */
   public function __construct(
@@ -167,23 +170,23 @@ class FillPdfOverviewForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     if ($form_state->getValue('upload_pdf')) {
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = $this->entityTypeManager->getStorage('file')->load($form_state->getValue('upload_pdf')['0']);
       $added = $this->inputHelper->attachPdfToForm($file);
 
-      /** @var \Drupal\fillpdf\Entity\FillPdfForm $fillpdf_form */
+      /** @var FillPdfForm $fillpdf_form */
       $fillpdf_form = $added['form'];
       $fid = $fillpdf_form->id();
 
       $this->logger('fillpdf')->notice('Added FillPDF form %id.', ['%id' => $fid]);
       $this->messenger()->addStatus($this->t('New FillPDF form has been created.'));
 
-      /** @var \Drupal\fillpdf\FillPdfFormFieldInterface[] $form_fields */
+      /** @var FillPdfFormFieldInterface[] $form_fields */
       $form_fields = $added['fields'];
       if (count($form_fields) === 0) {
         $this->messenger()->addWarning($this->t('No fields detected in PDF. Are you sure it contains editable fields?'));
diff --git a/src/Form/FillPdfSettingsForm.php b/src/Form/FillPdfSettingsForm.php
index b336ad3..ec27831 100644
--- a/src/Form/FillPdfSettingsForm.php
+++ b/src/Form/FillPdfSettingsForm.php
@@ -26,7 +26,7 @@ class FillPdfSettingsForm extends ConfigFormBase {
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -42,47 +42,47 @@ class FillPdfSettingsForm extends ConfigFormBase {
   /**
    * The FillPDF admin form helper service.
    *
-   * @var \Drupal\fillpdf\Service\FillPdfAdminFormHelper
+   * @var FillPdfAdminFormHelper
    */
   protected $adminFormHelper;
 
   /**
    * The Guzzle HTTP client service.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * The FillPDF shell manager.
    *
-   * @var \Drupal\fillpdf\ShellManager
+   * @var ShellManager
    */
   protected $shellManager;
 
   /**
    * The Renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a FillPdfSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   Helpers to operate on files and stream wrappers.
-   * @param \Drupal\fillpdf\Service\FillPdfAdminFormHelper $admin_form_helper
+   * @param FillPdfAdminFormHelper $admin_form_helper
    *   The FillPDF admin form helper service.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The Guzzle HTTP client service.
-   * @param \Drupal\fillpdf\ShellManager $shell_manager
+   * @param ShellManager $shell_manager
    *   The FillPDF shell manager.
-   * @param \Drupal\fillpdf\Plugin\PdfBackendManager $backend_manager
+   * @param PdfBackendManager $backend_manager
    *   The FillPDF backend manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The Renderer service.
    */
   public function __construct(
diff --git a/src/InputHelper.php b/src/InputHelper.php
index 6b27015..86dd2e5 100644
--- a/src/InputHelper.php
+++ b/src/InputHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\fillpdf\Plugin\PdfBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\file\FileInterface;
 use Drupal\Core\Entity\EntityTypeManager;
@@ -19,32 +20,32 @@ class InputHelper implements InputHelperInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configManager;
 
   /**
    * The FillPDF backend manager.
    *
-   * @var \Drupal\fillpdf\Plugin\PdfBackendManager
+   * @var PdfBackendManager
    */
   protected $backendManager;
 
   /**
    * The Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Constructs an InputHelper object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\fillpdf\Plugin\PdfBackendManager $backend_manager
+   * @param PdfBackendManager $backend_manager
    *   The FillPDF backend manager.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   The Entity type manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PdfBackendManager $backend_manager, EntityTypeManager $entity_type_manager) {
@@ -87,15 +88,15 @@ class InputHelper implements InputHelperInterface {
   /**
    * Parses fields of a FillPDF form.
    *
-   * @param \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form
+   * @param FillPdfFormInterface $fillpdf_form
    *   The FillPdfForm the PDF template file should be attached to.
    *
-   * @return \Drupal\fillpdf\FillPdfFormFieldInterface[]
+   * @return FillPdfFormFieldInterface[]
    *   Associative array of FillPdfFormField objects keyed by the PDF key.
    */
   public function parseFields(FillPdfFormInterface $fillpdf_form) {
     $config = $this->configManager->get('fillpdf.settings');
-    /** @var \Drupal\fillpdf\Plugin\PdfBackendInterface $backend */
+    /** @var PdfBackendInterface $backend */
     $backend = $this->backendManager->createInstance($config->get('backend'), $config->get());
 
     // Attempt to parse the fields in the PDF.
diff --git a/src/InputHelperInterface.php b/src/InputHelperInterface.php
index bb9258d..f4d8d5e 100644
--- a/src/InputHelperInterface.php
+++ b/src/InputHelperInterface.php
@@ -14,9 +14,9 @@ interface InputHelperInterface {
   /**
    * Attaches a PDF template file to a FillPdfForm.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The PDF template file to attach.
-   * @param \Drupal\fillpdf\FillPdfFormInterface $existing_form
+   * @param FillPdfFormInterface $existing_form
    *   The FillPdfForm the PDF template file should be attached to.
    *
    * @return array
diff --git a/src/OutputHandler.php b/src/OutputHandler.php
index a0282cf..d5541eb 100644
--- a/src/OutputHandler.php
+++ b/src/OutputHandler.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\fillpdf\Entity\FillPdfForm;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\file\FileInterface;
 use Drupal\fillpdf\Component\Utility\FillPdf;
@@ -21,41 +23,41 @@ class OutputHandler implements OutputHandlerInterface {
   /**
    * The FillPDF token resolver.
    *
-   * @var \Drupal\fillpdf\TokenResolverInterface
+   * @var TokenResolverInterface
    */
   protected $tokenResolver;
 
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The FillPdf link manipulator.
    *
-   * @var \Drupal\fillpdf\FillPdfLinkManipulatorInterface
+   * @var FillPdfLinkManipulatorInterface
    */
   protected $linkManipulator;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * OutputHandler constructor.
    *
-   * @param \Drupal\fillpdf\TokenResolverInterface $token_resolver
+   * @param TokenResolverInterface $token_resolver
    *   The FillPdf token resolver.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.
-   * @param \Drupal\fillpdf\FillPdfLinkManipulatorInterface $link_manipulator
+   * @param FillPdfLinkManipulatorInterface $link_manipulator
    *   The FillPdf link manipulator.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(TokenResolverInterface $token_resolver, LoggerInterface $logger, FillPdfLinkManipulatorInterface $link_manipulator, FileSystemInterface $file_system) {
@@ -69,10 +71,10 @@ class OutputHandler implements OutputHandlerInterface {
    * {@inheritdoc}
    */
   public function savePdfToFile(array $configuration, $destination_path_override = NULL) {
-    /** @var \Drupal\fillpdf\Entity\FillPdfForm $fillpdf_form */
+    /** @var FillPdfForm $fillpdf_form */
     $fillpdf_form = $configuration['form'];
 
-    /** @var \Drupal\Core\Entity\EntityInterface[] $entities */
+    /** @var EntityInterface[] $entities */
     $entities = $configuration['entities'];
 
     $destination_path = 'fillpdf';
@@ -98,7 +100,7 @@ class OutputHandler implements OutputHandlerInterface {
     }
     else {
       // Full steam ahead!
-      $saved_file = file_save_data($configuration['data'], "{$resolved_destination_path}/{$configuration['filename']}", FileSystemInterface::EXISTS_RENAME);
+      $saved_file = \Drupal::service('file.repository')->writeData($configuration['data'], "{$resolved_destination_path}/{$configuration['filename']}", FileSystemInterface::EXISTS_RENAME);
       $this->rememberFileContext($saved_file, $configuration['context']);
     }
 
@@ -110,7 +112,7 @@ class OutputHandler implements OutputHandlerInterface {
    *
    * @param string $destination_path
    *   The raw destination path, possibly containing unresolved tokens.
-   * @param \Drupal\Core\Entity\EntityInterface[] $entities
+   * @param EntityInterface[] $entities
    *   An array of entities to be used for replacing tokens.
    * @param string $scheme
    *   (optional) The storage scheme. Defaults to 'public'.
@@ -126,7 +128,7 @@ class OutputHandler implements OutputHandlerInterface {
   /**
    * Saves the file context.
    *
-   * @param \Drupal\file\FileInterface $fillpdf_file
+   * @param FileInterface $fillpdf_file
    *   File object containing the generated PDF file.
    * @param array $context
    *   An associative array representing the context of the generated file.
diff --git a/src/OutputHandlerInterface.php b/src/OutputHandlerInterface.php
index 95c0e24..5d48941 100644
--- a/src/OutputHandlerInterface.php
+++ b/src/OutputHandlerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\file\FileInterface;
 /**
  * Contains functions to standardize output handling for generated PDFs.
  *
@@ -27,7 +28,7 @@ interface OutputHandlerInterface {
    *   (optional) A destination path to override the one given by the
    *   FillPdfForm.
    *
-   * @return \Drupal\file\FileInterface|false
+   * @return FileInterface|false
    *   The file entity, or FALSE on error.
    *
    * @see \Drupal\fillpdf\FillPdfLinkManipulatorInterface::parseLink()
diff --git a/src/Plugin/FillPdfActionPlugin/FillPdfDownloadAction.php b/src/Plugin/FillPdfActionPlugin/FillPdfDownloadAction.php
index 628ff84..653b6e8 100644
--- a/src/Plugin/FillPdfActionPlugin/FillPdfDownloadAction.php
+++ b/src/Plugin/FillPdfActionPlugin/FillPdfDownloadAction.php
@@ -23,7 +23,7 @@ class FillPdfDownloadAction extends FillPdfActionPluginBase {
    *
    * Sends the PDF file to the user's browser.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Sends the PDF file to the browser.
    */
   public function execute() {
diff --git a/src/Plugin/FillPdfActionPlugin/FillPdfRedirectAction.php b/src/Plugin/FillPdfActionPlugin/FillPdfRedirectAction.php
index 0cefc70..e3af036 100644
--- a/src/Plugin/FillPdfActionPlugin/FillPdfRedirectAction.php
+++ b/src/Plugin/FillPdfActionPlugin/FillPdfRedirectAction.php
@@ -22,7 +22,7 @@ class FillPdfRedirectAction extends FillPdfSaveAction {
    *
    * Saves the PDF file to the filesystem and redirects to it.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirects user to the generated PDF file, or if saving the file fails,
    *   to the front page.
    *
@@ -31,7 +31,7 @@ class FillPdfRedirectAction extends FillPdfSaveAction {
    */
   public function execute() {
     $saved_file = $this->savePdf();
-    $url = ($saved_file !== FALSE) ? file_create_url($saved_file->getFileUri()) : Url::fromRoute('<front>')->toString();
+    $url = ($saved_file !== FALSE) ? \Drupal::service('file_url_generator')->generateAbsoluteString($saved_file->getFileUri()) : Url::fromRoute('<front>')->toString();
     return new RedirectResponse($url);
   }
 
diff --git a/src/Plugin/FillPdfActionPlugin/FillPdfSaveAction.php b/src/Plugin/FillPdfActionPlugin/FillPdfSaveAction.php
index 280a060..fae8b7e 100644
--- a/src/Plugin/FillPdfActionPlugin/FillPdfSaveAction.php
+++ b/src/Plugin/FillPdfActionPlugin/FillPdfSaveAction.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Plugin\FillPdfActionPlugin;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Url;
 use Drupal\fillpdf\OutputHandler;
 use Drupal\fillpdf\Plugin\FillPdfActionPluginBase;
@@ -23,14 +24,14 @@ class FillPdfSaveAction extends FillPdfActionPluginBase {
   /**
    * The FillPdf output handler.
    *
-   * @var \Drupal\fillpdf\OutputHandler
+   * @var OutputHandler
    */
   protected $outputHandler;
 
   /**
    * Constructs a \Drupal\Component\Plugin\PluginBase object.
    *
-   * @param \Drupal\fillpdf\OutputHandler $output_handler
+   * @param OutputHandler $output_handler
    *   The FillPdf output handler.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ -62,7 +63,7 @@ class FillPdfSaveAction extends FillPdfActionPluginBase {
    *
    * Saves the PDF file to the filesystem and redirects to the front page.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirects user to the front page.
    */
   public function execute() {
@@ -76,7 +77,7 @@ class FillPdfSaveAction extends FillPdfActionPluginBase {
   /**
    * Saves merged PDF data to the filesystem.
    *
-   * @return \Drupal\file\FileInterface|false
+   * @return FileInterface|false
    *   The saved file entity, or FALSE on error.
    *
    * @see \Drupal\fillpdf\OutputHandlerInterface::savePdfToFile()
diff --git a/src/Plugin/FillPdfActionPluginInterface.php b/src/Plugin/FillPdfActionPluginInterface.php
index 0c5dd64..7cfeab5 100644
--- a/src/Plugin/FillPdfActionPluginInterface.php
+++ b/src/Plugin/FillPdfActionPluginInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Plugin;
 
+use Symfony\Component\HttpFoundation\Response;
 use Drupal\Component\Plugin\DependentPluginInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -32,7 +33,7 @@ interface FillPdfActionPluginInterface extends PluginInspectionInterface, Depend
    * When you need context info, see if it is passed to you in
    * $this->configuration.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A response.
    *
    * @todo Document exceptions thrown if something goes wrong.
diff --git a/src/Plugin/FillPdfActionPluginManager.php b/src/Plugin/FillPdfActionPluginManager.php
index 68d8d0a..184dc1c 100644
--- a/src/Plugin/FillPdfActionPluginManager.php
+++ b/src/Plugin/FillPdfActionPluginManager.php
@@ -17,9 +17,9 @@ class FillPdfActionPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/PdfBackend/LocalServerPdfBackend.php b/src/Plugin/PdfBackend/LocalServerPdfBackend.php
index 3f65267..c642f57 100644
--- a/src/Plugin/PdfBackend/LocalServerPdfBackend.php
+++ b/src/Plugin/PdfBackend/LocalServerPdfBackend.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Plugin\PdfBackend;
 
+use Drupal\Core\File\FileSystem;
 use function GuzzleHttp\json_encode;
 use function GuzzleHttp\json_decode;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -28,14 +29,14 @@ class LocalServerPdfBackend extends PdfBackendBase implements ContainerFactoryPl
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $fileSystem;
 
   /**
    * The Guzzle http client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -48,7 +49,7 @@ class LocalServerPdfBackend extends PdfBackendBase implements ContainerFactoryPl
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The Guzzle http client.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, Client $http_client) {
diff --git a/src/Plugin/PdfBackend/PdftkPdfBackend.php b/src/Plugin/PdfBackend/PdftkPdfBackend.php
index 5fe89cd..ca28261 100644
--- a/src/Plugin/PdfBackend/PdftkPdfBackend.php
+++ b/src/Plugin/PdfBackend/PdftkPdfBackend.php
@@ -34,21 +34,21 @@ class PdftkPdfBackend extends PdfBackendBase implements ContainerFactoryPluginIn
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $fileSystem;
 
   /**
    * The FillPDF shell manager.
    *
-   * @var \Drupal\fillpdf\ShellManager
+   * @var ShellManager
    */
   protected $shellManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -61,11 +61,11 @@ class PdftkPdfBackend extends PdfBackendBase implements ContainerFactoryPluginIn
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\File\FileSystem $file_system
+   * @param FileSystem $file_system
    *   The file system.
-   * @param \Drupal\fillpdf\ShellManager $shell_manager
+   * @param ShellManager $shell_manager
    *   The FillPDF shell manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, FileSystem $file_system, ShellManager $shell_manager, EntityTypeManagerInterface $entity_type_manager) {
@@ -93,7 +93,7 @@ class PdftkPdfBackend extends PdfBackendBase implements ContainerFactoryPluginIn
    * {@inheritdoc}
    */
   public function parseStream($pdf_content) {
-    $template_file = file_save_data($pdf_content);
+    $template_file = \Drupal::service('file.repository')->writeData($pdf_content);
     return $this->parseFile($template_file);
   }
 
@@ -166,7 +166,7 @@ class PdftkPdfBackend extends PdfBackendBase implements ContainerFactoryPluginIn
    * {@inheritdoc}
    */
   public function mergeStream($pdf_content, array $field_mappings, array $context) {
-    $template_file = file_save_data($pdf_content);
+    $template_file = \Drupal::service('file.repository')->writeData($pdf_content);
     return $this->mergeFile($template_file, $field_mappings, $context);
   }
 
@@ -186,7 +186,7 @@ class PdftkPdfBackend extends PdfBackendBase implements ContainerFactoryPluginIn
     $xfdf_name = $template_uri . '.xfdf';
     $xfdf = create_xfdf(basename($xfdf_name), $fields);
     // Generate the file.
-    $xfdf_file = file_save_data($xfdf, $xfdf_name, FileSystemInterface::EXISTS_RENAME);
+    $xfdf_file = \Drupal::service('file.repository')->writeData($xfdf, $xfdf_name, FileSystemInterface::EXISTS_RENAME);
 
     // @todo Improve this approach when we turn $context into a value object.
     if (!isset($context['fid'])) {
diff --git a/src/Plugin/PdfBackendInterface.php b/src/Plugin/PdfBackendInterface.php
index 4191f6a..2dbeff4 100644
--- a/src/Plugin/PdfBackendInterface.php
+++ b/src/Plugin/PdfBackendInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Plugin;
 
+use Drupal\fillpdf\FieldMapping;
 use Drupal\file\FileInterface;
 
 /**
@@ -12,7 +13,7 @@ interface PdfBackendInterface {
   /**
    * Parse a PDF and return a list of its fields.
    *
-   * @param \Drupal\file\FileInterface $template_file
+   * @param FileInterface $template_file
    *   The PDF template whose fields are to be parsed.
    *
    * @return string[][]
@@ -48,10 +49,10 @@ interface PdfBackendInterface {
   /**
    * Populate a PDF file with field data.
    *
-   * @param \Drupal\file\FileInterface $template_file
+   * @param FileInterface $template_file
    *   The PDF template the field values specified in the mapping should be
    *   merged into.
-   * @param \Drupal\fillpdf\FieldMapping[] $field_mappings
+   * @param FieldMapping[] $field_mappings
    *   An array of FieldMapping objects mapping PDF field keys to the values
    *   they should be replaced with. Example:
    *   @code
@@ -78,7 +79,7 @@ interface PdfBackendInterface {
    * @param string $pdf_content
    *   The PDF template the field values specified in the mapping should be
    *   merged into.
-   * @param \Drupal\fillpdf\FieldMapping[] $field_mappings
+   * @param FieldMapping[] $field_mappings
    *   An array of FieldMapping objects mapping PDF field keys to the values
    *   they should be replaced with. Example:
    *   @code
diff --git a/src/Plugin/PdfBackendManager.php b/src/Plugin/PdfBackendManager.php
index 9ee56d9..e0ecf30 100644
--- a/src/Plugin/PdfBackendManager.php
+++ b/src/Plugin/PdfBackendManager.php
@@ -17,9 +17,9 @@ class PdfBackendManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Serializer.php b/src/Serializer.php
index 2391077..5fec839 100644
--- a/src/Serializer.php
+++ b/src/Serializer.php
@@ -22,7 +22,7 @@ class Serializer implements SerializerInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -31,7 +31,7 @@ class Serializer implements SerializerInterface {
    *
    * @param \Symfony\Component\Serializer\Serializer $serializer
    *   The FillPdf Form to serialize.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(SymfonySerializer $serializer, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/SerializerInterface.php b/src/SerializerInterface.php
index d693151..63613fc 100644
--- a/src/SerializerInterface.php
+++ b/src/SerializerInterface.php
@@ -12,7 +12,7 @@ interface SerializerInterface {
   /**
    * Serializes a FillPDF form for export.
    *
-   * @param \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form
+   * @param FillPdfFormInterface $fillpdf_form
    *   The FillPDF Form to serialize.
    *
    * @return string
@@ -36,11 +36,11 @@ interface SerializerInterface {
   /**
    * Imports a FillPDF form..
    *
-   * @param \Drupal\fillpdf\FillPdfFormInterface $fillpdf_form
+   * @param FillPdfFormInterface $fillpdf_form
    *   The existing FillPDF form.
-   * @param \Drupal\fillpdf\FillPdfFormInterface $imported_form
+   * @param FillPdfFormInterface $imported_form
    *   The FillPDF form being imported, usually from import code.
-   * @param \Drupal\fillpdf\FillPdfFormFieldInterface[] $imported_fields
+   * @param FillPdfFormFieldInterface[] $imported_fields
    *   Array of FillPDF form objects to import.
    *
    * @return string[]
@@ -53,9 +53,9 @@ interface SerializerInterface {
    *
    * Overwrites empty field values with previous existing field values.
    *
-   * @param \Drupal\fillpdf\FillPdfFormFieldInterface[] $keyed_fields
+   * @param FillPdfFormFieldInterface[] $keyed_fields
    *   Associative array of unsaved FillPDF Form objects keyed by PDF key.
-   * @param \Drupal\fillpdf\FillPdfFormFieldInterface[] $existing_fields
+   * @param FillPdfFormFieldInterface[] $existing_fields
    *   (optional) Array of existing PDF keys.
    * @param bool $save_existing_fields
    *   Whether to save the form fields in $existing_fields after updating them.
diff --git a/src/Service/BackendProxy.php b/src/Service/BackendProxy.php
index 0c27fb8..610fbe9 100644
--- a/src/Service/BackendProxy.php
+++ b/src/Service/BackendProxy.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\fillpdf\Service;
 
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\fillpdf\Plugin\PdfBackendInterface;
+use Drupal\file\FileInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\fillpdf\Component\Helper\FillPdfMappingHelper;
@@ -18,40 +21,40 @@ class BackendProxy implements BackendProxyInterface {
   /**
    * The fillpdf.token_resolver service.
    *
-   * @var \Drupal\fillpdf\TokenResolverInterface
+   * @var TokenResolverInterface
    */
   protected $tokenResolver;
 
   /**
    * The plugin.manager.fillpdf.pdf_backend service.
    *
-   * @var \Drupal\fillpdf\Plugin\PdfBackendManager
+   * @var PdfBackendManager
    */
   protected $backendManager;
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a BackendProxy object.
    *
-   * @param \Drupal\fillpdf\TokenResolverInterface $tokenResolver
+   * @param TokenResolverInterface $tokenResolver
    *   The fillpdf.token_resolver service.
-   * @param \Drupal\fillpdf\Plugin\PdfBackendManager $backendManager
+   * @param PdfBackendManager $backendManager
    *   The plugin.manager.fillpdf.pdf_backend service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   The Entity type manager service.
    */
   public function __construct(TokenResolverInterface $tokenResolver, PdfBackendManager $backendManager, ConfigFactoryInterface $configFactory, EntityTypeManager $entity_type_manager) {
@@ -64,7 +67,7 @@ class BackendProxy implements BackendProxyInterface {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function merge(FillPdfFormInterface $fillPdfForm, array $entities, array $mergeOptions = []): string {
     $config = $this->configFactory->get('fillpdf.settings');
@@ -104,12 +107,12 @@ class BackendProxy implements BackendProxyInterface {
     }
 
     // Now load the backend plugin.
-    /** @var \Drupal\fillpdf\Plugin\PdfBackendInterface $backend */
+    /** @var PdfBackendInterface $backend */
     $backend = $this->backendManager->createInstance($config->get('backend'), $config->get());
 
     // @todo Emit event (or call alter hook?) before populating PDF.
     // Rename fillpdf_merge_fields_alter() to fillpdf_populate_fields_alter().
-    /** @var \Drupal\file\FileInterface $templateFile */
+    /** @var FileInterface $templateFile */
     $templateFile = $this->entityTypeManager->getStorage('file')->load($fillPdfForm->file->target_id);
 
     $mergedPdf = $backend->mergeFile($templateFile, $fieldMappings, $mergeOptions);
diff --git a/src/Service/BackendProxyInterface.php b/src/Service/BackendProxyInterface.php
index 41a236c..2aea8b2 100644
--- a/src/Service/BackendProxyInterface.php
+++ b/src/Service/BackendProxyInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf\Service;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\fillpdf\FillPdfFormInterface;
 
 /**
@@ -16,10 +17,10 @@ interface BackendProxyInterface {
   /**
    * Merge data into a PDF using the supplied form configuration and entities.
    *
-   * @param \Drupal\fillpdf\FillPdfFormInterface $fillPdfForm
+   * @param FillPdfFormInterface $fillPdfForm
    *   The form configuration to use. Will be processed the same way as the
    *   fillpdf.populate_pdf route, including replacements, token mappings, etc.
-   * @param \Drupal\Core\Entity\EntityInterface[][] $entities
+   * @param EntityInterface[][] $entities
    *   The entity data to use. The entities should be keyed by entity type.
    *   Under each key, there should be an array of entities keyed by their IDs.
    * @param array $mergeOptions
diff --git a/src/Service/FillPdfAdminFormHelper.php b/src/Service/FillPdfAdminFormHelper.php
index 98c37ea..b0cb1c8 100644
--- a/src/Service/FillPdfAdminFormHelper.php
+++ b/src/Service/FillPdfAdminFormHelper.php
@@ -19,41 +19,41 @@ class FillPdfAdminFormHelper implements FillPdfAdminFormHelperInterface {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The stream wrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructs a FillPdfAdminFormHelper object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory, StreamWrapperManagerInterface $stream_wrapper_manager, Connection $connection) {
diff --git a/src/Service/FillPdfContextManager.php b/src/Service/FillPdfContextManager.php
index fc27000..17429c9 100644
--- a/src/Service/FillPdfContextManager.php
+++ b/src/Service/FillPdfContextManager.php
@@ -13,7 +13,7 @@ class FillPdfContextManager implements FillPdfContextManagerInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/src/Service/FillPdfLinkManipulator.php b/src/Service/FillPdfLinkManipulator.php
index 6bfaeeb..acf22e1 100644
--- a/src/Service/FillPdfLinkManipulator.php
+++ b/src/Service/FillPdfLinkManipulator.php
@@ -41,7 +41,7 @@ class FillPdfLinkManipulator implements FillPdfLinkManipulatorInterface {
    * @param string $url
    *   The internal path or external URL string.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   A Url object representing the URL string.
    *
    * @see FillPdfLinkManipulatorInterface::parseUrlString()
diff --git a/src/ShellManager.php b/src/ShellManager.php
index 910d3b8..8643e82 100644
--- a/src/ShellManager.php
+++ b/src/ShellManager.php
@@ -14,7 +14,7 @@ class ShellManager implements ShellManagerInterface {
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -28,7 +28,7 @@ class ShellManager implements ShellManagerInterface {
   /**
    * Constructs a ShellManager object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/src/TokenResolver.php b/src/TokenResolver.php
index 5914304..7902434 100644
--- a/src/TokenResolver.php
+++ b/src/TokenResolver.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\Core\TypedData\Exception\MissingDataException;
 use Drupal\Component\Render\PlainTextOutput;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ -31,25 +32,25 @@ class TokenResolver implements TokenResolverInterface {
   /**
    * The token entity mapper.
    *
-   * @var \Drupal\token\TokenEntityMapperInterface
+   * @var TokenEntityMapperInterface
    */
   protected $tokenEntityMapper;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a TokenResolver object.
    *
-   * @param \Drupal\Core\Utility\Token $token_service
+   * @param Token $token_service
    *   The token service.
-   * @param \Drupal\token\TokenEntityMapperInterface $token_entity_mapper
+   * @param TokenEntityMapperInterface $token_entity_mapper
    *   The token entity mapper.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(Token $token_service, TokenEntityMapperInterface $token_entity_mapper, ModuleHandlerInterface $module_handler) {
@@ -146,10 +147,10 @@ class TokenResolver implements TokenResolverInterface {
    * @param string[] $tokens
    *   List of non-fully qualified webform_submission tokens. These may be
    *   image element tokens such as 'values:image' or other tokens.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Webform submission entity.
    *
-   * @return \Drupal\fillpdf\FieldMapping\ImageFieldMapping|null
+   * @return ImageFieldMapping|null
    *   An ImageFieldMapping, or NULL if the tokens were no image element tokens.
    */
   protected static function parseImageWebformElementTokens(array $tokens, ContentEntityInterface $entity) {
@@ -193,13 +194,13 @@ class TokenResolver implements TokenResolverInterface {
    *   List of non-fully qualified tokens for a given entity type. These may be
    *   image field tokens such as 'field_image' or 'field_image:thumbnail' or
    *   other tokens such as 'field_name'.
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   Fieldable entity.
    *
-   * @return \Drupal\fillpdf\FieldMapping\ImageFieldMapping|null
+   * @return ImageFieldMapping|null
    *   An ImageFieldMapping, or NULL if the tokens were no image field tokens.
    *
-   * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws MissingDataException
    */
   protected static function parseImageFieldTokens(array $tokens, FieldableEntityInterface $entity) {
     // Loop through the tokens, starting with the last one.
diff --git a/src/TokenResolverInterface.php b/src/TokenResolverInterface.php
index 46bc92e..026e25f 100644
--- a/src/TokenResolverInterface.php
+++ b/src/TokenResolverInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\fillpdf;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\token\Token;
+use Drupal\token\TokenEntityMapperInterface;
 /**
  * Provides consistent token replacement for one or multiple entity sources.
  *
@@ -18,7 +21,7 @@ interface TokenResolverInterface {
    *
    * @param string $text
    *   An plain text string containing replaceable tokens.
-   * @param \Drupal\Core\Entity\EntityInterface[][] $data
+   * @param EntityInterface[][] $data
    *   (optional) Multidimensional array of entities, keyed by entity ID and
    *   grouped by entity type.
    * @param array $options
@@ -29,7 +32,7 @@ interface TokenResolverInterface {
    *   - callback: A callback function that will be used to post-process the
    *     array of token replacements after they are generated.
    *
-   * @return \Drupal\fillpdf\FieldMapping
+   * @return FieldMapping
    *   An instance of a FieldMapping.
    *
    * @see \Drupal\Core\Utility\Token::replace()
@@ -39,7 +42,7 @@ interface TokenResolverInterface {
   /**
    * Returns the token service.
    *
-   * @return \Drupal\token\Token
+   * @return Token
    *   The token service.
    */
   public function getTokenService();
@@ -47,7 +50,7 @@ interface TokenResolverInterface {
   /**
    * Returns the token entity mapper.
    *
-   * @return \Drupal\token\TokenEntityMapperInterface
+   * @return TokenEntityMapperInterface
    *   The token entity mapper.
    */
   public function getEntityMapper();
diff --git a/tests/modules/fillpdf_test/fillpdf_test.module b/tests/modules/fillpdf_test/fillpdf_test.module
index cf37bd0..eab3afe 100644
--- a/tests/modules/fillpdf_test/fillpdf_test.module
+++ b/tests/modules/fillpdf_test/fillpdf_test.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 /**
  * @file
  * Contains fillpdf_test.module.
@@ -51,7 +52,7 @@ function fillpdf_test_form_fillpdf_settings_validate($form, FormStateInterface &
  */
 function fillpdf_test_form_fillpdf_settings_submit($form, FormStateInterface $form_state) {
   if ($form_state->getValue('backend') == 'test' && $value = $form_state->getValue('example_setting')) {
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+    /** @var ConfigFactoryInterface $config_factory */
     $config_factory = \Drupal::service('config.factory');
     $config_factory->getEditable('fillpdf_test.settings')->set('example_setting', $value)->save();
   }
diff --git a/tests/modules/fillpdf_test/src/Plugin/PdfBackend/TestPdfBackend.php b/tests/modules/fillpdf_test/src/Plugin/PdfBackend/TestPdfBackend.php
index 1d1d05c..6da02a4 100644
--- a/tests/modules/fillpdf_test/src/Plugin/PdfBackend/TestPdfBackend.php
+++ b/tests/modules/fillpdf_test/src/Plugin/PdfBackend/TestPdfBackend.php
@@ -28,7 +28,7 @@ class TestPdfBackend extends PdfBackendBase implements ContainerFactoryPluginInt
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -41,7 +41,7 @@ class TestPdfBackend extends PdfBackendBase implements ContainerFactoryPluginInt
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, StateInterface $state) {
@@ -87,7 +87,7 @@ class TestPdfBackend extends PdfBackendBase implements ContainerFactoryPluginInt
    */
   public function mergeStream($pdf_content, array $field_mappings, array $context) {
     // Not really populated, but that isn't our job.
-    $populated_pdf = file_get_contents(drupal_get_path('module', 'fillpdf_test') . '/files/fillpdf_test_v3.pdf');
+    $populated_pdf = file_get_contents(\Drupal::service('extension.list.module')->getPath('fillpdf_test') . '/files/fillpdf_test_v3.pdf');
 
     $this->state->set('fillpdf_test.last_populated_metadata', [
       'field_mapping' => $field_mappings,
diff --git a/tests/src/Functional/FillPdfOverviewFormTest.php b/tests/src/Functional/FillPdfOverviewFormTest.php
index 570ff6a..a5fdd35 100644
--- a/tests/src/Functional/FillPdfOverviewFormTest.php
+++ b/tests/src/Functional/FillPdfOverviewFormTest.php
@@ -17,6 +17,7 @@ class FillPdfOverviewFormTest extends FillPdfUploadTestBase {
 
   /**
    * Tests the overview form is accessible.
+   * @doesNotPerformAssertions
    */
   public function testOverviewForm() {
     $this->drupalGet(Url::fromRoute('fillpdf.forms_admin'));
diff --git a/tests/src/Functional/FillPdfSettingsFormTest.php b/tests/src/Functional/FillPdfSettingsFormTest.php
index 990b44f..0f19d30 100644
--- a/tests/src/Functional/FillPdfSettingsFormTest.php
+++ b/tests/src/Functional/FillPdfSettingsFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\fillpdf\Traits\TestFillPdfTrait;
@@ -151,7 +152,7 @@ class FillPdfSettingsFormTest extends BrowserTestBase {
     // Now delete the directory and replace it with a file with the same name,
     // so the directory can't be recreated. Try saving again and verify an error
     // is set.
-    /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+    /** @var FileSystemInterface $file_system */
     $file_system = $this->container->get('file_system');
     $file_system->rmdir($directory);
     \Drupal::service('file_system')->copy('public://.htaccess', $directory);
diff --git a/tests/src/Functional/FillPdfTestBase.php b/tests/src/Functional/FillPdfTestBase.php
index cfff89f..d1886d3 100644
--- a/tests/src/Functional/FillPdfTestBase.php
+++ b/tests/src/Functional/FillPdfTestBase.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Drupal\fillpdf\Service\FillPdfLinkManipulator;
+use Drupal\file\Entity\File;
+use Drupal\fillpdf\Entity\FillPdfFormField;
+use Drupal\token\TokenEntityMapperInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\file\Functional\FileFieldTestBase;
 use Drupal\Tests\fillpdf\Traits\TestFillPdfTrait;
@@ -38,14 +42,14 @@ abstract class FillPdfTestBase extends FileFieldTestBase {
   /**
    * The FillPDF link manipulator service.
    *
-   * @var \Drupal\fillpdf\Service\FillPdfLinkManipulator
+   * @var FillPdfLinkManipulator
    */
   protected $linkManipulator;
 
   /**
    * A test image.
    *
-   * @var \Drupal\file\Entity\File
+   * @var File
    */
   protected $testImage;
 
@@ -54,11 +58,11 @@ abstract class FillPdfTestBase extends FileFieldTestBase {
    *
    * @param string $entity_type
    *   The entity type.
-   * @param \Drupal\fillpdf\Entity\FillPdfFormField[] $fields
+   * @param FillPdfFormField[] $fields
    *   Array of FillPdfFormFields.
    */
   public static function mapFillPdfFieldsToEntityFields($entity_type, array $fields) {
-    /** @var \Drupal\token\TokenEntityMapperInterface $token_entity_mapper */
+    /** @var TokenEntityMapperInterface $token_entity_mapper */
     $token_entity_mapper = \Drupal::service('token.entity_mapper');
     $token_type = $token_entity_mapper->getTokenTypeForEntityType($entity_type);
 
diff --git a/tests/src/Functional/FillPdfUploadTestBase.php b/tests/src/Functional/FillPdfUploadTestBase.php
index 8ef5e7f..1347e7d 100644
--- a/tests/src/Functional/FillPdfUploadTestBase.php
+++ b/tests/src/Functional/FillPdfUploadTestBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
+use Behat\Mink\Exception\ResponseTextException;
+use Drupal\file\FileInterface;
 use Drupal\file\Entity\File;
 use Drupal\fillpdf\Component\Utility\FillPdf;
 use Drupal\Component\Render\FormattableMarkup;
@@ -81,12 +84,12 @@ abstract class FillPdfUploadTestBase extends FillPdfTestBase {
    * @param bool $filename_preexists
    *   (optional) Whether the testfile has previously been uploaded, so a file
    *   with the same filename preexists. Defaults to FALSE.
-   * @param \Drupal\fillpdf\FillPdfFormInterface $form
+   * @param FillPdfFormInterface $form
    *   The FillPDF Form that is being updated. Needed so we can make some
    *   assertions against the fields.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ExpectationException
+   * @throws ResponseTextException
    */
   protected function assertUploadPdfFile($op = self::OP_UPLOAD, $filename_preexists = FALSE, FillPdfFormInterface $form = NULL) {
     $previous_file_id = $this->getLastFileId();
@@ -107,7 +110,7 @@ abstract class FillPdfUploadTestBase extends FillPdfTestBase {
 
     // Whether submitted or just uploaded, at least temporarily the file should
     // exist now both as an object and physically on the disk.
-    /** @var \Drupal\file\FileInterface $new_file */
+    /** @var FileInterface $new_file */
     $new_file = File::load($this->getLastFileId());
     $new_filename = $new_file->getFilename();
     $this->assertFileExists($new_file->getFileUri());
diff --git a/tests/src/Functional/HandlePdfControllerTest.php b/tests/src/Functional/HandlePdfControllerTest.php
index 43897f3..409a2d2 100644
--- a/tests/src/Functional/HandlePdfControllerTest.php
+++ b/tests/src/Functional/HandlePdfControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\file\Entity\File;
 use Symfony\Component\HttpFoundation\ResponseHeaderBag;
@@ -37,7 +38,7 @@ class HandlePdfControllerTest extends FillPdfUploadTestBase {
   /**
    * Tests DownloadAction.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testDownloadAction() {
     $this->uploadTestPdf('fillpdf_test_v3.pdf');
diff --git a/tests/src/Functional/LinkManipulatorTest.php b/tests/src/Functional/LinkManipulatorTest.php
index bf36b46..46d3473 100644
--- a/tests/src/Functional/LinkManipulatorTest.php
+++ b/tests/src/Functional/LinkManipulatorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Drupal\fillpdf\Service\FillPdfLinkManipulator;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\fillpdf\Traits\TestFillPdfTrait;
@@ -30,7 +31,7 @@ class LinkManipulatorTest extends BrowserTestBase {
   /**
    * The FillPDF link manipulator service.
    *
-   * @var \Drupal\fillpdf\Service\FillPdfLinkManipulator
+   * @var FillPdfLinkManipulator
    */
   protected $linkManipulator;
 
diff --git a/tests/src/Functional/PdfParseTest.php b/tests/src/Functional/PdfParseTest.php
index 150ce89..9d66811 100644
--- a/tests/src/Functional/PdfParseTest.php
+++ b/tests/src/Functional/PdfParseTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Behat\Mink\Exception\ResponseTextException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\fillpdf\FillPdfFormInterface;
 use Drupal\Core\Url;
 use Drupal\Core\Config\Config;
 use Drupal\file\Entity\File;
@@ -18,9 +22,10 @@ class PdfParseTest extends FillPdfTestBase {
   /**
    * Tests PDF population using local service.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws ResponseTextException
+   * @throws PluginException
+   * @throws EntityStorageException
+   * @doesNotPerformAssertions
    */
   public function testParseLocalService() {
     $this->configureLocalServiceBackend();
@@ -36,9 +41,10 @@ class PdfParseTest extends FillPdfTestBase {
   /**
    * Tests PDF population using a local install of pdftk.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws ResponseTextException
+   * @throws PluginException
+   * @throws EntityStorageException
+   * @doesNotPerformAssertions
    */
   public function testParsePdftk() {
     $this->configureFillPdf(['backend' => 'pdftk']);
@@ -53,15 +59,15 @@ class PdfParseTest extends FillPdfTestBase {
   /**
    * Tests a backend.
    *
-   * @param \Drupal\Core\Config\Config $fillpdf_config
+   * @param Config $fillpdf_config
    *   FillPDF configuration object.
    *
-   * @return \Drupal\fillpdf\FillPdfFormInterface
+   * @return FillPdfFormInterface
    *   The created FillPdfForm.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws ResponseTextException
+   * @throws PluginException
+   * @throws EntityStorageException
    *
    * @internal
    *
diff --git a/tests/src/Functional/PdfPopulationTest.php b/tests/src/Functional/PdfPopulationTest.php
index 5ed13b4..a13f3b4 100644
--- a/tests/src/Functional/PdfPopulationTest.php
+++ b/tests/src/Functional/PdfPopulationTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Drupal\taxonomy\Entity\Vocabulary;
+use Drupal\fillpdf\Service\BackendProxyInterface;
+use Behat\Mink\Exception\ResponseTextException;
 use Drupal\file\Entity\File;
 use Drupal\fillpdf\Component\Utility\FillPdf;
 use Drupal\fillpdf\Entity\FillPdfForm;
@@ -33,7 +36,7 @@ class PdfPopulationTest extends FillPdfTestBase {
   /**
    * A test vocabulary.
    *
-   * @var \Drupal\taxonomy\Entity\Vocabulary
+   * @var Vocabulary
    */
   protected $testVocabulary;
 
@@ -244,7 +247,7 @@ class PdfPopulationTest extends FillPdfTestBase {
     $fillpdf_form = FillPdfForm::load($this->getLatestFillPdfForm());
 
     // Instantiate the backend proxy (which uses the configured backend).
-    /** @var \Drupal\fillpdf\Service\BackendProxyInterface $merge_proxy */
+    /** @var BackendProxyInterface $merge_proxy */
     $merge_proxy = $this->container->get('fillpdf.backend_proxy');
 
     $original_pdf = file_get_contents($this->getTestPdfPath('fillpdf_test_v3.pdf'));
@@ -286,11 +289,12 @@ class PdfPopulationTest extends FillPdfTestBase {
   /**
    * Tests PDF population using local service.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ResponseTextException
    *   Thrown when test had to be skipped as FillPDF LocalServer is not
    *   available.
    *
    * @see \Drupal\Tests\fillpdf\Traits\TestFillPdfTrait::configureLocalServiceBackend()
+   * @doesNotPerformAssertions
    */
   public function testMergeLocalService() {
     // For local container testing, we require the Docker container to be
@@ -308,9 +312,10 @@ class PdfPopulationTest extends FillPdfTestBase {
   /**
    * Tests PDF population using a local install of pdftk.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ResponseTextException
    *   Thrown when test had to be skipped as local pdftk install is not
    *   available.
+   * @doesNotPerformAssertions
    */
   public function testMergePdftk() {
     $this->configureFillPdf(['backend' => 'pdftk']);
@@ -323,7 +328,7 @@ class PdfPopulationTest extends FillPdfTestBase {
   /**
    * Tests a backend.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ResponseTextException
    */
   protected function backendTest() {
     // If we can upload a PDF, parsing is working.
diff --git a/tests/src/Functional/PdfWebformPopulationTest.php b/tests/src/Functional/PdfWebformPopulationTest.php
index 86825ee..9e07fa2 100644
--- a/tests/src/Functional/PdfWebformPopulationTest.php
+++ b/tests/src/Functional/PdfWebformPopulationTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Drupal\fillpdf\FieldMapping\ImageFieldMapping;
+use Drupal\fillpdf\Entity\FillPdfFormField;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Url;
 use Drupal\file\Entity\File;
@@ -100,7 +103,7 @@ class PdfWebformPopulationTest extends FillPdfTestBase {
     );
 
     $submission_file = File::load($submission_values['image'][0]);
-    /** @var \Drupal\fillpdf\FieldMapping\ImageFieldMapping $image_field_mapping */
+    /** @var ImageFieldMapping $image_field_mapping */
     $image_field_mapping = $populate_result['field_mapping']['ImageField'];
     self::assertEquals(
       base64_encode($image_field_mapping->getData()),
@@ -160,10 +163,10 @@ class PdfWebformPopulationTest extends FillPdfTestBase {
   /**
    * Maps FillPdf fields to node fields.
    *
-   * @param \Drupal\fillpdf\Entity\FillPdfFormField[] $fields
+   * @param FillPdfFormField[] $fields
    *   Array of FillPdfFormFields.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function mapFillPdfFieldsToWebformFields(array $fields) {
     foreach ($fields as $pdf_key => $field) {
diff --git a/tests/src/Functional/UninstallTest.php b/tests/src/Functional/UninstallTest.php
index 24f2cba..66b2681 100644
--- a/tests/src/Functional/UninstallTest.php
+++ b/tests/src/Functional/UninstallTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\fillpdf\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\fillpdf\Traits\TestFillPdfTrait;
 use Drupal\Core\Url;
@@ -28,7 +29,7 @@ class UninstallTest extends BrowserTestBase {
   /**
    * A user with administrative permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Traits/TestFillPdfTrait.php b/tests/src/Traits/TestFillPdfTrait.php
index 3bfd4e7..a8c6d02 100644
--- a/tests/src/Traits/TestFillPdfTrait.php
+++ b/tests/src/Traits/TestFillPdfTrait.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\fillpdf\Traits;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\fillpdf\ShellManagerInterface;
+use Drupal\Core\File\FileSystem;
 /**
  * Provides methods for testing FillPdf.
  *
@@ -27,7 +30,7 @@ trait TestFillPdfTrait {
       'backend' => 'test',
     ];
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+    /** @var ConfigFactoryInterface $config_factory */
     $config_factory = $this->container->get('config.factory');
 
     // Set FillPDF backend and scheme.
@@ -39,7 +42,7 @@ trait TestFillPdfTrait {
     // PDFtk needs to have the correct locale set in the environment or the
     // test will fail.
     if ($configuration['backend'] === 'pdftk') {
-      /** @var \Drupal\fillpdf\ShellManagerInterface $shell_manager */
+      /** @var ShellManagerInterface $shell_manager */
       $shell_manager = $this->container->get('fillpdf.shell_manager');
       $locales = $shell_manager->getInstalledLocales();
       $config->set('shell_locale', isset($locales['en_US.UTF-8']) ? 'en_US.UTF-8' : 'en_US.utf8');
@@ -146,9 +149,9 @@ trait TestFillPdfTrait {
    *   The absolute locale filepath or FALSE on failure.
    */
   protected function getTestPdfPath($filename) {
-    /** @var \Drupal\Core\File\FileSystem $file_system */
+    /** @var FileSystem $file_system */
     $file_system = $this->container->get('file_system');
-    return $file_system->realpath(drupal_get_path('module', 'fillpdf') . '/tests/modules/fillpdf_test/files/' . $filename);
+    return $file_system->realpath(\Drupal::service('extension.list.module')->getPath('fillpdf') . '/tests/modules/fillpdf_test/files/' . $filename);
   }
 
   /**
diff --git a/tests/src/Traits/TestImageFieldTrait.php b/tests/src/Traits/TestImageFieldTrait.php
index 655e736..2aac4fe 100644
--- a/tests/src/Traits/TestImageFieldTrait.php
+++ b/tests/src/Traits/TestImageFieldTrait.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\Tests\fillpdf\Traits;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\file\Entity\File;
@@ -18,7 +24,7 @@ trait TestImageFieldTrait {
    * This is our own version of ImageFieldTestBase::uploadNodeImage() only that
    * it supports creating fieldable entities other than nodes.
    *
-   * @param \Drupal\file\Entity\File $image
+   * @param File $image
    *   A file object representing the image to be added.
    * @param string $field_name
    *   Name of the image field the image should be attached to.
@@ -86,12 +92,12 @@ trait TestImageFieldTrait {
    * @param string $description
    *   (optional) A description for the field. Defaults to ''.
    *
-   * @return \Drupal\field\Entity\FieldConfig
+   * @return FieldConfig
    *   The field configuration.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    *
    * @see https://www.drupal.org/project/drupal/issues/3057070
    * @see \Drupal\Tests\image\Functional\ImageFieldTestBase::createImageField()
@@ -111,7 +117,7 @@ trait TestImageFieldTrait {
       'cardinality' => !empty($storage_settings['cardinality']) ? $storage_settings['cardinality'] : 1,
     ])->save();
 
-    /** @var \Drupal\field\Entity\FieldConfig $field_config */
+    /** @var FieldConfig $field_config */
     $field_config = FieldConfig::create([
       'field_name' => $field_name,
       'label' => $field_name,
@@ -123,10 +129,10 @@ trait TestImageFieldTrait {
     ]);
     $field_config->save();
 
-    /** @var \Symfony\Component\DependencyInjection\ContainerInterface $container */
+    /** @var ContainerInterface $container */
     $container = $this->container;
 
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = $container->get('entity_type.manager');
 
     $form_values = [
@@ -136,7 +142,7 @@ trait TestImageFieldTrait {
       'status' => TRUE,
     ];
     $entity_form_display = $entity_type_manager->getStorage('entity_form_display');
-    /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display */
+    /** @var EntityFormDisplayInterface $form_display */
     if (!$form_display = $entity_form_display->load("$entity_type.$bundle.default")) {
       $form_display = $entity_form_display
         ->create($form_values);
@@ -154,7 +160,7 @@ trait TestImageFieldTrait {
       'status' => TRUE,
     ];
     $entity_view_display = $entity_type_manager->getStorage('entity_view_display');
-    /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display */
+    /** @var EntityViewDisplayInterface $display */
     if (!$display = $entity_view_display->load("$entity_type.$bundle.default")) {
       $display = $entity_view_display
         ->create($view_values);
