diff --git a/archived_410.info.yml b/archived_410.info.yml
index b06e180..96ac25d 100644
--- a/archived_410.info.yml
+++ b/archived_410.info.yml
@@ -2,8 +2,7 @@ name: 410 on archived content
 description: Archived content returns an http code 410 Gone.
 package: Other
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: archived_410.settings_form
 dependencies:
   - drupal:content_moderation
diff --git a/src/EventSubscriber/ArchivedModerationStateSubscriber.php b/src/EventSubscriber/ArchivedModerationStateSubscriber.php
index ce11601..e51966e 100644
--- a/src/EventSubscriber/ArchivedModerationStateSubscriber.php
+++ b/src/EventSubscriber/ArchivedModerationStateSubscriber.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\archived_410\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\content_moderation\ModerationInformationInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityPublishedInterface;
@@ -12,7 +15,6 @@ use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\StringTranslation\TranslationInterface;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\Exception\GoneHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -31,52 +33,52 @@ class ArchivedModerationStateSubscriber implements EventSubscriberInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The moderation information service.
    *
-   * @var \Drupal\content_moderation\ModerationInformationInterface
+   * @var ModerationInformationInterface
    */
   protected $moderationInfo;
 
   /**
    * The bare HTML page renderer.
    *
-   * @var \Drupal\Core\Render\BareHtmlPageRendererInterface
+   * @var BareHtmlPageRendererInterface
    */
   protected $bareHtmlPageRenderer;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\content_moderation\ModerationInformationInterface $moderationInfo
+   * @param ModerationInformationInterface $moderationInfo
    *   Moderation information service.
-   * @param \Drupal\Core\Render\BareHtmlPageRendererInterface $bare_html_page_renderer
+   * @param BareHtmlPageRendererInterface $bare_html_page_renderer
    *   The bare HTML page renderer.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The translation service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(AccountInterface $current_user, EntityTypeManagerInterface $entity_type_manager, ModerationInformationInterface $moderationInfo, BareHtmlPageRendererInterface $bare_html_page_renderer, TranslationInterface $translation, ConfigFactoryInterface $config_factory) {
@@ -92,12 +94,12 @@ class ArchivedModerationStateSubscriber implements EventSubscriberInterface {
    * This method is called whenever the kernel.request event is
    * dispatched.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
-  public function onRequestArchivedContent(GetResponseEvent $event) {
+  public function onRequestArchivedContent(RequestEvent $event) {
     $request = $event->getRequest();
 
     // If we've got an exception, nothing to do here.
