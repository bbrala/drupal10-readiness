modules/contrib/node_menus/node_menus.module

1 file with changes
===================

1) modules/contrib/node_menus/node_menus.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\Entity\Node;
+use Drupal\node\Entity\NodeType;
+use Drupal\Core\Menu\MenuParentFormSelectorInterface;
+use Drupal\system\MenuInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Language\LanguageInterface;
@@ @@
     return;
   }

-  /** @var \Drupal\system\Entity\Menu[] $menus */
+  /** @var Menu[] $menus */
   $menus = \Drupal::entityTypeManager()->getStorage('menu')->loadMultiple();
-  /** @var \Drupal\node\Entity\Node $node */
+  /** @var Node $node */
   $node = $form_state->getFormObject()->getEntity();
-  /** @var \Drupal\node\Entity\NodeType $node_type */
+  /** @var NodeType $node_type */
   $node_type = $node->type->entity;
-  /** @var \Drupal\Core\Menu\MenuParentFormSelectorInterface $menu_parent_selector */
+  /** @var MenuParentFormSelectorInterface $menu_parent_selector */
   $menu_parent_selector = \Drupal::service('menu.parent_form_selector');


@@ @@

   if ($node->isDefaultTranslation()) {
     foreach ($available_menus as $code => $language_menus) {
-      /** @var \Drupal\system\MenuInterface[] $type_menus */
+      /** @var MenuInterface[] $type_menus */
       $type_menus = Menu::loadMultiple($language_menus['available_menus']);
       $menus = [];
       foreach ($type_menus as $menu) {
@@ @@
     $form['#validate'][] = 'node_menus_form_node_form_validate';
   }
   else {
-    /** @var \Drupal\system\MenuInterface[] $type_menus */
+    /** @var MenuInterface[] $type_menus */
     $type_menus = Menu::loadMultiple($available_menus[$node->language()->getId()]['available_menus']);
     $menus = [];
     foreach ($type_menus as $menu) {
@@ @@
 /**
  * Returns the definition for a menu link for the given node.
  *
- * @param \Drupal\node\NodeInterface $node
+ * @param NodeInterface $node
  *   The node entity.
  *
  * @return array
@@ @@
  */
 function node_menus_get_menu_link_defaults(NodeInterface $node) {
   // Prepare the definition for the edit form.
-  /** @var \Drupal\node\NodeTypeInterface $node_type */
+  /** @var NodeTypeInterface $node_type */
   $node_type = $node->type->entity;
   $node_language = $node->language()->getId();
   $all_menus = $node_type->getThirdPartySetting('node_menus', 'languages', []);
@@ @@
  * @see node_menus_form_node_type_form_submit()
  */
 function node_menus_form_node_type_form_alter(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\Core\Menu\MenuParentFormSelectorInterface $menu_parent_selector */
+  /** @var MenuParentFormSelectorInterface $menu_parent_selector */
   $menu_parent_selector = \Drupal::service('menu.parent_form_selector');
   $menu_options = menu_ui_get_menus();
-  /** @var \Drupal\node\NodeTypeInterface $type */
+  /** @var NodeTypeInterface $type */
   $type = $form_state->getFormObject()->getEntity();

   $form['node_menus'] = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 1 file has been changed by Rector                                         

