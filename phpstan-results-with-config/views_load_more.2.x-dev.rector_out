modules/contrib/views_load_more/src/Ajax/VLMAppendCommand.php
modules/contrib/views_load_more/src/EventSubscriber/VLMEventSubscriber.php
modules/contrib/views_load_more/src/Plugin/views/pager/LoadMore.php
modules/contrib/views_load_more/views_load_more.module

2 files with changes
====================

1) modules/contrib/views_load_more/views_load_more.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Pager\PagerManagerInterface;
+use Drupal\views\ViewExecutable;
 use Drupal\Core\Url;

 /**
@@ @@
   $element = $variables['element'];
   $parameters = $variables['parameters'];
   
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');
   $pager = $pager_manager->getPager($element);

@@ @@
 /**
  * Implements hook_views_pre_render().
  *
- * @param \Drupal\views\ViewExecutable $view
+ * @param ViewExecutable $view
  */
 function views_load_more_views_pre_render($view) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/views_load_more/src/EventSubscriber/VLMEventSubscriber.php:2

    ---------- begin diff ----------
@@ @@
 namespace Drupal\views_load_more\EventSubscriber;


+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\views\Ajax\ViewAjaxResponse;
 use Drupal\views_load_more\Ajax\VLMAppendCommand;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 class VLMEventSubscriber implements EventSubscriberInterface {
@@ @@
    * Filter a views AJAX response when the Load More pager is set.  Remove the
    * scrollTop commane and add in a viewsLoadMoreAppend AJAX command.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();

     if ($response instanceof ViewAjaxResponse) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

