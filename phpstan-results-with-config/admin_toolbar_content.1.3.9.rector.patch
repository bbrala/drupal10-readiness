diff --git a/admin_toolbar_content.module b/admin_toolbar_content.module
index a635735..45b8403 100644
--- a/admin_toolbar_content.module
+++ b/admin_toolbar_content.module
@@ -1,5 +1,12 @@
 <?php
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Menu\MenuLinkDefault;
+use Drupal\Core\Menu\MenuLinkBase;
+use Drupal\Core\Routing\RouteProviderInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;
 use Symfony\Component\Routing\Exception\RouteNotFoundException;
@@ -36,8 +43,8 @@ function admin_toolbar_content_module_implements_alter(&$implementations, $hook)
  *
  * @param array $links
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function admin_toolbar_content_menu_links_discovered_alter(array &$links) {
   $moduleHandler = \Drupal::moduleHandler();
@@ -128,7 +135,7 @@ function admin_toolbar_content_preprocess_menu(&$variables) {
     // In rare cases (for unknown reasons) menu_name may not be set.
     // As fallback, we can fetch it from the first menu item.
     $first_link = reset($variables['items']);
-    /** @var Drupal\Core\Menu\MenuLinkDefault $original_link */
+    /** @var MenuLinkDefault $original_link */
     // Fetch the menu_name from the original link.
     $original_link = $first_link['original_link'];
     $variables['menu_name'] = $original_link->getMenuName();
@@ -189,7 +196,7 @@ function admin_toolbar_content_preprocess_menu_helper_access_check($route, $item
   $route_name = $route;
   $route_params = [];
   if (!empty($item['original_link'])) {
-    /** @var \Drupal\Core\Menu\MenuLinkBase $original_link */
+    /** @var MenuLinkBase $original_link */
     $original_link = $item['original_link'];
     $route_name = $original_link->getRouteName();
     $route_params = $original_link->getRouteParameters();
@@ -268,7 +275,7 @@ function admin_toolbar_content_preprocess_menu_helper_access_check($route, $item
  *   FALSE otherwise.
  */
 function admin_toolbar_content_is_overview_page($route_name) {
-  /** @var \Drupal\Core\Routing\RouteProviderInterface $route_provider */
+  /** @var RouteProviderInterface $route_provider */
   $route_provider = \Drupal::service('router.route_provider');
   $overview_page_controllers = [
     '\Drupal\system\Controller\AdminController::index',
@@ -306,7 +313,7 @@ function admin_toolbar_content_preprocess_menu_local_action(&$variables) {
 
   $type = \Drupal::request()->get('type');
 
-  /** @var \Drupal\Core\Url $url */
+  /** @var Url $url */
   $url = $variables['element']['#link']['url'];
   $route = $url->getRouteName();
   $cache = false;
@@ -332,7 +339,7 @@ function admin_toolbar_content_preprocess_menu_local_action(&$variables) {
   }
 
   if ($type) {
-    /** @var \Drupal\Core\Entity\EntityStorageInterface $storage */
+    /** @var EntityStorageInterface $storage */
     $storage = \Drupal::service('entity_type.manager')->getStorage($entity_type_id);
 
     $url = Url::fromRoute($route_name, [$entity_type_id => $type]);
@@ -347,8 +354,8 @@ function admin_toolbar_content_preprocess_menu_local_action(&$variables) {
         $variables['link']['#url'] = $url;
       }
       else {
-        $variables['element']['#access'] = \Drupal\Core\Access\AccessResult::forbidden();
-        $variables['link']['#access'] = \Drupal\Core\Access\AccessResult::forbidden();
+        $variables['element']['#access'] = AccessResult::forbidden();
+        $variables['link']['#access'] = AccessResult::forbidden();
       }
     }
   }
@@ -379,7 +386,7 @@ function admin_toolbar_content_preprocess_block(&$variables) {
 
       if ($content_type) {
 
-        /** @var \Drupal\Core\Entity\EntityStorageInterface $storage */
+        /** @var EntityStorageInterface $storage */
         $storage = \Drupal::service('entity_type.manager')->getStorage('node_type');
         $contentType = $storage->load($content_type);
 
diff --git a/src/AdminToolbarContentHelper.php b/src/AdminToolbarContentHelper.php
index 9ea2bb6..aad9287 100644
--- a/src/AdminToolbarContentHelper.php
+++ b/src/AdminToolbarContentHelper.php
@@ -12,14 +12,14 @@ class AdminToolbarContentHelper {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Create an AdminToolbarToolsHelper object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/Derivative/CategoriesMenuLinkDerivative.php b/src/Plugin/Derivative/CategoriesMenuLinkDerivative.php
index 6c84ad3..362b25e 100644
--- a/src/Plugin/Derivative/CategoriesMenuLinkDerivative.php
+++ b/src/Plugin/Derivative/CategoriesMenuLinkDerivative.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\admin_toolbar_content\Plugin\Derivative;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
@@ -15,17 +16,17 @@ class CategoriesMenuLinkDerivative extends DeriverBase implements ContainerDeriv
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
-  /** @var \Drupal\Core\Language\LanguageManagerInterface $languageManager */
+  /** @var LanguageManagerInterface $languageManager */
   private $languageManager;
 
   /**
    * Create an AdminToolbarToolsHelper object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    */
   public function __construct(ModuleHandlerInterface $moduleHandler, LanguageManagerInterface $languageManager) {
     $this->moduleHandler = $moduleHandler;
@@ -64,7 +65,7 @@ class CategoriesMenuLinkDerivative extends DeriverBase implements ContainerDeriv
           'weight' => -9,
         ] + $base_plugin_definition;
 
-      /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager */
+      /** @var EntityTypeManagerInterface $entityTypeManager */
       $entityTypeManager = \Drupal::service('entity_type.manager');
 
       // Add a list terms for each vocabulary.
diff --git a/src/Plugin/Derivative/ContentMenuLinkDerivative.php b/src/Plugin/Derivative/ContentMenuLinkDerivative.php
index eab8518..a7a21e6 100644
--- a/src/Plugin/Derivative/ContentMenuLinkDerivative.php
+++ b/src/Plugin/Derivative/ContentMenuLinkDerivative.php
@@ -1,6 +1,9 @@
 <?php
 namespace Drupal\admin_toolbar_content\Plugin\Derivative;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\node\NodeTypeInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
@@ -15,17 +18,17 @@ class ContentMenuLinkDerivative extends DeriverBase implements ContainerDeriverI
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
-  /** @var \Drupal\Core\Language\LanguageManagerInterface $languageManager */
+  /** @var LanguageManagerInterface $languageManager */
   private $languageManager;
 
   /**
    * Create an AdminToolbarToolsHelper object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    */
   public function __construct(ModuleHandlerInterface $moduleHandler, LanguageManagerInterface $languageManager) {
     $this->moduleHandler = $moduleHandler;
@@ -55,13 +58,13 @@ class ContentMenuLinkDerivative extends DeriverBase implements ContainerDeriverI
 
     if ($enhance_content_item && $this->moduleHandler->moduleExists('node')) {
 
-      /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager */
+      /** @var EntityTypeManagerInterface $entityTypeManager */
       $entityTypeManager = \Drupal::service('entity_type.manager');
 
       $content_type_collections = \Drupal::service('module_handler')
         ->invokeAll('content_type_collections');
 
-      /** @var \Drupal\node\NodeTypeInterface[] $contentTypes */
+      /** @var NodeTypeInterface[] $contentTypes */
       $contentTypes = $entityTypeManager->getStorage('node_type')
         ->loadMultiple();
 
@@ -94,12 +97,12 @@ class ContentMenuLinkDerivative extends DeriverBase implements ContainerDeriverI
   }
 
   /**
-   * @param \Drupal\node\NodeTypeInterface $content_type
+   * @param NodeTypeInterface $content_type
    * @param string $collection
    * @param array $links
    * @param array $base_plugin_definition
    */
-  protected function addContentTypeLink(\Drupal\node\NodeTypeInterface $content_type, $collection, &$links, $base_plugin_definition) {
+  protected function addContentTypeLink(NodeTypeInterface $content_type, $collection, &$links, $base_plugin_definition) {
 
     $link_name = $collection . '.' . $content_type->id();
 
@@ -158,7 +161,7 @@ class ContentMenuLinkDerivative extends DeriverBase implements ContainerDeriverI
           break;
         }
 
-        /** @var \Drupal\node\NodeInterface $entity */
+        /** @var NodeInterface $entity */
         $entity = $entity_storage->load($id);
         if ($entity === null) continue; // HACK fix, getQuery can return results which load can't load???
         $links[$link_name . '.entity.' . $entity->id()] = [
diff --git a/src/Plugin/Derivative/DrupalMenuLinkDerivative.php b/src/Plugin/Derivative/DrupalMenuLinkDerivative.php
index b58c1f8..df24d16 100644
--- a/src/Plugin/Derivative/DrupalMenuLinkDerivative.php
+++ b/src/Plugin/Derivative/DrupalMenuLinkDerivative.php
@@ -16,25 +16,25 @@ class DrupalMenuLinkDerivative extends DeriverBase implements ContainerDeriverIn
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
-  /** @var \Drupal\Core\Language\LanguageManagerInterface $languageManager */
+  /** @var LanguageManagerInterface $languageManager */
   private $languageManager;
 
   /**
    * Create an AdminToolbarToolsHelper object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
-   * @param \Drupal\Core\Routing\RouteProviderInterface $routeProvider
+   * @param ModuleHandlerInterface $moduleHandler
+   * @param RouteProviderInterface $routeProvider
    */
   public function __construct(ModuleHandlerInterface $moduleHandler, RouteProviderInterface $routeProvider, LanguageManagerInterface $languageManager) {
     $this->moduleHandler = $moduleHandler;
diff --git a/src/Plugin/Derivative/MediaMenuLinkDerivative.php b/src/Plugin/Derivative/MediaMenuLinkDerivative.php
index 1db6a49..354002e 100644
--- a/src/Plugin/Derivative/MediaMenuLinkDerivative.php
+++ b/src/Plugin/Derivative/MediaMenuLinkDerivative.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\admin_toolbar_content\Plugin\Derivative;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
@@ -16,25 +17,25 @@ class MediaMenuLinkDerivative extends DeriverBase implements ContainerDeriverInt
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
-  /** @var \Drupal\Core\Language\LanguageManagerInterface $languageManager */
+  /** @var LanguageManagerInterface $languageManager */
   private $languageManager;
 
   /**
    * Create an AdminToolbarToolsHelper object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
-   * @param \Drupal\Core\Routing\RouteProviderInterface $routeProvider
+   * @param ModuleHandlerInterface $moduleHandler
+   * @param RouteProviderInterface $routeProvider
    */
   public function __construct(ModuleHandlerInterface $moduleHandler, RouteProviderInterface $routeProvider, LanguageManagerInterface $languageManager) {
     $this->moduleHandler = $moduleHandler;
@@ -90,7 +91,7 @@ class MediaMenuLinkDerivative extends DeriverBase implements ContainerDeriverInt
         ] + $base_plugin_definition;
       }
 
-      /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager */
+      /** @var EntityTypeManagerInterface $entityTypeManager */
       $entityTypeManager = \Drupal::service('entity_type.manager');
 
       // Add a list terms for each vocabulary.
diff --git a/src/Plugin/Derivative/WebformsMenuLinkDerivative.php b/src/Plugin/Derivative/WebformsMenuLinkDerivative.php
index 29b18b4..263b2e7 100644
--- a/src/Plugin/Derivative/WebformsMenuLinkDerivative.php
+++ b/src/Plugin/Derivative/WebformsMenuLinkDerivative.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\admin_toolbar_content\Plugin\Derivative;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
@@ -15,17 +16,17 @@ class WebformsMenuLinkDerivative extends DeriverBase implements ContainerDeriver
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
-  /** @var \Drupal\Core\Language\LanguageManagerInterface $languageManager */
+  /** @var LanguageManagerInterface $languageManager */
   private $languageManager;
 
   /**
    * Create an AdminToolbarToolsHelper object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    */
   public function __construct(ModuleHandlerInterface $moduleHandler, LanguageManagerInterface $languageManager) {
     $this->moduleHandler = $moduleHandler;
@@ -64,7 +65,7 @@ class WebformsMenuLinkDerivative extends DeriverBase implements ContainerDeriver
           'weight' => -7,
         ] + $base_plugin_definition;
 
-      /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager */
+      /** @var EntityTypeManagerInterface $entityTypeManager */
       $entityTypeManager = \Drupal::service('entity_type.manager');
 
       $webforms = $entityTypeManager->getStorage('webform')->loadMultiple(NULL);
