modules/contrib/prod_check/modules/prod_check_rest/src/Plugin/ProdCheckProcessor/Rest.php
modules/contrib/prod_check/modules/prod_check_rest/src/Plugin/rest/resource/ProdCheckModulesResource.php
modules/contrib/prod_check/modules/prod_check_rest/src/Plugin/rest/resource/ProdCheckResource.php
modules/contrib/prod_check/modules/prod_check_xmlrpc/prod_check_xmlrpc.module
modules/contrib/prod_check/modules/prod_check_xmlrpc/src/Plugin/ProdCheckProcessor/XmlRpc.php
modules/contrib/prod_check/prod_check.api.php
modules/contrib/prod_check/prod_check.module
modules/contrib/prod_check/src/Annotation/ProdCheck.php
modules/contrib/prod_check/src/Annotation/ProdCheckProcessor.php
modules/contrib/prod_check/src/CheckListBuilder.php
modules/contrib/prod_check/src/CheckPluginCollection.php
modules/contrib/prod_check/src/Controller/StatusReportController.php
modules/contrib/prod_check/src/Entity/ProdCheck.php
modules/contrib/prod_check/src/Entity/ProdCheckConfigInterface.php
modules/contrib/prod_check/src/Entity/ProdCheckProcessor.php
modules/contrib/prod_check/src/Entity/ProdCheckProcessorConfigInterface.php
modules/contrib/prod_check/src/Form/CheckDisableForm.php
modules/contrib/prod_check/src/Form/CheckEditForm.php
modules/contrib/prod_check/src/Form/CheckEnableForm.php
modules/contrib/prod_check/src/Form/CheckFormBase.php
modules/contrib/prod_check/src/Form/ProcessorEditForm.php
modules/contrib/prod_check/src/Form/ProcessorFormBase.php
modules/contrib/prod_check/src/Form/SettingsForm.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/Contact.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/Devel.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/DevelGenerate.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/DevelNodeAccess.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/ModuleList.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/ModulesBase.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/Update.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Performance/CssAggregated.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Performance/JsAggregated.php
modules/contrib/prod_check/src/Plugin/ProdCheck/ProdCheckBase.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Server/DbLog.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Server/ReleaseNotes.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Settings/ErrorReporting.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Settings/PoormansCron.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Settings/SiteMail.php
modules/contrib/prod_check/src/Plugin/ProdCheck/Settings/UserRegister.php
modules/contrib/prod_check/src/Plugin/ProdCheckCategoryPluginManager.php
modules/contrib/prod_check/src/Plugin/ProdCheckInterface.php
modules/contrib/prod_check/src/Plugin/ProdCheckPluginManager.php
modules/contrib/prod_check/src/Plugin/ProdCheckProcessor/ConfigurableProdCheckProcessorBase.php
modules/contrib/prod_check/src/Plugin/ProdCheckProcessor/Internal.php
modules/contrib/prod_check/src/Plugin/ProdCheckProcessor/ProdCheckProcessorBase.php
modules/contrib/prod_check/src/Plugin/ProdCheckProcessorInterface.php
modules/contrib/prod_check/src/Plugin/ProdCheckProcessorPluginManager.php
modules/contrib/prod_check/src/ProcessorListBuilder.php
modules/contrib/prod_check/src/ProcessorPluginCollection.php
modules/contrib/prod_check/src/ProdCheck.php

24 files with changes
=====================

1) modules/contrib/prod_check/src/ProcessorPluginCollection.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check;

+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;

 /**
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckProcessorInterface
+   * @return ProdCheckProcessorInterface
    */
   public function &get($instance_id) {
     return parent::get($instance_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/prod_check/src/ProcessorListBuilder.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager
+   * @var ProdCheckProcessorPluginManager
    */
   protected $processorManager;

@@ @@
   /**
    * Constructs a new ProcessorListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The processor storage.
-   * @param \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager $manager
+   * @param ProdCheckProcessorPluginManager $manager
    *   The processor plugin manager.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, ProdCheckProcessorPluginManager $manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/prod_check/src/Plugin/ProdCheckProcessorPluginManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/prod_check/src/Plugin/ProdCheckProcessorInterface.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * Processes a single prod check plugin
    *
-   * @param \Drupal\prod_check\Plugin\ProdCheckInterface $plugin
+   * @param ProdCheckInterface $plugin
    */
   public function process(ProdCheckInterface $plugin);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/prod_check/src/Plugin/ProdCheckProcessor/ProdCheckProcessorBase.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The prod check plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckPluginManager;
+   * @var ProdCheckPluginManager ;
    */
   protected $checkManager;

@@ @@
   /**
    * The prod check category plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckCategoryPluginManager;
+   * @var ProdCheckCategoryPluginManager ;
    */
   protected $categoryManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/prod_check/src/Plugin/ProdCheckProcessor/Internal.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * Processes a single prod check plugin
    *
-   * @param \Drupal\prod_check\Plugin\ProdCheckInterface $plugin
+   * @param ProdCheckInterface $plugin
    * @return array
    *   An array containing the check result. Contains the status, severity,
    *   title and success or failure messages depending on the result.
-   *
    */
   public function process(ProdCheckInterface $plugin) {
     if (!$plugin) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/prod_check/src/Plugin/ProdCheckPluginManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/prod_check/src/Plugin/ProdCheckCategoryPluginManager.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs a new ProdCheckCategoryPluginManager instance.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend.
    */
   public function __construct(ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/prod_check/src/Plugin/ProdCheck/ProdCheckBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Plugin\ProdCheck;

+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Datetime\DateFormatter;
@@ @@
   /**
    * The prod check processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
+   * @var ProdCheckProcessorInterface ;
    */
   protected $processor;

@@ @@
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface;
+   * @var RedirectDestinationInterface ;
    */
   protected $destination;

@@ @@
   /**
    * The link generator service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface;
+   * @var LinkGeneratorInterface ;
    */
   protected $linkGenerator;

@@ @@
   /**
    * The config factory
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface;
+   * @var ConfigFactoryInterface ;
    */
   protected $configFactory;

@@ @@
   /**
    * The date formatter service
    *
-   * @var \Drupal\Core\Datetime\DateFormatter;
+   * @var DateFormatter ;
    */
   protected $dateFormatter;

@@ @@
   /**
    * The module handler service
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface;
+   * @var ModuleHandlerInterface ;
    */
   protected $moduleHandler;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $destination
+   * @param RedirectDestinationInterface $destination
    *   The redirect destination service
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $generator
+   * @param LinkGeneratorInterface $generator
    *   The link generator service
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $factory
+   * @param ConfigFactoryInterface $factory
    *   The config factory service
-   * @param \Drupal\Core\Datetime\DateFormatter $formatter
+   * @param DateFormatter $formatter
    *   The date formatter service
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $handler
+   * @param ModuleHandlerInterface $handler
    *   The module handler service
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RedirectDestinationInterface $destination,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/prod_check/src/Plugin/ProdCheck/Modules/ModuleList.php:27

    ---------- begin diff ----------
@@ @@
 class ModuleList extends ProdCheckBase {

   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $destination
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $generator
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $factory
-   * @param \Drupal\Core\Datetime\DateFormatter $formatter
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $handler
+   * @param RedirectDestinationInterface $destination
+   * @param LinkGeneratorInterface $generator
+   * @param ConfigFactoryInterface $factory
+   * @param DateFormatter $formatter
+   * @param ModuleHandlerInterface $handler
    */
   public function __construct(
     array $configuration, $plugin_id, $plugin_definition,
@@ @@
   }

   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/prod_check/src/Form/SettingsForm.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs a \Drupal\ds\Form\EmergencyForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactory $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/prod_check/src/Form/ProcessorFormBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Form;

+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The processor plugin being configured.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorInterface
+   * @var ProdCheckProcessorInterface
    */
   protected $plugin;

@@ @@
   /**
    * The processor storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;

@@ @@
   /**
    * Constructs a new processor form.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The processor storage.
    */
   public function __construct(EntityStorageInterface $storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/prod_check/src/Form/CheckFormBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Form;

+use Drupal\prod_check\Plugin\ProdCheckInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The prod check plugin being configured.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckInterface
+   * @var ProdCheckInterface
    */
   protected $plugin;

@@ @@
   /**
    * The check storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;

@@ @@
   /**
    * Constructs a new prod check form.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The check storage.
    */
   public function __construct(EntityStorageInterface $storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/prod_check/src/Entity/ProdCheckProcessorConfigInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Entity;

+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;

 /**
@@ @@
   /**
    * Returns the operation plugin.
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckProcessorInterface
+   * @return ProdCheckProcessorInterface
    */
   public function getPlugin();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


15) modules/contrib/prod_check/src/Entity/ProdCheckProcessor.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Entity;

+use Drupal\Component\Plugin\LazyPluginCollection;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ @@
   /**
    * The plugin collection that stores processor plugins.
    *
-   * @var \Drupal\prod_check\ProcessorPluginCollection
+   * @var ProcessorPluginCollection
    */
   protected $pluginCollection;

@@ @@
   /**
    * Encapsulates the creation of the action's LazyPluginCollection.
    *
-   * @return \Drupal\Component\Plugin\LazyPluginCollection
+   * @return LazyPluginCollection
    *   The action's plugin collection.
    */
   protected function getPluginCollection() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/prod_check/src/Entity/ProdCheckConfigInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Entity;

+use Drupal\prod_check\Plugin\ProdCheckInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;

 /**
@@ @@
   /**
    * Returns the operation plugin.
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckInterface
+   * @return ProdCheckInterface
    */
   public function getPlugin();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


17) modules/contrib/prod_check/src/Entity/ProdCheck.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Entity;

+use Drupal\Component\Plugin\LazyPluginCollection;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ @@
   /**
    * The plugin collection that stores action plugins.
    *
-   * @var \Drupal\prod_check\CheckPluginCollection
+   * @var CheckPluginCollection
    */
   protected $pluginCollection;

@@ @@
   /**
    * Encapsulates the creation of the action's LazyPluginCollection.
    *
-   * @return \Drupal\Component\Plugin\LazyPluginCollection
+   * @return LazyPluginCollection
    *   The action's plugin collection.
    */
   protected function getPluginCollection() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/prod_check/src/Controller/StatusReportController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The prod check processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager;
+   * @var ProdCheckProcessorPluginManager ;
    */
   protected $processManager;

@@ @@
   /**
    * The prod check category plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckCategoryPluginManager;
+   * @var ProdCheckCategoryPluginManager ;
    */
   protected $categoryManager;

@@ @@
   /**
    * Constructs a \Drupal\prod_check\Controller\StatusReportController object.
    *
-   * @param \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager $process_manager
+   * @param ProdCheckProcessorPluginManager $process_manager
    *   The prod check processor plugin manager.
-   * @param \Drupal\prod_check\Plugin\ProdCheckCategoryPluginManager $category_manager
+   * @param ProdCheckCategoryPluginManager $category_manager
    *   The prod check processor category manager.
    */
   public function __construct(ProdCheckProcessorPluginManager $process_manager, ProdCheckCategoryPluginManager $category_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/prod_check/src/CheckPluginCollection.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check;

+use Drupal\prod_check\Plugin\ProdCheckInterface;
 use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;

 /**
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckInterface
+   * @return ProdCheckInterface
    */
   public function &get($instance_id) {
     return parent::get($instance_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/prod_check/src/CheckListBuilder.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckPluginManager
+   * @var ProdCheckPluginManager
    */
   protected $processorManager;

@@ @@
   /**
    * Constructs a new ProcessorListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The processor storage.
-   * @param \Drupal\prod_check\Plugin\ProdCheckPluginManager $manager
+   * @param ProdCheckPluginManager $manager
    *   The processor plugin manager.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, ProdCheckPluginManager $manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/prod_check/src/Annotation/ProdCheckProcessor.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


22) modules/contrib/prod_check/src/Annotation/ProdCheck.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


23) modules/contrib/prod_check/modules/prod_check_xmlrpc/src/Plugin/ProdCheckProcessor/XmlRpc.php:66

    ---------- begin diff ----------
@@ @@

     if ($status) {
       $message = $plugin->successMessages();
-      $requirement['value'] = (string) render($message['value']);
-      $requirement['description'] = (string) render($message['description']);
+      $requirement['value'] = (string) \Drupal::service('renderer')->render($message['value']);
+      $requirement['description'] = (string) \Drupal::service('renderer')->render($message['description']);
     }
     else {
       $message = $plugin->failMessages();
-      $requirement['value'] = (string) render($message['value']);
-      $requirement['description'] = (string) render($message['description']);
+      $requirement['value'] = (string) \Drupal::service('renderer')->render($message['value']);
+      $requirement['description'] = (string) \Drupal::service('renderer')->render($message['description']);
     }

     return $requirement;
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/prod_check/modules/prod_check_rest/src/Plugin/rest/resource/ProdCheckResource.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\prod_check_rest\Plugin\rest\resource;

+use Symfony\Component\HttpKernel\Exception\HttpException;
 use Drupal\Core\Render\RenderContext;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ @@
    *
    * Returns a resource for the prod check report
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The response containing the log entry.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
+   * @throws HttpException
    */
   public function get() {
     // Some checks might render or do things that we can not properly
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 24 files have been changed by Rector                                      

