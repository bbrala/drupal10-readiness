modules/contrib/entitygroupfield/entitygroupfield.install
modules/contrib/entitygroupfield/entitygroupfield.module
modules/contrib/entitygroupfield/entitygroupfield.tokens.inc
modules/contrib/entitygroupfield/src/Element/GroupAutocomplete.php
modules/contrib/entitygroupfield/src/Field/EntityGroupFieldItemList.php
modules/contrib/entitygroupfield/src/Plugin/EntityReferenceSelection/EntityGroupFieldSelection.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldFormatter/ParentGroupEntityFormatter.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldFormatter/ParentGroupFormatterTrait.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldFormatter/ParentGroupIdFormatter.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldFormatter/ParentGroupLabelFormatter.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldType/EntityGroupFieldItem.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldWidget/EntityGroupFieldAutocompleteWidget.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldWidget/EntityGroupFieldSelectWidget.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldWidget/EntityGroupFieldWidgetBase.php
modules/contrib/entitygroupfield/src/Plugin/Field/FieldWidget/GroupSelectorWidget.php
modules/contrib/entitygroupfield/tests/src/Functional/EntityGroupFieldFormatterTest.php
modules/contrib/entitygroupfield/tests/src/FunctionalJavascript/EntityGroupFieldWidgetTest.php
modules/contrib/entitygroupfield/tests/src/Kernel/EntityGroupFieldKernelTestBase.php
modules/contrib/entitygroupfield/tests/src/Kernel/GroupAutocompleteFormElementTest.php
modules/contrib/entitygroupfield/tests/src/Traits/GroupCreationTrait.php
modules/contrib/entitygroupfield/tests/src/Traits/TestGroupsTrait.php

8 files with changes
====================

1) modules/contrib/entitygroupfield/tests/src/Traits/TestGroupsTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entitygroupfield\Traits;

+use Drupal\group\Entity\GroupTypeInterface;
+use Drupal\group\Entity\GroupInterface;
 /**
  * Provides group types and group entities for use in test classes.
  *
@@ @@
   /**
    * A dummy group type with ID 'a'.
    *
-   * @var \Drupal\group\Entity\GroupTypeInterface
+   * @var GroupTypeInterface
    */
   protected $groupTypeA;

@@ @@
   /**
    * A dummy group type with ID 'b'.
    *
-   * @var \Drupal\group\Entity\GroupTypeInterface
+   * @var GroupTypeInterface
    */
   protected $groupTypeB;

@@ @@
   /**
    * Test group A1, of type 'a'.
    *
-   * @var \Drupal\group\Entity\GroupInterface
+   * @var GroupInterface
    */
   protected $groupA1;

@@ @@
   /**
    * Test group A2, of type 'a'.
    *
-   * @var \Drupal\group\Entity\GroupInterface
+   * @var GroupInterface
    */
   protected $groupA2;

@@ @@
   /**
    * Test group A3, of type 'a'.
    *
-   * @var \Drupal\group\Entity\GroupInterface
+   * @var GroupInterface
    */
   protected $groupA3;

@@ @@
   /**
    * Test group B1, of type 'b'.
    *
-   * @var \Drupal\group\Entity\GroupInterface
+   * @var GroupInterface
    */
   protected $groupB1;

@@ @@
   /**
    * Test group B2, of type 'b'.
    *
-   * @var \Drupal\group\Entity\GroupInterface
+   * @var GroupInterface
    */
   protected $groupB2;

@@ @@
   /**
    * Test group B3, of type 'b'.
    *
-   * @var \Drupal\group\Entity\GroupInterface
+   * @var GroupInterface
    */
   protected $groupB3;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/entitygroupfield/tests/src/Traits/GroupCreationTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entitygroupfield\Traits;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\group\Entity\Group;
+use Drupal\group\Entity\GroupType;
 /**
  * Provides methods to create groups and group types.
  *
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    * @param array $values
    *   (optional) The values used to create the entity.
    *
-   * @return \Drupal\group\Entity\Group
+   * @return Group
    *   The created group entity.
    */
   protected function createGroup(array $values = []) {
@@ @@
    * @param array $values
    *   (optional) The values used to create the entity.
    *
-   * @return \Drupal\group\Entity\GroupType
+   * @return GroupType
    *   The created group type entity.
    */
   protected function createGroupType(array $values = []) {
@@ @@
   /**
    * Returns the entity type manager service to use.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity type manager service.
    */
   protected function getEntityTypeManager() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/entitygroupfield/tests/src/Kernel/GroupAutocompleteFormElementTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entitygroupfield\Kernel;

+use Drupal\group\Entity\GroupInterface;
+use Drupal\Core\Form\FormBuilder;
 use Drupal\Core\Form\FormInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Test groups.
    *
-   * @var \Drupal\group\Entity\GroupInterface[]
+   * @var GroupInterface[]
    */
   protected $testGroups;

@@ @@
   /**
    * Form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->formBuilder = $this->container->get('form_builder');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entitygroupfield/tests/src/Kernel/EntityGroupFieldKernelTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entitygroupfield\Kernel;

+use Drupal\group\Plugin\GroupContentEnablerManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\user\Traits\UserCreationTrait;
 use Drupal\Tests\entitygroupfield\Traits\GroupCreationTrait;
@@ @@
   /**
    * The content enabler plugin manager.
    *
-   * @var \Drupal\group\Plugin\GroupContentEnablerManagerInterface
+   * @var GroupContentEnablerManagerInterface
    */
   protected $groupContentPluginManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('system', ['sequences', 'key_value_expire']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entitygroupfield/tests/src/FunctionalJavascript/EntityGroupFieldWidgetTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entitygroupfield\FunctionalJavascript;

+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\entitygroupfield\Traits\GroupCreationTrait;
 use Drupal\Tests\entitygroupfield\Traits\TestGroupsTrait;
@@ @@
   /**
    * Regular authenticated User for tests.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Regular authenticated User for tests.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create node types.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/entitygroupfield/tests/src/Functional/EntityGroupFieldFormatterTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->drupalCreateUser([
       'administer content types',
@@ @@
     $this->drupalGet("node/" . $node->id());
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->linkNotExists('group-A1');
-    $this->assertNoText('group-A1');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('group-A1');

     // Now configure the formatter to show the group (as a link) and try again.
     $this->configureViewDisplay([
@@ @@
     $this->assertSession()->statusCodeEquals(200);
     // Make sure there's no link, but the label should still be there.
     $this->assertSession()->linkNotExists('group-A1');
-    $this->assertText('group-A1');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('group-A1');

     // Now try the ID formatter.
     $this->configureViewDisplay([
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/entitygroupfield/src/Plugin/Field/FieldWidget/EntityGroupFieldWidgetBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entitygroupfield\Plugin\Field\FieldWidget;

+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\WidgetBase;
@@ @@
   /**
    * The Group Content Plugin Manager.
    *
-   * @var \Drupal\group\Plugin\GroupContentEnablerManagerInterface
+   * @var GroupContentEnablerManagerInterface
    */
   protected $groupContentPluginManager;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepository
+   * @var EntityRepository
    */
   protected $entityRepository;

@@ @@
     if (isset($widget_state['gcontent'][$delta]['entity'])) {
       $entity = $widget_state['gcontent'][$delta]['entity'];

-      /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $display */
+      /** @var EntityFormDisplayInterface $display */
       $display = $widget_state['gcontent'][$delta]['display'];

       if ($widget_state['gcontent'][$delta]['mode'] == 'edit') {
@@ @@
    * @param array $elements
    *   An associative array containing the substructure of the form to be
    *   validated in this call.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $form
    *   The complete form array.
@@ @@
         && $widget_state['gcontent'][$item['_original_delta']]['mode'] != 'remove') {
         $gcontent_entity = $widget_state['gcontent'][$item['_original_delta']]['entity'];

-        /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $display */
+        /** @var EntityFormDisplayInterface $display */
         $display = $widget_state['gcontent'][$item['_original_delta']]['display'];
         if ($widget_state['gcontent'][$item['_original_delta']]['mode'] == 'edit') {
           $display->extractFormValues($gcontent_entity, $element[$item['_original_delta']]['subform'], $form_state);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/entitygroupfield/src/Plugin/Field/FieldWidget/EntityGroupFieldSelectWidget.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entitygroupfield\Plugin\Field\FieldWidget;

+use Drupal\group\Entity\GroupInterface;
+use Drupal\Core\Session\AccountInterface;
+use Drupal\group\Entity\Group;
 /**
  * Plugin implementation of the 'entitygroupfield_select_widget' widget.
  *
@@ @@
    * @param string $plugin_id
    *   The plugin ID to filter the groups.
    *
-   * @return \Drupal\group\Entity\GroupInterface[]
+   * @return GroupInterface[]
    *   The list of group entities.
    */
   protected function getPluginGroups($plugin_id) {
@@ @@

     $allowed_groups = [];
     $all_restricted = TRUE;
-    /** @var \Drupal\Core\Session\AccountInterface $account */
+    /** @var AccountInterface $account */
     $account = $this->currentUser->getAccount();

     $excluded_groups = [];
@@ @@
       }
     }

-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     foreach ($groups as $group) {
       if (in_array($group->id(), $excluded_groups)) {
         continue;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

