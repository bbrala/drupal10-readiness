modules/contrib/views_block_filter_block/src/Plugin/views/display/ViewsBlockFilterBlockPluginDisplayBlock.php
modules/contrib/views_block_filter_block/tests/src/Functional/IntegrationTest.php
modules/contrib/views_block_filter_block/views_block_filter_block.install
modules/contrib/views_block_filter_block/views_block_filter_block.module

1 file with changes
===================

1) modules/contrib/views_block_filter_block/tests/src/Functional/IntegrationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\views_block_filter_block\Functional;

+use Drupal\user\Entity\User;
+use Behat\Mink\Element\NodeElement;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A user with admin rights.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create and log in a user with administer views permission.
@@ @@
     $view['id'] = 'machine';
     $view['page[create]'] = FALSE;
     $view['block[create]'] = TRUE;
-    $this->drupalPostForm('admin/structure/views/add', $view, 'Save and edit');
+    $this->drupalGet('admin/structure/views/add');
+    $this->submitForm($view, 'Save and edit');

     // Assert that the "exposed form in block" text exists; click and submit it.
-    $this->assertText('Exposed form in block');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Exposed form in block');
     $this->clickViewsOperationLink('No', '/exposed_block');
-    $this->drupalPostForm(NULL, ['exposed_block' => TRUE], 'Apply');
+    $this->submitForm(['exposed_block' => TRUE], 'Apply');

     // Save the view.
-    $this->drupalPostForm(NULL, [], 'Save');
+    $this->submitForm([], 'Save');

     // Ensure the view exists on the Views overview page.
     $this->drupalGet('admin/structure/views');
-    $this->assertText($view['label']);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($view['label']);

     // Ensure the exposed block edit value was saved.
     $this->clickViewsOperationLink('Edit', '/view/' . $view['id']);
@@ @@

     // Ensure the exposed form block exists as a block.
     $this->drupalGet('/admin/structure/block/library/classy');
-    $this->assertText('Exposed form: ' . $view['id'] . '-block');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Exposed form: ' . $view['id'] . '-block');
   }

   /**
@@ @@
     $this->drupalGet('node');

     // Ensure the configured filters are exposed.
-    $this->assertFieldByName('status', 1);
+    $this->assertSession()->fieldValueEquals('status', 1);

     // Ensure the form action points to the absolute URL of the current page.
     $expected_url = $this->getAbsoluteUrl('node');
-    $form = $this->xpath($this->buildXPathQuery('//form[@id=:id]', [':id' => 'views-exposed-form-test-view-block']));
+    $form = $this->xpath($this->assertSession()->buildXPathQuery('//form[@id=:id]', [':id' => 'views-exposed-form-test-view-block']));
     $action = (string) $form[0]['action'];
     $this->assertEquals($action, $expected_url);

@@ @@
     $this->drupalGet($action . '?status=0');

     // Ensure the value was changed.
-    $this->assertFieldByName('status', 0);
+    $this->assertSession()->fieldValueEquals('status', 0);
   }

   /**
@@ @@
    *   passed as the expected unique string.
    */
   protected function clickViewsOperationLink($label, $unique_href_part) {
-    /** @var \Behat\Mink\Element\NodeElement[] $links */
+    /** @var NodeElement[] $links */
     $links = $this->xpath('//a[normalize-space(text())=:label]', [':label' => $label]);
     foreach ($links as $link_index => $link) {
       $position = strpos($link->getOuterHtml(), $unique_href_part);
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertTextRector
 * BuildXPathQueryRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

