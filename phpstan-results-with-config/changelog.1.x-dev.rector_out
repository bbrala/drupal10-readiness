modules/contrib/changelog/src/ChangelogEntityHtmlRouteProvider.php
modules/contrib/changelog/src/ChangelogEntityListBuilder.php
modules/contrib/changelog/src/Controller/PageController.php
modules/contrib/changelog/src/Entity/ChangelogEntity.php
modules/contrib/changelog/src/Entity/ChangelogEntityInterface.php
modules/contrib/changelog/src/Form/ChangelogEntityDeleteForm.php
modules/contrib/changelog/src/Form/ChangelogEntityForm.php
modules/contrib/changelog/tests/src/Functional/LoadTest.php

5 files with changes
====================

1) modules/contrib/changelog/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\changelog\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer site configuration',
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('/changelog'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet(Url::fromRoute('/admin/config/changelog'));

   }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/changelog/src/Form/ChangelogEntityForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\changelog\Form;

+use Drupal\changelog\Entity\ChangelogEntity;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\changelog\Entity\ChangelogEntity $changelog */
+    /** @var ChangelogEntity $changelog */
     $changelog = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
@@ @@
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\changelog\Entity\ChangelogEntity $changelog */
+    /** @var ChangelogEntity $changelog */
     $changelog = $this->entity;
     $entry = $form_state->getValue('log');
     $changelog->setLogFormat($entry['format']);
@@ @@

     switch ($status) {
       case SAVED_NEW:
-        drupal_set_message($this->t('Created the %label changelog item.', [
+        $this->messenger()->addStatus($this->t('Created the %label changelog item.', [
           '%label' => $changelog->label(),
         ]));
         break;

       default:
-        drupal_set_message($this->t('Saved the %label changelog item.', [
+        $this->messenger()->addStatus($this->t('Saved the %label changelog item.', [
           '%label' => $changelog->label(),
         ]));
     }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/changelog/src/Form/ChangelogEntityDeleteForm.php:37

    ---------- begin diff ----------
@@ @@
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $this->entity->delete();

-    drupal_set_message(
-      $this->t('content @type: deleted @label.',
-        [
-          '@type' => $this->entity->bundle(),
-          '@label' => $this->entity->label(),
-        ]
-        )
-    );
+    $this->messenger()->addStatus($this->t('content @type: deleted @label.',
+      [
+        '@type' => $this->entity->bundle(),
+        '@label' => $this->entity->label(),
+      ]
+      ));

     $form_state->setRedirectUrl($this->getCancelUrl());
   }
    ----------- end diff -----------

Applied rules:
 * DrupalSetMessageRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/changelog/src/Controller/PageController.php:19

    ---------- begin diff ----------
@@ @@
     $out = [];
     $entities = ChangelogEntity::getLogEntries();
     $table_data = [];
-    /** @var \Drupal\changelog\Entity\ChangelogEntity $entity */
+    /** @var ChangelogEntity $entity */
     foreach (ChangelogEntity::loadMultiple($entities) as $entity) {
       $time = \Drupal::service('date.formatter')->format($entity->getCreatedTime(), 'html_date');
       $entry = $entity->getLogValue();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/changelog/src/ChangelogEntityListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\changelog;

+use Drupal\changelog\Entity\ChangelogEntity;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;

@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\changelog\Entity\ChangelogEntity $entity */
+    /** @var ChangelogEntity $entity */
     $row['label'] = $entity->label();
     $row['id'] = $entity->id();
     $time = $entity->getCreatedTime();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

