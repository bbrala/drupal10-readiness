modules/contrib/field_css/field_css.module
modules/contrib/field_css/src/EventSubscriber/BlockComponentRenderArray.php
modules/contrib/field_css/src/Plugin/Field/FieldFormatter/CssFormatter.php
modules/contrib/field_css/src/Plugin/Field/FieldType/CssItem.php
modules/contrib/field_css/src/Plugin/Field/FieldWidget/CssWidget.php
modules/contrib/field_css/src/Traits/CssTrait.php
modules/contrib/field_css/tests/src/FunctionalJavascript/FormatterTest.php
modules/contrib/field_css/tests/src/FunctionalJavascript/TestBase.php
modules/contrib/field_css/tests/src/FunctionalJavascript/WidgetTest.php
modules/contrib/field_css/tests/src/Unit/CssTraitTest.php

7 files with changes
====================

1) modules/contrib/field_css/tests/src/FunctionalJavascript/WidgetTest.php:120

    ---------- begin diff ----------
@@ @@

     // Verify default settings in summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Load toolbar: Yes', $summary_markup);
-    $this->assertContains('Toolbar buttons: undo, redo, enlarge, shrink', $summary_markup);
+    $this->assertStringContainsString('Load toolbar: Yes', $summary_markup);
+    $this->assertStringContainsString('Toolbar buttons: undo, redo, enlarge, shrink', $summary_markup);

     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
@@ @@

     // Verify updated settings in summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Load toolbar: Yes', $summary_markup);
-    $this->assertContains('Toolbar buttons: enlarge, shrink', $summary_markup);
+    $this->assertStringContainsString('Load toolbar: Yes', $summary_markup);
+    $this->assertStringContainsString('Toolbar buttons: enlarge, shrink', $summary_markup);

     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
@@ @@

     // Verify updated settings in summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Load toolbar: No', $summary_markup);
-    $this->assertNotContains('Toolbar buttons:', $summary_markup);
+    $this->assertStringContainsString('Load toolbar: No', $summary_markup);
+    $this->assertStringNotContainsString('Toolbar buttons:', $summary_markup);

     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_css/tests/src/FunctionalJavascript/TestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\field_css\FunctionalJavascript;

+use Drupal\user\Entity\User;
+use Behat\Mink\Element\NodeElement;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
@@ @@
   /**
    * A user with permission to access CSS fields.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $codeUser;

@@ @@
   /**
    * A user without permission to access CSS fields.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $authUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->createContentType(['type' => 'page']);
@@ @@
   /**
    * Helper function to find NodeElement for a widget/formatter summary cell.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   NodeElement for the formatter summary cell.
    */
   protected function getSummaryCell() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_css/tests/src/FunctionalJavascript/FormatterTest.php:219

    ---------- begin diff ----------
@@ @@
     $assert_session->elementExists('xpath', '//head/style[contains(string(), "color: yellow;")]');
     $element = $page->find('xpath', '//div[@class="grantne"]');
     $this->assertNotEmpty($element);
-    $this->assertContains('Testing Block', $element->getHtml());
+    $this->assertStringContainsString('Testing Block', $element->getHtml());
   }

   /**
@@ @@

     // Verify default configuration in UI.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Location: HEAD', $summary_markup);
-    $this->assertContains('Selector Prefix: None', $summary_markup);
-    $this->assertNotContains('Fixed Prefix Value', $summary_markup);
+    $this->assertStringContainsString('Location: HEAD', $summary_markup);
+    $this->assertStringContainsString('Selector Prefix: None', $summary_markup);
+    $this->assertStringNotContainsString('Fixed Prefix Value', $summary_markup);

     // Verify default configuration in storage.
     $display_component = \Drupal::service('entity_display.repository')
@@ @@

     // Verify summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Location: BODY', $summary_markup);
-    $this->assertContains('Selector Prefix: Fixed Value', $summary_markup);
-    $this->assertContains('Fixed Prefix Value: venango', $summary_markup);
+    $this->assertStringContainsString('Location: BODY', $summary_markup);
+    $this->assertStringContainsString('Selector Prefix: Fixed Value', $summary_markup);
+    $this->assertStringContainsString('Fixed Prefix Value: venango', $summary_markup);

     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/field_css/src/Traits/CssTrait.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Return any prefixes to be added to selectors for an entity and view mode.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity being rendered.
    * @param string $view_mode
    *   The view mode being rendered.
@@ @@
    *
    * Pattern: 'scoped-css--[entity-type]-[entity-id]'.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity being rendered.
    * @param bool $leading_period
    *   Whether or not the prefix should be returned with a leading period.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/field_css/src/Plugin/Field/FieldWidget/CssWidget.php:86

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The element being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function validate(array $element, FormStateInterface $form_state) {
@@ @@
    * @param mixed $input
    *   The incoming input to populate the form element. If this is FALSE,
    *   the element's default value should be returned.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return mixed
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/field_css/src/Plugin/Field/FieldFormatter/CssFormatter.php:116

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The element being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form array.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/field_css/src/EventSubscriber/BlockComponentRenderArray.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * Builds render arrays for block plugins and sets it on the event.
    *
-   * @param \Drupal\layout_builder\Event\SectionComponentBuildRenderArrayEvent $event
+   * @param SectionComponentBuildRenderArrayEvent $event
    *   The section component render event.
    */
   public function onBuildRender(SectionComponentBuildRenderArrayEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 7 files have been changed by Rector                                       

