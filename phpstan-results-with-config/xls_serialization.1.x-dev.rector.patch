diff --git a/src/Encoder/Xls.php b/src/Encoder/Xls.php
index 6a2567d..5ce55e0 100644
--- a/src/Encoder/Xls.php
+++ b/src/Encoder/Xls.php
@@ -90,7 +90,7 @@ class Xls implements EncoderInterface {
         }
 
         if (!empty($context['views_style_plugin']->view)) {
-          /** @var \Drupal\views\ViewExecutable $view */
+          /** @var ViewExecutable $view */
           $view = $context['views_style_plugin']->view;
           // Set the worksheet title based on the view title within the context.
           if (!empty($view->getTitle())) {
@@ -157,7 +157,7 @@ class Xls implements EncoderInterface {
   /**
    * Set sheet headers.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $sheet
+   * @param Worksheet $sheet
    *   The worksheet to set headers for.
    * @param array $data
    *   The data array.
@@ -175,7 +175,7 @@ class Xls implements EncoderInterface {
   /**
    * Set any available metadata.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Document\Properties $document_properties
+   * @param Properties $document_properties
    *   The document properties object.
    * @param array $metadata
    *   An associative array of metadata to set on the document. The array can
@@ -250,7 +250,7 @@ class Xls implements EncoderInterface {
   /**
    * Set sheet data.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $sheet
+   * @param Worksheet $sheet
    *   The worksheet to put the data in.
    * @param array $data
    *   The data to be put in the worksheet.
@@ -302,7 +302,7 @@ class Xls implements EncoderInterface {
         $headers = $context['header'];
       }
       elseif (isset($context['views_style_plugin'])) {
-        /** @var \Drupal\views\ViewExecutable $view */
+        /** @var ViewExecutable $view */
         $view = $context['views_style_plugin']->view;
         $fields = $view->field;
         foreach ($first_row as $key => $value) {
@@ -337,7 +337,7 @@ class Xls implements EncoderInterface {
   /**
    * Set width of all columns with data in them in sheet to AutoSize.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $sheet
+   * @param Worksheet $sheet
    *   The worksheet to set the column width to AutoSize for.
    */
   protected function setColumnsAutoSize(Worksheet $sheet) {
@@ -350,7 +350,7 @@ class Xls implements EncoderInterface {
   /**
    * Set font of the header (first) row to bold.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $sheet
+   * @param Worksheet $sheet
    *   The worksheet to set the font of the header row to bold.
    */
   protected function setHeaderRowBold(Worksheet $sheet) {
@@ -360,7 +360,7 @@ class Xls implements EncoderInterface {
   /**
    * Set font of the header (first) row to italic.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $sheet
+   * @param Worksheet $sheet
    *   The worksheet to set the font of the header row to italic.
    */
   protected function setHeaderRowItalic(Worksheet $sheet) {
@@ -370,7 +370,7 @@ class Xls implements EncoderInterface {
   /**
    * Set background color of the header (first) row.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $sheet
+   * @param Worksheet $sheet
    *   The worksheet to set the background color of the header row.
    * @param string $rgb
    *   The worksheet to set the background color of the header row.
@@ -406,7 +406,7 @@ class Xls implements EncoderInterface {
    *   The RGB value of the background color to set on the whole row,
    *   if the comparison is TRUE.
    *
-   * @return \PhpOffice\PhpSpreadsheet\Style\Conditional
+   * @return Conditional
    *   The conditional formatting.
    */
   protected function setConditionalFormat($column_letter, $operator, $compare_to, $rgb_background_color) {
@@ -421,7 +421,7 @@ class Xls implements EncoderInterface {
   /**
    * Sets conditional formats on worksheet.
    *
-   * @param \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $sheet
+   * @param Worksheet $sheet
    *   The sheet to set the conditional formats on.
    * @param array $conditional_styles
    *   The conditional formats to set.
@@ -457,7 +457,7 @@ class Xls implements EncoderInterface {
   /**
    * Get the label in the view for a field name (if available)
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view to get the field labels from.
    * @param string $field_name
    *   The field name to get the view label for.
diff --git a/src/EventSubscriber/Subscriber.php b/src/EventSubscriber/Subscriber.php
index 0fb891d..e4de367 100644
--- a/src/EventSubscriber/Subscriber.php
+++ b/src/EventSubscriber/Subscriber.php
@@ -22,7 +22,7 @@ class Subscriber implements EventSubscriberInterface {
   /**
    * Register content formats on the request object.
    *
-   * @param Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent $event
    *   The event to get the request object to register on.
    */
   public function onKernelRequest(RequestEvent $event) {
diff --git a/src/Plugin/views/display/ExcelExport.php b/src/Plugin/views/display/ExcelExport.php
index d997a82..d25415c 100644
--- a/src/Plugin/views/display/ExcelExport.php
+++ b/src/Plugin/views/display/ExcelExport.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\xls_serialization\Plugin\views\display;
 
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheableResponse;
 use Drupal\Core\Form\FormStateInterface;
@@ -46,7 +47,7 @@ class ExcelExport extends RestExport {
     $response = new CacheableResponse('', 200);
     $build['#response'] = $response;
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
 
     $output = (string) $renderer->renderRoot($build);
diff --git a/tests/src/Unit/EventSubscriber/SubscriberTest.php b/tests/src/Unit/EventSubscriber/SubscriberTest.php
index 7438a0a..7c2e1d3 100644
--- a/tests/src/Unit/EventSubscriber/SubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/SubscriberTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\xls_serialization\Unit\EventSubscriber;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Tests\UnitTestCase;
 use Drupal\xls_serialization\EventSubscriber\Subscriber;
 use Symfony\Component\HttpFoundation\Request;
@@ -16,6 +17,7 @@ use Symfony\Component\HttpKernel\Event\RequestEvent;
  */
 class SubscriberTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @covers ::onKernelRequest
    */
