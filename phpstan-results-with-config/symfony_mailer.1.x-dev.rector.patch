diff --git a/modules/symfony_mailer_bc/src/MailManagerReplacement.php b/modules/symfony_mailer_bc/src/MailManagerReplacement.php
index c6a4a9c..620aad5 100644
--- a/modules/symfony_mailer_bc/src/MailManagerReplacement.php
+++ b/modules/symfony_mailer_bc/src/MailManagerReplacement.php
@@ -34,14 +34,14 @@ class MailManagerReplacement extends MailManager {
   /**
    * The email factory.
    *
-   * @var \Drupal\symfony_mailer\EmailFactoryInterface
+   * @var EmailFactoryInterface
    */
   protected $emailFactory;
 
   /**
    * The email builder manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface
+   * @var EmailBuilderManagerInterface
    */
   protected $emailBuilderManager;
 
@@ -51,21 +51,21 @@ class MailManagerReplacement extends MailManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger channel factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\symfony_mailer\EmailFactoryInterface $email_factory
+   * @param EmailFactoryInterface $email_factory
    *   The email factory.
-   * @param \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface $email_builder_manager
+   * @param EmailBuilderManagerInterface $email_builder_manager
    *   The email builder manager.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger_factory, TranslationInterface $string_translation, RendererInterface $renderer, EmailFactoryInterface $email_factory, EmailBuilderManagerInterface $email_builder_manager) {
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilder.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilder.php
index a59ec84..e4e80a1 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilder.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilder.php
@@ -26,13 +26,13 @@ class ContactEmailBuilder extends ContactEmailBuilderBase {
   /**
    * Saves the parameters for a newly created email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to modify.
-   * @param \Drupal\contact\MessageInterface $message
+   * @param MessageInterface $message
    *   Submitted message entity.
-   * @param \Drupal\Core\Session\AccountInterface $sender
+   * @param AccountInterface $sender
    *   The sender.
-   * @param \Drupal\Core\Session\AccountInterface $recipient
+   * @param AccountInterface $recipient
    *   The recipient.
    */
   public function createParams(EmailInterface $email, MessageInterface $message = NULL, AccountInterface $sender = NULL, AccountInterface $recipient = NULL) {
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilderBase.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilderBase.php
index 6c61962..8ce2fd2 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilderBase.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactEmailBuilderBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer_bc\Plugin\EmailBuilder;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\symfony_mailer\EmailInterface;
 use Drupal\symfony_mailer\MailerHelperTrait;
@@ -18,7 +19,7 @@ class ContactEmailBuilderBase extends EmailBuilderBase {
    * {@inheritdoc}
    */
   public function build(EmailInterface $email) {
-    /** @var \Drupal\user\UserInterface $sender */
+    /** @var UserInterface $sender */
     $sender = $email->getParam('sender');
     $contact_message = $email->getParam('contact_message');
 
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactPageEmailBuilder.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactPageEmailBuilder.php
index 3e8c7ce..78d9219 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactPageEmailBuilder.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/ContactPageEmailBuilder.php
@@ -32,11 +32,11 @@ class ContactPageEmailBuilder extends ContactEmailBuilderBase {
   /**
    * Saves the parameters for a newly created email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to modify.
-   * @param \Drupal\contact\MessageInterface $message
+   * @param MessageInterface $message
    *   Submitted message entity.
-   * @param \Drupal\Core\Session\AccountInterface $sender
+   * @param AccountInterface $sender
    *   The sender.
    */
   public function createParams(EmailInterface $email, MessageInterface $message = NULL, AccountInterface $sender = NULL) {
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/LegacyEmailBuilder.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/LegacyEmailBuilder.php
index c2db02b..f46b35f 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/LegacyEmailBuilder.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/LegacyEmailBuilder.php
@@ -19,7 +19,7 @@ class LegacyEmailBuilder extends EmailBuilderBase implements ContainerFactoryPlu
   /**
    * The mailer helper.
    *
-   * @var \Drupal\symfony_mailer\MailerHelperInterface
+   * @var MailerHelperInterface
    */
   protected $mailerHelper;
 
@@ -44,7 +44,7 @@ class LegacyEmailBuilder extends EmailBuilderBase implements ContainerFactoryPlu
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\symfony_mailer\MailerHelperInterface $mailer_helper
+   * @param MailerHelperInterface $mailer_helper
    *   The mailer helper.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MailerHelperInterface $mailer_helper) {
@@ -116,7 +116,7 @@ class LegacyEmailBuilder extends EmailBuilderBase implements ContainerFactoryPlu
   /**
    * Fills an Email from a message array.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to fill.
    * @param array $message
    *   The array to fill from.
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsEmailBuilder.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsEmailBuilder.php
index 924215a..9c22b3a 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsEmailBuilder.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsEmailBuilder.php
@@ -26,7 +26,7 @@ class SimplenewsEmailBuilder extends SimplenewsEmailBuilderBase {
   /**
    * Saves the parameters for a newly created email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to modify.
    * @param \Drupal\simplenews\SubscriberInterface $subscriber
    *   The subscriber.
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsNewsletterEmailBuilder.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsNewsletterEmailBuilder.php
index 49f0ded..d335f15 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsNewsletterEmailBuilder.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/SimplenewsNewsletterEmailBuilder.php
@@ -30,9 +30,9 @@ class SimplenewsNewsletterEmailBuilder extends SimplenewsEmailBuilderBase {
   /**
    * Saves the parameters for a newly created email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to modify.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $issue
+   * @param ContentEntityInterface $issue
    *   The newsletter issue to send.
    * @param \Drupal\simplenews\SubscriberInterface $subscriber
    *   The subscriber.
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UpdateEmailBuilder.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UpdateEmailBuilder.php
index e18272b..a75404b 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UpdateEmailBuilder.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UpdateEmailBuilder.php
@@ -69,7 +69,7 @@ class UpdateEmailBuilder extends EmailBuilderBase {
    * {@see \Drupal\symfony_mailer\EmailInterface::PHASE_BUILD} because
    * otherwise the 'To' header might not be set yet.
    *
-   * @throws \Drupal\symfony_mailer\Exception\SkipMailException
+   * @throws SkipMailException
    *
    * @see \Drupal\symfony_mailer\EmailInterface::PHASE_PRE_RENDER
    */
diff --git a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UserEmailBuilder.php b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UserEmailBuilder.php
index c906eb9..43d583b 100644
--- a/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UserEmailBuilder.php
+++ b/modules/symfony_mailer_bc/src/Plugin/EmailBuilder/UserEmailBuilder.php
@@ -42,9 +42,9 @@ class UserEmailBuilder extends EmailBuilderBase {
   /**
    * Saves the parameters for a newly created email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to modify.
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user.
    */
   public function createParams(EmailInterface $email, UserInterface $user = NULL) {
diff --git a/modules/symfony_mailer_bc/symfony_mailer_bc.module b/modules/symfony_mailer_bc/symfony_mailer_bc.module
index e92abe2..c72cc88 100644
--- a/modules/symfony_mailer_bc/symfony_mailer_bc.module
+++ b/modules/symfony_mailer_bc/symfony_mailer_bc.module
@@ -12,7 +12,7 @@ use Drupal\symfony_mailer\Annotation\EmailBuilder;
  * Implements hook_theme().
  */
 function symfony_mailer_bc_theme($existing, $type, $theme, $path) {
-  $templateDir = drupal_get_path('module', 'symfony_mailer_bc') . '/templates';
+  $templateDir = \Drupal::service('extension.list.module')->getPath('symfony_mailer_bc') . '/templates';
   $hooks = [];
   foreach (glob("$templateDir/email--*") as $template) {
     $theme = strtr(basename($template, '.html.twig'), '-', '_');
diff --git a/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/src/Form/BcTestMailForm.php b/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/src/Form/BcTestMailForm.php
index 8e55861..e784b35 100644
--- a/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/src/Form/BcTestMailForm.php
+++ b/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/src/Form/BcTestMailForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer_bc_test\Form;
 
+use Drupal\Core\Theme\ThemeManagerInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Mail\MailManagerInterface;
@@ -15,14 +16,14 @@ class BcTestMailForm extends FormBase {
   /**
    * The mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * Constructs TestMailForm.
    *
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager service.
    */
   public function __construct(MailManagerInterface $mail_manager) {
@@ -54,7 +55,7 @@ class BcTestMailForm extends FormBase {
       '#type' => 'submit',
       '#value' => 'Send test mail',
     ];
-    /** @var \Drupal\Core\Theme\ThemeManagerInterface $theme_manager */
+    /** @var ThemeManagerInterface $theme_manager */
     $theme_manager = \Drupal::service('theme.manager');
     $current_theme = $theme_manager->getActiveTheme()->getName();
     $form['current_theme'] = [
diff --git a/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/symfony_mailer_bc_test.module b/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/symfony_mailer_bc_test.module
index cabe125..935cdf8 100644
--- a/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/symfony_mailer_bc_test.module
+++ b/modules/symfony_mailer_bc/tests/modules/symfony_mailer_bc_test/symfony_mailer_bc_test.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Theme\ThemeManagerInterface;
+use Drupal\Core\Render\RendererInterface;
 /**
  * @file
  * Hook implementations for the Symfony Mailer BC test module.
@@ -24,9 +26,9 @@ function symfony_mailer_bc_test_mail($key, &$message, $params) {
  * "commerce order receipt" mail.
  */
 function symfony_mailer_bc_test_add_template_to_body() {
-  /** @var \Drupal\Core\Theme\ThemeManagerInterface $theme_manager */
+  /** @var ThemeManagerInterface $theme_manager */
   $theme_manager = \Drupal::service('theme.manager');
-  /** @var \Drupal\Core\Render\RendererInterface $renderer */
+  /** @var RendererInterface $renderer */
   $renderer = \Drupal::service('renderer');
   $current_theme = $theme_manager->getActiveTheme()->getName();
   $template = [
diff --git a/modules/symfony_mailer_bc/tests/src/Functional/TestBcMail.php b/modules/symfony_mailer_bc/tests/src/Functional/TestBcMail.php
index 83f0614..efabc04 100644
--- a/modules/symfony_mailer_bc/tests/src/Functional/TestBcMail.php
+++ b/modules/symfony_mailer_bc/tests/src/Functional/TestBcMail.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\symfony_mailer_bc\Functional;
 
+use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\Tests\symfony_mailer\Functional\SymfonyMailerTestBase;
 
 /**
@@ -26,7 +27,7 @@ class TestBcMail extends SymfonyMailerTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser([
       'administer mailer',
@@ -70,7 +71,7 @@ class TestBcMail extends SymfonyMailerTestBase {
       ->set('admin', 'stark')
       ->save();
 
-    /** @var \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler */
+    /** @var ThemeHandlerInterface $theme_handler */
     $theme_handler = $this->container->get('theme_handler');
     $this->assertTrue($theme_handler->themeExists('test_bc_mail_theme'));
 
diff --git a/src/Address.php b/src/Address.php
index 0a1acef..a3d291a 100644
--- a/src/Address.php
+++ b/src/Address.php
@@ -39,7 +39,7 @@ class Address implements AddressInterface {
   /**
    * The account, or NULL.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
@@ -52,7 +52,7 @@ class Address implements AddressInterface {
    *   (Optional) The display name.
    * @param string $langcode
    *   (Optional) The language code.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (Optional) The account.
    */
   public function __construct(string $email, string $display_name = NULL, string $langcode = NULL, AccountInterface $account = NULL) {
diff --git a/src/AddressInterface.php b/src/AddressInterface.php
index 2490f76..66b5b34 100644
--- a/src/AddressInterface.php
+++ b/src/AddressInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\symfony_mailer;
 
+use Drupal\Core\Session\AccountInterface;
+use Symfony\Component\Mime\Address;
 /**
  * Defines the interface for an Email address.
  */
@@ -49,7 +51,7 @@ interface AddressInterface {
   /**
    * Gets the account associated with the recipient of this email.
    *
-   * @return \Drupal\Core\Session\AccountInterface
+   * @return AccountInterface
    *   The account.
    */
   public function getAccount();
@@ -57,7 +59,7 @@ interface AddressInterface {
   /**
    * Gets a Symfony address object from this address.
    *
-   * @return \Symfony\Component\Mime\Address
+   * @return Address
    *   The Symfony address.
    */
   public function getSymfony();
diff --git a/src/Annotation/MailerTransport.php b/src/Annotation/MailerTransport.php
index f9df55f..3f36767 100644
--- a/src/Annotation/MailerTransport.php
+++ b/src/Annotation/MailerTransport.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class MailerTransport extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +31,7 @@ class MailerTransport extends Plugin {
   /**
    * A short description of the mail plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/BaseEmailInterface.php b/src/BaseEmailInterface.php
index a30a970..b6fa05e 100644
--- a/src/BaseEmailInterface.php
+++ b/src/BaseEmailInterface.php
@@ -34,7 +34,7 @@ interface BaseEmailInterface {
   /**
    * Gets the sender address.
    *
-   * @return \Drupal\symfony_mailer\AddressInterface
+   * @return AddressInterface
    *   The sender address, or NULL if not set.
    */
   public function getSender(): ?AddressInterface;
@@ -64,7 +64,7 @@ interface BaseEmailInterface {
   /**
    * Gets the from addresses.
    *
-   * @return \Drupal\symfony_mailer\AddressInterface[]
+   * @return AddressInterface[]
    *   The from addresses.
    */
   public function getFrom(): array;
@@ -82,7 +82,7 @@ interface BaseEmailInterface {
   /**
    * Gets the reply-to addresses.
    *
-   * @return \Drupal\symfony_mailer\AddressInterface[]
+   * @return AddressInterface[]
    *   The reply-to addresses.
    */
   public function getReplyTo(): array;
@@ -102,7 +102,7 @@ interface BaseEmailInterface {
   /**
    * Gets the to addresses.
    *
-   * @return \Drupal\symfony_mailer\AddressInterface[]
+   * @return AddressInterface[]
    *   The to addresses.
    */
   public function getTo(): array;
@@ -120,7 +120,7 @@ interface BaseEmailInterface {
   /**
    * Gets the cc addresses.
    *
-   * @return \Drupal\symfony_mailer\AddressInterface[]
+   * @return AddressInterface[]
    *   The cc addresses.
    */
   public function getCc(): array;
@@ -138,7 +138,7 @@ interface BaseEmailInterface {
   /**
    * Gets the bcc addresses.
    *
-   * @return \Drupal\symfony_mailer\AddressInterface[]
+   * @return AddressInterface[]
    *   The bcc addresses.
    */
   public function getBcc(): array;
@@ -213,39 +213,33 @@ interface BaseEmailInterface {
    * @return $this
    */
   // public function attach(string $body, string $name = null, string $contentType = null);
-
   /**
    * @return $this
    */
   // public function attachFromPath(string $path, string $name = null, string $contentType = null);
-
   /**
    * @param string $body
    *
    * @return $this
    */
   // public function embed(string $body, string $name = null, string $contentType = null);
-
   /**
    * @return $this
    */
   // public function embedFromPath(string $path, string $name = null, string $contentType = null);
-
   /**
    * @return $this
    */
   // public function attachPart(DataPart $part);
-
   /**
    * @return array|DataPart[]
    */
   // public function getAttachments(): array;
   // @codingStandardsIgnoreEnd
-
   /**
    * Gets the headers object for getting or setting headers.
    *
-   * @return \Symfony\Component\Mime\Header\Headers
+   * @return Headers
    *   The headers object.
    */
   public function getHeaders(): Headers;
diff --git a/src/BaseEmailTrait.php b/src/BaseEmailTrait.php
index df98849..865a72c 100644
--- a/src/BaseEmailTrait.php
+++ b/src/BaseEmailTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer;
 
+use Symfony\Component\Mime\Email;
 use Symfony\Component\Mime\Header\Headers;
 
 /**
@@ -12,7 +13,7 @@ trait BaseEmailTrait {
   /**
    * The inner Symfony Email object.
    *
-   * @var \Symfony\Component\Mime\Email
+   * @var Email
    */
   protected $inner;
 
@@ -32,7 +33,7 @@ trait BaseEmailTrait {
   /**
    * The sender.
    *
-   * @var \Drupal\symfony_mailer\AddressInterface
+   * @var AddressInterface
    */
   protected $sender;
 
diff --git a/src/Commands/MailerCommands.php b/src/Commands/MailerCommands.php
index 784fae3..dcb07bb 100644
--- a/src/Commands/MailerCommands.php
+++ b/src/Commands/MailerCommands.php
@@ -14,14 +14,14 @@ class MailerCommands extends DrushCommands {
   /**
    * The email builder manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface
+   * @var EmailBuilderManagerInterface
    */
   protected $builderManager;
 
   /**
    * Constructs the MailerCommands object.
    *
-   * @param \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface $email_builder_manager
+   * @param EmailBuilderManagerInterface $email_builder_manager
    *   The email builder manager.
    */
   public function __construct(EmailBuilderManagerInterface $email_builder_manager) {
diff --git a/src/Controller/SymfonyMailerController.php b/src/Controller/SymfonyMailerController.php
index 6c8de48..0d90727 100644
--- a/src/Controller/SymfonyMailerController.php
+++ b/src/Controller/SymfonyMailerController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Drupal\symfony_mailer\Entity\MailerPolicy;
@@ -18,14 +19,14 @@ class SymfonyMailerController extends ControllerBase {
   /**
    * The email builder manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface
+   * @var EmailBuilderManagerInterface
    */
   protected $builderManager;
 
   /**
    * Constructs the MailerCommands object.
    *
-   * @param \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface $email_builder_manager
+   * @param EmailBuilderManagerInterface $email_builder_manager
    *   The email builder manager.
    */
   public function __construct(EmailBuilderManagerInterface $email_builder_manager) {
@@ -88,7 +89,7 @@ class SymfonyMailerController extends ControllerBase {
   /**
    * Imports all config not yet imported.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to the import status page.
    */
   public function importAll() {
@@ -103,7 +104,7 @@ class SymfonyMailerController extends ControllerBase {
    * @param string $id
    *   The ID.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to the import status page.
    */
   public function import(string $id) {
@@ -119,7 +120,7 @@ class SymfonyMailerController extends ControllerBase {
    * @param string $id
    *   The ID.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to the import status page.
    */
   public function skip(string $id) {
@@ -132,10 +133,10 @@ class SymfonyMailerController extends ControllerBase {
   /**
    * Sets the transport as the default.
    *
-   * @param \Drupal\symfony_mailer\MailerTransportInterface $mailer_transport
+   * @param MailerTransportInterface $mailer_transport
    *   The mailer transport entity.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to the transport listing page.
    */
   public function setAsDefault(MailerTransportInterface $mailer_transport) {
@@ -149,10 +150,10 @@ class SymfonyMailerController extends ControllerBase {
    *
    * @param string $policy_id
    *   The policy ID.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to the policy edit page.
    */
   public function createPolicy(string $policy_id, Request $request = NULL) {
diff --git a/src/Email.php b/src/Email.php
index 245a474..b9c212c 100644
--- a/src/Email.php
+++ b/src/Email.php
@@ -25,28 +25,28 @@ class Email implements InternalEmailInterface {
   /**
    * The mailer.
    *
-   * @var \Drupal\symfony_mailer\MailerInterface
+   * @var MailerInterface
    */
   protected $mailer;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
 
@@ -61,7 +61,7 @@ class Email implements InternalEmailInterface {
   protected $subType;
 
   /**
-   * @var \Drupal\Core\Config\Entity\ConfigEntityInterface
+   * @var ConfigEntityInterface
    */
   protected $entity;
 
@@ -80,7 +80,7 @@ class Email implements InternalEmailInterface {
   /**
    * The email subject.
    *
-   * @var \Drupal\Component\Render\MarkupInterface|string
+   * @var MarkupInterface|string
    */
   protected $subject;
 
@@ -114,7 +114,7 @@ class Email implements InternalEmailInterface {
   /**
    * The account for the recipient (can be anonymous).
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
@@ -138,21 +138,21 @@ class Email implements InternalEmailInterface {
   /**
    * Constructs the Email object.
    *
-   * @param \Drupal\symfony_mailer\MailerInterface $mailer
+   * @param MailerInterface $mailer
    *   Mailer service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    * @param string $type
    *   Type. @see self::getType()
    * @param string $sub_type
    *   Sub-type. @see self::getSubType()
-   * @param \Drupal\Core\Config\Entity\ConfigEntityInterface|null $entity
+   * @param ConfigEntityInterface|null $entity
    *   (optional) Entity. @see self::getEntity()
    */
   public function __construct(MailerInterface $mailer, RendererInterface $renderer, EntityTypeManagerInterface $entity_type_manager, ThemeManagerInterface $theme_manager, ConfigFactoryInterface $config_factory, string $type, string $sub_type, ?ConfigEntityInterface $entity) {
@@ -172,13 +172,13 @@ class Email implements InternalEmailInterface {
    *
    * Use EmailFactory instead of calling this directly.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The current service container.
    * @param string $type
    *   Type. @see self::getType()
    * @param string $sub_type
    *   Sub-type. @see self::getSubType()
-   * @param \Drupal\Core\Config\Entity\ConfigEntityInterface|null $entity
+   * @param ConfigEntityInterface|null $entity
    *   (optional) Entity. @see self::getEntity()
    *
    * @return static
diff --git a/src/EmailFactory.php b/src/EmailFactory.php
index d1a3946..701ce09 100644
--- a/src/EmailFactory.php
+++ b/src/EmailFactory.php
@@ -15,32 +15,32 @@ class EmailFactory implements EmailFactoryInterface {
   /**
    * The email builder manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface
+   * @var EmailBuilderManagerInterface
    */
   protected $emailBuilderManager;
 
   /**
    * The email adjuster manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailAdjusterManager
+   * @var EmailAdjusterManager
    */
   protected $emailAdjusterManager;
 
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs the EmailFactory object.
    *
-   * @param \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface $email_builder_manager
+   * @param EmailBuilderManagerInterface $email_builder_manager
    *   The email builder manager.
-   * @param \Drupal\symfony_mailer\Processor\EmailAdjusterManager $email_adjuster_manager
+   * @param EmailAdjusterManager $email_adjuster_manager
    *   The email adjuster manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(EmailBuilderManagerInterface $email_builder_manager, EmailAdjusterManager $email_adjuster_manager, ModuleHandlerInterface $module_handler) {
@@ -82,12 +82,12 @@ class EmailFactory implements EmailFactoryInterface {
   /**
    * Initializes an email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to initialize.
    * @param mixed $params
    *   Parameters for building this email.
    *
-   * @return \Drupal\symfony_mailer\EmailInterface
+   * @return EmailInterface
    *   The email.
    */
   protected function initEmail(EmailInterface $email, ...$params) {
@@ -125,7 +125,7 @@ class EmailFactory implements EmailFactoryInterface {
   /**
    * Invokes hooks for an email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email.
    */
   public function invokeHooks(EmailInterface $email) {
diff --git a/src/EmailFactoryInterface.php b/src/EmailFactoryInterface.php
index bde0a75..bf38da0 100644
--- a/src/EmailFactoryInterface.php
+++ b/src/EmailFactoryInterface.php
@@ -19,7 +19,7 @@ interface EmailFactoryInterface {
    * @param mixed $params
    *   Parameters for building this email.
    *
-   * @return \Drupal\symfony_mailer\EmailInterface
+   * @return EmailInterface
    *   A new email object.
    */
   public function sendModuleEmail(string $module, string $sub_type, ...$params);
@@ -27,14 +27,14 @@ interface EmailFactoryInterface {
   /**
    * Send an email related to a config entity.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityInterface $entity
+   * @param ConfigEntityInterface $entity
    *   Entity. @see \Drupal\symfony_mailer\EmailInterface::getEntity()
    * @param string $sub_type
    *   Sub-type. @see \Drupal\symfony_mailer\EmailInterface::getSubType()
    * @param mixed $params
    *   Parameters for building this email.
    *
-   * @return \Drupal\symfony_mailer\EmailInterface
+   * @return EmailInterface
    *   A new email object.
    */
   public function sendEntityEmail(ConfigEntityInterface $entity, string $sub_type, ...$params);
@@ -53,7 +53,7 @@ interface EmailFactoryInterface {
    * @param mixed $params
    *   Parameters for building this email.
    *
-   * @return \Drupal\symfony_mailer\EmailInterface
+   * @return EmailInterface
    *   A new email object.
    */
   public function newModuleEmail(string $module, string $sub_type, ...$params);
@@ -65,14 +65,14 @@ interface EmailFactoryInterface {
    * Normally it is recommended to call ::sendEntityMail() instead, and allow
    * the EmailBuilder to create the mail.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityInterface $entity
+   * @param ConfigEntityInterface $entity
    *   Entity. @see \Drupal\symfony_mailer\EmailInterface::getEntity()
    * @param string $sub_type
    *   Sub-type. @see \Drupal\symfony_mailer\EmailInterface::getSubType()
    * @param mixed $params
    *   Parameters for building this email.
    *
-   * @return \Drupal\symfony_mailer\EmailInterface
+   * @return EmailInterface
    *   A new email object.
    */
   public function newEntityEmail(ConfigEntityInterface $entity, string $sub_type, ...$params);
diff --git a/src/EmailInterface.php b/src/EmailInterface.php
index 4afb305..5fd1537 100644
--- a/src/EmailInterface.php
+++ b/src/EmailInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\symfony_mailer;
 
+use Drupal\Core\Session\AccountInterface;
+use Drupal\Component\Render\MarkupInterface;
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityInterface;
 
 /**
@@ -157,7 +160,7 @@ interface EmailInterface extends BaseEmailInterface {
    *
    * Valid: after rendering.
    *
-   * @return \Drupal\Core\Session\AccountInterface
+   * @return AccountInterface
    *   The account.
    */
   public function getAccount();
@@ -183,7 +186,7 @@ interface EmailInterface extends BaseEmailInterface {
    *
    * Valid: before rendering.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to render.
    * @param string $view_mode
    *   (optional) The view mode that should be used to render the entity.
@@ -205,7 +208,7 @@ interface EmailInterface extends BaseEmailInterface {
   /**
    * Sets the email subject.
    *
-   * @param \Drupal\Component\Render\MarkupInterface|string $subject
+   * @param MarkupInterface|string $subject
    *   The email subject.
    * @param bool $replace
    *   (Optional) TRUE to replace variables in the email subject.
@@ -217,7 +220,7 @@ interface EmailInterface extends BaseEmailInterface {
   /**
    * Gets the email subject.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The email subject, or NULL if not set.
    */
   public function getSubject();
@@ -285,7 +288,7 @@ interface EmailInterface extends BaseEmailInterface {
    * The ID of this entity can be used to select a specific template or apply
    * specific policy configuration.
    *
-   * @return \Drupal\Core\Config\Entity\ConfigEntityInterface
+   * @return ConfigEntityInterface
    *   Entity, or NULL if there is no associated entity.
    */
   public function getEntity();
diff --git a/src/Entity/MailerPolicy.php b/src/Entity/MailerPolicy.php
index 25284ba..e0d1f93 100644
--- a/src/Entity/MailerPolicy.php
+++ b/src/Entity/MailerPolicy.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\symfony_mailer\Entity;
 
+use Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface;
+use Drupal\symfony_mailer\Processor\EmailAdjusterManager;
+use Drupal\Core\Plugin\DefaultLazyPluginCollection;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ -53,14 +56,14 @@ class MailerPolicy extends ConfigEntityBase implements EntityWithPluginCollectio
   /**
    * The email builder manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface
+   * @var EmailBuilderManagerInterface
    */
   protected $emailBuilderManager;
 
   /**
    * The email adjuster manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailAdjusterManager
+   * @var EmailAdjusterManager
    */
   protected $emailAdjusterManager;
 
@@ -85,7 +88,7 @@ class MailerPolicy extends ConfigEntityBase implements EntityWithPluginCollectio
   /**
    * The collection of email adjuster plug-ins configured in this policy.
    *
-   * @var \Drupal\Core\Plugin\DefaultLazyPluginCollection
+   * @var DefaultLazyPluginCollection
    */
   protected $pluginCollection;
 
@@ -138,7 +141,7 @@ class MailerPolicy extends ConfigEntityBase implements EntityWithPluginCollectio
   /**
    * Gets the config entity this policy applies to.
    *
-   * @return \Drupal\Core\Config\Entity\ConfigEntityInterface
+   * @return ConfigEntityInterface
    *   Entity, or NULL if the policy applies to all entities.
    */
   public function getEntity() {
@@ -231,7 +234,7 @@ class MailerPolicy extends ConfigEntityBase implements EntityWithPluginCollectio
   /**
    * Returns the ordered collection of configured adjuster plugin instances.
    *
-   * @return \Drupal\symfony_mailer\Processor\AdjusterPluginCollection
+   * @return AdjusterPluginCollection
    *   The adjuster collection.
    */
   public function adjusters() {
diff --git a/src/Entity/MailerTransport.php b/src/Entity/MailerTransport.php
index 1f96891..4469c95 100644
--- a/src/Entity/MailerTransport.php
+++ b/src/Entity/MailerTransport.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer\Entity;
 
+use Drupal\Component\Plugin\LazyPluginCollection;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
 use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;
@@ -73,7 +74,7 @@ class MailerTransport extends ConfigEntityBase implements MailerTransportInterfa
   /**
    * The plugin collection that holds the plugin for this entity.
    *
-   * @var \Drupal\Core\Plugin\DefaultSingleLazyPluginCollection
+   * @var DefaultSingleLazyPluginCollection
    */
   protected $pluginCollection;
 
@@ -87,7 +88,7 @@ class MailerTransport extends ConfigEntityBase implements MailerTransportInterfa
   /**
    * Encapsulates the creation of the block's LazyPluginCollection.
    *
-   * @return \Drupal\Component\Plugin\LazyPluginCollection
+   * @return LazyPluginCollection
    *   The block's plugin collection.
    */
   protected function getPluginCollection() {
@@ -146,7 +147,7 @@ class MailerTransport extends ConfigEntityBase implements MailerTransportInterfa
   /**
    * Gets the default transport.
    *
-   * @return \Drupal\symfony_mailer\MailerTransportInterface
+   * @return MailerTransportInterface
    *   The default transport.
    */
   public static function loadDefault() {
diff --git a/src/Form/TestEmailForm.php b/src/Form/TestEmailForm.php
index cba91c3..6ed309e 100644
--- a/src/Form/TestEmailForm.php
+++ b/src/Form/TestEmailForm.php
@@ -16,23 +16,23 @@ class TestEmailForm extends FormBase {
   /**
    * The email factory service.
    *
-   * @var \Drupal\symfony_mailer\EmailFactoryInterface
+   * @var EmailFactoryInterface
    */
   protected $emailFactory;
 
   /**
    * The mailer helper.
    *
-   * @var \Drupal\symfony_mailer\MailerHelperInterface
+   * @var MailerHelperInterface
    */
   protected $helper;
 
   /**
    * Constructs a new TestForm.
    *
-   * @param \Drupal\symfony_mailer\EmailFactoryInterface $email_factory
+   * @param EmailFactoryInterface $email_factory
    *   The email factory service.
-   * @param \Drupal\symfony_mailer\MailerHelperInterface $helper
+   * @param MailerHelperInterface $helper
    *   The mailer helper.
    */
   public function __construct(EmailFactoryInterface $email_factory, MailerHelperInterface $helper) {
diff --git a/src/Form/TransportAddButtonForm.php b/src/Form/TransportAddButtonForm.php
index bc74155..7a1f542 100644
--- a/src/Form/TransportAddButtonForm.php
+++ b/src/Form/TransportAddButtonForm.php
@@ -15,14 +15,14 @@ class TransportAddButtonForm extends FormBase {
   /**
    * The mailer transport plugin manager.
    *
-   * @var \Drupal\symfony_mailer\TransportManager
+   * @var TransportManager
    */
   protected $manager;
 
   /**
    * Constructs a new TransportAddButtonForm.
    *
-   * @param \Drupal\symfony_mailer\TransportManager $manager
+   * @param TransportManager $manager
    *   The mailer transport plugin manager.
    */
   public function __construct(TransportManager $manager) {
diff --git a/src/Form/TransportForm.php b/src/Form/TransportForm.php
index 985605b..8e815fd 100644
--- a/src/Form/TransportForm.php
+++ b/src/Form/TransportForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer\Form;
 
+use Drupal\symfony_mailer\TransportPluginInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -13,7 +14,7 @@ class TransportForm extends EntityForm {
   /**
    * The transport plugin being configured.
    *
-   * @var \Drupal\symfony_mailer\TransportPluginInterface
+   * @var TransportPluginInterface
    */
   protected $plugin;
 
diff --git a/src/InternalEmailInterface.php b/src/InternalEmailInterface.php
index 4e7a6ae..9dea0f8 100644
--- a/src/InternalEmailInterface.php
+++ b/src/InternalEmailInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer;
 
+use Symfony\Component\Mime\Email;
 use Drupal\Core\Session\AccountInterface;
 
 /**
@@ -34,7 +35,7 @@ interface InternalEmailInterface extends EmailInterface {
    *
    * @param string $langcode
    *   The language code.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account.
    *
    * @return $this
@@ -63,7 +64,7 @@ interface InternalEmailInterface extends EmailInterface {
    *
    * Valid: after rendering.
    *
-   * @return \Symfony\Component\Mime\Email
+   * @return Email
    *   Inner Symfony email.
    */
   public function getSymfonyEmail();
diff --git a/src/Mailer.php b/src/Mailer.php
index d1dfaaf..76e00d4 100644
--- a/src/Mailer.php
+++ b/src/Mailer.php
@@ -31,86 +31,86 @@ class Mailer implements MailerInterface {
   /**
    * The event dispatcher to notify of routes.
    *
-   * @var \Symfony\Contracts\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $dispatcher;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The language default.
    *
-   * @var \Drupal\Core\Language\LanguageDefault
+   * @var LanguageDefault
    */
   protected $languageDefault;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
 
   /**
    * The theme initialization.
    *
-   * @var \Drupal\Core\Theme\ThemeInitializationInterface
+   * @var ThemeInitializationInterface
    */
   protected $themeInitialization;
 
   /**
    * Account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
   /**
    * Constructs the Mailer object.
    *
-   * @param \Symfony\Contracts\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Language\LanguageDefault $language_default
+   * @param LanguageDefault $language_default
    *   The default language.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger channel factory.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
-   * @param \Drupal\Core\Theme\ThemeInitializationInterface $theme_initialization
+   * @param ThemeInitializationInterface $theme_initialization
    *   The theme initialization.
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $account_switcher
+   * @param AccountSwitcherInterface $account_switcher
    *   The account switcher service.
    */
   public function __construct(EventDispatcherInterface $dispatcher, RendererInterface $renderer, LanguageDefault $language_default, LanguageManagerInterface $language_manager, LoggerChannelFactoryInterface $logger_factory, AccountInterface $account, ThemeManagerInterface $theme_manager, ThemeInitializationInterface $theme_initialization, AccountSwitcherInterface $account_switcher) {
@@ -151,7 +151,7 @@ class Mailer implements MailerInterface {
   /**
    * Sends an email.
    *
-   * @param \Drupal\symfony_mailer\InternalEmailInterface $email
+   * @param InternalEmailInterface $email
    *   The email to send.
    *
    * @return bool
diff --git a/src/MailerHelper.php b/src/MailerHelper.php
index a994fa2..1feb40d 100644
--- a/src/MailerHelper.php
+++ b/src/MailerHelper.php
@@ -28,41 +28,41 @@ class MailerHelper implements MailerHelperInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The email adjuster manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailAdjusterManager
+   * @var EmailAdjusterManager
    */
   protected $adjusterManager;
 
   /**
    * The email builder manager.
    *
-   * @var \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface
+   * @var EmailBuilderManagerInterface
    */
   protected $builderManager;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs the MailerHelper object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\symfony_mailer\Processor\EmailAdjusterManager $email_adjuster_manager
+   * @param EmailAdjusterManager $email_adjuster_manager
    *   The email adjuster manager.
-   * @param \Drupal\symfony_mailer\Processor\EmailBuilderManagerInterface $email_builder_manager
+   * @param EmailBuilderManagerInterface $email_builder_manager
    *   The email builder manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EmailAdjusterManager $email_adjuster_manager, EmailBuilderManagerInterface $email_builder_manager, ConfigFactoryInterface $config_factory) {
diff --git a/src/MailerHelperInterface.php b/src/MailerHelperInterface.php
index 674b298..3dbe2a2 100644
--- a/src/MailerHelperInterface.php
+++ b/src/MailerHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -27,7 +28,7 @@ interface MailerHelperInterface {
    * @param string $langcode
    *   (Optional) Language code to add to the address.
    *
-   * @return \Drupal\symfony_mailer\Address[]
+   * @return Address[]
    *   The parsed address structures.
    */
   public function parseAddress(string $encoded, string $langcode = NULL);
@@ -37,7 +38,7 @@ interface MailerHelperInterface {
    *
    * This function should only be used for migration.
    *
-   * @param \Drupal\symfony_mailer\Address[] $addresses
+   * @param Address[] $addresses
    *   Array of address structures.
    *
    * @return array
@@ -48,7 +49,7 @@ interface MailerHelperInterface {
   /**
    * Returns the configuration factory.
    *
-   * @return \Drupal\Core\Config\ConfigFactoryInterface
+   * @return ConfigFactoryInterface
    *   The config factory.
    */
   public function config();
@@ -59,7 +60,7 @@ interface MailerHelperInterface {
    * The element is designed for insertion into a config edit page for an
    * entity that has a related EmailBuilder.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityInterface $entity
+   * @param ConfigEntityInterface $entity
    *   Config entity being edited.
    * @param string $subtype
    *   Sub-type of the policies to show.
diff --git a/src/MailerHelperTrait.php b/src/MailerHelperTrait.php
index 05f8f7f..3fdb745 100644
--- a/src/MailerHelperTrait.php
+++ b/src/MailerHelperTrait.php
@@ -10,14 +10,14 @@ trait MailerHelperTrait {
   /**
    * The mailer helper.
    *
-   * @var \Drupal\symfony_mailer\MailerHelperInterface
+   * @var MailerHelperInterface
    */
   protected $helper;
 
   /**
    * Sets the mailer helper.
    *
-   * @param \Drupal\symfony_mailer\MailerHelperInterface $helper
+   * @param MailerHelperInterface $helper
    *   The mailer helper.
    */
   public function setHelper(MailerHelperInterface $helper) {
@@ -27,7 +27,7 @@ trait MailerHelperTrait {
   /**
    * Gets the mailer helper.
    *
-   * @return \Drupal\symfony_mailer\MailerHelperInterface
+   * @return MailerHelperInterface
    *   The mailer helper.
    */
   public function helper() {
diff --git a/src/MailerInterface.php b/src/MailerInterface.php
index 6945502..10ecb67 100644
--- a/src/MailerInterface.php
+++ b/src/MailerInterface.php
@@ -10,7 +10,7 @@ interface MailerInterface {
   /**
    * Sends an email.
    *
-   * @param \Drupal\symfony_mailer\InternalEmailInterface $email
+   * @param InternalEmailInterface $email
    *   The email to send.
    *
    * @return bool
diff --git a/src/MailerPolicyListBuilder.php b/src/MailerPolicyListBuilder.php
index 574284f..6c0d297 100644
--- a/src/MailerPolicyListBuilder.php
+++ b/src/MailerPolicyListBuilder.php
@@ -17,7 +17,7 @@ class MailerPolicyListBuilder extends ConfigEntityListBuilder implements MailerP
   /**
    * Overridden list of entities.
    *
-   * @var \Drupal\Core\Entity\EntityInterface[]
+   * @var EntityInterface[]
    */
   protected $overrideEntities;
 
diff --git a/src/MailerTransportInterface.php b/src/MailerTransportInterface.php
index e1f5fde..f2b0c12 100644
--- a/src/MailerTransportInterface.php
+++ b/src/MailerTransportInterface.php
@@ -12,7 +12,7 @@ interface MailerTransportInterface extends ConfigEntityInterface {
   /**
    * Returns the transport plugin.
    *
-   * @return \Drupal\symfony_mailer\TransportPluginInterface
+   * @return TransportPluginInterface
    *   The transport plugin used by this mailer transport entity.
    */
   public function getPlugin();
diff --git a/src/MailerTransportListBuilder.php b/src/MailerTransportListBuilder.php
index 6623efa..7ef78e9 100644
--- a/src/MailerTransportListBuilder.php
+++ b/src/MailerTransportListBuilder.php
@@ -18,18 +18,18 @@ class MailerTransportListBuilder extends ConfigEntityListBuilder {
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * Constructs a new MailerTransportListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, FormBuilderInterface $form_builder) {
diff --git a/src/Plugin/EmailAdjuster/InlineCssEmailAdjuster.php b/src/Plugin/EmailAdjuster/InlineCssEmailAdjuster.php
index 51e6563..faa40e1 100644
--- a/src/Plugin/EmailAdjuster/InlineCssEmailAdjuster.php
+++ b/src/Plugin/EmailAdjuster/InlineCssEmailAdjuster.php
@@ -25,14 +25,14 @@ class InlineCssEmailAdjuster extends EmailAdjusterBase implements ContainerFacto
   /**
    * The asset resolver.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;
 
   /**
    * The CSS inliner.
    *
-   * @var \TijsVerkoyen\CssToInlineStyles\CssToInlineStyles
+   * @var CssToInlineStyles
    */
   protected $cssInliner;
 
@@ -43,7 +43,7 @@ class InlineCssEmailAdjuster extends EmailAdjusterBase implements ContainerFacto
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   The asset resolver.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AssetResolverInterface $asset_resolver) {
diff --git a/src/Plugin/EmailAdjuster/ThemeEmailAdjuster.php b/src/Plugin/EmailAdjuster/ThemeEmailAdjuster.php
index 4411f28..66532f3 100644
--- a/src/Plugin/EmailAdjuster/ThemeEmailAdjuster.php
+++ b/src/Plugin/EmailAdjuster/ThemeEmailAdjuster.php
@@ -26,14 +26,14 @@ class ThemeEmailAdjuster extends EmailAdjusterBase implements ContainerFactoryPl
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
 
@@ -41,7 +41,7 @@ class ThemeEmailAdjuster extends EmailAdjusterBase implements ContainerFactoryPl
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -54,11 +54,11 @@ class ThemeEmailAdjuster extends EmailAdjusterBase implements ContainerFactoryPl
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, ThemeManagerInterface $theme_manager, ThemeHandlerInterface $theme_handler) {
diff --git a/src/Processor/EmailAdjusterInterface.php b/src/Processor/EmailAdjusterInterface.php
index 197b6bd..1418ebc 100644
--- a/src/Processor/EmailAdjusterInterface.php
+++ b/src/Processor/EmailAdjusterInterface.php
@@ -21,7 +21,7 @@ interface EmailAdjusterInterface extends EmailProcessorInterface {
    *
    * @param array $form
    *   A minimally pre-populated form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the (entire) configuration form.
    *
    * @return array
diff --git a/src/Processor/EmailAdjusterManager.php b/src/Processor/EmailAdjusterManager.php
index 1b8854b..f72eaf2 100644
--- a/src/Processor/EmailAdjusterManager.php
+++ b/src/Processor/EmailAdjusterManager.php
@@ -19,9 +19,9 @@ class EmailAdjusterManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ -33,7 +33,7 @@ class EmailAdjusterManager extends DefaultPluginManager {
   /**
    * Applies email policy to an email message.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email.
    */
   public function applyPolicy(EmailInterface $email) {
diff --git a/src/Processor/EmailBuilderInterface.php b/src/Processor/EmailBuilderInterface.php
index 59395e2..6e72407 100644
--- a/src/Processor/EmailBuilderInterface.php
+++ b/src/Processor/EmailBuilderInterface.php
@@ -13,7 +13,7 @@ interface EmailBuilderInterface extends EmailProcessorInterface {
   /**
    * Saves the parameters for a newly created email.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to modify.
    */
   public function createParams(EmailInterface $email);
@@ -25,7 +25,7 @@ interface EmailBuilderInterface extends EmailProcessorInterface {
    * (with module symfony_mailer_bc enabled). This function will eventually be
    * deprecated and removed.
    *
-   * @param \Drupal\symfony_mailer\EmailFactoryInterface $factory
+   * @param EmailFactoryInterface $factory
    *   The Email Factory for creating the email.
    * @param array $message
    *   The array to create from.
diff --git a/src/Processor/EmailBuilderManager.php b/src/Processor/EmailBuilderManager.php
index f6a7b57..a212b80 100644
--- a/src/Processor/EmailBuilderManager.php
+++ b/src/Processor/EmailBuilderManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer\Processor;
 
+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,14 +20,14 @@ class EmailBuilderManager extends DefaultPluginManager implements EmailBuilderMa
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The key value storage.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected $keyValue;
 
@@ -43,13 +44,13 @@ class EmailBuilderManager extends DefaultPluginManager implements EmailBuilderMa
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key value store.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, EntityTypeManagerInterface $entity_type_manager, KeyValueFactoryInterface $key_value_factory) {
diff --git a/src/Processor/EmailProcessorInterface.php b/src/Processor/EmailProcessorInterface.php
index 209aaa3..c3f9dcc 100644
--- a/src/Processor/EmailProcessorInterface.php
+++ b/src/Processor/EmailProcessorInterface.php
@@ -24,7 +24,7 @@ interface EmailProcessorInterface {
   /**
    * Initializes an email to call this email processor.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email to initialize.
    */
   public function init(EmailInterface $email);
diff --git a/src/Processor/TokenProcessorTrait.php b/src/Processor/TokenProcessorTrait.php
index 1136726..39ba211 100644
--- a/src/Processor/TokenProcessorTrait.php
+++ b/src/Processor/TokenProcessorTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer\Processor;
 
+use Drupal\Core\Utility\Token;
 use Drupal\Component\Render\PlainTextOutput;
 use Drupal\Component\Utility\Html;
 use Drupal\symfony_mailer\EmailInterface;
@@ -25,7 +26,7 @@ trait TokenProcessorTrait {
    * {@inheritdoc}
    */
   public function postRender(EmailInterface $email) {
-    /** @var \Drupal\Core\Utility\Token $token */
+    /** @var Token $token */
     $token = \Drupal::token();
     $data = $this->data ?? $email->getParams();
 
diff --git a/src/TransportManager.php b/src/TransportManager.php
index 379e431..d2bbad8 100644
--- a/src/TransportManager.php
+++ b/src/TransportManager.php
@@ -17,9 +17,9 @@ class TransportManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/symfony_mailer.api.php b/symfony_mailer.api.php
index cd25e46..183b428 100644
--- a/symfony_mailer.api.php
+++ b/symfony_mailer.api.php
@@ -12,7 +12,7 @@ use Drupal\symfony_mailer\EmailInterface;
  *
  * The phase names are defined in EmailInterface::PHASE_NAMES.
  *
- * @param \Drupal\symfony_mailer\EmailInterface $email
+ * @param EmailInterface $email
  *   The email.
  */
 function hook_mailer_PHASE(EmailInterface $email) {
@@ -42,7 +42,7 @@ function hook_mailer_PHASE(EmailInterface $email) {
  *
  * The phase names are defined in EmailInterface::PHASE_NAMES.
  *
- * @param \Drupal\symfony_mailer\EmailInterface $email
+ * @param EmailInterface $email
  *   The email.
  */
 function hook_mailer_TYPE_PHASE(EmailInterface $email) {
@@ -53,7 +53,7 @@ function hook_mailer_TYPE_PHASE(EmailInterface $email) {
  *
  * The phase names are defined in EmailInterface::PHASE_NAMES.
  *
- * @param \Drupal\symfony_mailer\EmailInterface $email
+ * @param EmailInterface $email
  *   The email.
  */
 function hook_mailer_TYPE__SUBTYPE_PHASE(EmailInterface $email) {
diff --git a/tests/modules/symfony_mailer_test/src/MailerTestService.php b/tests/modules/symfony_mailer_test/src/MailerTestService.php
index c94844c..ca1d2fe 100644
--- a/tests/modules/symfony_mailer_test/src/MailerTestService.php
+++ b/tests/modules/symfony_mailer_test/src/MailerTestService.php
@@ -15,7 +15,7 @@ class MailerTestService implements MailerTestServiceInterface, EmailProcessorInt
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -24,7 +24,7 @@ class MailerTestService implements MailerTestServiceInterface, EmailProcessorInt
   /**
    * Constructs the MailerTestService.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(StateInterface $state) {
@@ -54,7 +54,7 @@ class MailerTestService implements MailerTestServiceInterface, EmailProcessorInt
   /**
    * Post-render function.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email.
    */
   public function postRender(EmailInterface $email) {
@@ -64,7 +64,7 @@ class MailerTestService implements MailerTestServiceInterface, EmailProcessorInt
   /**
    * Post-send function.
    *
-   * @param \Drupal\symfony_mailer\EmailInterface $email
+   * @param EmailInterface $email
    *   The email.
    */
   public function postSend(EmailInterface $email) {
diff --git a/tests/modules/symfony_mailer_test/src/MailerTestTrait.php b/tests/modules/symfony_mailer_test/src/MailerTestTrait.php
index f7b8d5b..a5b6b72 100644
--- a/tests/modules/symfony_mailer_test/src/MailerTestTrait.php
+++ b/tests/modules/symfony_mailer_test/src/MailerTestTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\symfony_mailer_test;
 
+use Symfony\Component\Mime\Email;
 use Drupal\Core\DestructableInterface;
 use Drupal\symfony_mailer\EmailInterface;
 use Drupal\symfony_mailer_test\MailerTestServiceInterface;
@@ -17,7 +18,7 @@ trait MailerTestTrait {
   /**
    * Gets the next email, removing it from the list.
    *
-   * @return \Symfony\Component\Mime\Email
+   * @return Email
    *   The email.
    */
   public function readMail() {
diff --git a/tests/src/Functional/SymfonyMailerTestBase.php b/tests/src/Functional/SymfonyMailerTestBase.php
index 24e14f3..9ef3d36 100644
--- a/tests/src/Functional/SymfonyMailerTestBase.php
+++ b/tests/src/Functional/SymfonyMailerTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\symfony_mailer\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\symfony_mailer_test\MailerTestTrait;
 
@@ -29,7 +30,7 @@ abstract class SymfonyMailerTestBase extends BrowserTestBase {
   /**
    * A user with permission to manage mailer settings.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -43,7 +44,7 @@ abstract class SymfonyMailerTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->config('system.site')->set('name', $this->siteName)->save();
     $this->adminUser = $this->drupalCreateUser(['administer mailer']);
@@ -52,7 +53,7 @@ abstract class SymfonyMailerTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     parent::tearDown();
     // @todo Test for no mail not working?
     $this->noMail();
