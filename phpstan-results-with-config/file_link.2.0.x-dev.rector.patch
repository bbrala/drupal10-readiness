diff --git a/src/FileLinkInterface.php b/src/FileLinkInterface.php
index 4fcd704..e91b167 100644
--- a/src/FileLinkInterface.php
+++ b/src/FileLinkInterface.php
@@ -29,7 +29,7 @@ interface FileLinkInterface {
   /**
    * Sets the latest HTTP response.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   The last response to be stored.
    *
    * @return $this
@@ -39,7 +39,7 @@ interface FileLinkInterface {
   /**
    * Gets the latest stored HTTP response.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   A response object.
    */
   public function getResponse();
@@ -54,7 +54,7 @@ interface FileLinkInterface {
   /**
    * Sets the exception throw by the last HTTP client request.
    *
-   * @param \GuzzleHttp\Exception\RequestException $exception
+   * @param RequestException $exception
    *   The last Guzzle request exception.
    *
    * @return $this
@@ -64,7 +64,7 @@ interface FileLinkInterface {
   /**
    * Gets the last Guzzle client exception.
    *
-   * @return \GuzzleHttp\Exception\RequestException
+   * @return RequestException
    *   The last Guzzle client exception.
    */
   public function getException();
diff --git a/src/Plugin/Field/FieldType/FileLinkItem.php b/src/Plugin/Field/FieldType/FileLinkItem.php
index c5fa868..63c623f 100644
--- a/src/Plugin/Field/FieldType/FileLinkItem.php
+++ b/src/Plugin/Field/FieldType/FileLinkItem.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\file_link\Plugin\Field\FieldType;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use GuzzleHttp\Client;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionableInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
@@ -44,35 +47,35 @@ class FileLinkItem extends LinkItem implements FileLinkInterface {
   /**
    * The HTTP response of the last client request, if any.
    *
-   * @var \Psr\Http\Message\ResponseInterface
+   * @var ResponseInterface
    */
   protected $response = NULL;
 
   /**
    * The exception throw by the the last HTTP client request, if any.
    *
-   * @var \GuzzleHttp\Exception\RequestException
+   * @var RequestException
    */
   protected $exception = NULL;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The HTTP client service.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * The queue to use when deferring the request to get the metadata.
    *
-   * @var \Drupal\Core\Queue\QueueInterface
+   * @var QueueInterface
    */
   protected $queue;
 
@@ -188,7 +191,7 @@ class FileLinkItem extends LinkItem implements FileLinkInterface {
 
     $entity = $this->getEntity();
     $storage = $this->getEntityTypeManager()->getStorage($entity->getEntityTypeId());
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $original */
+    /** @var ContentEntityInterface $original */
     $original = $entity->isNew() ? NULL : $storage->loadUnchanged($entity->id());
     $field_name = $this->getFieldDefinition()->getName();
 
@@ -354,7 +357,7 @@ class FileLinkItem extends LinkItem implements FileLinkInterface {
   /**
    * Returns the entity type manager service.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity type manager service.
    */
   protected function getEntityTypeManager() {
@@ -367,7 +370,7 @@ class FileLinkItem extends LinkItem implements FileLinkInterface {
   /**
    * Returns the HTTP client service.
    *
-   * @return \GuzzleHttp\Client
+   * @return Client
    *   The Guzzle client.
    */
   protected function getHttpClient() {
@@ -380,7 +383,7 @@ class FileLinkItem extends LinkItem implements FileLinkInterface {
   /**
    * Returns the queue.
    *
-   * @return \Drupal\Core\Queue\QueueInterface
+   * @return QueueInterface
    *   The queue for deferred entity updates.
    */
   protected function getQueue(): QueueInterface {
@@ -404,7 +407,7 @@ class FileLinkItem extends LinkItem implements FileLinkInterface {
   /**
    * Check whereas given response is supported by field type.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   Response object.
    *
    * @return bool
diff --git a/src/Plugin/QueueWorker/FileLinkMetadataUpdate.php b/src/Plugin/QueueWorker/FileLinkMetadataUpdate.php
index 6be4c97..297f458 100644
--- a/src/Plugin/QueueWorker/FileLinkMetadataUpdate.php
+++ b/src/Plugin/QueueWorker/FileLinkMetadataUpdate.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_link\Plugin\QueueWorker;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -30,7 +31,7 @@ class FileLinkMetadataUpdate extends QueueWorkerBase implements ContainerFactory
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -43,7 +44,7 @@ class FileLinkMetadataUpdate extends QueueWorkerBase implements ContainerFactory
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entityTypeManager) {
@@ -70,7 +71,7 @@ class FileLinkMetadataUpdate extends QueueWorkerBase implements ContainerFactory
     if ($data instanceof FileLinkQueueItem) {
       $storage = $this->entityTypeManager->getStorage($data->getType());
 
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       if ($data->getRevisionId() !== NULL) {
         $entity = $storage->loadRevision($data->getRevisionId());
       }
diff --git a/src/Plugin/Validation/Constraint/LinkToFileConstraint.php b/src/Plugin/Validation/Constraint/LinkToFileConstraint.php
index 4643e98..ef5b9e2 100644
--- a/src/Plugin/Validation/Constraint/LinkToFileConstraint.php
+++ b/src/Plugin/Validation/Constraint/LinkToFileConstraint.php
@@ -27,7 +27,7 @@ class LinkToFileConstraint extends Constraint implements ConstraintValidatorInte
   /**
    * Validation execution context.
    *
-   * @var \Symfony\Component\Validator\Context\ExecutionContextInterface
+   * @var ExecutionContextInterface
    */
   protected $context;
 
@@ -49,7 +49,7 @@ class LinkToFileConstraint extends Constraint implements ConstraintValidatorInte
    * {@inheritdoc}
    */
   public function validate($link, Constraint $constraint) {
-    /** @var \Drupal\file_link\Plugin\Field\FieldType\FileLinkItem $link */
+    /** @var FileLinkItem $link */
     if ($link->isEmpty()) {
       return;
     }
@@ -136,7 +136,7 @@ class LinkToFileConstraint extends Constraint implements ConstraintValidatorInte
   /**
    * Check whereas given link field needs an extension.
    *
-   * @param \Drupal\file_link\Plugin\Field\FieldType\FileLinkItem $link
+   * @param FileLinkItem $link
    *   Link item.
    *
    * @return bool
@@ -149,7 +149,7 @@ class LinkToFileConstraint extends Constraint implements ConstraintValidatorInte
   /**
    * Check whereas given link field needs an extension.
    *
-   * @param \Drupal\file_link\Plugin\Field\FieldType\FileLinkItem $link
+   * @param FileLinkItem $link
    *   Link item.
    *
    * @return bool
@@ -168,7 +168,7 @@ class LinkToFileConstraint extends Constraint implements ConstraintValidatorInte
    *
    * @param string $basename
    *   URL path basename.
-   * @param \Drupal\file_link\Plugin\Field\FieldType\FileLinkItem $link
+   * @param FileLinkItem $link
    *   Link item.
    *
    * @return bool
diff --git a/tests/modules/file_link_test/file_link_test.module b/tests/modules/file_link_test/file_link_test.module
index e7b2aa0..1f86c0e 100644
--- a/tests/modules/file_link_test/file_link_test.module
+++ b/tests/modules/file_link_test/file_link_test.module
@@ -5,7 +5,7 @@ use Drupal\Core\Entity\EntityInterface;
 /**
  * Get the count of how many times an entity was saved.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity.
  *
  * @return int
diff --git a/tests/modules/file_link_test/src/Controller/RedirectController.php b/tests/modules/file_link_test/src/Controller/RedirectController.php
index b07e3fd..353be25 100644
--- a/tests/modules/file_link_test/src/Controller/RedirectController.php
+++ b/tests/modules/file_link_test/src/Controller/RedirectController.php
@@ -28,7 +28,7 @@ class RedirectController extends ControllerBase {
    *   An absolute URL.
    */
   protected static function getFullUrl($path) {
-    return Url::fromUri('base:/' . drupal_get_path('module', 'file_link_test') . $path, ['absolute' => TRUE])->toString();
+    return Url::fromUri('base:/' . \Drupal::service('extension.list.module')->getPath('file_link_test') . $path, ['absolute' => TRUE])->toString();
   }
 
 }
diff --git a/tests/modules/file_link_test/src/HttpMiddleware.php b/tests/modules/file_link_test/src/HttpMiddleware.php
index 64dcabf..15672f3 100644
--- a/tests/modules/file_link_test/src/HttpMiddleware.php
+++ b/tests/modules/file_link_test/src/HttpMiddleware.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_link_test;
 
+use GuzzleHttp\Promise\PromiseInterface;
 use Drupal\Core\Site\Settings;
 use GuzzleHttp\Promise\FulfilledPromise;
 use GuzzleHttp\Psr7\Response;
@@ -53,7 +54,7 @@ class HttpMiddleware {
    *
    * @param RequestInterface $request
    *
-   * @return \GuzzleHttp\Promise\PromiseInterface
+   * @return PromiseInterface
    */
   protected function createPromise(RequestInterface $request, $fixture) {
     // Create a response from the fixture.
diff --git a/tests/src/Functional/FileLinkRedirectTest.php b/tests/src/Functional/FileLinkRedirectTest.php
index d62d99f..d17a942 100644
--- a/tests/src/Functional/FileLinkRedirectTest.php
+++ b/tests/src/Functional/FileLinkRedirectTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\file_link\Functional;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\TypedData\Exception\MissingDataException;
+use Drupal\file_link\Plugin\Field\FieldType\FileLinkItem;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Url;
 use Drupal\entity_test\Entity\EntityTest;
@@ -43,8 +46,8 @@ class FileLinkRedirectTest extends BrowserTestBase {
    * @param $format
    *    Expected file format.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
-   * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws EntityStorageException
+   * @throws MissingDataException
    *
    * @dataProvider redirectDataProvider
    */
@@ -55,7 +58,7 @@ class FileLinkRedirectTest extends BrowserTestBase {
     ]);
     $entity->save();
 
-    /** @var \Drupal\file_link\Plugin\Field\FieldType\FileLinkItem $file_link */
+    /** @var FileLinkItem $file_link */
     $file_link = $entity->get('url_without_extension')->first();
     $this->assertEquals($size, $file_link->getSize());
     $this->assertEquals($format, $file_link->getFormat());
@@ -64,7 +67,7 @@ class FileLinkRedirectTest extends BrowserTestBase {
   /**
    * Test not valid redirect.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function testNotValidRedirect() {
     $entity = EntityTest::create(['name' => 'Foo', 'type' => 'article']);
diff --git a/tests/src/Kernel/FileLinkDeferredTest.php b/tests/src/Kernel/FileLinkDeferredTest.php
index 26bb9a8..2d888eb 100644
--- a/tests/src/Kernel/FileLinkDeferredTest.php
+++ b/tests/src/Kernel/FileLinkDeferredTest.php
@@ -33,7 +33,7 @@ class FileLinkDeferredTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['file_link_test']);
@@ -58,7 +58,7 @@ class FileLinkDeferredTest extends KernelTestBase {
     ];
     new Settings($settings);
 
-    /** @var \Drupal\entity_test\Entity\EntityTest $entity */
+    /** @var EntityTest $entity */
     $entity = EntityTest::create(['name' => 'Foo', 'type' => 'article']);
 
     $entity->get('deferred_url')->set(0, ['uri' => 'http://file_link.drupal/latentcy-test-file1.txt']);
@@ -132,7 +132,7 @@ class FileLinkDeferredTest extends KernelTestBase {
     ];
     new Settings($settings);
 
-    /** @var \Drupal\entity_test\Entity\EntityTest $entity */
+    /** @var EntityTest $entity */
     $entity = EntityTest::create(['name' => 'Foo', 'type' => 'article']);
 
     $entity->get('deferred_url')->set(0, ['uri' => 'http://file_link.drupal/latentcy-test-file.txt']);
diff --git a/tests/src/Kernel/FileLinkMultiValueTest.php b/tests/src/Kernel/FileLinkMultiValueTest.php
index 3635406..7f8e904 100644
--- a/tests/src/Kernel/FileLinkMultiValueTest.php
+++ b/tests/src/Kernel/FileLinkMultiValueTest.php
@@ -32,7 +32,7 @@ class FileLinkMultiValueTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['file_link_test']);
@@ -62,7 +62,7 @@ class FileLinkMultiValueTest extends KernelTestBase {
 
     new Settings($settings);
 
-    /** @var \Drupal\entity_test\Entity\EntityTest $entity */
+    /** @var EntityTest $entity */
     $entity = EntityTest::create(['name' => 'Foo', 'type' => 'article']);
 
     $entity->get('multivalue_url')->set(0, ['uri' => 'http://file_link.drupal/fancy-file-1.txt']);
diff --git a/tests/src/Kernel/FileLinkValidationTest.php b/tests/src/Kernel/FileLinkValidationTest.php
index 203f065..411ec66 100644
--- a/tests/src/Kernel/FileLinkValidationTest.php
+++ b/tests/src/Kernel/FileLinkValidationTest.php
@@ -31,14 +31,14 @@ class FileLinkValidationTest extends KernelTestBase {
   /**
    * Test entity.
    *
-   * @var \Drupal\entity_test\Entity\EntityTest
+   * @var EntityTest
    */
   protected $entity;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['file_link_test']);
@@ -95,7 +95,7 @@ class FileLinkValidationTest extends KernelTestBase {
    *   An absolute URL.
    */
   protected static function getFullUrl($path) {
-    return Url::fromUri('base:/' . drupal_get_path('module', 'file_link_test') . $path, ['absolute' => TRUE, 'query' => ['foo' => 'bar']])->toString();
+    return Url::fromUri('base:/' . \Drupal::service('extension.list.module')->getPath('file_link_test') . $path, ['absolute' => TRUE, 'query' => ['foo' => 'bar']])->toString();
   }
 
   /**
diff --git a/tests/src/Kernel/FileLinkWidgetTest.php b/tests/src/Kernel/FileLinkWidgetTest.php
index 0b28e7a..edcdf43 100644
--- a/tests/src/Kernel/FileLinkWidgetTest.php
+++ b/tests/src/Kernel/FileLinkWidgetTest.php
@@ -28,7 +28,7 @@ class FileLinkWidgetTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('entity_test');
