diff --git a/oembed_providers.module b/oembed_providers.module
index 9f4b903..152c95f 100644
--- a/oembed_providers.module
+++ b/oembed_providers.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Entity\EntityFormInterface;
+use Drupal\media\MediaSourceInterface;
 /**
  * @file
  * This module allows site builders and developers to manage oEmbed providers.
@@ -48,9 +50,9 @@ function oembed_providers_media_source_info_alter(array &$sources) {
  * Implements hook_form_FORM_ID_alter().
  */
 function oembed_providers_form_media_type_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\Core\Entity\EntityFormInterface */
+  /** @var EntityFormInterface */
   $callback_object = $form_state->getBuildInfo()['callback_object'];
-  /** @var \Drupal\media\MediaSourceInterface */
+  /** @var MediaSourceInterface */
   $source = $callback_object->getEntity()->getSource();
   // Only render warning message for media types with oEmbed source.
   if ($source instanceof OEmbedInterface) {
diff --git a/src/Cache/OembedProvidersCacheTagInvalidator.php b/src/Cache/OembedProvidersCacheTagInvalidator.php
index bcacbc7..dc1c190 100644
--- a/src/Cache/OembedProvidersCacheTagInvalidator.php
+++ b/src/Cache/OembedProvidersCacheTagInvalidator.php
@@ -13,14 +13,14 @@ class OembedProvidersCacheTagInvalidator implements CacheTagsInvalidatorInterfac
   /**
    * Manages media source plugins.
    *
-   * @var \Drupal\media\MediaSourceManager
+   * @var MediaSourceManager
    */
   protected $mediaSourceManager;
 
   /**
    * OembedProvidersCacheTagInvalidator constructor.
    *
-   * @param \Drupal\media\MediaSourceManager $mediaSourceManager
+   * @param MediaSourceManager $mediaSourceManager
    *   Manages media source plugins.
    */
   public function __construct(MediaSourceManager $mediaSourceManager) {
diff --git a/src/EventSubscriber/ConfigEventsSubscriber.php b/src/EventSubscriber/ConfigEventsSubscriber.php
index 4ffedd6..b91ea8b 100644
--- a/src/EventSubscriber/ConfigEventsSubscriber.php
+++ b/src/EventSubscriber/ConfigEventsSubscriber.php
@@ -15,14 +15,14 @@ class ConfigEventsSubscriber implements EventSubscriberInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -41,7 +41,7 @@ class ConfigEventsSubscriber implements EventSubscriberInterface {
   /**
    * React to a config object being saved.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   Config crud event.
    */
   public function configSave(ConfigCrudEvent $event) {
diff --git a/src/Form/OembedProvidersSettingsForm.php b/src/Form/OembedProvidersSettingsForm.php
index 860ddd4..27e3722 100644
--- a/src/Form/OembedProvidersSettingsForm.php
+++ b/src/Form/OembedProvidersSettingsForm.php
@@ -23,16 +23,16 @@ class OembedProvidersSettingsForm extends ConfigFormBase {
   /**
    * Cache backend for default cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $defaultCache;
 
   /**
    * Constructs an OembedProvidersSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $default_cache
+   * @param CacheBackendInterface $default_cache
    *   Cache backend for default cache.
    */
   public function __construct(ConfigFactoryInterface $config_factory, CacheBackendInterface $default_cache) {
diff --git a/src/OEmbed/ProviderRepositoryDecorator.php b/src/OEmbed/ProviderRepositoryDecorator.php
index 402e455..d1d9742 100644
--- a/src/OEmbed/ProviderRepositoryDecorator.php
+++ b/src/OEmbed/ProviderRepositoryDecorator.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\oembed_providers\OEmbed;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use GuzzleHttp\Client;
+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -24,14 +28,14 @@ final class ProviderRepositoryDecorator implements ProviderRepositoryInterface {
   /**
    * Retrieves and caches information about oEmbed providers.
    *
-   * @var \Drupal\media\OEmbed\ProviderRepositoryInterface
+   * @var ProviderRepositoryInterface
    */
   protected $decorated;
 
   /**
    * OEmbed provider storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $oembedProviderStorage;
 
@@ -45,7 +49,7 @@ final class ProviderRepositoryDecorator implements ProviderRepositoryInterface {
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -66,49 +70,49 @@ final class ProviderRepositoryDecorator implements ProviderRepositoryInterface {
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The key-value store.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected $keyValue;
 
   /**
    * The logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a ProviderRepository instance.
    *
-   * @param \Drupal\media\OEmbed\ProviderRepositoryInterface $decorated
+   * @param ProviderRepositoryInterface $decorated
    *   Retrieves and caches information about oEmbed providers.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Manages entity type plugin definitions.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key-value store factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger channel factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    * @param int $max_age
    *   (optional) How long the cache data should be kept. Defaults to a week.
diff --git a/src/OembedProviderBucketForm.php b/src/OembedProviderBucketForm.php
index e2ecad6..37de4cb 100644
--- a/src/OembedProviderBucketForm.php
+++ b/src/OembedProviderBucketForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\oembed_providers;
 
+use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -21,32 +22,32 @@ class OembedProviderBucketForm extends EntityForm {
   /**
    * The decorated oEmbed ProviderRepository.
    *
-   * @var \Drupal\oembed_providers\OEmbed\ProviderRepositoryDecorator
+   * @var ProviderRepositoryDecorator
    */
   protected $providerRepository;
 
   /**
    * The entityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Constructs an oEmbedProviderBucketForm object.
    *
-   * @param \Drupal\oembed_providers\OEmbed\ProviderRepositoryDecorator $provider_repository
+   * @param ProviderRepositoryDecorator $provider_repository
    *   The decorated oEmbed ProviderRepository.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entityTypeManager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ProviderRepositoryDecorator $provider_repository, EntityTypeManagerInterface $entityTypeManager, MessengerInterface $messenger) {
@@ -71,7 +72,7 @@ class OembedProviderBucketForm extends EntityForm {
    *
    * @param array $form
    *   A nested array form elements comprising the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/OembedProviderForm.php b/src/OembedProviderForm.php
index c6cc071..390a203 100644
--- a/src/OembedProviderForm.php
+++ b/src/OembedProviderForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\oembed_providers;
 
+use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -17,23 +18,23 @@ class OembedProviderForm extends EntityForm {
   /**
    * The entityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Constructs an oEmbedProviderForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entityTypeManager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, MessengerInterface $messenger) {
@@ -56,7 +57,7 @@ class OembedProviderForm extends EntityForm {
    *
    * @param array $form
    *   A nested array form elements comprising the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -268,7 +269,7 @@ class OembedProviderForm extends EntityForm {
    *
    * @param array $form
    *   A nested array form elements comprising the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -283,7 +284,7 @@ class OembedProviderForm extends EntityForm {
    *
    * @param array $form
    *   A nested array form elements comprising the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addCallback(array &$form, FormStateInterface $form_state) {
@@ -296,7 +297,7 @@ class OembedProviderForm extends EntityForm {
    *
    * @param array $form
    *   A nested array form elements comprising the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function removeCallback(array &$form, FormStateInterface $form_state) {
diff --git a/src/Plugin/media/Source/OEmbed.php b/src/Plugin/media/Source/OEmbed.php
index a38c2fa..77f2bba 100644
--- a/src/Plugin/media/Source/OEmbed.php
+++ b/src/Plugin/media/Source/OEmbed.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\oembed_providers\Plugin\media\Source;
 
+use Drupal\oembed_providers\Entity\ProviderBucket;
 use Drupal\Core\Entity\DependencyTrait;
 use Drupal\media\Plugin\media\Source\OEmbed as CoreOEmbed;
 
@@ -44,7 +45,7 @@ class OEmbed extends CoreOEmbed {
 
     // Add a dependency for the provider bucket that is responsible for
     // this media source.
-    /** @var \Drupal\oembed_providers\Entity\ProviderBucket */
+    /** @var ProviderBucket */
     $provider_bucket = $this->entityTypeManager->getStorage('oembed_provider_bucket')->load($this->pluginDefinition['id']);
     // Not all oEmbed media sources are created by the oEmbed Providers
     // module. Check that a provider bucket is loaded.
diff --git a/src/Traits/HelperTrait.php b/src/Traits/HelperTrait.php
index 634fa6f..068dfde 100644
--- a/src/Traits/HelperTrait.php
+++ b/src/Traits/HelperTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\oembed_providers\Traits;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * Misc. methods available for all classes to use.
  */
@@ -10,7 +11,7 @@ trait HelperTrait {
   /**
    * Returns a security warning about disabled oEmbed providers.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   An object that, when cast to a string, returns the translated string.
    */
   public static function disabledProviderSecurityWarning() {
diff --git a/tests/src/Functional/CustomProviderRepositoryTest.php b/tests/src/Functional/CustomProviderRepositoryTest.php
index 9d71338..fdfad12 100644
--- a/tests/src/Functional/CustomProviderRepositoryTest.php
+++ b/tests/src/Functional/CustomProviderRepositoryTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_providers\Functional;
 
+use Drupal\oembed_providers\OEmbed\ProviderRepositoryDecorator;
 use Drupal\Tests\media\Functional\MediaFunctionalTestBase;
 use Drupal\Tests\media\Traits\OEmbedTestTrait;
 
@@ -44,7 +45,7 @@ class CustomProviderRepositoryTest extends MediaFunctionalTestBase {
    * Tests custom provider loading.
    */
   public function testCustomProviderLoading() {
-    /** @var \Drupal\oembed_providers\OEmbed\ProviderRepositoryDecorator $provider_repository */
+    /** @var ProviderRepositoryDecorator $provider_repository */
     $provider_repository = $this->container->get('media.oembed.provider_repository');
 
     // Verify custom providers are retrieved by getCustomProviders() method.
diff --git a/tests/src/Functional/CustomProvidersUiTest.php b/tests/src/Functional/CustomProvidersUiTest.php
index 27e211e..a643c0d 100644
--- a/tests/src/Functional/CustomProvidersUiTest.php
+++ b/tests/src/Functional/CustomProvidersUiTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_providers\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -19,14 +20,14 @@ class CustomProvidersUiTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
diff --git a/tests/src/Functional/ExternalFetchTest.php b/tests/src/Functional/ExternalFetchTest.php
index 5465b22..0685934 100644
--- a/tests/src/Functional/ExternalFetchTest.php
+++ b/tests/src/Functional/ExternalFetchTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_providers\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\media\Traits\OEmbedTestTrait;
 
@@ -22,7 +23,7 @@ class ExternalFetchTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/ProviderBucketTest.php b/tests/src/Functional/ProviderBucketTest.php
index 8a3039e..8e90006 100644
--- a/tests/src/Functional/ProviderBucketTest.php
+++ b/tests/src/Functional/ProviderBucketTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_providers\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\oembed_providers\Entity\ProviderBucket;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\media\Traits\OEmbedTestTrait;
@@ -23,14 +24,14 @@ class ProviderBucketTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
@@ -164,6 +165,7 @@ class ProviderBucketTest extends BrowserTestBase {
 
   /**
    * Tests dependency calculation for ProviderBucket entities.
+   * @doesNotPerformAssertions
    */
   public function testProviderBucketDependencyCalculation() {
     // Create a test provider bucket with a custom provider.
diff --git a/tests/src/Functional/ProviderRepositoryTest.php b/tests/src/Functional/ProviderRepositoryTest.php
index 2ec891a..dfd7c70 100644
--- a/tests/src/Functional/ProviderRepositoryTest.php
+++ b/tests/src/Functional/ProviderRepositoryTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_providers\Functional;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\media\OEmbed\ProviderException;
 use Drupal\Tests\media\Functional\MediaFunctionalTestBase;
 use GuzzleHttp\Client;
@@ -21,6 +22,7 @@ use GuzzleHttp\Psr7\Request;
  */
 class ProviderRepositoryTest extends MediaFunctionalTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/tests/src/Functional/SettingsFormTest.php b/tests/src/Functional/SettingsFormTest.php
index b3c562f..8f753ca 100644
--- a/tests/src/Functional/SettingsFormTest.php
+++ b/tests/src/Functional/SettingsFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_providers\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\media\Traits\OEmbedTestTrait;
 
@@ -22,14 +23,14 @@ class SettingsFormTest extends BrowserTestBase {
   /**
    * The test administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * The test non-administrative user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $nonAdminUser;
 
@@ -91,7 +92,7 @@ class SettingsFormTest extends BrowserTestBase {
     $page = $this->getSession()->getPage();
 
     // Set dummy value in cache, so it can be deleted on form submission.
-    \Drupal::cache()->set('oembed_providers:oembed_providers', 'test value', REQUEST_TIME + (86400));
+    \Drupal::cache()->set('oembed_providers:oembed_providers', 'test value', \Drupal::time()->getRequestTime() + (86400));
 
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/media/oembed-providers');
diff --git a/tests/src/Kernel/MediaSourceTest.php b/tests/src/Kernel/MediaSourceTest.php
index 32a40a6..828df0d 100644
--- a/tests/src/Kernel/MediaSourceTest.php
+++ b/tests/src/Kernel/MediaSourceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\oembed_providers\Kernel;
 
+use Drupal\media\MediaSourceManager;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\oembed_providers\Entity\ProviderBucket;
 use Drupal\Tests\media\Traits\MediaTypeCreationTrait;
@@ -33,7 +34,7 @@ class MediaSourceTest extends KernelTestBase {
   /**
    * A test provider bucket.
    *
-   * @var \Drupal\oembed_providers\Entity\ProviderBucket
+   * @var ProviderBucket
    */
   protected $providerBucket;
 
@@ -67,7 +68,7 @@ class MediaSourceTest extends KernelTestBase {
    * Tests generation of media sources from provider buckets.
    */
   public function testMediaSourceGeneration() {
-    /** @var \Drupal\media\MediaSourceManager */
+    /** @var MediaSourceManager */
     $media_source_manager = \Drupal::service('plugin.manager.media.source');
     $definitions = $media_source_manager->getDefinitions();
 
diff --git a/tests/src/Unit/UrlIsValidTest.php b/tests/src/Unit/UrlIsValidTest.php
index 6e06187..e75b446 100644
--- a/tests/src/Unit/UrlIsValidTest.php
+++ b/tests/src/Unit/UrlIsValidTest.php
@@ -19,7 +19,7 @@ class UrlIsValidTest extends UnitTestCase {
   /**
    * The oEmbed Providers provider form object.
    *
-   * @var \Drupal\oembed_providers\OembedProviderForm
+   * @var OembedProviderForm
    */
   protected $formObject;
 
@@ -29,12 +29,8 @@ class UrlIsValidTest extends UnitTestCase {
   protected function setUp(): void {
     parent::setUp();
 
-    $entity_type_manager = $this->getMockBuilder('Drupal\Core\Entity\EntityTypeManager')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $messenger = $this->getMockBuilder('Drupal\Core\Messenger\Messenger')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $entity_type_manager = $this->createMock('Drupal\Core\Entity\EntityTypeManager');
+    $messenger = $this->createMock('Drupal\Core\Messenger\Messenger');
     $this->formObject = new OembedProviderForm($entity_type_manager, $messenger);
   }
 
