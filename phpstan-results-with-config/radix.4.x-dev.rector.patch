diff --git a/Commands/radix/SubThemeCommands.php b/Commands/radix/SubThemeCommands.php
index 3def17b..b78029a 100644
--- a/Commands/radix/SubThemeCommands.php
+++ b/Commands/radix/SubThemeCommands.php
@@ -4,6 +4,10 @@ declare(strict_types = 1);
 
 namespace Drush\Commands\radix;
 
+use Drupal\Core\Extension\Extension;
+use Drupal\Core\Archiver\ArchiverManager;
+use Drupal\Core\Archiver\ArchiverInterface;
+use Symfony\Component\Finder\SplFileInfo;
 use Consolidation\AnnotatedCommand\CommandData;
 use Consolidation\AnnotatedCommand\CommandError;
 use Drupal\Component\Utility\UrlHelper;
@@ -30,14 +34,14 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
   /**
    * {@inheritdoc}
    *
-   * @var \Drupal\radix\SubThemeGenerator
+   * @var SubThemeGenerator
    */
   protected $subThemeCreator;
 
   /**
    * {@inheritdoc}
    *
-   * @var \Symfony\Component\Filesystem\Filesystem
+   * @var Filesystem
    */
   protected $fs;
 
@@ -89,11 +93,11 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
     $kit = $options['kit'];
 
     // @todo Use extension service.
-    $radixDir = drupal_get_path('theme', 'radix');
+    $radixDir = \Drupal::service('extension.list.theme')->getPath('radix');
     $srcDir = "$radixDir/src/kits/{$kit}";
 
     // Find kit from other active themes.
-    /** @var \Drupal\Core\Extension\Extension[] $themes */
+    /** @var Extension[] $themes */
     foreach (\Drupal::service('theme_handler')->listInfo() as $theme) {
       $path = "{$theme->getPath()}/src/kits/{$kit}";
       if ($this->fs->exists($path)) {
@@ -148,11 +152,11 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
 
         $data['srcDir'] = "{$data['path']}/kit";
 
-        /** @var \Drupal\Core\Archiver\ArchiverManager $extractorManager */
+        /** @var ArchiverManager $extractorManager */
         $extractorManager = \Drupal::service('plugin.manager.archiver');
 
         try {
-          /** @var \Drupal\Core\Archiver\ArchiverInterface $extractorInstance */
+          /** @var ArchiverInterface $extractorInstance */
           $extractorInstance = $extractorManager->getInstance(['filepath' => $data['packPath']]);
           $extractorInstance->extract($data['srcDir']);
         }
@@ -257,7 +261,7 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
    *
    * @hook validate @radixArgLabel
    *
-   * @return null|\Consolidation\AnnotatedCommand\CommandError
+   * @return null|CommandError
    *   Returns null or CommandError.
    */
   public function onHookValidateRadixArgLabel(CommandData $commandData): ?CommandError {
@@ -356,13 +360,13 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
   /**
    * {@inheritdoc}
    *
-   * @param \Consolidation\AnnotatedCommand\CommandError[] $commandErrors
+   * @param CommandError[] $commandErrors
    *   Command errors.
    */
   protected function aggregateCommandErrors(array $commandErrors): ?CommandError {
     $errorCode = 0;
     $messages = [];
-    /** @var \Consolidation\AnnotatedCommand\CommandError $commandError */
+    /** @var CommandError $commandError */
     foreach (array_filter($commandErrors) as $commandError) {
       $messages[] = $commandError->getOutputData();
       $errorCode = max($errorCode, $commandError->getExitCode());
@@ -430,7 +434,7 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
     $directDescendants = $this->getDirectDescendants($parentDir);
     $iterator = $directDescendants->getIterator();
     $iterator->rewind();
-    /** @var \Symfony\Component\Finder\SplFileInfo $firstFile */
+    /** @var SplFileInfo $firstFile */
     $firstFile = $iterator->current();
     if ($directDescendants->count() === 1 && $firstFile->isDir()) {
       return $firstFile->getPathname();
diff --git a/includes/menu.inc b/includes/menu.inc
index cbab4c9..ba873ce 100644
--- a/includes/menu.inc
+++ b/includes/menu.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Url;
 /**
  * @file
  * Theme and preprocess functions for menus.
@@ -51,7 +52,7 @@ function radix_preprocess_links__dropbutton(&$variables) {
   // Get the first link and use it for the dropbutton.
   $link = reset($links);
 
-  /** @var \Drupal\Core\Url $url */
+  /** @var Url $url */
   $variables['split'] = FALSE;
   if (isset($link['link']) && ($url = $link['link']['#url'])) {
     $button = $link['link'];
diff --git a/includes/suggestions.inc b/includes/suggestions.inc
index 0e1b75b..b5278f0 100644
--- a/includes/suggestions.inc
+++ b/includes/suggestions.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\node\NodeInterface;
 /**
  * @file
  * Theme suggestions.
@@ -12,7 +13,7 @@ use Drupal\node\Entity\Node;
  */
 function radix_theme_suggestions_page_alter(array &$suggestions, array $variables) {
   // Add a template suggestions for node type.
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   if ($node = \Drupal::routeMatch()->getParameter('node')) {
     if (is_numeric($node)) {
       $node = Node::load($node);
diff --git a/radix.drush.inc b/radix.drush.inc
index 7f1a46f..381ec0a 100644
--- a/radix.drush.inc
+++ b/radix.drush.inc
@@ -91,7 +91,7 @@ function drush_radix($name = NULL, $machine_name = NULL) {
   $kit = (drush_get_option('kit')) ? drush_trim_path(drush_get_option('kit')) : 'default';
 
   // Make a fresh copy of the kit.
-  $kit_path = drush_normalize_path(drush_get_context('DRUSH_DRUPAL_ROOT') . '/' . drupal_get_path('theme', 'radix') . '/src/kits/' . $kit);
+  $kit_path = drush_normalize_path(drush_get_context('DRUSH_DRUPAL_ROOT') . '/' . \Drupal::service('extension.list.theme')->getPath('radix') . '/src/kits/' . $kit);
 
   // Allow kits to be pulled from external urls.
   if (UrlHelper::isValid($kit, TRUE)) {
diff --git a/src/SubThemeGenerator.php b/src/SubThemeGenerator.php
index 77c03d7..943e420 100644
--- a/src/SubThemeGenerator.php
+++ b/src/SubThemeGenerator.php
@@ -15,14 +15,14 @@ class SubThemeGenerator {
   /**
    * {@inheritdoc}
    *
-   * @var \Symfony\Component\Filesystem\Filesystem
+   * @var Filesystem
    */
   protected $fs;
 
   /**
    * {@inheritdoc}
    *
-   * @var \Symfony\Component\Finder\Finder
+   * @var Finder
    */
   protected $finder;
 
