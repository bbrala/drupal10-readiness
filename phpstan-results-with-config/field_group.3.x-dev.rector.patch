diff --git a/contrib/field_group_migrate/src/Plugin/migrate/destination/d7/FieldGroup.php b/contrib/field_group_migrate/src/Plugin/migrate/destination/d7/FieldGroup.php
index 35266ae..14ca48b 100644
--- a/contrib/field_group_migrate/src/Plugin/migrate/destination/d7/FieldGroup.php
+++ b/contrib/field_group_migrate/src/Plugin/migrate/destination/d7/FieldGroup.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\field_group_migrate\Plugin\migrate\destination\d7;
 
+use Drupal\Core\Entity\Display\EntityDisplayInterface;
 use Drupal\migrate\Plugin\migrate\destination\DestinationBase;
 use Drupal\migrate\Plugin\MigrationInterface;
 use Drupal\migrate\Row;
@@ -82,7 +83,7 @@ class FieldGroup extends DestinationBase {
    * @param string $type
    *   The destination type.
    *
-   * @return \Drupal\Core\Entity\Display\EntityDisplayInterface
+   * @return EntityDisplayInterface
    *   The entity display object.
    */
   protected function getEntity($entity_type, $bundle, $mode, $type) {
diff --git a/contrib/field_group_migrate/src/Plugin/migrate/source/d7/FieldGroup.php b/contrib/field_group_migrate/src/Plugin/migrate/source/d7/FieldGroup.php
index a5fbb0d..32936f9 100644
--- a/contrib/field_group_migrate/src/Plugin/migrate/source/d7/FieldGroup.php
+++ b/contrib/field_group_migrate/src/Plugin/migrate/source/d7/FieldGroup.php
@@ -24,7 +24,7 @@ class FieldGroup extends DrupalSqlBase {
   /**
    * The field group formatter plugin manager.
    *
-   * @var \Drupal\field_group\FieldGroupFormatterPluginManager
+   * @var FieldGroupFormatterPluginManager
    */
   protected $fieldGroupFormatterManager;
 
@@ -37,13 +37,13 @@ class FieldGroup extends DrupalSqlBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface|null $migration
+   * @param MigrationInterface|null $migration
    *   The current migration plugin, if available.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\field_group\FieldGroupFormatterPluginManager $field_group_formatter_manager
+   * @param FieldGroupFormatterPluginManager $field_group_formatter_manager
    *   The field group formatter plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, StateInterface $state, EntityTypeManagerInterface $entity_type_manager, FieldGroupFormatterPluginManager $field_group_formatter_manager) {
diff --git a/contrib/field_group_migrate/tests/src/Functional/MigrateUiFieldGroupTest.php b/contrib/field_group_migrate/tests/src/Functional/MigrateUiFieldGroupTest.php
index ec502e7..1f688ce 100644
--- a/contrib/field_group_migrate/tests/src/Functional/MigrateUiFieldGroupTest.php
+++ b/contrib/field_group_migrate/tests/src/Functional/MigrateUiFieldGroupTest.php
@@ -29,17 +29,17 @@ class MigrateUiFieldGroupTest extends MigrateUpgradeTestBase {
    * {@inheritdoc}
    */
   protected function getSourceBasePath() {
-    return drupal_get_path('module', 'migrate_drupal_ui') . '/tests/src/Functional/d7/files';
+    return \Drupal::service('extension.list.module')->getPath('migrate_drupal_ui') . '/tests/src/Functional/d7/files';
   }
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Field Group's migration database fixture extends Drupal core's fixture.
-    $this->loadFixture(drupal_get_path('module', 'migrate_drupal') . '/tests/fixtures/drupal7.php');
-    $this->loadFixture(drupal_get_path('module', 'field_group_migrate') . '/tests/fixtures/drupal7.php');
+    $this->loadFixture(\Drupal::service('extension.list.module')->getPath('migrate_drupal') . '/tests/fixtures/drupal7.php');
+    $this->loadFixture(\Drupal::service('extension.list.module')->getPath('field_group_migrate') . '/tests/fixtures/drupal7.php');
   }
 
   /**
@@ -115,7 +115,7 @@ class MigrateUiFieldGroupTest extends MigrateUpgradeTestBase {
     $session = $this->assertSession();
     $session->responseContains("Upgrade a site by importing its files and the data from its database into a clean and empty new install of Drupal");
 
-    $this->drupalPostForm(NULL, [], 'Continue');
+    $this->submitForm([], 'Continue');
     $session->pageTextContains('Provide credentials for the database of the Drupal site you want to upgrade.');
 
     $driver = $connection_options['driver'];
@@ -139,7 +139,7 @@ class MigrateUiFieldGroupTest extends MigrateUpgradeTestBase {
     }
     $edits = $this->translatePostValues($edit);
 
-    $this->drupalPostForm(NULL, $edits, 'Review upgrade');
+    $this->submitForm($edits, 'Review upgrade');
   }
 
   /**
@@ -155,13 +155,16 @@ class MigrateUiFieldGroupTest extends MigrateUpgradeTestBase {
     // @see https://www.drupal.org/node/2928118
     // @see https://www.drupal.org/node/3105503
     if ($this->getSession()->getPage()->findButton('I acknowledge I may lose data. Continue anyway.')) {
-      $this->drupalPostForm(NULL, [], 'I acknowledge I may lose data. Continue anyway.');
+      $this->submitForm([], 'I acknowledge I may lose data. Continue anyway.');
       $assert_session->statusCodeEquals(200);
     }
 
     // Perform the upgrade.
-    $this->drupalPostForm(NULL, [], 'Perform upgrade');
-    $this->assertText('Congratulations, you upgraded Drupal!');
+    $this->submitForm([], 'Perform upgrade');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Congratulations, you upgraded Drupal!');
 
     // Have to reset all the statics after migration to ensure entities are
     // loadable.
diff --git a/contrib/field_group_migrate/tests/src/Kernel/Migrate/d7/MigrateFieldGroupTest.php b/contrib/field_group_migrate/tests/src/Kernel/Migrate/d7/MigrateFieldGroupTest.php
index 3557802..72cd7bf 100644
--- a/contrib/field_group_migrate/tests/src/Kernel/Migrate/d7/MigrateFieldGroupTest.php
+++ b/contrib/field_group_migrate/tests/src/Kernel/Migrate/d7/MigrateFieldGroupTest.php
@@ -37,7 +37,7 @@ class MigrateFieldGroupTest extends MigrateDrupal7TestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->loadFixture(__DIR__ . '/../../../../fixtures/drupal7.php');
 
diff --git a/contrib/field_group_migrate/tests/src/Unit/Migrate/d7/FieldGroupTest.php b/contrib/field_group_migrate/tests/src/Unit/Migrate/d7/FieldGroupTest.php
index 84d7267..ef75d5f 100644
--- a/contrib/field_group_migrate/tests/src/Unit/Migrate/d7/FieldGroupTest.php
+++ b/contrib/field_group_migrate/tests/src/Unit/Migrate/d7/FieldGroupTest.php
@@ -92,7 +92,7 @@ class FieldGroupTest extends MigrateSqlSourceTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->databaseContents['field_group'] = $this->expectedResults;
     parent::setUp();
   }
diff --git a/field_group.api.php b/field_group.api.php
index 4da33db..bd71d62 100644
--- a/field_group.api.php
+++ b/field_group.api.php
@@ -118,7 +118,7 @@ function hook_field_group_form_process_alter(array &$element, &$group, &$complet
  *
  * @param array $element
  *   The element being processed.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  * @param object $complete_form
  *   The complete form.
diff --git a/field_group.module b/field_group.module
index c5edfc8..d145013 100644
--- a/field_group.module
+++ b/field_group.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * Allows administrators to attach field groups.
@@ -259,7 +261,7 @@ function field_group_form_alter(array &$form, FormStateInterface $form_state) {
   if ($form_object instanceof ContentEntityFormInterface && !$form_object instanceof ConfirmFormInterface) {
 
     /**
-     * @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display
+     * @var EntityFormDisplayInterface $form_display
      */
     $storage = $form_state->getStorage();
     if (!empty($storage['form_display'])) {
@@ -443,7 +445,7 @@ function field_group_form_pre_render(array $element) {
  *
  * @param array $element
  *   Form that is being processed.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  * @param array $form
  *   The complete form structure.
@@ -888,13 +890,13 @@ function field_group_get_content_element_key($context = 'default') {
  *
  * @param object $group
  *   A group definition.
- * @param \Drupal\Core\Entity\Display\EntityDisplayInterface $display
+ * @param EntityDisplayInterface $display
  *   The display to update if known.
  *
- * @return \Drupal\Core\Entity\Display\EntityDisplayInterface|null
+ * @return EntityDisplayInterface|null
  *   The updated entity display.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function field_group_group_save($group, EntityDisplayInterface $display = NULL) {
   if ($display === NULL) {
@@ -944,7 +946,7 @@ function field_group_group_save($group, EntityDisplayInterface $display = NULL)
  * @param object $group
  *   A group definition.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function field_group_delete_field_group($group) {
   if ($group->context == 'form') {
@@ -955,7 +957,7 @@ function field_group_delete_field_group($group) {
   }
 
   /**
-   * @var \Drupal\Core\Entity\Display\EntityDisplayInterface $display
+   * @var EntityDisplayInterface $display
    */
   if (isset($display)) {
     $display->unsetThirdPartySetting('field_group', $group->group_name);
diff --git a/field_group.post_update.php b/field_group.post_update.php
index 04fc1cb..327379c 100644
--- a/field_group.post_update.php
+++ b/field_group.post_update.php
@@ -1,17 +1,17 @@
 <?php
 
+use Drupal\Core\Entity\Display\EntityDisplayInterface;
 /**
  * @file
  * Post update functions for Field Group.
  */
-
 /**
  * Assign a region to Field Groups.
  */
 function field_group_post_update_0001() {
   foreach (['entity_form_display', 'entity_view_display'] as $entity_type) {
     foreach (\Drupal::entityTypeManager()->getStorage($entity_type)->loadMultiple() as $display) {
-      /** @var \Drupal\Core\Entity\Display\EntityDisplayInterface $display */
+      /** @var EntityDisplayInterface $display */
       if (in_array('field_group', $display->getThirdPartyProviders())) {
         $updated = FALSE;
 
diff --git a/includes/field_ui.inc b/includes/field_ui.inc
index d6ee0e8..a017115 100644
--- a/includes/field_ui.inc
+++ b/includes/field_ui.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Layout\LayoutDefinition;
 /**
  * @file
  * Fields UI Manage forms functions (display and fields).
@@ -23,7 +24,7 @@ use Drupal\field_ui\Form\EntityDisplayFormBase;
  *
  * @param array $form
  *   Form.
- * @param \Drupal\Core\Entity\EntityDisplayBase $display
+ * @param EntityDisplayBase $display
  *   Display object.
  *
  * @return object
@@ -59,7 +60,7 @@ function field_group_field_ui_form_params(array $form, EntityDisplayBase $displa
   // see https://www.drupal.org/project/field_group/issues/3086019
   $ds_info = $display->getThirdPartySettings('ds');
   $field_layout_info = $display->getThirdPartySettings('field_layout');
-  /** @var \Drupal\Core\Layout\LayoutDefinition $layout */
+  /** @var LayoutDefinition $layout */
   if (!empty($field_layout_info) && isset($field_layout_info['id'])) {
     $layout = \Drupal::service('plugin.manager.core.layout')->getDefinition($field_layout_info['id']);
     $params->available_regions = $layout->getRegionNames();
@@ -83,7 +84,7 @@ function field_group_field_ui_form_params(array $form, EntityDisplayBase $displa
 /**
  * Helper function to get context from entity display.
  *
- * @param \Drupal\Core\Entity\EntityDisplayBase $display
+ * @param EntityDisplayBase $display
  *   Display.
  *
  * @return string
@@ -433,14 +434,14 @@ function field_group_display_overview_row_region(array $row) {
  *
  * @param array $form
  *   The complete form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The state of the form.
  */
 function field_group_field_overview_submit(array $form, FormStateInterface $form_state) {
   $form_values = $form_state->getValue('fields');
 
   /**
-   * @var \Drupal\Core\Entity\EntityDisplayBase $display
+   * @var EntityDisplayBase $display
    */
   $display = $form['#context'];
   $manager = Drupal::service('plugin.manager.field_group.formatters');
@@ -520,7 +521,7 @@ function field_group_field_overview_submit(array $form, FormStateInterface $form
  *   The FieldGroup object.
  * @param array $form
  *   Nested array of form elements that comprise the form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The state of the form.
  */
 function field_group_format_settings_form(&$group, array $form, FormStateInterface $form_state) {
diff --git a/src/Annotation/FieldGroupFormatter.php b/src/Annotation/FieldGroupFormatter.php
index c157e56..b696db3 100644
--- a/src/Annotation/FieldGroupFormatter.php
+++ b/src/Annotation/FieldGroupFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\field_group\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -31,7 +32,7 @@ class FieldGroupFormatter extends Plugin {
   /**
    * The human-readable name of the formatter type.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Element/Accordion.php b/src/Element/Accordion.php
index 72ba8e6..620ac82 100644
--- a/src/Element/Accordion.php
+++ b/src/Element/Accordion.php
@@ -36,7 +36,7 @@ class Accordion extends RenderElement {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   details element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Element/HorizontalTabs.php b/src/Element/HorizontalTabs.php
index ee8567b..afcdc88 100644
--- a/src/Element/HorizontalTabs.php
+++ b/src/Element/HorizontalTabs.php
@@ -93,7 +93,7 @@ class HorizontalTabs extends RenderElement {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   details element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param bool $on_form
    *   Are the tabs rendered on a form or not.
@@ -156,7 +156,7 @@ class HorizontalTabs extends RenderElement {
    *   An associative array containing the properties and children of the
    *   element. Note that $element must be taken by reference here, so processed
    *   child elements are taken over into $form_state.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Element/HtmlElement.php b/src/Element/HtmlElement.php
index e32e1dd..1de4f57 100644
--- a/src/Element/HtmlElement.php
+++ b/src/Element/HtmlElement.php
@@ -37,7 +37,7 @@ class HtmlElement extends RenderElement {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   details element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Element/VerticalTabs.php b/src/Element/VerticalTabs.php
index ff075f3..b4c131c 100644
--- a/src/Element/VerticalTabs.php
+++ b/src/Element/VerticalTabs.php
@@ -73,7 +73,7 @@ class VerticalTabs implements RenderCallbackInterface {
    *   An associative array containing the properties and children of the
    *   element. Note that $element must be taken by reference here, so processed
    *   child elements are taken over into $form_state.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/FieldGroupFormatterBase.php b/src/FieldGroupFormatterBase.php
index a3b5840..02a8ed2 100644
--- a/src/FieldGroupFormatterBase.php
+++ b/src/FieldGroupFormatterBase.php
@@ -212,7 +212,7 @@ abstract class FieldGroupFormatterBase extends PluginSettingsBase implements Fie
    *
    * @param array $element
    *   The validated element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the form.
    */
   public static function validateCssClass(array $element, FormStateInterface $form_state) {
@@ -228,7 +228,7 @@ abstract class FieldGroupFormatterBase extends PluginSettingsBase implements Fie
    *
    * @param array $element
    *   The validated element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the form.
    */
   public static function validateId(array $element, FormStateInterface $form_state) {
diff --git a/src/FieldGroupFormatterPluginManager.php b/src/FieldGroupFormatterPluginManager.php
index 26a690c..fb1f747 100644
--- a/src/FieldGroupFormatterPluginManager.php
+++ b/src/FieldGroupFormatterPluginManager.php
@@ -18,9 +18,9 @@ class FieldGroupFormatterPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ -63,7 +63,7 @@ class FieldGroupFormatterPluginManager extends DefaultPluginManager {
    *     - settings: (array) Settings specific to the formatter. Each setting
    *       defaults to the default value specified in the formatter definition.
    *
-   * @return \Drupal\field_group\FieldGroupFormatterInterface|null
+   * @return FieldGroupFormatterInterface|null
    *   A formatter object or NULL when plugin is not found.
    */
   public function getInstance(array $options) {
diff --git a/src/FieldgroupUi.php b/src/FieldgroupUi.php
index 2ee67b2..376edc2 100644
--- a/src/FieldgroupUi.php
+++ b/src/FieldgroupUi.php
@@ -16,7 +16,7 @@ class FieldgroupUi {
    * @param object $group
    *   The group to get the field ui route for.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   A URL object.
    */
   public static function getFieldUiRoute($group) {
@@ -58,7 +58,7 @@ class FieldgroupUi {
    * @param object $group
    *   The group to delete.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   A URL object.
    */
   public static function getDeleteRoute(\stdClass $group) {
diff --git a/src/Form/FieldGroupAddForm.php b/src/Form/FieldGroupAddForm.php
index 7b89fb3..260963b 100644
--- a/src/Form/FieldGroupAddForm.php
+++ b/src/Form/FieldGroupAddForm.php
@@ -61,23 +61,23 @@ class FieldGroupAddForm extends FormBase {
   /**
    * The field group formatter plugin manager.
    *
-   * @var \Drupal\field_group\FieldGroupFormatterPluginManager
+   * @var FieldGroupFormatterPluginManager
    */
   protected $fieldGroupFormatterPluginManager;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * FieldGroupAddForm constructor.
    *
-   * @param \Drupal\field_group\FieldGroupFormatterPluginManager $fieldGroupFormatterPluginManager
+   * @param FieldGroupFormatterPluginManager $fieldGroupFormatterPluginManager
    *   The field group formatter plugin manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(FieldGroupFormatterPluginManager $fieldGroupFormatterPluginManager, MessengerInterface $messenger) {
@@ -301,7 +301,7 @@ class FieldGroupAddForm extends FormBase {
    *   The machine name, not prefixed.
    * @param array $element
    *   An array containing the structure of the 'group_name' element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return bool
diff --git a/src/Form/FieldGroupDeleteForm.php b/src/Form/FieldGroupDeleteForm.php
index ca6a366..c3d17e1 100644
--- a/src/Form/FieldGroupDeleteForm.php
+++ b/src/Form/FieldGroupDeleteForm.php
@@ -24,23 +24,23 @@ class FieldGroupDeleteForm extends ConfirmFormBase {
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * FieldGroupDeleteForm constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
    */
   public function __construct(MessengerInterface $messenger, EntityTypeBundleInfoInterface $entity_type_bundle_info) {
diff --git a/src/FormatterHelper.php b/src/FormatterHelper.php
index a7a9e90..9f059ee 100644
--- a/src/FormatterHelper.php
+++ b/src/FormatterHelper.php
@@ -53,7 +53,7 @@ class FormatterHelper implements TrustedCallbackInterface {
    *
    * @param array $element
    *   Form that is being processed.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $form
    *   The complete form structure.
diff --git a/src/Plugin/Derivative/FieldGroupLocalAction.php b/src/Plugin/Derivative/FieldGroupLocalAction.php
index 5990efd..e41fcf7 100644
--- a/src/Plugin/Derivative/FieldGroupLocalAction.php
+++ b/src/Plugin/Derivative/FieldGroupLocalAction.php
@@ -19,23 +19,23 @@ class FieldGroupLocalAction extends DeriverBase implements ContainerDeriverInter
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a FieldUiLocalAction object.
    *
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider to load routes by name.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(RouteProviderInterface $route_provider, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index bae6a2c..b345a6a 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -16,14 +16,14 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a RouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/tests/src/Functional/EntityDisplayTest.php b/tests/src/Functional/EntityDisplayTest.php
index df2920c..d6488d6 100644
--- a/tests/src/Functional/EntityDisplayTest.php
+++ b/tests/src/Functional/EntityDisplayTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\field_group\Functional;
 
+use Drupal\node\NodeInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\Tests\BrowserTestBase;
@@ -36,7 +38,7 @@ class EntityDisplayTest extends BrowserTestBase {
   /**
    * A node to use for testing.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
@@ -48,7 +50,7 @@ class EntityDisplayTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create test user.
@@ -69,7 +71,7 @@ class EntityDisplayTest extends BrowserTestBase {
       'type' => $type_name,
     ]);
     $this->type = $type->id();
-    /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display */
+    /** @var EntityViewDisplayInterface $display */
     $display = \Drupal::entityTypeManager()
       ->getStorage('entity_view_display')
       ->load('node.' . $type_name . '.default');
diff --git a/tests/src/Functional/FieldGroupWithoutFieldUiTest.php b/tests/src/Functional/FieldGroupWithoutFieldUiTest.php
index 4c44388..c8eac91 100644
--- a/tests/src/Functional/FieldGroupWithoutFieldUiTest.php
+++ b/tests/src/Functional/FieldGroupWithoutFieldUiTest.php
@@ -24,6 +24,7 @@ class FieldGroupWithoutFieldUiTest extends BrowserTestBase {
 
   /**
    * Test that local actions show up without field ui enabled.
+   * @doesNotPerformAssertions
    */
   public function testLocalActions() {
     // Local actions of field_group should not depend on field_ui.
diff --git a/tests/src/Functional/ManageDisplayTest.php b/tests/src/Functional/ManageDisplayTest.php
index bedec36..f7c14d0 100644
--- a/tests/src/Functional/ManageDisplayTest.php
+++ b/tests/src/Functional/ManageDisplayTest.php
@@ -33,7 +33,7 @@ class ManageDisplayTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create test user.
diff --git a/tests/src/FunctionalJavascript/FieldGroupUiTest.php b/tests/src/FunctionalJavascript/FieldGroupUiTest.php
index a650aeb..cceb3b7 100644
--- a/tests/src/FunctionalJavascript/FieldGroupUiTest.php
+++ b/tests/src/FunctionalJavascript/FieldGroupUiTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\field_group\FunctionalJavascript;
 
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\node\Entity\NodeType;
@@ -38,7 +39,7 @@ class FieldGroupUiTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Create test user.
@@ -106,7 +107,7 @@ class FieldGroupUiTest extends WebDriverTestBase {
 
     $page->pressButton('Save');
 
-    /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $display */
+    /** @var EntityFormDisplayInterface $display */
     $display = EntityFormDisplay::load("node.{$this->nodeType}.default");
     $this->assertSame('Test 1 - Update', $display->getThirdPartySetting('field_group', 'group_test_1')['label']);
     $this->assertSame('Test 2 - Update', $display->getThirdPartySetting('field_group', 'group_test_2')['label']);
diff --git a/tests/src/FunctionalJavascript/HorizontalTabsLabelsTest.php b/tests/src/FunctionalJavascript/HorizontalTabsLabelsTest.php
index 8c6701f..cb4e6e0 100644
--- a/tests/src/FunctionalJavascript/HorizontalTabsLabelsTest.php
+++ b/tests/src/FunctionalJavascript/HorizontalTabsLabelsTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\field_group\FunctionalJavascript;
 
+use Drupal\Tests\WebAssert;
+use Behat\Mink\Element\DocumentElement;
+use Drupal\node\NodeTypeInterface;
 use Drupal\Core\Extension\Exception\UnknownExtensionException;
 use Drupal\Core\Extension\ThemeInstallerInterface;
 use Drupal\Core\Url;
@@ -62,28 +65,28 @@ class HorizontalTabsLabelsTest extends WebDriverTestBase {
   /**
    * The webassert session.
    *
-   * @var \Drupal\Tests\WebAssert
+   * @var WebAssert
    */
   protected $assertSession;
 
   /**
    * The page element.
    *
-   * @var \Behat\Mink\Element\DocumentElement
+   * @var DocumentElement
    */
   protected $page;
 
   /**
    * The node type used for testing.
    *
-   * @var \Drupal\node\NodeTypeInterface
+   * @var NodeTypeInterface
    */
   protected $testNodeType;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->assertSession = $this->assertSession();
@@ -194,8 +197,6 @@ class HorizontalTabsLabelsTest extends WebDriverTestBase {
         $theme_installer->install([$theme_name], TRUE);
       }
       catch (UnknownExtensionException $ex) {
-        // Themes might be missing, e.g Drupal 8.x does not have stable9 theme.
-        $this->pass("The $theme_name theme does not exist in the current test environment.");
         return;
       }
       \Drupal::configFactory()
