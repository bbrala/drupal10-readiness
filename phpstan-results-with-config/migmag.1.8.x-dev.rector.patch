diff --git a/migmag_callback_upgrade/tests/src/Unit/MigMagCallbackTest.php b/migmag_callback_upgrade/tests/src/Unit/MigMagCallbackTest.php
index cf34a87..bfb6451 100644
--- a/migmag_callback_upgrade/tests/src/Unit/MigMagCallbackTest.php
+++ b/migmag_callback_upgrade/tests/src/Unit/MigMagCallbackTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_callback_upgrade\Unit\process;
 
+use Drupal\migrate\Plugin\MigrateProcessInterface;
 use Drupal\migrate\MigrateException;
 use Drupal\Tests\migrate\Unit\process\MigrateProcessTestCase;
 use PHPUnit\Util\Test;
@@ -160,7 +161,7 @@ class MigMagCallbackTest extends MigrateProcessTestCase {
   /**
    * Instantiates the plugin being tested.
    *
-   * @return \Drupal\migrate\Plugin\MigrateProcessInterface
+   * @return MigrateProcessInterface
    *   The plugin being tested.
    */
   protected function createPlugin(array $plugin_configuration, string $plugin_id, array $plugin_definition = []) {
diff --git a/migmag_menu_link_migrate/src/MigMagMenuLinkMigrate.php b/migmag_menu_link_migrate/src/MigMagMenuLinkMigrate.php
index fdd9401..1269e74 100644
--- a/migmag_menu_link_migrate/src/MigMagMenuLinkMigrate.php
+++ b/migmag_menu_link_migrate/src/MigMagMenuLinkMigrate.php
@@ -300,9 +300,9 @@ class MigMagMenuLinkMigrate {
   /**
    * Prepares the migration of menu link stubs.
    *
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row being imported.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The current migration.
    */
   public static function prepareMenuLinkStubMigration(Row $row, MigrationInterface $migration): void {
diff --git a/migmag_process/migmag_process_lookup_replace/tests/src/Kernel/MigMagProcessLookupReplaceTest.php b/migmag_process/migmag_process_lookup_replace/tests/src/Kernel/MigMagProcessLookupReplaceTest.php
index cc4974a..63a1a45 100644
--- a/migmag_process/migmag_process_lookup_replace/tests/src/Kernel/MigMagProcessLookupReplaceTest.php
+++ b/migmag_process/migmag_process_lookup_replace/tests/src/Kernel/MigMagProcessLookupReplaceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_process_lookup_replace\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migmag_process\Plugin\migrate\process\MigMagLookup;
 use Drupal\migrate\Plugin\MigratePluginManagerInterface;
@@ -14,6 +15,7 @@ use Drupal\migrate\Plugin\MigrationInterface;
  */
 class MigMagProcessLookupReplaceTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * Tests the installation of Migrate Magician Forced Lookup Replace.
    */
diff --git a/migmag_process/src/MigMagMigrateStub.php b/migmag_process/src/MigMagMigrateStub.php
index 92f0bfe..b54a6f3 100644
--- a/migmag_process/src/MigMagMigrateStub.php
+++ b/migmag_process/src/MigMagMigrateStub.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\migmag_process;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
 use Drupal\migrate\MigrateException;
@@ -77,9 +78,9 @@ class MigMagMigrateStub extends MigrateStub {
    *   An array of destination ids for the new stub, keyed by destination id
    *   key, or false if the stub failed.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\migrate\MigrateException
+   * @throws PluginException
+   * @throws PluginNotFoundException
+   * @throws MigrateException
    * @throws \LogicException
    */
   public function createStub($migration_id, array $source_ids, array $default_values = [], $key_by_destination_ids = NULL, bool $create_only_valid = FALSE) {
diff --git a/migmag_process/src/Plugin/migrate/process/MigMagGetEntityProperty.php b/migmag_process/src/Plugin/migrate/process/MigMagGetEntityProperty.php
index ce2a58c..348ff8f 100644
--- a/migmag_process/src/Plugin/migrate/process/MigMagGetEntityProperty.php
+++ b/migmag_process/src/Plugin/migrate/process/MigMagGetEntityProperty.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migmag_process\Plugin\migrate\process;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\RevisionableStorageInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -130,7 +131,7 @@ class MigMagGetEntityProperty extends ProcessPluginBase implements ContainerFact
   /**
    * The storage of the entity (fetched from the plugin configuration).
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
@@ -143,7 +144,7 @@ class MigMagGetEntityProperty extends ProcessPluginBase implements ContainerFact
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The migration plugin's manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $storage) {
@@ -158,7 +159,7 @@ class MigMagGetEntityProperty extends ProcessPluginBase implements ContainerFact
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   If the specified entity type ID isn't available.
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration = NULL) {
diff --git a/migmag_process/src/Plugin/migrate/process/MigMagLoggerLog.php b/migmag_process/src/Plugin/migrate/process/MigMagLoggerLog.php
index cbf17eb..1dadecd 100644
--- a/migmag_process/src/Plugin/migrate/process/MigMagLoggerLog.php
+++ b/migmag_process/src/Plugin/migrate/process/MigMagLoggerLog.php
@@ -36,14 +36,14 @@ class MigMagLoggerLog extends CoreProcessPluginBase implements ContainerFactoryP
   /**
    * The actual migration plugin instance.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
   /**
    * The logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
@@ -56,9 +56,9 @@ class MigMagLoggerLog extends CoreProcessPluginBase implements ContainerFactoryP
    *   The plugin ID.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The actual migration plugin instance.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger_channel
+   * @param LoggerChannelInterface $logger_channel
    *   The logger channel.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, MigrationInterface $migration, LoggerChannelInterface $logger_channel) {
diff --git a/migmag_process/src/Plugin/migrate/process/MigMagLookup.php b/migmag_process/src/Plugin/migrate/process/MigMagLookup.php
index 9ff5395..42ff950 100644
--- a/migmag_process/src/Plugin/migrate/process/MigMagLookup.php
+++ b/migmag_process/src/Plugin/migrate/process/MigMagLookup.php
@@ -129,14 +129,14 @@ class MigMagLookup extends MigrationLookup {
   /**
    * The migrate stub service.
    *
-   * @var \Drupal\migmag_process\MigMagMigrateStub
+   * @var MigMagMigrateStub
    */
   protected $migrateStub;
 
   /**
    * The migration plugin manager service.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface
+   * @var MigrationPluginManagerInterface
    */
   protected $migrationPluginManager;
 
@@ -149,13 +149,13 @@ class MigMagLookup extends MigrationLookup {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The Migration the plugin is being used in.
-   * @param \Drupal\migrate\MigrateLookupInterface $migrate_lookup
+   * @param MigrateLookupInterface $migrate_lookup
    *   The migrate lookup service.
-   * @param \Drupal\migmag_process\MigMagMigrateStub $migrate_stub
+   * @param MigMagMigrateStub $migrate_stub
    *   The migrate stub service.
-   * @param \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migration_plugin_manager
+   * @param MigrationPluginManagerInterface $migration_plugin_manager
    *   The migration plugin's manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, MigrateLookupInterface $migrate_lookup, MigMagMigrateStub $migrate_stub, MigrationPluginManagerInterface $migration_plugin_manager) {
@@ -367,8 +367,8 @@ class MigMagLookup extends MigrationLookup {
    * @return array|null
    *   The destination IDs of the stub, or NULL if it cannot be created.
    *
-   * @throws \Drupal\migrate\MigrateException
-   * @throws \Drupal\migrate\MigrateSkipRowException
+   * @throws MigrateException
+   * @throws MigrateSkipRowException
    */
   protected function getDestinationIds(array $source_id_values, array $stub_default_values = []): ?array {
     $destination_ids = NULL;
diff --git a/migmag_process/src/Plugin/migrate/process/MigMagTargetBundle.php b/migmag_process/src/Plugin/migrate/process/MigMagTargetBundle.php
index 2a0af24..a71b6b8 100644
--- a/migmag_process/src/Plugin/migrate/process/MigMagTargetBundle.php
+++ b/migmag_process/src/Plugin/migrate/process/MigMagTargetBundle.php
@@ -114,28 +114,28 @@ class MigMagTargetBundle extends ProcessPluginBase implements ContainerFactoryPl
   /**
    * The migration being executed.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
   /**
    * The migrate lookup service.
    *
-   * @var \Drupal\migrate\MigrateLookupInterface
+   * @var MigrateLookupInterface
    */
   protected $migrateLookup;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The migration plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface
+   * @var MigrationPluginManagerInterface
    */
   protected $migrationPluginManager;
 
@@ -148,13 +148,13 @@ class MigMagTargetBundle extends ProcessPluginBase implements ContainerFactoryPl
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The Migration the plugin is being used in.
-   * @param \Drupal\migrate\MigrateLookupInterface $migrate_lookup
+   * @param MigrateLookupInterface $migrate_lookup
    *   The migrate lookup service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migration_plugin_manager
+   * @param MigrationPluginManagerInterface $migration_plugin_manager
    *   The migration plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, MigrateLookupInterface $migrate_lookup, EntityTypeManagerInterface $entity_type_manager, MigrationPluginManagerInterface $migration_plugin_manager) {
diff --git a/migmag_process/src/Plugin/migrate/process/MigMagTry.php b/migmag_process/src/Plugin/migrate/process/MigMagTry.php
index 5db489e..d232cd9 100644
--- a/migmag_process/src/Plugin/migrate/process/MigMagTry.php
+++ b/migmag_process/src/Plugin/migrate/process/MigMagTry.php
@@ -50,7 +50,7 @@ class MigMagTry extends ProcessPluginBase {
   /**
    * The migration being processed.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
@@ -63,7 +63,7 @@ class MigMagTry extends ProcessPluginBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The actually processed migration.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration) {
diff --git a/migmag_process/src/Plugin/migrate/process/MigMagUuidGenerate.php b/migmag_process/src/Plugin/migrate/process/MigMagUuidGenerate.php
index a67ba4f..05a51d2 100644
--- a/migmag_process/src/Plugin/migrate/process/MigMagUuidGenerate.php
+++ b/migmag_process/src/Plugin/migrate/process/MigMagUuidGenerate.php
@@ -37,7 +37,7 @@ class MigMagUuidGenerate extends ProcessPluginBase implements ContainerFactoryPl
   /**
    * The UUID service.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuidGenerator;
 
@@ -50,7 +50,7 @@ class MigMagUuidGenerate extends ProcessPluginBase implements ContainerFactoryPl
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid_generator
+   * @param UuidInterface $uuid_generator
    *   The UUID service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UuidInterface $uuid_generator) {
diff --git a/migmag_process/tests/src/Kernel/MigMagLookupInstallTest.php b/migmag_process/tests/src/Kernel/MigMagLookupInstallTest.php
index 12979d7..727f424 100644
--- a/migmag_process/tests/src/Kernel/MigMagLookupInstallTest.php
+++ b/migmag_process/tests/src/Kernel/MigMagLookupInstallTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_process\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migmag_process\MigMagMigrateStub;
 use Drupal\migmag_process\Plugin\migrate\process\MigMagLookup;
@@ -15,6 +16,7 @@ use Drupal\migrate\Plugin\MigrationInterface;
  */
 class MigMagLookupInstallTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * Tests installation of Migrate Magician Process without Migrate module.
    */
diff --git a/migmag_process/tests/src/Kernel/Plugin/MigMagGetEntityPropertyTest.php b/migmag_process/tests/src/Kernel/Plugin/MigMagGetEntityPropertyTest.php
index 099633e..b9ccf0d 100644
--- a/migmag_process/tests/src/Kernel/Plugin/MigMagGetEntityPropertyTest.php
+++ b/migmag_process/tests/src/Kernel/Plugin/MigMagGetEntityPropertyTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migmag_process\Kernel\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\TypedData\TranslatableInterface;
@@ -19,6 +21,7 @@ use Drupal\Tests\migrate\Kernel\MigrateTestBase;
  */
 class MigMagGetEntityPropertyTest extends MigrateTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -428,7 +431,7 @@ class MigMagGetEntityPropertyTest extends MigrateTestBase {
    *   Keys should be entity type IDs, values should be an array of entity
    *   values.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   When any of the test entities cannot be saved.
    */
   protected function createTestEntities(array $test_entity_values): void {
diff --git a/migmag_process/tests/src/Kernel/Plugin/MigMagLookupTest.php b/migmag_process/tests/src/Kernel/Plugin/MigMagLookupTest.php
index b1d7a58..2f6e608 100644
--- a/migmag_process/tests/src/Kernel/Plugin/MigMagLookupTest.php
+++ b/migmag_process/tests/src/Kernel/Plugin/MigMagLookupTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_process\Kernel\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Utility\Variable;
 use Drupal\Core\Database\Database;
 use Drupal\Core\Extension\ModuleInstallerInterface;
@@ -22,6 +23,7 @@ use Drupal\Tests\migrate\Kernel\MigrateTestBase;
  */
 class MigMagLookupTest extends MigrateTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    *
diff --git a/migmag_process/tests/src/Kernel/Plugin/MigMagTargetBundleTest.php b/migmag_process/tests/src/Kernel/Plugin/MigMagTargetBundleTest.php
index 1024352..f4946db 100644
--- a/migmag_process/tests/src/Kernel/Plugin/MigMagTargetBundleTest.php
+++ b/migmag_process/tests/src/Kernel/Plugin/MigMagTargetBundleTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_process\Kernel\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\migmag_process\Plugin\migrate\process\MigMagTargetBundle;
 use Drupal\migrate\MigrateExecutable;
 use Drupal\migrate\Plugin\MigrationInterface;
@@ -17,6 +18,7 @@ use Drupal\Tests\migrate\Kernel\MigrateTestBase;
  */
 class MigMagTargetBundleTest extends MigrateTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    *
@@ -94,6 +96,7 @@ class MigMagTargetBundleTest extends MigrateTestBase {
    *   An array of migration IDs to execute before testing transform.
    *
    * @dataProvider providerTestPluginWithCommentTypes
+   * @doesNotPerformAssertions
    */
   public function testPluginWithCommentTypes($value, $row_data, $expected_transformed_value, array $plugin_configuration, $migrations_to_execute = NULL) {
     $this->enableModules([
diff --git a/migmag_process/tests/src/Kernel/Plugin/MigMagTryTest.php b/migmag_process/tests/src/Kernel/Plugin/MigMagTryTest.php
index 972172b..c8770f2 100644
--- a/migmag_process/tests/src/Kernel/Plugin/MigMagTryTest.php
+++ b/migmag_process/tests/src/Kernel/Plugin/MigMagTryTest.php
@@ -55,7 +55,7 @@ class MigMagTryTest extends MigrateTestBase {
   /**
    * Migration plugin instance used for the actual test.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
diff --git a/migmag_process/tests/src/Unit/MigMagMigrateStubTest.php b/migmag_process/tests/src/Unit/MigMagMigrateStubTest.php
index 3f2b7f8..baefc64 100644
--- a/migmag_process/tests/src/Unit/MigMagMigrateStubTest.php
+++ b/migmag_process/tests/src/Unit/MigMagMigrateStubTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migmag_process\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Prophecy\Prophecy\ObjectProphecy;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -24,10 +26,11 @@ use Prophecy\Argument;
  */
 class MigMagMigrateStubTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The plugin manager prophecy.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $migrationPluginManager;
 
diff --git a/migmag_process/tests/src/Unit/Plugin/MigMagCompareTest.php b/migmag_process/tests/src/Unit/Plugin/MigMagCompareTest.php
index 6c2face..8285f0f 100644
--- a/migmag_process/tests/src/Unit/Plugin/MigMagCompareTest.php
+++ b/migmag_process/tests/src/Unit/Plugin/MigMagCompareTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_process\Unit\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\migmag_process\Plugin\migrate\process\MigMagCompare;
 use Drupal\migrate\MigrateException;
 use Drupal\migrate\MigrateExecutableInterface;
@@ -17,6 +18,7 @@ use Drupal\Tests\migrate\Unit\MigrateTestCase;
  */
 class MigMagCompareTest extends MigrateTestCase {
 
+  use ProphecyTrait;
   /**
    * Tests the transformation of the provided values.
    *
diff --git a/migmag_process/tests/src/Unit/Plugin/MigMagLoggerLogTest.php b/migmag_process/tests/src/Unit/Plugin/MigMagLoggerLogTest.php
index c343165..69df6b6 100644
--- a/migmag_process/tests/src/Unit/Plugin/MigMagLoggerLogTest.php
+++ b/migmag_process/tests/src/Unit/Plugin/MigMagLoggerLogTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migmag_process\Unit\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Prophecy\Prophecy\ObjectProphecy;
 use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Logger\RfcLogLevel;
 use Drupal\migmag_process\Plugin\migrate\process\MigMagLoggerLog;
@@ -27,6 +29,7 @@ class MigMagLoggerLogTest extends MigrateProcessTestCase {
   const DEFAULT_SOURCE_ID_VALUES = [
     'id' => 'source_row_id',
   ];
+  use ProphecyTrait;
 
   /**
    * Storage for the messages logged during testing.
@@ -38,14 +41,14 @@ class MigMagLoggerLogTest extends MigrateProcessTestCase {
   /**
    * A LoggerChannelInterface prophecy.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $loggerChannel;
 
   /**
    * A MigrationInterface prophecy.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $migration;
 
diff --git a/migmag_process/tests/src/Unit/Plugin/MigMagLookupCoreCompatibilityTest.php b/migmag_process/tests/src/Unit/Plugin/MigMagLookupCoreCompatibilityTest.php
index 5001c79..4f24cd4 100644
--- a/migmag_process/tests/src/Unit/Plugin/MigMagLookupCoreCompatibilityTest.php
+++ b/migmag_process/tests/src/Unit/Plugin/MigMagLookupCoreCompatibilityTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migmag_process\Unit\Plugin;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Prophecy\Prophecy\ObjectProphecy;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Schema;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ -24,10 +26,11 @@ use Prophecy\Argument;
  */
 class MigMagLookupCoreCompatibilityTest extends MigrationLookupTest {
 
+  use ProphecyTrait;
   /**
    * The prophecy of the migration plugin manager service.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $migrationManager;
 
@@ -169,7 +172,7 @@ class MigMagLookupCoreCompatibilityTest extends MigrationLookupTest {
    *
    * @dataProvider successfulLookupDataProvider
    *
-   * @throws \Drupal\migrate\MigrateSkipProcessException
+   * @throws MigrateSkipProcessException
    */
   public function testSuccessfulLookup(array $source_id_values, array $destination_id_values, $source_value, $expected_value) {
     $migration_plugin = $this->prophesize(MigrationInterface::class);
diff --git a/migmag_process/tests/src/Unit/Plugin/MigMagUuidGenerateTest.php b/migmag_process/tests/src/Unit/Plugin/MigMagUuidGenerateTest.php
index ed8782d..9804e93 100644
--- a/migmag_process/tests/src/Unit/Plugin/MigMagUuidGenerateTest.php
+++ b/migmag_process/tests/src/Unit/Plugin/MigMagUuidGenerateTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_process\Unit\Plugin;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Component\Uuid\UuidInterface;
 use Drupal\migmag_process\Plugin\migrate\process\MigMagUuidGenerate;
 use Drupal\Tests\migrate\Unit\process\MigrateProcessTestCase;
@@ -18,7 +19,7 @@ class MigMagUuidGenerateTest extends MigrateProcessTestCase {
   /**
    * The UUID service mock.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var UuidInterface|MockObject
    */
   protected $uuidGenerator;
 
@@ -28,9 +29,7 @@ class MigMagUuidGenerateTest extends MigrateProcessTestCase {
   protected function setUp(): void {
     parent::setUp();
 
-    $this->uuidGenerator = $this->getMockBuilder(UuidInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->uuidGenerator = $this->createMock(UuidInterface::class);
   }
 
   /**
diff --git a/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableComponentEntityDisplayBase.php b/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableComponentEntityDisplayBase.php
index ea0f52a..1a0446e 100644
--- a/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableComponentEntityDisplayBase.php
+++ b/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableComponentEntityDisplayBase.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\migmag_rollbackable\Plugin\migrate\destination;
 
+use Drupal\Core\Entity\Display\EntityDisplayInterface;
 use Drupal\migmag_rollbackable\Traits\RollbackableTrait;
 use Drupal\migrate\Plugin\migrate\destination\ComponentEntityDisplayBase;
 use Drupal\migrate\Row;
@@ -61,7 +62,7 @@ abstract class RollbackableComponentEntityDisplayBase extends ComponentEntityDis
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\Core\Entity\Display\EntityDisplayInterface
+   * @return EntityDisplayInterface
    *   An entity display object.
    */
   protected function getTargetObject(string $target_object_id, string $langcode = '') {
diff --git a/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableDefaultLangcode.php b/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableDefaultLangcode.php
index 7b564cd..cb3f001 100644
--- a/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableDefaultLangcode.php
+++ b/migmag_rollbackable/src/Plugin/migrate/destination/RollbackableDefaultLangcode.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\migmag_rollbackable\Plugin\migrate\destination;
 
+use Drupal\Core\Config\StorableConfigBase;
 use Drupal\migmag_rollbackable\Traits\RollbackableTrait;
 use Drupal\language\Plugin\migrate\destination\DefaultLangcode;
 use Drupal\migrate\Row;
@@ -52,7 +53,7 @@ final class RollbackableDefaultLangcode extends DefaultLangcode {
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\Core\Config\StorableConfigBase
+   * @return StorableConfigBase
    *   The target object (a config).
    */
   protected function getTargetObject(string $target_object_id, string $langcode = '') {
diff --git a/migmag_rollbackable/src/Traits/RollbackableConnectionTrait.php b/migmag_rollbackable/src/Traits/RollbackableConnectionTrait.php
index 14a3c68..1694926 100644
--- a/migmag_rollbackable/src/Traits/RollbackableConnectionTrait.php
+++ b/migmag_rollbackable/src/Traits/RollbackableConnectionTrait.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\migmag_rollbackable\Traits;
 
+use Drupal\Core\Database\Connection;
 /**
  * Trait for getting the DB connection where rollback data is stored.
  */
@@ -12,14 +13,14 @@ trait RollbackableConnectionTrait {
   /**
    * The database connection where rollback data and states are stored.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $rollbackDataConnection;
 
   /**
    * Returns the database connection where rollback data is stored.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   The database connection where rollback data is stored.
    */
   protected function getConnection() {
diff --git a/migmag_rollbackable/src/Traits/RollbackableTargetTrait.php b/migmag_rollbackable/src/Traits/RollbackableTargetTrait.php
index 4728782..c20b5c4 100644
--- a/migmag_rollbackable/src/Traits/RollbackableTargetTrait.php
+++ b/migmag_rollbackable/src/Traits/RollbackableTargetTrait.php
@@ -16,7 +16,7 @@ trait RollbackableTargetTrait {
   /**
    * Determines the target ID from the given destination IDs or migration row.
    *
-   * @param \Drupal\migrate\Row|array $row_or_destination_ids
+   * @param Row|array $row_or_destination_ids
    *   A migration row or an array of the destination IDs.
    *
    * @return string
@@ -36,7 +36,7 @@ trait RollbackableTargetTrait {
   /**
    * Determines the component from the given destination IDs or migration row.
    *
-   * @param \Drupal\migrate\Row|array $row_or_destination_ids
+   * @param Row|array $row_or_destination_ids
    *   A migration row or an array of the destination IDs.
    *
    * @return string
@@ -49,7 +49,7 @@ trait RollbackableTargetTrait {
   /**
    * Determines the language code of the actual target.
    *
-   * @param \Drupal\migrate\Row|array $row_or_destination_ids
+   * @param Row|array $row_or_destination_ids
    *   A migration row or an array of the destination IDs.
    *
    * @return string
@@ -145,7 +145,7 @@ trait RollbackableTargetTrait {
   /**
    * Returns the previous value of the target before the actual migration.
    *
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The processed migration row.
    * @param string $target_object_id
    *   The ID of the target (object).
diff --git a/migmag_rollbackable/tests/src/Kernel/RollbackableDestinationTestBase.php b/migmag_rollbackable/tests/src/Kernel/RollbackableDestinationTestBase.php
index 0081cbd..b1a908b 100644
--- a/migmag_rollbackable/tests/src/Kernel/RollbackableDestinationTestBase.php
+++ b/migmag_rollbackable/tests/src/Kernel/RollbackableDestinationTestBase.php
@@ -51,7 +51,7 @@ abstract class RollbackableDestinationTestBase extends MigrateTestBase {
   /**
    * Returns the base migration for the actual test.
    *
-   * @return \Drupal\migrate\Plugin\MigrationInterface
+   * @return MigrationInterface
    *   The base migration for the actual test.
    */
   abstract protected function baseMigration();
@@ -59,7 +59,7 @@ abstract class RollbackableDestinationTestBase extends MigrateTestBase {
   /**
    * Returns a subsequent migration for the actual test.
    *
-   * @return \Drupal\migrate\Plugin\MigrationInterface
+   * @return MigrationInterface
    *   Subsequent migration for the actual test.
    */
   abstract protected function subsequentMigration();
@@ -67,7 +67,7 @@ abstract class RollbackableDestinationTestBase extends MigrateTestBase {
   /**
    * Returns the base translation migration for the actual test.
    *
-   * @return \Drupal\migrate\Plugin\MigrationInterface
+   * @return MigrationInterface
    *   The base migration for the actual test.
    */
   abstract protected function baseTranslationMigration();
@@ -75,7 +75,7 @@ abstract class RollbackableDestinationTestBase extends MigrateTestBase {
   /**
    * Returns a subsequent translation migration for the actual test.
    *
-   * @return \Drupal\migrate\Plugin\MigrationInterface
+   * @return MigrationInterface
    *   Subsequent migration for the actual test.
    */
   abstract protected function subsequentTranslationMigration();
@@ -103,7 +103,7 @@ abstract class RollbackableDestinationTestBase extends MigrateTestBase {
    * @param array $migration_plugin_definition
    *   The migration plugin definition.
    *
-   * @return \Drupal\migrate\Plugin\MigrationInterface
+   * @return MigrationInterface
    *   A migration plugin instance created form the given definition.
    */
   protected function getMigrationPluginInstance(array $migration_plugin_definition) {
@@ -117,10 +117,10 @@ abstract class RollbackableDestinationTestBase extends MigrateTestBase {
   /**
    * Creates a migrate executable from the given migration plugin instance.
    *
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration plugin instance.
    *
-   * @return \Drupal\migrate\MigrateExecutable
+   * @return MigrateExecutable
    *   A migration plugin instance created form the given definition.
    */
   protected function getMigrateExecutable(MigrationInterface $migration) {
diff --git a/migmag_rollbackable/tests/src/Kernel/RollbackableDisplayComponentTestBase.php b/migmag_rollbackable/tests/src/Kernel/RollbackableDisplayComponentTestBase.php
index 89f3dd8..a72f8e3 100644
--- a/migmag_rollbackable/tests/src/Kernel/RollbackableDisplayComponentTestBase.php
+++ b/migmag_rollbackable/tests/src/Kernel/RollbackableDisplayComponentTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migmag_rollbackable\Kernel;
 
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 
 /**
@@ -33,7 +35,7 @@ abstract class RollbackableDisplayComponentTestBase extends RollbackableDestinat
    * @param string $view_mode
    *   The view mode of the display.
    *
-   * @return \Drupal\Core\Entity\Display\EntityFormDisplayInterface|\Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @return EntityFormDisplayInterface|EntityViewDisplayInterface
    *   The entity form- or view display entity. It might be either a new entity,
    *   or it also might be disabled.
    *
diff --git a/migmag_rollbackable/tests/src/Kernel/RollbackableShortcutSetUsersTest.php b/migmag_rollbackable/tests/src/Kernel/RollbackableShortcutSetUsersTest.php
index b44901f..0825d76 100644
--- a/migmag_rollbackable/tests/src/Kernel/RollbackableShortcutSetUsersTest.php
+++ b/migmag_rollbackable/tests/src/Kernel/RollbackableShortcutSetUsersTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag_rollbackable\Kernel;
 
+use Drupal\user\UserInterface;
 use Drupal\migrate\MigrateExecutable;
 use Drupal\shortcut\Entity\ShortcutSet;
 use Drupal\Tests\user\Traits\UserCreationTrait;
@@ -58,7 +59,7 @@ class RollbackableShortcutSetUsersTest extends RollbackableDestinationTestBase {
   /**
    * The user whose shortcut set migration is tested.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
diff --git a/src/Utility/MigMagSourceUtility.php b/src/Utility/MigMagSourceUtility.php
index 24bbdad..1c00a1c 100644
--- a/src/Utility/MigMagSourceUtility.php
+++ b/src/Utility/MigMagSourceUtility.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\migmag\Utility;
 
+use Drupal\migrate\Plugin\MigrateSourceInterface;
+use Drupal\migrate\Plugin\RequirementsInterface;
 /**
  * Utility for migration source plugins.
  */
@@ -19,7 +21,7 @@ class MigMagSourceUtility {
    * @param string|array $source_plugin
    *   The source plugin ID, or a full source plugin configuration.
    *
-   * @return \Drupal\migrate\Plugin\MigrateSourceInterface|\Drupal\migrate\Plugin\RequirementsInterface
+   * @return MigrateSourceInterface|RequirementsInterface
    *   The fully initialized source plugin.
    */
   public static function getSourcePlugin($source_plugin) {
diff --git a/tests/modules/migmag_predictable_uuid/src/PredictableUuid.php b/tests/modules/migmag_predictable_uuid/src/PredictableUuid.php
index e12f7fd..5fbd14e 100644
--- a/tests/modules/migmag_predictable_uuid/src/PredictableUuid.php
+++ b/tests/modules/migmag_predictable_uuid/src/PredictableUuid.php
@@ -28,23 +28,23 @@ class PredictableUuid extends DefaultGenerator {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs a UuidTestGenerator instance.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(StateInterface $state, FileSystemInterface $file_system) {
diff --git a/tests/src/Functional/MigMagExportTraitBrokenMigrationTest.php b/tests/src/Functional/MigMagExportTraitBrokenMigrationTest.php
index 92f4ebb..fbe6347 100644
--- a/tests/src/Functional/MigMagExportTraitBrokenMigrationTest.php
+++ b/tests/src/Functional/MigMagExportTraitBrokenMigrationTest.php
@@ -41,6 +41,7 @@ class MigMagExportTraitBrokenMigrationTest extends MigMagExportTraitProceduralTe
    * "^6.5 || ^7". PHPUnit 6|7 aren't able to execute test based on the declared
    * dependencies if a method's dependencies are inherited. This is why we have
    * to repeat this test method.
+   * @doesNotPerformAssertions
    */
   public function testDrupal7MigrationInitial() {
     parent::testDrupal7MigrationInitial();
diff --git a/tests/src/Functional/MigMagExportTraitProceduralTest.php b/tests/src/Functional/MigMagExportTraitProceduralTest.php
index 248a377..e0addbd 100644
--- a/tests/src/Functional/MigMagExportTraitProceduralTest.php
+++ b/tests/src/Functional/MigMagExportTraitProceduralTest.php
@@ -22,6 +22,7 @@ class MigMagExportTraitProceduralTest extends MigMagCoreMigrationTestBase {
    * Executes the test of Drupal 7 migration and compares output with the prev.
    *
    * @depends testDrupal7MigrationInitial
+   * @doesNotPerformAssertions
    */
   public function testDrupal7MigrationAgainAndCompare() {
     $this->executeDrupal7Migration();
diff --git a/tests/src/Functional/MigMagFixtureIsUpToDateTest.php b/tests/src/Functional/MigMagFixtureIsUpToDateTest.php
index 0710fd5..73ec54d 100644
--- a/tests/src/Functional/MigMagFixtureIsUpToDateTest.php
+++ b/tests/src/Functional/MigMagFixtureIsUpToDateTest.php
@@ -91,6 +91,7 @@ class MigMagFixtureIsUpToDateTest extends MigMagCoreMigrationTestBase {
 
   /**
    * Tests whether the committed content exports fixtures are up to date.
+   * @doesNotPerformAssertions
    */
   public function testContentExportFixtureIsUpToDate() {
     if (Database::getConnection()->driver() === 'sqlite') {
diff --git a/tests/src/Kernel/MigMagMigrationTestDatabaseTraitTest.php b/tests/src/Kernel/MigMagMigrationTestDatabaseTraitTest.php
index cebe98a..1750531 100644
--- a/tests/src/Kernel/MigMagMigrationTestDatabaseTraitTest.php
+++ b/tests/src/Kernel/MigMagMigrationTestDatabaseTraitTest.php
@@ -236,7 +236,7 @@ class TestMigMagMigrationTestDatabaseClass {
   /**
    * A source DB connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   public $sourceDatabase;
 
diff --git a/tests/src/Kernel/MigMagNativeMigrateSqlTestBase.php b/tests/src/Kernel/MigMagNativeMigrateSqlTestBase.php
index 643b4fd..4da42e9 100644
--- a/tests/src/Kernel/MigMagNativeMigrateSqlTestBase.php
+++ b/tests/src/Kernel/MigMagNativeMigrateSqlTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migmag\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Cache\MemoryCounterBackend;
 use Drupal\Core\Database\Database;
 use Drupal\migrate\Plugin\MigrateDestinationInterface;
@@ -20,12 +22,13 @@ use Drupal\Tests\migmag\Traits\MigMagMigrationTestDatabaseTrait;
  */
 abstract class MigMagNativeMigrateSqlTestBase extends MigrateSqlSourceTestBase {
 
+  use ProphecyTrait;
   use MigMagMigrationTestDatabaseTrait;
 
   /**
    * The source database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $sourceDatabase;
 
@@ -113,7 +116,7 @@ abstract class MigMagNativeMigrateSqlTestBase extends MigrateSqlSourceTestBase {
 
     $i = 0;
     $actual_data = [];
-    /** @var \Drupal\migrate\Row $row */
+    /** @var Row $row */
     foreach ($plugin as $row) {
       $i++;
       $this->assertInstanceOf(Row::class, $row);
@@ -142,7 +145,7 @@ abstract class MigMagNativeMigrateSqlTestBase extends MigrateSqlSourceTestBase {
   /**
    * Tests the cacheablility of the given source plugin.
    *
-   * @param \Drupal\migrate\Plugin\MigrateSourceInterface $plugin
+   * @param MigrateSourceInterface $plugin
    *   The source plugin instance.
    * @param int $expected_count
    *   The expected source record count.
@@ -150,7 +153,7 @@ abstract class MigMagNativeMigrateSqlTestBase extends MigrateSqlSourceTestBase {
    *   The expected cache key (if any). Defaults to NULL.
    */
   protected function assertPluginCountCacheability(MigrateSourceInterface $plugin, int $expected_count, ?string $expected_cache_key) {
-    /** @var \Drupal\Core\Cache\MemoryCounterBackend $cache * */
+    /** @var MemoryCounterBackend $cache * */
     $cache = \Drupal::cache('migrate');
     if (!is_callable([$cache, 'getCounter'])) {
       return;
diff --git a/tests/src/Traits/MigMagExportTrait.php b/tests/src/Traits/MigMagExportTrait.php
index 8e8a84a..5bc6dc3 100644
--- a/tests/src/Traits/MigMagExportTrait.php
+++ b/tests/src/Traits/MigMagExportTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migmag\Traits;
 
+use Drupal\Core\Extension\MissingDependencyException;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\Variable;
 use Drupal\Core\Entity\ContentEntityTypeInterface;
@@ -181,9 +182,9 @@ trait MigMagExportTrait {
    *
    * @requires module eme
    *
-   * @throws \Drupal\Core\Extension\MissingDependencyException
+   * @throws MissingDependencyException
    *   Thrown if the EME module is not available.
-   * @throws \PHPUnit\Framework\ExpectationFailedException
+   * @throws ExpectationFailedException
    *   Thrown when the export throws an exception.
    */
   protected function doExport($destination) {
diff --git a/tests/src/Traits/MigMagKernelTestDxTrait.php b/tests/src/Traits/MigMagKernelTestDxTrait.php
index b4b397f..6abb688 100644
--- a/tests/src/Traits/MigMagKernelTestDxTrait.php
+++ b/tests/src/Traits/MigMagKernelTestDxTrait.php
@@ -89,7 +89,7 @@ trait MigMagKernelTestDxTrait {
    * Basically, this will (should) return the same sorted migration ID list
    * that Migrate Drupal UI executes.
    *
-   * @param \Drupal\Core\Database\Connection|null $source_connection
+   * @param Connection|null $source_connection
    *   Database connection to the source database. Optional. If this argument
    *   isn't specified, then the method will use '$this->sourceDatabase'.
    *
