modules/contrib/hierarchical_term_formatter/hierarchical_term_formatter.module
modules/contrib/hierarchical_term_formatter/hierarchical_term_formatter.theme.inc
modules/contrib/hierarchical_term_formatter/src/Plugin/Field/FieldFormatter/HierarchicalFormatter.php
modules/contrib/hierarchical_term_formatter/tests/modules/hierarchical_term_formatter_test/src/Controller/DefaultController.php
modules/contrib/hierarchical_term_formatter/tests/modules/hierarchical_term_formatter_test/src/ParamConverter/ViewModeConverter.php
modules/contrib/hierarchical_term_formatter/tests/src/Functional/HierarchicalTermFormatterErrorTest.php
modules/contrib/hierarchical_term_formatter/tests/src/Functional/HierarchicalTermFormatterTest.php
modules/contrib/hierarchical_term_formatter/tests/src/Functional/TermCreationTrait.php

6 files with changes
====================

1) modules/contrib/hierarchical_term_formatter/tests/src/Functional/HierarchicalTermFormatterTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\hierarchical_term_formatter\Functional;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\RandomGeneratorTrait;
 use Drupal\Core\Url;
@@ @@
    *
    * @see https://www.drupal.org/node/3083055
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $defaultTheme = 'stark';

@@ @@
   /**
    * The privileged user performing the actions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create a tree we can work on.
     $items = [
@@ @@
         $expected_value = $this->generateLinkString($expected_value['items'], $expected_value['separator']);
       }
       $this->drupalGet("node/$nid/preview/$display_mode");
-      $this->assertRaw(">$expected_value<");
+      $this->assertSession()->responseContains(">$expected_value<");
     }

     $this->drupalLogout();
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/hierarchical_term_formatter/tests/src/Functional/HierarchicalTermFormatterErrorTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\hierarchical_term_formatter\Functional;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\RandomGeneratorTrait;

@@ @@
    *
    * @see https://www.drupal.org/node/3083055
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $defaultTheme = 'stark';

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create a tree we can work on.
     $items = [
@@ @@
     $this->drupalLogin($this->user);

     $this->drupalGet("node/$nid/preview/$view_mode");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Should be the same if we remove the term.
     $term = $this->container->get('entity_type.manager')->getStorage('taxonomy_term')->load($this->createdTerms['1.1.1']);
@@ @@

     $this->container->get('cache_tags.invalidator')->invalidateTags($node->getCacheTagsToInvalidate());
     $this->drupalGet("node/$nid/preview/$view_mode");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     $this->drupalLogout();
   }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/hierarchical_term_formatter/tests/modules/hierarchical_term_formatter_test/src/ParamConverter/ViewModeConverter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hierarchical_term_formatter_test\ParamConverter;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\ParamConverter\ParamConverterInterface;
 use Symfony\Component\Routing\Route;
@@ @@
   /**
    * A storage instance for entity_view_mode entity.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;

@@ @@
   /**
    * Constructs a ViewModeConverter object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/hierarchical_term_formatter/tests/modules/hierarchical_term_formatter_test/src/Controller/DefaultController.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Provides a page to render a single entity.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node to be rendered.
-   * @param \Drupal\Core\Entity\EntityDisplayModeInterface $view_mode
+   * @param EntityDisplayModeInterface $view_mode
    *   The view mode that should be used to display the entity.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/hierarchical_term_formatter/src/Plugin/Field/FieldFormatter/HierarchicalFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hierarchical_term_formatter\Plugin\Field\FieldFormatter;

+use Drupal\taxonomy\TermStorage;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\Plugin\Field\FieldFormatter\EntityReferenceFormatterBase;
 use Drupal\Core\Field\FieldItemListInterface;
@@ @@
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\taxonomy\TermStorage
+   * @var TermStorage
    */
   protected $taxonomyTermStorage;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $taxonomy_term_storage
+   * @param EntityStorageInterface $taxonomy_term_storage
    *   The Taxonomy Term storage.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, EntityStorageInterface $taxonomy_term_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/hierarchical_term_formatter/hierarchical_term_formatter.theme.inc:22

    ---------- begin diff ----------
@@ @@
       $url = new Url('entity.taxonomy_term.canonical', ['taxonomy_term' => $term->id()]);
       $link = Link::fromTextAndUrl($term->getName(), $url);
       $link = $link->toRenderable();
-      $terms[] = render($link);
+      $terms[] = \Drupal::service('renderer')->render($link);
     }
     else {
       $terms[] = $term->getName();
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

