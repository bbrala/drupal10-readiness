diff --git a/sourcepoint.module b/sourcepoint.module
index 6d245cf..c8861ff 100644
--- a/sourcepoint.module
+++ b/sourcepoint.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Menu\MenuLinkDefault;
+use Drupal\Core\Url;
 /**
  * @file
  * Sourcepoint module.
@@ -93,7 +95,7 @@ function sourcepoint_page_attachments(array &$page) {
 
     // URL to msg JS.
     if ($msg_path = $endpoint_service->getEndpoint('msg')->getPath()) {
-      $bootstrap['#msg_url'] = file_create_url($msg_path);
+      $bootstrap['#msg_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($msg_path);
     }
 
     // Pass config to the template.
@@ -179,13 +181,13 @@ function sourcepoint_page_attachments(array &$page) {
 function sourcepoint_preprocess_menu(&$variables) {
   // We need to set Onclick on the privacy preferences link.
   foreach ($variables['items'] as $item) {
-    /** @var \Drupal\Core\Menu\MenuLinkDefault $menu_link */
+    /** @var MenuLinkDefault $menu_link */
     $menu_link = isset($item['original_link']) ? $item['original_link'] : NULL;
     if ($menu_link->getTitle() === 'Privacy Preferences') {
       // Sourcepoint configuration.
       $config = \Drupal::config('sourcepoint.settings');
       $privacy_id = $config->get('privacy_manager_id_v2');
-      /** @var \Drupal\Core\Url $url */
+      /** @var Url $url */
       $url = $item['url'];
       $onclick = 'window._sp_.loadPrivacyManagerModal(' . $privacy_id  . ');';
       $option = ['onclick' => $onclick];
diff --git a/src/Api/AbstractEndpoint.php b/src/Api/AbstractEndpoint.php
index 41d1446..dc90d13 100644
--- a/src/Api/AbstractEndpoint.php
+++ b/src/Api/AbstractEndpoint.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\sourcepoint\Api;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 
@@ -24,14 +26,14 @@ abstract class AbstractEndpoint implements EndpointInterface {
   /**
    * API Client.
    *
-   * @var \Drupal\sourcepoint\Api\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
   /**
    * Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -45,9 +47,9 @@ abstract class AbstractEndpoint implements EndpointInterface {
   /**
    * AbstractEndpoint constructor.
    *
-   * @param \Drupal\sourcepoint\Api\ClientInterface $client
+   * @param ClientInterface $client
    *   The client service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct(ClientInterface $client, ConfigFactoryInterface $config_factory) {
@@ -80,7 +82,7 @@ abstract class AbstractEndpoint implements EndpointInterface {
    * {@inheritdoc}
    */
   public function fetch() {
-    FileSystemInterface::saveData($this->request(), $this->getPath(), FILE_EXISTS_REPLACE);
+    FileSystemInterface::saveData($this->request(), $this->getPath(), FileSystemInterface::EXISTS_REPLACE);
     return $this;
   }
 
@@ -115,7 +117,7 @@ abstract class AbstractEndpoint implements EndpointInterface {
   /**
    * Get editable config.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   Editable config object.
    */
   protected function getEditableConfig() {
@@ -125,7 +127,7 @@ abstract class AbstractEndpoint implements EndpointInterface {
   /**
    * Get config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   Immutable config object.
    */
   protected function getConfig() {
diff --git a/src/Api/EndpointManager.php b/src/Api/EndpointManager.php
index 7cdbbb4..deca9cd 100644
--- a/src/Api/EndpointManager.php
+++ b/src/Api/EndpointManager.php
@@ -12,7 +12,7 @@ class EndpointManager implements EndpointManagerInterface {
   /**
    * List of collected endpoints.
    *
-   * @var \Drupal\sourcepoint\Api\EndpointInterface[]
+   * @var EndpointInterface[]
    */
   protected $endpoints = [];
 
diff --git a/src/Api/EndpointManagerInterface.php b/src/Api/EndpointManagerInterface.php
index 3ce023f..44ef755 100644
--- a/src/Api/EndpointManagerInterface.php
+++ b/src/Api/EndpointManagerInterface.php
@@ -20,7 +20,7 @@ interface EndpointManagerInterface {
    * @param string $endpoint_name
    *   Endpoint name.
    *
-   * @return \Drupal\sourcepoint\Api\EndpointInterface
+   * @return EndpointInterface
    *   Endpoint service.
    */
   public function getEndpoint($endpoint_name);
@@ -28,7 +28,7 @@ interface EndpointManagerInterface {
   /**
    * Get list of endpoints.
    *
-   * @return \Drupal\sourcepoint\Api\EndpointInterface[]
+   * @return EndpointInterface[]
    *   List of endpoint services.
    */
   public function getEndpoints();
diff --git a/src/Cmp.php b/src/Cmp.php
index 50f51f9..474fe11 100644
--- a/src/Cmp.php
+++ b/src/Cmp.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sourcepoint;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Url;
 
@@ -15,14 +16,14 @@ class Cmp implements CmpInterface {
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Cmp constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -101,7 +102,7 @@ class Cmp implements CmpInterface {
   /**
    * Get config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   Immutable config.
    */
   protected function getConfig() {
diff --git a/src/CmpInterface.php b/src/CmpInterface.php
index 1f6257e..bd36866 100644
--- a/src/CmpInterface.php
+++ b/src/CmpInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sourcepoint;
 
+use Drupal\Core\Url;
 /**
  * Interface CmpInterface.
  *
@@ -20,7 +21,7 @@ interface CmpInterface {
   /**
    * Gets the privacy URL.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Overlay URL.
    */
   public function getUrl();
diff --git a/src/Drush/Commands.php b/src/Drush/Commands.php
index 5667254..ddaa6b7 100644
--- a/src/Drush/Commands.php
+++ b/src/Drush/Commands.php
@@ -15,14 +15,14 @@ class Commands extends DrushCommands {
   /**
    * Endpoint manager.
    *
-   * @var \Drupal\sourcepoint\Api\EndpointManagerInterface
+   * @var EndpointManagerInterface
    */
   protected $endpointManager;
 
   /**
    * Commands constructor.
    *
-   * @param \Drupal\sourcepoint\Api\EndpointManagerInterface $endpoint_manager
+   * @param EndpointManagerInterface $endpoint_manager
    *   Endpoint manager.
    */
   public function __construct(EndpointManagerInterface $endpoint_manager) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 7b2422d..0a015c7 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -16,16 +16,16 @@ class SettingsForm extends ConfigFormBase {
   /**
    * CMP service.
    *
-   * @var \Drupal\sourcepoint\CmpInterface
+   * @var CmpInterface
    */
   protected $cmp;
 
   /**
    * SettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\sourcepoint\CmpInterface $cmp
+   * @param CmpInterface $cmp
    *   CMP service.
    */
   public function __construct(
diff --git a/tests/src/Unit/CmpTest.php b/tests/src/Unit/CmpTest.php
index 31fcafb..3a29333 100644
--- a/tests/src/Unit/CmpTest.php
+++ b/tests/src/Unit/CmpTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sourcepoint\Unit;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Drupal\sourcepoint\Cmp;
 use Drupal\Core\Config\ConfigBase;
@@ -16,10 +17,10 @@ class CmpTest extends UnitTestCase {
   /**
    * Get mocked config factory.
    *
-   * @param \Drupal\Core\Config\ConfigBase $config
+   * @param ConfigBase $config
    *   Mocked config class.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    *   Mocked config factory.
    */
   protected function getConfigFactory(ConfigBase $config) {
@@ -34,7 +35,7 @@ class CmpTest extends UnitTestCase {
    * @param array $value_map
    *   Value map for getter.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    *   Mocked config class.
    */
   protected function getConfig(array $value_map) {
