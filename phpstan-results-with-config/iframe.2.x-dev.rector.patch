diff --git a/iframe.install b/iframe.install
index d03c34f..6fb64ea 100644
--- a/iframe.install
+++ b/iframe.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityFieldManagerInterface;
 /**
  * @file
  * Contains install, uninstall and update functions for IFrame.
@@ -37,7 +38,7 @@ function iframe_update_8101(&$sandbox) {
   // code.
   drupal_flush_all_caches();
 
-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+  /** @var EntityFieldManagerInterface $entityFieldManager */
   $entityFieldManager = \Drupal::service('entity_field.manager');
   $entityDefinitionUpdateManager = \Drupal::entityDefinitionUpdateManager();
   $entityTypeManager = \Drupal::entityTypeManager();
@@ -85,7 +86,7 @@ function iframe_update_8101(&$sandbox) {
  * Add a headerlevel column to iframe fields that do not have it yet.
  */
 function iframe_update_8201(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+  /** @var EntityFieldManagerInterface $entityFieldManager */
   $entityFieldManager = \Drupal::service('entity_field.manager');
   $entityDefinitionUpdateManager = \Drupal::entityDefinitionUpdateManager();
   $entityTypeManager = \Drupal::entityTypeManager();
@@ -137,7 +138,7 @@ function iframe_update_8203(&$sandbox) {
   // code.
   drupal_flush_all_caches();
 
-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+  /** @var EntityFieldManagerInterface $entityFieldManager */
   $entityFieldManager = \Drupal::service('entity_field.manager');
   $entityDefinitionUpdateManager = \Drupal::entityDefinitionUpdateManager();
   $entityTypeManager = \Drupal::entityTypeManager();
diff --git a/src/Plugin/Field/FieldWidget/IframeWidgetBase.php b/src/Plugin/Field/FieldWidget/IframeWidgetBase.php
index 5690665..d9e2605 100644
--- a/src/Plugin/Field/FieldWidget/IframeWidgetBase.php
+++ b/src/Plugin/Field/FieldWidget/IframeWidgetBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\iframe\Plugin\Field\FieldWidget;
 
+use Drupal\iframe\Plugin\Field\FieldType\IframeItem;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\WidgetBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -221,8 +222,7 @@ class IframeWidgetBase extends WidgetBase {
     // \iframe_debug(0, 'formElement widget_settings', $widget_settings);
     // \iframe_debug(0, 'formElement field_settings', $field_settings);
     // \iframe_debug(0, 'formElement defaultSettings', self::defaultSettings());
-
-    /** @var \Drupal\iframe\Plugin\Field\FieldType\IframeItem $item */
+    /** @var IframeItem $item */
     $item =& $items[$delta];
     $field_definition = $item->getFieldDefinition();
     /* on_admin_page TRUE only if on field edit page, not on widget-edit */
@@ -415,7 +415,7 @@ class IframeWidgetBase extends WidgetBase {
    * @param array $form
    *   The form structure where widgets are being attached to. This might be a
    *   full form structure, or a sub-element of a larger form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/tests/src/Kernel/IframeSchemaTest.php b/tests/src/Kernel/IframeSchemaTest.php
index a3e09ae..a8414bb 100644
--- a/tests/src/Kernel/IframeSchemaTest.php
+++ b/tests/src/Kernel/IframeSchemaTest.php
@@ -39,7 +39,7 @@ class IframeSchemaTest extends EntityKernelTestBase {
     $url = 'https://www.drupal.org/';
     $typed_config = \Drupal::service('config.typed');
     // Test the field storage schema.
-    /** @var \Drupal\field\Entity\FieldStorageConfig $field */
+    /** @var FieldStorageConfig $field */
     $field_storage = FieldStorageConfig::create([
       'entity_type' => 'entity_test',
       'field_name' => 'field_test',
@@ -51,7 +51,7 @@ class IframeSchemaTest extends EntityKernelTestBase {
     $this->assertConfigSchema($typed_config, 'field.storage.' . $field_storage->id(), $field_storage->toArray());
 
     // Test the field schema.
-    /** @var \Drupal\field\Entity\FieldConfig $field */
+    /** @var FieldConfig $field */
     $field = FieldConfig::create([
       'entity_type' => 'entity_test',
       'field_name' => 'field_test',
@@ -78,7 +78,7 @@ class IframeSchemaTest extends EntityKernelTestBase {
     $this->assertConfigSchema($typed_config, 'field.field.' . $field->id(), $field->toArray());
 
     // Test the field widget schema.
-    /** @var \Drupal\Core\Entity\Entity\EntityFormDisplay $form_display */
+    /** @var EntityFormDisplay $form_display */
     $form_display = EntityFormDisplay::create([
       'targetEntityType' => 'entity_test',
       'bundle' => 'entity_test',
@@ -149,7 +149,7 @@ class IframeSchemaTest extends EntityKernelTestBase {
     $this->assertConfigSchema($typed_config, 'core.entity_form_display.' . $form_display->id(), $form_display->toArray());
 
     // Test all the field formatters schema.
-    /** @var \Drupal\Core\Entity\Entity\EntityViewDisplay $view_display */
+    /** @var EntityViewDisplay $view_display */
     $view_display = EntityViewDisplay::create([
       'targetEntityType' => 'entity_test',
       'bundle' => 'entity_test',
