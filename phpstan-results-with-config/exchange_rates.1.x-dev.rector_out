modules/contrib/exchange_rates/exchange_rates.module
modules/contrib/exchange_rates/src/Form/ExchangeRatesBlockForm.php
modules/contrib/exchange_rates/src/Form/ExchangeRatesSettingsForm.php
modules/contrib/exchange_rates/src/Plugin/Block/ExchangeRatesBlock.php
modules/contrib/exchange_rates/tests/src/Functional/ExchangeRatesTest.php
modules/contrib/exchange_rates/tests/src/FunctionalJavascript/ExchangeRatesTest.php

4 files with changes
====================

1) modules/contrib/exchange_rates/tests/src/FunctionalJavascript/ExchangeRatesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\exchange_rates\FunctionalJavascript;

+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;

 /**
@@ @@
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
@@ @@
     $conversion_currencies = $this->config('exchange_rates.settings')->get('conversion_currency');
     for ($i = 0; $i < count($conversion_currencies); $i++) {
       $conversion_currency_field = $page->findField('fx_fieldset[conversion_currency][' . $i . ']');
-      $this->assertEqual($conversion_currencies[$i], $conversion_currency_field->getValue());
+      $this->assertEquals($conversion_currencies[$i], $conversion_currency_field->getValue());
     }

     // Removes all conversion currencies except the first and verifies that the
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/exchange_rates/tests/src/Functional/ExchangeRatesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\exchange_rates\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/exchange_rates/src/Plugin/Block/ExchangeRatesBlock.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Stores the config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Stores the form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;

@@ @@
   /**
    * A http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Stores the state storage service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
    *   Plugin ID.
    * @param mixed $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   Form builder.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   A http client.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State key value store.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, FormBuilderInterface $form_builder, ClientInterface $http_client, StateInterface $state) {
@@ @@
   /**
    * Create method.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container.
    * @param array $configuration
    *   Configuration array.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/exchange_rates/src/Form/ExchangeRatesBlockForm.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Stores the state storage service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key value store.
    */
   public function __construct(StateInterface $state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

