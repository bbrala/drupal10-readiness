modules/contrib/trial_role/src/Form/SettingsForm.php
modules/contrib/trial_role/tests/src/Kernel/TrialRoleTest.php
modules/contrib/trial_role/trial_role.module

2 files with changes
====================

1) modules/contrib/trial_role/trial_role.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user\UserInterface;
 /**
  * @file
  * Trial role module.
@@ @@
  * @todo Might be possible to do this in a hook that fires only once?
  */
 function trial_role_user_presave(EntityInterface $entity) {
-  /** @var \Drupal\user\UserInterface $entity */
+  /** @var UserInterface $entity */
   if (!$entity->isNew()) {
     return;
   }
@@ @@
   $users = $user_storage->loadMultiple($ids);

   foreach ($users as $user) {
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     // See if they are too old to be trial users.
     if ($user->getCreatedTime() < time() - _trial_role_get_expiration_length()) {
       \Drupal::logger(TRIAL_ROLE_LOG_TAG)
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/trial_role/tests/src/Kernel/TrialRoleTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\trial_role\Kernel;

+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\CronInterface;
+use Drupal\user\UserInterface;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
     $user->set('created', time() - (3 * (3600 * 24)));
     $user->save();
     // Run cron.
-    /** @var \Drupal\Core\CronInterface $cron */
+    /** @var CronInterface $cron */
     $cron = $this->container->get('cron');
     $cron->run();
     // Re-load the user.
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = $this->entityTypeManager->getStorage('user')->load($user->id());
     $this->assertFalse(in_array('trial', $user->getRoles()));
   }
@@ @@
   /**
    * Helper to create a user and make sure it gets the trial role added.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The newly created and saved and verified user.
    */
   protected function createAndAssertUser() {
-    /** @var \Drupal\user\UserInterface $new_user */
+    /** @var UserInterface $new_user */
     $new_user = $this->entityTypeManager->getStorage('user')
       ->create([
         'status' => 1,
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

