modules/contrib/entity_visitors-entity_visitors/entity_visitors.module
modules/contrib/entity_visitors-entity_visitors/entity_visitors.page.inc
modules/contrib/entity_visitors-entity_visitors/src/Entity/EntityVisitors.php
modules/contrib/entity_visitors-entity_visitors/src/Entity/EntityVisitorsInterface.php
modules/contrib/entity_visitors-entity_visitors/src/Entity/EntityVisitorsViewsData.php
modules/contrib/entity_visitors-entity_visitors/src/EntityVisitorsAccessControlHandler.php
modules/contrib/entity_visitors-entity_visitors/src/EntityVisitorsHtmlRouteProvider.php
modules/contrib/entity_visitors-entity_visitors/src/EntityVisitorsListBuilder.php
modules/contrib/entity_visitors-entity_visitors/src/EntityVisitorsTranslationHandler.php
modules/contrib/entity_visitors-entity_visitors/src/Event/EntityVisitedEvent.php
modules/contrib/entity_visitors-entity_visitors/src/EventSubscriber/EntityRouteMatchSubscriber.php
modules/contrib/entity_visitors-entity_visitors/src/EventSubscriber/SendMailOnEntityVisitedSubscriber.php
modules/contrib/entity_visitors-entity_visitors/src/Form/EntityVisitorsConfig.php
modules/contrib/entity_visitors-entity_visitors/src/Form/EntityVisitorsDeleteForm.php
modules/contrib/entity_visitors-entity_visitors/src/Form/EntityVisitorsForm.php
modules/contrib/entity_visitors-entity_visitors/src/Form/EntityVisitorsSettingsForm.php
modules/contrib/entity_visitors-entity_visitors/src/Service/EntityVisitorsManager.php

9 files with changes
====================

1) modules/contrib/entity_visitors-entity_visitors/src/Service/EntityVisitorsManager.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   private $currentUser;

@@ @@
   /**
    * The matched route.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   private $routeMatch;

@@ @@
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The event dispatcher service.
    *
-   * @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher
+   * @var ContainerAwareEventDispatcher
    */
   private $eventDispatcher;

@@ @@
   /**
    * The entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * The entityTypeBundleInfo service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   private $entityTypeBundleInfo;

@@ @@
   /**
    * Constructs a new EntityVisitorsManager object.
    *
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   Config manager instance.
-   * @param \Drupal\Core\Session\AccountProxy $currentUser
+   * @param AccountProxy $currentUser
    *   Current user.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   Route matcher.
-   * @param \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher $eventDispatcher
+   * @param ContainerAwareEventDispatcher $eventDispatcher
    *   Event dispatcher service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager instance.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   Entity type bundle info instance to get the bundles.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
    */
   public function __construct(ConfigManagerInterface $configManager,
@@ @@
     // a certain number views or pretty much anything.
     $entityVisitedEvent = new EntityVisitedEvent($visitedEntityId, $visitedEntityType, $entityVisitorId);
     // Dispatch event, an entity was visited!
-    $this->eventDispatcher->dispatch(EntityVisitedEvent::VISITED, $entityVisitedEvent);
+    $this->eventDispatcher->dispatch($entityVisitedEvent, EntityVisitedEvent::VISITED);

     $saveLastVisitOnly = $this->configManager->getConfigFactory()
       ->get('entity_visitors.entity_visitors_config')
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


2) modules/contrib/entity_visitors-entity_visitors/src/Form/EntityVisitorsSettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_visitors-entity_visitors/src/Form/EntityVisitorsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_visitors\Form;

+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_visitors-entity_visitors/src/Form/EntityVisitorsConfig.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The RequestStack object.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * EntityVisitorsConfig constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request service.
    */
   public function __construct(RequestStack $requestStack) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_visitors-entity_visitors/src/EventSubscriber/SendMailOnEntityVisitedSubscriber.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * A mail manager instance.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   private $mailManager;

@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * A configuration manager instance.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   private $configManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/entity_visitors-entity_visitors/src/EventSubscriber/EntityRouteMatchSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_visitors\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\entity_visitors\Service\EntityVisitorsManager;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Component\Datetime\TimeInterface;

@@ @@
   /**
    * The manager takes the current visited entity and handle things for you.
    *
-   * @var \Drupal\entity_visitors\Service\EntityVisitorsManager
+   * @var EntityVisitorsManager
    */
   private $entityVisitedManager;

@@ @@
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * If this was entity view page, then handle this entity.
    */
-  public function updateEntityVisitors(FilterResponseEvent $event) {
+  public function updateEntityVisitors(ResponseEvent $event) {
     // Check https://www.lullabot.com/articles/common-max-age-pitfalls-with-drupal-cache
     if (!$event->isMasterRequest()) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/entity_visitors-entity_visitors/src/Event/EntityVisitedEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_visitors\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * EntityVisted Event Class.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/entity_visitors-entity_visitors/src/EntityVisitorsHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/entity_visitors-entity_visitors/src/EntityVisitorsAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_visitors;

+use Drupal\entity_visitors\Entity\EntityVisitorsInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\entity_visitors\Entity\EntityVisitorsInterface $entity */
-
+    /** @var EntityVisitorsInterface $entity */
     switch ($operation) {

       case 'view':
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 9 files have been changed by Rector                                       

