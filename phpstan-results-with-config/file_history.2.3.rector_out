modules/contrib/file_history/file_history.api.php
modules/contrib/file_history/file_history.install
modules/contrib/file_history/file_history.module
modules/contrib/file_history/modules/test_file_history/src/Form/ExempleForm.php
modules/contrib/file_history/modules/test_file_history/src/Form/LegacyExempleForm.php
modules/contrib/file_history/modules/test_file_history/test_file_history.install
modules/contrib/file_history/modules/test_file_history/test_file_history.module
modules/contrib/file_history/src/Controller/FileHistoryDownloadController.php
modules/contrib/file_history/src/Element/FileHistory.php
modules/contrib/file_history/src/Plugin/Field/FieldWidget/FileHistoryWidget.php

3 files with changes
====================

1) modules/contrib/file_history/src/Element/FileHistory.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\file_history\Element;

+use Drupal\Core\Render\RendererInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ @@
    *
    * @param mixed $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response of the ajax upload.
    */
   public static function uploadAjaxCallback(&$form, FormStateInterface &$form_state, Request $request) {
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');

     $form_parents = explode('/', $request->query->get('element_parents'));
@@ @@
    *
    * @param mixed $element
    *   Element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    * @param array $new_files
    *   Files newly uploaded.
@@ @@

     // Provide Legacy mode (use physical folder to manage files).
     if ($element['#legacy']) {
-      /** @var \Drupal\Core\File\FileSystemInterface  $file_sytem_service */
+      /** @var FileSystemInterface $file_sytem_service */
       $file_sytem_service = \Drupal::service('file_system');

       if (!$file_sytem_service->prepareDirectory($element['#upload_location'])) {
@@ @@
   /**
    * Generate Download URL.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   File object.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Url object
    */
   public static function makeDownloadLink(File $file): Url {
@@ @@
     $scheme = \Drupal::service('file_system')->uriScheme($path);

     if ($scheme == 'public') {
-      $filepath = file_create_url($path);
+      $filepath = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
       return Url::fromUri($filepath);
     }
     else {
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/file_history/src/Controller/FileHistoryDownloadController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * File_system_service.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   private $fileSystemService;

@@ @@
   /**
    * Download non public files.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   File object.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   File content
    */
   public function downloadFile(FileInterface $file) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/file_history/modules/test_file_history/test_file_history.module:16

    ---------- begin diff ----------
@@ @@
 /**
  * Add a custom validator to file_upload.
  *
- * @param \Drupal\file\FileInterface $file
+ * @param FileInterface $file
  *   A file entity.
  * @param mixed $first_parameter
  *   (optional) Some additional data.
    ----------- end diff -----------

 [OK] 3 files have been changed by Rector                                       

