modules/contrib/computed_breadcrumbs/computed_breadcrumbs.module
modules/contrib/computed_breadcrumbs/src/Controller/BreadcrumbsExtractor.php
modules/contrib/computed_breadcrumbs/src/EventListener.php
modules/contrib/computed_breadcrumbs/src/Field/ComputedBreadcrumbsItemList.php
modules/contrib/computed_breadcrumbs/src/Plugin/Field/FieldType/ComputedBreadcrumbsLinkItem.php
modules/contrib/computed_breadcrumbs/src/Routing/BreadcrumbsResponse.php
modules/contrib/computed_breadcrumbs/tests/src/Kernel/ComputedBreadcrumbsKernelTest.php

5 files with changes
====================

1) modules/contrib/computed_breadcrumbs/tests/src/Kernel/ComputedBreadcrumbsKernelTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\KernelTests\computed_breadcrumbs\Kernel;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Breadcrumb\Breadcrumb;
 use Drupal\Core\Link;
 use Drupal\Core\Routing\RouteMatch;
@@ @@
  */
 class ComputedBreadcrumbsKernelTest extends EntityKernelTestBase {

+  use ProphecyTrait;
   /**
    * Modules to enable.
    *
@@ @@
   /**
    * Set the default field storage backend for fields created during tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $account = $this->createUser();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/computed_breadcrumbs/src/Routing/BreadcrumbsResponse.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\computed_breadcrumbs\Routing;

+use Drupal\Core\Link;
 use Symfony\Component\HttpFoundation\Response;

 /**
@@ @@
   /**
    * The retrieved breadcrumbs.
    *
-   * @var \Drupal\Core\Link[]
+   * @var Link[]
    */
   protected $breadcrumbs;

@@ @@
   /**
    * Set the breadcrumbs value.
    *
-   * @param \Drupal\Core\Link[] $breadcrumbs
+   * @param Link[] $breadcrumbs
    *   The list of breadcrumbs.
    */
   public function setBreadcrumbs(array $breadcrumbs) {
@@ @@
   /**
    * Retrieve the list of breadcrumb links.
    *
-   * @return \Drupal\Core\Link[]
+   * @return Link[]
    *   The contained breadcrumbs list.
    */
   public function getBreadcrumbs() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/computed_breadcrumbs/src/Field/ComputedBreadcrumbsItemList.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\computed_breadcrumbs\Field;

+use Symfony\Component\HttpKernel\HttpKernel;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\Core\Menu\MenuActiveTrail;
 use Drupal\computed_breadcrumbs\Routing\BreadcrumbsResponse;
 use Drupal\Core\Field\FieldItemList;
 use Drupal\Core\Render\RenderContext;
@@ @@
    * @inheritDoc
    */
   protected function computeValue() {
-    /** @var \Symfony\Component\HttpKernel\HttpKernel $httpKernel */
+    /** @var HttpKernel $httpKernel */
     $httpKernel = \Drupal::service('http_kernel');
-    /** @var \Symfony\Component\HttpFoundation\RequestStack $requestStack */
+    /** @var RequestStack $requestStack */
     $requestStack = \Drupal::service('request_stack');

     $parent = $this->getEntity();
@@ @@
     }

     if ($response instanceof BreadcrumbsResponse) {
-      /** @var \Drupal\Core\Menu\MenuActiveTrail $activeTrail */
+      /** @var MenuActiveTrail $activeTrail */
       $activeTrail = \Drupal::service('menu.active_trail');
       $activeTrail->clear();
       $links = $response->getBreadcrumbs();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/computed_breadcrumbs/src/EventListener.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\computed_breadcrumbs;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
    * If there is a `computed_breadcrumbs` attribute on the current request,
    * pass the request to the breadcrumbs extractor.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The kernel event object.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $request = $event->getRequest();
     if ($request->attributes->has('computed_breadcrumbs')) {
       $request->attributes->set('_controller', '\Drupal\computed_breadcrumbs\Controller\BreadcrumbsExtractor:extract');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/computed_breadcrumbs/src/Controller/BreadcrumbsExtractor.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The breadcrumb manager.
    *
-   * @var \Drupal\Core\Breadcrumb\BreadcrumbBuilderInterface
+   * @var BreadcrumbBuilderInterface
    */
   protected $breadcrumbManager;

@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * Extract the breadcrumbs and return them.
    *
-   * @return \Drupal\computed_breadcrumbs\Routing\BreadcrumbsResponse
+   * @return BreadcrumbsResponse
    *   A metatag response instance.
    */
   public function extract() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

