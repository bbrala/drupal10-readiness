diff --git a/ajax_dependency.example.php b/ajax_dependency.example.php
index bc5d632..2efe9ea 100644
--- a/ajax_dependency.example.php
+++ b/ajax_dependency.example.php
@@ -1,4 +1,8 @@
 <?php
+use Drupal\Core\TypedData\Exception\MissingDataException;
+use Drupal\Core\Entity\EntityFormInterface;
+use Drupal\Core\Entity\ContentEntityInterface;
+use Drupal\Core\Field\FieldItemInterface;
 /**
  * @file
  *   Ajax Dependency examples..
@@ -12,10 +16,10 @@ use Drupal\Core\Form\FormStateInterface;
  *
  * This is an example how to use ajax_dependency in form_alter of a node form.
  *
- * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+ * @throws MissingDataException
  */
 function h4c_organisation_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\Core\Entity\EntityFormInterface $formObject */
+  /** @var EntityFormInterface $formObject */
   $formObject = $form_state->getFormObject();
   $node = $formObject->getEntity();
   if ($node->bundle() === 'organisation') {
@@ -30,10 +34,10 @@ function h4c_organisation_form_node_form_alter(&$form, FormStateInterface $form_
       \Drupal::messenger()->addError(t('Missing fields: %fields', ['%fields' => implode(', ', $missingFields)]));
     }
     else {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $updatedNode */
+      /** @var ContentEntityInterface $updatedNode */
       $updatedNode = $formObject->buildEntity($form, $form_state);
       $orgTypes = [];
-      /** @var \Drupal\Core\Field\FieldItemInterface $item */
+      /** @var FieldItemInterface $item */
       foreach ($updatedNode->get('field_h4c_organisation_types') as $item) {
         if ($value = $item->get('value')->getValue()) {
           $orgTypes[$value] = $value;
@@ -46,4 +50,4 @@ function h4c_organisation_form_node_form_alter(&$form, FormStateInterface $form_
       AjaxDependency::contentIf($orgTypes['business'] ?? NULL, $orgTypesWidget, $form['field_h4c_sustainability'], $form_state);
     }
   }
-}
\ No newline at end of file
+}
diff --git a/src/AjaxDependencyWorker.php b/src/AjaxDependencyWorker.php
index e0736a4..218eb31 100644
--- a/src/AjaxDependencyWorker.php
+++ b/src/AjaxDependencyWorker.php
@@ -20,7 +20,7 @@ class AjaxDependencyWorker implements TrustedCallbackInterface {
    *   The source element.
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   public static function setDependency(&$sourceElement, &$targetElement, FormStateInterface $formState) {
@@ -37,7 +37,7 @@ class AjaxDependencyWorker implements TrustedCallbackInterface {
    *
    * @param array $sourceElement
    *   The source element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return array
@@ -53,7 +53,7 @@ class AjaxDependencyWorker implements TrustedCallbackInterface {
    *
    * @param array $sourceElement
    *   The source element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function addNojsSubmitElement(array &$sourceElement, FormStateInterface $formState) {
@@ -90,7 +90,7 @@ class AjaxDependencyWorker implements TrustedCallbackInterface {
    *
    * @param array $sourceElement
    *   The source element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function moveNojsSubmitElement(array &$sourceElement, FormStateInterface $formState) {
@@ -135,7 +135,7 @@ class AjaxDependencyWorker implements TrustedCallbackInterface {
    *
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return array
@@ -155,7 +155,7 @@ class AjaxDependencyWorker implements TrustedCallbackInterface {
    *
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function replaceWithMockIfNoAccess(array &$targetElement, FormStateInterface $formState) {
@@ -191,7 +191,7 @@ class AjaxDependencyWorker implements TrustedCallbackInterface {
    *
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function addSelector(array &$targetElement, FormStateInterface $formState) {
diff --git a/src/FormTool.php b/src/FormTool.php
index dcd0531..4b8c9c2 100644
--- a/src/FormTool.php
+++ b/src/FormTool.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ajax_dependency;
 
+use Drupal\Core\Controller\ControllerResolverInterface;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Form\FormStateInterface;
@@ -9,7 +10,7 @@ use Drupal\Core\Form\FormStateInterface;
 class FormTool {
 
   /**
-   * @return \Drupal\Core\Controller\ControllerResolverInterface
+   * @return ControllerResolverInterface
    */
   private static function getControllerResolver() {
     return \Drupal::service('controller_resolver');
@@ -79,7 +80,7 @@ class FormTool {
    *
    * @see \Drupal\Core\Form\FormBuilder::prepareForm
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return string
@@ -100,7 +101,7 @@ class FormTool {
    *
    * @param array $path
    *   The target element path.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return string
diff --git a/tests/src/Functional/AdminPageTest.php b/tests/src/Functional/AdminPageTest.php
index 128faf8..444f299 100644
--- a/tests/src/Functional/AdminPageTest.php
+++ b/tests/src/Functional/AdminPageTest.php
@@ -33,7 +33,7 @@ class AdminPageTest extends BrowserTestBase {
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
