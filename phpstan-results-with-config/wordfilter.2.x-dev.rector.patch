diff --git a/src/Annotation/WordfilterProcess.php b/src/Annotation/WordfilterProcess.php
index 158fa83..268b368 100755
--- a/src/Annotation/WordfilterProcess.php
+++ b/src/Annotation/WordfilterProcess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wordfilter\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class WordfilterProcess extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -33,7 +34,7 @@ class WordfilterProcess extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Entity/WordfilterConfiguration.php b/src/Entity/WordfilterConfiguration.php
index f8e8c11..b5ce58e 100755
--- a/src/Entity/WordfilterConfiguration.php
+++ b/src/Entity/WordfilterConfiguration.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wordfilter\Entity;
 
+use Drupal\wordfilter\Plugin\WordfilterProcessManager;
 use \Drupal\Core\Config\Entity\ConfigEntityBase;
 use \Drupal\wordfilter\WordfilterItem;
 use \Drupal\wordfilter\Plugin\WordfilterProcessInterface;
@@ -71,12 +72,12 @@ class WordfilterConfiguration extends ConfigEntityBase implements WordfilterConf
   protected $process_id = 'default';
   
   /**
-   * The assigned Wordfilter process object.
-   * 
-   * @see ::getProcess().
-   * 
-   * @var \Drupal\wordfilter\Plugin\WordfilterProcessInterface 
-   */
+    * The assigned Wordfilter process object.
+    *
+    * @see ::getProcess().
+    *
+    * @var WordfilterProcessInterface 
+    */
    protected $process = NULL;
 
   /**
@@ -89,7 +90,7 @@ class WordfilterConfiguration extends ConfigEntityBase implements WordfilterConf
   /**
    * The filtering items as cached objects.
    *
-   * @var \Drupal\wordfilter\WordfilterItem[]
+   * @var WordfilterItem[]
    */
   protected $item_objects = NULL;
 
@@ -102,7 +103,7 @@ class WordfilterConfiguration extends ConfigEntityBase implements WordfilterConf
     }
 
     /**
-     * @var \Drupal\wordfilter\Plugin\WordfilterProcessManager
+     * @var WordfilterProcessManager
      */
     $manager = \Drupal::service('plugin.manager.wordfilter_process');
     $this->setProcess($manager->createInstance($this->process_id));
diff --git a/src/Entity/WordfilterConfigurationInterface.php b/src/Entity/WordfilterConfigurationInterface.php
index 5c463cd..cc2a308 100755
--- a/src/Entity/WordfilterConfigurationInterface.php
+++ b/src/Entity/WordfilterConfigurationInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wordfilter\Entity;
 
+use Drupal\wordfilter\Plugin\WordfilterProcessInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\wordfilter\WordfilterItem;
 
@@ -11,24 +12,24 @@ use Drupal\wordfilter\WordfilterItem;
 interface WordfilterConfigurationInterface extends ConfigEntityInterface {
   /**
    * Get the assigned filtering process.
-   * 
-   * @return \Drupal\wordfilter\Plugin\WordfilterProcessInterface
+   *
+   * @return WordfilterProcessInterface
    *   The assigned filtering process.
    */
   public function getProcess();
   
   /**
    * Assign the filtering process.
-   * 
-   * @param \Drupal\wordfilter\Plugin\WordfilterProcessInterface $process
+   *
+   * @param WordfilterProcessInterface $process
    *   The Wordfilter process to assign. 
    */
-  public function setProcess(\Drupal\wordfilter\Plugin\WordfilterProcessInterface $process);
+  public function setProcess(WordfilterProcessInterface $process);
 
   /**
    * Get the filtering items.
    *
-   * @return \Drupal\wordfilter\WordfilterItem[]
+   * @return WordfilterItem[]
    *  An array of filtering items, keyed and sorted by delta.
    */
   public function getItems();
@@ -41,7 +42,7 @@ interface WordfilterConfigurationInterface extends ConfigEntityInterface {
    * @param integer $delta
    *   (Optional) The delta for the new item.
    *
-   * @return \Drupal\wordfilter\WordfilterItem
+   * @return WordfilterItem
    */
   public function newItem($delta = NULL);
 
@@ -51,7 +52,7 @@ interface WordfilterConfigurationInterface extends ConfigEntityInterface {
    * The item must belong to this configuration,
    * otherwise it won't be removed.
    *
-   * @param \Drupal\wordfilter\WordfilterItem $item
+   * @param WordfilterItem $item
    * @return bool
    *   TRUE if removal was successful, FALSE otherwise.
    */
diff --git a/src/Form/WordfilterConfigurationForm.php b/src/Form/WordfilterConfigurationForm.php
index 8dfe7be..8801e64 100755
--- a/src/Form/WordfilterConfigurationForm.php
+++ b/src/Form/WordfilterConfigurationForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\wordfilter\Form;
 
+use Drupal\wordfilter\Entity\WordfilterConfigurationInterface;
+use Drupal\wordfilter\Plugin\WordfilterProcessManager;
+use Drupal\wordfilter\Plugin\WordfilterProcessInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element\StatusMessages;
@@ -16,7 +19,7 @@ use Drupal\wordfilter\WordfilterItem;
 class WordfilterConfigurationForm extends EntityForm {
 
   /**
-   * @return \Drupal\wordfilter\Entity\WordfilterConfigurationInterface
+   * @return WordfilterConfigurationInterface
    */
   public function getWordfilterConfiguration() {
     return $this->entity;
@@ -25,7 +28,7 @@ class WordfilterConfigurationForm extends EntityForm {
   /**
    * Helper function to rebuild the form when necessary.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @param array &$old_form
    *   The old form build.
    * @return array
@@ -75,7 +78,7 @@ class WordfilterConfigurationForm extends EntityForm {
       '#weight' => 30,
     ];
     /**
-     * @var \Drupal\wordfilter\Plugin\WordfilterProcessManager
+     * @var WordfilterProcessManager
      */
     $plugin_manager = \Drupal::service('plugin.manager.wordfilter_process');
     $definitions = $plugin_manager->getDefinitions();
@@ -158,11 +161,11 @@ class WordfilterConfigurationForm extends EntityForm {
     }
 
     /**
-     * @var \Drupal\wordfilter\Plugin\WordfilterProcessManager
+     * @var WordfilterProcessManager
      */
     $plugin_manager = \Drupal::service('plugin.manager.wordfilter_process');
     /**
-     * @var \Drupal\wordfilter\Plugin\WordfilterProcessInterface
+     * @var WordfilterProcessInterface
      */
     $plugin = $plugin_manager->createInstance($process_id);
 
diff --git a/src/Plugin/Filter/WordFilter.php b/src/Plugin/Filter/WordFilter.php
index 2788568..9b2146f 100755
--- a/src/Plugin/Filter/WordFilter.php
+++ b/src/Plugin/Filter/WordFilter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wordfilter\Plugin\Filter;
 
+use Drupal\wordfilter\Entity\WordfilterConfigurationInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\filter\FilterProcessResult;
@@ -22,14 +23,14 @@ class WordFilter extends FilterBase {
    *
    * @see ::activeWordfilterConfigs()
    *
-   * @var \Drupal\wordfilter\Entity\WordfilterConfigurationInterface[]
+   * @var WordfilterConfigurationInterface[]
    */
   protected $active_configs = NULL;
 
   /**
    * Get a list of active Wordfilter configurations for this filter.
    *
-   * @return \Drupal\wordfilter\Entity\WordfilterConfigurationInterface[]
+   * @return WordfilterConfigurationInterface[]
    */
   public function activeWordfilterConfigs() {
     if (!isset($this->active_configs)) {
diff --git a/src/Plugin/WordfilterProcessInterface.php b/src/Plugin/WordfilterProcessInterface.php
index 2dfce9b..51db58f 100755
--- a/src/Plugin/WordfilterProcessInterface.php
+++ b/src/Plugin/WordfilterProcessInterface.php
@@ -17,7 +17,7 @@ interface WordfilterProcessInterface extends PluginInspectionInterface {
    *
    * @param string $text
    *  The text to filter.
-   * @param \Drupal\wordfilter\Entity\WordfilterConfigurationInterface $wordfilter_config
+   * @param WordfilterConfigurationInterface $wordfilter_config
    *  The Wordfilter configuration to use during the filtering process.
    * @param string $langcode
    *  (Optional) The language code.
diff --git a/src/Plugin/WordfilterProcessManager.php b/src/Plugin/WordfilterProcessManager.php
index 01f8530..c350aea 100755
--- a/src/Plugin/WordfilterProcessManager.php
+++ b/src/Plugin/WordfilterProcessManager.php
@@ -17,9 +17,9 @@ class WordfilterProcessManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/WordfilterConfigurationHtmlRouteProvider.php b/src/WordfilterConfigurationHtmlRouteProvider.php
index 355a40c..3ddd44c 100644
--- a/src/WordfilterConfigurationHtmlRouteProvider.php
+++ b/src/WordfilterConfigurationHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class WordfilterConfigurationHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
diff --git a/src/WordfilterItem.php b/src/WordfilterItem.php
index ca6b3d6..a037577 100644
--- a/src/WordfilterItem.php
+++ b/src/WordfilterItem.php
@@ -9,7 +9,7 @@ class WordfilterItem {
   /**
    * The parent entity, which is holding the filtering item.
    *
-   * @var \Drupal\wordfilter\Entity\WordfilterConfigurationInterface
+   * @var WordfilterConfigurationInterface
    */
   protected $parent;
 
@@ -43,7 +43,7 @@ class WordfilterItem {
   /**
    * Get the parent entity.
    *
-   * @return \Drupal\wordfilter\Entity\WordfilterConfigurationInterface
+   * @return WordfilterConfigurationInterface
    */
   public function getParent() {
     return $this->parent;
@@ -52,7 +52,7 @@ class WordfilterItem {
   /**
    * Set the parent entity.
    *
-   * @param \Drupal\wordfilter\Entity\WordfilterConfigurationInterface $parent
+   * @param WordfilterConfigurationInterface $parent
    */
   protected function setParent(WordfilterConfigurationInterface $parent) {
     $this->parent = $parent;
diff --git a/src/WordfilterPermissions.php b/src/WordfilterPermissions.php
index 6132eee..7abf1f7 100644
--- a/src/WordfilterPermissions.php
+++ b/src/WordfilterPermissions.php
@@ -34,7 +34,7 @@ class WordfilterPermissions {
   /**
    * Returns a list of permissions for a given Wordfilter configuration.
    *
-   * @param \Drupal\wordfilter\Entity\WordfilterConfigurationInterface $config
+   * @param WordfilterConfigurationInterface $config
    *   The Wordfilter configuration.
    *
    * @return array
diff --git a/tests/src/Functional/WordfilterApplianceTest.php b/tests/src/Functional/WordfilterApplianceTest.php
index 047b3c0..a18872d 100755
--- a/tests/src/Functional/WordfilterApplianceTest.php
+++ b/tests/src/Functional/WordfilterApplianceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\wordfilter\Functional;
 
+use Drupal\node\NodeInterface;
 use \Drupal\Tests\BrowserTestBase;
 use \Drupal\Component\Render\FormattableMarkup;
 
@@ -25,7 +26,7 @@ class WordfilterApplianceTest extends BrowserTestBase  {
   
   protected $wordfilter_config_id = 'my_superduper_wordfilter_config';
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->user = $this->drupalCreateUser([
@@ -213,7 +214,7 @@ class WordfilterApplianceTest extends BrowserTestBase  {
   /**
    * Create and get a node instance for all appliance tests.
    *
-   * @return \Drupal\node\NodeInterface
+   * @return NodeInterface
    */
   protected function nodeInstance() {
     if (!isset($this->node)) {
diff --git a/tests/src/Unit/DefaultWordfilterProcessUnitTest.php b/tests/src/Unit/DefaultWordfilterProcessUnitTest.php
index 6431dd0..66f01b3 100755
--- a/tests/src/Unit/DefaultWordfilterProcessUnitTest.php
+++ b/tests/src/Unit/DefaultWordfilterProcessUnitTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\wordfilter\Unit;
 
+use Drupal\wordfilter\Plugin\WordfilterProcessInterface;
 use \Drupal\Tests\UnitTestCase;
 use \Drupal\wordfilter\Entity\WordfilterConfiguration;
 use \Drupal\wordfilter\Plugin\WordfilterProcess\DefaultWordfilterProcess;
@@ -13,14 +14,14 @@ use \Drupal\wordfilter\Plugin\WordfilterProcess\DefaultWordfilterProcess;
 class DefaultWordfilterProcessUnitTest extends UnitTestCase {
 
   /**
-   * @var \Drupal\wordfilter\Plugin\WordfilterProcessInterface
+   * @var WordfilterProcessInterface
    */
   protected $wordfilter_process = NULL;
   
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     
     $this->wordfilter_process = new DefaultWordfilterProcess([], 'default', []);
diff --git a/tests/src/Unit/TokenWordfilterProcessUnitTest.php b/tests/src/Unit/TokenWordfilterProcessUnitTest.php
index 28f9799..7e49b97 100755
--- a/tests/src/Unit/TokenWordfilterProcessUnitTest.php
+++ b/tests/src/Unit/TokenWordfilterProcessUnitTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\wordfilter\Unit;
 
+use Drupal\wordfilter\Plugin\WordfilterProcessInterface;
 use \Drupal\Tests\UnitTestCase;
 use \Drupal\wordfilter\Entity\WordfilterConfiguration;
 use \Drupal\wordfilter\Plugin\WordfilterProcess\TokenWordfilterProcess;
@@ -12,20 +13,19 @@ use \Drupal\wordfilter\Plugin\WordfilterProcess\TokenWordfilterProcess;
  */
 class TokenWordfilterProcessUnitTest extends UnitTestCase {
   /**
-   * @var \Drupal\wordfilter\Plugin\WordfilterProcessInterface
+   * @var WordfilterProcessInterface
    */
   protected $wordfilter_process = NULL;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->wordfilter_process = new TokenWordfilterProcess([], 'token', []);
 
-    $token = $this->getMockBuilder('\Drupal\Core\Utility\Token')
-      ->disableOriginalConstructor()->getMock();
+    $token = $this->createMock('\Drupal\Core\Utility\Token');
 
     $container = $this->createMock('Symfony\Component\DependencyInjection\ContainerInterface');
     $container->expects($this->any())
diff --git a/tests/src/Unit/WordfilterConfigurationUnitTest.php b/tests/src/Unit/WordfilterConfigurationUnitTest.php
index 85f52bd..a5fa675 100755
--- a/tests/src/Unit/WordfilterConfigurationUnitTest.php
+++ b/tests/src/Unit/WordfilterConfigurationUnitTest.php
@@ -13,14 +13,14 @@ use \Drupal\wordfilter\Plugin\WordfilterProcess\DefaultWordfilterProcess;
 class WordfilterConfigurationUnitTest extends UnitTestCase {
 
   /**
-   * @var \Drupal\wordfilter\Entity\WordfilterConfiguration
+   * @var WordfilterConfiguration
    */
   protected $wordfilter_config = NULL;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->wordfilter_config = new WordfilterConfiguration([
diff --git a/wordfilter.module b/wordfilter.module
index c2cb8f0..9264a91 100755
--- a/wordfilter.module
+++ b/wordfilter.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\comment\CommentInterface;
 /**
  * @file
  * Contains wordfilter.module..
@@ -35,7 +37,7 @@ function wordfilter_help($route_name, RouteMatchInterface $route_match) {
  * Implements hook_form_FORM_ID_alter().
  *
  * @param array &$form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  * @param string $form_id
  */
 function wordfilter_form_node_type_form_alter(&$form, FormStateInterface $form_state, $form_id) {
@@ -44,9 +46,9 @@ function wordfilter_form_node_type_form_alter(&$form, FormStateInterface $form_s
 
 /**
  * Implements hook_form_FORM_ID_alter().
- * 
+ *
  * @param array &$form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  * @param string $form_id
  */
 function wordfilter_form_comment_type_form_alter(&$form, FormStateInterface $form_state, $form_id) {
@@ -55,17 +57,17 @@ function wordfilter_form_comment_type_form_alter(&$form, FormStateInterface $for
 
 /**
  * Add wordfilter display options to a given entity form.
- * 
+ *
  * The corresponding entity class
  * must implement ThirdPartySettingsInterface.
- * 
+ *
  * @param array &$form
  *   The form array to add the display options.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function wordfilter_add_display_options_to_entity_form(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\Core\Config\Entity\ThirdPartySettingsInterface $entity */
+  /** @var ThirdPartySettingsInterface $entity */
   $entity = $form_state->getFormObject()->getEntity();
   $account = \Drupal::currentUser();
 
@@ -116,11 +118,11 @@ function wordfilter_add_display_options_to_entity_form(&$form, FormStateInterfac
  *
  * @param string $entity_type
  *   The entity type, e.g. 'node_type' or 'comment_type'.
- * @param \Drupal\Core\Config\Entity\ThirdPartySettingsInterface $entity
+ * @param ThirdPartySettingsInterface $entity
  *   The corresponding entity object, must implement ThirdPartySettingsInterface.
  * @param array &$form
  *   The form render array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function wordfilter_form_entity_form_builder($entity_type, $entity, &$form, FormStateInterface $form_state) {
@@ -137,7 +139,7 @@ function wordfilter_form_entity_form_builder($entity_type, $entity, &$form, Form
  * @param array $context
  */
 function wordfilter_entity_display_build_alter(&$build, $context) {
-  /** @var \Drupal\Core\Entity\EntityInterface $entity */
+  /** @var EntityInterface $entity */
   $entity = $context['entity'];
   $type_id = $entity->getEntityTypeId();
 
@@ -153,7 +155,7 @@ function wordfilter_entity_display_build_alter(&$build, $context) {
       return;
   }
   
-  /** @var \Drupal\Core\Config\Entity\ThirdPartySettingsInterface $type */
+  /** @var ThirdPartySettingsInterface $type */
   $type = \Drupal::entityTypeManager()
     ->getStorage($type_id . '_type')->load($entity->bundle());
 
@@ -193,10 +195,10 @@ function wordfilter_entity_display_build_alter(&$build, $context) {
  * Implements template_preprocess_comment().
  */
 function wordfilter_preprocess_comment(&$variables) {
-  /** @var \Drupal\comment\CommentInterface $comment */
+  /** @var CommentInterface $comment */
   $comment = $variables['elements']['#comment'];
   
-  /** @var \Drupal\Core\Config\Entity\ThirdPartySettingsInterface $type */
+  /** @var ThirdPartySettingsInterface $type */
   $type = \Drupal::entityTypeManager()
     ->getStorage('comment_type')->load($comment->bundle());
   
