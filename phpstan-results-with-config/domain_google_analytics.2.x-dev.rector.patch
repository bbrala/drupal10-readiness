diff --git a/src/EventSubscriber/GoogleAnalyticResponseSubscriber.php b/src/EventSubscriber/GoogleAnalyticResponseSubscriber.php
index 0350f0e..c5744ef 100644
--- a/src/EventSubscriber/GoogleAnalyticResponseSubscriber.php
+++ b/src/EventSubscriber/GoogleAnalyticResponseSubscriber.php
@@ -2,9 +2,10 @@
 
 namespace Drupal\multidomain_google_analytics\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\domain\DomainNegotiatorInterface;
 
@@ -18,7 +19,7 @@ class GoogleAnalyticResponseSubscriber implements EventSubscriberInterface {
   /**
    * The config object for the multidomain_google_analytics settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -32,7 +33,7 @@ class GoogleAnalyticResponseSubscriber implements EventSubscriberInterface {
   /**
    * Constructs a new Google Analytics response subscriber.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
    * @param \Drupal\domain\DomainNegotiatorInterface $negotiator
    *   The domain negotiator service.
@@ -47,11 +48,11 @@ class GoogleAnalyticResponseSubscriber implements EventSubscriberInterface {
   /**
    * Add a tags in boby.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *
    *   Set response.
    */
-  public function addTag(FilterResponseEvent $event) {
+  public function addTag(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
diff --git a/src/Form/MultidomainGoogleAnalyticsAdminSettingsForm.php b/src/Form/MultidomainGoogleAnalyticsAdminSettingsForm.php
index 83aa9d9..cafe850 100644
--- a/src/Form/MultidomainGoogleAnalyticsAdminSettingsForm.php
+++ b/src/Form/MultidomainGoogleAnalyticsAdminSettingsForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\multidomain_google_analytics\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,23 +20,23 @@ class MultidomainGoogleAnalyticsAdminSettingsForm extends ConfigFormBase {
   /**
    * The config object for the multidomain_google_analytics settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Construct function.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManager $entity_type_manager) {
@@ -46,7 +48,7 @@ class MultidomainGoogleAnalyticsAdminSettingsForm extends ConfigFormBase {
   /**
    * Create function return static domain loader configuration.
    *
-   * @param Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Load the ContainerInterface.
    *
    * @return \static
