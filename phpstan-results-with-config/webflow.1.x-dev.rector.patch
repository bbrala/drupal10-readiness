diff --git a/src/Controller/EntryPoint.php b/src/Controller/EntryPoint.php
index f7c707c..fb058ec 100644
--- a/src/Controller/EntryPoint.php
+++ b/src/Controller/EntryPoint.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\webflow\Controller;
 
+use Symfony\Contracts\HttpClient\HttpClientInterface;
+use GuzzleHttp\Exception\GuzzleException;
+use Drupal\Core\GeneratedUrl;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
@@ -17,14 +20,14 @@ class EntryPoint extends ControllerBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The HTTP client service.
    *
-   * @var \Symfony\Contracts\HttpClient\HttpClientInterface
+   * @var HttpClientInterface
    */
   protected $httpClient;
 
@@ -38,9 +41,9 @@ class EntryPoint extends ControllerBase {
   /**
    * The controller constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ClientInterface $http_client, WebflowApi $webflow) {
@@ -66,7 +69,7 @@ class EntryPoint extends ControllerBase {
    * @param null $webflow_page
    *   The Webflow page path to return.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function index($webflow_page = NULL) {
     $url = $this->buildUrl($webflow_page);
@@ -81,9 +84,9 @@ class EntryPoint extends ControllerBase {
    *
    * @param string $webflow_page
    *   The path for the Webflow URL.
-   * @return \Drupal\Core\GeneratedUrl|string
+   * @return GeneratedUrl|string
    *   The fully qualified URL string.
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   private function buildUrl(string $webflow_page) {
     $domain = $this->webflow->getSiteDomain();
diff --git a/src/Form/PagesForm.php b/src/Form/PagesForm.php
index 9847eb6..4959899 100644
--- a/src/Form/PagesForm.php
+++ b/src/Form/PagesForm.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\webflow\Form;
 
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\path_alias\AliasRepositoryInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Routing\RouteBuilder;
+use Drupal\Core\Path\PathValidator;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
@@ -24,25 +29,25 @@ class PagesForm extends ConfigFormBase {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The path alias repository.
    *
-   * @var \Drupal\path_alias\AliasRepositoryInterface
+   * @var AliasRepositoryInterface
    */
   protected $pathAliasRepository;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
-  /** @var \Drupal\Core\Routing\RouteBuilder */
+  /** @var RouteBuilder */
   protected $routeBuilder;
 
   /**
@@ -145,7 +150,7 @@ class PagesForm extends ConfigFormBase {
    *
    * @param array $form
    *   Form array
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function processMappings(array $form, FormStateInterface $form_state) {
     $mappings = $this->config('webflow.settings')->get('path_mappings');
@@ -221,7 +226,7 @@ class PagesForm extends ConfigFormBase {
    * Additional form submit handler for adding a blank new row.
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function addRowSubmit(array &$form, FormStateInterface &$form_state) {
     $mappings = $this->config('webflow.settings')->get('path_mappings');
@@ -237,7 +242,7 @@ class PagesForm extends ConfigFormBase {
    * Ajax callback for form.
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
    * @return mixed
    */
@@ -324,13 +329,13 @@ class PagesForm extends ConfigFormBase {
    *
    * @param $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return bool
    */
   public function webflowPathValidate($element, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Path\PathValidator $validator */
+    /** @var PathValidator $validator */
     $validator = \Drupal::service('path.validator');
     return $validator->isValid($element['#value']);
   }
diff --git a/src/Form/WebflowPagesForm.php b/src/Form/WebflowPagesForm.php
index a1f5e3b..a60e92c 100644
--- a/src/Form/WebflowPagesForm.php
+++ b/src/Form/WebflowPagesForm.php
@@ -20,7 +20,7 @@ class WebflowPagesForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New webflow_pages %label has been created.', $message_arguments));
diff --git a/src/Routing/Routes.php b/src/Routing/Routes.php
index f1604b1..115dcf5 100644
--- a/src/Routing/Routes.php
+++ b/src/Routing/Routes.php
@@ -16,14 +16,14 @@ class Routes implements ContainerInjectionInterface {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Routes constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -43,7 +43,7 @@ class Routes implements ContainerInjectionInterface {
   /**
    * Callback for dynamically RouteCollection of Webflow routes.
    *
-   * @return \Symfony\Component\Routing\RouteCollection
+   * @return RouteCollection
    */
   public function routes() {
     $routes = new RouteCollection();
@@ -65,7 +65,7 @@ class Routes implements ContainerInjectionInterface {
    * @param array $mapping
    *   A individual mapping from webflow config.
    *
-   * @return \Symfony\Component\Routing\Route
+   * @return Route
    *   The assembled route.
    */
   protected static function buildRoute(array $mapping) {
diff --git a/src/WebflowApi.php b/src/WebflowApi.php
index acb81a6..5c373c7 100644
--- a/src/WebflowApi.php
+++ b/src/WebflowApi.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\webflow;
 
+use Drupal\Core\Messenger\MessengerInterface;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use GuzzleHttp\ClientInterface;
@@ -21,37 +23,37 @@ class WebflowApi implements WebflowApiInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Constructs a WebflowApi object.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ClientInterface $http_client, ConfigFactoryInterface $config_factory) {
diff --git a/src/WebflowPagesListBuilder.php b/src/WebflowPagesListBuilder.php
index 13d41c0..e4c0086 100644
--- a/src/WebflowPagesListBuilder.php
+++ b/src/WebflowPagesListBuilder.php
@@ -18,27 +18,27 @@ class WebflowPagesListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new WebflowPagesListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
diff --git a/webflow.info.yml b/webflow.info.yml
index 9ebd45a..2e9cc41 100644
--- a/webflow.info.yml
+++ b/webflow.info.yml
@@ -2,5 +2,4 @@ name: Webflow
 type: module
 description: Integrates webflow with drupal
 package: Custom
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
