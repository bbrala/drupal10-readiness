diff --git a/src/Form/ExportForm.php b/src/Form/ExportForm.php
index 916d6fb..e69f4ed 100644
--- a/src/Form/ExportForm.php
+++ b/src/Form/ExportForm.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\string\Form;
 
+use Drupal\language\ConfigurableLanguageManagerInterface;
+use Drupal\Core\Plugin\Context\ContextProviderInterface;
+use Drupal\string\StringManager;
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\file\FileInterface;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,28 +21,28 @@ class ExportForm extends FormBase {
   /**
    * Drupal\language\ConfigurableLanguageManagerInterface definition.
    *
-   * @var \Drupal\language\ConfigurableLanguageManagerInterface
+   * @var ConfigurableLanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Drupal\Core\Plugin\Context\ContextProviderInterface definition.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextProviderInterface
+   * @var ContextProviderInterface
    */
   protected $languageCurrentLanguageContext;
 
   /**
    * Drupal\string\StringManager definition.
    *
-   * @var \Drupal\string\StringManager
+   * @var StringManager
    */
   protected $string;
 
   /**
    * Drupal\Core\Logger\LoggerChannelInterface definition.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $loggerChannelDefault;
 
@@ -158,17 +164,13 @@ class ExportForm extends FormBase {
    * @param string $content
    *   Content of file to be saved.
    *
-   * @return \Drupal\file\FileInterface|false|\PHPUnit\Framework\MockObject\MockObject
+   * @return FileInterface|false|MockObject
    *   File that has been saved.
    */
   protected function saveFile(string $content) {
     // @todo Make this configurable.
     $destination = 'public://string.pot';
-    $file = file_save_data(
-      $content,
-      $destination,
-      FileSystemInterface::EXISTS_REPLACE
-    );
+    $file = \Drupal::service('file.repository')->writeData($content, $destination, FileSystemInterface::EXISTS_REPLACE);
     return $file;
   }
 
diff --git a/src/Form/StringEditForm.php b/src/Form/StringEditForm.php
index b545c3c..8c20ffc 100644
--- a/src/Form/StringEditForm.php
+++ b/src/Form/StringEditForm.php
@@ -17,13 +17,13 @@ class StringEditForm extends TranslateEditForm {
   /**
    * Drupal\string\StringManager definition.
    *
-   * @var \Drupal\string\StringManager
+   * @var StringManager
    */
   protected $pluginManagerString;
   /**
    * Drupal\string\StringManager definition.
    *
-   * @var \Drupal\string\StringGroupManager
+   * @var StringGroupManager
    */
   protected $pluginManagerStringGroup;
 
diff --git a/src/StringGroupManager.php b/src/StringGroupManager.php
index 2da6c7d..3c24319 100644
--- a/src/StringGroupManager.php
+++ b/src/StringGroupManager.php
@@ -25,9 +25,9 @@ class StringGroupManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
    */
   public function __construct(\Traversable $namespaces, ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
diff --git a/src/StringManager.php b/src/StringManager.php
index d051797..0f65e1a 100644
--- a/src/StringManager.php
+++ b/src/StringManager.php
@@ -27,9 +27,9 @@ class StringManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
    */
   public function __construct(\Traversable $namespaces, ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
diff --git a/src/StringPluralTranslatableMarkup.php b/src/StringPluralTranslatableMarkup.php
index 872a46f..5be6e0e 100644
--- a/src/StringPluralTranslatableMarkup.php
+++ b/src/StringPluralTranslatableMarkup.php
@@ -29,7 +29,7 @@ class StringPluralTranslatableMarkup extends PluralTranslatableMarkup {
     ];
     // @todo Interpret formula based on language.
     // Find a better way to solve this, however, php's eval is not an option.
-    $index = render($item);
+    $index = \Drupal::service('renderer')->render($item);
     return (string) $index;
   }
 
diff --git a/src/Translator/StringTranslation.php b/src/Translator/StringTranslation.php
index 73fde13..7eb0e9c 100644
--- a/src/Translator/StringTranslation.php
+++ b/src/Translator/StringTranslation.php
@@ -17,7 +17,7 @@ class StringTranslation extends FileTranslation {
   /**
    * Constructs a StaticTranslation object.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(FileSystemInterface $file_system = NULL) {
diff --git a/string.module b/string.module
index 352071d..efc3965 100644
--- a/string.module
+++ b/string.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * @file
  * Contains strings.module.
@@ -54,7 +55,7 @@ function strings_help($route_name, RouteMatchInterface $route_match) {
  *     belongs to. See the @link i18n Internationalization topic @endlink for
  *     more information about string contexts.
  *
- * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+ * @return TranslatableMarkup
  *   An object that, when cast to a string, returns the translated string.
  *
  * @see \Drupal\Component\Render\FormattableMarkup::placeholderFormat()
