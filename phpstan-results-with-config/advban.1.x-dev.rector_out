modules/contrib/advban/advban.install
modules/contrib/advban/advban.module
modules/contrib/advban/src/AdvbanHelper.php
modules/contrib/advban/src/AdvbanIpManager.php
modules/contrib/advban/src/AdvbanIpManagerInterface.php
modules/contrib/advban/src/AdvbanMiddleware.php
modules/contrib/advban/src/Form/AdvbanAdmin.php
modules/contrib/advban/src/Form/AdvbanDelete.php
modules/contrib/advban/src/Form/AdvbanDeleteAll.php
modules/contrib/advban/src/Form/AdvbanEdit.php
modules/contrib/advban/src/Form/AdvbanSearchForm.php
modules/contrib/advban/src/Form/AdvbanSettingsForm.php
modules/contrib/advban/tests/src/Functional/IpAddressBlockingTest.php
modules/contrib/advban/tests/src/Unit/AdvbanMiddlewareTest.php

11 files with changes
=====================

1) modules/contrib/advban/tests/src/Unit/AdvbanMiddlewareTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\advban\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\advban\AdvbanIpManagerInterface;
 use Drupal\advban\AdvbanMiddleware;
 use Drupal\Tests\UnitTestCase;
 use Symfony\Component\HttpFoundation\Request;
@@ @@
   /**
    * The mocked wrapped kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var HttpKernelInterface|MockObject
    */
   protected $kernel;

@@ @@
   /**
    * The mocked ban IP manager.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var AdvbanIpManagerInterface|MockObject
    */
   protected $banManager;

@@ @@
   /**
    * The tested ban middleware.
    *
-   * @var \Drupal\advban\AdvbanMiddleware
+   * @var AdvbanMiddleware
    */
   protected $banMiddleware;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->kernel = $this->createMock('Symfony\Component\HttpKernel\HttpKernelInterface');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/advban/tests/src/Functional/IpAddressBlockingTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\advban\Functional;

+use Drupal\advban\AdvbanIpManager;
+use Drupal\Core\Database\Connection;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;

@@ @@
     $this->drupalLogin($admin_user);
     $this->drupalGet('admin/config/people/advban');

-    /** @var \Drupal\advban\AdvbanIpManager $storage */
+    /** @var AdvbanIpManager $storage */
     $ipManagerService = $this->container->get('advban.ip_manager');
-    /** @var \Drupal\Core\Database\Connection $connection */
+    /** @var Connection $connection */
     $connection = $this->container->get('database');

     // Ban a valid IP address.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/advban/src/Form/AdvbanSettingsForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * IP Manager variable.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface
+   * @var AdvbanIpManagerInterface
    */
   protected $ipManager;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\advban\AdvbanIpManagerInterface $ip_manager
+   * @param AdvbanIpManagerInterface $ip_manager
    *   Store AdvbanIpManagerInterface manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/advban/src/Form/AdvbanSearchForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advban\Form;

+use Drupal\advban\AdvbanIpManagerInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The IP manager.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface
+   * @var AdvbanIpManagerInterface
    */
   protected $ipManager;

@@ @@
   /**
    * Date formatter variable.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;

@@ @@
   /**
    * Constructs AdvbanSearch form.
    *
-   * @param \Drupal\advban\AdvbanIpManager $ip_manager
+   * @param AdvbanIpManager $ip_manager
    *   Store AdvbanIpManager manager.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   Store DateFormatter manager.
-   * @param \Drupal\Component\Datetime\Time $time
+   * @param Time $time
    *   The time service.
    */
   public function __construct(AdvbanIpManager $ip_manager,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/advban/src/Form/AdvbanEdit.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * IP Manager variable.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface
+   * @var AdvbanIpManagerInterface
    */
   protected $ipManager;

@@ @@
   /**
    * Date formatter variable.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs a new AdvbanEdit object.
    *
-   * @param \Drupal\advban\AdvbanIpManagerInterface $ip_manager
+   * @param AdvbanIpManagerInterface $ip_manager
    *   Store AdvbanIpManagerInterface manager.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   Store DateFormatter manager.
    */
   public function __construct(AdvbanIpManagerInterface $ip_manager, DateFormatter $dateFormatter) {
@@ @@
    *
    * @param array $form
    *   Form variable.
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   FormState variable.
    * @param int $ban_id
    *   ID of the ban entry.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/advban/src/Form/AdvbanDeleteAll.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The IP manager.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface
+   * @var AdvbanIpManagerInterface
    */
   protected $ipManager;

@@ @@
   /**
    * Constructs a new BanDelete object.
    *
-   * @param \Drupal\advban\AdvbanIpManagerInterface $ip_manager
+   * @param AdvbanIpManagerInterface $ip_manager
    *   The IP manager.
    */
   public function __construct(AdvbanIpManagerInterface $ip_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/advban/src/Form/AdvbanDelete.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The IP manager.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface
+   * @var AdvbanIpManagerInterface
    */
   protected $ipManager;

@@ @@
   /**
    * Constructs a new BanDelete object.
    *
-   * @param \Drupal\advban\AdvbanIpManagerInterface $ip_manager
+   * @param AdvbanIpManagerInterface $ip_manager
    *   The IP manager.
    */
   public function __construct(AdvbanIpManagerInterface $ip_manager) {
@@ @@
    *
    * @param array $form
    *   Form variable.
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   FormState variable.
    * @param string $ban_id
    *   The IP address record ID to unban.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/advban/src/Form/AdvbanAdmin.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * IP Manager variable.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface
+   * @var AdvbanIpManagerInterface
    */
   protected $ipManager;

@@ @@
   /**
    * Config factory variable.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * Date formatter variable.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs a new AdvbanAdmin object.
    *
-   * @param \Drupal\advban\AdvbanIpManagerInterface $ip_manager
+   * @param AdvbanIpManagerInterface $ip_manager
    *   Store AdvbanIpManagerInterface manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   Store ConfigFactoryInterface manager.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   Store DateFormatter manager.
    */
   public function __construct(AdvbanIpManagerInterface $ip_manager,
@@ @@
    *
    * @param array $form
    *   Form variable.
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   FormState variable.
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/advban/src/AdvbanMiddleware.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The decorated kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;

@@ @@
   /**
    * The ban IP manager.
    *
-   * @var \Drupal\advban\AdvbanIpManagerInterface
+   * @var AdvbanIpManagerInterface
    */
   protected $banIpManager;

@@ @@
   /**
    * Constructs a AdvbanMiddleware object.
    *
-   * @param \Symfony\Component\HttpKernel\HttpKernelInterface $http_kernel
+   * @param HttpKernelInterface $http_kernel
    *   The decorated kernel.
-   * @param \Drupal\advban\AdvbanIpManagerInterface $manager
+   * @param AdvbanIpManagerInterface $manager
    *   The ban IP manager.
    */
   public function __construct(HttpKernelInterface $http_kernel, AdvbanIpManagerInterface $manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/advban/src/AdvbanIpManagerInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advban;

+use Drupal\Core\Database\StatementInterface;
 /**
  * Provides an interface defining a AdvbanIp manager.
  */
@@ @@
   /**
    * Finds all banned IP addresses.
    *
-   * @return \Drupal\Core\Database\StatementInterface
+   * @return StatementInterface
    *   The result of the database query.
    */
   public function findAll();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/advban/src/AdvbanIpManager.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection used to check the IP against.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The configuration factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $config;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;

@@ @@
   /**
    * Construct the AdvbanIpManager.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection which will be used to check the IP against.
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   The configuration factory service.
-   * @param \Drupal\Component\Datetime\Time $time
+   * @param Time $time
    *   The time service.
    */
   public function __construct(Connection $connection, ConfigFactory $config, Time $time) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 11 files have been changed by Rector                                      

