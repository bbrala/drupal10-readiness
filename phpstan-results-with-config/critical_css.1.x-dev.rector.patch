diff --git a/critical_css.api.php b/critical_css.api.php
index 31c54e3..b227fc7 100644
--- a/critical_css.api.php
+++ b/critical_css.api.php
@@ -12,7 +12,7 @@ use Drupal\Core\Entity\ContentEntityInterface;
  *
  * @param array $file_paths
  *   The critical CSS files array.
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  *   The current entity used.
  */
 function hook_critical_css_file_paths_suggestion_alter(array &$file_paths, ContentEntityInterface $entity) {
diff --git a/src/Asset/CriticalCssProvider.php b/src/Asset/CriticalCssProvider.php
index 304a6f5..fc4dba9 100644
--- a/src/Asset/CriticalCssProvider.php
+++ b/src/Asset/CriticalCssProvider.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\critical_css\Asset;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Routing\AdminContext;
@@ -22,56 +25,56 @@ class CriticalCssProvider implements CriticalCssProviderInterface {
   /**
    * Critical CSS config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * Current Route Match.
    *
-   * @var \Drupal\Core\Routing\ResettableStackedRouteMatchInterface
+   * @var ResettableStackedRouteMatchInterface
    */
   protected $currentRouteMatch;
 
   /**
    * Current path stack.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPathStack;
 
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Theme Manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
 
   /**
    * The route admin context to determine whether a route is an admin one.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;
 
@@ -106,21 +109,21 @@ class CriticalCssProvider implements CriticalCssProviderInterface {
   /**
    * CriticalCssProvider constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Request.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config Factory.
-   * @param \Drupal\Core\Routing\ResettableStackedRouteMatchInterface $current_route_match
+   * @param ResettableStackedRouteMatchInterface $current_route_match
    *   Current route.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path_stack
+   * @param CurrentPathStack $current_path_stack
    *   Current path.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Current user.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The Theme Manager.
-   * @param \Drupal\Core\Routing\AdminContext $admin_context
+   * @param AdminContext $admin_context
    *   The route admin context service.
    */
   public function __construct(
@@ -316,7 +319,7 @@ class CriticalCssProvider implements CriticalCssProviderInterface {
    *
    * At this moment, it only works for nodes and taxonomy terms.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    *   Matched file path, or null if nothing found.
    */
   protected function getCurrentEntity() {
diff --git a/src/Asset/CssCollectionRenderer.php b/src/Asset/CssCollectionRenderer.php
index 0f1a76b..3106de8 100644
--- a/src/Asset/CssCollectionRenderer.php
+++ b/src/Asset/CssCollectionRenderer.php
@@ -18,41 +18,41 @@ class CssCollectionRenderer implements AssetCollectionRendererInterface {
   /**
    * The decorated CSS collection renderer.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionRendererInterface
+   * @var AssetCollectionRendererInterface
    */
   protected $cssCollectionRenderer;
 
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Twig service.
    *
-   * @var \Drupal\Core\Template\TwigEnvironment
+   * @var TwigEnvironment
    */
   protected $twig;
 
   /**
    * Critical CSS provider.
    *
-   * @var \Drupal\critical_css\Asset\CriticalCssProviderInterface
+   * @var CriticalCssProviderInterface
    */
   protected $criticalCssProvider;
 
   /**
    * Constructs a CssCollectionRenderer.
    *
-   * @param \Drupal\Core\Asset\AssetCollectionRendererInterface $css_collection_renderer
+   * @param AssetCollectionRendererInterface $css_collection_renderer
    *   The decorated CSS collection renderer.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config Factory.
-   * @param \Drupal\Core\Template\TwigEnvironment $twig
+   * @param TwigEnvironment $twig
    *   The Twig service.
-   * @param \Drupal\critical_css\Asset\CriticalCssProviderInterface $critical_css_provider
+   * @param CriticalCssProviderInterface $critical_css_provider
    *   The Critical CSS provider.
    */
   public function __construct(AssetCollectionRendererInterface $css_collection_renderer, ConfigFactoryInterface $config_factory, TwigEnvironment $twig, CriticalCssProviderInterface $critical_css_provider) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index f5f0268..b932ad4 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -68,7 +68,7 @@ class SettingsForm extends ConfigFormBase {
 
     $form['critical_css_dir_path'] = [
       '#type' => 'textfield',
-      '#title' => $this->t('Critical CSS base directory (relative to @theme_path)', ['@theme_path' => drupal_get_path('theme', $this->config('system.theme')->get('default'))]),
+      '#title' => $this->t('Critical CSS base directory (relative to @theme_path)', ['@theme_path' => \Drupal::service('extension.list.theme')->getPath($this->config('system.theme')->get('default'))]),
       '#required' => TRUE,
       '#description' => $this->t('It must start with a leading slash. Enter a directory path relative to current theme, where critical CSS files are located (e.g., /css/critical). Inside that directory, "Critical CSS" will try to find, among others, any file named "{entity_id}.css", "{bundle_type}.css",  or "{url}.css" (e.g., 1234.css, article.css, my-page-url.css, etc). If none of the previous filenames can be found, it will search for a file named "default-critical.css". Please refer to the debugging section in the README file for a complete list of filenames.'),
       '#default_value' => $config->get('dir_path'),
diff --git a/tests/src/Unit/CriticalCssProviderTest.php b/tests/src/Unit/CriticalCssProviderTest.php
index fe52cb1..1055e4b 100644
--- a/tests/src/Unit/CriticalCssProviderTest.php
+++ b/tests/src/Unit/CriticalCssProviderTest.php
@@ -29,7 +29,7 @@ class CriticalCssProviderTest extends UnitTestCase {
   /**
    * The class under test.
    *
-   * @var \Drupal\critical_css\Asset\CriticalCssProvider
+   * @var CriticalCssProvider
    */
   protected $criticalCssProvider;
 
