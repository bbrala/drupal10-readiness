modules/contrib/instapage/instapage.install
modules/contrib/instapage/instapage.module
modules/contrib/instapage/src/Api.php
modules/contrib/instapage/src/ApiInterface.php
modules/contrib/instapage/src/Controller/FormsAccessCheck.php
modules/contrib/instapage/src/Controller/PageDisplayController.php
modules/contrib/instapage/src/Controller/PageSettingsController.php
modules/contrib/instapage/src/Form/PageDeleteForm.php
modules/contrib/instapage/src/Form/PageEditForm.php
modules/contrib/instapage/src/Form/PageNewForm.php
modules/contrib/instapage/src/Form/SettingsForm.php
modules/contrib/instapage/src/Routing/PagesRoutes.php
modules/contrib/instapage/tests/modules/instapage_test/src/Api.php
modules/contrib/instapage/tests/src/Functional/PageFormAccessTest.php
modules/contrib/instapage/tests/src/FunctionalJavascript/PageSettingsControllerTest.php
modules/contrib/instapage/tests/src/Kernel/ApiTest.php
modules/contrib/instapage/tests/src/Kernel/PageDeleteFormTest.php
modules/contrib/instapage/tests/src/Kernel/PageEditFormTest.php
modules/contrib/instapage/tests/src/Kernel/PageNewFormTest.php
modules/contrib/instapage/tests/src/Kernel/SettingsFormTest.php

16 files with changes
=====================

1) modules/contrib/instapage/tests/src/Kernel/SettingsFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\instapage\Kernel;

+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
+use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\SettingsForm;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;

@@ @@
   /**
    * Form builder object variable.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->container->set('http_client', $this->mockClient);
     $this->token = 'iuaphdsaihdhjsdikbfhdsjbfhskfius744758ogf83bfi3bbfbf88ob3zbfsdf3';
     $this->email = 'testing@testing.com';
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/instapage/tests/src/Kernel/PageNewFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\instapage\Kernel;

+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
+use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\PageNewForm;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;

@@ @@
   /**
    * Form builder object variable.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/instapage/tests/src/Kernel/PageEditFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\instapage\Kernel;

+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
+use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\PageEditForm;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;

@@ @@
   /**
    * Mocked RequestStack service variable.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $mockRequestStack;

@@ @@
   /**
    * Form builder object variable.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
@@ @@
         new Response(200, [], '{"success":true,"error":false,"data":{"accountkeys":["auihldailbdaibd287z738g3vb39b3z9bzigb9gf3gbfi3bf83gf8383gh38g8b3","ajsibdu28orh3obfo3bfo38fb3ozbf3izfb3zbf3zb3zbf3ib3ib3zibf3zibf33","ahsuh2o8hc3gtb3z80f38bz3b3oh8v3biz3bfu83hb3zbvhbu83bvz3bvz3bvb3b","fb3ibf389hf3bfz839hbf3bf3ufb3ubf3bf3bu3bf3bfu3bfuz3bz3bf3bf3f3bf"]},"message":"Found 4 keys"}', '1.1', 'OK'),
         new Response(200, [], '{"success":true,"error":false}', '1.1', 'OK')
       ));
-    $this->mockRequestStack = $this->getMockBuilder(RequestStack::class)->disableOriginalConstructor()->getMock();
+    $this->mockRequestStack = $this->createMock(RequestStack::class);
     $this->mockRequestStack
       ->method('getCurrentRequest')
       ->willReturn(new Request([], [], ['instapage_id' => '234567'], [], []));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/instapage/tests/src/Kernel/PageDeleteFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\instapage\Kernel;

+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\PageDeleteForm;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;

@@ @@
   /**
    * Mocked RequestStack service variable.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $mockRequestStack;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
@@ @@
         new Response(200, [], '{"success":true,"error":false,"data":{"accountkeys":["auihldailbdaibd287z738g3vb39b3z9bzigb9gf3gbfi3bf83gf8383gh38g8b3","ajsibdu28orh3obfo3bfo38fb3ozbf3izfb3zbf3zb3zbf3ib3ib3zibf3zibf33","ahsuh2o8hc3gtb3z80f38bz3b3oh8v3biz3bfu83hb3zbvhbu83bvz3bvz3bvb3b","fb3ibf389hf3bfz839hbf3bf3ufb3ubf3bf3bu3bf3bfu3bfuz3bz3bf3bf3f3bf"]},"message":"Found 4 keys"}', '1.1', 'OK'),
         new Response(200, [], '{"success":true,"error":false}', '1.1', 'OK')
       ));
-    $this->mockRequestStack = $this->getMockBuilder(RequestStack::class)->disableOriginalConstructor()->getMock();
+    $this->mockRequestStack = $this->createMock(RequestStack::class);
     $this->mockRequestStack
       ->method('getCurrentRequest')
       ->willReturn(new Request([], [], ['instapage_id' => '234567'], [], []));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/instapage/tests/src/Kernel/ApiTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\instapage\Kernel;

+use Drupal\instapage\ApiInterface;
+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
 use Drupal\KernelTests\KernelTestBase;
 use GuzzleHttp\Client;
 use GuzzleHttp\Psr7\Response;
@@ @@
   /**
    * Api service variable.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;

@@ @@
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->settingsConfig = $this->config('instapage.settings');
     $this->pagesConfig = $this->config('instapage.pages');
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->container->set('http_client', $this->mockClient);
     $this->api = $this->container->get('instapage.api');
     $this->token = 'iuaphdsaihdhjsdikbfhdsjbfhskfius744758ogf83bfi3bbfbf88ob3zbfsdf3';
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/instapage/tests/src/FunctionalJavascript/PageSettingsControllerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\instapage\FunctionalJavascript;

+use Drupal\user\UserInterface;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Url;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;

@@ @@
   /**
    * The test user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Testing settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $testingConfig;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer instapage settings',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/instapage/tests/src/Functional/PageFormAccessTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\instapage\Functional;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Testing configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $testingConfig;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->settingsConfig = $this->config('instapage.settings');
     $this->pagesConfig = $this->config('instapage.pages');
@@ @@
     $this->loginCreateUser(['administer instapage landing pages']);
     if (!empty($this->settingsConfig->get('instapage_user_token'))) {
       $this->drupalGet(Url::fromRoute('instapage.page_new'));
-      $this->assertField('page');
-      $this->assertField('path');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldExists('page');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldExists('path');
     }
     else {
       $this->drupalGet(Url::fromRoute('instapage.page_new'));
-      $this->assertNoField('page');
-      $this->assertNoField('path');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldNotExists('page');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldNotExists('path');
     }
   }
    ----------- end diff -----------

Applied rules:
 * AssertFieldRector
 * AssertNoFieldRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/instapage/tests/modules/instapage_test/src/Api.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage_test;

+use Drupal\Core\Config\Config;
 use Drupal\instapage\ApiInterface;
 use function GuzzleHttp\json_decode;
 use function GuzzleHttp\json_encode;
@@ @@
   /**
    * Http client service.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $client;

@@ @@
   /**
    * Settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Test configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $testConfig;

@@ @@
   /**
    * Api constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \GuzzleHttp\Client $client
+   * @param Client $client
    *   Http client service.
    */
   public function __construct(ConfigFactory $config, Client $client) {
@@ @@
   /**
    * Creates and returns a new instance of the service.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Drupal container service.
    *
    * @return static
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/instapage/src/Form/SettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/instapage/src/Form/PageNewForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage\Form;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;

@@ @@
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Module settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Route builder service.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;

@@ @@
   /**
    * PageNewForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $routeBuilder
+   * @param RouteBuilder $routeBuilder
    *   Route builder service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ApiInterface $api, RouteBuilder $routeBuilder) {
@@ @@
    *
    * @param array $form
    *   Form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response.
    */
   public static function closeModal(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/instapage/src/Form/PageEditForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage\Form;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Config\ConfigFactory;
@@ @@
   /**
    * Module settings config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;

@@ @@
   /**
    * Route builder service.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;

@@ @@
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * PageEditForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $routeBuilder
+   * @param RouteBuilder $routeBuilder
    *   Route builder service.
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Request stack service.
    */
   public function __construct(ConfigFactory $config, RouteBuilder $routeBuilder, ApiInterface $api, RequestStack $request) {
@@ @@
    *
    * @param array $form
    *   Form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response.
    */
   public static function closeModal(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/instapage/src/Form/PageDeleteForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage\Form;

+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Config\ConfigFactory;
@@ @@
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Module settings config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;

@@ @@
   /**
    * Route builder service.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;

@@ @@
   /**
    * PageDeleteForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $routeBuilder
+   * @param RouteBuilder $routeBuilder
    *   Route builder service.
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Request stack service.
    */
   public function __construct(ConfigFactory $config, RouteBuilder $routeBuilder, ApiInterface $api, RequestStack $request) {
@@ @@
    *
    * @param array $form
    *   Form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response.
    */
   public static function closeModal(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/instapage/src/Controller/PageSettingsController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage\Controller;

+use Drupal\Core\Config\Config;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Link;
@@ @@
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;

@@ @@
   /**
    * Instapage settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * PaseSettingsController constructor.
    *
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory.
    */
   public function __construct(ApiInterface $api, ConfigFactory $config) {
@@ @@
                   ],
                 ],
               ];
-              $op_links = render($links);
+              $op_links = \Drupal::service('renderer')->render($links);

               // The current url alias of the page.
               $path_url = Url::fromUri('internal:/' . $path, ['attributes' => ['target' => '_blank']]);
@@ @@

     // Render the rable.
     $table['#rows'] = $rows;
-    $table_render = render($table);
+    $table_render = \Drupal::service('renderer')->render($table);

     $add_new = [
       '#type' => 'link',
@@ @@
     $add_new['#attributes']['class'][] = 'instapage-add-new';

     // Render the 'Add new page' link.
-    $add_new_render = render($add_new);
+    $add_new_render = \Drupal::service('renderer')->render($add_new);

     $build['#markup'] = $markup . $add_new_render . $table_render;
     $build['#attached']['library'][] = 'core/drupal.dialog.ajax';
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/instapage/src/Controller/PageDisplayController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage\Controller;

+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Controller\ControllerBase;
 use GuzzleHttp\ClientInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Http client service.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $request;

@@ @@
   /**
    * PageDisplayController constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   Http client service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Request stack service.
    */
   public function __construct(ClientInterface $client, RequestStack $request) {
@@ @@
   /**
    * Returns the page HTML.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Page response.
    */
   public function content() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/instapage/src/Controller/FormsAccessCheck.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage\Controller;

+use Drupal\Core\Config\Config;
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
   /**
    * Settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;

@@ @@
   /**
    * Pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * FormsAccessCheck constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   ConfigFactory service.
    */
   public function __construct(ConfigFactory $config) {
@@ @@
   /**
    * Checks access for given route.
    *
-   * @param \Drupal\Core\Routing\RouteMatch $routeMatch
+   * @param RouteMatch $routeMatch
    *   Current route.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(RouteMatch $routeMatch) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/instapage/src/Api.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\instapage;

+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Config\ConfigFactory;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * Http client service.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;

@@ @@
   /**
    * Settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;

@@ @@
   /**
    * Current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;

@@ @@
   /**
    * Api constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   Http client service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request stack service.
    */
   public function __construct(ConfigFactory $config, ClientInterface $client, RequestStack $requestStack) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 16 files have been changed by Rector                                      

