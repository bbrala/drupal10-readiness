diff --git a/src/Access/RegistrationAddAccessCheck.php b/src/Access/RegistrationAddAccessCheck.php
index d5d77f1..172c15e 100644
--- a/src/Access/RegistrationAddAccessCheck.php
+++ b/src/Access/RegistrationAddAccessCheck.php
@@ -34,9 +34,9 @@ class RegistrationAddAccessCheck implements AccessInterface {
   /**
    * Checks access to the registration add page for the registration type.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
-   * @param \Drupal\ticket\Entity\RegistrationTypeInterface $registration_type
+   * @param RegistrationTypeInterface $registration_type
    *   (optional) The registration type. If not specified, access is allowed
    *   if there exists at least one registration type for which the user may
    *   create a Ticket.
diff --git a/src/Access/TicketAddAccessCheck.php b/src/Access/TicketAddAccessCheck.php
index ac7fdb0..e8c0dcd 100644
--- a/src/Access/TicketAddAccessCheck.php
+++ b/src/Access/TicketAddAccessCheck.php
@@ -34,9 +34,9 @@ class TicketAddAccessCheck implements AccessInterface {
   /**
    * Checks access to the node add page for the node type.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
-   * @param \Drupal\ticket\Entity\TicketTypeInterface $ticket_type
+   * @param TicketTypeInterface $ticket_type
    *   (optional) The ticket type. If not specified, access is allowed if there
    *   exists at least one ticket type for which the user may
    *   create a Ticket.
diff --git a/src/Controller/RegistrationController.php b/src/Controller/RegistrationController.php
index 803c017..add4a9d 100644
--- a/src/Controller/RegistrationController.php
+++ b/src/Controller/RegistrationController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ticket\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Render\RendererInterface;
@@ -15,14 +16,14 @@ class RegistrationController extends ControllerBase implements ContainerInjectio
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(RendererInterface $renderer) {
@@ -44,7 +45,7 @@ class RegistrationController extends ControllerBase implements ContainerInjectio
    * Redirects to ticket/registrations/add/[registration_type]
    * if only one registration type is available.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   A render array for a list of the registration types that can
    *   be added; however, if there is only one registration type defined
    *   for the site, the function will return a RedirectResponse to the
@@ -82,7 +83,7 @@ class RegistrationController extends ControllerBase implements ContainerInjectio
   /**
    * Provides the registration submission form.
    *
-   * @param \Drupal\ticket\Entity\RegistrationTypeInterface $registration_type
+   * @param RegistrationTypeInterface $registration_type
    *   The registration type entity for the registration.
    *
    * @return array
@@ -99,7 +100,7 @@ class RegistrationController extends ControllerBase implements ContainerInjectio
   /**
    * The _title_callback for the registration.add route.
    *
-   * @param \Drupal\ticket\Entity\RegistrationTypeInterface $registration_type
+   * @param RegistrationTypeInterface $registration_type
    *   The current Registration.
    *
    * @return string
diff --git a/src/Controller/TicketController.php b/src/Controller/TicketController.php
index 6006247..df64d9d 100644
--- a/src/Controller/TicketController.php
+++ b/src/Controller/TicketController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ticket\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Render\RendererInterface;
@@ -15,14 +16,14 @@ class TicketController extends ControllerBase implements ContainerInjectionInter
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(RendererInterface $renderer) {
@@ -43,7 +44,7 @@ class TicketController extends ControllerBase implements ContainerInjectionInter
    *
    * Redirects to ticket/add/[ticket_type] if only one ticket type is available.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   A render array for a list of the ticket types that can be added; however,
    *   if there is only one ticket type defined for the site, the function
    *   will return a RedirectResponse to the Ticket add page for that one ticket
@@ -81,7 +82,7 @@ class TicketController extends ControllerBase implements ContainerInjectionInter
   /**
    * Provides the ticket submission form.
    *
-   * @param \Drupal\ticket\Entity\TicketTypeInterface $ticket_type
+   * @param TicketTypeInterface $ticket_type
    *   The ticket type entity for the ticket.
    *
    * @return array
@@ -98,7 +99,7 @@ class TicketController extends ControllerBase implements ContainerInjectionInter
   /**
    * The _title_callback for the ticket.add route.
    *
-   * @param \Drupal\ticket\Entity\TicketTypeInterface $ticket_type
+   * @param TicketTypeInterface $ticket_type
    *   The current Ticket.
    *
    * @return string
diff --git a/src/Form/RegistrationSettingsForm.php b/src/Form/RegistrationSettingsForm.php
index 3355fc8..8aeddf2 100644
--- a/src/Form/RegistrationSettingsForm.php
+++ b/src/Form/RegistrationSettingsForm.php
@@ -29,7 +29,7 @@ class RegistrationSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -41,7 +41,7 @@ class RegistrationSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/TicketSettingsForm.php b/src/Form/TicketSettingsForm.php
index d640194..dbf65c9 100644
--- a/src/Form/TicketSettingsForm.php
+++ b/src/Form/TicketSettingsForm.php
@@ -29,7 +29,7 @@ class TicketSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -41,7 +41,7 @@ class TicketSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Plugin/DataType/RegistrationTypeConfig.php b/src/Plugin/DataType/RegistrationTypeConfig.php
index 6f6a9a7..bb138d4 100644
--- a/src/Plugin/DataType/RegistrationTypeConfig.php
+++ b/src/Plugin/DataType/RegistrationTypeConfig.php
@@ -22,7 +22,7 @@ class RegistrationTypeConfig extends TypedData {
   /**
    * The Registration Type Config object.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityInterface
+   * @var ConfigEntityInterface
    */
   protected $value;
 
diff --git a/src/RegistrationAccessControlHandler.php b/src/RegistrationAccessControlHandler.php
index 450bb49..a58b56f 100644
--- a/src/RegistrationAccessControlHandler.php
+++ b/src/RegistrationAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ticket;
 
+use Drupal\ticket\Entity\RegistrationInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class RegistrationAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\ticket\Entity\RegistrationInterface $entity */
+    /** @var RegistrationInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/RegistrationHtmlRouteProvider.php b/src/RegistrationHtmlRouteProvider.php
index 506181f..62bf313 100644
--- a/src/RegistrationHtmlRouteProvider.php
+++ b/src/RegistrationHtmlRouteProvider.php
@@ -36,10 +36,10 @@ class RegistrationHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -61,10 +61,10 @@ class RegistrationHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/RegistrationTypeHtmlRouteProvider.php b/src/RegistrationTypeHtmlRouteProvider.php
index 9f47026..40d1fc4 100644
--- a/src/RegistrationTypeHtmlRouteProvider.php
+++ b/src/RegistrationTypeHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class RegistrationTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
diff --git a/src/TicketAccessControlHandler.php b/src/TicketAccessControlHandler.php
index 3e54906..255a2d1 100644
--- a/src/TicketAccessControlHandler.php
+++ b/src/TicketAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ticket;
 
+use Drupal\ticket\Entity\TicketInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class TicketAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\ticket\Entity\TicketInterface $entity */
+    /** @var TicketInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/TicketHtmlRouteProvider.php b/src/TicketHtmlRouteProvider.php
index 91b1eac..870e73a 100644
--- a/src/TicketHtmlRouteProvider.php
+++ b/src/TicketHtmlRouteProvider.php
@@ -36,10 +36,10 @@ class TicketHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -61,10 +61,10 @@ class TicketHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/TicketTypeHtmlRouteProvider.php b/src/TicketTypeHtmlRouteProvider.php
index cbb4e66..8841bae 100644
--- a/src/TicketTypeHtmlRouteProvider.php
+++ b/src/TicketTypeHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class TicketTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
