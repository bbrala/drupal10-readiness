diff --git a/modules/translators_content/src/Access/TranslatorsContentManageAccessCheck.php b/modules/translators_content/src/Access/TranslatorsContentManageAccessCheck.php
index 82c7d94..37c845b 100644
--- a/modules/translators_content/src/Access/TranslatorsContentManageAccessCheck.php
+++ b/modules/translators_content/src/Access/TranslatorsContentManageAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\translators_content\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\content_translation\Access\ContentTranslationManageAccessCheck;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -23,13 +24,13 @@ class TranslatorsContentManageAccessCheck extends ContentTranslationManageAccess
   /**
    * Current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
   /**
    * Translator skills service.
    *
-   * @var \Drupal\translators\Services\TranslatorSkills
+   * @var TranslatorSkills
    */
   protected $translatorSkills;
 
@@ -88,7 +89,7 @@ class TranslatorsContentManageAccessCheck extends ContentTranslationManageAccess
 
         case 'delete':
           // @todo Remove this in https://www.drupal.org/node/2945956.
-          /** @var \Drupal\Core\Access\AccessResultInterface $delete_access */
+          /** @var AccessResultInterface $delete_access */
           $delete_access = \Drupal::service('content_translation.delete_access')->checkAccess($entity);
           $access = $this->checkAccess($entity, $language, $operation);
           return $delete_access->andIf($access);
diff --git a/modules/translators_content/src/Controller/TranslatorsContentEntityLangcodeFieldController.php b/modules/translators_content/src/Controller/TranslatorsContentEntityLangcodeFieldController.php
index 2357f81..ea66c22 100644
--- a/modules/translators_content/src/Controller/TranslatorsContentEntityLangcodeFieldController.php
+++ b/modules/translators_content/src/Controller/TranslatorsContentEntityLangcodeFieldController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\translators_content\Controller;
 
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Language\Language;
 
 /**
@@ -26,7 +27,7 @@ class TranslatorsContentEntityLangcodeFieldController {
    *
    * @param array $element
    *   Element render-able array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -42,7 +43,7 @@ class TranslatorsContentEntityLangcodeFieldController {
    *
    * @param array &$options
    *   Dropdown options array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   protected static function languageOptionFilteringController(array &$options, &$form_state) {
diff --git a/modules/translators_content/src/Controller/TranslatorsContentTranslationOverviewController.php b/modules/translators_content/src/Controller/TranslatorsContentTranslationOverviewController.php
index 3f4abfa..7192fc9 100644
--- a/modules/translators_content/src/Controller/TranslatorsContentTranslationOverviewController.php
+++ b/modules/translators_content/src/Controller/TranslatorsContentTranslationOverviewController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\translators_content\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\content_translation\ContentTranslationManagerInterface;
 use Drupal\content_translation\Controller\ContentTranslationController;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -26,13 +29,13 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * User skills service.
    *
-   * @var \Drupal\translators\Services\TranslatorSkills
+   * @var TranslatorSkills
    */
   protected $translatorSkills;
   /**
    * Translator access manager.
    *
-   * @var \Drupal\translators_content\Access\TranslatorsContentManageAccessCheck
+   * @var TranslatorsContentManageAccessCheck
    */
   protected $accessManager;
 
@@ -51,13 +54,13 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * TranslatorsContentTranslationOverviewController constructor.
    *
-   * @param \Drupal\content_translation\ContentTranslationManagerInterface $manager
+   * @param ContentTranslationManagerInterface $manager
    *   Content translation manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\translators_content\Access\TranslatorsContentManageAccessCheck $access_manager
+   * @param TranslatorsContentManageAccessCheck $access_manager
    *   Translator access manager.
-   * @param \Drupal\translators\Services\TranslatorSkills $translatorSkills
+   * @param TranslatorSkills $translatorSkills
    *   User skills service.
    */
   public function __construct(
@@ -74,7 +77,7 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * Builds the translations overview page.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    * @param string $entity_type_id
    *   (optional) The entity type ID.
@@ -84,9 +87,9 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
    * @return array
    *   Array of page elements to render.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityMalformedException
    */
   public function overview(RouteMatchInterface $route_match, $entity_type_id = NULL, $filter = TRUE) {
     $build = parent::overview($route_match, $entity_type_id);
@@ -161,19 +164,19 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * Get more languages.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   Route match interface.
    * @param string|null $entity_type_id
    *   Entity type ID.
    * @param string $method
    *   Method name. Values allowed - "noajax" and "ajax". Defaults to "ajax".
    *
-   * @return array|\Drupal\Core\Ajax\AjaxResponse
+   * @return array|AjaxResponse
    *   Array of languages or AJAX response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityMalformedException
    */
   public function getMoreLanguages(RouteMatchInterface $route_match, $entity_type_id = NULL, $method = 'ajax') {
     $build = self::overview($route_match, $entity_type_id, FALSE);
@@ -223,8 +226,8 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
    * @return mixed
    *   Extracted language from row.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   private function extractLanguageFromRow(array &$row) {
     $label = reset($row);
@@ -245,8 +248,8 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
    * @return array
    *   Languages array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function extractLanguagesWithGroups(array &$rows, array $translator_langcodes) {
     $groups = [];
@@ -281,11 +284,11 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
    * @param string|null $label
    *   Language label.
    *
-   * @return \Drupal\Core\Language\LanguageInterface|mixed|null
+   * @return LanguageInterface|mixed|null
    *   Language object if exists.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getLanguageByLabel($label = NULL) {
     if (empty($label)) {
@@ -304,12 +307,12 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
    *
    * @param array $lang_rows
    *   Language rows array.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Processed entity.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityMalformedException
    */
   protected function postProcessTranslationsOperations(array &$lang_rows, ContentEntityInterface $entity) {
     $entity_type_id = $entity->getEntityTypeId();
@@ -367,11 +370,11 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * Build "Add" translation links.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity object.
    * @param string $source
    *   Source langcode.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   Language object.
    *
    * @return array
@@ -395,11 +398,11 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * Build entity operation links.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity object.
    * @param string $label
    *   Operation label.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   Language object.
    *
    * @return array
@@ -417,11 +420,11 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * Build translation operation links.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity object.
    * @param string $label
    *   Operation label.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   Language object.
    *
    * @return array
@@ -441,7 +444,7 @@ class TranslatorsContentTranslationOverviewController extends ContentTranslation
   /**
    * Extracting the default language label.
    *
-   * @param string|\Drupal\Core\StringTranslation\TranslatableMarkup &$name
+   * @param string|TranslatableMarkup $name
    *   Language name/label.
    */
   private static function extractDefaultLanguageName(&$name) {
diff --git a/modules/translators_content/src/Handler/TranslatorsContentTranslationHandlerTrait.php b/modules/translators_content/src/Handler/TranslatorsContentTranslationHandlerTrait.php
index 173be02..456ec19 100644
--- a/modules/translators_content/src/Handler/TranslatorsContentTranslationHandlerTrait.php
+++ b/modules/translators_content/src/Handler/TranslatorsContentTranslationHandlerTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\translators_content\Handler;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -17,7 +18,7 @@ trait TranslatorsContentTranslationHandlerTrait {
   /**
    * Checks if the user can perform the given operation on translations.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity whose translation has to be accessed.
    * @param string $operation
    *   The operation to be performed on the translation. Possible values are:
@@ -29,7 +30,7 @@ trait TranslatorsContentTranslationHandlerTrait {
    * @param string $target
    *   Language ID of the target language when creating new translations.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function getTranslationAccess(EntityInterface $entity, $operation, $active = NULL, $target = NULL) {
@@ -63,7 +64,7 @@ trait TranslatorsContentTranslationHandlerTrait {
   /**
    * Get missing source Language ID.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity being checked.
    *
    * @return string|null
@@ -84,7 +85,7 @@ trait TranslatorsContentTranslationHandlerTrait {
   /**
    * Get missing target Language ID.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity being checked.
    *
    * @return string|null
@@ -105,10 +106,10 @@ trait TranslatorsContentTranslationHandlerTrait {
   /**
    * Performs bundle access checks for the specified entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being checked.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   An access result object.
    */
   public function getBundleTranslationAccess(EntityInterface $entity) {
@@ -126,14 +127,14 @@ trait TranslatorsContentTranslationHandlerTrait {
   /**
    * Performs create translation operation access check.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being checked.
    * @param string $source
    *   Source Language ID.
    * @param string $target
    *   Target Language ID.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   An access result object.
    */
   public function getCreateTranslationAccess($entity, $source, $target) {
@@ -164,14 +165,14 @@ trait TranslatorsContentTranslationHandlerTrait {
   /**
    * Performs translation operation access check.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being checked.
    * @param string $operation
    *   Operation machine name.
    * @param string $langcode
    *   Language ID.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   An access result object.
    */
   public function getOperationTranslationAccess($entity, $operation, $langcode) {
diff --git a/modules/translators_content/src/Plugin/views/filter/TranslationLanguageLimitedToTranslationSkills.php b/modules/translators_content/src/Plugin/views/filter/TranslationLanguageLimitedToTranslationSkills.php
index d6a6d89..30f3c86 100644
--- a/modules/translators_content/src/Plugin/views/filter/TranslationLanguageLimitedToTranslationSkills.php
+++ b/modules/translators_content/src/Plugin/views/filter/TranslationLanguageLimitedToTranslationSkills.php
@@ -20,13 +20,13 @@ class TranslationLanguageLimitedToTranslationSkills extends LanguageFilter imple
   /**
    * User skills service.
    *
-   * @var \Drupal\translators\Services\TranslatorSkills
+   * @var TranslatorSkills
    */
   protected $translatorSkills;
   /**
    * Current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -39,11 +39,11 @@ class TranslationLanguageLimitedToTranslationSkills extends LanguageFilter imple
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   Language manager.
-   * @param \Drupal\translators\Services\TranslatorSkills $translatorSkills
+   * @param TranslatorSkills $translatorSkills
    *   User skills service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Current user.
    */
   public function __construct(
diff --git a/modules/translators_content/src/Routing/TranslatorsContentRouteSubscriber.php b/modules/translators_content/src/Routing/TranslatorsContentRouteSubscriber.php
index f6d0b9d..8de70dd 100755
--- a/modules/translators_content/src/Routing/TranslatorsContentRouteSubscriber.php
+++ b/modules/translators_content/src/Routing/TranslatorsContentRouteSubscriber.php
@@ -19,14 +19,14 @@ class TranslatorsContentRouteSubscriber extends RouteSubscriberBase {
   /**
    * The content translation manager.
    *
-   * @var \Drupal\content_translation\ContentTranslationManagerInterface
+   * @var ContentTranslationManagerInterface
    */
   protected $contentTranslationManager;
 
   /**
    * Constructs a ContentTranslationRouteSubscriber object.
    *
-   * @param \Drupal\content_translation\ContentTranslationManagerInterface $manager
+   * @param ContentTranslationManagerInterface $manager
    *   The content translation manager.
    */
   public function __construct(ContentTranslationManagerInterface $manager) {
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php
index 4b495c7..c090092 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentAccessClassTest.php
@@ -25,14 +25,14 @@ class TranslatorsContentAccessClassTest extends BrowserTestBase {
   /**
    * Access rules manager.
    *
-   * @var \Drupal\translators_content\Access\TranslatorsContentManageAccessCheck
+   * @var TranslatorsContentManageAccessCheck
    */
   protected $accessManager;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->accessManager = $this->container
       ->get('content_translation.manage_access');
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php
index 362bfa0..5c95c87 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentConfigTest.php
@@ -94,13 +94,10 @@ class TranslatorsContentConfigTest extends BrowserTestBase {
       else {
         $this->assertTrue($option_value);
       }
+      $this->drupalGet('/admin/config/regional/translators');
 
       // Update value.
-      $this->drupalPostForm(
-        '/admin/config/regional/translators',
-        [$config_name => TRUE],
-        'Save configuration'
-      );
+      $this->submitForm([$config_name => TRUE], 'Save configuration');
 
       $this->assertSession()->statusCodeEquals(200);
       $this->assertTextHelper('The configuration options have been saved.', FALSE);
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php
index b046edb..2126405 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionBlockContentTest.php
@@ -68,9 +68,9 @@ class TranslatorsContentPermissionBlockContentTest extends TranslatorsContentPer
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
     $this->rebuildContainer();
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php
index d3e6008..f38f34b 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionCommentTest.php
@@ -34,14 +34,14 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
   /**
    * A node to test comments on.
    *
-   * @var Drupal\node\Entity\Node
+   * @var Node
    */
   protected $testNode;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $node = Node::create([
       'type' => 'article',
@@ -98,9 +98,9 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
     $this->rebuildContainer();
   }
 
@@ -109,13 +109,13 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
    */
   public function runTestLocalTaskTabsExistence($entity, $label, $url, $langcode = NULL) {
     $this->drupalGetEntity($entity, $langcode);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $id = $entity->id();
     $operation = $label == 'Translate' ? 'translations' : strtolower($label);
     $link = $this->assertSession()->elementExists('xpath', "//article[@id='comment-$id']//a[text()=\"$label\"]");
     $link->click();
-    $this->assertResponse(200);
-    $this->assertUrl($url->toString());
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals($url->toString());
   }
 
   /**
@@ -123,7 +123,7 @@ class TranslatorsContentPermissionCommentTest extends TranslatorsContentPermissi
    */
   public function runTestNoLocalTaskTabsExistence($entity, $label, $langcode = NULL) {
     $this->drupalGetEntity($entity, $langcode);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $id = $entity->id();
     $operation = $label == 'Translate' ? 'translations' : strtolower($label);
     $this->assertSession()->elementNotExists('xpath', "//article[@id='comment-$id']//a[text()=\"$label\"]");
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php
index 69f05be..74305fb 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionMediaTest.php
@@ -38,14 +38,11 @@ class TranslatorsContentPermissionMediaTest extends TranslatorsContentPermission
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
-    $this->drupalPostForm(
-      '/admin/config/media/media-settings',
-      ['standalone_url' => TRUE],
-      'Save configuration'
-    );
+    $this->drupalGet('/admin/config/media/media-settings');
+    $this->submitForm(['standalone_url' => TRUE], 'Save configuration');
     $this->drupalLogout();
     file_put_contents('public://image-test.jpg', file_get_contents(__DIR__ . '/image-test.jpg'));
     $file = File::create([
@@ -234,8 +231,8 @@ class TranslatorsContentPermissionMediaTest extends TranslatorsContentPermission
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
     $this->rebuildContainer();
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php
index 1e1f45c..18a6950 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticEntityTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\translators_content\Functional;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\Language\Language;
 
@@ -27,7 +28,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
     $this->createLanguages(['fr', 'de', 'sq']);
@@ -38,7 +39,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
   /**
    * Test core "Create article node" permission.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function testCreateEntityAnyLanguage() {
     $creator = $this->createUser(['create article content']);
@@ -47,7 +48,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access languages in translation skills.
     $this->drupalGet('node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -57,7 +58,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->assertOptionAvailable('langcode[0][value]', Language::LANGCODE_NOT_APPLICABLE);
 
     $this->drupalGet('fr/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -68,7 +69,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access other languages.
     $this->drupalGet('de/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -78,7 +79,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->assertOptionAvailable('langcode[0][value]', Language::LANGCODE_NOT_APPLICABLE);
 
     $this->drupalGet('sq/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 6);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -91,7 +92,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
   /**
    * Test translators_content "create article node" permission.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function testCreateEntityInTranslationSkillPermission() {
     $creator = $this->createUser(['translators_content create article node']);
@@ -100,7 +101,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access languages in translation skills.
     $this->drupalGet('node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 4);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -108,7 +109,7 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->assertOptionAvailable('langcode[0][value]', Language::LANGCODE_NOT_APPLICABLE);
 
     $this->drupalGet('fr/node/add/article');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('langcode[0][value]', 4);
     $this->assertOptionAvailable('langcode[0][value]', 'en');
     $this->assertOptionAvailable('langcode[0][value]', 'fr');
@@ -117,11 +118,11 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
 
     // Test access other languages.
     $this->drupalGet('de/node/add/article');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->assertTextHelper('Access denied', FALSE);
 
     $this->drupalGet('sq/node/add/article');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->assertTextHelper('Access denied', FALSE);
   }
 
@@ -149,44 +150,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$en_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$fr_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$de_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
   /**
@@ -213,44 +214,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$en_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$en_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$fr_nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$fr_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("fr/node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     $this->drupalGet("de/node/$de_nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -277,44 +278,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$en_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$fr_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$de_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
   /**
@@ -341,44 +342,44 @@ class TranslatorsContentPermissionNodeStaticEntityTest extends BrowserTestBase {
     $this->drupalGet("node/$en_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$en_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("fr/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$en_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$en_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     $fr_nid = $node_fr->id();
     $this->drupalGet("node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$fr_nid");
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$fr_nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$fr_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$fr_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Test access in another language.
     $de_nid = $node_de->id();
     $this->drupalGet("node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("fr/node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("de/node/$de_nid");
     $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Delete\']/@href');
     $this->drupalGet("de/node/$de_nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php
index acf7e2f..446147c 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionNodeStaticTranslationTest.php
@@ -26,7 +26,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
     $this->createLanguages(['fr', 'de', 'sq']);
@@ -51,7 +51,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -62,11 +62,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
 
     $translationCreator2 = $this->createUser([
@@ -79,7 +79,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -90,11 +90,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
   /**
@@ -114,7 +114,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -125,11 +125,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogout();
 
     $translationCreator2 = $this->createUser([
@@ -143,7 +143,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.add a[hreflang="en"]');
     $this->assertSession()
@@ -154,11 +154,11 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.add a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("node/$nid/translations/add/en/de");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("node/$nid/translations/add/en/sq");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -183,7 +183,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     ]);
     $this->drupalLogin($translationCreator1);
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -191,7 +191,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/de/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -199,7 +199,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/sq/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -208,12 +208,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
 
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/en/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/en/fr");
     $this->drupalLogout();
 
     // Test with translators_content create translation access.
@@ -226,7 +226,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->addSkill(['de', 'fr']);
     $this->addSkill(['en', 'sq']);
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -234,7 +234,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/de/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -242,7 +242,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/sq/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 3);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -251,12 +251,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
 
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/en/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/en/fr");
     $this->drupalLogout();
 
     // Test with strict translation skill pairing.
@@ -266,7 +266,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
 
     $this->drupalLogin($translationCreator2);
     $this->drupalGet("node/$nid/translations/add/en/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 2);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -274,7 +274,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/de/fr");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertOptionCount('source_langcode[source]', 2);
     $this->assertOptionAvailable('source_langcode[source]', 'en');
     $this->assertOptionAvailable('source_langcode[source]', 'de');
@@ -282,16 +282,16 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertOptionNotAvailable('source_langcode[source]', 'fr');
 
     $this->drupalGet("node/$nid/translations/add/sq/fr");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/en/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/en/fr");
     $this->drupalLogout();
 
     // Test preset source language.
@@ -307,12 +307,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->drupalLogin($translationCreator3);
     $this->addSkill(['de', 'fr']);
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/de/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/de/fr");
     $this->drupalLogout();
 
     // Test with translators_content create translation access.
@@ -323,12 +323,12 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->drupalLogin($translationCreator4);
     $this->addSkill(['de', 'fr']);
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementExists('css', '.add a[hreflang="fr"]');
     $this->click('.add a[hreflang="fr"]');
-    $this->assertResponse(200);
-    $this->assertUrl("/fr/node/$nid/translations/add/de/fr");
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals("/fr/node/$nid/translations/add/de/fr");
   }
 
   /**
@@ -351,7 +351,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -362,13 +362,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
 
     $translationEditor2 = $this->createUser([
@@ -381,7 +381,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -392,13 +392,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
   }
 
@@ -423,7 +423,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -434,13 +434,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogout();
 
     $translationEditor2 = $this->createUser([
@@ -454,7 +454,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.edit a[hreflang="en"]');
     $this->assertSession()
@@ -465,13 +465,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.edit a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -494,7 +494,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -505,13 +505,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
 
     $translationDeleter2 = $this->createUser([
@@ -524,7 +524,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -535,13 +535,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalLogout();
   }
 
@@ -566,7 +566,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -577,13 +577,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogout();
 
     $translationDeleter2 = $this->createUser([
@@ -597,7 +597,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Translate\']/@href');
     // Translation overview.
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()
       ->elementNotExists('css', '.delete a[hreflang="en"]');
     $this->assertSession()
@@ -608,13 +608,13 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
       ->elementNotExists('css', '.delete a[hreflang="sq"]');
     // Direct links.
     $this->drupalGet("node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("fr/node/$nid/delete");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->drupalGet("de/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalGet("sq/node/$nid/delete");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -636,7 +636,7 @@ class TranslatorsContentPermissionNodeStaticTranslationTest extends BrowserTestB
     $this->addSkill(['en', 'fr']);
 
     $this->drupalGet("node/$nid/translations");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     $language_column_css = 'main table td:first-child';
     // Test node default language.
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php
index 3fb8537..5ae6505 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTaxonomyTermTest.php
@@ -179,8 +179,8 @@ class TranslatorsContentPermissionTaxonomyTermTest extends TranslatorsContentPer
     $source = !empty($source) ? $source : $entity->getUntranslated()->language()->getId();
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertResponse(200);
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->submitForm([], t('Save'));
     $this->rebuildContainer();
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php
index 36e9e7d..669e3d5 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\translators_content\Functional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Language\Language;
@@ -53,7 +54,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
     $this->enableFilterTranslationOverviewToSkills(FALSE);
@@ -70,7 +71,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
    * @param null|int $uid
    *   Optional. Author ID.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Created enitity object.
    */
   abstract public function createTestEntity($langcode = NULL, int $uid = NULL);
@@ -89,7 +90,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Add a translation to an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be translated.
    * @param null|string $target
    *   Optional. Target language ID.
@@ -104,7 +105,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   public function testTranslatonPermissionsVisability() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin/people/permissions');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $permissions_prefix = '(in translation skills)';
 
     // Check for Content Translators permissions section.
@@ -123,7 +124,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   public function runTestEntityPermissionsVisability() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin/people/permissions');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $permissions_prefix = '(in translation skills)';
 
     // Check for "content" permissions existence.
@@ -277,7 +278,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Checks that workflows have the expected behaviors for the given user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user to test the workflow behavior against.
    */
   protected function runTests(UserInterface $user) {
@@ -351,7 +352,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     if ($this->expectedStatus['create entity in any language'] == 200) {
       foreach ($this->getAllSiteLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(200);
+        $this->assertSession()->statusCodeEquals(200);
         foreach ($this->getAllSiteLangcodes() as $all_langcode) {
           $this->assertOptionAvailable('langcode[0][value]', $all_langcode);
         }
@@ -363,7 +364,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     elseif ($this->expectedStatus['create entity in translation skills'] == 200) {
       foreach ($translatorSkills->getAllLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(200);
+        $this->assertSession()->statusCodeEquals(200);
         // Check language option field.
         foreach ($translatorSkills->getAllLangcodes() as $user_langcode) {
           $this->assertOptionAvailable('langcode[0][value]', $user_langcode);
@@ -377,13 +378,13 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
       }
       foreach ($this->getUnregisteredLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(403);
+        $this->assertSession()->statusCodeEquals(403);
       }
     }
     else {
       foreach ($this->getAllSiteLangcodes() as $langcode) {
         $this->drupalGet($this->getCreateEntityUrl($langcode));
-        $this->assertResponse(403);
+        $this->assertSession()->statusCodeEquals(403);
       }
     }
   }
@@ -438,7 +439,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Test entity operation in one language.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be tested on.
    * @param string $operation
    *   Operation.
@@ -452,23 +453,23 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $path = $this->getCurrentPath($langcode);
     if ($has_permission) {
       // Check direct link permission.
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       // Check local task tabs existence.
       $label = ucfirst($operation);
       $this->runTestLocalTaskTabsExistence($entity, $label, $url);
       // Check operation existence on translation overview page.
       if ($this->expectedStatus['access translation overview'] == 200) {
         $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
-        $this->assertResponse(200);
+        $this->assertSession()->statusCodeEquals(200);
         $this->assertSession()
           ->elementExists('css', ".$operation a[hreflang=\"" . $langcode . "\"]");
         $this->click(".$operation a[hreflang=\"" . $langcode . "\"]");
-        $this->assertUrl($path);
+        $this->assertSession()->addressEquals($path);
       }
     }
     else {
       // Check NO direct link permission.
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       // Check NO local task tabs existence.
       $label = ucfirst($operation);
       $this->runTestNoLocalTaskTabsExistence($entity, $label);
@@ -482,7 +483,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Test access translation overview.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be tested on.
    */
   public function runTestAccessTranslationOverview(EntityInterface $entity) {
@@ -490,7 +491,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $url = $entity->toUrl('drupal:content-translation-overview');
     $this->drupalGet($url);
     $url_string = $url->toString();
-    $this->assertResponse($this->expectedStatus['access translation overview']);
+    $this->assertSession()->statusCodeEquals($this->expectedStatus['access translation overview']);
     if ($this->expectedStatus['access translation overview'] == 200) {
       // Check the language row filtering.
       $config = \Drupal::configFactory()->get('translators.settings');
@@ -551,11 +552,11 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
    */
   public function runTestLocalTaskTabsExistence($entity, $label, $url, $langcode = NULL) {
     $this->drupalGetEntity($entity, $langcode);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->elementExists('xpath', '//a[text()="' . $label . '"]/@href');
     $this->clickLink($label);
-    $this->assertResponse(200);
-    $this->assertUrl($url->toString());
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals($url->toString());
   }
 
   /**
@@ -619,7 +620,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Test create translation operation.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be tested on.
    * @param string $source
    *   Language ID of source language.
@@ -633,25 +634,25 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $source = $translatorSkills->getTranslationSourceLangcode($entity, $target);
     $translation_add_url = $this->getCreateEntityTransaltionUrl($entity, $source, $target);
     $this->drupalGet($translation_add_url);
-    $this->assertUrl($translation_add_url->toString());
+    $this->assertSession()->addressEquals($translation_add_url->toString());
     $path = $this->getCurrentPath($target);
     if ($has_permission) {
       // Check direct link access.
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       // Check translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       $this->assertSession()
         ->elementExists('css', '.add a[hreflang="' . $target . '"]');
       $this->click('.add a[hreflang="' . $target . '"]');
-      $this->assertUrl($path);
-      $this->assertResponse(200);
+      $this->assertSession()->addressEquals($path);
+      $this->assertSession()->statusCodeEquals(200);
       // Check source language field.
       $this->runTestCreateTranslationSourceLanguages($entity, $target);
     }
     else {
       // Check NO direct link access.
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       // Check NO translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
       $this->assertSession()
@@ -662,7 +663,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Test source language field for create translation operation.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be tested on.
    * @param string $target
    *   Language ID of target language.
@@ -698,7 +699,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Test translation operations in all languages.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be tested on.
    * @param string $operation
    *   Operation.
@@ -740,7 +741,7 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Test translation operation in one language.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be tested on.
    * @param string $operation
    *   Operation.
@@ -753,25 +754,25 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
     $entity = $entity->getTranslation($langcode);
     $url = $this->getEntityTranslationOperationUrl($entity, $langcode, $operation);
     $this->drupalGet($url);
-    $this->assertUrl($url->toString());
+    $this->assertSession()->addressEquals($url->toString());
     if ($has_permission) {
       // Check direct link access.
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       // Check translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       $this->assertSession()
         ->elementExists('css', ".$operation a[hreflang=\"" . $langcode . "\"]");
       $this->click(".$operation a[hreflang=\"" . $langcode . "\"]");
-      $this->assertUrl($url->toString());
-      $this->assertResponse(200);
+      $this->assertSession()->addressEquals($url->toString());
+      $this->assertSession()->statusCodeEquals(200);
       // Check local task tabs existence.
       $label = ucfirst($operation);
       $this->runTestLocalTaskTabsExistence($entity, $label, $url, $langcode);
     }
     else {
       // Check NO direct link access.
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       // Check NO translation operation existence on translation overview page.
       $this->drupalGet($entity->toUrl('drupal:content-translation-overview'));
       $this->assertSession()
@@ -785,43 +786,43 @@ abstract class TranslatorsContentPermissionTestBase extends BrowserTestBase {
   /**
    * Test that ensures we don't restrict access to the user's edit form.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function runTestUserEditForm($user) {
     $another_user = $this->createUser();
 
     // Check that local task tabs exist for own page.
     $this->drupalGet("user/{$user->id()}");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     // Check that local task tabs doesn't exist for other uers's pages.
     $this->drupalGet("user/{$another_user->id()}");
     if ($user->hasPermission('administer users')) {
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
       $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
     }
     else {
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
       $this->assertSession()->elementNotExists('xpath', '//a[text()=\'Edit\']/@href');
     }
 
     // Check for the edit page access for own page.
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Check for the edit page access for other users's page.
     $this->drupalGet("user/{$another_user->id()}/edit");
     if ($user->hasPermission('administer users')) {
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
     }
     else {
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
     }
 
     // Additionally check that we don't give access to this form
     // for anonymous users.
     $this->drupalLogout();
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($user);
   }
 
diff --git a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php
index d3a819a..90a22f6 100644
--- a/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php
+++ b/modules/translators_content/tests/src/Functional/TranslatorsContentPermissionUserStaticTest.php
@@ -32,18 +32,18 @@ class TranslatorsContentPermissionUserStaticTest extends BrowserTestBase {
 
     // Check entity local task tabs existence.
     $this->drupalGet("user/{$user->id()}");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->elementExists('xpath', '//a[text()=\'Edit\']/@href');
 
     // Check for the edit page access.
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Additionally check that we don't give access to this form
     // for anonymous users.
     $this->drupalLogout();
     $this->drupalGet("user/{$user->id()}/edit");
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
