diff --git a/acsf.api.php b/acsf.api.php
index 99234b1..d7104d7 100644
--- a/acsf.api.php
+++ b/acsf.api.php
@@ -20,7 +20,7 @@ function hook_acsf_registry() {
         // contain a namespace declaration.
         'class' => '\Drupal\your_module\YourClassName',
         // 'path' is necessary only if the location is non-standard:
-        'path' => drupal_get_path('module', 'your_module') . '/classes',
+        'path' => \Drupal::service('extension.list.module')->getPath('your_module') . '/classes',
       ],
     ],
   ];
diff --git a/acsf_duplication/src/Commands/AcsfDuplicationCommands.php b/acsf_duplication/src/Commands/AcsfDuplicationCommands.php
index 5e1b6b9..b0e9f26 100644
--- a/acsf_duplication/src/Commands/AcsfDuplicationCommands.php
+++ b/acsf_duplication/src/Commands/AcsfDuplicationCommands.php
@@ -25,7 +25,7 @@ class AcsfDuplicationCommands extends DrushCommands {
    * @param array $options
    *   The command options supplied to the executed command.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the scrub process was not successful or the acsf module is not
    *   enabled.
    * @throws \InvalidArgumentException
@@ -101,13 +101,13 @@ class AcsfDuplicationCommands extends DrushCommands {
    *
    * @command acsf-duplication-scrub-progress
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the scrub process was not successful or the acsf module is not
    *   enabled.
    * @throws \InvalidArgumentException
    *   If one or more arguments are missing.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\PropertyList
+   * @return PropertyList
    *   Description of remaining comments to scrub.
    */
   public function duplicationScrubProgress() {
diff --git a/acsf_init/src/Commands/AcsfInitCommands.php b/acsf_init/src/Commands/AcsfInitCommands.php
index 3e3ab02..3dc4a03 100644
--- a/acsf_init/src/Commands/AcsfInitCommands.php
+++ b/acsf_init/src/Commands/AcsfInitCommands.php
@@ -72,7 +72,7 @@ class AcsfInitCommands extends DrushCommands {
    * @param array $options
    *   The command options supplied to the executed command.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the command cannot be executed.
    *
    * @command acsf-init
@@ -240,7 +240,7 @@ class AcsfInitCommands extends DrushCommands {
    * @param array $options
    *   The command options supplied to the executed command.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If something is wrong with the current codebase.
    *
    * @command acsf-init-verify
@@ -354,11 +354,11 @@ class AcsfInitCommands extends DrushCommands {
    * @param array $options
    *   The command options supplied to the executed command.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *    If the provided email address is invalid.
    * @throws \InvalidArgumentException
    *   If one or more arguments are missing or invalid.
-   * @throws \Drush\Exceptions\UserAbortException
+   * @throws UserAbortException
    *   If the customer does not allow the creation of a new account.
    *
    * @command acsf-connect-factory
@@ -463,7 +463,7 @@ class AcsfInitCommands extends DrushCommands {
     $admin_account->setLastLoginTime(1)
       ->setUsername('Site Factory admin')
       ->setEmail($site_admin_mail)
-      ->setPassword(user_password())
+      ->setPassword(\Drupal::service('password_generator')->generate())
       ->activate()
       ->save();
 
@@ -487,7 +487,7 @@ class AcsfInitCommands extends DrushCommands {
     $site_owner_account->setLastLoginTime(1)
       ->setUsername($site_owner_name)
       ->setEmail($site_owner_mail)
-      ->setPassword(user_password())
+      ->setPassword(\Drupal::service('password_generator')->generate())
       ->activate()
       ->save();
 
@@ -790,7 +790,7 @@ INCLUDE;
    * want our line in their .htaccess file, then adding it verbatim, but
    * commented-out would suffice.
    *
-   * @throws \Drupal\acsf\AcsfInitHtaccessException
+   * @throws AcsfInitHtaccessException
    *   If the function couldn't patch the .htaccess file.
    */
   private function patchHtaccess() {
diff --git a/acsf_sj/src/Api/SjApiClient.php b/acsf_sj/src/Api/SjApiClient.php
index 7c13f7b..fbf7b28 100644
--- a/acsf_sj/src/Api/SjApiClient.php
+++ b/acsf_sj/src/Api/SjApiClient.php
@@ -22,7 +22,7 @@ class SjApiClient implements SjClientInterface {
   /**
    * A logger instance for acsf_sj.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -36,9 +36,9 @@ class SjApiClient implements SjClientInterface {
   /**
    * Constructs the ACSF SJ Client.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(RequestStack $request_stack, LoggerInterface $logger) {
@@ -189,7 +189,7 @@ class SjApiClient implements SjClientInterface {
 
     $exit_code = -1;
     if (!$error) {
-      $command = sprintf('%s %s', $this->binary, $command_arguments);
+      $command = [$this->binary, $command_arguments];
       // Possibly one retry.
       for ($retry = 0; $retry < 2 && $exit_code !== 0; $retry++) {
         if ($retry) {
diff --git a/acsf_sso/src/EventSubscriber/SamlauthUserSyncSubscriber.php b/acsf_sso/src/EventSubscriber/SamlauthUserSyncSubscriber.php
index 40021bb..dda0f56 100644
--- a/acsf_sso/src/EventSubscriber/SamlauthUserSyncSubscriber.php
+++ b/acsf_sso/src/EventSubscriber/SamlauthUserSyncSubscriber.php
@@ -22,32 +22,32 @@ class SamlauthUserSyncSubscriber implements EventSubscriberInterface {
   /**
    * The EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Construct a new SamlauthUserSyncSubscriber.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManager service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, MessengerInterface $messenger, LoggerInterface $logger) {
diff --git a/acsf_variables/src/Commands/AcsfVariablesCommands.php b/acsf_variables/src/Commands/AcsfVariablesCommands.php
index 9f1771e..3f99434 100644
--- a/acsf_variables/src/Commands/AcsfVariablesCommands.php
+++ b/acsf_variables/src/Commands/AcsfVariablesCommands.php
@@ -19,10 +19,10 @@ class AcsfVariablesCommands extends DrushCommands {
    * @param array $options
    *   The command options supplied to the executed command.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\PropertyList
+   * @return PropertyList
    *   ProperyList of the variable.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the variable does not exist with the provided name or the
    *   acsf_variables module isn't enabled.
    * @throws \InvalidArgumentException
@@ -69,7 +69,7 @@ class AcsfVariablesCommands extends DrushCommands {
    * @param array $options
    *   The command options supplied to the executed command.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the variable does not exist with the provided name or the
    *   acsf_variables module isn't enabled.
    * @throws \InvalidArgumentException
@@ -104,10 +104,10 @@ class AcsfVariablesCommands extends DrushCommands {
    * @param string $group
    *   The group name of the variable to retrieve.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\PropertyList
+   * @return PropertyList
    *   PropertyList of the variables.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the variable does not exist with the provided name or the
    *   acsf_variables module isn't enabled.
    * @throws \InvalidArgumentException
@@ -138,7 +138,7 @@ class AcsfVariablesCommands extends DrushCommands {
    * @param string $name
    *   The name of the variable to delete.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the variable does not exist with the provided name or the
    *   acsf_variables module isn't enabled.
    * @throws \InvalidArgumentException
@@ -172,7 +172,7 @@ class AcsfVariablesCommands extends DrushCommands {
   /**
    * Retrieves info about a site.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\PropertyList
+   * @return PropertyList
    *   The site info list in var_export format.
    *
    * @command acsf-info
diff --git a/src/AcsfMessage.php b/src/AcsfMessage.php
index 4d7cda1..79c0a57 100644
--- a/src/AcsfMessage.php
+++ b/src/AcsfMessage.php
@@ -43,7 +43,7 @@ abstract class AcsfMessage {
   /**
    * The AcsfMessageResponse object.
    *
-   * @var \Drupal\acsf\AcsfMessageResponse
+   * @var AcsfMessageResponse
    */
   protected $response;
 
@@ -64,7 +64,7 @@ abstract class AcsfMessage {
   /**
    * An optional AcsfConfig object.
    *
-   * @var \Drupal\acsf\AcsfConfig
+   * @var AcsfConfig
    */
   private $config;
 
diff --git a/src/AcsfSite.php b/src/AcsfSite.php
index 15c0bf1..ec9dd25 100644
--- a/src/AcsfSite.php
+++ b/src/AcsfSite.php
@@ -19,7 +19,7 @@ class AcsfSite {
   /**
    * ACSF variable storage.
    *
-   * @var \Drupal\acsf\AcsfVariableStorage
+   * @var AcsfVariableStorage
    */
   protected $variableStorage;
 
diff --git a/src/AcsfThemeNotify.php b/src/AcsfThemeNotify.php
index 0c8d598..7361e8a 100644
--- a/src/AcsfThemeNotify.php
+++ b/src/AcsfThemeNotify.php
@@ -15,25 +15,25 @@ class AcsfThemeNotify {
   /**
    * The ACSF variable storage.
    *
-   * @var \Drupal\acsf\AcsfVariableStorage
+   * @var AcsfVariableStorage
    */
   protected $acsfVarStorage;
 
   /**
    * The current database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\acsf\AcsfVariableStorage $variable_storage
+   * @param AcsfVariableStorage $variable_storage
    *   The ACSF variable storage service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The active database connection.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(AcsfVariableStorage $variable_storage, Connection $database, TranslationInterface $string_translation) {
diff --git a/src/AcsfVariableStorage.php b/src/AcsfVariableStorage.php
index 267cc99..8408281 100644
--- a/src/AcsfVariableStorage.php
+++ b/src/AcsfVariableStorage.php
@@ -12,14 +12,14 @@ class AcsfVariableStorage {
   /**
    * The current database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The active database connection.
    */
   public function __construct(Connection $connection) {
diff --git a/src/Commands/AcsfExtraCommands.php b/src/Commands/AcsfExtraCommands.php
index aa828df..df9942d 100644
--- a/src/Commands/AcsfExtraCommands.php
+++ b/src/Commands/AcsfExtraCommands.php
@@ -20,10 +20,10 @@ class AcsfExtraCommands extends DrushCommands {
   /**
    * Print credentials retrieved from the factory.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\PropertyList
+   * @return PropertyList
    *   Gives back the creds in json format.
    *
-   * @throws \Drupal\acsf\AcsfException
+   * @throws AcsfException
    *   If the function couldn't retrieve the necessary creds.
    *
    * @command acsf-get-factory-creds
@@ -174,18 +174,18 @@ class AcsfExtraCommands extends DrushCommands {
   }
 
   /**
-   * Reports process completion back to the factory.
-   *
-   * @param array $options
-   *   The command options supplied to the executed command.
-   *
-   * @throws \Drupal\acsf\AcsfException;
-   *   If the data argument is invalid.
-   *
-   * @command report-complete-async-process
-   * @bootstrap root
-   * @option data Serialized PHP data regarding the caller.
-   */
+  * Reports process completion back to the factory.
+  *
+  * @param array $options
+  *   The command options supplied to the executed command.
+  *
+   * @throws AcsfException ;
+    If the data argument is invalid.
+  *
+  * @command report-complete-async-process
+  * @bootstrap root
+  * @option data Serialized PHP data regarding the caller.
+  */
   public function completeAsyncProcess(array $options = ['data' => NULL]) {
     $data = unserialize($options['data']);
 
diff --git a/src/Event/AcsfDuplicationScrubCommentStorage.php b/src/Event/AcsfDuplicationScrubCommentStorage.php
index 89548fa..c069545 100644
--- a/src/Event/AcsfDuplicationScrubCommentStorage.php
+++ b/src/Event/AcsfDuplicationScrubCommentStorage.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\acsf\Event;
 
+use Drupal\Core\Entity\ContentEntityInterface;
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\comment\CommentStorage;
 
 /**
@@ -29,7 +31,7 @@ class AcsfDuplicationScrubCommentStorage extends CommentStorage {
    * precaution in case a contrib module does funny things. This may be deleted
    * if we value minimizing code over supporting random theoretical failures.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface[] $entities
+   * @param ContentEntityInterface[] $entities
    *   List of entities, keyed on the entity ID.
    */
   protected function invokeStorageLoadHook(array &$entities) {
@@ -275,7 +277,7 @@ class AcsfDuplicationScrubCommentStorage extends CommentStorage {
     $entityFieldManager = $this->entityFieldManager ?: \Drupal::service('entity_field.manager');
 
     foreach ($entityFieldManager->getFieldDefinitions('comment', $bundle) as $field_definition) {
-      /** @var \Drupal\Core\Field\FieldStorageDefinitionInterface $field_definition */
+      /** @var FieldStorageDefinitionInterface $field_definition */
       $storage_definition = $field_definition->getFieldStorageDefinition();
       if (!$table_mapping->requiresDedicatedTableStorage($storage_definition)) {
         continue;
diff --git a/src/Event/AcsfDuplicationScrubEntityHandler.php b/src/Event/AcsfDuplicationScrubEntityHandler.php
index f36399a..cb24554 100644
--- a/src/Event/AcsfDuplicationScrubEntityHandler.php
+++ b/src/Event/AcsfDuplicationScrubEntityHandler.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\acsf\Event;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\acsf\AcsfVariableStorage;
+use Drupal\Core\Entity\Query\QueryInterface;
 /**
  * Handles the scrubbing of Drupal entities.
  *
@@ -24,7 +28,7 @@ abstract class AcsfDuplicationScrubEntityHandler extends AcsfEventHandler {
    * variable and setting it on construction makes this easier, and makes
    * writing child methods more compatible, for the future.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -35,7 +39,7 @@ abstract class AcsfDuplicationScrubEntityHandler extends AcsfEventHandler {
    * variable and setting it on construction makes this easier, and makes
    * writing child methods more compatible, for the future.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -46,7 +50,7 @@ abstract class AcsfDuplicationScrubEntityHandler extends AcsfEventHandler {
    * variable and setting it on construction makes this easier, and makes
    * writing child methods more compatible, for the future.
    *
-   * @var \Drupal\acsf\AcsfVariableStorage
+   * @var AcsfVariableStorage
    */
   protected $acsfVarStorage;
 
@@ -140,7 +144,7 @@ abstract class AcsfDuplicationScrubEntityHandler extends AcsfEventHandler {
    * When calling this function repeatedly, a filter is applied such that the
    * query will return different IDs for each consecutive query.
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   The entity query instance.
    */
   protected function getBaseQuery() {
diff --git a/src/Event/AcsfDuplicationScrubFinalizeHandler.php b/src/Event/AcsfDuplicationScrubFinalizeHandler.php
index dfe34d7..2a5aad7 100644
--- a/src/Event/AcsfDuplicationScrubFinalizeHandler.php
+++ b/src/Event/AcsfDuplicationScrubFinalizeHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\acsf\Event;
 
+use Drupal\acsf\AcsfVariableStorage;
 /**
  * Handles final operations for the scrub.
  */
@@ -27,7 +28,7 @@ class AcsfDuplicationScrubFinalizeHandler extends AcsfEventHandler {
     }
 
     // Clean up ACSF variables.
-    /** @var \Drupal\acsf\AcsfVariableStorage $storage */
+    /** @var AcsfVariableStorage $storage */
     $storage = \Drupal::service('acsf.variable_storage');
     $acsf_variables = $storage->getGroup('acsf_duplication_scrub');
     foreach ($acsf_variables as $name => $value) {
diff --git a/src/Event/AcsfEvent.php b/src/Event/AcsfEvent.php
index c77d4bd..fad1e95 100644
--- a/src/Event/AcsfEvent.php
+++ b/src/Event/AcsfEvent.php
@@ -36,7 +36,7 @@ class AcsfEvent {
   /**
    * Handles log messages.
    *
-   * @var \Symfony\Component\Console\Output\OutputInterface
+   * @var OutputInterface
    */
   public $output;
 
@@ -45,7 +45,7 @@ class AcsfEvent {
    *
    * @param AcsfEventDispatcher $dispatcher
    *   The event dispatcher object.
-   * @param \Drupal\acsf\AcsfLog $log
+   * @param AcsfLog $log
    *   The log object.
    * @param string $type
    *   The type of event to run.
@@ -53,7 +53,7 @@ class AcsfEvent {
    *   The registry from acsf_registry.
    * @param array $context
    *   An arbitrary context for handlers.
-   * @param \Drupal\acsf\AcsfSite $site
+   * @param AcsfSite $site
    *   The site being operated upon (optional).
    */
   public function __construct(AcsfEventDispatcher $dispatcher, AcsfLog $log, $type, array $registry, array $context, AcsfSite $site = NULL) {
@@ -81,7 +81,7 @@ class AcsfEvent {
    *   The type of event to execute.
    * @param array $context
    *   A custom context to pass to event handlers.
-   * @param \Symfony\Component\Console\Output\OutputInterface $output
+   * @param OutputInterface $output
    *   The class that handles the logging messages.
    *
    * @return static
@@ -149,7 +149,7 @@ class AcsfEvent {
    * @return AcsfEventHandler
    *   The next event handler.
    *
-   * @throws \Drupal\acsf\Event\AcsfEventHandlerIncompatibleException
+   * @throws AcsfEventHandlerIncompatibleException
    */
   public function popHandler($type = 'incomplete') {
     if (array_key_exists($type, $this->handlers)) {
@@ -168,7 +168,7 @@ class AcsfEvent {
    * @param string $type
    *   The type of handler: incomplete, complete or failed.
    *
-   * @throws \Drupal\acsf\Event\AcsfEventHandlerIncompatibleException
+   * @throws AcsfEventHandlerIncompatibleException
    */
   public function pushHandler(AcsfEventHandler $handler, $type = 'incomplete') {
     if (array_key_exists($type, $this->handlers)) {
diff --git a/src/EventSubscriber/AcsfMaintenanceModeSubscriber.php b/src/EventSubscriber/AcsfMaintenanceModeSubscriber.php
index 873ad3a..3558d66 100644
--- a/src/EventSubscriber/AcsfMaintenanceModeSubscriber.php
+++ b/src/EventSubscriber/AcsfMaintenanceModeSubscriber.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\acsf\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\State\StateInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -20,14 +20,14 @@ class AcsfMaintenanceModeSubscriber implements EventSubscriberInterface {
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Constructs a new AcsfMaintenanceModeSubscriber.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state.
    */
   public function __construct(StateInterface $state) {
@@ -37,10 +37,10 @@ class AcsfMaintenanceModeSubscriber implements EventSubscriberInterface {
   /**
    * Sets SF maintenance mode header (on successful responses).
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
diff --git a/tests/AcsfConfigTest.php b/tests/AcsfConfigTest.php
index b7ad5a1..67ed719 100644
--- a/tests/AcsfConfigTest.php
+++ b/tests/AcsfConfigTest.php
@@ -17,7 +17,7 @@ class AcsfConfigTest extends TestCase {
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // The files in this directory can't be autoloaded as long as they don't
     // match their classes' namespaces.
     $files = [
diff --git a/tests/AcsfEventsTest.php b/tests/AcsfEventsTest.php
index 0e54834..a90576b 100644
--- a/tests/AcsfEventsTest.php
+++ b/tests/AcsfEventsTest.php
@@ -31,7 +31,7 @@ class UnitTest extends TestCase {
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // The files in this directory can't be autoloaded as long as they don't
     // match their classes' namespaces.
     $files = [
diff --git a/tests/AcsfMessageTest.php b/tests/AcsfMessageTest.php
index 50e8a78..8536081 100644
--- a/tests/AcsfMessageTest.php
+++ b/tests/AcsfMessageTest.php
@@ -18,7 +18,7 @@ class AcsfMessageTest extends TestCase {
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // The files in this directory can't be autoloaded as long as they don't
     // match their classes' namespaces.
     $files = [
diff --git a/tests/AcsfSiteTest.php b/tests/AcsfSiteTest.php
index dbb10e6..0f1e965 100644
--- a/tests/AcsfSiteTest.php
+++ b/tests/AcsfSiteTest.php
@@ -30,7 +30,7 @@ class AcsfSiteTest extends TestCase {
   /**
    * Setup.
    */
-  public function setUp() {
+  public function setUp(): void {
     // Simulate the sites.json configuration.
     $GLOBALS['gardens_site_settings']['conf']['acsf_site_id'] = $this->site_id;
 
@@ -162,7 +162,7 @@ class AcsfSiteTest extends TestCase {
   /**
    * Cleanup Mockery on each test. (PHPUnit 5 does not support listeners.)
    */
-  public function tearDown() {
+  public function tearDown(): void {
     Mockery::close();
   }
 
