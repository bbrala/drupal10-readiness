modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/search_api_opensolr_security.module
modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/Form/SecurityAdminForm.php
modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/Form/SecurityAdminFormInterface.php
modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/OpenSolrApi/Components/OpenSolrSecurity.php
modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/OpenSolrApi/Components/OpenSolrSecurityInterface.php
modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/ServerSecurityOperations.php
modules/contrib/search_api_opensolr/search_api_opensolr.install
modules/contrib/search_api_opensolr/search_api_opensolr.module
modules/contrib/search_api_opensolr/src/Access/LocalActionAccessCheck.php
modules/contrib/search_api_opensolr/src/Form/OpenSolrConfigFilesImport.php
modules/contrib/search_api_opensolr/src/Form/OpenSolrConfigForm.php
modules/contrib/search_api_opensolr/src/Form/OpenSolrConfigZipImport.php
modules/contrib/search_api_opensolr/src/OpenSolrApi/Components/OpenSolrConfigFiles.php
modules/contrib/search_api_opensolr/src/OpenSolrApi/Components/OpenSolrConfigFilesInterface.php
modules/contrib/search_api_opensolr/src/OpenSolrApi/Components/OpenSolrIndex.php
modules/contrib/search_api_opensolr/src/OpenSolrApi/Components/OpenSolrIndexInterface.php
modules/contrib/search_api_opensolr/src/OpenSolrApi/OpenSolrBase.php
modules/contrib/search_api_opensolr/src/OpenSolrApi/OpenSolrException.php
modules/contrib/search_api_opensolr/src/OpenSolrApi/OpenSolrResponse.php
modules/contrib/search_api_opensolr/src/Plugin/SolrConnector/BasicAuthOpensolrSolrConnector.php
modules/contrib/search_api_opensolr/src/Plugin/SolrConnector/OpensolrSolrConnector.php
modules/contrib/search_api_opensolr/src/ServerOperations.php
modules/contrib/search_api_opensolr/src/Services/ZipManager.php
modules/contrib/search_api_opensolr/src/Traits/OpensolrServerTrait.php

15 files with changes
=====================

1) modules/contrib/search_api_opensolr/src/Traits/OpensolrServerTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_opensolr\Traits;

+use Drupal\search_api\SearchApiException;
 use Drupal\search_api\ServerInterface;
 use Drupal\search_api_solr\SolrBackendInterface;

@@ @@
    * are using the solr functionality and we don't have our own type of backend.
    * Future improvement might be needed.
    *
-   * @param \Drupal\search_api\ServerInterface|null $search_api_server
+   * @param ServerInterface|null $search_api_server
    *   The server entity object.
    *
    * @return bool
@@ @@
    *   Returns TRUE if the backend connector has the opensolr key, FALSE
    *   otherwise.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function isOpenSolrServer(ServerInterface $search_api_server = NULL) {
     if ($search_api_server && $search_api_server->getBackend() instanceof SolrBackendInterface) {
@@ @@
   /**
    * Gets the index type from an opensolr server.
    *
-   * @param \Drupal\search_api\ServerInterface|null $search_api_server
+   * @param ServerInterface|null $search_api_server
    *   The server entity object.
    *
    * @return bool
@@ @@
    *   Returns -1 for regular index, 0 for cluster and >=1 for replicas.
    *   Returns FALSE if it's not an opensolr server.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function getServerIndexType(ServerInterface $search_api_server = NULL) {
     if ($this->isOpenSolrServer($search_api_server)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/search_api_opensolr/src/Services/ZipManager.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The OpenSolrConfigFiles service property.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles
+   * @var OpenSolrConfigFiles
    */
   protected $configFiles;

@@ @@
   /**
    * The FileSystem service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * The PrivateTempStore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStore;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * ZipManager constructor.
    *
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles $configFiles
+   * @param OpenSolrConfigFiles $configFiles
    *   OpenSolr config files service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system service.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   Private temp store service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(OpenSolrConfigFiles $configFiles, FileSystemInterface $fileSystem, PrivateTempStoreFactory $privateTempStoreFactory, MessengerInterface $messenger) {
@@ @@
   /**
    * Imports the zip automatically when a server is created.
    *
-   * @param \Drupal\search_api\ServerInterface $searchApiServer
+   * @param ServerInterface $searchApiServer
    *   The currently created server.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect user to the server page.
    */
   public function importConfigZip(ServerInterface $searchApiServer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/search_api_opensolr/src/ServerOperations.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_opensolr;

+use Drupal\search_api\SearchApiException;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\search_api\ServerInterface;
@@ @@
   /**
    * The opensolr zip manager service.
    *
-   * @var \Drupal\search_api_opensolr\Services\ZipManager
+   * @var ZipManager
    */
   protected $zipManager;

@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a new EntityOperations object.
    *
-   * @param \Drupal\search_api_opensolr\Services\ZipManager $zipManager
+   * @param ZipManager $zipManager
    *   The opensolr zip manager service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ZipManager $zipManager, MessengerInterface $messenger) {
@@ @@
   /**
    * Reacts on server insert events.
    *
-   * @param \Drupal\search_api\ServerInterface $server
+   * @param ServerInterface $server
    *   The newly created server.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    *
    * @see hook_entity_insert()
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/search_api_opensolr/src/Plugin/SolrConnector/OpensolrSolrConnector.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_opensolr\Plugin\SolrConnector;

+use Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
@@ @@
   /**
    * A connection to the Solr server.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex
+   * @var OpenSolrIndex
    */
   protected $openSolrIndex;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/search_api_opensolr/src/OpenSolrApi/OpenSolrResponse.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The original Response used to build this object.
    *
-   * @var \GuzzleHttp\Psr7\Response
+   * @var Response
    * @see __get()
    */
   protected $response;
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrException
+   * @throws OpenSolrException
    *   If body cannot be json-decoded.
    */
   public function __construct(Response $response) {
@@ @@
    *
    * @return $this
    *
-   * @throws \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrException
+   * @throws OpenSolrException
    */
   private function handleJsonResponse() {
     $this->data = '';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/search_api_opensolr/src/OpenSolrApi/OpenSolrException.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The opensolr response.
    *
-   * @var \Psr\Http\Message\ResponseInterface|null
+   * @var ResponseInterface|null
    */
   protected $response;

@@ @@
   /**
    * RestException constructor.
    *
-   * @param \Psr\Http\Message\ResponseInterface|null $response
+   * @param ResponseInterface|null $response
    *   The request response object.
    * @param string $message
    *   A string with the message(s).
@@ @@
   /**
    * Gets the response.
    *
-   * @return null|\Psr\Http\Message\ResponseInterface
+   * @return null|ResponseInterface
    *   An Response object if any, null otherwise.
    */
   public function getResponse() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/search_api_opensolr/src/OpenSolrApi/OpenSolrBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_opensolr\OpenSolrApi;

+use Psr\Http\Message\ResponseInterface;
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * GuzzleHttp client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * The JSON serializer service.
    *
-   * @var \Drupal\Component\Serialization\Json
+   * @var Json
    */
   protected $json;

@@ @@
   /**
    * The key repository.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;

@@ @@
   /**
    * Constructs a new OpenSolrBase object.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The http client service.
-   * @param \Drupal\Component\Serialization\Json $json
+   * @param Json $json
    *   The json service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\key\KeyRepositoryInterface $key_repository
+   * @param KeyRepositoryInterface $key_repository
    *   The key repository service.
    */
   public function __construct(ClientInterface $http_client, Json $json, ConfigFactoryInterface $config_factory, KeyRepositoryInterface $key_repository) {
@@ @@
    * @param bool $useMultipart
    *   A boolean indicating if we use multipart arguments or not.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse|mixed|\Psr\Http\Message\ResponseInterface|null
+   * @return OpenSolrResponse|mixed|ResponseInterface|null
    *   Returns the response from the API.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   protected function apiCall($path, $method = 'GET', array $params = [], $returnObject = FALSE, $useMultipart = FALSE) {
     $options = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


8) modules/contrib/search_api_opensolr/src/Form/OpenSolrConfigZipImport.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * OpenSolr config files service.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFilesInterface
+   * @var OpenSolrConfigFilesInterface
    */
   protected $configFiles;

@@ @@
   /**
    * PrivateTempStore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStore;

@@ @@
   /**
    * FileSystem service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * OpenSolrConfigZipImport constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager interface.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFilesInterface $configFiles
+   * @param OpenSolrConfigFilesInterface $configFiles
    *   OpenSolr config files interface.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   Private temp store service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system interface.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, OpenSolrConfigFilesInterface $configFiles, PrivateTempStoreFactory $privateTempStoreFactory, FileSystemInterface $fileSystem) {
@@ @@
   /**
    * Remove the updateLog tags from the solr config file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file object.
    */
   protected function processConfigFile(FileInterface $file) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/search_api_opensolr/src/Form/OpenSolrConfigForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * OpenSolr Index api component.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex
+   * @var OpenSolrIndex
    */
   protected $searchApiOpensolrClient;

@@ @@
   /**
    * The key repository.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;

@@ @@
   /**
    * Constructs a new OpenSolrConfigForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex $search_api_opensolr_index
+   * @param OpenSolrIndex $search_api_opensolr_index
    *   The OpenSolr Index client.
-   * @param \Drupal\key\KeyRepositoryInterface $key_repository
+   * @param KeyRepositoryInterface $key_repository
    *   The key repository service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, OpenSolrIndex $search_api_opensolr_index, KeyRepositoryInterface $key_repository) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/search_api_opensolr/src/Form/OpenSolrConfigFilesImport.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * PrivateTempStore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStore;

@@ @@
   /**
    * OpenSolrConfigFiles service.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles
+   * @var OpenSolrConfigFiles
    */
   protected $configFiles;

@@ @@
   /**
    * EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * FileSystem service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * OpenSolrConfigFilesImport constructor.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   Private temp store service.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrConfigFiles $configFiles
+   * @param OpenSolrConfigFiles $configFiles
    *   Config files service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system interface.
    */
   public function __construct(PrivateTempStoreFactory $privateTempStoreFactory, OpenSolrConfigFiles $configFiles, EntityTypeManagerInterface $entityTypeManager, FileSystemInterface $fileSystem) {
@@ @@
   /**
    * Remove the updateLog tags from the solr config file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file object.
    */
   protected function processConfigFile(FileInterface $file) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/search_api_opensolr/src/Access/LocalActionAccessCheck.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_opensolr\Access;

+use Drupal\search_api\SearchApiException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
   /**
    * Checks if the current server backend is an opensolr one.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\search_api\ServerInterface $search_api_server
+   * @param ServerInterface $search_api_server
    *   (optional) The Search API server entity.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   Returns access allowed result if the server is using the opensolr
    *   services, forbidden otherwise.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function access(AccountInterface $account, ServerInterface $search_api_server = NULL) {
     if ($this->isOpenSolrServer($search_api_server)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


12) modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/ServerSecurityOperations.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_opensolr_security;

+use Drupal\search_api\SearchApiException;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Drupal\search_api\ServerInterface;
@@ @@
   /**
    * Reacts on entity operation hook.
    *
-   * @param \Drupal\search_api\ServerInterface $server
+   * @param ServerInterface $server
    *   The newly created server.
    *
    * @return array
    *   Returns an array with the entity operations.
    *
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    *
    * @see hook_entity_insert()
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


13) modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/OpenSolrApi/Components/OpenSolrSecurityInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_opensolr_security\OpenSolrApi\Components;

+use Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse;
 /**
  * Provides an interface defining an OpenSolrSecurity component.
  *
@@ @@
    * @param string $password
    *   The HTTP Auth password.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function updateHttpAuth($coreName, $username, $password);
@@ @@
    * @param string $coreName
    *   The core name (index id).
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function removeHttpAuth($coreName);
@@ @@
    * @param string $coreName
    *   The core name (index id).
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function getIpList($coreName);
@@ @@
    * @param string $handler
    *   The SOLR URI handler that the restriction will be applied to.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function addIp($coreName, $ip, $handler);
@@ @@
    * @param string $handler
    *   The SOLR URI handler that the restriction will be applied to.
    *
-   * @return \Drupal\search_api_opensolr\OpenSolrApi\OpenSolrResponse
+   * @return OpenSolrResponse
    *   Returns a new OpenSolrResponse object.
    */
   public function removeIp($coreName, $ip, $handler);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


14) modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/Form/SecurityAdminFormInterface.php:15

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addHttpAuth(array &$form, FormStateInterface $form_state);
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function removeHttpAuth(array &$form, FormStateInterface $form_state);
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addIpRestriction(array &$form, FormStateInterface $form_state);
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function removeIpRestrictions(array &$form, FormStateInterface $form_state);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


15) modules/contrib/search_api_opensolr/modules/search_api_opensolr_security/src/Form/SecurityAdminForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The OpenSolr service that manages core security.
    *
-   * @var \Drupal\search_api_opensolr_security\OpenSolrApi\Components\OpenSolrSecurity
+   * @var OpenSolrSecurity
    */
   protected $openSolrSecurity;

@@ @@
   /**
    * The OpenSolr service that manages indexes.
    *
-   * @var \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex
+   * @var OpenSolrIndex
    */
   protected $openSolrIndex;

@@ @@
   /**
    * The search api server entity.
    *
-   * @var \Drupal\search_api\ServerInterface
+   * @var ServerInterface
    */
   protected $searchApiServer;

@@ @@
   /**
    * SecurityAdminForm constructor.
    *
-   * @param \Drupal\search_api_opensolr_security\OpenSolrApi\Components\OpenSolrSecurity $openSolrSecurity
+   * @param OpenSolrSecurity $openSolrSecurity
    *   The OpenSolr service that manages core security.
-   * @param \Drupal\search_api_opensolr\OpenSolrApi\Components\OpenSolrIndex $openSolrIndex
+   * @param OpenSolrIndex $openSolrIndex
    *   The OpenSolr service that manages indexes (cores).
    */
   public function __construct(OpenSolrSecurity $openSolrSecurity, OpenSolrIndex $openSolrIndex) {
@@ @@
    * removing the HTTP authentication. Also sets/removes the password and
    * username on the current server.
    *
-   * @param \Drupal\search_api\ServerInterface $server
+   * @param ServerInterface $server
    *   The server entity.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    */
   protected function switchOpenSolrConnector(ServerInterface $server, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 15 files have been changed by Rector                                      

