modules/contrib/views_bulk_edit/src/Form/BulkEditForm.php
modules/contrib/views_bulk_edit/src/Form/BulkEditFormTrait.php
modules/contrib/views_bulk_edit/src/Plugin/Action/Derivative/EntityEditActionDeriver.php
modules/contrib/views_bulk_edit/src/Plugin/Action/EditAction.php
modules/contrib/views_bulk_edit/src/Plugin/Action/ModifyEntityValues.php
modules/contrib/views_bulk_edit/tests/src/Functional/ViewsBulkEditActionTest.php
modules/contrib/views_bulk_edit/tests/src/Functional/ViewsBulkEditModifyEntityValuesTest.php
modules/contrib/views_bulk_edit/tests/src/Kernel/ViewsBulkEditActionTest.php
modules/contrib/views_bulk_edit/views_bulk_edit.module

5 files with changes
====================

1) modules/contrib/views_bulk_edit/tests/src/Functional/ViewsBulkEditModifyEntityValuesTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create some nodes for testing.
@@ @@
       'views_bulk_operations_bulk_form[1]' => TRUE,
       'views_bulk_operations_bulk_form[2]' => TRUE,
     ];
-    $this->drupalPostForm('views-bulk-operations-test-advanced', $edit, t('Apply to selected items'));
+    $this->drupalGet('views-bulk-operations-test-advanced');
+    $this->submitForm($edit, t('Apply to selected items'));

     // Post the configuration form: modify status and text value field on the
     // article content type.
     $expected_text_value = 'some text';
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'node[article][_field_selector][status]' => TRUE,
       'node[article][status][value]' => FALSE,
       'node[page][_field_selector][status]' => TRUE,
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/views_bulk_edit/tests/src/Functional/ViewsBulkEditActionTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\views_bulk_edit\Functional;

+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityFormMode;
 use Drupal\field\FieldStorageConfigInterface;
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);
     $this->createContentType(['type' => 'page', 'name' => 'Page']);
     $this->createContentType(['type' => 'article', 'name' => 'Article']);
@@ @@
       ],
     ];
     $this->createEntityReferenceField('node', 'page', 'field_reference', 'Reference', 'node', 'default', $handler_settings, FieldStorageConfigInterface::CARDINALITY_UNLIMITED);
-    /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $fd */
+    /** @var EntityFormDisplayInterface $fd */
     \Drupal::service('entity_display.repository')
       ->getFormDisplay('node', 'page')
       ->setComponent('field_reference', ['type' => 'entity_reference_autocomplete'])
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/views_bulk_edit/src/Plugin/Action/EditAction.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_bulk_edit\Plugin\Action;

+use Drupal\Core\TempStore\SharedTempStore;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Action\Plugin\Action\EntityActionBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * The tempstore object.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   The tempstore factory.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, PrivateTempStoreFactory $temp_store_factory, AccountInterface $current_user) {
@@ @@
    * {@inheritdoc}
    */
   public function executeMultiple(array $entities) {
-    /** @var \Drupal\Core\Entity\EntityInterface[] $entities */
+    /** @var EntityInterface[] $entities */
     $selection = [];
     foreach ($entities as $entity) {
       $langcode = $entity->language()->getId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/views_bulk_edit/src/Form/BulkEditFormTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_bulk_edit\Form;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityRepositoryInterface;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Session\AccountInterface;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\RevisionableEntityBundleInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;

@@ @@
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    * @param array $bundle_data
    *   An array with all entity types and their bundles.
@@ @@
    *   Bundle label.
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form_state object.
    * @param int $bundle_count
    *   Number of bundles that may be affected.
@@ @@
   /**
    * Builds the revision form.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The fake entity.
    *
    * @return array
@@ @@
   /**
    * Returns the bundle entity of the entity, or NULL if there is none.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The bundle entity.
    *
    * @see \Drupal\Core\Entity\ContentEntityForm::getBundleEntity()
@@ @@
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form_state object.
    */
   public function submitConfigurationForm(array &$form, FormStateInterface $form_state) {
@@ @@
    * {@inheritdoc}
    */
   public function execute($entity = NULL) {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $type_id = $entity->getEntityTypeId();
     $bundle = $entity->bundle();
     $result = $this->t('No values changed');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/views_bulk_edit/src/Form/BulkEditForm.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Private temp store factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStore;

@@ @@
   /**
    * The bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfo;

@@ @@
   /**
    * BulkEditForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param EntityRepositoryInterface $entityRepository
    *   The entity repository service.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   Temp store service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundleInfo
+   * @param EntityTypeBundleInfoInterface $bundleInfo
    *   Bundle info object.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
+   * @param EntityFieldManagerInterface $entityFieldManager
    *   The entity field manager service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, EntityRepositoryInterface $entityRepository, PrivateTempStoreFactory $temp_store_factory, TimeInterface $time, AccountInterface $currentUser, EntityTypeBundleInfoInterface $bundleInfo, EntityFieldManagerInterface $entityFieldManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/views_bulk_edit/tests/src/Kernel/ViewsBulkEditActionTest
         .php" file, due to:                                                    
         "Analyze error: "Class                                                 
         Drupal\Tests\views_bulk_operations\Kernel\ViewsBulkOperationsKernelTestBa
         se not found.". Include your files in                                  
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/views_bulk_edit/src/Plugin/Action/ModifyEntityValues.php
         " file, due to:                                                        
         "Analyze error: "Class                                                 
         Drupal\views_bulk_operations\Action\ViewsBulkOperationsActionBase not  
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

