modules/contrib/fastly/fastly.api.php
modules/contrib/fastly/fastly.drush.inc
modules/contrib/fastly/fastly.install
modules/contrib/fastly/fastly.module
modules/contrib/fastly/modules/fastlypurger/src/FastlypurgerServiceProvider.php
modules/contrib/fastly/modules/fastlypurger/src/Plugin/Purge/DiagnosticCheck/CredentialCheck.php
modules/contrib/fastly/modules/fastlypurger/src/Plugin/Purge/Purger/FastlyPurger.php
modules/contrib/fastly/src/Api.php
modules/contrib/fastly/src/CacheTagsHash.php
modules/contrib/fastly/src/CacheTagsHashInterface.php
modules/contrib/fastly/src/CacheTagsInvalidator.php
modules/contrib/fastly/src/Commands/FastlyCommands.php
modules/contrib/fastly/src/Controller/FastlyEdgeModulesController.php
modules/contrib/fastly/src/EventSubscriber/AddStaleHeaders.php
modules/contrib/fastly/src/EventSubscriber/SurrogateKeyGenerator.php
modules/contrib/fastly/src/Form/BlackfireIntegrationForm.php
modules/contrib/fastly/src/Form/CorsHeadersForm.php
modules/contrib/fastly/src/Form/CountryblockForm.php
modules/contrib/fastly/src/Form/DatadomeIntegrationForm.php
modules/contrib/fastly/src/Form/DisableCacheForm.php
modules/contrib/fastly/src/Form/FastlySettingsForm.php
modules/contrib/fastly/src/Form/ForceCacheMissOnHardReloadForAdminsForm.php
modules/contrib/fastly/src/Form/ImageOptimizerForm.php
modules/contrib/fastly/src/Form/IncreaseTimeoutsLongJobsForm.php
modules/contrib/fastly/src/Form/MobileDeviceDetectionForm.php
modules/contrib/fastly/src/Form/NetaceaIntegrationForm.php
modules/contrib/fastly/src/Form/OtherCmsIntegrationForm.php
modules/contrib/fastly/src/Form/PurgeOptionsForm.php
modules/contrib/fastly/src/Form/RedirectHostsForm.php
modules/contrib/fastly/src/Form/StaleContentOptionsForm.php
modules/contrib/fastly/src/Form/UrlRewritesForm.php
modules/contrib/fastly/src/Form/WebhookForm.php
modules/contrib/fastly/src/Plugin/Field/FieldFormatter/FastlyImageFormatter.php
modules/contrib/fastly/src/Services/Webhook.php
modules/contrib/fastly/src/State.php
modules/contrib/fastly/src/Utility/FastlyEdgeModulesHelper.php
modules/contrib/fastly/src/VclHandler.php

28 files with changes
=====================

1) modules/contrib/fastly/src/VclHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly;

+use Psr\Http\Message\ResponseInterface;
+use Twig\Error\LoaderError;
+use Twig\Error\RuntimeError;
+use Twig\Error\SyntaxError;
+use Twig\Loader\ArrayLoader;
+use Twig\Environment;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   /**
    * The Fastly API.
    *
-   * @var \Drupal\fastly\Api
+   * @var Api
    */
   protected $api;

@@ @@
   /**
    * The Fastly logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * The Fastly webhook service.
    *
-   * @var \Drupal\fastly\Services\Webhook
+   * @var Webhook
    */
   protected $webhook;

@@ @@
   /**
    * Messenger.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;

@@ @@
   /**
    * Module Handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Sets data to be processed, sets Credentials Vcl_Handler constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config.
    * @param string $host
    *   The host to use to talk to the Fastly API.
-   * @param \Drupal\fastly\Api $api
+   * @param Api $api
    *   Fastly API for Drupal.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Fastly logger channel.
-   * @param \Drupal\fastly\Services\Webhook $webhook
+   * @param Webhook $webhook
    *   The Fastly webhook service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack object.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   Messenger.
    * @param ModuleHandlerInterface $module_handler
    */
   public function __construct(ConfigFactoryInterface $config_factory, $host, Api $api, LoggerInterface $logger, Webhook $webhook, RequestStack $requestStack, Messenger $messenger, ModuleHandlerInterface $module_handler) {
     $this->moduleHandler = $module_handler;
-    $vcl_dir = drupal_get_path('module', 'fastly') . '/vcl_snippets';
+    $vcl_dir = \Drupal::service('extension.list.module')->getPath('fastly') . '/vcl_snippets';
     $data = [
       'vcl' => [
         [
@@ @@
    * @param array $responseToCreate
    *   Request data for response to create.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   vclQuery.
    */
   public function createResponse($version, array $responseToCreate) {
@@ @@
    * @param string $name
    *   Response name.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   vclQuery.
    */
   public function getResponse($version, $name) {
@@ @@
         return FALSE;
       }

-      $vcl_dir = drupal_get_path('module', 'fastly') . '/vcl_snippets/errors';
+      $vcl_dir = \Drupal::service('extension.list.module')->getPath('fastly') . '/vcl_snippets/errors';
       $singleVclData['vcl_dir'] = $vcl_dir;
       $singleVclData['type'] = 'deliver';
       $requests = [];
@@ @@
    * @param string $name
    *   Condition name.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   vclQuery.
    */
   public function getCondition($name) {
@@ @@
    * @param string $type
    *   (optional) The method to use for the request, defaults to GET.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   vclQuery.
    */
   public function vclRequestWrapper($url, array $headers = [], array $data = [], $type = "GET") {
@@ @@
    * @param array $data
    *   (optional) Data to send with the request.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   vclQuery.
    */
   public function vclGetWrapper($url, array $headers = [], array $data = []) {
@@ @@
    * @param array $data
    *   (optional) Data to send with the request.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   vclQuery.
    */
   public function vclPutWrapper($url, array $headers = [], array $data = []) {
@@ @@
     try {
       $this->cloneLastActiveVersion();
       //Check if optimization on fastly is turned on and if vcl exists
-      $data['vcl_dir'] = drupal_get_path('module', 'fastly') . '/vcl_snippets_image_optimizations/' . $params['optimize'];
+      $data['vcl_dir'] = \Drupal::service('extension.list.module')->getPath('fastly') . '/vcl_snippets_image_optimizations/' . $params['optimize'];
       $data['type'] = 'recv';
       // Set vcl for image optimizer.
       if($this->checkIfVclExists(self::IMAGE_OPTIMIZER_BASIC_IMAGE_SETTINGS)) {
@@ @@
    * @return bool
    *   Successfull or not.
    *
-   * @throws \Twig\Error\LoaderError
-   * @throws \Twig\Error\RuntimeError
-   * @throws \Twig\Error\SyntaxError
+   * @throws LoaderError
+   * @throws RuntimeError
+   * @throws SyntaxError
    */
   public function uploadEdgeModule($name, $values){
     $this->cloneLastActiveVersion();
@@ @@
           $data['name'] = FastlyEdgeModulesHelper::FASTLY_EDGE_MODULE_PREFIX . $name . '_' . $vcl['type'];

           // load vcl template and render it
-          $path = drupal_get_path('module','fastly') . '/fastly_edge_modules/templates/';
-          $loader = new \Twig\Loader\ArrayLoader([
+          $path = \Drupal::service('extension.list.module')->getPath('fastly') . '/fastly_edge_modules/templates/';
+          $loader = new ArrayLoader([
             'template' => file_get_contents($path . $vcl['template'] . '.html.twig',TRUE),
           ]);

-          $twig = new \Twig\Environment($loader);
+          $twig = new Environment($loader);
           $data['content'] = $twig->render('template', $values);

           // Skip if template is empty.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/fastly/src/State.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The drupal state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * ValidateCredentials constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The drupal state service.
    */
   public function __construct(StateInterface $state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/fastly/src/Services/Webhook.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * The Fastly logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Webhook constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config.
-   * @param \GuzzleHttp\ClientInterface $httpClient
+   * @param ClientInterface $httpClient
    *   The HTTP client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Fastly logger channel.
    * @param string $webhookConnectTimeout
    *   The timeout for webhook connections.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/fastly/src/Plugin/Field/FieldFormatter/FastlyImageFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly\Plugin\Field\FieldFormatter;

+use Drupal\image\ImageStyleStorageInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\image\ImageStyleStorageInterface
+   * @var ImageStyleStorageInterface
    */
   protected $imageStyleStorage;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The image style storage.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage) {
@@ @@
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
@@ @@
       }
       if($query){
         $uri = $file->getFileUri();
-        $image_url = Url::fromUri(file_create_url($uri));
+        $image_url = \Drupal::service('file_url_generator')->generate($uri);
         $image_url->setOption('query', $query);
         $file->setFileUri($image_url->toUriString());
       }
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/fastly/src/Form/WebhookForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The Fastly webhook service.
    *
-   * @var \Drupal\fastly\Services\Webhook
+   * @var Webhook
    */
   protected $webhook;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/fastly/src/Form/UrlRewritesForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a UrlRewritesForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/fastly/src/Form/StaleContentOptionsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The Fastly webhook service.
    *
-   * @var \Drupal\fastly\Services\Webhook
+   * @var Webhook
    */
   protected $webhook;

@@ @@
   /**
    * Constructs a StaleContentOptionsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\fastly\Services\Webhook $webhook
+   * @param Webhook $webhook
    *   The Fastly webhook service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Webhook $webhook, RequestStack $requestStack) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/fastly/src/Form/RedirectHostsForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a RedirectHostsForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/fastly/src/Form/PurgeOptionsForm.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * The Fastly webhook service.
    *
-   * @var \Drupal\fastly\Services\Webhook
+   * @var Webhook
    */
   protected $webhook;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/fastly/src/Form/OtherCmsIntegrationForm.php:27

    ---------- begin diff ----------
@@ @@
    * Constructs a OtherCmsIntegrationForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/fastly/src/Form/NetaceaIntegrationForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a NetaceaIntegrationForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/fastly/src/Form/MobileDeviceDetectionForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs a MobileDeviceDetectionForm object.
    *
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/fastly/src/Form/IncreaseTimeoutsLongJobsForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a IncreaseTimeoutsLongJobsForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/fastly/src/Form/ImageOptimizerForm.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The Fastly API.
    *
-   * @var \Drupal\fastly\Api
+   * @var Api
    */
   protected $api;

@@ @@
   /**
    * The Fastly VclHandler.
    *
-   * @var \Drupal\fastly\VclHandler
+   * @var VclHandler
    */
   protected $vclHandler;

@@ @@
   /**
    * The Fastly webhook service.
    *
-   * @var \Drupal\fastly\Services\Webhook
+   * @var Webhook
    */
   protected $webhook;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/fastly/src/Form/ForceCacheMissOnHardReloadForAdminsForm.php:27

    ---------- begin diff ----------
@@ @@
    * Constructs a ForceCacheMissOnHardReloadForAdminsForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/fastly/src/Form/FastlySettingsForm.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The Fastly API.
    *
-   * @var \Drupal\fastly\Api
+   * @var Api
    */
   protected $api;

@@ @@
   /**
    * The Fastly VclHandler.
    *
-   * @var \Drupal\fastly\VclHandler
+   * @var VclHandler
    */
   protected $vclHandler;

@@ @@
   /**
    * Tracks validity of credentials associated with Fastly Api.
    *
-   * @var \Drupal\fastly\State
+   * @var State
    */
   protected $state;

@@ @@
   /**
    * The Fastly webhook service.
    *
-   * @var \Drupal\fastly\Services\Webhook
+   * @var Webhook
    */
   protected $webhook;

@@ @@
   /**
    * Constructs a FastlySettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\fastly\Api $api
+   * @param Api $api
    *   Fastly API for Drupal.
-   * @param \Drupal\fastly\State $state
+   * @param State $state
    *   Fastly state service for Drupal.
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
-   * @param \Drupal\fastly\Services\Webhook $webhook
+   * @param Webhook $webhook
    *   The Fastly webhook service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Api $api, State $state, VclHandler $vclHandler, Webhook $webhook, RequestStack $requestStack) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function uploadVcls(array $form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function purgeAll(array $form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function uploadMaintenance(array $form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse.
    */
   public function purgeAllByKeys(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/fastly/src/Form/DisableCacheForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a DisableCacheForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/fastly/src/Form/DatadomeIntegrationForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a DatadomeIntegrationForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/fastly/src/Form/CountryblockForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a CountryblockForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/fastly/src/Form/CorsHeadersForm.php:22

    ---------- begin diff ----------
@@ @@
    * Constructs a CorsHeadersForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/fastly/src/Form/BlackfireIntegrationForm.php:27

    ---------- begin diff ----------
@@ @@
    * Constructs a BlackfireIntegrationForm object.
    *
    * @param ConfigFactoryInterface $config_factory
-   * @param \Drupal\fastly\VclHandler $vclHandler
+   * @param VclHandler $vclHandler
    *   Vcl handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, VclHandler $vclHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/fastly/src/EventSubscriber/SurrogateKeyGenerator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\fastly\CacheTagsHash;
 use Psr\Log\LoggerInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

@@ @@
   /**
    * The Fastly logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * CacheTagsHash service.
    *
-   * @var \Drupal\fastly\CacheTagsHash
+   * @var CacheTagsHash
    */
   protected $cacheTagsHash;

@@ @@
   /**
    * Constructs a new CacheTagsHeaderLimitDetector object.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Fastly logger channel.
-   * @param \Drupal\fastly\CacheTagsHash $cache_tags_hash
+   * @param CacheTagsHash $cache_tags_hash
    *   The Fastly logger channel.
-   *
    */
   public function __construct(LoggerInterface $logger, CacheTagsHash $cache_tags_hash) {
     $this->logger = $logger;
@@ @@
   /**
    * Logs an emergency event when the X-Drupal-Cache-Tags header exceeds 16 KB.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


23) modules/contrib/fastly/src/EventSubscriber/AddStaleHeaders.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Psr\Log\LoggerInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

@@ @@
   /**
    * The Fastly logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * Constructs a new CacheTagsHeaderLimitDetector object.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Fastly logger channel.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Adds Surrogate-Control header.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     // Get the fastly settings from configuration.
     $config = $this->config->get('fastly.settings');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


24) modules/contrib/fastly/src/Controller/FastlyEdgeModulesController.php:21

    ---------- begin diff ----------
@@ @@
 {

   /**
-   * @var \Drupal\fastly\Api
+   * @var Api
    */
   protected $api;

@@ @@
   protected $fileSystem;

   /**
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/fastly/src/Commands/FastlyCommands.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Fastly API.
    *
-   * @var \Drupal\fastly\Api
+   * @var Api
    */
   protected $api;

   /**
-   * @var \Drupal\fastly\CacheTagsHash
+   * @var CacheTagsHash
    */
   protected $cacheTagsHash;

@@ @@
   /**
    * Construct the FastlyCommands object.
    *
-   * @param \Drupal\fastly\Api $api
+   * @param Api $api
    *   The Fastly API service.
-   * @param \Drupal\fastly\CacheTagsHash $cache_tags_hash
+   * @param CacheTagsHash $cache_tags_hash
    *   CacheTagsHash service.
    */
   public function __construct(Api $api, CacheTagsHash $cache_tags_hash) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/fastly/src/CacheTagsInvalidator.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The Fastly API.
    *
-   * @var \Drupal\fastly\Api
+   * @var Api
    */
   protected $api;

@@ @@
   /**
    * CacheTagsHash service.
    *
-   * @var \Drupal\fastly\CacheTagsHash
+   * @var CacheTagsHash
    */
   protected $cacheTagsHash;

@@ @@
   /**
    * Constructs a CacheTagsInvalidator object.
    *
-   * @param \Drupal\fastly\Api $api
+   * @param Api $api
    *   The Fastly API.
-   * @param \Drupal\fastly\CacheTagsHash $cache_tags_hash
+   * @param CacheTagsHash $cache_tags_hash
    *   CacheTagsHash service.
    */
   public function __construct(Api $api, CacheTagsHash $cache_tags_hash) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


27) modules/contrib/fastly/src/CacheTagsHash.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\fastly;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Utility\Random;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * ConfigFactory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Fastly settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * CacheTagsHash constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
     $this->configFactory = $config_factory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


28) modules/contrib/fastly/src/Api.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * The Fastly logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * Fastly state service.
    *
-   * @var \Drupal\fastly\State
+   * @var State
    */
   protected $state;

@@ @@
   /**
    * Fastly webhook service.
    *
-   * @var \Drupal\fastly\Services\Webhook
+   * @var Webhook
    */
   protected $webhook;

@@ @@
   /**
    * CacheTagsHash service.
    *
-   * @var \Drupal\fastly\CacheTagsHash
+   * @var CacheTagsHash
    */
   protected $cacheTagsHash;

@@ @@
   /**
    * Messenger.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a \Drupal\fastly\Api object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config.
    * @param string $host
    *   The host to use to talk to the Fastly API.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Fastly logger channel.
-   * @param \Drupal\fastly\State $state
+   * @param State $state
    *   The Fastly state service.
    * @param string $connectTimeout
    *   The timeout for connections to the Fastly API.
-   * @param \Drupal\fastly\Services\Webhook $webhook
+   * @param Webhook $webhook
    *   The Fastly webhook service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack object.
-   * @param \Drupal\fastly\CacheTagsHash $cache_tags_hash
+   * @param CacheTagsHash $cache_tags_hash
    *   CacheTagsHash service.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   Messenger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, $host, ClientInterface $http_client, LoggerInterface $logger, State $state, $connectTimeout, Webhook $webhook, RequestStack $requestStack, CacheTagsHash $cache_tags_hash, Messenger $messenger) {
@@ @@
    * @param array $headers
    *   (optional) An array of headers to send with the request.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   Response.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    *   RequestException.
    */
   protected function query($uri, array $data = [], $method = 'GET', array $headers = []) {
@@ @@
    * @param array $headers
    *   (optional) An array of headers to send with the request.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   Response.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    *   RequestException.
    */
   protected function vQuery($uri, array $data = [], $method = 'GET', array $headers = []) {
@@ @@
   /**
    * Get JSON from response.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   Response.
    *
    * @return \stdClass
@@ @@
    * @param array $headers
    *   (optional) An array of headers to send with the request.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   Response.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    *   RequestException.
    */
   public function vclQuery($uri, array $data = [], $method = 'GET', array $headers = []) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [ERROR] Could not process                                                      
         "modules/contrib/fastly/modules/fastlypurger/src/Plugin/Purge/Purger/Fast
         lyPurger.php" file, due to:                                            
         "Analyze error: "Class Drupal\purge\Plugin\Purge\Purger\PurgerBase not 
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/fastly/modules/fastlypurger/src/Plugin/Purge/DiagnosticC
         heck/CredentialCheck.php" file, due to:                                
         "Analyze error: "Class                                                 
         Drupal\purge\Plugin\Purge\DiagnosticCheck\DiagnosticCheckBase not      
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

