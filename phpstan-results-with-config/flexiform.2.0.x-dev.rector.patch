diff --git a/contrib/rules/src/Plugin/FormEnhancer/SubmitButtonRules.php b/contrib/rules/src/Plugin/FormEnhancer/SubmitButtonRules.php
index c6ba087..b1dafee 100644
--- a/contrib/rules/src/Plugin/FormEnhancer/SubmitButtonRules.php
+++ b/contrib/rules/src/Plugin/FormEnhancer/SubmitButtonRules.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexiform_rules\Plugin\FormEnhancer;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Component\Utility\SortArray;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -34,7 +35,7 @@ class SubmitButtonRules extends ConfigurableFormEnhancerBase implements Containe
   /**
    * Rules Storage.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -64,7 +65,7 @@ class SubmitButtonRules extends ConfigurableFormEnhancerBase implements Containe
   /**
    * Get the rules storage handler.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   The entity storage for the rules component.
    */
   protected function rulesStorage() {
diff --git a/contrib/wizard/src/Entity/Wizard.php b/contrib/wizard/src/Entity/Wizard.php
index 088fd51..6159467 100644
--- a/contrib/wizard/src/Entity/Wizard.php
+++ b/contrib/wizard/src/Entity/Wizard.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\flexiform_wizard\Entity;
 
+use Drupal\Component\Plugin\LazyPluginCollection;
+use Drupal\Core\Routing\RouteBuilderInterface;
 use Drupal\Component\Plugin\Context\ContextInterface;
 use Drupal\Core\Condition\ConditionPluginCollection;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
@@ -96,7 +98,7 @@ class Wizard extends ConfigEntityBase implements EntityWithPluginCollectionInter
   /**
    * The plugin collection that holds the access conditions.
    *
-   * @var \Drupal\Component\Plugin\LazyPluginCollection
+   * @var LazyPluginCollection
    */
   protected $accessConditionCollection;
 
@@ -174,7 +176,7 @@ class Wizard extends ConfigEntityBase implements EntityWithPluginCollectionInter
   /**
    * Wraps the route builder.
    *
-   * @return \Drupal\Core\Routing\RouteBuilderInterface
+   * @return RouteBuilderInterface
    *   An object for state storage.
    */
   protected static function routeBuilder() {
diff --git a/contrib/wizard/src/Entity/WizardAccess.php b/contrib/wizard/src/Entity/WizardAccess.php
index 31d7aa2..f731921 100644
--- a/contrib/wizard/src/Entity/WizardAccess.php
+++ b/contrib/wizard/src/Entity/WizardAccess.php
@@ -22,16 +22,16 @@ class WizardAccess extends EntityAccessControlHandler implements EntityHandlerIn
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;
 
   /**
    * Constructs an access control handler instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The context handler.
    */
   public function __construct(EntityTypeInterface $entity_type, ContextHandlerInterface $context_handler) {
@@ -52,7 +52,7 @@ class WizardAccess extends EntityAccessControlHandler implements EntityHandlerIn
   /**
    * Wraps the context handler.
    *
-   * @return \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @return ContextHandlerInterface
    *   The context handler.
    */
   protected function contextHandler() {
@@ -63,7 +63,7 @@ class WizardAccess extends EntityAccessControlHandler implements EntityHandlerIn
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\flexiform_wizard\Entity\Wizard $entity */
+    /** @var Wizard $entity */
     if ($operation == 'view') {
       if (!$entity->status()) {
         return AccessResult::forbidden()->addCacheableDependency($entity);
