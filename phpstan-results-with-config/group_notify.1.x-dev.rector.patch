diff --git a/group_notify.info.yml b/group_notify.info.yml
index 39bc8b9..1074f0f 100644
--- a/group_notify.info.yml
+++ b/group_notify.info.yml
@@ -1,7 +1,6 @@
 name: Group Notify
 description: Send notifications/ email to group members when new content is added.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 type: module
 package: Group
 dependencies:
diff --git a/group_notify.install b/group_notify.install
index 08b65ef..7b13068 100644
--- a/group_notify.install
+++ b/group_notify.install
@@ -14,7 +14,7 @@ use Drupal\Core\Config\FileStorage;
  *   The name of the configuration to install.
  */
 function _group_notify_update_configuration($config_name) {
-  $path = drupal_get_path('module', 'group_notify') . '/config/install';
+  $path = \Drupal::service('extension.list.module')->getPath('group_notify') . '/config/install';
   $file = new FileStorage($path);
 
   \Drupal::service('config.storage')
diff --git a/group_notify.module b/group_notify.module
index b176e76..c0c8a0e 100644
--- a/group_notify.module
+++ b/group_notify.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\group\Entity\GroupTypeInterface;
 /**
  * @file
  * Hook implementations and other procedural code for the group_notify module.
@@ -104,7 +105,7 @@ function group_notify_entity_extra_field_info() {
   // There's no simple way to get fully loaded plugins for all content types
   // across all group types. So we have to load all the group type entities,
   // then iterate over those to check all the configured plugins for each type.
-  /** @var \Drupal\group\Entity\GroupTypeInterface $group_type */
+  /** @var GroupTypeInterface $group_type */
   foreach (\Drupal::entityTypeManager()->getStorage('group_type')->loadMultiple() as $group_type) {
     // This will load fully configured plugin instances for a given group type.
     foreach (\Drupal::service('plugin.manager.group_content_enabler')->getInstalled($group_type) as $plugin_id => $plugin) {
@@ -252,7 +253,7 @@ function group_notify_node_update(NodeInterface $node) {
  * corresponding GroupContent entities and trigger the appropriate group
  * notifications.
  *
- * @param \Drupal\node\NodeInterface $node
+ * @param NodeInterface $node
  *   The Node entity.
  * @param string $operation
  *   The entity operation we're dealing with, either 'update' or 'insert'.
@@ -350,7 +351,7 @@ function group_notify_comment_insert(CommentInterface $comment) {
 /**
  * Retrieves information about all group members.
  *
- * @param \Drupal\group\Entity\GroupContentInterface $entity
+ * @param GroupContentInterface $entity
  *   The group content entity to retrieve members from.
  *
  * @return array
@@ -393,7 +394,7 @@ function group_notify_process_members(GroupContentInterface $entity) {
 /**
  * Prepare and send email notification.
  *
- * @param \Drupal\group\Entity\GroupContentInterface $entity
+ * @param GroupContentInterface $entity
  *   The group content entity to send email notifications for.
  * @param bool $edit
  *   Is this notification about an edit to existing content? Defaults to FALSE.
diff --git a/src/Plugin/NotifyGroupNode.php b/src/Plugin/NotifyGroupNode.php
index 5367123..3c71afb 100644
--- a/src/Plugin/NotifyGroupNode.php
+++ b/src/Plugin/NotifyGroupNode.php
@@ -26,21 +26,21 @@ class NotifyGroupNode extends GroupNode implements ContainerFactoryPluginInterfa
   /**
    * The mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The lanugage manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -285,7 +285,7 @@ class NotifyGroupNode extends GroupNode implements ContainerFactoryPluginInterfa
   /**
    * Returns the appropriate e-mail subject to use for a given notification.
    *
-   * @param \Drupal\group\Entity\GroupContentInterface $entity
+   * @param GroupContentInterface $entity
    *   The GroupContent entity to get the subject for.
    * @param bool $update
    *   Is this an update notification? Defaults to FALSE.
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 9a40ef6..1790ae8 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -31,7 +31,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->drupalCreateUser(['administer site configuration']));
   }
