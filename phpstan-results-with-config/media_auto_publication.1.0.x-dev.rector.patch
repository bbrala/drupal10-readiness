diff --git a/src/PublishAssociated.php b/src/PublishAssociated.php
index f0afdc8..d7a59da 100644
--- a/src/PublishAssociated.php
+++ b/src/PublishAssociated.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\media_auto_publication;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Field\FieldDefinitionInterface;
+use Drupal\media\MediaInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityPublishedInterface;
@@ -15,14 +18,14 @@ final class PublishAssociated {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Constructs an "PublishAssociated" object.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity type manager.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager) {
@@ -32,10 +35,10 @@ final class PublishAssociated {
   /**
    * Publish associated medias.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function publish(EntityInterface $entity) {
     if (self::isBeingPublished($entity)) {
@@ -46,7 +49,7 @@ final class PublishAssociated {
   /**
    * Check entity has publish state and is being published.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    *
    * @return bool
@@ -74,10 +77,10 @@ final class PublishAssociated {
   /**
    * Publish referenced medias.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function publishReferencedMedias(EntityInterface $entity) {
     // Get all fields attached of entity.
@@ -89,8 +92,7 @@ final class PublishAssociated {
     // Loop to find all fields of type "entity_reference"
     // with "media" target type.
     foreach ($fields as &$field) {
-      /** @var \Drupal\Core\Field\FieldDefinitionInterface $field */
-
+      /** @var FieldDefinitionInterface $field */
       if (
         $field->getType() !== 'entity_reference' ||
         $field->getSetting('target_type') !== 'media'
@@ -101,8 +103,7 @@ final class PublishAssociated {
       // Get referenced entities.
       $referenced_entities = $entity->get($field->getName())->referencedEntities();
       foreach ($referenced_entities as $referenced_entity) {
-        /** @var \Drupal\media\MediaInterface $referenced_entity */
-
+        /** @var MediaInterface $referenced_entity */
         if ($referenced_entity->isPublished()) {
           continue;
         }
