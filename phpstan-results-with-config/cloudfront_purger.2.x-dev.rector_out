modules/contrib/cloudfront_purger/src/CloudFrontClientFactory.php
modules/contrib/cloudfront_purger/src/CloudFrontInvalidator.php
modules/contrib/cloudfront_purger/src/CloudFrontInvalidatorInterface.php
modules/contrib/cloudfront_purger/src/Form/CloudFrontPurgerConfigForm.php
modules/contrib/cloudfront_purger/src/Plugin/Purge/Purger/CloudFrontPurger.php
modules/contrib/cloudfront_purger/tests/src/Unit/CloudFrontInvalidatorTest.php
modules/contrib/cloudfront_purger/tests/src/Unit/Form/CloudFrontPurgerConfigFormTest.php
modules/contrib/cloudfront_purger/tests/src/Unit/Plugin/Purge/Purger/CloudFrontPurgerTest.php

7 files with changes
====================

1) modules/contrib/cloudfront_purger/tests/src/Unit/Plugin/Purge/Purger/CloudFrontPurgerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cloudfront_purger\Unit\Plugin\Purge\Purger;

+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\cloudfront_purger\CloudFrontInvalidatorInterface;
 use Drupal\cloudfront_purger\Plugin\Purge\Purger\CloudFrontPurger;
 use Drupal\purge\Plugin\Purge\Invalidation\PathInvalidation;
@@ @@
   /**
    * The purger under test.
    *
-   * @var \Drupal\cloudfront_purger\Plugin\Purge\Purger\CloudFrontPurger
+   * @var CloudFrontPurger
    */
   protected $purger;

@@ @@
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var LoggerInterface|MockObject
    */
   protected $logger;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var ConfigFactoryInterface|MockObject
    */
   protected $configFactory;

@@ @@
   /**
    * The cloudfront invalidator.
    *
-   * @var \Drupal\cloudfront_purger\CloudFrontInvalidatorInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var CloudFrontInvalidatorInterface|MockObject
    */
   protected $invalidator;

@@ @@
    * @param string $path
    *   The test path.
    *
-   * @return \Drupal\purge\Plugin\Purge\Invalidation\PathInvalidation
+   * @return PathInvalidation
    *   The invalidation.
    */
   protected function createInvalidation($path) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/cloudfront_purger/tests/src/Unit/Form/CloudFrontPurgerConfigFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cloudfront_purger\Unit\Form;

+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Config\Config;
 use Drupal\cloudfront_purger\Form\CloudFrontPurgerConfigForm;
 use Drupal\Core\Form\FormState;
 use Drupal\Tests\UnitTestCase;
@@ @@
    */
   public function testFormSubmit() {

-    /** @var \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Config\ConfigFactoryInterface $configFactory */
+    /** @var MockObject|ConfigFactoryInterface $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'cloudfront_purger.settings' => [
         'disabled' => TRUE,
@@ @@
         'aws_secret' => 'WXYZ5678',
       ],
     ]);
-    /** @var \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Config\Config $config */
+    /** @var MockObject|Config $config */
     $config = $configFactory->getEditable('cloudfront_purger.settings');

     $config->expects($this->any())
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/cloudfront_purger/tests/src/Unit/CloudFrontInvalidatorTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cloudfront_purger\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
 use Aws\CloudFront\CloudFrontClient;
 use Aws\CommandInterface;
 use Aws\Exception\AwsException;
@@ @@
   /**
    * The invalidator under test.
    *
-   * @var \Drupal\cloudfront_purger\CloudFrontInvalidator
+   * @var CloudFrontInvalidator
    */
   protected $invalidator;

@@ @@
   /**
    * The CloudFront client.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject|\Aws\CloudFront\CloudFrontClient
+   * @var MockObject|CloudFrontClient
    */
   protected $client;

@@ @@
   /**
    * The logger.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject|\Psr\Log\LoggerInterface
+   * @var MockObject|LoggerInterface
    */
   protected $logger;

@@ @@
     $this->logger->expects($this->never())
       ->method('info');

-    /** @var \PHPUnit\Framework\MockObject\MockObject|\Aws\CommandInterface $command */
+    /** @var MockObject|CommandInterface $command */
     $command = $this->createMock(CommandInterface::class);

     $this->client->method('createInvalidation')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/cloudfront_purger/src/Plugin/Purge/Purger/CloudFrontPurger.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\cloudfront_purger\Plugin\Purge\Purger;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\cloudfront_purger\CloudFrontInvalidatorInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Utility\Error;
@@ @@
   /**
    * The CloudFront invalidator.
    *
-   * @var \Drupal\cloudfront_purger\CloudFrontInvalidatorInterface
+   * @var CloudFrontInvalidatorInterface
    */
   protected $invalidator;

@@ @@
   /**
    * The settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $settings;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\cloudfront_purger\CloudFrontInvalidatorInterface $invalidator
+   * @param CloudFrontInvalidatorInterface $invalidator
    *   The CloudFront invalidator.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CloudFrontInvalidatorInterface $invalidator, ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Bulk updates invalidation states.
    *
-   * @param \Drupal\purge\Plugin\Purge\Invalidation\InvalidationInterface[] $invalidations
+   * @param InvalidationInterface[] $invalidations
    *   The invalidations.
    * @param int $state
    *   The invalidation state to set.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/cloudfront_purger/src/CloudFrontInvalidatorInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\cloudfront_purger;

+use Aws\Exception\AwsException;
 /**
  * Provides an invalidator for CloudFront.
  */
@@ @@
    * @return string
    *   The invalidation ID.
    *
-   * @throws \Aws\Exception\AwsException
+   * @throws AwsException
    *   If there is an error communicating with the CloudFront API.
    */
   public function invalidate(array $paths, $distribution_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/cloudfront_purger/src/CloudFrontInvalidator.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The CloudFront client.
    *
-   * @var \Aws\CloudFront\CloudFrontClient
+   * @var CloudFrontClient
    */
   protected $client;

@@ @@
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * CloudFrontInvalidator constructor.
    *
-   * @param \Aws\CloudFront\CloudFrontClient $client
+   * @param CloudFrontClient $client
    *   The CloudFront client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.
    */
   public function __construct(CloudFrontClient $client, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/cloudfront_purger/src/CloudFrontClientFactory.php:16

    ---------- begin diff ----------
@@ @@
    *
    * @param array $options
    *   The default client options.
-   * @param \Drupal\Core\Config\ConfigFactory $configFactory
+   * @param ConfigFactory $configFactory
    *   The config factory.
    *
-   * @return \Aws\CloudFront\CloudFrontClient
+   * @return CloudFrontClient
    *   The client.
    */
   public static function createInstance(array $options, ConfigFactory $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 7 files have been changed by Rector                                       

