modules/contrib/restrict_ip/restrict_ip.api.php
modules/contrib/restrict_ip/restrict_ip.install
modules/contrib/restrict_ip/restrict_ip.module
modules/contrib/restrict_ip/src/Access/RestrictIpPermissions.php
modules/contrib/restrict_ip/src/Access/RestrictIpPermissionsInterface.php
modules/contrib/restrict_ip/src/Controller/PageController.php
modules/contrib/restrict_ip/src/Controller/PageControllerInterface.php
modules/contrib/restrict_ip/src/EventSubscriber/RestrictIpEventSubscriber.php
modules/contrib/restrict_ip/src/Form/ConfigForm.php
modules/contrib/restrict_ip/src/Mapper/RestrictIpMapper.php
modules/contrib/restrict_ip/src/Mapper/RestrictIpMapperInterface.php
modules/contrib/restrict_ip/src/RestrictIpServiceProvider.php
modules/contrib/restrict_ip/src/Service/RestrictIpService.php
modules/contrib/restrict_ip/src/Service/RestrictIpServiceInterface.php
modules/contrib/restrict_ip/tests/src/Functional/RestrictIpAccessTest.php
modules/contrib/restrict_ip/tests/src/Functional/RestrictIpAdminUiTest.php
modules/contrib/restrict_ip/tests/src/Functional/RestrictIpBrowserTestBase.php
modules/contrib/restrict_ip/tests/src/Unit/Service/RestrictIpServiceTest.php

7 files with changes
====================

1) modules/contrib/restrict_ip/tests/src/Unit/Service/RestrictIpServiceTest.php:21

    ---------- begin diff ----------
@@ @@
 	/**
 	 * {@inheritdoc}
 	 */
-	public function setUp()
+	public function setUp(): void
 	{
-		$this->currentUser = $this->getMockBuilder('Drupal\Core\Session\AccountProxyInterface')
-			->disableOriginalConstructor()
-			->getMock();
+		$this->currentUser = $this->createMock('Drupal\Core\Session\AccountProxyInterface');

-		$this->currentPathStack = $this->getMockBuilder('Drupal\Core\Path\CurrentPathStack')
-			->disableOriginalConstructor()
-			->getMock();
+		$this->currentPathStack = $this->createMock('Drupal\Core\Path\CurrentPathStack');

-		$this->requestStack = $this->getMockBuilder('Symfony\Component\HttpFoundation\RequestStack')
-			->disableOriginalConstructor()
-			->getMock();
+		$this->requestStack = $this->createMock('Symfony\Component\HttpFoundation\RequestStack');

-		$this->request = $this->getMockBuilder('Symfony\Component\HttpFoundation\Request')
-			->disableOriginalConstructor()
-			->getMock();
+		$this->request = $this->createMock('Symfony\Component\HttpFoundation\Request');

-		$this->mapper = $this->getMockBuilder('Drupal\restrict_ip\Mapper\RestrictIpMapper')
-			->disableOriginalConstructor()
-			->getMock();
+		$this->mapper = $this->createMock('Drupal\restrict_ip\Mapper\RestrictIpMapper');

 		$this->mapper->expects($this->any())
 			->method('getWhitelistedPaths')
@@ @@
 			->method('getBlacklistedPaths')
 			->willReturn(['/node/1']);

-		$this->pathMatcher = $this->getMockbuilder('Drupal\Core\Path\PathMatcherInterface')
-			->disableOriginalConstructor()
-			->getMock();
+		$this->pathMatcher = $this->createMock('Drupal\Core\Path\PathMatcherInterface');
 	}

 	/**
@@ @@
 			'white_black_list' => 0,
 		]);

-		$mapper = $this->getMockBuilder('Drupal\restrict_ip\Mapper\RestrictIpMapper')
-			->disableOriginalConstructor()
-			->getMock();
+		$mapper = $this->createMock('Drupal\restrict_ip\Mapper\RestrictIpMapper');

 		$mapper->expects($this->any())
 			->method('getWhitelistedIpAddresses')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/restrict_ip/src/Service/RestrictIpService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\restrict_ip\Service;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Path\CurrentPathStack;
@@ @@
 	/**
 	 * The current user
 	 *
-	 * @var \Drupal\Core\Session\AccountProxyInterface
+	 * @var AccountProxyInterface
 	 */
 	protected $currentUser;

@@ @@
 	/**
 	 * The Restrict IP configuration settings
 	 *
-	 * @var \Drupal\Core\Config\ImmutableConfig
+	 * @var ImmutableConfig
 	 */
 	protected $config;

@@ @@
 	/**
 	 * The Restrict IP data mapper
 	 *
-	 * @var \Drupal\restrict_ip\Mapper\RestrictIpMapperInterface
+	 * @var RestrictIpMapperInterface
 	 */
 	protected $mapper;

@@ @@
 	/**
 	 * The Path Matcher service
 	 *
-	 * @var \Drupal\Core\Path\PathMatcherInterface
+	 * @var PathMatcherInterface
 	 */
 	protected $pathMatcher;

@@ @@
 	/**
 	 * The Module Handler service
 	 *
-	 * @var \Drupal\Core\Extension\ModuleHandlerInterface
+	 * @var ModuleHandlerInterface
 	 */
 	protected $moduleHandler;

@@ @@
 	/**
 	 * The User Data service
 	 *
-	 * @var \Drupal\user\UserDataInterface
+	 * @var UserDataInterface
 	 */
 	protected $userData;

@@ @@
 	/**
 	 * Constructs a RestrictIpService object
 	 *
-	 * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+	 * @param AccountProxyInterface $currentUser
 	 *   The current user
-	 * @param \Drupal\Core\Path\CurrentPathStack $currentPathStack
+	 * @param CurrentPathStack $currentPathStack
 	 *   The current path stack
-	 * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+	 * @param ConfigFactoryInterface $configFactory
 	 *   The Config Factory service
-	 * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+	 * @param RequestStack $requestStack
 	 *   The current HTTP request
-	 * @param \Drupal\restrict_ip\Mapper\RestrictIpMapperInterface $restrictIpMapper
+	 * @param RestrictIpMapperInterface $restrictIpMapper
 	 *   The Restrict IP data mapper object
-	 * @param \Drupal\Core\Path\PathMatcherInterface $pathMatcher
+	 * @param PathMatcherInterface $pathMatcher
 	 *   The Path Matcher service
-	 * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+	 * @param ModuleHandlerInterface $moduleHandler
 	 *   The Module Handler service
-	 * @param \Drupal\user\UserDataInterface $userData
+	 * @param UserDataInterface $userData
 	 *   The User Data service
 	 */
 	public function __construct(AccountProxyInterface $currentUser, CurrentPathStack $currentPathStack, ConfigFactoryInterface $configFactory, RequestStack $requestStack, RestrictIpMapperInterface $restrictIpMapper, PathMatcherInterface $pathMatcher, ModuleHandlerInterface $moduleHandler, UserDataInterface $userData = NULL)
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/restrict_ip/src/Mapper/RestrictIpMapper.php:8

    ---------- begin diff ----------
@@ @@
 	/**
 	 * The database connection
 	 *
-	 * @var Drupal\Core\Database\Connection
+	 * @var Connection
 	 */
 	protected $connection;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/restrict_ip/src/Form/ConfigForm.php:16

    ---------- begin diff ----------
@@ @@
 	/**
 	 * The current user
 	 *
-	 * @var \Drupal\Core\Session\AccountProxyInterface
+	 * @var AccountProxyInterface
 	 */
 	private $currentUser;

@@ @@
 	/**
 	 * The Module Handler service
 	 *
-	 * @var \Drupal\Core\Extension\ModuleHandlerInterface
+	 * @var ModuleHandlerInterface
 	 */
 	protected $moduleHandler;

@@ @@
 	/**
 	 * The country manager service.
 	 *
-	 * @var \Drupal\Core\Locale\CountryManagerInterface
+	 * @var CountryManagerInterface
 	 */
 	protected $countryManager;

@@ @@
 	/**
 	 * The Restrict IP Service
 	 *
-	 * @var \Drupal\restrict_ip\Service\RestrictIpServiceInterface
+	 * @var RestrictIpServiceInterface
 	 */
 	protected $restrictIpService;

@@ @@
 	/**
 	 * Constructs a Restrict IP ConfigForm object
 	 *
-	 * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+	 * @param AccountProxyInterface $currentUser
 	 *   The current user
-	 * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+	 * @param ModuleHandlerInterface $moduleHandler
 	 *   The Module Handler service
-	 * @param \Drupal\Core\Locale\CountryManagerInterface $countryManager
+	 * @param CountryManagerInterface $countryManager
 	 *   The Country Manager service
-	 * @param \Drupal\restrict_ip\Service\RestrictIpServiceInterface $restrictIpService
+	 * @param RestrictIpServiceInterface $restrictIpService
 	 *   The Restrict IP service object
 	 */
 	public function __construct(AccountProxyInterface $currentUser, ModuleHandlerInterface $moduleHandler, CountryManagerInterface $countryManager, RestrictIpServiceInterface $restrictIpService)
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/restrict_ip/src/EventSubscriber/RestrictIpEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\restrict_ip\EventSubscriber;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\restrict_ip\Service\RestrictIpService;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ @@
 use Drupal\restrict_ip\Service\RestrictIpServiceInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 class RestrictIpEventSubscriber implements EventSubscriberInterface
@@ @@
 	/**
 	 * The restrict IP change service
 	 *
-	 * @var Drupal\restrict_ip\Service\RestrictIpServiceInterface
+	 * @var RestrictIpServiceInterface
 	 */
 	protected $restrictIpService;

@@ @@
 	/**
 	 * The Logger Factory service
 	 *
-	 * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+	 * @var LoggerChannelFactoryInterface
 	 */
 	protected $loggerFactory;

@@ @@
 	/**
 	 * The Module Handler service
 	 *
-	 * @var \Drupal\Core\Extension\ModuleHandlerInterface
+	 * @var ModuleHandlerInterface
 	 */
 	protected $moduleHandler;

@@ @@
 	/**
 	 * The Url Generator service
 	 *
-	 * @var \Drupal\Core\Routing\UrlGeneratorInterface
+	 * @var UrlGeneratorInterface
 	 */
 	protected $urlGenerator;

@@ @@
 	/**
 	 * The Restrict IP configuration settings
 	 *
-	 * @var \Drupal\Core\Config\ImmutableConfig
+	 * @var ImmutableConfig
 	 */
 	protected $config;

@@ @@
 	/**
 	 * Creates an instance of the RestrictIpEventSubscriber class
 	 *
-	 * @param \Drupal\restrict_ip\Service\RestrictIpService $restrictIpService
+	 * @param RestrictIpService $restrictIpService
 	 *   The restrict IP service
-	 * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+	 * @param ConfigFactoryInterface $configFactory
 	 *   The Config Factory service
-	 * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+	 * @param LoggerChannelFactoryInterface $loggerFactory
 	 *   The Logger Factory service
-	 * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+	 * @param ModuleHandlerInterface $moduleHandler
 	 *   The Module Handler service
-	 * @param \Drupal\Core\Routing\UrlGeneratorInterface $urlGenerator
+	 * @param UrlGeneratorInterface $urlGenerator
 	 *   The Url Generator service
 	 */
 	public function __construct(RestrictIpServiceInterface $restrictIpService, ConfigFactoryInterface $configFactory, LoggerChannelFactoryInterface $loggerFactory, ModuleHandlerInterface $moduleHandler, UrlGeneratorInterface $urlGenerator)
@@ @@
 		return $events;
 	}

-	public function checkIpRestricted(GetResponseEvent $event)
+	public function checkIpRestricted(RequestEvent $event)
 	{
 		unset($_SESSION['restrict_ip']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/restrict_ip/src/Controller/PageController.php:17

    ---------- begin diff ----------
@@ @@
 	/**
 	 * The Form Builder service
 	 *
-	 * @var \Drupal\Core\Form\FormBuilderInterface
+	 * @var FormBuilderInterface
 	 */
 	protected $formBuilder;

@@ @@
 	/**
 	 * The Config Factory service
 	 *
-	 * @var \Drupal\Core\Config\ConfigFactoryInterface
+	 * @var ConfigFactoryInterface
 	 */
 	protected $configFactory;

@@ @@
 	/**
 	 * The current user
 	 *
-	 * @var \Drupal\Core\Session\AccountProxyInterface
+	 * @var AccountProxyInterface
 	 */
 	protected $currentUser;

@@ @@
 	/**
 	 * The Module Handler service
 	 *
-	 * @var \Drupal\Core\Extension\ModuleHandlerInterface
+	 * @var ModuleHandlerInterface
 	 */
 	protected $moduleHandler;

 	/**
-	 * Constructs the PageController object for the Restrict IP module
-	 *
-	 * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
-	 *   The Form Builder service
-	 * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
-	 *   The Config Factory service
-	 * @param \Drupal\Core\Session\AccountProxyInterface $currentUser;
-	 *   The current user
-	 * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
-	 *   The Module Handler service
-	 */
+	* Constructs the PageController object for the Restrict IP module
+	*
+	 * @param FormBuilderInterface $formBuilder
+	*   The Form Builder service
+	 * @param ConfigFactoryInterface $configFactory
+	*   The Config Factory service
+	 * @param AccountProxyInterface $currentUser ;
+	  The current user
+	 * @param ModuleHandlerInterface $moduleHandler
+	*   The Module Handler service
+	*/
 	public function __construct(FormBuilderInterface $formBuilder, ConfigFactoryInterface $configFactory, AccountProxyInterface $currentUser, ModuleHandlerInterface $moduleHandler)
 	{
 		$this->formBuilder = $formBuilder;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/restrict_ip/restrict_ip.module:110

    ---------- begin diff ----------
@@ @@
 		$whitelisted_js_keys = [
 			'core/assets/vendor/jquery/jquery.min.js',
 			'core/assets/vendor/jquery/jquery.js',
-			drupal_get_path('module', 'restrict_ip') . '/js/mail_fix.js',
+			\Drupal::service('extension.list.module')->getPath('restrict_ip') . '/js/mail_fix.js',
 		];

 		$whitelisted_js_keys += Drupal::service('module_handler')->invokeAll('restrict_ip_whitelisted_js_keys');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

