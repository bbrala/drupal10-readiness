diff --git a/composer.json b/composer.json
index d14a947..c5b2f58 100644
--- a/composer.json
+++ b/composer.json
@@ -21,6 +21,6 @@
     "source": "http://cgit.drupalcode.org/menu_advanced_settings"
   },
   "require": {
-    "drupal/core": "^8 || ^9"
+    "drupal/core": "^9.1 || ^10"
   }
-}
\ No newline at end of file
+}
diff --git a/menu_advanced_settings.info.yml b/menu_advanced_settings.info.yml
index 71d183c..6dc5307 100644
--- a/menu_advanced_settings.info.yml
+++ b/menu_advanced_settings.info.yml
@@ -1,8 +1,7 @@
 name: Menu advanced settings
 type: module
 description: Makes menu title and description configurable with maximum length and input form.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Config
 configure: menu_advanced_settings.settings
 dependencies:
diff --git a/src/Form/MenuAdvancedSettings.php b/src/Form/MenuAdvancedSettings.php
index e5b94ea..4ef7f77 100644
--- a/src/Form/MenuAdvancedSettings.php
+++ b/src/Form/MenuAdvancedSettings.php
@@ -15,7 +15,7 @@ class MenuAdvancedSettings extends ConfigFormBase {
   /**
    * The schema helper.
    *
-   * @var \Drupal\menu_advanced_settings\Services\SchemaManagement
+   * @var SchemaManagement
    */
   protected $schemaManagement;
 
diff --git a/src/Services/SchemaManagement.php b/src/Services/SchemaManagement.php
index 433a4ea..5af68b6 100644
--- a/src/Services/SchemaManagement.php
+++ b/src/Services/SchemaManagement.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\menu_advanced_settings\Services;
 
+use Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface;
+use Drupal\Core\Entity\EntityFieldManager;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Messenger\MessengerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,14 +16,14 @@ class SchemaManagement {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $db;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -107,9 +109,9 @@ class SchemaManagement {
    *   The new length of the field, must be larger than the previous value.
    */
   private function dbChangeVarcharField($field_name, $field_length) {
-    /** @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $schema_repository */
+    /** @var EntityLastInstalledSchemaRepositoryInterface $schema_repository */
     $schema_repository = \Drupal::service('entity.last_installed_schema.repository');
-    /** @var \Drupal\Core\Entity\EntityFieldManager $entity_field_manager */
+    /** @var EntityFieldManager $entity_field_manager */
     $entity_field_manager = \Drupal::service('entity_field.manager');
     $base_field_definitions = $entity_field_manager->getBaseFieldDefinitions('menu_link_content');
     $schema_repository->setLastInstalledFieldStorageDefinition($base_field_definitions[$field_name]);
diff --git a/tests/src/Functional/MenuAdvancedSettingsTest.php b/tests/src/Functional/MenuAdvancedSettingsTest.php
index 5cbb148..20522bd 100644
--- a/tests/src/Functional/MenuAdvancedSettingsTest.php
+++ b/tests/src/Functional/MenuAdvancedSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\menu_advanced_settings\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -29,14 +30,14 @@ class MenuAdvancedSettingsTest extends BrowserTestBase {
   /**
    * An users with administration permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create admin user.
@@ -64,9 +65,12 @@ class MenuAdvancedSettingsTest extends BrowserTestBase {
       'menu_description_length' => 2000,
       'menu_description_field' => 'textarea',
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->statusCodeEquals(200);
-    $this->assertText('The configuration options have been saved.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     // Menu UI shows correct field type.
     $this->drupalGet('admin/structure/menu/manage/tools/add');
@@ -81,7 +85,7 @@ class MenuAdvancedSettingsTest extends BrowserTestBase {
       'title[0][value]' => $this->randomMachineName(500),
       'description[0][value]' => $this->randomMachineName(2000),
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->statusCodeEquals(200);
     // $this->assertText('The menu link has been saved.');
   }
