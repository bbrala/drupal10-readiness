diff --git a/keycloak.module b/keycloak.module
index dad58a4..8437a92 100644
--- a/keycloak.module
+++ b/keycloak.module
@@ -74,7 +74,7 @@ function keycloak_form_openid_connect_admin_settings_alter(array &$form, FormSta
  *
  * @param array $form
  *   An associative array containing the structure of the plugin form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function keycloak_form_openid_connect_admin_settings_validate(array &$form, FormStateInterface $form_state) {
@@ -111,7 +111,7 @@ function keycloak_form_openid_connect_admin_settings_validate(array &$form, Form
  *
  * @param array $form
  *   An associative array containing the structure of the plugin form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function keycloak_form_openid_connect_admin_settings_submit(array &$form, FormStateInterface $form_state) {
diff --git a/src/Controller/KeycloakController.php b/src/Controller/KeycloakController.php
index a4c371f..a8ca24d 100644
--- a/src/Controller/KeycloakController.php
+++ b/src/Controller/KeycloakController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\keycloak\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\keycloak\Service\KeycloakServiceInterface;
@@ -22,50 +23,50 @@ class KeycloakController extends ControllerBase {
   /**
    * The Keycloak service.
    *
-   * @var \Drupal\keycloak\Service\KeycloakServiceInterface
+   * @var KeycloakServiceInterface
    */
   protected $keycloak;
 
   /**
    * The OpenID Connect plug-in manager.
    *
-   * @var \Drupal\openid_connect\Plugin\OpenIDConnectClientManager
+   * @var OpenIDConnectClientManager
    */
   protected $pluginManager;
 
   /**
    * The OpenID Connect claims.
    *
-   * @var \Drupal\openid_connect\OpenIDConnectClaims
+   * @var OpenIDConnectClaims
    */
   protected $claims;
 
   /**
    * The request stack used to access request globals.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a KeycloakController object.
    *
-   * @param \Drupal\keycloak\Service\KeycloakServiceInterface $keycloak
+   * @param KeycloakServiceInterface $keycloak
    *   A Keycloak service instance.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Account proxy for the currently logged-in user.
-   * @param \Drupal\openid_connect\Plugin\OpenIDConnectClientManager $plugin_manager
+   * @param OpenIDConnectClientManager $plugin_manager
    *   The OpenID Connect plug-in manager.
-   * @param \Drupal\openid_connect\OpenIDConnectClaims $claims
+   * @param OpenIDConnectClaims $claims
    *   The OpenID Connect claims.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(
@@ -118,7 +119,7 @@ class KeycloakController extends ControllerBase {
   /**
    * Log out the current user.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to either Keycloak or the front page.
    */
   public function logout() {
diff --git a/src/EventSubscriber/KeycloakRequestSubscriber.php b/src/EventSubscriber/KeycloakRequestSubscriber.php
index 0dde5e1..2b7436c 100644
--- a/src/EventSubscriber/KeycloakRequestSubscriber.php
+++ b/src/EventSubscriber/KeycloakRequestSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\keycloak\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Path\PathMatcherInterface;
@@ -11,7 +12,6 @@ use Drupal\Core\Url;
 use Drupal\keycloak\Service\KeycloakServiceInterface;
 use Drupal\openid_connect\OpenIDConnectStateToken;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -29,34 +29,34 @@ class KeycloakRequestSubscriber implements EventSubscriberInterface {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * A path processor manager for resolving the system path.
    *
-   * @var \Drupal\Core\PathProcessor\InboundPathProcessorInterface
+   * @var InboundPathProcessorInterface
    */
   protected $pathProcessor;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * Constructs a RedirectRequestSubscriber.
    *
-   * @param \Drupal\keycloak\Service\KeycloakServiceInterface $keycloak
+   * @param KeycloakServiceInterface $keycloak
    *   The Keycloak service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\Core\PathProcessor\InboundPathProcessorInterface $path_processor
+   * @param InboundPathProcessorInterface $path_processor
    *   Inbound path processor manager.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
    */
   public function __construct(KeycloakServiceInterface $keycloak, LanguageManagerInterface $language_manager, InboundPathProcessorInterface $path_processor, PathMatcherInterface $path_matcher) {
@@ -69,10 +69,10 @@ class KeycloakRequestSubscriber implements EventSubscriberInterface {
   /**
    * Redirects keycloak logout requests to Keycloak.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
-  public function onKernelRequestCheckKeycloakRedirect(GetResponseEvent $event) {
+  public function onKernelRequestCheckKeycloakRedirect(RequestEvent $event) {
     // Whether Keycloak is enabled and configured for RP initiated
     // Single Sign-Out.
     if (!$this->keycloak->isKeycloakSignOutEnabled()) {
diff --git a/src/Plugin/OpenIDConnectClient/Keycloak.php b/src/Plugin/OpenIDConnectClient/Keycloak.php
index 96b054a..f838e64 100644
--- a/src/Plugin/OpenIDConnectClient/Keycloak.php
+++ b/src/Plugin/OpenIDConnectClient/Keycloak.php
@@ -35,21 +35,21 @@ class Keycloak extends OpenIDConnectClientBase implements OpenIDConnectClientInt
   /**
    * The Keycloak service.
    *
-   * @var \Drupal\keycloak\Service\KeycloakServiceInterface
+   * @var KeycloakServiceInterface
    */
   protected $keycloak;
 
   /**
    * The Keycloak role matcher service.
    *
-   * @var \Drupal\keycloak\Service\KeycloakRoleMatcher
+   * @var KeycloakRoleMatcher
    */
   protected $roleMatcher;
 
   /**
    * The UUID service.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;
 
@@ -62,17 +62,17 @@ class Keycloak extends OpenIDConnectClientBase implements OpenIDConnectClientInt
    *   The plugin identifier.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The http client.
-   * @param \Drupal\keycloak\Service\KeycloakServiceInterface $keycloak
+   * @param KeycloakServiceInterface $keycloak
    *   The Keycloak service.
-   * @param \Drupal\keycloak\Service\KeycloakRoleMatcher $role_matcher
+   * @param KeycloakRoleMatcher $role_matcher
    *   The Keycloak role manager service.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   The UUID service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
    */
   public function __construct(
@@ -438,7 +438,7 @@ class Keycloak extends OpenIDConnectClientBase implements OpenIDConnectClientInt
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -455,7 +455,7 @@ class Keycloak extends OpenIDConnectClientBase implements OpenIDConnectClientInt
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addRuleSubmit(array &$form, FormStateInterface $form_state) {
@@ -473,7 +473,7 @@ class Keycloak extends OpenIDConnectClientBase implements OpenIDConnectClientInt
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function deleteRuleSubmit(array &$form, FormStateInterface $form_state) {
@@ -489,7 +489,7 @@ class Keycloak extends OpenIDConnectClientBase implements OpenIDConnectClientInt
   /**
    * Helper method returning user group mapping rules form array table.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Routing/KeycloakRouteSubscriber.php b/src/Routing/KeycloakRouteSubscriber.php
index bce3ce3..4243314 100644
--- a/src/Routing/KeycloakRouteSubscriber.php
+++ b/src/Routing/KeycloakRouteSubscriber.php
@@ -15,14 +15,14 @@ class KeycloakRouteSubscriber extends RouteSubscriberBase {
   /**
    * The Keycloak service.
    *
-   * @var \Drupal\keycloak\Service\KeycloakServiceInterface
+   * @var KeycloakServiceInterface
    */
   protected $keycloak;
 
   /**
    * Construct a KeycloakRouteSubscriber object.
    *
-   * @param \Drupal\keycloak\Service\KeycloakServiceInterface $keycloak
+   * @param KeycloakServiceInterface $keycloak
    *   A Keycloak service instance.
    */
   public function __construct(KeycloakServiceInterface $keycloak) {
diff --git a/src/Service/KeycloakRoleMatcher.php b/src/Service/KeycloakRoleMatcher.php
index a3c4fcc..517d1b7 100644
--- a/src/Service/KeycloakRoleMatcher.php
+++ b/src/Service/KeycloakRoleMatcher.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\keycloak\Service;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -26,25 +28,25 @@ class KeycloakRoleMatcher {
   /**
    * A configuration object containing Keycloak client settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The logger factory.
    *
-   * @var Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * Constructs a RoleManager service object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
    */
   public function __construct(
@@ -183,7 +185,7 @@ class KeycloakRoleMatcher {
   /**
    * Applies user role rules to the given user account.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   User account.
    * @param array $userinfo
    *   Associative array with user information.
@@ -453,7 +455,7 @@ class KeycloakRoleMatcher {
   /**
    * Return Keycloak logger.
    *
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    *   Logger instance for the Keycloak module.
    */
   public function getLogger() {
diff --git a/src/Service/KeycloakService.php b/src/Service/KeycloakService.php
index 3c38993..0ab1bbf 100644
--- a/src/Service/KeycloakService.php
+++ b/src/Service/KeycloakService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\keycloak\Service;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ -24,42 +25,42 @@ class KeycloakService implements KeycloakServiceInterface {
   /**
    * A configuration object containing Keycloak client settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Client plugin manager of the OpenID Connect module.
    *
-   * @var \Drupal\openid_connect\Plugin\OpenIDConnectClientManager
+   * @var OpenIDConnectClientManager
    */
   protected $oidcClientManager;
 
   /**
    * A language manager instance.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The users' private tempstore instance.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempstore;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
diff --git a/src/Service/KeycloakServiceInterface.php b/src/Service/KeycloakServiceInterface.php
index b5b7e04..59e05d6 100644
--- a/src/Service/KeycloakServiceInterface.php
+++ b/src/Service/KeycloakServiceInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\keycloak\Service;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\openid_connect\Plugin\OpenIDConnectClientInterface;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ -72,17 +75,17 @@ interface KeycloakServiceInterface {
   /**
    * Constructor for Drupal\keycloak\Service\KeycloakService.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\openid_connect\Plugin\OpenIDConnectClientManager $oidc_client_manager
+   * @param OpenIDConnectClientManager $oidc_client_manager
    *   Client plugin manager of the OpenID Connect module.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   A language manager instance.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Account proxy for the currently logged-in user.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $private_tempstore
+   * @param PrivateTempStoreFactory $private_tempstore
    *   A private tempstore factory instance.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   A logger channel factory instance.
    */
   public function __construct(
@@ -239,7 +242,7 @@ interface KeycloakServiceInterface {
    * @param array $session_information
    *   Session information array holding the required id_token.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect response redirecting to the sign out target route:
    *   - '&lt;front&gt;' if Keycloak single sign-out is disabled.
    *   - 'keycloak.logout' if Keycloak single sign-out is enabled.
@@ -273,7 +276,7 @@ interface KeycloakServiceInterface {
   /**
    * Return a configured Keycloak client plugin for the openid_connect module.
    *
-   * @return \Drupal\openid_connect\Plugin\OpenIDConnectClientInterface
+   * @return OpenIDConnectClientInterface
    *   Keycloak client plugin for the openid_connect module.
    */
   public function getClientInstance();
@@ -281,7 +284,7 @@ interface KeycloakServiceInterface {
   /**
    * Return Keycloak logger.
    *
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    *   Logger instance for the Keycloak module.
    */
   public function getLogger();
