modules/contrib/ckeditor_datetime/src/Form/SettingsForm.php
modules/contrib/ckeditor_datetime/src/Plugin/CKEditorPlugin/DateTime.php

2 files with changes
====================

1) modules/contrib/ckeditor_datetime/src/Plugin/CKEditorPlugin/DateTime.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ckeditor_datetime\Plugin\CKEditorPlugin;

+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Config\Config;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\ckeditor\CKEditorPluginBase;
 use Drupal\editor\Entity\Editor;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * The date format storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $dateFormatStorage;

@@ @@
   /**
    * Ckeditor datetime config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The date format storage.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory) {
     $this->dateFormatStorage = $entity_type_manager->getStorage('date_format');
@@ @@
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ @@
     return [
       'Datetime' => [
         'label' => $this->t('Datetime'),
-        'image' => drupal_get_path('module', 'ckeditor_datetime') . '/js/plugins/datetime/icons/datetime.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('ckeditor_datetime') . '/js/plugins/datetime/icons/datetime.png',
       ],
     ];
   }
@@ @@
   public function getFile() {
     // Make sure that the path to the plugin.js matches the file structure of
     // the CKEditor plugin you are implementing.
-    return drupal_get_path('module', 'ckeditor_datetime') . '/js/plugins/datetime/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('ckeditor_datetime') . '/js/plugins/datetime/plugin.js';
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ckeditor_datetime/src/Form/SettingsForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

