diff --git a/grapesjs_editor.module b/grapesjs_editor.module
index 87b0a09..48dd074 100644
--- a/grapesjs_editor.module
+++ b/grapesjs_editor.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityForm;
 /**
  * @file
  * Contains grapesjs_editor.module.
@@ -37,7 +38,7 @@ function grapesjs_editor_element_info_alter(array &$info) {
  *
  * @param array $element
  *   The render element.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  * @param array $complete_form
  *   The form element.
@@ -49,7 +50,7 @@ function _grapesjs_editor_text_format_processor(array $element, FormStateInterfa
   if (!empty($element['format']) && isset($element['format']['format']['#options']['grapesjs_editor'])) {
     // By default let's assume that GrapesJS Editor format is not allowed.
     $grapesjs_editor_allowed = FALSE;
-    /** @var \Drupal\Core\Entity\ContentEntityForm $form */
+    /** @var ContentEntityForm $form */
     $form = $form_state->getFormObject();
     // Check whether the form that contains the element is an EntityForm.
     if ($form instanceof EntityFormInterface) {
diff --git a/modules/grapesjs_reusable_blocks/src/Controller/BlockController.php b/modules/grapesjs_reusable_blocks/src/Controller/BlockController.php
index 6ab9f5b..6cf0f9f 100644
--- a/modules/grapesjs_reusable_blocks/src/Controller/BlockController.php
+++ b/modules/grapesjs_reusable_blocks/src/Controller/BlockController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\grapesjs_reusable_blocks\Controller;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\block_content\Entity\BlockContent;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\Xss;
@@ -18,13 +19,13 @@ class BlockController extends ControllerBase {
   /**
    * Returns a Json response with the block data.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the entity is invalid.
    */
   public function createBlock(Request $request) {
diff --git a/modules/grapesjs_reusable_blocks/src/Plugin/GrapesJSPlugin/DrupalReusableBlocks.php b/modules/grapesjs_reusable_blocks/src/Plugin/GrapesJSPlugin/DrupalReusableBlocks.php
index 52c7e7d..eafe738 100644
--- a/modules/grapesjs_reusable_blocks/src/Plugin/GrapesJSPlugin/DrupalReusableBlocks.php
+++ b/modules/grapesjs_reusable_blocks/src/Plugin/GrapesJSPlugin/DrupalReusableBlocks.php
@@ -25,14 +25,14 @@ class DrupalReusableBlocks extends GrapesJSPluginBase implements ContainerFactor
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;
 
@@ -45,9 +45,9 @@ class DrupalReusableBlocks extends GrapesJSPluginBase implements ContainerFactor
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, BlockManager $block_manager) {
diff --git a/src/Annotation/GrapesJSPlugin.php b/src/Annotation/GrapesJSPlugin.php
index cb83083..b91d01a 100644
--- a/src/Annotation/GrapesJSPlugin.php
+++ b/src/Annotation/GrapesJSPlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\grapesjs_editor\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -36,7 +37,7 @@ class GrapesJSPlugin extends Plugin {
   /**
    * The human-readable name of the GrapesJS plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Controller/AssetController.php b/src/Controller/AssetController.php
index cd7f602..d27ac1a 100644
--- a/src/Controller/AssetController.php
+++ b/src/Controller/AssetController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\grapesjs_editor\Controller;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Utility\Bytes;
 use Drupal\Component\Utility\Environment;
 use Drupal\Core\Controller\ControllerBase;
@@ -22,23 +23,23 @@ class AssetController extends ControllerBase {
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The asset manager service.
    *
-   * @var \Drupal\grapesjs_editor\Services\AssetManager
+   * @var AssetManager
    */
   protected $assetManager;
 
   /**
    * AssetController constructor.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\grapesjs_editor\Services\AssetManager $asset_manager
+   * @param AssetManager $asset_manager
    *   The asset manager service.
    */
   public function __construct(FileSystemInterface $file_system, AssetManager $asset_manager) {
@@ -59,10 +60,10 @@ class AssetController extends ControllerBase {
   /**
    * Returns a Json response with all asset.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the storage can't be found.
    */
   public function uploadAssets() {
diff --git a/src/Controller/BlockController.php b/src/Controller/BlockController.php
index f4a97e7..af7cda7 100644
--- a/src/Controller/BlockController.php
+++ b/src/Controller/BlockController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\grapesjs_editor\Controller;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\grapesjs_editor\Services\BlockManager;
@@ -19,32 +20,32 @@ class BlockController extends ControllerBase {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;
 
   /**
    * The field manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\FieldManager
+   * @var FieldManager
    */
   protected $fieldManager;
 
   /**
    * BlockController constructor.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
-   * @param \Drupal\grapesjs_editor\Services\FieldManager $field_manager
+   * @param FieldManager $field_manager
    *   The field manager.
    */
   public function __construct(RendererInterface $renderer, BlockManager $block_manager, FieldManager $field_manager) {
@@ -67,13 +68,13 @@ class BlockController extends ControllerBase {
   /**
    * Returns a Json response with the block render.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin is invalid.
    */
   public function block(Request $request) {
@@ -91,10 +92,10 @@ class BlockController extends ControllerBase {
   /**
    * Returns a Json response with the field render.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
    * @throws \Exception
diff --git a/src/GrapesJSPluginConfigurableInterface.php b/src/GrapesJSPluginConfigurableInterface.php
index 333a636..9b6678b 100644
--- a/src/GrapesJSPluginConfigurableInterface.php
+++ b/src/GrapesJSPluginConfigurableInterface.php
@@ -20,9 +20,9 @@ interface GrapesJSPluginConfigurableInterface extends GrapesJSPluginInterface {
    *
    * @param array $form
    *   An empty form array to be populated with a configuration form, if any.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the entire filter administration form.
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
diff --git a/src/GrapesJSPluginInterface.php b/src/GrapesJSPluginInterface.php
index d7d114a..f5d4d47 100644
--- a/src/GrapesJSPluginInterface.php
+++ b/src/GrapesJSPluginInterface.php
@@ -16,7 +16,7 @@ interface GrapesJSPluginInterface extends PluginInspectionInterface {
    * These libraries will be attached to the text_format element on which the
    * editor is being loaded.
    *
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
@@ -38,7 +38,7 @@ interface GrapesJSPluginInterface extends PluginInspectionInterface {
    * $plugin_specific_settings = $settings['plugins'][$plugin_id];
    * @endcode
    *
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
diff --git a/src/Plugin/Editor/GrapesJSEditor.php b/src/Plugin/Editor/GrapesJSEditor.php
index 1b1cdd6..448089b 100644
--- a/src/Plugin/Editor/GrapesJSEditor.php
+++ b/src/Plugin/Editor/GrapesJSEditor.php
@@ -32,21 +32,21 @@ class GrapesJSEditor extends EditorBase implements ContainerFactoryPluginInterfa
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The library resolver service.
    *
-   * @var \Drupal\grapesjs_editor\Services\LibraryResolver
+   * @var LibraryResolver
    */
   protected $libraryResolver;
 
   /**
    * The plugin manager service.
    *
-   * @var \Drupal\grapesjs_editor\PluginManager
+   * @var PluginManager
    */
   protected $pluginManager;
 
@@ -59,11 +59,11 @@ class GrapesJSEditor extends EditorBase implements ContainerFactoryPluginInterfa
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\grapesjs_editor\Services\LibraryResolver $library_resolver
+   * @param LibraryResolver $library_resolver
    *   The library resolver service.
-   * @param \Drupal\grapesjs_editor\PluginManager $plugin_manager
+   * @param PluginManager $plugin_manager
    *   The plugin manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, LanguageManagerInterface $language_manager, LibraryResolver $library_resolver, PluginManager $plugin_manager) {
@@ -134,7 +134,7 @@ class GrapesJSEditor extends EditorBase implements ContainerFactoryPluginInterfa
         'canvas' => [
           'styles' => array_merge([
             Url::fromRoute('<front>', [], ['absolute' => TRUE])
-              ->toString() . drupal_get_path('module', 'grapesjs_editor') . '/libraries/css/canvas.css',
+              ->toString() . \Drupal::service('extension.list.module')->getPath('grapesjs_editor') . '/libraries/css/canvas.css',
           ], $this->libraryResolver->getStyles()),
         ],
         'plugins' => [],
diff --git a/src/Plugin/Filter/FilterBlock.php b/src/Plugin/Filter/FilterBlock.php
index 8e4ad69..78b8079 100644
--- a/src/Plugin/Filter/FilterBlock.php
+++ b/src/Plugin/Filter/FilterBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\grapesjs_editor\Plugin\Filter;
 
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Render\BubbleableMetadata;
@@ -26,28 +27,28 @@ class FilterBlock extends FilterBase implements ContainerFactoryPluginInterface
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The result metadata.
    *
-   * @var \Drupal\Core\Render\BubbleableMetadata
+   * @var BubbleableMetadata
    */
   protected $metadata;
 
@@ -60,11 +61,11 @@ class FilterBlock extends FilterBase implements ContainerFactoryPluginInterface
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer, BlockManager $block_manager, AccountProxyInterface $current_user) {
@@ -109,7 +110,7 @@ class FilterBlock extends FilterBase implements ContainerFactoryPluginInterface
    * @param array $match
    *   The custom tag match.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The block render.
    *
    * @throws \Exception
diff --git a/src/Plugin/Filter/FilterField.php b/src/Plugin/Filter/FilterField.php
index b6bd668..4205a68 100644
--- a/src/Plugin/Filter/FilterField.php
+++ b/src/Plugin/Filter/FilterField.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\grapesjs_editor\Plugin\Filter;
 
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Render\BubbleableMetadata;
@@ -26,28 +27,28 @@ class FilterField extends FilterBase implements ContainerFactoryPluginInterface
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The field manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\FieldManager
+   * @var FieldManager
    */
   protected $fieldManager;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The result metadata.
    *
-   * @var \Drupal\Core\Render\BubbleableMetadata
+   * @var BubbleableMetadata
    */
   protected $metadata;
 
@@ -60,11 +61,11 @@ class FilterField extends FilterBase implements ContainerFactoryPluginInterface
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\grapesjs_editor\Services\FieldManager $field_manager
+   * @param FieldManager $field_manager
    *   The field manager.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer, FieldManager $field_manager, AccountProxyInterface $current_user) {
@@ -109,7 +110,7 @@ class FilterField extends FilterBase implements ContainerFactoryPluginInterface
    * @param array $match
    *   The custom tag match.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The field render.
    *
    * @throws \Exception
diff --git a/src/Plugin/GrapesJSPlugin/DrupalAsset.php b/src/Plugin/GrapesJSPlugin/DrupalAsset.php
index 3ce9753..80bb197 100644
--- a/src/Plugin/GrapesJSPlugin/DrupalAsset.php
+++ b/src/Plugin/GrapesJSPlugin/DrupalAsset.php
@@ -26,14 +26,14 @@ class DrupalAsset extends GrapesJSPluginBase implements ContainerFactoryPluginIn
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The asset manager service.
    *
-   * @var \Drupal\grapesjs_editor\Services\AssetManager
+   * @var AssetManager
    */
   protected $assetManager;
 
@@ -46,9 +46,9 @@ class DrupalAsset extends GrapesJSPluginBase implements ContainerFactoryPluginIn
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
-   * @param \Drupal\grapesjs_editor\Services\AssetManager $asset_manager
+   * @param AssetManager $asset_manager
    *   The asset manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AccountProxyInterface $current_user, AssetManager $asset_manager) {
@@ -60,7 +60,7 @@ class DrupalAsset extends GrapesJSPluginBase implements ContainerFactoryPluginIn
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ -134,7 +134,7 @@ class DrupalAsset extends GrapesJSPluginBase implements ContainerFactoryPluginIn
    *
    * @param array $element
    *   The render element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @see \Drupal\editor\Form\EditorImageDialog
diff --git a/src/Plugin/GrapesJSPlugin/DrupalBasicBlocks.php b/src/Plugin/GrapesJSPlugin/DrupalBasicBlocks.php
index 7b0e991..e031b6b 100644
--- a/src/Plugin/GrapesJSPlugin/DrupalBasicBlocks.php
+++ b/src/Plugin/GrapesJSPlugin/DrupalBasicBlocks.php
@@ -104,7 +104,7 @@ class DrupalBasicBlocks extends GrapesJSPluginBase implements GrapesJSPluginConf
    *
    * @param array $element
    *   The render element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validateAllowedBlocksSettings(array $element, FormStateInterface $form_state) {
diff --git a/src/Plugin/GrapesJSPlugin/DrupalBlocks.php b/src/Plugin/GrapesJSPlugin/DrupalBlocks.php
index af8f885..37b7254 100644
--- a/src/Plugin/GrapesJSPlugin/DrupalBlocks.php
+++ b/src/Plugin/GrapesJSPlugin/DrupalBlocks.php
@@ -26,7 +26,7 @@ class DrupalBlocks extends GrapesJSPluginBase implements ContainerFactoryPluginI
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;
 
@@ -39,7 +39,7 @@ class DrupalBlocks extends GrapesJSPluginBase implements ContainerFactoryPluginI
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, BlockManager $block_manager) {
@@ -138,7 +138,7 @@ class DrupalBlocks extends GrapesJSPluginBase implements ContainerFactoryPluginI
    *
    * @param array $element
    *   The render element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validateAllowedBlocksSettings(array $element, FormStateInterface $form_state) {
diff --git a/src/Plugin/GrapesJSPlugin/DrupalFields.php b/src/Plugin/GrapesJSPlugin/DrupalFields.php
index b3f53b3..1e8989b 100644
--- a/src/Plugin/GrapesJSPlugin/DrupalFields.php
+++ b/src/Plugin/GrapesJSPlugin/DrupalFields.php
@@ -24,7 +24,7 @@ class DrupalFields extends GrapesJSPluginBase implements ContainerFactoryPluginI
   /**
    * The field manager service.
    *
-   * @var \Drupal\grapesjs_editor\Services\FieldManager
+   * @var FieldManager
    */
   protected $fieldManager;
 
@@ -37,7 +37,7 @@ class DrupalFields extends GrapesJSPluginBase implements ContainerFactoryPluginI
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\grapesjs_editor\Services\FieldManager $field_manager
+   * @param FieldManager $field_manager
    *   The field manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, FieldManager $field_manager) {
diff --git a/src/PluginManager.php b/src/PluginManager.php
index 1202012..7cd1818 100644
--- a/src/PluginManager.php
+++ b/src/PluginManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\grapesjs_editor;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -19,9 +20,9 @@ class PluginManager extends DefaultPluginManager {
    *
    * @param \Traversable $namespaces
    *   The namespaces.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ -33,14 +34,14 @@ class PluginManager extends DefaultPluginManager {
   /**
    * Retrieves enabled plugins, keyed by plugin ID.
    *
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
    *   A list of the enabled GrapesJS plugins, with the plugin IDs as keys and
    *   the Drupal root-relative plugin files as values.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin can't be found.
    */
   public function getEnabledPlugins(Editor $editor) {
@@ -63,12 +64,12 @@ class PluginManager extends DefaultPluginManager {
    *
    * @param array &$form
    *   A reference to an associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin can't be found.
    */
   public function injectPluginSettingsForm(array &$form, FormStateInterface $form_state, Editor $editor) {
diff --git a/src/Routing/BlockRoutes.php b/src/Routing/BlockRoutes.php
index fe95d9e..30f5a74 100644
--- a/src/Routing/BlockRoutes.php
+++ b/src/Routing/BlockRoutes.php
@@ -13,7 +13,7 @@ class BlockRoutes {
   /**
    * Builds dynamic routes.
    *
-   * @return \Symfony\Component\Routing\RouteCollection
+   * @return RouteCollection
    *   The route collection.
    */
   public function routes() {
diff --git a/src/Services/AssetManager.php b/src/Services/AssetManager.php
index 78b05c2..080c226 100644
--- a/src/Services/AssetManager.php
+++ b/src/Services/AssetManager.php
@@ -14,14 +14,14 @@ class AssetManager {
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * AssetManager constructor.
    *
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
    */
   public function __construct(ImageFactory $image_factory) {
@@ -31,7 +31,7 @@ class AssetManager {
   /**
    * Build asset array with file parameter.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file to transform.
    *
    * @return array
diff --git a/src/Services/BlockManager.php b/src/Services/BlockManager.php
index aa2fcc4..c0919f4 100644
--- a/src/Services/BlockManager.php
+++ b/src/Services/BlockManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\grapesjs_editor\Services;
 
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Block\BlockManagerInterface;
@@ -17,41 +19,41 @@ class BlockManager {
   /**
    * The block manager service.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
 
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * BlockManager constructor.
    *
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager service.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The context repository service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(BlockManagerInterface $block_manager, ContextRepositoryInterface $context_repository, AccountProxyInterface $current_user, RendererInterface $renderer) {
@@ -113,10 +115,10 @@ class BlockManager {
    * @param string $id
    *   The block ID.
    *
-   * @return \Drupal\Core\Block\BlockBase|null
+   * @return BlockBase|null
    *   The block object or null if block is not found or not accessible.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin definition is invalid.
    */
   public function getBlock(string $id) {
@@ -137,10 +139,10 @@ class BlockManager {
    * @param string $id
    *   The block ID.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The block render markup.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin definition is invalid.
    * @throws \Exception
    *   Thrown if the plugin definition is invalid.
@@ -156,10 +158,10 @@ class BlockManager {
   /**
    * Renders the block.
    *
-   * @param \Drupal\Core\Block\BlockBase $block
+   * @param BlockBase $block
    *   The block to render.
    *
-   * @return \Drupal\Component\Render\MarkupInterface
+   * @return MarkupInterface
    *   The block render markup.
    *
    * @throws \Exception
diff --git a/src/Services/FieldManager.php b/src/Services/FieldManager.php
index 8d2a327..390bf30 100644
--- a/src/Services/FieldManager.php
+++ b/src/Services/FieldManager.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\grapesjs_editor\Services;
 
+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Render\MarkupInterface;
+use Drupal\Core\GeneratedUrl;
 use Drupal\block_content\BlockContentTypeInterface;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ -20,60 +26,60 @@ class FieldManager {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The route match service.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * The entity type.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface|null
+   * @var EntityTypeInterface|null
    */
   protected $entityType;
 
   /**
    * The entity.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $entity;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * FieldManager constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager service.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if plugin definition is invalid.
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Thrown if plugin not found.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, RouteMatchInterface $route_match, RendererInterface $renderer) {
@@ -117,7 +123,7 @@ class FieldManager {
   /**
    * Returns the entity type object.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface|null
+   * @return EntityTypeInterface|null
    *   The entity type.
    */
   public function getEntityType() {
@@ -127,7 +133,7 @@ class FieldManager {
   /**
    * Returns the entity object.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity.
    */
   public function getEntity() {
@@ -137,7 +143,7 @@ class FieldManager {
   /**
    * Returns the field definition array.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface[]
+   * @return FieldDefinitionInterface[]
    *   The field definitions.
    */
   protected function getFieldDefinitions() {
@@ -155,7 +161,7 @@ class FieldManager {
   /**
    * Returns fields definitions without restricted fields.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface[]
+   * @return FieldDefinitionInterface[]
    *   The field definitions array.
    */
   public function getFields() {
@@ -181,7 +187,7 @@ class FieldManager {
    * @param string $name
    *   The field name.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface|null
+   * @return FieldDefinitionInterface|null
    *   The field object or null if field is not found or not accessible.
    */
   public function getField(string $name) {
@@ -211,7 +217,7 @@ class FieldManager {
    * @param string $name
    *   The field name.
    *
-   * @return array|\Drupal\Component\Render\MarkupInterface|string|string[]
+   * @return array|MarkupInterface|string|string[]
    *   The field render markup.
    *
    * @throws \Exception
@@ -228,10 +234,10 @@ class FieldManager {
   /**
    * Renders the field.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field to render.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|null
+   * @return MarkupInterface|null
    *   The field render markup.
    *
    * @throws \Exception
@@ -255,7 +261,7 @@ class FieldManager {
   /**
    * Generate the field route to request field renderer.
    *
-   * @return \Drupal\Core\GeneratedUrl|string
+   * @return GeneratedUrl|string
    *   The field route.
    */
   public function generateFieldRoute() {
diff --git a/src/Services/LibraryResolver.php b/src/Services/LibraryResolver.php
index d4dc317..a1be5b3 100644
--- a/src/Services/LibraryResolver.php
+++ b/src/Services/LibraryResolver.php
@@ -16,32 +16,32 @@ class LibraryResolver {
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The theme initialization service.
    *
-   * @var \Drupal\Core\Theme\ThemeInitializationInterface
+   * @var ThemeInitializationInterface
    */
   protected $themeInitialization;
 
   /**
    * The asset resolver service.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;
 
   /**
    * LibraryResolver constructor.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler service.
-   * @param \Drupal\Core\Theme\ThemeInitializationInterface $theme_initialization
+   * @param ThemeInitializationInterface $theme_initialization
    *   The theme initialization service.
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   The asset resolver service.
    */
   public function __construct(ThemeHandlerInterface $theme_handler, ThemeInitializationInterface $theme_initialization, AssetResolverInterface $asset_resolver) {
