diff --git a/tests/src/Functional/ViewsAccordionTest.php b/tests/src/Functional/ViewsAccordionTest.php
index 13f53c7..ce5dfdc 100644
--- a/tests/src/Functional/ViewsAccordionTest.php
+++ b/tests/src/Functional/ViewsAccordionTest.php
@@ -27,7 +27,7 @@ class ViewsAccordionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $user = $this->drupalCreateUser([
@@ -54,11 +54,13 @@ class ViewsAccordionTest extends BrowserTestBase {
       'page[style][style_plugin]' => 'views_accordion',
       'page[style][row_plugin]' => 'teasers',
     ];
-    $this->drupalPostForm('admin/structure/views/add', $edit, 'Save and edit');
+    $this->drupalGet('admin/structure/views/add');
+    $this->submitForm($edit, 'Save and edit');
     $assert_session->pageTextContains('Views accordion requires Fields as row style');
 
     $edit['page[style][row_plugin]'] = 'fields';
-    $this->drupalPostForm('admin/structure/views/add', $edit, 'Save and edit');
+    $this->drupalGet('admin/structure/views/add');
+    $this->submitForm($edit, 'Save and edit');
     $assert_session->pageTextContains('The view test has been saved.');
 
     // Assert the options of our exported view display correctly.
diff --git a/tests/src/FunctionalJavascript/ViewsAccordionTest.php b/tests/src/FunctionalJavascript/ViewsAccordionTest.php
index 3d186dc..823cbe3 100644
--- a/tests/src/FunctionalJavascript/ViewsAccordionTest.php
+++ b/tests/src/FunctionalJavascript/ViewsAccordionTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\views_accordion\FunctionalJavascript;
 
+use Drupal\node\NodeInterface;
+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\node\Traits\NodeCreationTrait;
 
@@ -28,28 +30,28 @@ class ViewsAccordionTest extends WebDriverTestBase {
   /**
    * The nodes created as part of this test.
    *
-   * @var \Drupal\node\NodeInterface[]
+   * @var NodeInterface[]
    */
   protected $nodes = [];
 
   /**
    * The first user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user1;
 
   /**
    * The second user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user2;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create a set of users and nodes for testing.
     $this->user1 = $this->createUser();
