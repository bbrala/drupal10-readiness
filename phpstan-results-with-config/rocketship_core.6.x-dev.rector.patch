diff --git a/assets/templates/generated_migrate.eventsubscriber_file.php.twig b/assets/templates/generated_migrate.eventsubscriber_file.php.twig
index bf7d350..1c578b3 100644
--- a/assets/templates/generated_migrate.eventsubscriber_file.php.twig
+++ b/assets/templates/generated_migrate.eventsubscriber_file.php.twig
@@ -10,7 +10,7 @@ use Drupal\layout_builder\InlineBlockUsageInterface;
 use Drupal\layout_builder\Plugin\Block\InlineBlock;
 use Drupal\migrate\Event\MigrateEvents;
 use Drupal\migrate\Event\MigratePostRowSaveEvent;
-use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use Symfony\Contracts\EventDispatcher\EventSubscriberInterface;
 
 /**
  * Class MigrateSubscriber
diff --git a/modules/menu_clickthrough/menu_clickthrough.module b/modules/menu_clickthrough/menu_clickthrough.module
index 9d2ffbd..b251895 100644
--- a/modules/menu_clickthrough/menu_clickthrough.module
+++ b/modules/menu_clickthrough/menu_clickthrough.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\menu_clickthrough\Menu\MenuHelperInterface;
+use Drupal\node\NodeInterface;
 /**
  * @file
  * Contains menu clickthrough module functionality.
@@ -153,17 +155,17 @@ function menu_clickthrough_form_alter(&$form, FormStateInterface $form_state, $f
     $entity_type = $entity->getEntityTypeId();
     switch ($entity_type) {
       case 'menu_link_content':
-        /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+        /** @var ContentEntityInterface $entity */
         _menu_clickthrough_hide_menu_link_content_field_form($entity, $form);
         break;
 
       case 'menu':
-        /** @var \Drupal\Core\Config\Entity\ConfigEntityInterface $entity */
+        /** @var ConfigEntityInterface $entity */
         _menu_clickthrough_add_menu_field_form($entity, $form);
         break;
 
       case 'node':
-        /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+        /** @var ContentEntityInterface $entity */
         _menu_clickthrough_add_node_field_form($entity, $form);
         break;
     }
@@ -173,7 +175,7 @@ function menu_clickthrough_form_alter(&$form, FormStateInterface $form_state, $f
 /**
  * Add stuff to form.
  *
- * @param \Drupal\Core\Config\Entity\ConfigEntityInterface $entity
+ * @param ConfigEntityInterface $entity
  *   Entity.
  * @param array $form
  *   Form.
@@ -196,7 +198,7 @@ function _menu_clickthrough_add_menu_field_form(ConfigEntityInterface $entity, a
 /**
  * Hides menu link content field.
  *
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  *   The entity.
  * @param array $form
  *   The form.
@@ -204,7 +206,7 @@ function _menu_clickthrough_add_menu_field_form(ConfigEntityInterface $entity, a
 function _menu_clickthrough_hide_menu_link_content_field_form(ContentEntityInterface $entity,
                                                               array &$form) {
   /** @var \Drupal\menu_link_content\MenuLinkContentInterface $entity */
-  /** @var \Drupal\menu_clickthrough\Menu\MenuHelperInterface $menu_helper */
+  /** @var MenuHelperInterface $menu_helper */
   $menu_helper = \Drupal::service('menu_clickthrough.menu_helper');
   if ($name = $entity->getMenuName()) {
     $menu = Menu::load($entity->getMenuName());
@@ -219,15 +221,15 @@ function _menu_clickthrough_hide_menu_link_content_field_form(ContentEntityInter
 /**
  * Alter for node add form.
  *
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  *   Entity.
  * @param array $form
  *   Form.
  */
 function _menu_clickthrough_add_node_field_form(ContentEntityInterface $entity, array &$form) {
-  /** @var \Drupal\node\NodeInterface $entity */
+  /** @var NodeInterface $entity */
   if (isset($form['menu'])) {
-    /** @var \Drupal\menu_clickthrough\Menu\MenuHelperInterface $menu_helper */
+    /** @var MenuHelperInterface $menu_helper */
     $menu_helper = \Drupal::service('menu_clickthrough.menu_helper');
 
     $menu = $menu_helper->getNodeEnabledMenu($entity);
@@ -262,17 +264,17 @@ function _menu_clickthrough_add_node_field_form(ContentEntityInterface $entity,
  *
  * @param array $form
  *   The form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function menu_clickthrough_form_node_form_submit(array $form, FormStateInterface $form_state) {
   if (!$form_state->isValueEmpty('menu')) {
     $values = $form_state->getValue('menu');
-    /** @var \Drupal\Core\Entity\EntityForm $form_object */
+    /** @var EntityForm $form_object */
     $form_object = $form_state->getFormObject();
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $form_object->getEntity();
-    /** @var \Drupal\menu_clickthrough\Menu\MenuHelperInterface $menu_helper */
+    /** @var MenuHelperInterface $menu_helper */
     $menu_helper = \Drupal::service('menu_clickthrough.menu_helper');
 
     $menu_link_content = $menu_helper->getMenuLinkFromNode($node);
diff --git a/modules/menu_clickthrough/src/Menu/MenuHelperInterface.php b/modules/menu_clickthrough/src/Menu/MenuHelperInterface.php
index 81fe1a5..20c342d 100644
--- a/modules/menu_clickthrough/src/Menu/MenuHelperInterface.php
+++ b/modules/menu_clickthrough/src/Menu/MenuHelperInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\menu_clickthrough\Menu;
 
+use Drupal\Core\Menu\MenuLinkInterface;
+use Drupal\menu_link_content\MenuLinkContentInterface;
 use Drupal\node\NodeInterface;
 use Drupal\system\Entity\Menu;
 
@@ -15,7 +17,7 @@ interface MenuHelperInterface {
   /**
    * Get menu links.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface[]
+   * @return MenuLinkInterface[]
    *   List of links.
    */
   public function getMenuLinks();
@@ -23,7 +25,7 @@ interface MenuHelperInterface {
   /**
    * Checks if the menu is enabled to support clickthrough.
    *
-   * @param \Drupal\system\Entity\Menu $menu
+   * @param Menu $menu
    *   Menu.
    *
    * @return bool
@@ -34,9 +36,9 @@ interface MenuHelperInterface {
   /**
    * Return a form api element for the menu clickthrough description field.
    *
-   * @param \Drupal\system\Entity\Menu $menu
+   * @param Menu $menu
    *   Menu.
-   * @param \Drupal\menu_link_content\MenuLinkContentInterface|null $menu_link_content
+   * @param MenuLinkContentInterface|null $menu_link_content
    *   Menu link.
    *
    * @return array
@@ -47,10 +49,10 @@ interface MenuHelperInterface {
   /**
    * Get menu link from node.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node.
    *
-   * @return \Drupal\menu_link_content\MenuLinkContentInterface|null
+   * @return MenuLinkContentInterface|null
    *   Menu link.
    */
   public function getMenuLinkFromNode(NodeInterface $node);
@@ -62,10 +64,10 @@ interface MenuHelperInterface {
    * for this node type. The main menu will always have priority and is checked
    * first.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node.
    *
-   * @return \Drupal\system\Entity\Menu|null
+   * @return Menu|null
    *   Menu.
    */
   public function getNodeEnabledMenu(NodeInterface $node);
diff --git a/modules/menu_clickthrough/src/Menu/MenuTreeStorageMenuHelper.php b/modules/menu_clickthrough/src/Menu/MenuTreeStorageMenuHelper.php
index 847f86f..4388a6d 100644
--- a/modules/menu_clickthrough/src/Menu/MenuTreeStorageMenuHelper.php
+++ b/modules/menu_clickthrough/src/Menu/MenuTreeStorageMenuHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\menu_clickthrough\Menu;
 
+use Drupal\Core\Menu\MenuTreeStorageInterface;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Menu\MenuLinkManagerInterface;
 use Drupal\Core\Menu\MenuLinkTreeElement;
 use Drupal\Core\Menu\MenuLinkTreeInterface;
@@ -20,23 +22,23 @@ class MenuTreeStorageMenuHelper implements MenuHelperInterface {
   /**
    * Drupal\Core\Menu\MenuLinkManagerInterface definition.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;
 
   /**
    * Drupal\Core\Menu\MenuTreeStorageInterface definition.
    *
-   * @var \Drupal\Core\Menu\MenuTreeStorageInterface
+   * @var MenuTreeStorageInterface
    */
   protected $menuLinkTree;
 
   /**
    * MenuTreeStorageMenuHelper constructor.
    *
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager
+   * @param MenuLinkManagerInterface $menu_link_manager
    *   Menu link manager.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree
+   * @param MenuLinkTreeInterface $menu_link_tree
    *   Link tree.
    */
   public function __construct(MenuLinkManagerInterface $menu_link_manager, MenuLinkTreeInterface $menu_link_tree) {
@@ -144,10 +146,10 @@ class MenuTreeStorageMenuHelper implements MenuHelperInterface {
    *   Menu links.
    * @param string $plugin_id
    *   plugin ID.
-   * @param \Drupal\Core\Menu\MenuLinkTreeElement $item
+   * @param MenuLinkTreeElement $item
    *   Menu item.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected function getFullTree(array &$menu_links,
                                  $plugin_id,
diff --git a/modules/menu_clickthrough/src/Path/CurrentPathHelper.php b/modules/menu_clickthrough/src/Path/CurrentPathHelper.php
index 2880b3d..b0b10b7 100644
--- a/modules/menu_clickthrough/src/Path/CurrentPathHelper.php
+++ b/modules/menu_clickthrough/src/Path/CurrentPathHelper.php
@@ -17,23 +17,23 @@ class CurrentPathHelper implements PathHelperInterface {
   /**
    * Drupal\Core\Routing\RouteMatchInterface definition.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Drupal\Core\Routing\RequestContext definition.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   private $context;
 
   /**
    * CurrentPathHelper constructor.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   Route match.
-   * @param \Drupal\Core\Routing\RequestContext $context
+   * @param RequestContext $context
    *   Context.
    */
   public function __construct(RouteMatchInterface $route_match, RequestContext $context) {
@@ -61,7 +61,7 @@ class CurrentPathHelper implements PathHelperInterface {
    * latter, because that's the "real" url that visitors enter in their
    * browser..
    *
-   * @return \Drupal\Core\Url|null
+   * @return Url|null
    *   Url.
    */
   protected function getCurrentRequestUrl() {
@@ -80,7 +80,7 @@ class CurrentPathHelper implements PathHelperInterface {
   /**
    * Get current path urls.
    *
-   * @return \Drupal\Core\Url[]
+   * @return Url[]
    *   Url array.
    */
   protected function getCurrentPathUrls() {
@@ -106,7 +106,7 @@ class CurrentPathHelper implements PathHelperInterface {
    * @param string $relativeUri
    *   Relative uri.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Url.
    */
   protected function createUrlFromRelativeUri($relativeUri) {
diff --git a/modules/menu_clickthrough/src/Path/PathHelperInterface.php b/modules/menu_clickthrough/src/Path/PathHelperInterface.php
index 706f1ab..8fd069a 100644
--- a/modules/menu_clickthrough/src/Path/PathHelperInterface.php
+++ b/modules/menu_clickthrough/src/Path/PathHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\menu_clickthrough\Path;
 
+use Drupal\Core\Url;
 /**
  * Interface PathHelperInterface.
  *
@@ -12,7 +13,7 @@ interface PathHelperInterface {
   /**
    * Get array of urls.
    *
-   * @return \Drupal\Core\Url[]
+   * @return Url[]
    *   Array of urls.
    */
   public function getUrls();
diff --git a/modules/menu_clickthrough/src/Plugin/Field/FieldFormatter/ClickthroughFormatter.php b/modules/menu_clickthrough/src/Plugin/Field/FieldFormatter/ClickthroughFormatter.php
index ae977f3..e4050eb 100644
--- a/modules/menu_clickthrough/src/Plugin/Field/FieldFormatter/ClickthroughFormatter.php
+++ b/modules/menu_clickthrough/src/Plugin/Field/FieldFormatter/ClickthroughFormatter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\menu_clickthrough\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\menu_link_content\MenuLinkContentInterface;
+use Drupal\Core\Url;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemInterface;
@@ -35,42 +38,42 @@ class ClickthroughFormatter extends FormatterBase implements ContainerFactoryPlu
   /**
    * Var.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuTree;
 
   /**
    * Var.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Var.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * Var.
    *
-   * @var \Drupal\menu_clickthrough\Path\PathHelperInterface
+   * @var PathHelperInterface
    */
   protected $pathHelper;
 
   /**
    * Var.
    *
-   * @var \Drupal\menu_clickthrough\Menu\MenuHelperInterface
+   * @var MenuHelperInterface
    */
   protected $menuHelper;
 
   /**
    * Language Manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -81,7 +84,7 @@ class ClickthroughFormatter extends FormatterBase implements ContainerFactoryPlu
    *   Plugin ID.
    * @param string $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   Field definition.
    * @param array $settings
    *   Settings.
@@ -91,17 +94,17 @@ class ClickthroughFormatter extends FormatterBase implements ContainerFactoryPlu
    *   View mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_tree
+   * @param MenuLinkTreeInterface $menu_tree
    *   Menu tree.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   Entity repo.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   Renderer.
-   * @param \Drupal\menu_clickthrough\Path\PathHelperInterface $path_helper
+   * @param PathHelperInterface $path_helper
    *   Path helper.
-   * @param \Drupal\menu_clickthrough\Menu\MenuHelperInterface $menu_helper
+   * @param MenuHelperInterface $menu_helper
    *   Menu helper.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   Language Manager.
    */
   public function __construct($plugin_id,
@@ -165,13 +168,13 @@ class ClickthroughFormatter extends FormatterBase implements ContainerFactoryPlu
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return array
    *   The textual output generated.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function viewValue(FieldItemInterface $item) {
     $parent = $item->menu;
@@ -240,7 +243,7 @@ class ClickthroughFormatter extends FormatterBase implements ContainerFactoryPlu
    * @return array
    *   Altered build.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function renderMenuOverview(array $build) {
     $language = $this->languageManager->getCurrentLanguage()->getId();
@@ -251,13 +254,13 @@ class ClickthroughFormatter extends FormatterBase implements ContainerFactoryPlu
           unset($build['#items'][$key]);
           continue;
         }
-        /** @var \Drupal\menu_link_content\MenuLinkContentInterface $entity */
+        /** @var MenuLinkContentInterface $entity */
         $entity = $this->entityRepository->loadEntityByUuid('menu_link_content', $item['original_link']->getDerivativeId());
         if ($entity->hasTranslation($language)) {
           $entity = $entity->getTranslation($language);
         }
 
-        /** @var \Drupal\Core\Url $url */
+        /** @var Url $url */
         $url = $item['url'];
         $link_text = t('Read more about') . ' '. $item['title'];
         $title = Link::fromTextAndUrl($item['title'], $url);
diff --git a/modules/menu_clickthrough/src/Plugin/Field/FieldWidget/ClickthroughWidget.php b/modules/menu_clickthrough/src/Plugin/Field/FieldWidget/ClickthroughWidget.php
index 91a14a9..98a7d78 100644
--- a/modules/menu_clickthrough/src/Plugin/Field/FieldWidget/ClickthroughWidget.php
+++ b/modules/menu_clickthrough/src/Plugin/Field/FieldWidget/ClickthroughWidget.php
@@ -28,14 +28,14 @@ class ClickthroughWidget extends WidgetBase implements ContainerFactoryPluginInt
   /**
    * Var.
    *
-   * @var \Drupal\Core\Menu\MenuParentFormSelector
+   * @var MenuParentFormSelector
    */
   protected $parentFormSelector;
 
   /**
    * Var.
    *
-   * @var \Drupal\menu_clickthrough\Menu\MenuHelperInterface
+   * @var MenuHelperInterface
    */
   protected $menuHelper;
 
@@ -46,15 +46,15 @@ class ClickthroughWidget extends WidgetBase implements ContainerFactoryPluginInt
    *   Plugin ID.
    * @param mixed $plugin_definition
    *   Plugin Definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   Field definition.
    * @param array $settings
    *   Settings.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Menu\MenuParentFormSelector $parent_form_selector
+   * @param MenuParentFormSelector $parent_form_selector
    *   Form selector.
-   * @param \Drupal\menu_clickthrough\Menu\MenuHelperInterface $menu_helper
+   * @param MenuHelperInterface $menu_helper
    *   Menu helper.
    */
   public function __construct($plugin_id,
diff --git a/modules/rocketship_blocks/rocketship_blocks.install b/modules/rocketship_blocks/rocketship_blocks.install
index c6e570c..52fd2a1 100644
--- a/modules/rocketship_blocks/rocketship_blocks.install
+++ b/modules/rocketship_blocks/rocketship_blocks.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Extension\ThemeHandlerInterface;
+use Drupal\migrate\MigrateExecutable;
 /**
  * @file
  * Install file.
@@ -22,7 +24,7 @@ function rocketship_blocks_install() {
     // themes is already active at the time.
     $config = \Drupal::config('system.theme');
     $theme = $config->get('default');
-    /** @var \Drupal\Core\Extension\ThemeHandlerInterface $handler */
+    /** @var ThemeHandlerInterface $handler */
     $handler = Drupal::service('theme_handler');
     if (!$handler->themeExists($theme)) {
       \Drupal::service('theme_installer')->install([$theme]);
@@ -40,7 +42,7 @@ function rocketship_blocks_install() {
     foreach ($migrations as $name) {
       $migration = $migrationManager->createInstance($name);
       if ($migration) {
-        $executable = new \Drupal\migrate\MigrateExecutable($migration);
+        $executable = new MigrateExecutable($migration);
         $executable->import();
       }
     }
@@ -66,7 +68,7 @@ function rocketship_blocks_uninstall() {
     foreach ($migrations as $name) {
       $migration = $migrationManager->createInstance($name);
       if ($migration) {
-        $executable = new \Drupal\migrate\MigrateExecutable($migration);
+        $executable = new MigrateExecutable($migration);
         $executable->rollback();
       }
       \Drupal::configFactory()
diff --git a/modules/rocketship_blocks/rocketship_blocks.module b/modules/rocketship_blocks/rocketship_blocks.module
index fc2a3a7..b53f9a2 100644
--- a/modules/rocketship_blocks/rocketship_blocks.module
+++ b/modules/rocketship_blocks/rocketship_blocks.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\Core\Extension\ThemeHandlerInterface;
+use Drupal\Core\Extension\Extension;
+use Drupal\block_content\Entity\BlockContent;
+use Drupal\link\LinkItemInterface;
 use Drupal\block_content\BlockContentInterface;
 use Drupal\block_content\BlockContentTypeInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -14,7 +18,7 @@ use Drupal\Core\Url;
  * Implements hook_themes_installed().
  */
 function rocketship_blocks_themes_installed($theme_list) {
-  /** @var \Drupal\Core\Extension\ThemeHandlerInterface $handler */
+  /** @var ThemeHandlerInterface $handler */
   $handler = Drupal::service('theme_handler');
 
   foreach ($theme_list as $theme) {
@@ -28,7 +32,7 @@ function rocketship_blocks_themes_installed($theme_list) {
 /**
  * Place our blocks in the footer region of the provided theme.
  *
- * @param \Drupal\Core\Extension\Extension $theme
+ * @param Extension $theme
  *   Theme name.
  */
 function rocketship_blocks_place_default_blocks($theme) {
@@ -77,7 +81,7 @@ function rocketship_blocks_module_implements_alter(&$implementations, $hook) {
 function rocketship_blocks_preprocess_block(&$variables) {
 
   if (isset($variables['elements']['content']['#block_content']) && $variables['elements']['content']['#block_content'] instanceof BlockContentInterface) {
-    /** @var \Drupal\block_content\Entity\BlockContent $content_block */
+    /** @var BlockContent $content_block */
     $content_block = $variables['elements']['content']['#block_content'];
     $type = $content_block->bundle();
 
@@ -126,7 +130,7 @@ function rocketship_blocks_preprocess_block(&$variables) {
 
     // Generic support for image wrapper link.
     if ($content_block->hasField('field_cb_image_wrapper_link') && $content_block->get('field_cb_image_wrapper_link')->uri) {
-      /** @var \Drupal\link\LinkItemInterface $item */
+      /** @var LinkItemInterface $item */
       $item = $content_block->get('field_cb_image_wrapper_link')->first();
       $url = $item->getUrl() ?: Url::fromRoute('<none>');
       $options = $item->options;
@@ -315,7 +319,7 @@ function rocketship_blocks_theme($existing, $type, $theme, $path) {
  * Implements hook_migration_plugins_alter().
  */
 function rocketship_blocks_migration_plugins_alter(&$definitions) {
-  $path = drupal_get_path('module', 'rocketship_blocks');
+  $path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks');
   $definitions['rs_blocks_images']['source']['path'] = $path . $definitions['rs_blocks_images']['source']['path'];
   $definitions['rs_blocks_image_media']['source']['path'] = $path . $definitions['rs_blocks_image_media']['source']['path'];
   $definitions['rs_blocks_image_blocks']['source']['path'] = $path . $definitions['rs_blocks_image_blocks']['source']['path'];
@@ -371,7 +375,7 @@ function rocketship_blocks_form_block_type_form_builder($entity_type, BlockConte
 
 /**
  * @param $element
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _rs_blocks_validate_icon_path($element, FormStateInterface $form_state) {
   $value = $element['#value'] ?? NULL;
diff --git a/modules/rocketship_blocks/src/Controller/ChooseBlockController.php b/modules/rocketship_blocks/src/Controller/ChooseBlockController.php
index c97e12f..419fe1c 100644
--- a/modules/rocketship_blocks/src/Controller/ChooseBlockController.php
+++ b/modules/rocketship_blocks/src/Controller/ChooseBlockController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rocketship_blocks\Controller;
 
+use Drupal\block_content\BlockContentTypeInterface;
 use Drupal\block_content\Entity\BlockContentType;
 use Drupal\Core\Url;
 use Drupal\layout_builder_restrictions\Controller\ChooseBlockController as ChooseBlockControllerCore;
@@ -55,13 +56,13 @@ class ChooseBlockController extends ChooseBlockControllerCore {
    */
   protected function getBlockLinks(SectionStorageInterface $section_storage, int $delta, $region, array $blocks) {
     $links = [];
-    $icons_folder_path = drupal_get_path('module', 'rocketship_blocks') . '/assets/images/';
-    $default_icon_path = file_create_url($icons_folder_path . 'default-block.svg');
+    $icons_folder_path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks') . '/assets/images/';
+    $default_icon_path = \Drupal::service('file_url_generator')->generateAbsoluteString($icons_folder_path . 'default-block.svg');
     foreach ($blocks as $block_id => $block) {
       $description = '';
       $icon_path = $default_icon_path;
       if ($block['category'] == (string) $this->t('Inline blocks')) {
-        /** @var \Drupal\block_content\BlockContentTypeInterface $block_type */
+        /** @var BlockContentTypeInterface $block_type */
         $block_type = BlockContentType::load(str_replace('inline_block:', '', $block_id));
         if ($block_type) {
           if ($block_type->getThirdPartySetting('rocketship_blocks', 'icon_path', NULL)) {
diff --git a/modules/rocketship_blocks/src/EventSubscriber/RocketshipBlocksSectionLibraryTemplateMigrateSubscriber.php b/modules/rocketship_blocks/src/EventSubscriber/RocketshipBlocksSectionLibraryTemplateMigrateSubscriber.php
index 339f8dc..9234b96 100644
--- a/modules/rocketship_blocks/src/EventSubscriber/RocketshipBlocksSectionLibraryTemplateMigrateSubscriber.php
+++ b/modules/rocketship_blocks/src/EventSubscriber/RocketshipBlocksSectionLibraryTemplateMigrateSubscriber.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\rocketship_blocks\EventSubscriber;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\layout_builder\Section;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -29,32 +32,32 @@ class RocketshipBlocksSectionLibraryTemplateMigrateSubscriber implements EventSu
   ];
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
-   * @var \Drupal\layout_builder\InlineBlockUsageInterface
+   * @var InlineBlockUsageInterface
    */
   protected $inlineBlockUsage;
 
   /**
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * MigrateSubscriber constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
-   * @param \Drupal\layout_builder\InlineBlockUsageInterface $inlineBlockUsage
+   * @param EntityTypeManagerInterface $entityTypeManager
+   * @param EntityFieldManagerInterface $entityFieldManager
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param InlineBlockUsageInterface $inlineBlockUsage
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, EntityFieldManagerInterface $entityFieldManager, LoggerChannelFactoryInterface $loggerChannelFactory, InlineBlockUsageInterface $inlineBlockUsage) {
     $this->entityTypeManager = $entityTypeManager;
@@ -73,9 +76,9 @@ class RocketshipBlocksSectionLibraryTemplateMigrateSubscriber implements EventSu
   }
 
   /**
-   * @param \Drupal\migrate\Event\MigratePostRowSaveEvent $event
+   * @param MigratePostRowSaveEvent $event
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    * @throws \ReflectionException
    */
   public function onMigratePostRowSaveEvent(MigratePostRowSaveEvent $event) {
@@ -112,7 +115,7 @@ class RocketshipBlocksSectionLibraryTemplateMigrateSubscriber implements EventSu
         if ($field->getType() === 'layout_section') {
           $data = $entity->get($field->getName());
           foreach ($data as $item) {
-            /** @var \Drupal\layout_builder\Section $section */
+            /** @var Section $section */
             $section = $item->section;
             foreach ($section->getComponents() as $component) {
               $plugin = $component->getPlugin();
diff --git a/modules/rocketship_blocks/src/Form/SimpleSearchForm.php b/modules/rocketship_blocks/src/Form/SimpleSearchForm.php
index f68aa73..d8fa085 100644
--- a/modules/rocketship_blocks/src/Form/SimpleSearchForm.php
+++ b/modules/rocketship_blocks/src/Form/SimpleSearchForm.php
@@ -17,23 +17,23 @@ class SimpleSearchForm extends FormBase {
   /**
    * Symfony\Component\HttpFoundation\RequestStack definition.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * SimpleSearchForm constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Request stack.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $config_manager
+   * @param ConfigManagerInterface $config_manager
    *   Config manager.
    */
   public function __construct(
@@ -101,7 +101,7 @@ class SimpleSearchForm extends FormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function resetForm(array &$form, FormStateInterface $form_state) {
@@ -128,7 +128,7 @@ class SimpleSearchForm extends FormBase {
    *   The configuration.
    * @param string $value
    *   The value.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function redirectForm(array $configuration,
diff --git a/modules/rocketship_blocks/src/Plugin/Block/CopyrightBlock.php b/modules/rocketship_blocks/src/Plugin/Block/CopyrightBlock.php
index b562bc2..5e270fc 100644
--- a/modules/rocketship_blocks/src/Plugin/Block/CopyrightBlock.php
+++ b/modules/rocketship_blocks/src/Plugin/Block/CopyrightBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rocketship_blocks\Plugin\Block;
 
+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\node\NodeInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Entity\EntityRepositoryInterface;
@@ -26,26 +28,26 @@ class CopyrightBlock extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Drupal\Core\Entity\EntityTypeManager definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Render\RendererInterface definition.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   private $entityRepository;
 
@@ -55,10 +57,10 @@ class CopyrightBlock extends BlockBase implements ContainerFactoryPluginInterfac
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Render\RendererInterface $renderer
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param ConfigFactoryInterface $config_factory
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param RendererInterface $renderer
+   * @param EntityRepositoryInterface $entityRepository
    */
   public function __construct(
     array $configuration,
@@ -155,7 +157,7 @@ class CopyrightBlock extends BlockBase implements ContainerFactoryPluginInterfac
 
     $terms_of_use = '';
     if ($this->configuration['terms_of_use']) {
-      /** @var \Drupal\node\NodeInterface $node */
+      /** @var NodeInterface $node */
       $node = $this->entityTypeManager->getStorage('node')
         ->load($this->configuration['terms_of_use']);
       if ($node) {
@@ -170,7 +172,7 @@ class CopyrightBlock extends BlockBase implements ContainerFactoryPluginInterfac
     }
     $privacy_policy = '';
     if ($this->configuration['privacy_policy']) {
-      /** @var \Drupal\node\NodeInterface $node */
+      /** @var NodeInterface $node */
       $node = $this->entityTypeManager->getStorage('node')
         ->load($this->configuration['privacy_policy']);
       if ($node) {
diff --git a/modules/rocketship_blocks/src/Plugin/Block/SearchRedirectBlock.php b/modules/rocketship_blocks/src/Plugin/Block/SearchRedirectBlock.php
index ed96247..6caab70 100644
--- a/modules/rocketship_blocks/src/Plugin/Block/SearchRedirectBlock.php
+++ b/modules/rocketship_blocks/src/Plugin/Block/SearchRedirectBlock.php
@@ -23,7 +23,7 @@ class SearchRedirectBlock extends BlockBase implements ContainerFactoryPluginInt
   /**
    * Form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
@@ -36,7 +36,7 @@ class SearchRedirectBlock extends BlockBase implements ContainerFactoryPluginInt
    *   Plugin ID.
    * @param string $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
+   * @param FormBuilderInterface $formBuilder
    *   Form builder.
    */
   public function __construct(
diff --git a/modules/rocketship_blocks_content/rocketship_blocks_content.module b/modules/rocketship_blocks_content/rocketship_blocks_content.module
index cc8c520..0403a4d 100644
--- a/modules/rocketship_blocks_content/rocketship_blocks_content.module
+++ b/modules/rocketship_blocks_content/rocketship_blocks_content.module
@@ -4,7 +4,7 @@
  * Implements hook_migration_plugins_alter().
  */
 function rocketship_blocks_content_migration_plugins_alter(&$definitions) {
-  $path = drupal_get_path('module', 'rocketship_blocks_content');
+  $path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks_content');
   $migrations = _rocketship_blocks_content_content_migrates();
 
   foreach ($migrations as $migration) {
diff --git a/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php b/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php
index 4b3de2e..91ec05c 100644
--- a/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php
+++ b/modules/rocketship_blocks_content/src/EventSubscriber/MigrateSubscriber.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\rocketship_blocks_content\EventSubscriber;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\layout_builder\Section;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ -22,32 +26,32 @@ use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 class MigrateSubscriber implements EventSubscriberInterface {
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
-   * @var \Drupal\layout_builder\InlineBlockUsageInterface
+   * @var InlineBlockUsageInterface
    */
   protected $inlineBlockUsage;
 
   /**
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * MigrateSubscriber constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
-   * @param \Drupal\layout_builder\InlineBlockUsageInterface $inlineBlockUsage
+   * @param EntityTypeManagerInterface $entityTypeManager
+   * @param EntityFieldManagerInterface $entityFieldManager
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param InlineBlockUsageInterface $inlineBlockUsage
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, EntityFieldManagerInterface $entityFieldManager, LoggerChannelFactoryInterface $loggerChannelFactory, InlineBlockUsageInterface $inlineBlockUsage) {
     $this->entityTypeManager = $entityTypeManager;
@@ -66,11 +70,11 @@ class MigrateSubscriber implements EventSubscriberInterface {
   }
 
   /**
-   * @param \Drupal\migrate\Event\MigrateImportEvent $event
+   * @param MigrateImportEvent $event
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function onMigratePostImportEvent(MigrateImportEvent $event) {
     // So this used to be in the post row event, and checked for the node migrate.
@@ -88,7 +92,7 @@ class MigrateSubscriber implements EventSubscriberInterface {
     $entity_type_id = 'node';
     $entity_type_storage = $this->entityTypeManager->getStorage($entity_type_id);
 
-    $path = drupal_get_path('module', 'rocketship_blocks_content');
+    $path = \Drupal::service('extension.list.module')->getPath('rocketship_blocks_content');
     $handle = fopen("$path/assets/csv/rocketship_blocks_content_node_page.csv", "r");
     // skip first line
     fgetcsv($handle);
@@ -100,7 +104,7 @@ class MigrateSubscriber implements EventSubscriberInterface {
           if ($field->getType() === 'layout_section') {
             $data = $entity->get($field->getName());
             foreach ($data as $item) {
-              /** @var \Drupal\layout_builder\Section $section */
+              /** @var Section $section */
               $section = $item->section;
               foreach ($section->getComponents() as $component) {
                 $plugin = $component->getPlugin();
diff --git a/modules/rocketship_content/rocketship_content.module b/modules/rocketship_content/rocketship_content.module
index 31f3fd1..680ea20 100644
--- a/modules/rocketship_content/rocketship_content.module
+++ b/modules/rocketship_content/rocketship_content.module
@@ -4,7 +4,7 @@
  * Implements hook_migration_plugins_alter().
  */
 function rocketship_content_migration_plugins_alter(&$definitions) {
-  $path = drupal_get_path('module', 'rocketship_content');
+  $path = \Drupal::service('extension.list.module')->getPath('rocketship_content');
   $migrations = _rocketship_content_content_migrates();
 
   foreach ($migrations as $migration) {
diff --git a/modules/rocketship_content/src/EventSubscriber/RocketshipCoreDemoContentSubscriber.php b/modules/rocketship_content/src/EventSubscriber/RocketshipCoreDemoContentSubscriber.php
index fc20350..5715b28 100644
--- a/modules/rocketship_content/src/EventSubscriber/RocketshipCoreDemoContentSubscriber.php
+++ b/modules/rocketship_content/src/EventSubscriber/RocketshipCoreDemoContentSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rocketship_content\EventSubscriber;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\simple_sitemap\Simplesitemap;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\migrate\Event\MigrateEvents;
 use Drupal\migrate\Event\MigratePostRowSaveEvent;
@@ -17,14 +19,14 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
   /**
    * Var.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * RocketshipCookiePolicySubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -46,10 +48,10 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
    * This does assume there's only one node being migrated. If there are
    * multiple then the last one will stick, as this is executed for every row.
    *
-   * @param \Drupal\migrate\Event\MigratePostRowSaveEvent $event
+   * @param MigratePostRowSaveEvent $event
    *   The event.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function onMigratePostRowSaveEvent(MigratePostRowSaveEvent $event) {
     $migration = $event->getMigration();
@@ -81,10 +83,10 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
    *
    * Replaces metatags and delete metatag 403 defaults.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp403Page(NodeInterface $node) {
     $this->configFactory->getEditable('system.site')
@@ -108,7 +110,7 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
 
     try {
       // Exclude this page from being indexed.
-      /** @var \Drupal\simple_sitemap\Simplesitemap $generator */
+      /** @var Simplesitemap $generator */
       $generator = \Drupal::service('simple_sitemap.generator');
       $settings = [
         'index' => FALSE,
@@ -129,10 +131,10 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
    *
    * Replaces metatags and delete metatag 404 defaults.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp404Page(NodeInterface $node) {
     $this->configFactory->getEditable('system.site')
@@ -156,7 +158,7 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
 
     try {
       // Exclude this page from being indexed.
-      /** @var \Drupal\simple_sitemap\Simplesitemap $generator */
+      /** @var Simplesitemap $generator */
       $generator = \Drupal::service('simple_sitemap.generator');
       $settings = [
         'index' => FALSE,
@@ -177,10 +179,10 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
    *
    * Replaces metatags and delete metatag frontpage defaults.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUpHomepage(NodeInterface $node) {
     $this->configFactory->getEditable('system.site')
@@ -209,7 +211,7 @@ class RocketshipCoreDemoContentSubscriber implements EventSubscriberInterface {
       // Exclude this page from being indexed, homepage gets indexed as is
       // because we added it as custom link. If we index this node, it'll get
       // indexed using its alias. No bueno.
-      /** @var \Drupal\simple_sitemap\Simplesitemap $generator */
+      /** @var Simplesitemap $generator */
       $generator = \Drupal::service('simple_sitemap.generator');
       $settings = [
         'index' => FALSE,
diff --git a/modules/rocketship_page/rocketship_page.module b/modules/rocketship_page/rocketship_page.module
index 85f0812..55cbf73 100644
--- a/modules/rocketship_page/rocketship_page.module
+++ b/modules/rocketship_page/rocketship_page.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ThemeHandlerInterface;
 /**
  * Implements hook_themes_installed().
  *
@@ -7,7 +8,7 @@
  * is already active at the time.
  */
 function rocketship_page_themes_installed($theme_list) {
-  /** @var \Drupal\Core\Extension\ThemeHandlerInterface $handler */
+  /** @var ThemeHandlerInterface $handler */
   $handler = Drupal::service('theme_handler');
 
   foreach ($theme_list as $theme) {
@@ -29,4 +30,4 @@ function rocketship_page_module_implements_alter(&$implementations, $hook) {
     unset($implementations['rocketship_page']);
     $implementations['rocketship_page'] = $group;
   }
-}
\ No newline at end of file
+}
diff --git a/modules/rocketship_seo/rocketship_seo.install b/modules/rocketship_seo/rocketship_seo.install
index 8acfc9f..29cd568 100644
--- a/modules/rocketship_seo/rocketship_seo.install
+++ b/modules/rocketship_seo/rocketship_seo.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\simple_sitemap\Simplesitemap;
 /**
  * @file
  * Install file.
@@ -75,7 +76,7 @@ function rocketship_seo_requirements($phase) {
         $nid = str_replace('node/', '', $frontpage_path);
         $node = Node::load($nid);
         if ($node) {
-          /** @var \Drupal\simple_sitemap\Simplesitemap $generator */
+          /** @var Simplesitemap $generator */
           $generator = \Drupal::service('simple_sitemap.generator');
           $settings = $generator->getEntityInstanceSettings($node->getEntityTypeId(), $node->id());
           if (!empty($settings['index'])) {
@@ -108,7 +109,7 @@ function rocketship_seo_requirements($phase) {
       'description' => t('Because we do not index the node or path itself, we must create a manual entry for the homepage.'),
       'severity' => REQUIREMENT_OK,
     ];
-    /** @var \Drupal\simple_sitemap\Simplesitemap $generator */
+    /** @var Simplesitemap $generator */
     $generator = \Drupal::service('simple_sitemap.generator');
     $link = $generator->getCustomLinks('/');
     if (!$link) {
diff --git a/modules/rocketship_seo/rocketship_seo.module b/modules/rocketship_seo/rocketship_seo.module
index 502b6df..1c9369a 100644
--- a/modules/rocketship_seo/rocketship_seo.module
+++ b/modules/rocketship_seo/rocketship_seo.module
@@ -139,7 +139,7 @@ function rocketship_seo_preprocess(&$variables, $hook) {
  */
 function rocketship_seo_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
 
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   $node = $form_state->getFormObject()->getEntity();
   $node_type = NodeType::load($node->bundle());
 
@@ -181,7 +181,7 @@ function rocketship_seo_form_node_form_alter(&$form, FormStateInterface $form_st
  */
 function rocketship_seo_form_node_type_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   // Set default value of the help text form element on node type form.
-  /** @var \Drupal\node\NodeTypeInterface $node_type */
+  /** @var NodeTypeInterface $node_type */
   $node_type = $form_state->getFormObject()->getEntity();
 
   $options = [];
diff --git a/modules/rocketship_social_widgets/src/Form/SocialShareLinkForm.php b/modules/rocketship_social_widgets/src/Form/SocialShareLinkForm.php
index dd8dc1e..deeb42d 100644
--- a/modules/rocketship_social_widgets/src/Form/SocialShareLinkForm.php
+++ b/modules/rocketship_social_widgets/src/Form/SocialShareLinkForm.php
@@ -19,7 +19,7 @@ class SocialShareLinkForm extends EntityForm {
   /**
    * Constructs an SocialShareLinkForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entityTypeManager.
    */
   public function __construct(EntityTypeManager $entityTypeManager, SocialShareLinkManager $socialShareLinkManager) {
diff --git a/modules/rocketship_social_widgets/src/Plugin/Block/SocialSharingBlock.php b/modules/rocketship_social_widgets/src/Plugin/Block/SocialSharingBlock.php
index 3239be7..9066994 100644
--- a/modules/rocketship_social_widgets/src/Plugin/Block/SocialSharingBlock.php
+++ b/modules/rocketship_social_widgets/src/Plugin/Block/SocialSharingBlock.php
@@ -23,17 +23,17 @@ use Drupal\Core\Url;
 class SocialSharingBlock extends BlockBase implements ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
-   * @var \Drupal\rocketship_social_widgets\SocialShareLinkManager
+   * @var SocialShareLinkManager
    */
   protected $socialShareLinksManager;
 
@@ -46,11 +46,11 @@ class SocialSharingBlock extends BlockBase implements ContainerFactoryPluginInte
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Interface for a configuration object factory.
-   * @param \Drupal\Core\Path\CurrentPathStack $currentPath
+   * @param CurrentPathStack $currentPath
    *   Current path for the current request.
-   * @param \Drupal\rocketship_social_widgets\SocialShareLinkManager $socialShareLinksManager
+   * @param SocialShareLinkManager $socialShareLinksManager
    *   The Social Share links manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition,
diff --git a/modules/rocketship_social_widgets/src/SocialShareLinkManager.php b/modules/rocketship_social_widgets/src/SocialShareLinkManager.php
index 0486275..60c75b9 100644
--- a/modules/rocketship_social_widgets/src/SocialShareLinkManager.php
+++ b/modules/rocketship_social_widgets/src/SocialShareLinkManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rocketship_social_widgets;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Component\Utility\SortArray;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,13 +16,13 @@ use Drupal\Core\Entity\EntityTypeManagerInterface;
 class SocialShareLinkManager implements ContainerInjectionInterface {
 
   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $shareLinkManager;
 
   /**
    * SocialShareLinkManager constructor.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
     $this->shareLinkManager = $entityTypeManager->getStorage('social_share_link');
@@ -36,7 +38,7 @@ class SocialShareLinkManager implements ContainerInjectionInterface {
   }
 
   /**
-   * @return array|\Drupal\Core\Entity\EntityInterface[]
+   * @return array|EntityInterface[]
    */
   public function getSocialShareLinks(){
     $links = $this->shareLinkManager->loadMultiple();
diff --git a/rocketship_core.module b/rocketship_core.module
index 27693ac..d694fe2 100644
--- a/rocketship_core.module
+++ b/rocketship_core.module
@@ -1,5 +1,16 @@
 <?php
 
+use Drupal\Core\Extension\ThemeHandlerInterface;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+use Drupal\node\NodeInterface;
+use Drupal\Core\Entity\EntityRepositoryInterface;
+use Drupal\rocketship_core\MigrateGenerator;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\user\RoleInterface;
+use Drupal\Core\Extension\ModuleInstallerInterface;
+use Drupal\Component\Uuid\UuidInterface;
+use Drupal\block\BlockInterface;
 define('ROCKETSHIP_FEATURES_MENU_LINK', '48a98eba-72c7-4e43-9f99-58af7623ce2d');
 
 use Drupal\block\Entity\Block;
@@ -47,7 +58,7 @@ function rocketship_core_field_storage_config_presave(FieldStorageConfigInterfac
  * Implements hook_themes_installed().
  */
 function rocketship_core_themes_installed($theme_list) {
-  /** @var \Drupal\Core\Extension\ThemeHandlerInterface $handler */
+  /** @var ThemeHandlerInterface $handler */
   $handler = Drupal::service('theme_handler');
 
   foreach ($theme_list as $theme) {
@@ -170,19 +181,19 @@ function rocketship_core_tokens($type, $tokens, array $data, array $options, Bub
  * Implements hook_ENTITY_TYPE_update() for 'path_alias'.
  */
 function rocketship_core_path_alias_update(PathAliasInterface $path_alias) {
-  /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher */
+  /** @var EventDispatcherInterface $event_dispatcher */
   $event_dispatcher = \Drupal::service('event_dispatcher');
 
   // Dispatch the path alias update event.
   $event = new PathAliasUpdateEvent($path_alias);
-  $event_dispatcher->dispatch(PathAliasUpdateEvent::PATH_ALIAS_UPDATE, $event);
+  $event_dispatcher->dispatch($event, PathAliasUpdateEvent::PATH_ALIAS_UPDATE);
 }
 
 /**
  * Implements hook_BASE_FORM_ID_alter().
  */
 function rocketship_core_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   $node = $form_state
     ->getFormObject()
     ->getEntity();
@@ -229,7 +240,7 @@ function rocketship_core_form_node_form_alter(&$form, FormStateInterface $form_s
 
 /**
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _rocketship_core_submit_redirect_to_manage_content($form, FormStateInterface $form_state) {
   // todo: make sure to send them to correct language?
@@ -417,7 +428,7 @@ function rocketship_core_blazy_alter(array &$build, array $settings = []) {
       // wind up at a non-Paragraph entity. If it's already a non-Paragraph
       // entity nothing will happen.
       $entity = Rocketship::getHighestLevelParentEntity($entity);
-      /** @var \Drupal\Core\Entity\EntityRepositoryInterface $repo */
+      /** @var EntityRepositoryInterface $repo */
       $repo = \Drupal::service('entity.repository');
       $entity = $repo->getTranslationFromContext($entity);
 
@@ -451,7 +462,7 @@ function rocketship_core_get_default_content_default_language() {
  * Implements hook_language_switch_links_alter().
  *
  */
-function rocketship_core_language_switch_links_alter(array &$links, $type, \Drupal\Core\Url $url) {
+function rocketship_core_language_switch_links_alter(array &$links, $type, Url $url) {
   // if a theme setting exists (and is true) to set an abbreviated language as text, do it
   $lang_abbr = theme_get_setting('language_abbr');
 
@@ -470,7 +481,7 @@ function rocketship_core_language_switch_links_alter(array &$links, $type, \Drup
 class Rocketship {
 
   public static function generateMigrate($entity_type_id, $ids = [], $bundles = [], $module_name = 'rs_generated_migrate', $default_content_mode = FALSE) {
-    $generator = new \Drupal\rocketship_core\MigrateGenerator($entity_type_id, $bundles, $ids, $module_name, $default_content_mode);
+    $generator = new MigrateGenerator($entity_type_id, $bundles, $ids, $module_name, $default_content_mode);
     return $generator->generateMigrate();
   }
 
@@ -511,9 +522,9 @@ class Rocketship {
   }
 
   /**
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function ensureFeaturesMenuLinkExists() {
     $menuLink = \Drupal::entityTypeManager()->getStorage('menu_link_content')
@@ -542,9 +553,9 @@ class Rocketship {
   }
 
   /**
-   * @param \Drupal\Core\Extension\Extension $theme
+   * @param Extension $theme
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public static function placeLanguageSwitcherBlockIfMultilingual(Extension $theme) {
     $block = Block::load('languageswitcher');
@@ -617,7 +628,7 @@ class Rocketship {
    * @param string $module
    *   Module name.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public static function updateRolePermissionsForModule($module) {
 
@@ -625,7 +636,7 @@ class Rocketship {
         ->getModule($module)
         ->getPath() . '/permissions';
 
-    /** @var \Drupal\user\RoleInterface[] $roles */
+    /** @var RoleInterface[] $roles */
     $roles = Role::loadMultiple();
 
     foreach ($roles as $role) {
@@ -645,7 +656,7 @@ class Rocketship {
   /**
    * Get module installer service.
    *
-   * @return \Drupal\Core\Extension\ModuleInstallerInterface
+   * @return ModuleInstallerInterface
    *   Service.
    */
   public static function getModuleInstaller() {
@@ -655,7 +666,7 @@ class Rocketship {
   /**
    * Get UUID Generator service.
    *
-   * @return \Drupal\Component\Uuid\UuidInterface
+   * @return UuidInterface
    *   Service.
    */
   public static function getUuidGenerator() {
@@ -663,9 +674,9 @@ class Rocketship {
   }
 
   /**
-   * @return bool|\Drupal\Core\Entity\EntityInterface|mixed
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return bool|EntityInterface|mixed
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function loadMigratedFrontpageNode() {
     if (\Drupal::moduleHandler()->moduleExists('rocketship_content')) {
@@ -684,7 +695,7 @@ class Rocketship {
    * @param array $settings
    *   Block settings.
    *
-   * @return bool|\Drupal\block\BlockInterface
+   * @return bool|BlockInterface
    *   FALSE on failure or the Block that was just placed.
    */
   public static function placeBlock($plugin_id, array $settings = []) {
@@ -798,7 +809,7 @@ class Rocketship {
     ];
 
     foreach ($blocks as $config_name) {
-      /** @var \Drupal\block\BlockInterface $block */
+      /** @var BlockInterface $block */
       $block = Block::load($config_name);
       if ($block) {
         $visibility = $block->getVisibility();
@@ -846,7 +857,7 @@ function rocketship_core_page_attachments(array &$attachments) {
  * SEE https://www.drupal.org/project/drupal/issues/3032456
  */
 function rocketship_core_link_alter(&$variables) {
-  /** @var Drupal\Core\Url $url */
+  /** @var Url $url */
   $url = $variables['url'];
   $config = \Drupal::config('layout_builder_modal.settings');
 
@@ -961,7 +972,7 @@ function rocketship_core_module_implements_alter(&$implementations, $hook) {
 /**
  * Implements hook_form_BASE_FORM_ID_alter().
  */
-function rocketship_core_form_node_layout_builder_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function rocketship_core_form_node_layout_builder_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $form['actions']['submit']['#value'] = t('Save content');
 
   rocketship_core_form_entity_view_display_layout_builder_form_alter($form, $form_state, $form_id);
@@ -970,7 +981,7 @@ function rocketship_core_form_node_layout_builder_form_alter(&$form, \Drupal\Cor
 /**
  * Implements hook_form_BASE_FORM_ID_alter().
  */
-function rocketship_core_form_entity_view_display_layout_builder_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function rocketship_core_form_entity_view_display_layout_builder_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $form['actions']['preview_toggle']['toggle_content_preview'] = [
     '#type' => 'select',
     '#title' => t('Change content preview'),
@@ -1009,7 +1020,7 @@ function rocketship_core_form_layout_builder_update_block_alter(&$form, FormStat
   if (empty($form['settings']['label']['#default_value'])) {
     $form['settings']['label']['#default_value'] = 'Inline block';
     if ($form['settings']['block_form']['#block'] instanceof BlockContent) {
-      /** @var \Drupal\block_content\Entity\BlockContent $block */
+      /** @var BlockContent $block */
       $block = $form['settings']['block_form']['#block'];
       $form['settings']['label']['#default_value'] = t(
         'Inline block: @block_bundle',
@@ -1034,7 +1045,7 @@ function rocketship_core_form_layout_builder_add_block_alter(&$form, FormStateIn
  * Implements hook_form_FORM_ID_alter().
  * @see https://www.drupal.org/project/rocketship_core/issues/3222425
  */
-function rocketship_core_form_search_api_fulltext_facet_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function rocketship_core_form_search_api_fulltext_facet_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $form_state->setRequestMethod('POST');
   $form_state->setCached(TRUE);
 }
diff --git a/src/Event/PathAliasUpdateEvent.php b/src/Event/PathAliasUpdateEvent.php
index d4337e8..e5d0d6a 100644
--- a/src/Event/PathAliasUpdateEvent.php
+++ b/src/Event/PathAliasUpdateEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\rocketship_core\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\path_alias\PathAliasInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class PathAliasUpdateEvent.
@@ -20,14 +20,14 @@ class PathAliasUpdateEvent extends Event {
   /**
    * The path alias entity.
    *
-   * @var \Drupal\path_alias\PathAliasInterface
+   * @var PathAliasInterface
    */
   protected $entity;
 
   /**
    * PathAliasUpdateEvent constructor.
    *
-   * @param \Drupal\path_alias\PathAliasInterface $entity
+   * @param PathAliasInterface $entity
    *   The updated path alias entity.
    */
   public function __construct(PathAliasInterface $entity) {
@@ -37,7 +37,7 @@ class PathAliasUpdateEvent extends Event {
   /**
    * Get the updated path alias entity.
    *
-   * @return \Drupal\path_alias\PathAliasInterface
+   * @return PathAliasInterface
    *   The path alias entity.
    */
   public function getEntity() {
diff --git a/src/EventSubscriber/PathAliasUpdateSubscriber.php b/src/EventSubscriber/PathAliasUpdateSubscriber.php
index 9befcd4..850ed79 100644
--- a/src/EventSubscriber/PathAliasUpdateSubscriber.php
+++ b/src/EventSubscriber/PathAliasUpdateSubscriber.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\rocketship_core\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\path_alias\PathAliasInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\redirect\RedirectRepository;
@@ -18,21 +23,21 @@ class PathAliasUpdateSubscriber implements EventSubscriberInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The settings of the redirect module.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $redirectConfig;
 
   /**
    * The redirect repository.
    *
-   * @var \Drupal\redirect\RedirectRepository
+   * @var RedirectRepository
    */
   protected $redirectRepository;
 
@@ -48,11 +53,11 @@ class PathAliasUpdateSubscriber implements EventSubscriberInterface {
   /**
    * PathAliasUpdateSubscriber constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\redirect\RedirectRepository $redirect_repository
+   * @param RedirectRepository $redirect_repository
    *   The redirect repository.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory, RedirectRepository $redirect_repository) {
@@ -67,12 +72,12 @@ class PathAliasUpdateSubscriber implements EventSubscriberInterface {
    * Handle path aliases update functionality that is useful for sites with a
    * drill-down structure.
    *
-   * @param \Drupal\rocketship_core\Event\PathAliasUpdateEvent $event
+   * @param PathAliasUpdateEvent $event
    *   The path alias update event.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function onPathAliasUpdate(PathAliasUpdateEvent $event) {
     $path_alias = $event->getEntity();
@@ -103,7 +108,7 @@ class PathAliasUpdateSubscriber implements EventSubscriberInterface {
       $status_code = $this->redirectConfig->get('default_status_code');
       $redirect_storage = $this->entityTypeManager->getStorage('redirect');
 
-      /** @var \Drupal\path_alias\PathAliasInterface[] $entities */
+      /** @var PathAliasInterface[] $entities */
       $entities = $path_alias_storage->loadMultiple($results);
       foreach ($entities as $alias_to_update) {
         // Build and save the new alias.
diff --git a/src/Form/DefaultContentDefaultLanguage.php b/src/Form/DefaultContentDefaultLanguage.php
index c95be8b..e2046a8 100644
--- a/src/Form/DefaultContentDefaultLanguage.php
+++ b/src/Form/DefaultContentDefaultLanguage.php
@@ -17,7 +17,7 @@ class DefaultContentDefaultLanguage extends ConfigFormBase {
   /**
    * Language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   private $languageManager;
 
diff --git a/src/Form/MigrateGeneratorForm.php b/src/Form/MigrateGeneratorForm.php
index 637d8ab..b12411f 100644
--- a/src/Form/MigrateGeneratorForm.php
+++ b/src/Form/MigrateGeneratorForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rocketship_core\Form;
 
+use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Archiver\ArchiveTar;
 use Drupal\Core\Entity\ContentEntityType;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -106,7 +107,7 @@ class MigrateGeneratorForm extends FormBase {
       $form_state->getValue('module_name'),
       $form_state->getValue('default_content_mode', FALSE)
     );
-    /** @var \Drupal\Core\File\FileSystemInterface $system */
+    /** @var FileSystemInterface $system */
     $system = \Drupal::service('file_system');
 
     $dir = $generator->generateMigrate();
diff --git a/src/Form/RocketshipSettingsForm.php b/src/Form/RocketshipSettingsForm.php
index c43a576..97c2c20 100644
--- a/src/Form/RocketshipSettingsForm.php
+++ b/src/Form/RocketshipSettingsForm.php
@@ -201,7 +201,7 @@ class RocketshipSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function rpSettingsAddItem(array $form, FormStateInterface $form_state) {
@@ -216,7 +216,7 @@ class RocketshipSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return array
diff --git a/src/Form/UserLoginLinkGeneratorForm.php b/src/Form/UserLoginLinkGeneratorForm.php
index 76bd498..0abf0f9 100644
--- a/src/Form/UserLoginLinkGeneratorForm.php
+++ b/src/Form/UserLoginLinkGeneratorForm.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\rocketship_core\Form;
 
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,17 +23,17 @@ class UserLoginLinkGeneratorForm extends FormBase {
   /**
    * Drupal\Core\Messenger\MessengerInterface definition.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $dateTime;
 
@@ -106,9 +111,9 @@ class UserLoginLinkGeneratorForm extends FormBase {
   /**
    * @param $uid
    *
-   * @return \Drupal\user\UserInterface|null
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return UserInterface|null
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadUser($uid) {
     return $this->entityTypeManager
diff --git a/src/Matcher/EntityAutocompleteMatcher.php b/src/Matcher/EntityAutocompleteMatcher.php
index 2f096ff..37f0abd 100644
--- a/src/Matcher/EntityAutocompleteMatcher.php
+++ b/src/Matcher/EntityAutocompleteMatcher.php
@@ -19,23 +19,23 @@ class EntityAutocompleteMatcher implements EntityAutocompleteMatcherInterface {
   /**
    * The autocomplete matcher for entity references.
    *
-   * @var \Drupal\Core\Entity\EntityAutocompleteMatcherInterface
+   * @var EntityAutocompleteMatcherInterface
    */
   protected $matcher;
 
   /**
    * The entity reference selection handler plugin manager.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected $selectionManager;
 
   /**
    * Constructs an EntityAutocompleteMatcher object.
    *
-   * @param \Drupal\Core\Entity\EntityAutocompleteMatcherInterface $matcher
+   * @param EntityAutocompleteMatcherInterface $matcher
    *   The autocomplete matcher for entity references.
-   * @param \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface $selection_manager
+   * @param SelectionPluginManagerInterface $selection_manager
    *   The entity reference selection handler plugin manager.
    */
   public function __construct(EntityAutocompleteMatcherInterface $matcher, SelectionPluginManagerInterface $selection_manager) {
diff --git a/src/Matcher/EntityAutocompleteMatcherDecorator.php b/src/Matcher/EntityAutocompleteMatcherDecorator.php
index d5d3e38..7becc2d 100644
--- a/src/Matcher/EntityAutocompleteMatcherDecorator.php
+++ b/src/Matcher/EntityAutocompleteMatcherDecorator.php
@@ -14,9 +14,9 @@ class EntityAutocompleteMatcherDecorator extends EntityAutocompleteMatcher {
   /**
    * Constructs a EntityAutoCompleteMatcherDecorator object.
    *
-   * @param \Drupal\Core\Entity\EntityAutocompleteMatcherInterface $matcher
+   * @param EntityAutocompleteMatcherInterface $matcher
    *   The autocomplete matcher for entity references.
-   * @param \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface $selection_manager
+   * @param SelectionPluginManagerInterface $selection_manager
    *   The entity reference selection handler plugin manager.
    */
   public function __construct(EntityAutocompleteMatcherInterface $matcher, SelectionPluginManagerInterface $selection_manager) {
diff --git a/src/MigrateGenerator.php b/src/MigrateGenerator.php
index 0d60ff6..b07f22b 100644
--- a/src/MigrateGenerator.php
+++ b/src/MigrateGenerator.php
@@ -2,6 +2,19 @@
 
 namespace Drupal\rocketship_core;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Twig\Error\RuntimeError;
+use Drupal\Core\TypedData\Exception\MissingDataException;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Entity\ContentEntityInterface;
+use Drupal\link\Plugin\Field\FieldType\LinkItem;
+use Drupal\layout_builder\Section;
+use Drupal\block_content\Entity\BlockContent;
+use Drupal\Core\Field\FieldItemBase;
+use Drupal\menu_link_content\Entity\MenuLinkContent;
+use Drupal\file\Entity\File;
 use Drupal\block_content\Plugin\Block\BlockContentBlock;
 use Drupal\Core\Archiver\ArchiveTar;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -51,7 +64,7 @@ class MigrateGenerator {
   private $handled_entities = [];
 
   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   private $menuLinkContentStorage;
 
@@ -74,8 +87,8 @@ class MigrateGenerator {
    * @param string $module_name
    * @param bool $default_content_mode
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct($entity_type_id, $bundles = [], $ids = [], $module_name = 'rs_generated_migrate', $default_content_mode = FALSE) {
     $this->entity_type_id = $entity_type_id;
@@ -107,10 +120,10 @@ class MigrateGenerator {
   }
 
   /**
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    * @throws \ReflectionException
-   * @throws \Twig\Error\RuntimeError|\Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws RuntimeError|MissingDataException
    */
   public function generateMigrate() {
     // ok, so, generate a module? Cuz we do need to have those hooks to alter
@@ -144,7 +157,7 @@ class MigrateGenerator {
       $this->created_migrates[$this->module_name . '_menu_link_content_menu_link_content'] = $this->module_name . '_menu_link_content_menu_link_content';
     }
 
-    $path = drupal_get_path('module', 'rocketship_core');
+    $path = \Drupal::service('extension.list.module')->getPath('rocketship_core');
     $files = [
       $path . '/assets/templates/generated_migrate_info_file.yml.twig' => "$dir/$this->module_name.info.yml",
       $path . '/assets/templates/generated_migrate_install_file.php.twig' => "$dir/$this->module_name.install",
@@ -188,10 +201,10 @@ class MigrateGenerator {
   }
 
   /**
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *
    * @return bool
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   public function skipThisField(FieldDefinitionInterface $field) {
     if ($field->getTargetEntityTypeId() === 'section_library_template') {
@@ -256,9 +269,9 @@ class MigrateGenerator {
    * @param array $ids
    *
    * @return mixed
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \ReflectionException|\Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws \ReflectionException|MissingDataException
    */
   public function generateMigrateForEntityType($entity_type_id, $bundles, $ids = []) {
 
@@ -269,7 +282,7 @@ class MigrateGenerator {
         ->loadMultiple($ids);
     }
 
-    /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+    /** @var EntityFieldManagerInterface $entityFieldManager */
     $entityFieldManager = \Drupal::service('entity_field.manager');
     if (empty($bundles)) {
       $bundles = array_keys(\Drupal::service('entity_type.bundle.info')
@@ -277,7 +290,7 @@ class MigrateGenerator {
     }
 
     foreach ($bundles as $bundle) {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface[] $bundle_entities */
+      /** @var ContentEntityInterface[] $bundle_entities */
       $bundle_entities = [];
       foreach ($entities as $entity) {
         if ($entity->bundle() == $bundle) {
@@ -372,7 +385,7 @@ class MigrateGenerator {
           // but for that we need to know what migrate contains the entities... cuz we gotta do a lookup
           $referenced_entities = [];
           foreach ($bundle_entities as $bundle_entity) {
-            /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $link */
+            /** @var LinkItem $link */
             $link = $bundle_entity->get('link')->first();
             if ($link->isEmpty()) {
               $rows[$bundle_entity->uuid()][] = NULL;
@@ -581,7 +594,7 @@ class MigrateGenerator {
               $data = $bundle_entity->get($field->getName());
               $values = [];
               foreach ($data as $item) {
-                /** @var \Drupal\layout_builder\Section $section */
+                /** @var Section $section */
                 $section = $item->section;
                 if (strpos($section->getLayoutId(), 'rs_') === 0) {
                   // Check for background image.
@@ -603,7 +616,7 @@ class MigrateGenerator {
                   if ($plugin instanceof InlineBlock or $plugin instanceof BlockContentBlock) {
                     $reflectionMethod = new \ReflectionMethod($plugin, 'getEntity');
                     $reflectionMethod->setAccessible(TRUE);
-                    /** @var \Drupal\block_content\Entity\BlockContent $block */
+                    /** @var BlockContent $block */
                     $block = $reflectionMethod->invoke($plugin);
                     if (!isset($this->handled_entities[$block->uuid()])) {
                       $referenced_entities[] = $block->id();
@@ -714,7 +727,7 @@ class MigrateGenerator {
                   foreach ($properties_to_migrate as $property) {
                     $field_values[] = $item->{$property};
                   }
-                  /** @var \Drupal\Core\Field\FieldItemBase $item */
+                  /** @var FieldItemBase $item */
                   $values[] = implode('***', $field_values);
                 }
                 $rows[$bundle_entity->uuid()][] = implode('|', $values);
@@ -769,7 +782,7 @@ class MigrateGenerator {
                   foreach ($properties_to_migrate as $property) {
                     $field_values[] = $item->{$property};
                   }
-                  /** @var \Drupal\Core\Field\FieldItemBase $item */
+                  /** @var FieldItemBase $item */
                   $values[] = implode('***', $field_values);
                 }
                 $rows[$bundle_entity->uuid()][] = implode('|', $values);
@@ -792,7 +805,7 @@ class MigrateGenerator {
                   foreach ($properties_to_migrate as $property) {
                     $field_values[] = $item->{$property};
                   }
-                  /** @var \Drupal\Core\Field\FieldItemBase $item */
+                  /** @var FieldItemBase $item */
                   $values[] = implode('***', $field_values);
                 }
                 $rows[$bundle_entity->uuid()][] = implode('|', $values);
@@ -835,7 +848,7 @@ class MigrateGenerator {
   /**
    * @param \Drupal\Core\Entity\ContentEntityInterface[] t$bundle_entities
    *
-   * @return \Drupal\menu_link_content\Entity\MenuLinkContent[]
+   * @return MenuLinkContent[]
    */
   public function checkForMenuLinks(array $bundle_entities) {
     $list = [];
@@ -873,8 +886,8 @@ class MigrateGenerator {
 
     $entities = [];
     if (!empty($ids)) {
-      /** @var \Drupal\file\Entity\File[] $entities */
-      $entities = \Drupal\file\Entity\File::loadMultiple($ids);
+      /** @var File[] $entities */
+      $entities = File::loadMultiple($ids);
     }
     $rows = [];
     foreach ($entities as $idx => $entity) {
diff --git a/src/Plugin/Condition/NodeUuid.php b/src/Plugin/Condition/NodeUuid.php
index aec527a..6982f30 100644
--- a/src/Plugin/Condition/NodeUuid.php
+++ b/src/Plugin/Condition/NodeUuid.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rocketship_core\Plugin\Condition;
 
+use Drupal\node\NodeInterface;
 use Drupal\Core\Condition\ConditionPluginBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -24,14 +25,14 @@ class NodeUuid extends ConditionPluginBase implements ContainerFactoryPluginInte
   /**
    * The entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
   /**
    * Creates a new NodeType instance.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
    * @param array $configuration
    *   The plugin configuration, i.e. an array with configuration values keyed
@@ -104,7 +105,7 @@ class NodeUuid extends ConditionPluginBase implements ContainerFactoryPluginInte
     }
 
     try {
-      /** @var \Drupal\node\NodeInterface $node */
+      /** @var NodeInterface $node */
       $node = $this->getContextValue('node');
       if (!$node) {
         // We don't have access to the Node context.
diff --git a/src/Plugin/Field/FieldFormatter/AuthorRender.php b/src/Plugin/Field/FieldFormatter/AuthorRender.php
index a559eb8..6396696 100644
--- a/src/Plugin/Field/FieldFormatter/AuthorRender.php
+++ b/src/Plugin/Field/FieldFormatter/AuthorRender.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ -44,7 +45,7 @@ class AuthorRender extends FormatterBase {
         continue;
       }
       $entity = $items->getEntity();
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       $entity = $this->getHighestLevelParentEntity($entity);
 
       if (!$entity instanceof EntityOwnerInterface) {
@@ -75,10 +76,10 @@ class AuthorRender extends FormatterBase {
    * Recursively fetches the parent entity until top is reached and then
    * returns that one.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Parent.
    */
   protected function getHighestLevelParentEntity(EntityInterface $entity) {
diff --git a/src/Plugin/Field/FieldFormatter/BreadcrumbRender.php b/src/Plugin/Field/FieldFormatter/BreadcrumbRender.php
index 46f6f0f..495a4b9 100644
--- a/src/Plugin/Field/FieldFormatter/BreadcrumbRender.php
+++ b/src/Plugin/Field/FieldFormatter/BreadcrumbRender.php
@@ -74,7 +74,7 @@ class BreadcrumbRender extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
diff --git a/src/Plugin/Field/FieldFormatter/CanonicalLink.php b/src/Plugin/Field/FieldFormatter/CanonicalLink.php
index 4985240..208ab15 100644
--- a/src/Plugin/Field/FieldFormatter/CanonicalLink.php
+++ b/src/Plugin/Field/FieldFormatter/CanonicalLink.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Render\RendererInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -26,14 +29,14 @@ class CanonicalLink extends FormatterBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -117,13 +120,13 @@ class CanonicalLink extends FormatterBase {
   /**
    * Build a link.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    *
    * @return array
    *   Render array.
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   protected function build(FieldableEntityInterface $entity) {
     // Initialize output.
diff --git a/src/Plugin/Field/FieldFormatter/ClassyLinkFormatter.php b/src/Plugin/Field/FieldFormatter/ClassyLinkFormatter.php
index b5b98eb..57d1216 100755
--- a/src/Plugin/Field/FieldFormatter/ClassyLinkFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ClassyLinkFormatter.php
@@ -29,7 +29,7 @@ class ClassyLinkFormatter extends FormatterBase implements ContainerFactoryPlugi
   /**
    * The path validator service.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
@@ -56,7 +56,7 @@ class ClassyLinkFormatter extends FormatterBase implements ContainerFactoryPlugi
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -66,7 +66,7 @@ class ClassyLinkFormatter extends FormatterBase implements ContainerFactoryPlugi
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, PathValidatorInterface $path_validator) {
@@ -247,10 +247,10 @@ class ClassyLinkFormatter extends FormatterBase implements ContainerFactoryPlugi
   /**
    * Builds the \Drupal\Core\Url object for a link field item.
    *
-   * @param \Drupal\link\LinkItemInterface $item
+   * @param LinkItemInterface $item
    *   The link field item being rendered.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   A Url object.
    */
   protected function buildUrl(LinkItemInterface $item) {
diff --git a/src/Plugin/Field/FieldFormatter/ConfigurableLink.php b/src/Plugin/Field/FieldFormatter/ConfigurableLink.php
index 0f815e3..8961e16 100644
--- a/src/Plugin/Field/FieldFormatter/ConfigurableLink.php
+++ b/src/Plugin/Field/FieldFormatter/ConfigurableLink.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Utility\Token;
+use Drupal\path_alias\AliasManagerInterface;
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Entity\Element\EntityAutocomplete;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -28,21 +31,21 @@ class ConfigurableLink extends FormatterBase {
   /**
    * The Token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * Provides a service for path aliases.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -141,7 +144,7 @@ class ConfigurableLink extends FormatterBase {
    *
    * @param array $element
    *   Element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    * @param array $form
    *   Form.
@@ -205,7 +208,7 @@ class ConfigurableLink extends FormatterBase {
   /**
    * Build a link.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    *
    * @return array
@@ -302,7 +305,7 @@ TWIG;
    *
    * @param string $str
    *   String to parse into an array.
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/ContentBlockTitleReplacementFormatter.php b/src/Plugin/Field/FieldFormatter/ContentBlockTitleReplacementFormatter.php
index 5c9f4d2..643808b 100644
--- a/src/Plugin/Field/FieldFormatter/ContentBlockTitleReplacementFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ContentBlockTitleReplacementFormatter.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Entity\EntityRepositoryInterface;
+use Drupal\Core\Render\RendererInterface;
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\node\Entity\Node;
@@ -24,22 +29,22 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ContentBlockTitleReplacementFormatter extends TextDefaultFormatter {
 
   /**
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -129,7 +134,7 @@ class ContentBlockTitleReplacementFormatter extends TextDefaultFormatter {
       else {
         $value = $item->value;
         // Show the current node title.
-        /** @var \Drupal\node\NodeInterface $node */
+        /** @var NodeInterface $node */
         $node = $this->routeMatch->getParameter('node');
         //todo: figure out what node revision this current revision of the block is tied to?
         // i guess all we can do is:
diff --git a/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php
index 9daea77..5ff2b64 100644
--- a/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageDescriptionTitleDefaultFormatter.php
@@ -33,7 +33,7 @@ class ImageDescriptionTitleDefaultFormatter extends ImageFormatter {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -43,9 +43,9 @@ class ImageDescriptionTitleDefaultFormatter extends ImageFormatter {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The image style storage.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage) {
@@ -188,7 +188,7 @@ class ImageDescriptionTitleDefaultFormatter extends ImageFormatter {
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
diff --git a/src/Plugin/Field/FieldFormatter/LabelValueFormatter.php b/src/Plugin/Field/FieldFormatter/LabelValueFormatter.php
index 6a05e6a..9efd9c6 100644
--- a/src/Plugin/Field/FieldFormatter/LabelValueFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/LabelValueFormatter.php
@@ -78,7 +78,7 @@ class LabelValueFormatter extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/LabelValueTableFormatter.php b/src/Plugin/Field/FieldFormatter/LabelValueTableFormatter.php
index c9f52b2..2524a0e 100644
--- a/src/Plugin/Field/FieldFormatter/LabelValueTableFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/LabelValueTableFormatter.php
@@ -61,7 +61,7 @@ class LabelValueTableFormatter extends LabelValueFormatter {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/MediaGenericFileFormatter.php b/src/Plugin/Field/FieldFormatter/MediaGenericFileFormatter.php
index b38a02f..094b045 100644
--- a/src/Plugin/Field/FieldFormatter/MediaGenericFileFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/MediaGenericFileFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\media\MediaInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\file\Plugin\Field\FieldFormatter\FileFormatterBase;
@@ -25,7 +26,7 @@ class MediaGenericFileFormatter extends FileFormatterBase {
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = [];
 
-    /** @var \Drupal\media\MediaInterface $media */
+    /** @var MediaInterface $media */
     $media = $items->getParent()->getEntity();
     if ($media instanceof TranslatableInterface) {
       $media = \Drupal::service('entity.repository')
diff --git a/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php b/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php
index fc8f17b..1fd627b 100755
--- a/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/PositionBasedImageFormatter.php
@@ -30,21 +30,21 @@ class PositionBasedImageFormatter extends ImageFormatterBase implements Containe
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;
 
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;
 
@@ -55,7 +55,7 @@ class PositionBasedImageFormatter extends ImageFormatterBase implements Containe
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -65,11 +65,11 @@ class PositionBasedImageFormatter extends ImageFormatterBase implements Containe
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The link generator service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The entity storage for the image.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, LinkGeneratorInterface $link_generator, EntityStorageInterface $image_style_storage) {
@@ -224,7 +224,7 @@ class PositionBasedImageFormatter extends ImageFormatterBase implements Containe
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
diff --git a/src/Plugin/Field/FieldFormatter/PostDateRender.php b/src/Plugin/Field/FieldFormatter/PostDateRender.php
index ced93a8..46ae4f0 100644
--- a/src/Plugin/Field/FieldFormatter/PostDateRender.php
+++ b/src/Plugin/Field/FieldFormatter/PostDateRender.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Render\Renderer;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ -36,7 +38,7 @@ class PostDateRender extends FormatterBase {
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = [];
 
-    /** @var \Drupal\Core\Render\Renderer $renderer */
+    /** @var Renderer $renderer */
     $renderer = \Drupal::service('renderer');
 
     foreach ($items as $delta => $item) {
@@ -44,7 +46,7 @@ class PostDateRender extends FormatterBase {
         continue;
       }
       $entity = $items->getEntity();
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       $entity = $this->getHighestLevelParentEntity($entity);
 
       if (!method_exists($entity, 'getCreatedTime')) {
@@ -80,10 +82,10 @@ class PostDateRender extends FormatterBase {
    * Recursively fetches the parent entity until top is reached and then
    * returns that one.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Parent.
    */
   protected function getHighestLevelParentEntity(EntityInterface $entity) {
diff --git a/src/Plugin/Field/FieldFormatter/RelatedPaddedReferenceItemFormatter.php b/src/Plugin/Field/FieldFormatter/RelatedPaddedReferenceItemFormatter.php
index 7d09412..9311cbc 100644
--- a/src/Plugin/Field/FieldFormatter/RelatedPaddedReferenceItemFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/RelatedPaddedReferenceItemFormatter.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Entity\EntityRepositoryInterface;
+use Drupal\Core\Entity\Query\QueryInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\TranslatableInterface;
@@ -51,21 +57,21 @@ class RelatedPaddedReferenceItemFormatter extends EntityReferenceEntityFormatter
   /**
    * Var.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $fieldManager;
 
   /**
    * Var.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Var.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
@@ -90,7 +96,7 @@ class RelatedPaddedReferenceItemFormatter extends EntityReferenceEntityFormatter
   /**
    * Inject some extra services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container.
    */
   public function setExtraServices(ContainerInterface $container) {
@@ -321,14 +327,14 @@ class RelatedPaddedReferenceItemFormatter extends EntityReferenceEntityFormatter
   /**
    * Build the basic query.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $parent
+   * @param EntityInterface $parent
    *   The parent entity.
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   A query.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function buildBasicQuery(EntityInterface $parent) {
     $loaded_entity_type = $parent->getEntityType();
@@ -375,7 +381,7 @@ class RelatedPaddedReferenceItemFormatter extends EntityReferenceEntityFormatter
    *
    * @param array $entities
    *   All entities from the field.
-   * @param \Drupal\Core\Entity\EntityInterface $parent
+   * @param EntityInterface $parent
    *   Parent.
    * @param string $langcode
    *   Langcode.
@@ -387,8 +393,8 @@ class RelatedPaddedReferenceItemFormatter extends EntityReferenceEntityFormatter
    * @return array
    *   List of entities.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getEntities(array $entities,
                                  EntityInterface $parent,
@@ -522,7 +528,7 @@ class RelatedPaddedReferenceItemFormatter extends EntityReferenceEntityFormatter
   /**
    * Get other fields for this bundle.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   Field definition.
    * @param bool $field_type
    *   Field type.
diff --git a/src/Plugin/Field/FieldFormatter/ScrollToFormatter.php b/src/Plugin/Field/FieldFormatter/ScrollToFormatter.php
index c69de71..efd91d6 100644
--- a/src/Plugin/Field/FieldFormatter/ScrollToFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ScrollToFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ -27,7 +28,7 @@ class ScrollToFormatter extends FormatterBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -88,7 +89,7 @@ class ScrollToFormatter extends FormatterBase {
   /**
    * Build a link.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/ShowParentFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ShowParentFieldFormatter.php
index 6c4aaf3..991c315 100644
--- a/src/Plugin/Field/FieldFormatter/ShowParentFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ShowParentFieldFormatter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Render\RendererInterface;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ -28,7 +30,7 @@ class ShowParentFieldFormatter extends FormatterBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -92,14 +94,14 @@ class ShowParentFieldFormatter extends FormatterBase {
   /**
    * Build a link.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    *
    * @return array
    *   Render array.
    */
   protected function build(FieldableEntityInterface $entity) {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $parent */
+    /** @var ContentEntityInterface $parent */
     $parent = $this->getHighestLevelParentEntity($entity);
 
     $build = [];
@@ -146,10 +148,10 @@ TWIG;
    * Recursively fetches the parent entity until top is reached and then
    * returns that one.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Parent.
    */
   protected function getHighestLevelParentEntity(EntityInterface $entity) {
diff --git a/src/Plugin/Field/FieldFormatter/TimeAgoFormatter.php b/src/Plugin/Field/FieldFormatter/TimeAgoFormatter.php
index cfda3a5..176b24f 100644
--- a/src/Plugin/Field/FieldFormatter/TimeAgoFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TimeAgoFormatter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rocketship_core\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ -26,14 +28,14 @@ class TimeAgoFormatter extends FormatterBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   public $dateFormatter;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -86,7 +88,7 @@ class TimeAgoFormatter extends FormatterBase {
   /**
    * Build a link.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/TitleDescriptionFormatter.php b/src/Plugin/Field/FieldFormatter/TitleDescriptionFormatter.php
index 12b5aee..21b5b5c 100644
--- a/src/Plugin/Field/FieldFormatter/TitleDescriptionFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TitleDescriptionFormatter.php
@@ -72,7 +72,7 @@ class TitleDescriptionFormatter extends FormatterBase {
   /**
    * View the value for a field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The item to view.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldWidget/LabelValueWidget.php b/src/Plugin/Field/FieldWidget/LabelValueWidget.php
index 249b878..31c9003 100644
--- a/src/Plugin/Field/FieldWidget/LabelValueWidget.php
+++ b/src/Plugin/Field/FieldWidget/LabelValueWidget.php
@@ -26,7 +26,7 @@ class LabelValueWidget extends WidgetBase implements ContainerFactoryPluginInter
   /**
    * Drupal\Core\Session\AccountInterface definition.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
diff --git a/src/Plugin/Field/FieldWidget/TitleDescriptionWidget.php b/src/Plugin/Field/FieldWidget/TitleDescriptionWidget.php
index dd05eeb..0a09467 100644
--- a/src/Plugin/Field/FieldWidget/TitleDescriptionWidget.php
+++ b/src/Plugin/Field/FieldWidget/TitleDescriptionWidget.php
@@ -26,7 +26,7 @@ class TitleDescriptionWidget extends WidgetBase implements ContainerFactoryPlugi
   /**
    * Drupal\Core\Session\AccountInterface definition.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
diff --git a/src/Plugin/Layout/RocketshipCoreBaseLayout.php b/src/Plugin/Layout/RocketshipCoreBaseLayout.php
index d1eff9d..0a3b8f0 100644
--- a/src/Plugin/Layout/RocketshipCoreBaseLayout.php
+++ b/src/Plugin/Layout/RocketshipCoreBaseLayout.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rocketship_core\Plugin\Layout;
 
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\File\Exception\FileWriteException;
 use Drupal\Core\File\FileSystemInterface;
@@ -19,12 +21,12 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 abstract class RocketshipCoreBaseLayout extends LayoutDefault implements PluginFormInterface, ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManager|object|null
+   * @var EntityTypeManager|object|null
    */
   protected $entityTypeManager;
 
@@ -338,7 +340,7 @@ abstract class RocketshipCoreBaseLayout extends LayoutDefault implements PluginF
     }
 
     $theme = \Drupal::configFactory()->get('system.theme')->get('default');
-    $path = drupal_get_path('theme', $theme) . '/' . "$theme.theme";
+    $path = \Drupal::service('extension.list.theme')->getPath($theme) . '/' . "$theme.theme";
     if (is_file($path)) {
       require_once $path;
     }
@@ -393,7 +395,7 @@ abstract class RocketshipCoreBaseLayout extends LayoutDefault implements PluginF
     $settings = \Drupal::config('rocketship_core.settings');
     $variants = $settings->get('color_variants');
     $cssPath = 'public://css';
-    $cssTemplatePath = drupal_get_path('module', 'rocketship_core') . '/css/style.content-blocks.colors.min.css';
+    $cssTemplatePath = \Drupal::service('extension.list.module')->getPath('rocketship_core') . '/css/style.content-blocks.colors.min.css';
     // Make an array of the Changed CSS to save.
     $finalCSS = '';
 
diff --git a/src/RocketshipConfigInstaller.php b/src/RocketshipConfigInstaller.php
index 702431b..b256c7d 100644
--- a/src/RocketshipConfigInstaller.php
+++ b/src/RocketshipConfigInstaller.php
@@ -18,23 +18,23 @@ class RocketshipConfigInstaller implements ConfigInstallerInterface {
   /**
    * The configuration installer.
    *
-   * @var \Drupal\Core\Config\ConfigInstallerInterface
+   * @var ConfigInstallerInterface
    */
   protected $configInstaller;
 
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ExtensionList
+   * @var ExtensionList
    */
   protected $extensionList;
 
   /**
    * Constructs the configuration installer.
    *
-   * @param \Drupal\Core\Config\ConfigInstallerInterface $config_installer
+   * @param ConfigInstallerInterface $config_installer
    *   The configuration installer.
-   * @param \Drupal\Core\Extension\ExtensionList $extensionList
+   * @param ExtensionList $extensionList
    *   The module extension list.
    */
   public function __construct(ConfigInstallerInterface $config_installer, ExtensionList $extensionList) {
diff --git a/tests/src/Kernel/PathAliasUpdateTest.php b/tests/src/Kernel/PathAliasUpdateTest.php
index 42bd367..143d8e5 100644
--- a/tests/src/Kernel/PathAliasUpdateTest.php
+++ b/tests/src/Kernel/PathAliasUpdateTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\rocketship_core\Functional;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Language\LanguageDefault;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\language\Entity\ConfigurableLanguage;
@@ -49,28 +53,28 @@ class PathAliasUpdateTest extends KernelTestBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The default language service.
    *
-   * @var \Drupal\Core\Language\LanguageDefault
+   * @var LanguageDefault
    */
   protected $languageDefault;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->entityTypeManager = $this->container->get('entity_type.manager');
@@ -123,10 +127,10 @@ class PathAliasUpdateTest extends KernelTestBase {
    *
    * @param array $values
    *   List of values.
-   * @param \Drupal\menu_link_content\MenuLinkContentInterface|null $parent_link
+   * @param MenuLinkContentInterface|null $parent_link
    *   The parent menu link.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|\Drupal\node\NodeInterface
+   * @return EntityInterface|NodeInterface
    *   Create node.
    */
   protected function createNodeWithMenuLink(array $values = [], MenuLinkContentInterface $parent_link = NULL) {
@@ -139,7 +143,7 @@ class PathAliasUpdateTest extends KernelTestBase {
     ];
 
     $node_storage = $this->entityTypeManager->getStorage('node');
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $node_storage->create($values);
     $node->save();
 
@@ -162,10 +166,10 @@ class PathAliasUpdateTest extends KernelTestBase {
   /**
    * Get related menu link of the node.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node entity.
    *
-   * @return \Drupal\menu_link_content\MenuLinkContentInterface
+   * @return MenuLinkContentInterface
    *   The related menu link content.
    */
   protected function getMenuLink(NodeInterface $node) {
@@ -186,7 +190,7 @@ class PathAliasUpdateTest extends KernelTestBase {
    * @param string $langcode
    *   The if of the language.
    *
-   * @return \Drupal\node\NodeInterface[]
+   * @return NodeInterface[]
    *   List of three created node.
    */
   protected function createNodes($langcode = LanguageInterface::LANGCODE_NOT_SPECIFIED) {
@@ -225,7 +229,7 @@ class PathAliasUpdateTest extends KernelTestBase {
 
     // Make sure current language has been changed.
     $current_language = $this->languageManager->getCurrentLanguage()->getId();
-    $this->assertEqual($current_language, $language->getId());
+    $this->assertEquals($current_language, $language->getId());
   }
 
   /**
