diff --git a/optimizedb.info.yml b/optimizedb.info.yml
index 66462c3..dfaa90b 100644
--- a/optimizedb.info.yml
+++ b/optimizedb.info.yml
@@ -1,7 +1,6 @@
 name: 'Database Optimization'
 type: module
 description: 'Optimizing the site database.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Development
 configure: optimizedb.admin_page
diff --git a/src/Controller/HideNotificationController.php b/src/Controller/HideNotificationController.php
index ee14ff5..e009f16 100644
--- a/src/Controller/HideNotificationController.php
+++ b/src/Controller/HideNotificationController.php
@@ -16,32 +16,32 @@ class HideNotificationController extends ControllerBase {
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Controller constructor.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter.
    */
   public function __construct(TimeInterface $time, ConfigFactoryInterface $configFactory, DateFormatterInterface $dateFormatter) {
diff --git a/src/Form/OptimizedbListTablesForm.php b/src/Form/OptimizedbListTablesForm.php
index 1376387..1d5c173 100644
--- a/src/Form/OptimizedbListTablesForm.php
+++ b/src/Form/OptimizedbListTablesForm.php
@@ -17,23 +17,23 @@ class OptimizedbListTablesForm extends FormBase {
   /**
    * The request stack used for testing.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The database connection used.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Constructs a new FileTransferAuthorizeForm object.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database service.
    */
   public function __construct(RequestStack $requestStack, Connection $database) {
diff --git a/tests/src/Functional/GeneralTest.php b/tests/src/Functional/GeneralTest.php
index 2751841..ceb0b99 100644
--- a/tests/src/Functional/GeneralTest.php
+++ b/tests/src/Functional/GeneralTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\optimizedb\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\Traits\Core\CronRunTrait;
@@ -36,14 +37,14 @@ class GeneralTest extends BrowserTestBase {
   /**
    * A user with permission the settings module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ -61,7 +62,7 @@ class GeneralTest extends BrowserTestBase {
     // Function for output all database tables and update their total size.
     _optimizedb_tables_list();
 
-    $this->assertNotEqual($this->config('optimizedb.settings')
+    $this->assertNotEquals($this->config('optimizedb.settings')
       ->get('tables_size'), 0);
   }
 
@@ -69,8 +70,12 @@ class GeneralTest extends BrowserTestBase {
    * Testing module admin page buttons.
    */
   public function testButtonsExecutingCommands() {
-    $this->drupalPostForm('admin/config/development/optimizedb', [], $this->t('Optimize tables'));
-    $this->assertText($this->t('The operation completed successfully.'));
+    $this->drupalGet('admin/config/development/optimizedb');
+    $this->submitForm([], $this->t('Optimize tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The operation completed successfully.'));
   }
 
   /**
diff --git a/tests/src/Functional/HideNotificationTest.php b/tests/src/Functional/HideNotificationTest.php
index 1c7aed0..1a2bcd1 100644
--- a/tests/src/Functional/HideNotificationTest.php
+++ b/tests/src/Functional/HideNotificationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\optimizedb\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
 
@@ -34,14 +35,14 @@ class HideNotificationTest extends BrowserTestBase {
   /**
    * A user with permission the settings module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ -59,14 +60,20 @@ class HideNotificationTest extends BrowserTestBase {
       ->save();
 
     $this->drupalGet('admin/config/development/optimizedb/hide');
-    $this->assertText($this->t('Alerts are not available.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('Alerts are not available.'));
 
     $config
       ->set('notify_optimize', TRUE)
       ->save();
 
     $this->drupalGet('admin/config/development/optimizedb/hide');
-    $this->assertNoText($this->t('Alerts are not available.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains($this->t('Alerts are not available.'));
 
     $notify_optimize = $this->config('optimizedb.settings')
       ->get('notify_optimize');
diff --git a/tests/src/Functional/ListTablesOperationExecuteTest.php b/tests/src/Functional/ListTablesOperationExecuteTest.php
index d5cadd8..ceee3b1 100644
--- a/tests/src/Functional/ListTablesOperationExecuteTest.php
+++ b/tests/src/Functional/ListTablesOperationExecuteTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\optimizedb\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
 
@@ -36,14 +37,14 @@ class ListTablesOperationExecuteTest extends BrowserTestBase {
   /**
    * A user with permission the settings module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ -54,8 +55,12 @@ class ListTablesOperationExecuteTest extends BrowserTestBase {
    * Performing operations on tables.
    */
   public function testListTablesOperationExecute() {
-    $this->drupalPostForm('admin/config/development/optimizedb/list_tables', [], $this->t('Check tables'));
-    $this->assertText($this->t('To execute, you must select at least one table from the list.'));
+    $this->drupalGet('admin/config/development/optimizedb/list_tables');
+    $this->submitForm([], $this->t('Check tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('To execute, you must select at least one table from the list.'));
 
     // Output all database tables.
     $tables = _optimizedb_tables_list();
@@ -64,9 +69,13 @@ class ListTablesOperationExecuteTest extends BrowserTestBase {
     $edit = [];
     // Selected first table in list.
     $edit['tables[' . $table_name . ']'] = $table_name;
+    $this->drupalGet('admin/config/development/optimizedb/list_tables');
 
-    $this->drupalPostForm('admin/config/development/optimizedb/list_tables', $edit, $this->t('Check tables'));
-    $this->assertText($this->t('The operation completed successfully.'));
+    $this->submitForm($edit, $this->t('Check tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The operation completed successfully.'));
   }
 
 }
