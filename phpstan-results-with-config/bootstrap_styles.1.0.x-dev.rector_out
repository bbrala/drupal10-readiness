modules/contrib/bootstrap_styles/bootstrap_styles.module
modules/contrib/bootstrap_styles/src/Ajax/RefreshResponsive.php
modules/contrib/bootstrap_styles/src/Annotation/Style.php
modules/contrib/bootstrap_styles/src/Annotation/StylesGroup.php
modules/contrib/bootstrap_styles/src/Controller/TempStoreController.php
modules/contrib/bootstrap_styles/src/Element/VideoBackground.php
modules/contrib/bootstrap_styles/src/Form/SettingsForm.php
modules/contrib/bootstrap_styles/src/Form/StylesFilterConfigForm.php
modules/contrib/bootstrap_styles/src/HelperTrait.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/BackgroundColor.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/BackgroundMedia.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/Border.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/BoxShadow.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/Margin.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/Padding.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/ScrollEffects.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/TextAlignment.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/TextColor.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/StylesGroup/Animation.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/StylesGroup/Background.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/StylesGroup/Border.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/StylesGroup/Shadow.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/StylesGroup/Spacing.php
modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/StylesGroup/Typography.php
modules/contrib/bootstrap_styles/src/ResponsiveTrait.php
modules/contrib/bootstrap_styles/src/Style/StyleManager.php
modules/contrib/bootstrap_styles/src/Style/StylePluginBase.php
modules/contrib/bootstrap_styles/src/Style/StylePluginInterface.php
modules/contrib/bootstrap_styles/src/Style/StylePluginManagerInterface.php
modules/contrib/bootstrap_styles/src/StylesGroup/StylesGroupManager.php
modules/contrib/bootstrap_styles/src/StylesGroup/StylesGroupPluginBase.php
modules/contrib/bootstrap_styles/src/StylesGroup/StylesGroupPluginInterface.php

13 files with changes
=====================

1) modules/contrib/bootstrap_styles/src/StylesGroup/StylesGroupPluginBase.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory) {
@@ @@
    */
   public function getIconPath() {
     // The default icon.
-    $icon_path = drupal_get_path('module', 'bootstrap_styles') . 'images/plugin-group-default-icon.svg';
+    $icon_path = \Drupal::service('extension.list.module')->getPath('bootstrap_styles') . 'images/plugin-group-default-icon.svg';
     if (isset($this->pluginDefinition['icon'])) {
       $icon = $this->pluginDefinition['icon'];
       $path_array = explode('/', $icon);
       if (isset($path_array[0])) {
         $module_name = $path_array[0];
-        $icon_path = drupal_get_path('module', $module_name) . str_replace($module_name, '', $icon);
+        $icon_path = \Drupal::service('extension.list.module')->getPath($module_name) . str_replace($module_name, '', $icon);
       }
     }
     return $icon_path;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bootstrap_styles/src/StylesGroup/StylesGroupManager.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The style plugin manager interface.
    *
-   * @var \Drupal\bootstrap_styles\Style\StylePluginManagerInterface
+   * @var StylePluginManagerInterface
    */
   protected $styleManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\bootstrap_styles\Style\StylePluginManagerInterface $style_manager
+   * @param StylePluginManagerInterface $style_manager
    *   The style plugin manager interface.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, StylePluginManagerInterface $style_manager, ConfigFactoryInterface $config_factory) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $storage
    *   The plugins storage array.
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $tree
    *   An array of parents.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bootstrap_styles/src/Style/StylePluginBase.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/bootstrap_styles/src/Style/StyleManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/bootstrap_styles/src/ResponsiveTrait.php:33

    ---------- begin diff ----------
@@ @@
    *   An associative array containing the structure of the form.
    */
   protected function buildResponsivePreviewer(array &$form) {
-    $icon_path = drupal_get_path('module', 'bootstrap_styles') . '/images/';
+    $icon_path = \Drupal::service('extension.list.module')->getPath('bootstrap_styles') . '/images/';

     $form['bs_responsive'] = [
       '#type' => 'radios',
@@ @@
    *   The name of group that we like to add responsive to its plugins.
    */
   protected function buildBreakpointsFields(array &$form, $group_name) {
-    $icon_path = drupal_get_path('module', 'bootstrap_styles') . '/images/';
+    $icon_path = \Drupal::service('extension.list.module')->getPath('bootstrap_styles') . '/images/';

     $form['bs_responsive_' . $group_name] = [
       '#type' => 'radios',
@@ @@
   /**
    * Save the breakpoints fields values to the configuration.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $fields
    *   The array of field names.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/Border.php:383

    ---------- begin diff ----------
@@ @@
       $default_value = $this->getStyleOptionIndexByClass('rounded_corners', $storage['border']['rounded_corners']['class']);
     }

-    $icon_path = drupal_get_path('module', 'bootstrap_styles') . '/images/';
+    $icon_path = \Drupal::service('extension.list.module')->getPath('bootstrap_styles') . '/images/';

     $form['rounded_corners'] = [
       '#type' => 'range',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/BackgroundMedia.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, EntityTypeBundleInfoInterface $entity_type_bundle_info, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
    * {@inheritdoc}
    */
   public function buildStyleFormElements(array &$form, FormStateInterface $form_state, $storage) {
-    $icon_path = drupal_get_path('module', 'bootstrap_styles') . '/images/';
+    $icon_path = \Drupal::service('extension.list.module')->getPath('bootstrap_styles') . '/images/';
     $form['background_type']['#options']['image'] = $this->getSvgIconMarkup($icon_path . 'plugins/background/background-image.svg');
     $form['background_type']['#options']['video'] = $this->getSvgIconMarkup($icon_path . 'plugins/background/background-video.svg');
     if (!$form['background_type']['#default_value']) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/bootstrap_styles/src/Plugin/BootstrapStyles/Style/BackgroundColor.php:64

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function buildStyleFormElements(array &$form, FormStateInterface $form_state, $storage) {
-    $icon_path = drupal_get_path('module', 'bootstrap_styles') . '/images/';
+    $icon_path = \Drupal::service('extension.list.module')->getPath('bootstrap_styles') . '/images/';
     $form['background_type']['#options']['color'] = $this->getSvgIconMarkup($icon_path . 'plugins/background/background-color.svg');
     $form['background_type']['#default_value'] = $storage['background']['background_type'] ?? 'color';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/bootstrap_styles/src/Form/StylesFilterConfigForm.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The styles group plugin manager.
    *
-   * @var \Drupal\bootstrap_styles\StylesGroup\StylesGroupManager
+   * @var StylesGroupManager
    */
   protected $stylesGroupManager;

@@ @@
   /**
    * Constructs a StylesFilterConfigForm object.
    *
-   * @param \Drupal\bootstrap_styles\StylesGroup\StylesGroupManager $styles_group_manager
+   * @param StylesGroupManager $styles_group_manager
    *   The styles group plugin manager.
    */
   public function __construct(StylesGroupManager $styles_group_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/bootstrap_styles/src/Form/SettingsForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The styles group plugin manager.
    *
-   * @var \Drupal\bootstrap_styles\StylesGroup\StylesGroupManager
+   * @var StylesGroupManager
    */
   protected $stylesGroupManager;

@@ @@
   /**
    * The styles plugin manager.
    *
-   * @var \Drupal\bootstrap_styles\Style\StyleManager
+   * @var StyleManager
    */
   protected $styleManager;

@@ @@
   /**
    * Constructs a SettingsForm object.
    *
-   * @param \Drupal\bootstrap_styles\StylesGroup\StylesGroupManager $styles_group_manager
+   * @param StylesGroupManager $styles_group_manager
    *   The styles group plugin manager.
-   * @param \Drupal\bootstrap_styles\Style\StyleManager $style_manager
+   * @param StyleManager $style_manager
    *   The styles plugin manager.
    */
   public function __construct(StylesGroupManager $styles_group_manager, StyleManager $style_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/bootstrap_styles/src/Controller/TempStoreController.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * Set a tempStore value by key.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request of the page.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The JSON response.
    */
   public function set(Request $request) {
@@ @@
   /**
    * Get temp store value by key.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The JSON response.
    */
   public function get(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/bootstrap_styles/src/Annotation/StylesGroup.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bootstrap_styles\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The title of the styles group plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


13) modules/contrib/bootstrap_styles/src/Annotation/Style.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bootstrap_styles\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The title of the styles group plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 13 files have been changed by Rector                                      

