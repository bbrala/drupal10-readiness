diff --git a/composer.json b/composer.json
index e254f3c..d4bc017 100644
--- a/composer.json
+++ b/composer.json
@@ -18,6 +18,6 @@
     "license": "GPL-2.0+",
     "minimum-stability": "dev",
     "require": {
-        "drupal/core": "^8 || ^9"
+        "drupal/core": "^9.1 || ^10"
     }
 }
diff --git a/simple_facebook_pixel.info.yml b/simple_facebook_pixel.info.yml
index 917556d..dd83442 100644
--- a/simple_facebook_pixel.info.yml
+++ b/simple_facebook_pixel.info.yml
@@ -1,8 +1,7 @@
 name: 'Simple Facebook Pixel'
 type: module
 description: 'Simple Facebook Pixel installs Facebook Pixel on your Drupal site.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Statistics
 configure: simple_facebook_pixel.settings_form
 dependencies:
diff --git a/simple_facebook_pixel.module b/simple_facebook_pixel.module
index 07e3f8a..03c0281 100644
--- a/simple_facebook_pixel.module
+++ b/simple_facebook_pixel.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\simple_facebook_pixel\PixelBuilderService;
+use Drupal\simple_facebook_pixel\PageContextServiceInterface;
 /**
  * @file
  * Simple Facebook Pixel.
@@ -40,13 +42,13 @@ function simple_facebook_pixel_page_attachments(array &$page) {
     'simple_facebook_pixel:purchase',
   ]);
 
-  /** @var \Drupal\simple_facebook_pixel\PixelBuilderService $pixel_builder */
+  /** @var PixelBuilderService $pixel_builder */
   $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
   if (!$pixel_builder->isEnabled()) {
     return;
   }
 
-  /** @var \Drupal\simple_facebook_pixel\PageContextServiceInterface $page_context */
+  /** @var PageContextServiceInterface $page_context */
   $page_context = \Drupal::service('simple_facebook_pixel.page_context');
   $page_context->build();
 
@@ -72,7 +74,7 @@ function simple_facebook_pixel_page_attachments(array &$page) {
  * Implements hook_ENTITY_TYPE_insert().
  */
 function simple_facebook_pixel_user_insert(EntityInterface $entity) {
-  /** @var \Drupal\simple_facebook_pixel\PixelBuilderService $pixel_builder */
+  /** @var PixelBuilderService $pixel_builder */
   $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
   if (!$pixel_builder->isEnabled()) {
     return;
diff --git a/src/EventSubscriber/PixelSubscriber.php b/src/EventSubscriber/PixelSubscriber.php
index 82e79b5..f8b983a 100644
--- a/src/EventSubscriber/PixelSubscriber.php
+++ b/src/EventSubscriber/PixelSubscriber.php
@@ -2,15 +2,16 @@
 
 namespace Drupal\simple_facebook_pixel\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Symfony\Contracts\EventDispatcher\Event;
+use Drupal\commerce_product\Entity\ProductInterface;
 use Drupal\commerce\Context;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\simple_facebook_pixel\PixelBuilderService;
 use Drupal\state_machine\Event\WorkflowTransitionEvent;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -23,14 +24,14 @@ class PixelSubscriber implements EventSubscriberInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * The Pixel builder.
    *
-   * @var \Drupal\simple_facebook_pixel\PixelBuilderService
+   * @var PixelBuilderService
    */
   protected $pixelBuilder;
 
@@ -51,18 +52,18 @@ class PixelSubscriber implements EventSubscriberInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * PixelSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory.
-   * @param \Drupal\simple_facebook_pixel\PixelBuilderService $pixel_builder
+   * @param PixelBuilderService $pixel_builder
    *   The Pixel builder.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(
@@ -98,7 +99,7 @@ class PixelSubscriber implements EventSubscriberInterface {
   /**
    * Invalidates page cache tags if needed.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
 
     if (strpos($response->getContent(), 'CompleteRegistration') !== FALSE) {
@@ -121,7 +122,7 @@ class PixelSubscriber implements EventSubscriberInterface {
   /**
    * Adds AddToCart event.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The add to cart event.
    */
   public function addToCartEvent(Event $event) {
@@ -135,7 +136,7 @@ class PixelSubscriber implements EventSubscriberInterface {
   /**
    * Adds AddToWishlist event. Using Commerce Wishlist module.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The add to wishlist event.
    */
   public function addToWishlist(Event $event) {
@@ -149,7 +150,7 @@ class PixelSubscriber implements EventSubscriberInterface {
   /**
    * Adds AddToWishlist event. Using Flag module.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The add to wishlist event.
    */
   public function addToWishlistFlag(Event $event) {
@@ -159,7 +160,7 @@ class PixelSubscriber implements EventSubscriberInterface {
       if (in_array($event->getFlagging()->getFlagId(), $enabled_flags)) {
         $entity = $event->getFlagging()->getFlaggable();
 
-        if ($entity instanceof \Drupal\commerce_product\Entity\ProductInterface) {
+        if ($entity instanceof ProductInterface) {
           $this->addItem($entity->getDefaultVariation(), 1, 'AddToWishlist');
         }
       }
diff --git a/src/Form/SimpleFacebookPixelSettingsForm.php b/src/Form/SimpleFacebookPixelSettingsForm.php
index 36c7740..287155b 100644
--- a/src/Form/SimpleFacebookPixelSettingsForm.php
+++ b/src/Form/SimpleFacebookPixelSettingsForm.php
@@ -19,25 +19,25 @@ class SimpleFacebookPixelSettingsForm extends ConfigFormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * SimpleFacebookPixelSettingsForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory) {
diff --git a/src/PageContextService.php b/src/PageContextService.php
index e106fdb..f6034e2 100644
--- a/src/PageContextService.php
+++ b/src/PageContextService.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\simple_facebook_pixel;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\commerce_product\Entity\ProductInterface;
 use Drupal\commerce\Context;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,28 +23,28 @@ class PageContextService implements PageContextServiceInterface {
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $configFactory;
 
   /**
    * The request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * The Pixel builder.
    *
-   * @var \Drupal\simple_facebook_pixel\PixelBuilderService
+   * @var PixelBuilderService
    */
   protected $pixelBuilder;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -62,22 +65,22 @@ class PageContextService implements PageContextServiceInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * PageContextService constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request.
-   * @param \Drupal\simple_facebook_pixel\PixelBuilderService $pixel_builder
+   * @param PixelBuilderService $pixel_builder
    *   The Pixel builder.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(
@@ -170,7 +173,7 @@ class PageContextService implements PageContextServiceInterface {
 
     $commerce_product = $this->request->attributes->get('commerce_product');
 
-    if ($commerce_product instanceof \Drupal\commerce_product\Entity\ProductInterface) {
+    if ($commerce_product instanceof ProductInterface) {
       $view_content_entities = array_values($this->configFactory->get('view_content_entities'));
 
       if (
diff --git a/src/PixelBuilderService.php b/src/PixelBuilderService.php
index c5be9a9..5a715f5 100644
--- a/src/PixelBuilderService.php
+++ b/src/PixelBuilderService.php
@@ -28,35 +28,35 @@ class PixelBuilderService implements PixelBuilderServiceInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The route admin context.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $routerAdminContext;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The private temp store.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStore;
 
@@ -70,15 +70,15 @@ class PixelBuilderService implements PixelBuilderServiceInterface {
   /**
    * PixelBuilderService constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The config factory.
-   * @param \Drupal\Core\Routing\AdminContext $router_admin_context
+   * @param AdminContext $router_admin_context
    *   The route admin context.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $private_temp_store
+   * @param PrivateTempStoreFactory $private_temp_store
    *   The private temp store.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountProxyInterface $current_user, AdminContext $router_admin_context, ModuleHandlerInterface $module_handler, PrivateTempStoreFactory $private_temp_store) {
diff --git a/tests/src/Functional/AlterHooksTest.php b/tests/src/Functional/AlterHooksTest.php
index 85d2652..dc0b125 100644
--- a/tests/src/Functional/AlterHooksTest.php
+++ b/tests/src/Functional/AlterHooksTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\simple_facebook_pixel\Functional;
 
+use Drupal\simple_facebook_pixel\PixelBuilderServiceInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Tests\BrowserTestBase;
 
@@ -30,7 +31,7 @@ class AlterHooksTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $account = $this->drupalCreateUser([
@@ -52,10 +53,11 @@ class AlterHooksTest extends BrowserTestBase {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123';
     $edit['view_content_entities[node:page]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->drupalGet('/node/1');
diff --git a/tests/src/Functional/CompleteRegistrationTest.php b/tests/src/Functional/CompleteRegistrationTest.php
index b11fae1..635dedf 100644
--- a/tests/src/Functional/CompleteRegistrationTest.php
+++ b/tests/src/Functional/CompleteRegistrationTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\simple_facebook_pixel\Functional;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\simple_facebook_pixel\PixelBuilderServiceInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -28,14 +30,14 @@ class CompleteRegistrationTest extends BrowserTestBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->configFactory = \Drupal::configFactory();
@@ -53,10 +55,14 @@ class CompleteRegistrationTest extends BrowserTestBase {
 
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, 'Create new account');
-    $this->assertText('A welcome message with further instructions has been sent to your email address.');
-
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, 'Create new account');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');
+
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->assertSession()->responseContains($pixel_builder->getPixelScriptCode());
@@ -79,10 +85,14 @@ class CompleteRegistrationTest extends BrowserTestBase {
 
     $edit['name'] = $this->randomMachineName();
     $edit['mail'] = $edit['name'] . '@example.com';
-    $this->drupalPostForm('user/register', $edit, 'Create new account');
-    $this->assertText('A welcome message with further instructions has been sent to your email address.');
-
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    $this->drupalGet('user/register');
+    $this->submitForm($edit, 'Create new account');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('A welcome message with further instructions has been sent to your email address.');
+
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->assertSession()->responseContains($pixel_builder->getPixelScriptCode());
diff --git a/tests/src/Functional/PageViewTest.php b/tests/src/Functional/PageViewTest.php
index 76e2743..39b0db8 100644
--- a/tests/src/Functional/PageViewTest.php
+++ b/tests/src/Functional/PageViewTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\simple_facebook_pixel\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\simple_facebook_pixel\PixelBuilderServiceInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -28,14 +30,14 @@ class PageViewTest extends BrowserTestBase {
   /**
    * The user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->user = $this->drupalCreateUser([
@@ -51,7 +53,7 @@ class PageViewTest extends BrowserTestBase {
     $this->drupalGet('<front>');
     $this->assertSession()->statusCodeEquals(200);
 
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->assertSession()->responseNotContains($pixel_builder->getPixelScriptCode());
@@ -68,10 +70,11 @@ class PageViewTest extends BrowserTestBase {
   public function testFacebookPixelDisabled() {
     $edit['pixel_enabled'] = FALSE;
     $edit['pixel_id'] = '789012';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->drupalGet('<front>');
@@ -91,17 +94,19 @@ class PageViewTest extends BrowserTestBase {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '789012';
     $edit['exclude_admin_pages'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
     $this->assertSession()->responseContains($pixel_builder->getPixelScriptCode());
 
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '789012';
     $edit['exclude_admin_pages'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
     $this->assertSession()->responseNotContains($pixel_builder->getPixelScriptCode());
   }
@@ -112,10 +117,11 @@ class PageViewTest extends BrowserTestBase {
   public function testFacebookPixelEnabledForAllUsers() {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->drupalGet('<front>');
@@ -134,10 +140,11 @@ class PageViewTest extends BrowserTestBase {
   public function testMultiFacebookPixelsEnabledForAllUsers() {
     $edit['pixel_enabled'] = TRUE;
     $edit['pixel_id'] = '567123, 985473';
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->drupalGet('<front>');
@@ -161,10 +168,11 @@ class PageViewTest extends BrowserTestBase {
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
-    /** @var \Drupal\simple_facebook_pixel\PixelBuilderServiceInterface $pixel_builder */
+    /** @var PixelBuilderServiceInterface $pixel_builder */
     $pixel_builder = \Drupal::service('simple_facebook_pixel.pixel_builder');
 
     $this->drupalGet('<front>');
@@ -181,7 +189,8 @@ class PageViewTest extends BrowserTestBase {
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
     $this->drupalGet('<front>');
@@ -197,7 +206,8 @@ class PageViewTest extends BrowserTestBase {
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
     $this->drupalGet('<front>');
@@ -214,7 +224,8 @@ class PageViewTest extends BrowserTestBase {
     $edit['pixel_id'] = '567123';
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
     $this->drupalGet('<front>');
diff --git a/tests/src/Functional/SettingsFormTest.php b/tests/src/Functional/SettingsFormTest.php
index 50371c9..1b5ede8 100644
--- a/tests/src/Functional/SettingsFormTest.php
+++ b/tests/src/Functional/SettingsFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\simple_facebook_pixel\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\taxonomy\Entity\Vocabulary;
 use Drupal\Tests\BrowserTestBase;
 
@@ -31,14 +32,14 @@ class SettingsFormTest extends BrowserTestBase {
   /**
    * The user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType([
@@ -102,7 +103,8 @@ class SettingsFormTest extends BrowserTestBase {
     $edit['excluded_roles[anonymous]'] = TRUE;
     $edit['excluded_roles[authenticated]'] = FALSE;
     $edit['complete_registration_enabled'] = FALSE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
     $this->assertEquals(FALSE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
@@ -126,7 +128,8 @@ class SettingsFormTest extends BrowserTestBase {
     $edit['excluded_roles[anonymous]'] = FALSE;
     $edit['excluded_roles[authenticated]'] = TRUE;
     $edit['complete_registration_enabled'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
     $this->assertEquals(TRUE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
@@ -146,7 +149,8 @@ class SettingsFormTest extends BrowserTestBase {
     $edit['view_content_entities[node:article]'] = TRUE;
     $edit['view_content_entities[node:page]'] = FALSE;
     $edit['view_content_entities[taxonomy_term:tags]'] = TRUE;
-    $this->drupalPostForm('admin/config/system/simple-facebook-pixel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/system/simple-facebook-pixel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->responseContains('The configuration options have been saved.');
 
     $this->assertEquals(TRUE, $this->config('simple_facebook_pixel.settings')->get('pixel_enabled'));
diff --git a/tests/src/Functional/ViewContentEventTest.php b/tests/src/Functional/ViewContentEventTest.php
index ed46c5f..85f064e 100644
--- a/tests/src/Functional/ViewContentEventTest.php
+++ b/tests/src/Functional/ViewContentEventTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\simple_facebook_pixel\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\taxonomy\Traits\TaxonomyTestTrait;
 
@@ -33,21 +35,21 @@ class ViewContentEventTest extends BrowserTestBase {
   /**
    * The user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->user = $this->drupalCreateUser([
