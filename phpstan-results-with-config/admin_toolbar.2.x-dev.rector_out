modules/contrib/admin_toolbar/admin_toolbar.install
modules/contrib/admin_toolbar/admin_toolbar.module
modules/contrib/admin_toolbar/admin_toolbar_links_access_filter/admin_toolbar_links_access_filter.module
modules/contrib/admin_toolbar/admin_toolbar_search/admin_toolbar_search.module
modules/contrib/admin_toolbar/admin_toolbar_search/src/Controller/AdminToolbarSearchController.php
modules/contrib/admin_toolbar/admin_toolbar_search/src/SearchLinks.php
modules/contrib/admin_toolbar/admin_toolbar_search/tests/src/FunctionalJavascript/AdminToolbarSearchTest.php
modules/contrib/admin_toolbar/admin_toolbar_search/tests/src/FunctionalJavascript/AdminToolbarSearchTestBase.php
modules/contrib/admin_toolbar/admin_toolbar_search/tests/src/FunctionalJavascript/AdminToolbarToolsSearchTest.php
modules/contrib/admin_toolbar/admin_toolbar_tools/admin_toolbar_tools.install
modules/contrib/admin_toolbar/admin_toolbar_tools/admin_toolbar_tools.module
modules/contrib/admin_toolbar/admin_toolbar_tools/src/AdminToolbarToolsHelper.php
modules/contrib/admin_toolbar/admin_toolbar_tools/src/Controller/ToolbarController.php
modules/contrib/admin_toolbar/admin_toolbar_tools/src/Form/AdminToolbarToolsSettingsForm.php
modules/contrib/admin_toolbar/admin_toolbar_tools/src/Plugin/Derivative/ExtraLinks.php
modules/contrib/admin_toolbar/admin_toolbar_tools/src/Plugin/Menu/MenuLinkEntity.php
modules/contrib/admin_toolbar/admin_toolbar_tools/tests/src/Functional/AdminToolbarToolsAlterTest.php
modules/contrib/admin_toolbar/src/Render/Element/AdminToolbar.php
modules/contrib/admin_toolbar/tests/src/Functional/AdminToolbarAlterTest.php
modules/contrib/admin_toolbar/tests/src/Functional/AdminToolbarToolsSortTest.php

14 files with changes
=====================

1) modules/contrib/admin_toolbar/tests/src/Functional/AdminToolbarToolsSortTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\admin_toolbar\Functional;

+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ElementNotFoundException;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\media\Entity\MediaType;
 use Drupal\system\Entity\Menu;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   /**
    * A test user with permission to access the administrative toolbar.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@

     foreach ($links as $key => $link) {
       // Using assert contains because prefaces the urls with "/subdirectory".
-      $this->assertContains($expected[$key], $link);
+      $this->assertStringContainsString($expected[$key], $link);
     }
   }

@@ @@
    * @param string $url
    *   The url to assert exists in the admin menu.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    */
   protected function assertMenuHasHref($url) {
     $this->assertSession()
@@ @@
    * @param string $url
    *   The url to assert exists in the admin menu.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   protected function assertMenuDoesNotHaveHref($url) {
     $this->assertSession()
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/admin_toolbar/tests/src/Functional/AdminToolbarAlterTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\admin_toolbar\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A test user with permission to access the administrative toolbar.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create and log in an administrative user.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/admin_toolbar/admin_toolbar_tools/tests/src/Functional/AdminToolbarToolsAlterTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\admin_toolbar_tools\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A test user with permission to access the administrative toolbar.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create and log in an administrative user.
     $this->adminUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/admin_toolbar/admin_toolbar_tools/src/Plugin/Menu/MenuLinkEntity.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\admin_toolbar_tools\Plugin\Menu;

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityDescriptionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Menu\MenuLinkDefault;
@@ @@
   /**
    * The entity represented in the menu link.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Menu\StaticMenuLinkOverridesInterface $static_override
+   * @param StaticMenuLinkOverridesInterface $static_override
    *   The static override storage.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, StaticMenuLinkOverridesInterface $static_override, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/admin_toolbar/admin_toolbar_tools/src/Plugin/Derivative/ExtraLinks.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\admin_toolbar_tools\Plugin\Derivative;

+use Drupal\Core\Config\Config;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;

@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * The admin toolbar tools configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/admin_toolbar/admin_toolbar_tools/src/Form/AdminToolbarToolsSettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The cache menu instance.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheMenu;

@@ @@
   /**
    * The menu link manager instance.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;

@@ @@
   /**
    * AdminToolbarToolsSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menuLinkManager
+   * @param MenuLinkManagerInterface $menuLinkManager
    *   A menu link manager instance.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheMenu
+   * @param CacheBackendInterface $cacheMenu
    *   A cache menu instance.
    */
   public function __construct(ConfigFactoryInterface $configFactory, MenuLinkManagerInterface $menuLinkManager, CacheBackendInterface $cacheMenu) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/admin_toolbar/admin_toolbar_tools/src/Controller/ToolbarController.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * A cron instance.
    *
-   * @var \Drupal\Core\CronInterface
+   * @var CronInterface
    */
   protected $cron;

@@ @@
   /**
    * A menu link manager instance.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;

@@ @@
   /**
    * A context link manager instance.
    *
-   * @var \Drupal\Core\Menu\ContextualLinkManager
+   * @var ContextualLinkManager
    */
   protected $contextualLinkManager;

@@ @@
   /**
    * A local task manager instance.
    *
-   * @var \Drupal\Core\Menu\LocalTaskManager
+   * @var LocalTaskManager
    */
   protected $localTaskLinkManager;

@@ @@
   /**
    * A local action manager instance.
    *
-   * @var \Drupal\Core\Menu\LocalActionManager
+   * @var LocalActionManager
    */
   protected $localActionLinkManager;

@@ @@
   /**
    * A cache backend interface instance.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheRender;

@@ @@
   /**
    * A date time instance.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * A request stack symfony instance.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * A plugin cache clear instance.
    *
-   * @var \Drupal\Core\Plugin\CachedDiscoveryClearerInterface
+   * @var CachedDiscoveryClearerInterface
    */
   protected $pluginCacheClearer;

@@ @@
   /**
    * The cache menu instance.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheMenu;

@@ @@
   /**
    * A TwigEnvironment instance.
    *
-   * @var \Drupal\Core\Template\TwigEnvironment
+   * @var TwigEnvironment
    */
   protected $twig;

@@ @@
   /**
    * The search theme.registry service.
    *
-   * @var \Drupal\Core\Theme\Registry
+   * @var Registry
    */
   protected $themeRegistry;

@@ @@
   /**
    * Constructs a ToolbarController object.
    *
-   * @param \Drupal\Core\CronInterface $cron
+   * @param CronInterface $cron
    *   A cron instance.
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menuLinkManager
+   * @param MenuLinkManagerInterface $menuLinkManager
    *   A menu link manager instance.
-   * @param \Drupal\Core\Menu\ContextualLinkManager $contextualLinkManager
+   * @param ContextualLinkManager $contextualLinkManager
    *   A context link manager instance.
-   * @param \Drupal\Core\Menu\LocalTaskManager $localTaskLinkManager
+   * @param LocalTaskManager $localTaskLinkManager
    *   A local task manager instance.
-   * @param \Drupal\Core\Menu\LocalActionManager $localActionLinkManager
+   * @param LocalActionManager $localActionLinkManager
    *   A local action manager instance.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheRender
+   * @param CacheBackendInterface $cacheRender
    *   A cache backend interface instance.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   A date time instance.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   A request stack symfony instance.
-   * @param \Drupal\Core\Plugin\CachedDiscoveryClearerInterface $plugin_cache_clearer
+   * @param CachedDiscoveryClearerInterface $plugin_cache_clearer
    *   A plugin cache clear instance.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_menu
+   * @param CacheBackendInterface $cache_menu
    *   A cache menu instance.
-   * @param \Drupal\Core\Template\TwigEnvironment $twig
+   * @param TwigEnvironment $twig
    *   A TwigEnvironment instance.
-   * @param \Drupal\Core\Theme\Registry $theme_registry
+   * @param Registry $theme_registry
    *   The theme.registry service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/admin_toolbar/admin_toolbar_tools/src/AdminToolbarToolsHelper.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The local task manger.
    *
-   * @var \Drupal\Core\Menu\LocalTaskManager
+   * @var LocalTaskManager
    *   The local task manager menu.
    */
   protected $localTaskManager;
@@ @@
   /**
    * The route match interface.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    *   The route match.
    */
   protected $routeMatch;
@@ @@
   /**
    * Create an AdminToolbarToolsHelper object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Menu\LocalTaskManager $local_task_manager
+   * @param LocalTaskManager $local_task_manager
    *   The local task manager.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, LocalTaskManager $local_task_manager, RouteMatchInterface $route_match) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/admin_toolbar/admin_toolbar_search/tests/src/FunctionalJavascript/AdminToolbarToolsSearchTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\admin_toolbar_search\FunctionalJavascript;

+use Drupal\user\UserInterface;
 use Drupal\media\Entity\MediaType;
 use Drupal\Tests\media\Traits\MediaTypeCreationTrait;

@@ @@
   /**
    * The admin user for tests.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/admin_toolbar/admin_toolbar_search/tests/src/FunctionalJavascript/AdminToolbarSearchTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\admin_toolbar_search\FunctionalJavascript;

+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ElementNotFoundException;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\system\Entity\Menu;

@@ @@
   /**
    * A user with the 'Use Admin Toolbar search' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $userWithAccess;

@@ @@
   /**
    * A test user without the 'Use Admin Toolbar search' permission..
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $noAccessUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $baby_names = [
@@ @@
       return ($page->find('css', 'ul.ui-autocomplete')->isVisible() === TRUE);
     });
     $suggestions_markup = $page->find('css', 'ul.ui-autocomplete')->getHtml();
-    $this->assertContains($contains, $suggestions_markup);
+    $this->assertStringContainsString($contains, $suggestions_markup);
   }

   /**
@@ @@
     }
     else {
       $suggestions_markup = $page->find('css', 'ul.ui-autocomplete')->getHtml();
-      $this->assertNotContains($contains, $suggestions_markup);
+      $this->assertStringNotContainsString($contains, $suggestions_markup);
     }
   }

@@ @@
    * @param string $url
    *   The url to assert exists in the admin menu.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    */
   protected function assertMenuHasHref($url) {
     $this->assertSession()
@@ @@
    * @param string $url
    *   The url to assert exists in the admin menu.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   protected function assertMenuDoesNotHaveHref($url) {
     $this->assertSession()
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/admin_toolbar/admin_toolbar_search/src/SearchLinks.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\admin_toolbar_search;

+use Drupal\Core\Config\Config;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Cache\Context\CacheContextsManager;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;

@@ @@
   /**
    * The cache context manager service.
    *
-   * @var \Drupal\Core\Cache\Context\CacheContextsManager
+   * @var CacheContextsManager
    */
   protected $cacheContextManager;

@@ @@
   /**
    * The toolbar cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $toolbarCache;

@@ @@
   /**
    * The admin toolbar tools configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Constructs a SearchLinks object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
-   * @param \Drupal\Core\Cache\Context\CacheContextsManager $cache_context_manager
+   * @param CacheContextsManager $cache_context_manager
    *   The cache contexts manager.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $toolbar_cache
+   * @param CacheBackendInterface $toolbar_cache
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory mservice.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, RouteProviderInterface $route_provider, CacheContextsManager $cache_context_manager, CacheBackendInterface $toolbar_cache, ConfigFactoryInterface $config_factory) {
@@ @@
    * @return array
    *   An array of link data for the JSON used for search.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getLinks() {
     $max_bundle_number = $this->config->get('max_bundle_number');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/admin_toolbar/admin_toolbar_search/src/Controller/AdminToolbarSearchController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The search links service.
    *
-   * @var \Drupal\admin_toolbar_search\SearchLinks
+   * @var SearchLinks
    */
   protected $links;

@@ @@
   /**
    * Constructs an AdminToolbarSearchController object.
    *
-   * @param \Drupal\admin_toolbar_search\SearchLinks $links
+   * @param SearchLinks $links
    *   The search links service.
    */
   public function __construct(SearchLinks $links) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/admin_toolbar/admin_toolbar_links_access_filter/admin_toolbar_links_access_filter.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Menu\MenuLinkDefault;
+use Drupal\Core\Menu\MenuLinkBase;
 /**
  * @file
  * This module don't show menu links that you don't have access permission for.
@@ @@
     // In rare cases (for unknown reasons) menu_name may not be set.
     // As fallback, we can fetch it from the first menu item.
     $first_link = reset($variables['items']);
-    /** @var Drupal\Core\Menu\MenuLinkDefault $original_link */
+    /** @var MenuLinkDefault $original_link */
     // Fetch the menu_name from the original link.
     $original_link = $first_link['original_link'];
     $variables['menu_name'] = $original_link->getMenuName();
@@ @@
     $route_name = $route;
     $route_params = [];
     if (!empty($item['original_link'])) {
-      /** @var \Drupal\Core\Menu\MenuLinkBase $original_link */
+      /** @var MenuLinkBase $original_link */
       $original_link = $item['original_link'];
       if ($original_link->getUrlObject()->isExternal()) {
         // Do not filter external URL at all.
@@ @@
 /**
  * Checks, if the given user has admin rights.
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The account to check.
  *
  * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


14) modules/contrib/admin_toolbar/admin_toolbar.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Menu\MenuLinkTreeElement;
 /**
  * @file
  * This is the module to create a drop-down menu for the core toolbar.
@@ @@
 /**
  * Adds toolbar-specific attributes to the menu link tree.
  *
- * @param \Drupal\Core\Menu\MenuLinkTreeElement[] $tree
+ * @param MenuLinkTreeElement[] $tree
  *   The menu link tree to manipulate.
  *
- * @return \Drupal\Core\Menu\MenuLinkTreeElement[]
+ * @return MenuLinkTreeElement[]
  *   The manipulated menu link tree.
  */
 function toolbar_tools_menu_navigation_links(array $tree) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 14 files have been changed by Rector                                      

