modules/contrib/configelement/configelement.module
modules/contrib/configelement/src/EditableConfig/EditableConfigFallbackItem.php
modules/contrib/configelement/src/EditableConfig/EditableConfigItem.php
modules/contrib/configelement/src/EditableConfig/EditableConfigItemFactory.php
modules/contrib/configelement/src/EditableConfig/EditableConfigItemInterface.php
modules/contrib/configelement/src/EditableConfig/EditableConfigOverride.php
modules/contrib/configelement/src/EditableConfig/EditableConfigWrapper.php
modules/contrib/configelement/src/EditableConfig/EditableConfigWrapperBase.php
modules/contrib/configelement/src/EditableConfig/EditableConfigWrapperInterface.php
modules/contrib/configelement/src/Element/ConfigEdit.php
modules/contrib/configelement/src/Element/ConfigView.php
modules/contrib/configelement/src/Form/ConfigForm.php
modules/contrib/configelement/src/Form/ConfigFormFactory.php
modules/contrib/configelement/src/Page/ConfigFormController.php
modules/contrib/configelement/src/Routing/ConfigFormRouteEnhancer.php
modules/contrib/configelement/tests/src/Functional/AdminPageTest.php

15 files with changes
=====================

1) modules/contrib/configelement/tests/src/Functional/AdminPageTest.php:32

    ---------- begin diff ----------
@@ @@
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/configelement/src/Routing/ConfigFormRouteEnhancer.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Returns whether the enhancer runs on the current route.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The current route.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/configelement/src/Page/ConfigFormController.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The config form factory.
    *
-   * @var \Drupal\configelement\Form\ConfigFormFactory
+   * @var ConfigFormFactory
    */
   protected $configFormFactory;

@@ @@
   /**
    * ConfigFormPage constructor.
    *
-   * @param \Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface $argument_resolver
+   * @param ArgumentResolverInterface $argument_resolver
    *   The argument resolver.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder.
-   * @param \Drupal\configelement\Form\ConfigFormFactory $configFormFactory
+   * @param ConfigFormFactory $configFormFactory
    *   The config form factory.
    */
   public function __construct(ArgumentResolverInterface $argument_resolver, FormBuilderInterface $form_builder, ConfigFormFactory $configFormFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/configelement/src/Form/ConfigFormFactory.php:8

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * ConfigFormFactory constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
     $this->configFactory = $configFactory;
@@ @@
    * @param string[]|string $configItemNames
    *   The config name or names.
    *
-   * @return \Drupal\configelement\Form\ConfigForm
+   * @return ConfigForm
    *   The config form.
    */
   public function formForConfig($configItemNames) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/configelement/src/Form/ConfigForm.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * ConfigForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    * @param string[]|string $configItemNames
    *   The config item name or names. A config item name is either the name of
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/configelement/src/Element/ConfigView.php:49

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element to process. Properties used:
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The current state of the form.
    * @param array $completeForm
    *   The complete form structure.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/configelement/src/Element/ConfigEdit.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\configelement\Element;

+use Symfony\Component\Validator\ConstraintViolationInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element\FormElement;
@@ @@
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The current state of the form.
    * @param array $completeForm
    *   The complete form structure.
@@ @@
     // factory / wrapper level.
     // @see \Drupal\Core\Form\FormValidator::doValidateForm
     $violations = $editableConfigItem->validate();
-    /** @var \Symfony\Component\Validator\ConstraintViolationInterface $violation */
+    /** @var ConstraintViolationInterface $violation */
     foreach ($violations as $violation) {
       $formState->setError($element, $violation->getMessage());
     }
@@ @@
    *
    * @param $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   public static function submitAllConfigEdit($form, FormStateInterface $formState) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/configelement/src/EditableConfig/EditableConfigWrapperInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\configelement\EditableConfig;

+use Drupal\Core\Config\Schema\TypedConfigInterface;
+use Symfony\Component\Validator\ConstraintViolationListInterface;
 /**
  * Class EditableConfigWrapper
  *
@@ @@
    *
    * @param string $propertyPath
    *
-   * @return \Drupal\Core\Config\Schema\TypedConfigInterface
+   * @return TypedConfigInterface
    */
   public function getSchemaWrapper($propertyPath = '');

@@ @@
   /**
    * Validate config.
    *
-   * @return \Symfony\Component\Validator\ConstraintViolationListInterface
+   * @return ConstraintViolationListInterface
    */
   public function validate();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/configelement/src/EditableConfig/EditableConfigWrapperBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\configelement\EditableConfig;

+use Drupal\Core\Config\Config;
+use Drupal\language\Config\LanguageConfigOverride;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Config\Schema\ArrayElement;
 use Drupal\Core\Config\Schema\Mapping;
@@ @@

 abstract class EditableConfigWrapperBase implements EditableConfigWrapperInterface {

-  /** @var \Drupal\Core\Config\Config | \Drupal\language\Config\LanguageConfigOverride */
+  /** @var Config|LanguageConfigOverride */
   protected $config;

-  /** @var \Drupal\Core\Config\TypedConfigManagerInterface */
+  /** @var TypedConfigManagerInterface */
   protected $typedConfigManager;

   /**
@@ @@
    *
    * @internal Use EditableConfigItemFactory::get
    *
-   * @param \Drupal\Core\Config\Config | \Drupal\language\Config\LanguageConfigOverride $config
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typedConfigManager
+   * @param Config|LanguageConfigOverride $config
+   * @param TypedConfigManagerInterface $typedConfigManager
    */
   public function __construct($config, TypedConfigManagerInterface $typedConfigManager) {
     $this->config = $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/configelement/src/EditableConfig/EditableConfigWrapper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\configelement\EditableConfig;

+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\TypedConfigManagerInterface;

@@ @@
  */
 class EditableConfigWrapper extends EditableConfigWrapperBase implements EditableConfigWrapperInterface {

-  /** @var \Drupal\Core\Config\Config */
+  /** @var Config */
   protected $config;

   /**
@@ @@
    *
    * @internal Use EditableConfigItemFactory::get
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    */
   public function __construct(Config $config, TypedConfigManagerInterface $typedConfigManager) {
     parent::__construct($config, $typedConfigManager);
@@ @@
   }

   /**
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *
    * @return \Drupal\configelement\EditableConfig\EditableConfigWrapper
    */
@@ @@
    */
   public function addCachableDependencyTo(array &$element) {
     // @todo Inject.
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $renderer->addCacheableDependency($element, $this->config);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/configelement/src/EditableConfig/EditableConfigOverride.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\configelement\EditableConfig;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\TypedConfigManagerInterface;
 use Drupal\language\Config\LanguageConfigOverride;

 class EditableConfigOverride extends EditableConfigWrapperBase implements EditableConfigWrapperInterface {

-  /** @var \Drupal\language\Config\LanguageConfigOverride */
+  /** @var LanguageConfigOverride */
   protected $config;

   /** @var array */
@@ @@
    *
    * @internal Use EditableConfigItemFactory::get
    *
-   * @param \Drupal\language\Config\LanguageConfigOverride $config
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typedConfigManager
+   * @param LanguageConfigOverride $config
+   * @param TypedConfigManagerInterface $typedConfigManager
    */
   public function __construct(LanguageConfigOverride $config, TypedConfigManagerInterface $typedConfigManager) {
     parent::__construct($config, $typedConfigManager);
@@ @@
   }

   /**
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *
    * @return \Drupal\configelement\EditableConfig\EditableConfigOverride
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/configelement/src/EditableConfig/EditableConfigItemInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\configelement\EditableConfig;

+use Drupal\Core\TypedData\TypedDataInterface;
+use Symfony\Component\Validator\ConstraintViolationList;
 /**
  * Class EditableConfigItem
  *
@@ @@
   /**
    * Get schema wrapper
    *
-   * @return \Drupal\Core\TypedData\TypedDataInterface
+   * @return TypedDataInterface
    */
   public function getSchemaWrapper();

@@ @@
   /**
    * Validate values.
    *
-   * @return \Symfony\Component\Validator\ConstraintViolationList
+   * @return ConstraintViolationList
    */
   public function validate();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


13) modules/contrib/configelement/src/EditableConfig/EditableConfigItemFactory.php:22

    ---------- begin diff ----------
@@ @@
  */
 class EditableConfigItemFactory {

-  /** @var \Drupal\Core\Config\ConfigFactoryInterface */
+  /** @var ConfigFactoryInterface */
   private $configFactory;

-  /** @var \Drupal\Core\Language\LanguageManagerInterface */
+  /** @var LanguageManagerInterface */
   private $languageManager;

   /** @var EditableConfigWrapperInterface[][] */
@@ @@
   /**
    * EditableConfigItemFactory constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param ConfigFactoryInterface $configFactory
+   * @param LanguageManagerInterface $languageManager
    */
   public function __construct(ConfigFactoryInterface $configFactory, LanguageManagerInterface $languageManager) {
     $this->configFactory = $configFactory;
@@ @@
   /**
    * Validate values.
    *
-   * @return \Symfony\Component\Validator\ConstraintViolationList
+   * @return ConstraintViolationList
    *   The violations.
    */
   public function validate() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


14) modules/contrib/configelement/src/EditableConfig/EditableConfigItem.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\configelement\EditableConfig;

+use Drupal\Core\TypedData\TypedDataInterface;
 use Drupal\Core\Config\Schema\TypedConfigInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;

@@ @@
   /** @var string */
   protected $key;

-  /** @var \Drupal\Core\TypedData\TypedDataInterface */
+  /** @var TypedDataInterface */
   protected $schemaWrapper;

   /**
@@ @@
   }

   /**
-   * @param \Drupal\configelement\EditableConfig\EditableConfigWrapperInterface $editableConfigWrapper
+   * @param EditableConfigWrapperInterface $editableConfigWrapper
    * @param $key
    *
    * @return \Drupal\configelement\EditableConfig\EditableConfigItem
@@ @@
   /**
    * Get schema wrapper.
    *
-   * @return \Drupal\Core\TypedData\TypedDataInterface
+   * @return TypedDataInterface
    *
    * @throws \InvalidArgumentException
    *   If a config or key does not have a schema..
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


15) modules/contrib/configelement/src/EditableConfig/EditableConfigFallbackItem.php:7

    ---------- begin diff ----------
@@ @@

   use StringTranslationTrait;

-  /** @var \Drupal\configelement\EditableConfig\EditableConfigItemInterface */
+  /** @var EditableConfigItemInterface */
   protected $editableConfigItem;

-  /** @var \Drupal\configelement\EditableConfig\EditableConfigItemInterface */
+  /** @var EditableConfigItemInterface */
   protected $editableConfigBaseItem;

   /**
    * EditableConfigFallbackItem constructor.
    *
-   * @param \Drupal\configelement\EditableConfig\EditableConfigItemInterface $editableConfigItem
-   * @param \Drupal\configelement\EditableConfig\EditableConfigItemInterface $editableConfigBaseItem
+   * @param EditableConfigItemInterface $editableConfigItem
+   * @param EditableConfigItemInterface $editableConfigBaseItem
    */
   public function __construct(EditableConfigItemInterface $editableConfigItem, EditableConfigItemInterface $editableConfigBaseItem) {
     $this->editableConfigItem = $editableConfigItem;
@@ @@
   }

   /**
-   * @param \Drupal\configelement\EditableConfig\EditableConfigItemInterface $item
-   * @param \Drupal\configelement\EditableConfig\EditableConfigItemInterface $baseItem
+   * @param EditableConfigItemInterface $item
+   * @param EditableConfigItemInterface $baseItem
    *
    * @return \Drupal\configelement\EditableConfig\EditableConfigFallbackItem
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 15 files have been changed by Rector                                      

