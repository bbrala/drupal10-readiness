diff --git a/potion.install b/potion.install
index b8610bd..c0689be 100644
--- a/potion.install
+++ b/potion.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Config\Config;
+use Drupal\potion\Utility;
 /**
  * @file
  * Contains potion.install.
@@ -77,10 +79,10 @@ function potion_requirements($phase) {
 
   // Asserts `gettext` utilities are reacheable & executable.
   if ($phase == 'runtime') {
-    /** @var \Drupal\Core\Config\Config $gettextConfig */
+    /** @var Config $gettextConfig */
     $gettextConfig = \Drupal::service('config.factory')->get('potion.gettext.settings');
 
-    /** @var \Drupal\potion\Utility $utility */
+    /** @var Utility $utility */
     $utility = \Drupal::service('potion.utility');
 
     // Path to gettext binaries files. When empty, the $PATH values are used.
diff --git a/src/Commands/PotionCommands.php b/src/Commands/PotionCommands.php
index 7890386..9a033cb 100644
--- a/src/Commands/PotionCommands.php
+++ b/src/Commands/PotionCommands.php
@@ -24,59 +24,59 @@ class PotionCommands extends DrushCommands {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The Translation importer.
    *
-   * @var \Drupal\potion\TranslationsImport
+   * @var TranslationsImport
    */
   protected $transImport;
 
   /**
    * The Translation exporter.
    *
-   * @var \Drupal\potion\TranslationsExport
+   * @var TranslationsExport
    */
   protected $transExport;
 
   /**
    * The Translation extractor service.
    *
-   * @var \Drupal\potion\TranslationsExtractor
+   * @var TranslationsExtractor
    */
   protected $transExtractor;
 
   /**
    * The Translation fill service.
    *
-   * @var \Drupal\potion\TranslationsFill
+   * @var TranslationsFill
    */
   protected $transFill;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\potion\TranslationsImport $translations_import
+   * @param TranslationsImport $translations_import
    *   The Translation importer service.
-   * @param \Drupal\potion\TranslationsExport $translations_export
+   * @param TranslationsExport $translations_export
    *   The Translation exporter service.
-   * @param \Drupal\potion\TranslationsExtractor $translations_extractor
+   * @param TranslationsExtractor $translations_extractor
    *   The Translation extractor service.
-   * @param \Drupal\potion\TranslationsFill $translations_fill
+   * @param TranslationsFill $translations_fill
    *   The Translation fill service.
    */
   public function __construct(Utility $utility, FileSystemInterface $file_system, TranslationsImport $translations_import, TranslationsExport $translations_export, TranslationsExtractor $translations_extractor, TranslationsFill $translations_fill) {
@@ -123,12 +123,12 @@ class PotionCommands extends DrushCommands {
    *
    * @aliases po:import
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Formatted output summary.
    *
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If no langcode isn't a valid enabled language.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source isn't a valid or malformed .po file.
    */
   public function import($langcode, $source, array $options = [
@@ -204,12 +204,12 @@ class PotionCommands extends DrushCommands {
    *
    * @aliases po:export
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Formatted output summary.
    *
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If no langcode isn't a valid enabled language.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source already exists.
    */
   public function export($langcode, $destination, array $options = [
@@ -312,18 +312,18 @@ class PotionCommands extends DrushCommands {
    *
    * @aliases po:gen
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Formatted output summary.
    *
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If no langcode isn't a valid enabled language.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source does not exists.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source is not readable.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given destination does not exists.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given destination is not writable.
    */
   public function translationExtract($langcode, $source, $destination, array $options = [
@@ -440,18 +440,18 @@ class PotionCommands extends DrushCommands {
    *
    * @aliases po:fill
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Formatted output summary.
    *
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the langcode isn't a valid enabled language.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source does not exists.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source isn't a valid or malformed .po file.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source is not readable.
-   * @throws \Drupal\potion\Exception\ConsoleException
+   * @throws ConsoleException
    *   If the given source is not writable.
    */
   public function fill($langcode, $source, array $options = [
diff --git a/src/Extractor/AnnotationExtractor.php b/src/Extractor/AnnotationExtractor.php
index c83b2f5..00792a4 100644
--- a/src/Extractor/AnnotationExtractor.php
+++ b/src/Extractor/AnnotationExtractor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion\Extractor;
 
+use Doctrine\Common\Annotations\Reader;
 use Symfony\Component\Finder\Finder;
 use Drupal\potion\Exception\ExtractorException;
 use Drupal\Component\Annotation\Doctrine\SimpleAnnotationReader;
@@ -21,21 +22,21 @@ class AnnotationExtractor extends ExtractorBase implements ExtractableInterface
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * The doctrine annotation reader.
    *
-   * @var \Doctrine\Common\Annotations\Reader
+   * @var Reader
    */
   protected $annotationReader;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
    */
   public function __construct(Utility $utility) {
@@ -72,7 +73,7 @@ class AnnotationExtractor extends ExtractorBase implements ExtractableInterface
   /**
    * Extract from a Annocation Class file & store it in the catalogue.
    *
-   * @param \Symfony\Component\Finder\SplFileInfo $file
+   * @param SplFileInfo $file
    *   The file to process File.
    */
   protected function extractFromFile(SplFileInfo $file) {
@@ -121,7 +122,7 @@ class AnnotationExtractor extends ExtractorBase implements ExtractableInterface
   /**
    * Extract the fully-qualified class name of a php file class.
    *
-   * @param \Symfony\Component\Finder\SplFileInfo $file
+   * @param SplFileInfo $file
    *   The file to process File.
    *
    * @return string
diff --git a/src/Extractor/ExtractableInterface.php b/src/Extractor/ExtractableInterface.php
index 98f9b17..90fe34f 100644
--- a/src/Extractor/ExtractableInterface.php
+++ b/src/Extractor/ExtractableInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion\Extractor;
 
+use Drupal\potion\MessageCatalogue;
 /**
  * Defines the Extractable interface.
  */
@@ -15,7 +16,7 @@ interface ExtractableInterface {
    * @param bool $recursive
    *   Does the extractor should recursively lookup for files.
    *
-   * @return \Drupal\potion\MessageCatalogue
+   * @return MessageCatalogue
    *   Catalogue of extracted translations messages.
    */
   public function extract($path, $recursive = FALSE);
diff --git a/src/Extractor/ExtractorBase.php b/src/Extractor/ExtractorBase.php
index b1caef8..1dd6f8c 100644
--- a/src/Extractor/ExtractorBase.php
+++ b/src/Extractor/ExtractorBase.php
@@ -12,7 +12,7 @@ abstract class ExtractorBase {
   /**
    * The catalogue of messages.
    *
-   * @var \Drupal\potion\MessageCatalogue
+   * @var MessageCatalogue
    */
   protected $catalogue;
 
diff --git a/src/Extractor/PhpExtractor.php b/src/Extractor/PhpExtractor.php
index 31a2fa7..e06cea2 100644
--- a/src/Extractor/PhpExtractor.php
+++ b/src/Extractor/PhpExtractor.php
@@ -116,14 +116,14 @@ class PhpExtractor extends ExtractorBase implements ExtractableInterface {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
    */
   public function __construct(Utility $utility) {
diff --git a/src/Extractor/TwigExtractor.php b/src/Extractor/TwigExtractor.php
index e8cffcc..588e078 100644
--- a/src/Extractor/TwigExtractor.php
+++ b/src/Extractor/TwigExtractor.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\potion\Extractor;
 
+use Drupal\potion\MessageCatalogue;
+use Twig\Error\RuntimeError;
+use Twig\Error\SyntaxError;
+use Drupal\potion\Twig\NodeVisitor\TranslationNodeVisitor;
 use Twig\Source;
 use Symfony\Component\Finder\Finder;
 use Drupal\potion\Exception\ExtractorException;
@@ -55,14 +59,14 @@ class TwigExtractor extends ExtractorBase implements ExtractableInterface {
    * @param string $template
    *   Twig content template.
    *
-   * @return \Drupal\potion\MessageCatalogue
+   * @return MessageCatalogue
    *   Catalogue of extracted translations messages.
    *
-   * @throws \Twig\Error\RuntimeError
-   * @throws \Twig\Error\SyntaxError
+   * @throws RuntimeError
+   * @throws SyntaxError
    */
   protected function extractFromTemplate($template) {
-    /** @var \Drupal\potion\Twig\NodeVisitor\TranslationNodeVisitor $visitor */
+    /** @var TranslationNodeVisitor $visitor */
     $visitor = $this->twig->getExtension('\Drupal\potion\Twig\Extension\TransExtractorExtension')
       ->getTranslationNodeVisitor();
     $visitor->enable();
diff --git a/src/Extractor/YamlExtractor.php b/src/Extractor/YamlExtractor.php
index 16a0b74..6dd38dc 100644
--- a/src/Extractor/YamlExtractor.php
+++ b/src/Extractor/YamlExtractor.php
@@ -24,14 +24,14 @@ class YamlExtractor extends ExtractorBase implements ExtractableInterface {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * Provides a YAML serialization implementation.
    *
-   * @var \Drupal\Component\Serialization\SerializationInterface
+   * @var SerializationInterface
    */
   protected $yamlSerializer;
 
@@ -80,9 +80,9 @@ class YamlExtractor extends ExtractorBase implements ExtractableInterface {
   /**
    * Constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
-   * @param \Drupal\Component\Serialization\SerializationInterface $yaml_serialization
+   * @param SerializationInterface $yaml_serialization
    *   Provides a YAML serialization implementation.
    */
   public function __construct(Utility $utility, SerializationInterface $yaml_serialization) {
@@ -114,7 +114,7 @@ class YamlExtractor extends ExtractorBase implements ExtractableInterface {
   /**
    * Extract from a Annocation Class file and store in the catalogue.
    *
-   * @param \Symfony\Component\Finder\SplFileInfo $file
+   * @param SplFileInfo $file
    *   The file to process File.
    */
   protected function extractFromFile(SplFileInfo $file) {
diff --git a/src/Form/GettextSettingsForm.php b/src/Form/GettextSettingsForm.php
index 5fabf24..105abff 100644
--- a/src/Form/GettextSettingsForm.php
+++ b/src/Form/GettextSettingsForm.php
@@ -16,16 +16,16 @@ class GettextSettingsForm extends ConfigFormBase {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * GettextSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Utility $utility) {
diff --git a/src/GettextWrapper.php b/src/GettextWrapper.php
index 9bf7f91..f223a1a 100644
--- a/src/GettextWrapper.php
+++ b/src/GettextWrapper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion;
 
+use Drupal\Core\Config\Config;
 use Symfony\Component\Process\Process;
 use Drupal\potion\Exception\GettextException;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -13,7 +14,7 @@ class GettextWrapper {
   /**
    * The gettext settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $gettextConfig;
 
@@ -30,7 +31,7 @@ class GettextWrapper {
   /**
    * Construct the GettextWrapper object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -56,7 +57,7 @@ class GettextWrapper {
    * @return bool
    *   TRUE if the given file is valid, FALSE otherwise.
    *
-   * @throws \Drupal\potion\Exception\GettextException
+   * @throws GettextException
    */
   public function msgfmt($src) {
     $cmd = $this->path . 'msgfmt';
@@ -98,7 +99,7 @@ class GettextWrapper {
    * @return bool
    *   TRUE if the given file is valid, FALSE otherwise.
    *
-   * @throws \Drupal\potion\Exception\GettextException
+   * @throws GettextException
    */
   public function msgcat(array $files, $output) {
     $cmd = $this->path . 'msgcat';
diff --git a/src/MessageCatalogue.php b/src/MessageCatalogue.php
index b62ce54..73b6cc0 100644
--- a/src/MessageCatalogue.php
+++ b/src/MessageCatalogue.php
@@ -12,7 +12,7 @@ class MessageCatalogue {
   /**
    * Collection of PoItem.
    *
-   * @var \Drupal\Component\Gettext\PoItem[]
+   * @var PoItem[]
    */
   private $messages = [];
 
@@ -61,7 +61,7 @@ class MessageCatalogue {
   /**
    * Gets the messages.
    *
-   * @return \Drupal\Component\Gettext\PoItem[]
+   * @return PoItem[]
    *   An array of messages.
    */
   public function all() {
diff --git a/src/TranslationsExport.php b/src/TranslationsExport.php
index c9a2302..1302391 100644
--- a/src/TranslationsExport.php
+++ b/src/TranslationsExport.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\locale\PoDatabaseReader;
@@ -16,32 +17,32 @@ class TranslationsExport {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * The site settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $siteConfig;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(Utility $utility, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
diff --git a/src/TranslationsExtractor.php b/src/TranslationsExtractor.php
index 58c19a5..eee83c3 100644
--- a/src/TranslationsExtractor.php
+++ b/src/TranslationsExtractor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\potion\Extractor\TwigExtractor;
@@ -20,68 +21,68 @@ class TranslationsExtractor {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * The site settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $siteConfig;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Extract Translations from Twig templates.
    *
-   * @var \Drupal\potion\Extractor\TwigExtractor
+   * @var TwigExtractor
    */
   protected $twigExtractor;
 
   /**
    * Extract Translations from PHP files.
    *
-   * @var \Drupal\potion\Extractor\PhpExtractor
+   * @var PhpExtractor
    */
   protected $phpExtractor;
 
   /**
    * Extract Translations Annotation from PHP Class files.
    *
-   * @var \Drupal\potion\Extractor\AnnotationExtractor
+   * @var AnnotationExtractor
    */
   protected $annotationExtractor;
 
   /**
    * Extract Translations from YAML files.
    *
-   * @var \Drupal\potion\Extractor\YamlExtractor
+   * @var YamlExtractor
    */
   protected $yamlExtractor;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\potion\Extractor\TwigExtractor $twig_extractor
+   * @param TwigExtractor $twig_extractor
    *   Extract Translations from Twig templates.
-   * @param \Drupal\potion\Extractor\PhpExtractor $php_extractor
+   * @param PhpExtractor $php_extractor
    *   Extract Translations from PHP files.
-   * @param \Drupal\potion\Extractor\AnnotationExtractor $annotation_extractor
+   * @param AnnotationExtractor $annotation_extractor
    *   Extract Translations Annotation from PHP Class files.
-   * @param \Drupal\potion\Extractor\YamlExtractor $yaml_extractor
+   * @param YamlExtractor $yaml_extractor
    *   Extract Translations Annotation from PHP Class files.
    */
   public function __construct(Utility $utility, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system, TwigExtractor $twig_extractor, PhpExtractor $php_extractor, AnnotationExtractor $annotation_extractor, YamlExtractor $yaml_extractor) {
diff --git a/src/TranslationsFill.php b/src/TranslationsFill.php
index 1ecca92..b205da7 100644
--- a/src/TranslationsFill.php
+++ b/src/TranslationsFill.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\potion;
 
+use Drupal\Core\Config\Config;
+use Drupal\locale\SourceString;
+use Drupal\locale\TranslationString;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\locale\StringStorageInterface;
@@ -19,48 +22,48 @@ class TranslationsFill {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * The site settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $siteConfig;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * String translation storage object.
    *
-   * @var \Drupal\locale\StringStorageInterface
+   * @var StringStorageInterface
    */
   protected $localeStorage;
 
   /**
    * The catalogue of messages.
    *
-   * @var \Drupal\potion\MessageCatalogue
+   * @var MessageCatalogue
    */
   protected $catalogue;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\locale\StringStorageInterface $local_storage
+   * @param StringStorageInterface $local_storage
    *   String translation storage object.
    */
   public function __construct(Utility $utility, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system, StringStorageInterface $local_storage) {
@@ -166,7 +169,7 @@ class TranslationsFill {
         $trans = implode(PoItem::DELIMITER, $trans);
       }
 
-      /** @var \Drupal\locale\SourceString $string */
+      /** @var SourceString $string */
       $local = $this->localeStorage->findString(
         [
           'source' => $source,
@@ -174,7 +177,7 @@ class TranslationsFill {
         ]);
 
       if ($local && empty($trans) || $local && $overwrite) {
-        /** @var \Drupal\locale\TranslationString[] $trans */
+        /** @var TranslationString[] $trans */
         $trans = $this->localeStorage->getTranslations([
           'lid'        => $local->lid,
           'language'   => $langcode,
diff --git a/src/TranslationsImport.php b/src/TranslationsImport.php
index ad92dc2..26fd6a2 100644
--- a/src/TranslationsImport.php
+++ b/src/TranslationsImport.php
@@ -15,32 +15,32 @@ class TranslationsImport {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\potion\Utility $utility
+   * @param Utility $utility
    *   Utility methods for Potion.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(Utility $utility, ModuleHandlerInterface $module_handler, FileSystemInterface $file_system) {
diff --git a/src/Twig/Extension/TransExtractorExtension.php b/src/Twig/Extension/TransExtractorExtension.php
index 0ba3e67..2ea83b1 100644
--- a/src/Twig/Extension/TransExtractorExtension.php
+++ b/src/Twig/Extension/TransExtractorExtension.php
@@ -16,7 +16,7 @@ class TransExtractorExtension extends \Twig_Extension {
   /**
    * The NodeVisitor to extracts translation messages from twig.
    *
-   * @var \Drupal\potion\Twig\NodeVisitor\TranslationNodeVisitor
+   * @var TranslationNodeVisitor
    */
   protected $transNodeVisitor;
 
@@ -40,7 +40,7 @@ class TransExtractorExtension extends \Twig_Extension {
   /**
    * Expose the translation Node Visitor to be accessible by the extractor.
    *
-   * @return \Drupal\potion\Twig\NodeVisitor\TranslationNodeVisitor
+   * @return TranslationNodeVisitor
    *   The NodeVisitor to extracts translation messages from twig.
    */
   public function getTranslationNodeVisitor() {
diff --git a/src/Twig/NodeVisitor/TranslationNodeVisitor.php b/src/Twig/NodeVisitor/TranslationNodeVisitor.php
index adb19ae..640ead7 100644
--- a/src/Twig/NodeVisitor/TranslationNodeVisitor.php
+++ b/src/Twig/NodeVisitor/TranslationNodeVisitor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion\Twig\NodeVisitor;
 
+use Drupal\potion\Utility;
 use Drupal\Core\Template\TwigNodeTrans;
 use Twig\NodeVisitor\AbstractNodeVisitor;
 use Drupal\potion\MessageCatalogue;
@@ -26,14 +27,14 @@ class TranslationNodeVisitor extends AbstractNodeVisitor {
   /**
    * The catalogue of messages.
    *
-   * @var \Drupal\potion\MessageCatalogue
+   * @var MessageCatalogue
    */
   protected $catalogue;
 
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
@@ -62,7 +63,7 @@ class TranslationNodeVisitor extends AbstractNodeVisitor {
   /**
    * Return the list of translation messages key extracted from Twig.
    *
-   * @return \Drupal\potion\MessageCatalogue
+   * @return MessageCatalogue
    *   Catalogue of extracted translations messages.
    */
   public function getCatalogue() {
diff --git a/src/Utility.php b/src/Utility.php
index 01edd4d..1255890 100644
--- a/src/Utility.php
+++ b/src/Utility.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\potion;
 
+use Drupal\language\ConfigurableLanguageManager;
+use Drupal\potion\Exception\GettextException;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\potion\Exception\PotionException;
 use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
@@ -13,32 +15,32 @@ class Utility {
   /**
    * The language Manager.
    *
-   * @var \Drupal\language\ConfigurableLanguageManager
+   * @var ConfigurableLanguageManager
    */
   protected $languageManager;
 
   /**
    * The Gettext wrapper.
    *
-   * @var \Drupal\potion\GettextWrapper
+   * @var GettextWrapper
    */
   protected $gettextWrapper;
 
   /**
    * The stream wrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\potion\GettextWrapper $gettext_wrapper
+   * @param GettextWrapper $gettext_wrapper
    *   The Gettext wrapper.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager.
    */
   public function __construct(LanguageManagerInterface $language_manager, GettextWrapper $gettext_wrapper, StreamWrapperManagerInterface $stream_wrapper_manager) {
@@ -84,7 +86,7 @@ class Utility {
    * @return bool
    *   TRUE if the given file is valid, FALSE otherwise.
    *
-   * @throws \Drupal\potion\Exception\GettextException
+   * @throws GettextException
    */
   public function isValidPo($src) {
     if (!is_file($src)) {
@@ -140,8 +142,8 @@ class Utility {
    * @return bool
    *   TRUE if the merge works, FALSE otherwise.
    *
-   * @throws \Drupal\potion\Exception\GettextException
-   * @throws \Drupal\potion\Exception\PotionException
+   * @throws GettextException
+   * @throws PotionException
    */
   public function merge($original, array $files) {
     // Don't process when the original file does not exist.
diff --git a/tests/src/Kernel/Extractor/AnnotationExtractorTest.php b/tests/src/Kernel/Extractor/AnnotationExtractorTest.php
index cf8b146..7d22d99 100644
--- a/tests/src/Kernel/Extractor/AnnotationExtractorTest.php
+++ b/tests/src/Kernel/Extractor/AnnotationExtractorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion\tests\Kernel\Extractor;
 
+use Drupal\potion\Extractor\AnnotationExtractor;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Component\Gettext\PoItem;
 use Drupal\potion\MessageCatalogue;
@@ -37,14 +38,14 @@ class AnnotationExtractorTest extends KernelTestBase {
    * Collection of poItems that should be generated when using the extractor
    * twig-only on the potion_tests dir.
    *
-   * @var \Drupal\Component\Gettext\PoItem[]
+   * @var PoItem[]
    */
   private $poItems;
 
   /**
    * Extract Translations Annotation from PHP Class files.
    *
-   * @var \Drupal\potion\Extractor\AnnotationExtractor
+   * @var AnnotationExtractor
    */
   protected $annotationExtractor;
 
@@ -55,9 +56,9 @@ class AnnotationExtractorTest extends KernelTestBase {
     parent::setUp();
 
     /** @var string $extractionPath */
-    $this->extractionPath = drupal_get_path('module', 'potion_test');
+    $this->extractionPath = \Drupal::service('extension.list.module')->getPath('potion_test');
 
-    /** @var \Drupal\potion\Extractor\AnnotationExtractor $annotationExtractor */
+    /** @var AnnotationExtractor $annotationExtractor */
     $this->annotationExtractor = $this->container->get('potion.extractor.annotation');
 
     $po_items = [
diff --git a/tests/src/Kernel/Extractor/PhpExtractorTest.php b/tests/src/Kernel/Extractor/PhpExtractorTest.php
index fd819f6..0859709 100644
--- a/tests/src/Kernel/Extractor/PhpExtractorTest.php
+++ b/tests/src/Kernel/Extractor/PhpExtractorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion\tests\Kernel\Extractor;
 
+use Drupal\potion\Extractor\PhpExtractor;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Component\Gettext\PoItem;
 use Drupal\potion\MessageCatalogue;
@@ -37,14 +38,14 @@ class PhpExtractorTest extends KernelTestBase {
    * Collection of poItems that should be generated when using the extractor
    * twig-only on the potion_tests dir.
    *
-   * @var \Drupal\Component\Gettext\PoItem[]
+   * @var PoItem[]
    */
   private $poItems;
 
   /**
    * Extract Translations from PHP files.
    *
-   * @var \Drupal\potion\Extractor\PhpExtractor
+   * @var PhpExtractor
    */
   protected $phpExtractor;
 
@@ -55,9 +56,9 @@ class PhpExtractorTest extends KernelTestBase {
     parent::setUp();
 
     /** @var string $extractionPath */
-    $this->extractionPath = drupal_get_path('module', 'potion_test');
+    $this->extractionPath = \Drupal::service('extension.list.module')->getPath('potion_test');
 
-    /** @var \Drupal\potion\Extractor\PhpExtractor $phpExtractor */
+    /** @var PhpExtractor $phpExtractor */
     $this->phpExtractor = $this->container->get('potion.extractor.php');
 
     $po_items = [
diff --git a/tests/src/Kernel/Extractor/TwigExtractorTest.php b/tests/src/Kernel/Extractor/TwigExtractorTest.php
index 2d26711..cfcf57a 100644
--- a/tests/src/Kernel/Extractor/TwigExtractorTest.php
+++ b/tests/src/Kernel/Extractor/TwigExtractorTest.php
@@ -45,7 +45,7 @@ class TwigExtractorTest extends KernelTestBase {
    * Collection of poItems that should be generated when using the extractor
    * twig-only on the potion_tests/templates dir.
    *
-   * @var \Drupal\Component\Gettext\PoItem[]
+   * @var PoItem[]
    */
   private $poItems;
 
@@ -59,7 +59,7 @@ class TwigExtractorTest extends KernelTestBase {
     $this->twig = $this->container->get('twig');
 
     /** @var string $extractionPath */
-    $this->extractionPath = drupal_get_path('module', 'potion_test') . DIRECTORY_SEPARATOR . 'templates';
+    $this->extractionPath = \Drupal::service('extension.list.module')->getPath('potion_test') . DIRECTORY_SEPARATOR . 'templates';
 
     $po_items = [
       [
diff --git a/tests/src/Kernel/Extractor/YamlExtractorTest.php b/tests/src/Kernel/Extractor/YamlExtractorTest.php
index 412b3d6..f43923d 100644
--- a/tests/src/Kernel/Extractor/YamlExtractorTest.php
+++ b/tests/src/Kernel/Extractor/YamlExtractorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\potion\tests\Kernel\Extractor;
 
+use Drupal\potion\Extractor\YamlExtractor;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Component\Gettext\PoItem;
 use Drupal\potion\MessageCatalogue;
@@ -37,14 +38,14 @@ class YamlExtractorTest extends KernelTestBase {
    * Collection of poItems that should be generated when using the extractor
    * twig-only on the potion_tests dir.
    *
-   * @var \Drupal\Component\Gettext\PoItem[]
+   * @var PoItem[]
    */
   private $poItems;
 
   /**
    * Extract Translations Annotation from PHP Class files.
    *
-   * @var \Drupal\potion\Extractor\YamlExtractor
+   * @var YamlExtractor
    */
   protected $yamlExtractor;
 
@@ -55,9 +56,9 @@ class YamlExtractorTest extends KernelTestBase {
     parent::setUp();
 
     /** @var string $extractionPath */
-    $this->extractionPath = drupal_get_path('module', 'potion_test');
+    $this->extractionPath = \Drupal::service('extension.list.module')->getPath('potion_test');
 
-    /** @var \Drupal\potion\Extractor\YamlExtractor $yamlExtractor */
+    /** @var YamlExtractor $yamlExtractor */
     $this->yamlExtractor = $this->container->get('potion.extractor.yaml');
 
     $po_items = [
diff --git a/tests/src/Kernel/MessageCatalogueTest.php b/tests/src/Kernel/MessageCatalogueTest.php
index b49d43b..dfdf98f 100644
--- a/tests/src/Kernel/MessageCatalogueTest.php
+++ b/tests/src/Kernel/MessageCatalogueTest.php
@@ -17,7 +17,7 @@ class MessageCatalogueTest extends KernelTestBase {
   /**
    * The catalogue of messages.
    *
-   * @var \Drupal\potion\MessageCatalogue
+   * @var MessageCatalogue
    */
   protected $catalogue;
 
diff --git a/tests/src/Kernel/TranslationsExportTest.php b/tests/src/Kernel/TranslationsExportTest.php
index cd35c8c..c509c8d 100644
--- a/tests/src/Kernel/TranslationsExportTest.php
+++ b/tests/src/Kernel/TranslationsExportTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\potion\Kernel;
 
+use Drupal\potion\TranslationsExport;
+use Drupal\Core\File\FileSystemInterface;
 use Drupal\potion\Exception\PotionException;
 
 /**
@@ -16,14 +18,14 @@ class TranslationsExportTest extends TranslationsTestsBase {
   /**
    * The Translation exporter.
    *
-   * @var \Drupal\potion\TranslationsExport
+   * @var TranslationsExport
    */
   protected $translationExport;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -43,10 +45,10 @@ class TranslationsExportTest extends TranslationsTestsBase {
   protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\potion\TranslationsExport $translationExport */
+    /** @var TranslationsExport $translationExport */
     $this->translationExport = $this->container->get('potion.translations.export');
 
-    /** @var \Drupal\Core\File\FileSystemInterface $fileSystem */
+    /** @var FileSystemInterface $fileSystem */
     $this->fileSystem = $this->container->get('file_system');
   }
 
diff --git a/tests/src/Kernel/TranslationsExtractorTest.php b/tests/src/Kernel/TranslationsExtractorTest.php
index 137a01a..99f8dfa 100644
--- a/tests/src/Kernel/TranslationsExtractorTest.php
+++ b/tests/src/Kernel/TranslationsExtractorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\potion\Kernel;
 
+use Drupal\potion\TranslationsExtractor;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\potion\Exception\PotionException;
 
@@ -17,14 +18,14 @@ class TranslationsExtractorTest extends TranslationsTestsBase {
   /**
    * The Translation Extracter.
    *
-   * @var \Drupal\potion\TranslationsExtractor
+   * @var TranslationsExtractor
    */
   protected $translationExtractor;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -52,14 +53,14 @@ class TranslationsExtractorTest extends TranslationsTestsBase {
   protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\potion\TranslationsExtractor $translationExtractor */
+    /** @var TranslationsExtractor $translationExtractor */
     $this->translationExtractor = $this->container->get('potion.translations.extractor');
 
-    /** @var \Drupal\Core\File\FileSystemInterface $fileSystem */
+    /** @var FileSystemInterface $fileSystem */
     $this->fileSystem = $this->container->get('file_system');
 
     /** @var string $extractionPath */
-    $this->extractionPath = drupal_get_path('module', 'potion_test');
+    $this->extractionPath = \Drupal::service('extension.list.module')->getPath('potion_test');
   }
 
   /**
diff --git a/tests/src/Kernel/TranslationsFillTest.php b/tests/src/Kernel/TranslationsFillTest.php
index 6f1124d..e19ca00 100644
--- a/tests/src/Kernel/TranslationsFillTest.php
+++ b/tests/src/Kernel/TranslationsFillTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\potion\Kernel;
 
+use Drupal\potion\TranslationsFill;
+use Drupal\potion\TranslationsImport;
 use Drupal\potion\Exception\PotionException;
 
 /**
@@ -23,7 +25,7 @@ class TranslationsFillTest extends TranslationsTestsBase {
   /**
    * The Translation filler.
    *
-   * @var \Drupal\potion\TranslationsFill
+   * @var TranslationsFill
    */
   protected $translationsFill;
 
@@ -44,11 +46,11 @@ class TranslationsFillTest extends TranslationsTestsBase {
   protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\potion\TranslationsImport $translationsImport */
+    /** @var TranslationsImport $translationsImport */
     $this->translationsFill = $this->container->get('potion.translations.fill');
 
     /** @var string $translationsPath */
-    $this->translationsPath = drupal_get_path('module', 'potion_test') . DIRECTORY_SEPARATOR . 'assets';
+    $this->translationsPath = \Drupal::service('extension.list.module')->getPath('potion_test') . DIRECTORY_SEPARATOR . 'assets';
   }
 
   /**
diff --git a/tests/src/Kernel/TranslationsImportTest.php b/tests/src/Kernel/TranslationsImportTest.php
index 61a4198..13e59af 100644
--- a/tests/src/Kernel/TranslationsImportTest.php
+++ b/tests/src/Kernel/TranslationsImportTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\potion\Kernel;
 
+use Drupal\potion\TranslationsImport;
 use Drupal\potion\Exception\PotionException;
 
 /**
@@ -23,7 +24,7 @@ class TranslationsImportTest extends TranslationsTestsBase {
   /**
    * The Translation importer.
    *
-   * @var \Drupal\potion\TranslationsImport
+   * @var TranslationsImport
    */
   protected $translationsImport;
 
@@ -43,11 +44,11 @@ class TranslationsImportTest extends TranslationsTestsBase {
   protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\potion\TranslationsImport $translationsImport */
+    /** @var TranslationsImport $translationsImport */
     $this->translationsImport = $this->container->get('potion.translations.import');
 
     /** @var string $translationsPath */
-    $this->translationsPath = drupal_get_path('module', 'potion_test') . DIRECTORY_SEPARATOR . 'assets';
+    $this->translationsPath = \Drupal::service('extension.list.module')->getPath('potion_test') . DIRECTORY_SEPARATOR . 'assets';
   }
 
   /**
diff --git a/tests/src/Kernel/TranslationsTest.php b/tests/src/Kernel/TranslationsTest.php
index a47ce46..807ae33 100644
--- a/tests/src/Kernel/TranslationsTest.php
+++ b/tests/src/Kernel/TranslationsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\potion\Kernel;
 
+use Drupal\potion\TranslationsImport;
 /**
  * Cover default behaviors of translations.
  *
@@ -14,7 +15,7 @@ class TranslationsTest extends TranslationsTestsBase {
   /**
    * The Translation importer.
    *
-   * @var \Drupal\potion\TranslationsImport
+   * @var TranslationsImport
    */
   protected $translationsImport;
 
diff --git a/tests/src/Kernel/TranslationsTestsBase.php b/tests/src/Kernel/TranslationsTestsBase.php
index e5a2c36..ff15bfa 100644
--- a/tests/src/Kernel/TranslationsTestsBase.php
+++ b/tests/src/Kernel/TranslationsTestsBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\potion\Kernel;
 
+use Drupal\locale\TranslationString;
+use Drupal\locale\StringStorageInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\language\Entity\ConfigurableLanguage;
 
@@ -13,14 +15,14 @@ abstract class TranslationsTestsBase extends KernelTestBase {
   /**
    * Collection of tests translations strings.
    *
-   * @var \Drupal\locale\TranslationString[]
+   * @var TranslationString[]
    */
   protected $translationsStrings;
 
   /**
    * String translation storage object.
    *
-   * @var \Drupal\locale\StringStorageInterface
+   * @var StringStorageInterface
    */
   protected $localStorage;
 
@@ -38,7 +40,7 @@ abstract class TranslationsTestsBase extends KernelTestBase {
 
     $this->setUpLanguages();
 
-    /** @var \Drupal\locale\StringStorageInterface $localStorage */
+    /** @var StringStorageInterface $localStorage */
     $this->localStorage = $this->container->get('locale.storage');
   }
 
diff --git a/tests/src/Kernel/UtilityTest.php b/tests/src/Kernel/UtilityTest.php
index 827f39d..17eea03 100644
--- a/tests/src/Kernel/UtilityTest.php
+++ b/tests/src/Kernel/UtilityTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\potion\Kernel;
 
+use Drupal\potion\Utility;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -16,7 +17,7 @@ class UtilityTest extends KernelTestBase {
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
@@ -36,7 +37,7 @@ class UtilityTest extends KernelTestBase {
   protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\potion\Utility $utility */
+    /** @var Utility $utility */
     $this->utility = $this->container->get('potion.utility');
   }
 
diff --git a/tests/src/Unit/UtilityTestBase.php b/tests/src/Unit/UtilityTestBase.php
index f566b13..cefe440 100644
--- a/tests/src/Unit/UtilityTestBase.php
+++ b/tests/src/Unit/UtilityTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\potion\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Prophecy\Prophecy\ProphecyInterface;
 use Drupal\Tests\UnitTestCase;
 use Drupal\potion\Utility;
 use Drupal\potion\GettextWrapper;
@@ -16,10 +18,11 @@ use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
  */
 abstract class UtilityTestBase extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The Utility service of Potion.
    *
-   * @var \Drupal\potion\Utility
+   * @var Utility
    */
   protected $utility;
 
@@ -45,9 +48,9 @@ abstract class UtilityTestBase extends UnitTestCase {
       'locked'    => FALSE,
     ]);
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\Prophecy\Prophecy\ProphecyInterface $config_factory */
+    /** @var ConfigFactoryInterface|ProphecyInterface $config_factory */
     $config_factory = $this->prophesize(ConfigFactoryInterface::class);
-    /** @var \Drupal\Core\Config\ImmutableConfig|\Prophecy\Prophecy\ProphecyInterface $config */
+    /** @var ImmutableConfig|ProphecyInterface $config */
     $config = $this->prophesize(ImmutableConfig::class);
     $config_factory->get('potion.gettext.settings')
       ->willReturn($config->reveal());
@@ -57,10 +60,10 @@ abstract class UtilityTestBase extends UnitTestCase {
     /** @var \Drupal\Potion\GettextWrapper $gettext_wrapper */
     $gettext_wrapper = new GettextWrapper($config_factory->reveal());
 
-    /** @var \Drupal\Core\Language\LanguageManagerInterface|\Prophecy\Prophecy\ProphecyInterface $language_manager */
+    /** @var LanguageManagerInterface|ProphecyInterface $language_manager */
     $language_manager = $this->prophesize(LanguageManagerInterface::class);
 
-    /** @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface|\Prophecy\Prophecy\ProphecyInterface $file_system */
+    /** @var StreamWrapperManagerInterface|ProphecyInterface $file_system */
     $stream_wrapper = $this->prophesize(StreamWrapperManagerInterface::class);
 
     $this->utility = new Utility($language_manager->reveal(), $gettext_wrapper, $stream_wrapper->reveal());
