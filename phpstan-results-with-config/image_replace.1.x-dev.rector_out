modules/contrib/image_replace/image_replace.install
modules/contrib/image_replace/image_replace.module
modules/contrib/image_replace/src/ImageReplaceDatabaseStorage.php
modules/contrib/image_replace/src/ImageReplaceStorageInterface.php
modules/contrib/image_replace/src/Plugin/ImageEffect/ImageReplaceEffect.php
modules/contrib/image_replace/src/Plugin/ImageToolkit/Operation/gd/Replace.php
modules/contrib/image_replace/src/Plugin/ImageToolkit/Operation/imagemagick/Replace.php
modules/contrib/image_replace/src/Tests/AdminTest.php
modules/contrib/image_replace/src/Tests/EntityTest.php
modules/contrib/image_replace/src/Tests/ImageReplaceTestBase.php
modules/contrib/image_replace/src/Tests/ReplaceEffectTest.php

5 files with changes
====================

1) modules/contrib/image_replace/src/Tests/EntityTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create an image style containing the replace effect.
@@ @@
     $this->drupalGet('node');
     $this->assertSession()->statusCodeEquals(200);
     $generated_url = ImageStyle::load($this->styleName)->buildUrl($node->image_original->entity->getFileUri());
-    $relative_url = file_url_transform_relative($generated_url);
+    $relative_url = \Drupal::service('file_url_generator')->transformRelative($generated_url);
     $this->assertSession()->responseContains(Html::escape($relative_url));

     $generated_image_data = $this->drupalGet($generated_url);
@@ @@
     // Check full view.
     $this->drupalGet('node/' . $node->id());
     $this->assertSession()->statusCodeEquals(200);
-    $generated_url = file_create_url($node->image_original->entity->getFileUri());
-    $relative_url = file_url_transform_relative($generated_url);
+    $generated_url = \Drupal::service('file_url_generator')->generateAbsoluteString($node->image_original->entity->getFileUri());
+    $relative_url = \Drupal::service('file_url_generator')->transformRelative($generated_url);
     $this->assertSession()->responseContains(Html::escape($relative_url));

     $generated_image_data = $this->drupalGet($generated_url);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/image_replace/src/Tests/AdminTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\image_replace\Tests;

+use Drupal\user\Entity\User;
 use Drupal\Component\Utility\Html;
 use Drupal\image\Entity\ImageStyle;
 use Drupal\node\Entity\Node;
@@ @@
   /**
    * The test admin user.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create an image style containing the replace effect.
@@ @@
     ];
     $edit['files[image_original_0]'] = $file_system->realpath($original_file->getFileUri());
     $edit['files[image_replacement_0]'] = $file_system->realpath($replacement_file->getFileUri());
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->statusCodeEquals(200);

     $edit = [
@@ @@
     $node = Node::load($matches[1]);

     // Verify that the original image is shown on the full node view.
-    $generated_url = file_create_url($node->image_original->entity->getFileUri());
-    $relative_url = file_url_transform_relative($generated_url);
+    $generated_url = \Drupal::service('file_url_generator')->generateAbsoluteString($node->image_original->entity->getFileUri());
+    $relative_url = \Drupal::service('file_url_generator')->transformRelative($generated_url);
     $this->assertSession()->responseContains(Html::escape($relative_url));

     $generated_image_data = $this->drupalGet($generated_url);
@@ @@
     $this->drupalGet('node');
     $this->assertSession()->statusCodeEquals(200);
     $generated_url = ImageStyle::load($this->styleName)->buildUrl($node->image_original->entity->getFileUri());
-    $relative_url = file_url_transform_relative($generated_url);
+    $relative_url = \Drupal::service('file_url_generator')->transformRelative($generated_url);
     $this->assertSession()->responseContains(Html::escape($relative_url));

     $generated_image_data = $this->drupalGet($generated_url);
@@ @@
     $edit = [
       $field_name => '0',
     ];
-    $this->drupalPostForm('admin/structure/types/manage/article/fields/node.article.image_original', $edit, t('Save settings'));
+    $this->drupalGet('admin/structure/types/manage/article/fields/node.article.image_original');
+    $this->submitForm($edit, t('Save settings'));
     $this->assertSession()->statusCodeEquals(200);

     // Verify that a message is displayed if the mapping changes when there is
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/image_replace/src/Plugin/ImageToolkit/Operation/gd/Replace.php:78

    ---------- begin diff ----------
@@ @@
    * @param array $arguments
    *   An associative array of data to be used by the toolkit operation.
    *
-   * @return \Drupal\system\Plugin\ImageToolkit\GDToolkit
+   * @return GDToolkit
    *   The correctly typed replacement image toolkit for GD operations.
    */
   protected function getReplacementImageToolkit(array $arguments = []) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/image_replace/src/Plugin/ImageEffect/ImageReplaceEffect.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The image replace storage service.
    *
-   * @var \Drupal\image_replace\ImageReplaceStorageInterface
+   * @var ImageReplaceStorageInterface
    */
   protected $imageReplaceStorage;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/image_replace/src/ImageReplaceDatabaseStorage.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Active database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Constructs a ImageReplaceDatabaseStorage object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection to be used.
    */
   public function __construct(Connection $database) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [ERROR] Could not process                                                      
         "modules/contrib/image_replace/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Replace.php" file, due to:                                         
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

