diff --git a/src/Controller/MyGengoController.php b/src/Controller/MyGengoController.php
index fc647ba..2a772ee 100644
--- a/src/Controller/MyGengoController.php
+++ b/src/Controller/MyGengoController.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\tmgmt_mygengo\Controller;
 
+use Drupal\tmgmt_mygengo\Plugin\tmgmt\Translator\MyGengoTranslator;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\tmgmt\Entity\Job;
@@ -70,7 +71,7 @@ class MyGengoController extends ControllerBase {
     }
 
     /**
-     * @var \Drupal\tmgmt_mygengo\Plugin\tmgmt\Translator\MyGengoTranslator $mygengo
+     * @var MyGengoTranslator $mygengo
      */
     $mygengo = $job->getTranslator()->getPlugin();
     // Prepend the job item id.
diff --git a/src/GengoConnector.php b/src/GengoConnector.php
index a8e85d4..c720b1b 100644
--- a/src/GengoConnector.php
+++ b/src/GengoConnector.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\tmgmt_mygengo;
 
+use Drupal\Core\Extension\ModuleExtensionList;
 use Drupal\tmgmt\Entity\Translator;
 use Drupal\tmgmt\TMGMTException;
 use Drupal\tmgmt\TranslatorInterface;
@@ -60,21 +61,21 @@ class GengoConnector {
   /**
    * Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
   /**
    * Module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList;
+   * @var ModuleExtensionList ;
    */
   protected $extensionList;
 
   /**
    * Construct the connector to gengo service.
    *
-   * @param \Drupal\tmgmt\TranslatorInterface $translator
+   * @param TranslatorInterface $translator
    *   Translator which has the connection settings.
    */
   public function __construct(TranslatorInterface $translator, ClientInterface $client) {
@@ -326,7 +327,7 @@ class GengoConnector {
    * @return object
    *   Response object from gengo.
    *
-   * @throws \Drupal\tmgmt\TMGMTException
+   * @throws TMGMTException
    */
   protected function request($path, $method, $data = array()) {
     $headers = array(
diff --git a/src/MyGengoTranslatorUi.php b/src/MyGengoTranslatorUi.php
index d677f31..dbd54e7 100644
--- a/src/MyGengoTranslatorUi.php
+++ b/src/MyGengoTranslatorUi.php
@@ -31,7 +31,7 @@ class MyGengoTranslatorUi extends TranslatorPluginUiBase {
    */
   public function reviewDataItemElement(array $form, FormStateInterface $form_state, $data_item_key, $parent_key, array $data_item, JobItemInterface $item) {
 
-    /** @var \Drupal\tmgmt\RemoteMappingInterface $mapping */
+    /** @var RemoteMappingInterface $mapping */
     $mapping = NULL;
     foreach ($item->getRemoteMappings() as $value) {
       if ($value->data_item_key->value == $data_item_key) {
@@ -240,7 +240,7 @@ class MyGengoTranslatorUi extends TranslatorPluginUiBase {
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
     $form = parent::buildConfigurationForm($form, $form_state);
 
-    /** @var \Drupal\tmgmt\TranslatorInterface $translator */
+    /** @var TranslatorInterface $translator */
     $translator = $form_state->getFormObject()->getEntity();
     $url = Url::fromUri('https://gengo.com/account/api_settings/');
     $gengo_key_url = Link::fromTextAndUrl(t('Gengo Api Settings'), $url);
@@ -392,7 +392,7 @@ class MyGengoTranslatorUi extends TranslatorPluginUiBase {
    * @return array
    *   Array with the following keys: currency, estimates, highest_eta,
    *   sum_credits, sum_eta, sum_word_count, and unit_price.
-   * @throws \Drupal\tmgmt\TMGMTException
+   * @throws TMGMTException
    *   In case of error doing request to gengo service.
    */
   protected function getQuoteInfo(JobInterface $job) {
@@ -439,7 +439,7 @@ class MyGengoTranslatorUi extends TranslatorPluginUiBase {
   /**
    * Gets remaining credit info at gengo account.
    *
-   * @param \Drupal\tmgmt\Entity\Translator $translator
+   * @param Translator $translator
    *   Translator.
    *
    * @return array
@@ -467,7 +467,7 @@ class MyGengoTranslatorUi extends TranslatorPluginUiBase {
   /**
    * Builds quality/tier options for src/tgt language pair of the job.
    *
-   * @param \Drupal\tmgmt\Entity\Job $job
+   * @param Job $job
    *   Translation job.
    *
    * @return array
@@ -526,7 +526,7 @@ class MyGengoTranslatorUi extends TranslatorPluginUiBase {
   /**
    * Fetches comments from gengo service.
    *
-   * @param \Drupal\tmgmt\Entity\Translator $translator
+   * @param Translator $translator
    *   Translator plugin.
    * @param int $gengo_job_id
    *   Gengo job id for which to fetch comments.
@@ -567,7 +567,7 @@ class MyGengoTranslatorUi extends TranslatorPluginUiBase {
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $form_state) {
     parent::validateConfigurationForm($form, $form_state);
-    /** @var \Drupal\tmgmt\TranslatorInterface $translator */
+    /** @var TranslatorInterface $translator */
     $translator = $form_state->getFormObject()->getEntity();
     $statistics = $translator->getPlugin()->getStatistics($translator);
     if (empty($statistics)) {
diff --git a/src/Plugin/tmgmt/Translator/MyGengoTranslator.php b/src/Plugin/tmgmt/Translator/MyGengoTranslator.php
index 62fa415..827811b 100644
--- a/src/Plugin/tmgmt/Translator/MyGengoTranslator.php
+++ b/src/Plugin/tmgmt/Translator/MyGengoTranslator.php
@@ -60,7 +60,7 @@ class MyGengoTranslator extends TranslatorPluginBase implements ContainerFactory
   /**
    * Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
@@ -74,7 +74,7 @@ class MyGengoTranslator extends TranslatorPluginBase implements ContainerFactory
   /**
    * Constructs a MyGengoTranslator object.
    *
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   The Guzzle HTTP client.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ -218,7 +218,7 @@ class MyGengoTranslator extends TranslatorPluginBase implements ContainerFactory
   /**
    * Will build and send a job to gengo service.
    *
-   * @param \Drupal\tmgmt\Entity\Job $job
+   * @param Job $job
    *   Job to be submitted for translation.
    * @param bool $quote_only
    *   (Optional) Set to TRUE to only get a quote for the given job.
@@ -291,7 +291,7 @@ class MyGengoTranslator extends TranslatorPluginBase implements ContainerFactory
   /**
    * Receives and stores a translation returned by Gengo.
    *
-   * @param \Drupal\tmgmt\Entity\Job $job
+   * @param Job $job
    *   Job for which to receive translations.
    * @param string $key
    *   Data keys for data item which will be updated with translation.
@@ -331,7 +331,7 @@ class MyGengoTranslator extends TranslatorPluginBase implements ContainerFactory
    *   - Saves translation in case it has been already received.
    *   - Deals with duplicate translations.
    *
-   * @param \Drupal\tmgmt\Entity\Job $job
+   * @param Job $job
    *   Local job that is going to be processed.
    * @param array $response_jobs
    *   List of gengo jobs received.
@@ -403,7 +403,7 @@ class MyGengoTranslator extends TranslatorPluginBase implements ContainerFactory
    * The idea here is not to introduce additional storage to temporarily store
    * gengo order id before we get gengo job ids.
    *
-   * @param \Drupal\tmgmt\Entity\Job $job
+   * @param Job $job
    *   Job for which to initiate mappings with remote jobs.
    * @param int $gorder_id
    *   Gengo job id.
@@ -429,7 +429,7 @@ class MyGengoTranslator extends TranslatorPluginBase implements ContainerFactory
   /**
    * Maps TMGMT job data items to gengo jobs.
    *
-   * @param \Drupal\tmgmt\Entity\Job $job
+   * @param Job $job
    *   Job that will be mapped to remote jobs.
    */
   public function fetchGengoJobs(Job $job, $save_translations = TRUE) {
diff --git a/tests/modules/tmgmt_mygengo_test/src/Controller/GengoTranslatorTestController.php b/tests/modules/tmgmt_mygengo_test/src/Controller/GengoTranslatorTestController.php
index 0e00916..ca4aab0 100644
--- a/tests/modules/tmgmt_mygengo_test/src/Controller/GengoTranslatorTestController.php
+++ b/tests/modules/tmgmt_mygengo_test/src/Controller/GengoTranslatorTestController.php
@@ -225,10 +225,10 @@ class GengoTranslatorTestController {
   /**
    * Page callback for getting the supported languages.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The languages request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response with the language or an error.
    */
   public function serviceGetLanguages(Request $request) {
diff --git a/tests/modules/tmgmt_mygengo_test/tmgmt_mygengo_test.module b/tests/modules/tmgmt_mygengo_test/tmgmt_mygengo_test.module
index c84f0ec..5c6b693 100644
--- a/tests/modules/tmgmt_mygengo_test/tmgmt_mygengo_test.module
+++ b/tests/modules/tmgmt_mygengo_test/tmgmt_mygengo_test.module
@@ -50,13 +50,13 @@ function tmgmt_mygengo_test_build_response_job($body_src, $body_tgt, $status, $t
 /**
  * Helper function to run authentication.
  *
- * @param \Symfony\Component\HttpFoundation\Request $request
+ * @param Request $request
  *   The server request.
  * @param bool $check_api_sig
  *   By default is TRUE,
  *   set to FALSE if you don't want to check is the api_sig is correct.
  *
- * @return \Symfony\Component\HttpFoundation\JsonResponse|void
+ * @return JsonResponse|void
  *   The error response or NULL otherwise.
  */
 function tmgmt_mygengo_test_authenticate(Request $request, $check_api_sig = TRUE) {
