diff --git a/src/BraintreeApiService.php b/src/BraintreeApiService.php
index f66fd47..ea82ad7 100644
--- a/src/BraintreeApiService.php
+++ b/src/BraintreeApiService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\braintree_api;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Braintree\Gateway;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\key\KeyRepository;
@@ -14,7 +15,7 @@ class BraintreeApiService implements BraintreeApiServiceInterface {
   /**
    * Drupal\Core\Config\ImmutableConfig definition.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    *  The Braintree API Configuration settings.
    */
   protected $config;
@@ -22,14 +23,14 @@ class BraintreeApiService implements BraintreeApiServiceInterface {
   /**
    * Drupal\key\KeyRepository definition.
    *
-   * @var \Drupal\key\KeyRepository
+   * @var KeyRepository
    */
   protected $keyRepository;
 
   /**
    * The Braintree Gateway.
    *
-   * @var \Braintree\Gateway
+   * @var Gateway
    */
   protected $gateway;
 
diff --git a/src/BraintreeApiServiceInterface.php b/src/BraintreeApiServiceInterface.php
index 06edb31..04b2f4f 100644
--- a/src/BraintreeApiServiceInterface.php
+++ b/src/BraintreeApiServiceInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\braintree_api;
 
+use Braintree\Gateway;
 /**
  * Enables use of the Braintree API library as a Symfony service.
  */
@@ -13,7 +14,7 @@ interface BraintreeApiServiceInterface {
   /**
    * Get the Braintree gateway.
    *
-   * @return \Braintree\Gateway
+   * @return Gateway
    *   The Braintree gateway object, which is used to interact with Braintree.
    */
   public function getGateway();
diff --git a/src/Controller/BraintreeApiWebhook.php b/src/Controller/BraintreeApiWebhook.php
index 2c94e7d..f605f2b 100644
--- a/src/Controller/BraintreeApiWebhook.php
+++ b/src/Controller/BraintreeApiWebhook.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\braintree_api\Controller;
 
+use Psr\Log\LoggerInterface;
 use Drupal\braintree_api\Event\BraintreeApiEvents;
 use Drupal\braintree_api\Event\BraintreeApiWebhookEvent;
 use Drupal\Core\Controller\ControllerBase;
@@ -19,21 +20,21 @@ class BraintreeApiWebhook extends ControllerBase {
   /**
    * Drupal\braintree_api\BraintreeApiService definition.
    *
-   * @var \Drupal\braintree_api\BraintreeApiService
+   * @var BraintreeApiService
    */
   protected $braintreeApi;
 
   /**
    * The Braintree API Logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -78,7 +79,7 @@ class BraintreeApiWebhook extends ControllerBase {
 
       // Dispatch the webhook event.
       $event = new BraintreeApiWebhookEvent($webhook_notification->kind, $webhook_notification);
-      $this->eventDispatcher->dispatch(BraintreeApiEvents::WEBHOOK, $event);
+      $this->eventDispatcher->dispatch($event, BraintreeApiEvents::WEBHOOK);
 
       return new Response('Thanks!', Response::HTTP_OK);
     }
diff --git a/src/Event/BraintreeApiWebhookEvent.php b/src/Event/BraintreeApiWebhookEvent.php
index 133233b..c484e05 100644
--- a/src/Event/BraintreeApiWebhookEvent.php
+++ b/src/Event/BraintreeApiWebhookEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\braintree_api\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Braintree\WebhookNotification;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event dispatched when a webhook is received from Braintree.
@@ -22,7 +22,7 @@ class BraintreeApiWebhookEvent extends Event {
    *
    * Object properties depend on the kind of webhook.
    *
-   * @var \Braintree\WebhookNotification
+   * @var WebhookNotification
    *
    * @see https://developers.braintreepayments.com/reference/general/webhooks/overview#notification-kinds
    */
@@ -33,7 +33,7 @@ class BraintreeApiWebhookEvent extends Event {
    *
    * @param string $kind
    *   A string representing the kind of Braintree Webhook.
-   * @param \Braintree\WebhookNotification $webhook_notification
+   * @param WebhookNotification $webhook_notification
    *   The Braintree Webhook notification object.
    */
   public function __construct($kind, WebhookNotification $webhook_notification) {
@@ -44,7 +44,7 @@ class BraintreeApiWebhookEvent extends Event {
   /**
    * Gets the Braintree Webhook notification object.
    *
-   * @return \Braintree\WebhookNotification
+   * @return WebhookNotification
    *   The Braintree Webhook notification object.
    */
   public function getWebhookNotification() {
diff --git a/src/EventSubscriber/BraintreeApiSubscriber.php b/src/EventSubscriber/BraintreeApiSubscriber.php
index 524697d..0236c30 100644
--- a/src/EventSubscriber/BraintreeApiSubscriber.php
+++ b/src/EventSubscriber/BraintreeApiSubscriber.php
@@ -18,14 +18,14 @@ class BraintreeApiSubscriber implements EventSubscriberInterface {
   /**
    * The Braintree API logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * BraintreeApiSubscriber constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Braintree API logger channel.
    */
   public function __construct(LoggerInterface $logger) {
@@ -44,7 +44,7 @@ class BraintreeApiSubscriber implements EventSubscriberInterface {
   /**
    * Process the "Check URL" webhook from Braintree.
    *
-   * @param \Drupal\braintree_api\Event\BraintreeApiWebhookEvent $event
+   * @param BraintreeApiWebhookEvent $event
    *   The event to process.
    */
   public function processWebhook(BraintreeApiWebhookEvent $event) {
diff --git a/src/Form/BraintreeApiAdminForm.php b/src/Form/BraintreeApiAdminForm.php
index 1a5d9cb..eec261f 100644
--- a/src/Form/BraintreeApiAdminForm.php
+++ b/src/Form/BraintreeApiAdminForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\braintree_api\Form;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\Entity\EntityTypeManager;
 use Braintree\Exception\Authentication;
 use Braintree\Exception\Configuration;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -21,21 +23,21 @@ class BraintreeApiAdminForm extends ConfigFormBase {
   /**
    * Drupal\braintree_api\BraintreeApiService definition.
    *
-   * @var \Drupal\braintree_api\BraintreeApiService
+   * @var BraintreeApiService
    */
   protected $braintreeApi;
 
   /**
    * The Braintree API Logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
