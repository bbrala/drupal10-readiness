diff --git a/menu_link_weight.menu_ui.inc b/menu_link_weight.menu_ui.inc
index b80e466..e19b43d 100644
--- a/menu_link_weight.menu_ui.inc
+++ b/menu_link_weight.menu_ui.inc
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\Core\Menu\MenuLinkInterface;
+use Drupal\menu_link_content\MenuLinkContentInterface;
+use Drupal\Core\Render\ElementInfoManagerInterface;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -11,7 +15,7 @@ use Drupal\system\Entity\Menu;
 function menu_link_weight_form_menu_link_edit_alter(&$form, FormStateInterface $form_state) {
   _menu_link_weight_menu_link_form_alter($form, $form_state);
 
-  /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+  /** @var MenuLinkInterface $link */
   $link = \Drupal::service('plugin.manager.menu.link')->createInstance($form['id']['#value']);
 
   // Get the ID for the current menu link.
@@ -28,7 +32,7 @@ function menu_link_weight_form_menu_link_edit_alter(&$form, FormStateInterface $
 function menu_link_weight_form_menu_link_content_form_alter(&$form, FormStateInterface $form_state) {
   _menu_link_weight_menu_link_form_alter($form, $form_state);
 
-  /** @var \Drupal\menu_link_content\MenuLinkContentInterface $link */
+  /** @var MenuLinkContentInterface $link */
   $link = $form_state->getBuildInfo()['callback_object']->getEntity();
 
   // Get the ID for the current menu link.
@@ -50,7 +54,7 @@ function menu_link_weight_form_menu_link_content_form_alter(&$form, FormStateInt
 function _menu_link_weight_menu_link_form_alter(&$form, FormStateInterface $form_state) {
   $current_user = \Drupal::currentUser();
   $module_handler = \Drupal::moduleHandler();
-  /** @var \Drupal\Core\Render\ElementInfoManagerInterface $element_info_manager */
+  /** @var ElementInfoManagerInterface $element_info_manager */
   $element_info_manager = \Drupal::service('plugin.manager.element_info');
 
   $is_admin = $current_user->hasPermission('administer menu') && isset($form);
@@ -167,9 +171,9 @@ function menu_link_weight_menu_link_content_element_process($element, FormStateI
     $label = Menu::load($menu_name)->label();
   }
   else {
-    /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
+    /** @var MenuLinkManagerInterface $menu_link_manager */
     $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
-    /** @var \Drupal\Core\Menu\MenuLinkInterface $parent_link */
+    /** @var MenuLinkInterface $parent_link */
     $parent_link = $menu_link_manager->createInstance($parent_id);
     $label = $parent_link->getTitle();
 
@@ -228,7 +232,7 @@ function menu_link_weight_menu_link_content_element_process($element, FormStateI
  * Validation hook for the menu_link weight element.
  */
 function menu_link_weight_menu_link_content_form_validate($form, FormStateInterface $form_state) {
-  /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
+  /** @var MenuLinkManagerInterface $menu_link_manager */
   $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
 
   $parent_element = $form['menu_parent'];
@@ -240,7 +244,7 @@ function menu_link_weight_menu_link_content_form_validate($form, FormStateInterf
     $weights = $form_state->getValue(['menu_link_weight']);
     unset($weights['link_current']);
     foreach ($weights as $link_id => $weight) {
-      /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+      /** @var MenuLinkInterface $link */
       $link = $menu_link_manager->createInstance($link_id);
       if ($link->getParent() != $parent_id) {
         $form_state->setErrorByName('menu][menu_link_weight', t('The parent for one of the menu links have been changed by another user, please try again.'));
@@ -286,7 +290,7 @@ function menu_link_weight_menu_link_content_form_submit($form, FormStateInterfac
     return;
   }
 
-  /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
+  /** @var MenuLinkManagerInterface $menu_link_manager */
   $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
 
   $connection = \Drupal::database();
@@ -301,7 +305,7 @@ function menu_link_weight_menu_link_content_form_submit($form, FormStateInterfac
         continue;
       }
 
-      /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+      /** @var MenuLinkInterface $link */
       $menu_link_manager->updateDefinition($link_id, ['weight' => $info['weight']]);
     }
   }
diff --git a/menu_link_weight.module b/menu_link_weight.module
index ce13344..09befa6 100644
--- a/menu_link_weight.module
+++ b/menu_link_weight.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\Menu\MenuLinkTreeElement;
+use Drupal\Core\Menu\MenuLinkTreeInterface;
+use Drupal\Core\Menu\MenuLinkInterface;
 /**
  * @file
  * Replaces the menu link weight dropdown with a tabledrag widget.
@@ -68,7 +71,7 @@ function menu_link_weight_get_button_text() {
  *
  * @param array $parent_element
  *   Menu link parent form element.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  *
  * @return string
@@ -175,14 +178,14 @@ function _menu_link_weight_get_options($menu_name, $parent_id, $current_mlid, $n
  * @param string $parent_id
  *   The parent link plugin ID.
  *
- * @return \Drupal\Core\Menu\MenuLinkTreeElement[]
+ * @return MenuLinkTreeElement[]
  *   A menu link tree.
  */
 function _menu_link_weight_get_tree($menu_name, $parent_id) {
-  /** @var \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree */
+  /** @var MenuLinkTreeInterface $menu_link_tree */
   $menu_link_tree = \Drupal::service('menu.link_tree');
   if ($parent_id !== '') {
-    /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+    /** @var MenuLinkInterface $link */
     $parent_tree = $menu_link_tree->load($menu_name, (new MenuTreeParameters())
       ->addCondition('id', $parent_id));
     $parent_element = reset($parent_tree);
diff --git a/menu_link_weight.node.inc b/menu_link_weight.node.inc
index 4180750..cdaba5d 100644
--- a/menu_link_weight.node.inc
+++ b/menu_link_weight.node.inc
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\Render\ElementInfoManagerInterface;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
+use Drupal\Core\Menu\MenuLinkInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -13,7 +16,7 @@ use Drupal\Core\Ajax\ReplaceCommand;
 function menu_link_weight_form_node_form_alter(&$form, FormStateInterface $form_state) {
   $current_user = \Drupal::currentUser();
   $module_handler = \Drupal::moduleHandler();
-  /** @var \Drupal\Core\Render\ElementInfoManagerInterface $element_info_manager */
+  /** @var ElementInfoManagerInterface $element_info_manager */
   $element_info_manager = \Drupal::service('plugin.manager.element_info');
 
   $is_admin = $current_user->hasPermission('administer menu') && isset($form['menu']['link']);
@@ -140,9 +143,9 @@ function menu_link_weight_node_element_process($element, FormStateInterface $for
     $label = Menu::load($menu_name)->label();
   }
   else {
-    /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
+    /** @var MenuLinkManagerInterface $menu_link_manager */
     $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
-    /** @var \Drupal\Core\Menu\MenuLinkInterface $parent_link */
+    /** @var MenuLinkInterface $parent_link */
     $parent_link = $menu_link_manager->createInstance($parent_id);
     $label = $parent_link->getTitle();
 
@@ -201,7 +204,7 @@ function menu_link_weight_node_element_process($element, FormStateInterface $for
  * Validation hook for the menu_link weight element.
  */
 function menu_link_weight_node_form_validate($form, FormStateInterface $form_state) {
-  /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
+  /** @var MenuLinkManagerInterface $menu_link_manager */
   $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
 
   $parent_element = $form['menu']['link']['menu_parent'];
@@ -213,7 +216,7 @@ function menu_link_weight_node_form_validate($form, FormStateInterface $form_sta
     $weights = $form_state->getValue(['menu', 'menu_link_weight']);
     unset($weights['link_current']);
     foreach ($weights as $link_id => $weight) {
-      /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+      /** @var MenuLinkInterface $link */
       $link = $menu_link_manager->createInstance($link_id);
       if ($link->getParent() != $parent_id) {
         $form_state->setErrorByName('menu][menu_link_weight', t('The parent for one of the menu links have been changed by another user, please try again.'));
@@ -254,7 +257,7 @@ function menu_link_weight_node_form_submit($form, FormStateInterface $form_state
     return;
   }
 
-  /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
+  /** @var MenuLinkManagerInterface $menu_link_manager */
   $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
 
   $connection = \Drupal::database();
@@ -269,7 +272,7 @@ function menu_link_weight_node_form_submit($form, FormStateInterface $form_state
         continue;
       }
 
-      /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+      /** @var MenuLinkInterface $link */
       $menu_link_manager->updateDefinition($link_id, ['weight' => $info['weight']]);
     }
   }
diff --git a/src/EventSubscriber/ConfigSubscriber.php b/src/EventSubscriber/ConfigSubscriber.php
index dc2dab0..1fbab2e 100644
--- a/src/EventSubscriber/ConfigSubscriber.php
+++ b/src/EventSubscriber/ConfigSubscriber.php
@@ -12,14 +12,14 @@ class ConfigSubscriber implements EventSubscriberInterface {
   /**
    * The Drupal Kernel.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected $kernel;
 
   /**
    * ConfigSubscriber constructor.
    *
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   The Drupal Kernel.
    */
   public function __construct(DrupalKernelInterface $kernel) {
diff --git a/src/MenuParentFormSelector/CshsMenuParentFormSelector.php b/src/MenuParentFormSelector/CshsMenuParentFormSelector.php
index 4bf4b01..2283a04 100644
--- a/src/MenuParentFormSelector/CshsMenuParentFormSelector.php
+++ b/src/MenuParentFormSelector/CshsMenuParentFormSelector.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\menu_link_weight\MenuParentFormSelector;
 
+use Drupal\Core\Menu\MenuLinkTreeElement;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Menu\MenuParentFormSelector;
@@ -81,7 +82,7 @@ class CshsMenuParentFormSelector extends MenuParentFormSelector {
    * {@inheritdoc}
    */
   protected function parentSelectOptionsTreeWalkCshs(array $tree, $menu_name, $indent, array &$options, $exclude, $depth_limit, CacheableMetadata &$cacheability = NULL) {
-    /** @var \Drupal\Core\Menu\MenuLinkTreeElement[] $tree */
+    /** @var MenuLinkTreeElement[] $tree */
     foreach ($tree as $element) {
       if ($element->depth > $depth_limit) {
         // Don't iterate through any links on this level.
diff --git a/tests/src/Functional/MenuLinkWeightFunctionalTestBase.php b/tests/src/Functional/MenuLinkWeightFunctionalTestBase.php
index 94ccdc7..2080971 100644
--- a/tests/src/Functional/MenuLinkWeightFunctionalTestBase.php
+++ b/tests/src/Functional/MenuLinkWeightFunctionalTestBase.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\Tests\menu_link_weight\Functional;
 
+use Drupal\Core\Menu\MenuLinkTreeInterface;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Extension\ModuleInstallerInterface;
+use Drupal\Core\State\StateInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\node\Entity\NodeType;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\menu_link_weight\FunctionalJavascript\MenuLinkWeightTestTrait;
@@ -32,35 +38,35 @@ abstract class MenuLinkWeightFunctionalTestBase extends BrowserTestBase {
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;
 
   /**
    * The menu link manager.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;
 
   /**
    * The content menu link storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $contentMenuLinkStorage;
 
   /**
    * The module installer.
    *
-   * @var \Drupal\Core\Extension\ModuleInstallerInterface
+   * @var ModuleInstallerInterface
    */
   protected $moduleInstaller;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -74,12 +80,12 @@ abstract class MenuLinkWeightFunctionalTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->menuLinkTree = $this->container->get('menu.link_tree');
     $this->menuLinkManager = $this->container->get('plugin.manager.menu.link');
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = $this->container->get('entity_type.manager');
     $this->contentMenuLinkStorage = $entity_type_manager->getStorage('menu_link_content');
     $this->moduleInstaller = $this->container->get('module_installer');
diff --git a/tests/src/Functional/MenuLinkWeightMenuUiTest.php b/tests/src/Functional/MenuLinkWeightMenuUiTest.php
index 5f2d6b7..31abad1 100644
--- a/tests/src/Functional/MenuLinkWeightMenuUiTest.php
+++ b/tests/src/Functional/MenuLinkWeightMenuUiTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\menu_link_weight\Functional;
 
+use Drupal\node\NodeInterface;
+use Drupal\menu_link_content\MenuLinkContentInterface;
 use Drupal\Core\Menu\MenuLinkInterface;
 
 /**
@@ -18,7 +20,7 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
     // Create a node.
     $node1_title = '1 ' . $this->randomMachineName();
 
-    /** @var \Drupal\node\NodeInterface $node1 */
+    /** @var NodeInterface $node1 */
     $node1 = $this->drupalCreateNode(['type' => $this->nodeType, 'title' => $node1_title]);
 
     // Assert that there is no link for the node.
@@ -29,7 +31,8 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
       'title[0][value]' => $node1_title,
       'link[0][uri]' => '/' . $node1->toUrl()->getInternalPath(),
     ];
-    $this->drupalPostForm('admin/structure/menu/manage/tools/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/menu/manage/tools/add');
+    $this->submitForm($edit, 'Save');
     $this->assertInstanceOf(MenuLinkInterface::class, $this->loadMenuLinkByNode($node1));
     $node1_link = $this->loadMenuLinkByNode($node1);
 
@@ -43,10 +46,10 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
       'menu[menu_link_weight][link_current][weight]' => '-49',
       'menu[menu_link_weight][filter.tips_all][weight]' => '-48',
     );
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextNotContains('The menu link weights have been changed by another user, please try again.');
 
-    /** @var \Drupal\menu_link_content\MenuLinkContentInterface[] $links */
+    /** @var MenuLinkContentInterface[] $links */
     $links = $this->contentMenuLinkStorage->loadByProperties(['title' => $node1_title]);
     $link1_id = reset($links)->getPluginId();
 
@@ -64,7 +67,7 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
 
     // Create a node.
     $node2_title = '2 ' . $this->randomMachineName();
-    /** @var \Drupal\node\NodeInterface $node1 */
+    /** @var NodeInterface $node1 */
     $node2 = $this->drupalCreateNode(['type' => $this->nodeType, 'title' => $node2_title]);
 
     // Assert that there is no link for the node.
@@ -79,7 +82,8 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
       'menu[menu_link_weight][link_current][weight]' => '-48',
       'menu[menu_link_weight][node.add_page][weight]' => '-47',
     );
-    $this->drupalPostForm('admin/structure/menu/manage/tools/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/menu/manage/tools/add');
+    $this->submitForm($edit, 'Save');
 
     // Assert that the link exists.
     $this->assertInstanceOf(MenuLinkInterface::class, $this->loadMenuLinkByNode($node2));
@@ -101,14 +105,15 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
     // Assert that the item is placed on top of the list if no other options
     // are selected.
     $node3_title = '3 ' . $this->randomMachineName();
-    /** @var \Drupal\node\NodeInterface $node1 */
+    /** @var NodeInterface $node1 */
     $node3 = $this->drupalCreateNode(['type' => $this->nodeType, 'title' => $node3_title]);
 
     $edit = array(
       'title[0][value]' => $node3_title,
       'link[0][uri]' => '/' . $node3->toUrl()->getInternalPath(),
     );
-    $this->drupalPostForm('admin/structure/menu/manage/tools/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/menu/manage/tools/add');
+    $this->submitForm($edit, 'Save');
 
     // Assert that the link exists.
     $this->assertInstanceOf(MenuLinkInterface::class, $this->loadMenuLinkByNode($node3));
@@ -129,13 +134,14 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
     $this->state->set('menu_link_weight_test_relative_position', 'above_' . $link2_id);
 
     $node4_title = '4 ' . $this->randomMachineName();
-    /** @var \Drupal\node\NodeInterface $node1 */
+    /** @var NodeInterface $node1 */
     $node4 = $this->drupalCreateNode(['type' => $this->nodeType, 'title' => $node4_title]);
     $edit = array(
       'title[0][value]' => $node4_title,
       'link[0][uri]' => '/' . $node4->toUrl()->getInternalPath(),
     );
-    $this->drupalPostForm('admin/structure/menu/manage/tools/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/menu/manage/tools/add');
+    $this->submitForm($edit, 'Save');
     $link4_id = $this->loadMenuLinkByNode($node4)->getPluginId();
 
     $this->assertLinkWeight($link3_id, -50);
@@ -152,7 +158,8 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
       'title[0][value]' => $node5_title,
       'link[0][uri]' => '/' . $node5->toUrl()->getInternalPath(),
     );
-    $this->drupalPostForm('admin/structure/menu/manage/tools/add', $edit, 'Save');
+    $this->drupalGet('admin/structure/menu/manage/tools/add');
+    $this->submitForm($edit, 'Save');
     $link5_id = $this->loadMenuLinkByNode($node5)->getPluginId();
 
     // Assert that the reordering was successful.
@@ -174,7 +181,8 @@ class MenuLinkWeightMenuUiTest extends MenuLinkWeightFunctionalTestBase {
       'menu[menu_link_weight][link_current][weight]' => '6',
       'menu[menu_link_weight][node.add_page][weight]' => '7',
     );
-    $this->drupalPostForm('admin/structure/menu/link/filter.tips_all/edit', $edit, 'Save');
+    $this->drupalGet('admin/structure/menu/link/filter.tips_all/edit');
+    $this->submitForm($edit, 'Save');
 
     $this->assertLinkWeight($link1_id, 1);
     $this->assertLinkWeight($link2_id, 2);
