diff --git a/src/Plugin/Action/GroupActionBase.php b/src/Plugin/Action/GroupActionBase.php
index fc5cb9d..cdd25c1 100644
--- a/src/Plugin/Action/GroupActionBase.php
+++ b/src/Plugin/Action/GroupActionBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\group_action\Plugin\Action;
 
+use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Component\Uuid\Uuid;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Action\ConfigurableActionBase;
@@ -27,21 +28,21 @@ abstract class GroupActionBase extends ConfigurableActionBase implements Contain
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
 
   /**
    * The plugin manager of group content enablers.
    *
-   * @var \Drupal\group\Plugin\GroupContentEnablerManagerInterface
+   * @var GroupContentEnablerManagerInterface
    */
   protected GroupContentEnablerManagerInterface $gcePluginManager;
 
   /**
    * The Token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected Token $token;
 
@@ -54,13 +55,13 @@ abstract class GroupActionBase extends ConfigurableActionBase implements Contain
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\group\Plugin\GroupContentEnablerManagerInterface $gce_plugin_manager
+   * @param GroupContentEnablerManagerInterface $gce_plugin_manager
    *   The plugin manager of group content enablers.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The Token service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, GroupContentEnablerManagerInterface $gce_plugin_manager, Token $token, TranslationInterface $string_translation) {
@@ -321,7 +322,7 @@ abstract class GroupActionBase extends ConfigurableActionBase implements Contain
    * @param mixed $entity
    *   (Optional) The entity upon the action is to be executed.
    *
-   * @return \Drupal\group\Entity\GroupInterface|null
+   * @return GroupInterface|null
    *   The loaded group, or NULL if no group could be loaded.
    */
   protected function loadGroup($entity = NULL): ?GroupInterface {
@@ -342,7 +343,7 @@ abstract class GroupActionBase extends ConfigurableActionBase implements Contain
       return $this->entityTypeManager->getStorage('group')->load($group_id);
     }
     if (Uuid::isValid($group_id)) {
-      /** @var \Drupal\Core\Entity\EntityRepositoryInterface $repository */
+      /** @var EntityRepositoryInterface $repository */
       $repository = \Drupal::service('entity.repository');
       return $repository->loadEntityByUuid('group', $group_id);
     }
@@ -355,7 +356,7 @@ abstract class GroupActionBase extends ConfigurableActionBase implements Contain
    * @param mixed $entity
    *   (Optional) The entity upon the action is to be executed.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity or NULL if the entity could not be resolved.
    */
   protected function loadEntity($entity = NULL): ?EntityInterface {
@@ -375,7 +376,7 @@ abstract class GroupActionBase extends ConfigurableActionBase implements Contain
     $content_plugin_definition = $this->gcePluginManager->getDefinition($this->configuration['content_plugin']);
     $entity_type_id = $content_plugin_definition['entity_type_id'];
     if (Uuid::isValid($entity_id)) {
-      /** @var \Drupal\Core\Entity\EntityRepositoryInterface $repository */
+      /** @var EntityRepositoryInterface $repository */
       $repository = \Drupal::service('entity.repository');
       return $repository->loadEntityByUuid($entity_type_id, $entity_id);
     }
