diff --git a/modules/twig_extender_extras/src/Plugin/TwigPlugin/FieldFormatter.php b/modules/twig_extender_extras/src/Plugin/TwigPlugin/FieldFormatter.php
index 344a0b3..9295f0c 100644
--- a/modules/twig_extender_extras/src/Plugin/TwigPlugin/FieldFormatter.php
+++ b/modules/twig_extender_extras/src/Plugin/TwigPlugin/FieldFormatter.php
@@ -22,7 +22,7 @@ class FieldFormatter extends TwigPluginBase {
   /**
    * Implementation for render field formatter.
    *
-   * @param \Drupal\Core\Field\FieldItemList $field
+   * @param FieldItemList $field
    *   FieldItemList to display with formatter.
    * @param string $formatter
    *   Formatter plugin id to use.
diff --git a/modules/twig_extender_extras/src/Plugin/TwigPlugin/UrlValue.php b/modules/twig_extender_extras/src/Plugin/TwigPlugin/UrlValue.php
index 4c01bcb..e715abb 100644
--- a/modules/twig_extender_extras/src/Plugin/TwigPlugin/UrlValue.php
+++ b/modules/twig_extender_extras/src/Plugin/TwigPlugin/UrlValue.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\twig_extender_extras\Plugin\TwigPlugin;
 
+use Drupal\Core\Url;
 use Drupal\Core\Field\Plugin\DataType\FieldItem;
 use Drupal\twig_extender\Plugin\Twig\TwigPluginBase;
 
@@ -21,12 +22,12 @@ class UrlValue extends TwigPluginBase {
   /**
    * Get a url value from a link field.
    *
-   * @param \Drupal\Core\Field\Plugin\DataType\FieldItem $field
+   * @param FieldItem $field
    *   Field item from type link.
    *
    * @throws \Exception
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Url object.
    */
   public function getUrlValue(FieldItem $field) {
diff --git a/src/Plugin/Twig/TwigExtensionsPluginManager.php b/src/Plugin/Twig/TwigExtensionsPluginManager.php
index 953d011..244fc4c 100644
--- a/src/Plugin/Twig/TwigExtensionsPluginManager.php
+++ b/src/Plugin/Twig/TwigExtensionsPluginManager.php
@@ -19,11 +19,11 @@ class TwigExtensionsPluginManager extends DefaultPluginManager implements TwigPl
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler
+   * @param ThemeHandlerInterface $themeHandler
    *   The theme handle to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces,
diff --git a/src/Plugin/TwigPlugin/BlockCreate.php b/src/Plugin/TwigPlugin/BlockCreate.php
index 17199f2..19585cc 100644
--- a/src/Plugin/TwigPlugin/BlockCreate.php
+++ b/src/Plugin/TwigPlugin/BlockCreate.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\twig_extender\Plugin\TwigPlugin;
 
+use Drupal\language\Plugin\Block\LanguageBlock;
 use Drupal\twig_extender\Plugin\Twig\TwigPluginBase;
 
 /**
@@ -22,7 +23,7 @@ class BlockCreate extends TwigPluginBase {
    */
   public function getBlock($pluginId, $conf = []) {
     $block_plugin_manager = \Drupal::service('plugin.manager.block');
-    /** @var \Drupal\language\Plugin\Block\LanguageBlock $language_block */
+    /** @var LanguageBlock $language_block */
     $block = $block_plugin_manager->createInstance($pluginId, $conf);
     if (!$block) {
       return;
