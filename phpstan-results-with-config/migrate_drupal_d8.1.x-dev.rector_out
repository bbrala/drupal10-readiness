modules/contrib/migrate_drupal_d8/src/Plugin/migrate/source/d8/ContentEntity.php
modules/contrib/migrate_drupal_d8/src/Plugin/migrate/source/d8/File.php
modules/contrib/migrate_drupal_d8/src/Plugin/migrate/source/d8/Node.php
modules/contrib/migrate_drupal_d8/src/Plugin/migrate/source/d8/TaxonomyTerm.php
modules/contrib/migrate_drupal_d8/src/Plugin/migrate/source/d8/User.php
modules/contrib/migrate_drupal_d8/tests/src/Kernel/ContentEntityTest.php

3 files with changes
====================

1) modules/contrib/migrate_drupal_d8/tests/src/Kernel/ContentEntityTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\migrate_drupal_d8\Kernel;

+use Drupal\migrate\Plugin\MigrationInterface;
+use Drupal\migrate\Plugin\MigrationPluginManagerInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\file\Entity\File;
@@ @@
   /**
    * The test user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;

@@ @@
   /**
    * The migration plugin.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;

@@ @@
    * Tests table destination.
    */
   public function testEntitySource() {
-    /** @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migrationPluginManager */
+    /** @var MigrationPluginManagerInterface $migrationPluginManager */
     $migrationPluginManager = \Drupal::service('plugin.manager.migration');
     $definition = $this->migrationDefinition();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/migrate_drupal_d8/src/Plugin/migrate/source/d8/TaxonomyTerm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_drupal_d8\Plugin\migrate\source\d8;

+use Drupal\Core\Database\Query\SelectInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\State\StateInterface;
@@ @@
    *   The parent term id or FALSE if there is none.
    */
   protected function taxonomyTermGetParent($tid) {
-    /** @var \Drupal\Core\Database\Query\SelectInterface $query */
+    /** @var SelectInterface $query */
     $query = $this->select('taxonomy_term_hierarchy', 'h')
       ->fields('h', ['parent'])
       ->condition('tid', $tid);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/migrate_drupal_d8/src/Plugin/migrate/source/d8/ContentEntity.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\migrate_drupal_d8\Plugin\migrate\source\d8;

+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
    * @param int|null $revision_id
    *   (optional) The entity revision ID.
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    *
    * @return array
    *   The raw field values, keyed by delta.
@@ @@
    *
    * @see \Drupal\Core\Entity\Sql\DefaultTableMapping::generateFieldTableName
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    *
    * @return string
    *   The table name string.
@@ @@
    * @see \Drupal\migrate\Plugin\migrate\destination\EntityContentBase::getDefinitionFromEntity()
    */
   protected function getDefinitionFromEntity($key) {
-    /** @var \Drupal\Core\Field\FieldStorageDefinitionInterface[] $fieldDefinitions */
+    /** @var FieldStorageDefinitionInterface[] $fieldDefinitions */
     $fieldDefinitions = $this->entityFieldManager->getBaseFieldDefinitions($this->configuration['entity_type']);
     $fieldDefinition = $fieldDefinitions[$key];

@@ @@
    *
    * @param string $fieldName
    *   The name of the field to evaluate.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $definition
+   * @param FieldDefinitionInterface $definition
    *   The base field definition to evaluate.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

