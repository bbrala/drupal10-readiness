diff --git a/modules/file_download_token_webform/file_download_token_webform.module b/modules/file_download_token_webform/file_download_token_webform.module
index 3b46e5c..03e71f5 100644
--- a/modules/file_download_token_webform/file_download_token_webform.module
+++ b/modules/file_download_token_webform/file_download_token_webform.module
@@ -1,9 +1,11 @@
 <?php
 
+use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * Implements hook_form_FORM_ID_alter().
  */
-function file_download_token_webform_form_webform_settings_confirmation_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function file_download_token_webform_form_webform_settings_confirmation_form_alter(&$form, FormStateInterface $form_state) {
   $webform = $form_state->getFormObject()->getEntity();
   $settings = $webform->getThirdPartySettings('file_download_token_webform');
 
@@ -31,11 +33,11 @@ function file_download_token_webform_form_webform_settings_confirmation_form_alt
 
 /**
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
-function webform_form_file_download_token_submit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
+function webform_form_file_download_token_submit($form, FormStateInterface $form_state) {
   if ($file_id = $form_state->getValue('download_token_file')) {
     /** @var \Drupal\webform\WebformInterface $webform */
     $webform = $form_state->getFormObject()->getEntity();
diff --git a/src/Controller/TokenDownloadController.php b/src/Controller/TokenDownloadController.php
index 93624b9..3643078 100644
--- a/src/Controller/TokenDownloadController.php
+++ b/src/Controller/TokenDownloadController.php
@@ -16,7 +16,7 @@ class TokenDownloadController implements ContainerInjectionInterface {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\file_download_token\DownloadTokenManagerInterface
+   * @var DownloadTokenManagerInterface
    */
   protected $downloadTokenManager;
 
diff --git a/src/DownloadTokenManager.php b/src/DownloadTokenManager.php
index b05b7f5..312e198 100644
--- a/src/DownloadTokenManager.php
+++ b/src/DownloadTokenManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_download_token;
 
+use Drupal\Component\Uuid\UuidInterface;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -15,22 +16,22 @@ class DownloadTokenManager implements DownloadTokenManagerInterface {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The database connection object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * DownloadTokenManager constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param Connection $connection
+   * @param UuidInterface $uuid
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, Connection $connection) {
     $this->entityTypeManager = $entity_type_manager;
diff --git a/src/DownloadTokenManagerInterface.php b/src/DownloadTokenManagerInterface.php
index 8e7e071..c59c7a1 100644
--- a/src/DownloadTokenManagerInterface.php
+++ b/src/DownloadTokenManagerInterface.php
@@ -2,28 +2,30 @@
 
 namespace Drupal\file_download_token;
 
+use Drupal\Core\Url;
+use Drupal\Core\Link;
 use Drupal\file\FileInterface;
 
 interface DownloadTokenManagerInterface {
 
   /**
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *
    * @return string
    */
   public function createToken(FileInterface $file);
 
   /**
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    */
   public function createTokenUrl(FileInterface $file);
 
   /**
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *
-   * @return \Drupal\Core\Link
+   * @return Link
    */
   public function createTokenLink(FileInterface $file);
 
