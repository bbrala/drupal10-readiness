modules/contrib/onelogin_integration/onelogin_integration.install
modules/contrib/onelogin_integration/onelogin_integration.module
modules/contrib/onelogin_integration/src/AuthenticationService.php
modules/contrib/onelogin_integration/src/AuthenticationServiceInterface.php
modules/contrib/onelogin_integration/src/Controller/OneLoginIntegrationController.php
modules/contrib/onelogin_integration/src/Form/OneLoginIntegrationAdminForm.php
modules/contrib/onelogin_integration/src/SAMLAuthenticatorFactory.php
modules/contrib/onelogin_integration/src/SAMLAuthenticatorFactoryInterface.php
modules/contrib/onelogin_integration/src/UserService.php
modules/contrib/onelogin_integration/src/UserServiceInterface.php

6 files with changes
====================

1) modules/contrib/onelogin_integration/src/UserService.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The variable that holds an instance of ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * The variable that holds an instance of EntityTypeManagerInterface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * The variable that holds an instance of the MessengerInterface.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private $messenger;

@@ @@
   /**
    * UserService constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Reference to ConfigFactoryInterface.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Reference to TypeManagerInterface.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger_interface
+   * @param MessengerInterface $messenger_interface
    *   Reference to MessengerInterface.
    */
   public function __construct(
@@ @@
       [
         'name'                     => $username,
         'mail'                     => $email,
-        'pass'                     => user_password(16),
+        'pass'                     => \Drupal::service('password_generator')->generate(16),
         'enforceIsNew'             => TRUE,
         'init'                     => $email,
         'defaultLangcode'          => 'en',
    ----------- end diff -----------

Applied rules:
 * UserPasswordRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/onelogin_integration/src/SAMLAuthenticatorFactoryInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\onelogin_integration;

+use OneLogin\Saml2\Auth;
 /**
  * Interface SamlAuthenticatorServiceInterface.
  *
@@ @@
    * @param array $settings
    *   returns in instance of the Auth library.
    *
-   * @return \OneLogin\Saml2\Auth
+   * @return Auth
    *   Return instance of Auth.
    */
   public function createFromSettings(array $settings = []);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/onelogin_integration/src/SAMLAuthenticatorFactory.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\onelogin_integration;

+use OneLogin\Saml2\Error;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\MissingDependencyException;
@@ @@
   /**
    * The variable that holds an instance of ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * Class atribute to hold an instance of Auth object.
    *
-   * @var \OneLogin\Saml2\Auth
+   * @var Auth
    */
   private $auth;

@@ @@
   /**
    * SamlAuthenticatorFactory constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Reference to ConfigFactoryInterface.
    *
-   * @throws \Drupal\Core\Extension\MissingDependencyException
+   * @throws MissingDependencyException
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
     $this->configFactory = $config_factory;
@@ @@
    *   Custom settings for the initialization of the Auth
    *   library.
    *
-   * @return \OneLogin\Saml2\Auth
+   * @return Auth
    *   Returns a new instance of the Auth library.
    *
-   * @throws \OneLogin\Saml2\Error
+   * @throws Error
    *   Throws Saml2 error.
    */
   public function createFromSettings(array $settings = []) {
@@ @@
   /**
    * Get auth object from provided settings.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Instance of ConfigFactory interface.
    * @param array $settings
    *   An array of settings.
    *
-   * @return \OneLogin\Saml2\Auth
+   * @return Auth
    *   Return an instance of Auth.
    *
-   * @throws \OneLogin\Saml2\Error
+   * @throws Error
    *   Throws Saml2 error.
    */
   private function getAuth(ConfigFactoryInterface $configFactory, array $settings = []) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/onelogin_integration/src/Form/OneLoginIntegrationAdminForm.php:38

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   The form itself.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/onelogin_integration/src/Controller/OneLoginIntegrationController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\onelogin_integration\Controller;

+use OneLogin\Saml2\Error;
+use OneLogin\Saml2\ValidationError;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Messenger\MessengerInterface;
@@ @@
   /**
    * Instance of SAMLAuthenticatorFactoryInterface.
    *
-   * @var \Drupal\onelogin_integration\SAMLAuthenticatorFactoryInterface
+   * @var SAMLAuthenticatorFactoryInterface
    */
   protected $oneLoginAuthenticationFactory;

@@ @@
   /**
    * The variable that holds an instance of the custom UserService.
    *
-   * @var \Drupal\onelogin_integration\UserService
+   * @var UserService
    */
   protected $userService;

@@ @@
   /**
    * The variable that holds an instance of the custom AuthenticationService.
    *
-   * @var \Drupal\onelogin_integration\AuthenticationServiceInterface
+   * @var AuthenticationServiceInterface
    */
   protected $authenticationService;

@@ @@
   /**
    * The variable that holds an instance of the AccountProxy class.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $user;

@@ @@
   /**
    * The variable that holds an instance of the ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The variable that holds an instance of the MessengerInterface.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * OneLoginIntegrationController constructor.
    *
-   * @param \Drupal\onelogin_integration\SAMLAuthenticatorFactoryInterface $one_login_authenticator_factory
+   * @param SAMLAuthenticatorFactoryInterface $one_login_authenticator_factory
    *   Reference to the SAMLAuthenticatorFactory interface.
-   * @param \Drupal\onelogin_integration\AuthenticationServiceInterface $authentication_service
+   * @param AuthenticationServiceInterface $authentication_service
    *   Reference to the AuthenticationServiceInterface interface.
-   * @param \Drupal\onelogin_integration\UserService $user_service
+   * @param UserService $user_service
    *   Reference to the UserService service.
-   * @param \Drupal\Core\Session\AccountProxy $user
+   * @param AccountProxy $user
    *   Reference to the AccountProxy class.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Reference to the ConfigFactoryInterface.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger_interface
+   * @param MessengerInterface $messenger_interface
    *   Reference to MessengerInterface.
    *
    * @internal param SAMLAuthenticatorFactoryInterface $one_login_saml_authenticator_factory Reference to the oneLoginSaml2Auth class.*   Reference to the oneLoginSaml2Auth class.
@@ @@
   /**
    * The create method.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Reference to the ContainerInterface interface.
    *
    * @return static
@@ @@
    *
    * Tries to send a request to log the user in.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Returns a RedirectResponse to a specific page or the homepage, regarding
    *   the given settings.
    *
-   * @throws \OneLogin\Saml2\Error
+   * @throws Error
    *    Throws Saml2 error.
    */
   public function singleSignOn() {
@@ @@
    *
    * Tries to handle the incoming request from the singleSignOn method.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Returns a RedirectResponse to a specific page or the homepage, regarding
    *   the given settings.
    *
-   * @throws \OneLogin\Saml2\Error
+   * @throws Error
    *    Throw Saml2 error.
-   * @throws \OneLogin\Saml2\ValidationError
+   * @throws ValidationError
    *    Throws Saml2 validation error.
    */
   public function assertionConsumerService() {
@@ @@
    *
    * Takes care of logging the user out.
    *
-   * @throws \OneLogin\Saml2\Error
+   * @throws Error
    *    Throws Saml2 error.
    */
   public function singleLogOut() {
@@ @@
    *
    * A service for requests of logging the user out.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Returns a RedirectResponse to a specific page or the homepage, regarding
    *   the given settings.
    *
-   * @throws \OneLogin\Saml2\Error
+   * @throws Error
    *    Throws Saml2 error.
    */
   public function singleLogOutService() {
@@ @@
    * @return string
    *   A URL containing the metadata.
    *
-   * @throws \OneLogin\Saml2\Error
+   * @throws Error
    *    Throws Saml2 error.
    */
   public function metadata() {
@@ @@
    *
    * Checks if the 'Force OneLogin' option is checked and redirects accordingly.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A RedirectResponse object with the corresponding route.
    */
   public function forceUserLogin() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/onelogin_integration/src/AuthenticationService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\onelogin_integration;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ @@
   /**
    * The variable that holds an instance of ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * The variable that holds an instance of the SAMLAuthenticatorFactoryInterface.
    *
-   * @var \Drupal\onelogin_integration\SAMLAuthenticatorFactoryInterface
+   * @var SAMLAuthenticatorFactoryInterface
    */
   private $oneLoginAuthFactory;

@@ @@
   /**
    * The variable that holds an instance of the EntityTypeManagerInterface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * The variable that holds an instance of the UserServiceInterface.
    *
-   * @var \Drupal\onelogin_integration\UserServiceInterface
+   * @var UserServiceInterface
    */
   private $user;

@@ @@
   /**
    * The variable that holds an instance of the MessengerInterface.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private $messenger;

@@ @@
   /**
    * AuthenticationService constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Reference to ConfigFactoryInterface.
-   * @param \Drupal\onelogin_integration\SAMLAuthenticatorFactoryInterface $one_login_authenticator_factory
+   * @param SAMLAuthenticatorFactoryInterface $one_login_authenticator_factory
    *   Instance to SAMLAuthenticatorFactoryInterface.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Reference to EntityTypeManagerInterface.
-   * @param \Drupal\onelogin_integration\UserServiceInterface $user
+   * @param UserServiceInterface $user
    *   Reference to UserServiceInterface.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger_interface
+   * @param MessengerInterface $messenger_interface
    *   Reference to MessengerInterface.
    */
   public function __construct(
@@ @@
    * synchronise the roles and create a user if the data from the given
    * OneLogin request is not present in the system yet.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirects back to the homepage with a statusmessage accordingly.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function processLoginRequest() {
     // If there is no nameId found, logging in with SAML has no use. So redirect
@@ @@
    *   The attributes from the OneLogin request, so roles can be properly
    *   assigned.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   If the user is correctly created, a RedirectResponse will take them to
    *   their own page.
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

