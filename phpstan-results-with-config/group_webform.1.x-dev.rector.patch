diff --git a/group_webform.module b/group_webform.module
index f598e79..647c79b 100644
--- a/group_webform.module
+++ b/group_webform.module
@@ -51,7 +51,7 @@ function group_webform_entity_type_alter(array &$entity_types) {
  *   - view_mode: View mode; e.g., 'full', 'teaser', etc.
  */
 function group_webform_preprocess_group_content(array &$variables) {
-  /** @var \Drupal\webform\Entity\Webform $webform */
+  /** @var Webform $webform */
   $webform = $variables["group_content"]->getEntity();
   if ($webform instanceof Webform) {
     $output = \Drupal::EntityTypeManager()
diff --git a/src/Access/GroupWebformAccessInterface.php b/src/Access/GroupWebformAccessInterface.php
index 20f66e9..0b326a1 100644
--- a/src/Access/GroupWebformAccessInterface.php
+++ b/src/Access/GroupWebformAccessInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\group_webform\Access;
 
+use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\WebformInterface;
 use Drupal\webform\WebformSubmissionInterface;
@@ -14,12 +15,12 @@ interface GroupWebformAccessInterface {
   /**
    * A custom access check for webform page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\webform\WebformInterface $webform
+   * @param WebformInterface $webform
    *   Run access checks for this webform object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformEditAccess(AccountInterface $account, WebformInterface $webform);
@@ -27,12 +28,12 @@ interface GroupWebformAccessInterface {
   /**
    * A custom access check for webform delete page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\webform\WebformInterface $webform
+   * @param WebformInterface $webform
    *   Run access checks for this webform object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformDeleteAccess(AccountInterface $account, WebformInterface $webform);
@@ -40,12 +41,12 @@ interface GroupWebformAccessInterface {
   /**
    * A custom access check for webform items page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\webform\WebformInterface $webform
+   * @param WebformInterface $webform
    *   Run access checks for this webform item object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformItemAccess(AccountInterface $account, WebformInterface $webform);
@@ -53,12 +54,12 @@ interface GroupWebformAccessInterface {
   /**
    * A custom access check for webform submissions page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   Run access checks for this webform link object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformSubmissionAccess(AccountInterface $account, WebformSubmissionInterface $webform_submission);
@@ -66,12 +67,12 @@ interface GroupWebformAccessInterface {
   /**
    * A custom access check for webform submissions edit page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   Run access checks for this webform link object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformSubmissionEditAccess(AccountInterface $account, WebformSubmissionInterface $webform_submission);
@@ -79,12 +80,12 @@ interface GroupWebformAccessInterface {
   /**
    * A custom access check for webform submissions delete page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   Run access checks for this webform link object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformSubmissionDeleteAccess(AccountInterface $account, WebformSubmissionInterface $webform_submission);
@@ -92,12 +93,12 @@ interface GroupWebformAccessInterface {
   /**
    * A custom access check for webform submissions page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\webform\WebformInterface $webform
+   * @param WebformInterface $webform
    *   Run access checks for this webform link object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformSubmissionDownload(AccountInterface $account, WebformInterface $webform);
diff --git a/src/Controller/GroupWebformController.php b/src/Controller/GroupWebformController.php
index 9e143ab..72731b3 100644
--- a/src/Controller/GroupWebformController.php
+++ b/src/Controller/GroupWebformController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\group_webform\Controller;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\group\Entity\GroupContentTypeInterface;
 use Drupal\Core\Entity\EntityFormBuilderInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Render\RendererInterface;
@@ -19,22 +21,22 @@ class GroupWebformController extends GroupContentController {
   /**
    * The group content plugin manager.
    *
-   * @var \Drupal\group\Plugin\GroupContentEnablerManagerInterface
+   * @var GroupContentEnablerManagerInterface
    */
   protected $pluginManager;
 
   /**
    * Constructs a new GroupMenuController.
    *
-   * @param \Drupal\group\Plugin\GroupContentEnablerManagerInterface $plugin_manager
+   * @param GroupContentEnablerManagerInterface $plugin_manager
    *   The group content plugin manager.
    * @param \Drupal\user\PrivateTempStoreFactory $temp_store_factory
    *   The private store factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFormBuilderInterface $entity_form_builder
+   * @param EntityFormBuilderInterface $entity_form_builder
    *   The entity form builder.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(GroupContentEnablerManagerInterface $plugin_manager, PrivateTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $entity_type_manager, EntityFormBuilderInterface $entity_form_builder, RendererInterface $renderer) {
@@ -58,13 +60,13 @@ class GroupWebformController extends GroupContentController {
   /**
    * Provides the group webform overview page.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   The group to show the group webform content for.
    *
    * @return array
    *   A render array as expected by drupal_render().
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   public function groupContentOverview(GroupInterface $group) {
     $class = '\Drupal\group_webform\GroupWebformContentListBuilder';
@@ -75,7 +77,7 @@ class GroupWebformController extends GroupContentController {
   /**
    * Provides the group webform overview page title.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   The group to show the group webform content for.
    *
    * @return string
@@ -98,7 +100,7 @@ class GroupWebformController extends GroupContentController {
 
     // Retrieve all of the responsible group content types, keyed by plugin ID.
     foreach ($this->addPageBundles($group, $create_mode) as $bundle_name) {
-      /** @var \Drupal\group\Entity\GroupContentTypeInterface $group_content_type */
+      /** @var GroupContentTypeInterface $group_content_type */
       if (!empty($build['#bundles'][$bundle_name])) {
         $build['#bundles'][$bundle_name]['label'] = $this->t('Webform');
         $build['#bundles'][$bundle_name]['description'] = $this->t('Create a webform for the group.');
@@ -126,7 +128,7 @@ class GroupWebformController extends GroupContentController {
     $storage = $this->entityTypeManager->getStorage('group_content_type');
     $properties = ['group_type' => $group->bundle(), 'content_plugin' => $plugin_ids];
     foreach ($storage->loadByProperties($properties) as $bundle => $group_content_type) {
-      /** @var \Drupal\group\Entity\GroupContentTypeInterface $group_content_type */
+      /** @var GroupContentTypeInterface $group_content_type */
       $bundles[$group_content_type->getContentPluginId()] = $bundle;
     }
 
diff --git a/src/GroupWebformContentListBuilder.php b/src/GroupWebformContentListBuilder.php
index 6f5a379..a4abcd0 100644
--- a/src/GroupWebformContentListBuilder.php
+++ b/src/GroupWebformContentListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\group_webform;
 
+use Drupal\group\Entity\GroupContentInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,7 +21,7 @@ class GroupWebformContentListBuilder extends GroupContentListBuilder {
   /**
    * The current user's account object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -91,7 +92,7 @@ class GroupWebformContentListBuilder extends GroupContentListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\group\Entity\GroupContentInterface $entity */
+    /** @var GroupContentInterface $entity */
     $row['id'] = $entity->id();
     $row['label']['data'] = $entity->getEntity()->toLink(NULL, 'edit-form');
     $row = $row + parent::buildRow($entity);
@@ -112,7 +113,7 @@ class GroupWebformContentListBuilder extends GroupContentListBuilder {
    * {@inheritdoc}
    */
   protected function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\group\Entity\GroupContentInterface $entity */
+    /** @var GroupContentInterface $entity */
     $operations = parent::getDefaultOperations($entity);
     $plugin_id = 'group_webform:webform';
 
diff --git a/src/GroupWebformService.php b/src/GroupWebformService.php
index 475951c..dacc938 100644
--- a/src/GroupWebformService.php
+++ b/src/GroupWebformService.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\group_webform;
 
+use Drupal\group\Entity\GroupInterface;
+use Drupal\group\Entity\GroupContentInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,21 +22,21 @@ class GroupWebformService implements GroupWebformServiceInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The current user's account object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The group membership loader.
    *
-   * @var \Drupal\group\GroupMembershipLoader
+   * @var GroupMembershipLoader
    */
   protected $membershipLoader;
 
@@ -60,18 +64,18 @@ class GroupWebformService implements GroupWebformServiceInterface {
   /**
    * Static cache of all group webform objects keyed by group ID.
    *
-   * @var \Drupal\webform\WebformInterface[]
+   * @var WebformInterface[]
    */
   protected $groupWebforms = [];
 
   /**
    * Constructs a new GroupTypeController.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\group\GroupMembershipLoader $membership_loader
+   * @param GroupMembershipLoader $membership_loader
    *   The group membership loader.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, AccountInterface $current_user, GroupMembershipLoader $membership_loader) {
@@ -115,11 +119,11 @@ class GroupWebformService implements GroupWebformServiceInterface {
       return $this->webformAccess[$op][$account->id()][$webform->id()] = AccessResult::neutral();
     }
 
-    /** @var \Drupal\group\Entity\GroupInterface[] $groups */
+    /** @var GroupInterface[] $groups */
     $groups = [];
     $content_webforms = [];
     foreach ($group_contents as $group_content) {
-      /** @var \Drupal\group\Entity\GroupContentInterface $group_content */
+      /** @var GroupContentInterface $group_content */
       $group = $group_content->getGroup();
       $groups[$group->id()] = $group;
       $content_webforms[$group->id()][$webform->id()]['owner'] = $group_content->getOwner()->id();
@@ -223,11 +227,11 @@ class GroupWebformService implements GroupWebformServiceInterface {
    * We create a static cache of group webforms since loading them individually
    * has a big impact on performance.
    *
-   * @return \Drupal\webform\WebformInterface[]
+   * @return WebformInterface[]
    *   A nested array containing all group webform objects keyed by group ID.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getGroupWebforms($owner_id = NULL) {
     if (!$this->groupWebforms) {
@@ -252,7 +256,7 @@ class GroupWebformService implements GroupWebformServiceInterface {
           if (!isset($group_content->gid->target_id) || !isset($group_content->{$group_content_field}->target_id)) {
             continue;
           }
-          /** @var \Drupal\group\Entity\GroupContentInterface $group_content */
+          /** @var GroupContentInterface $group_content */
           $this->groupWebforms[$group_content->gid->target_id][$group_content->{$group_content_field}->target_id] = $webforms[$group_content->{$group_content_field}->target_id];
         }
       }
diff --git a/src/GroupWebformServiceInterface.php b/src/GroupWebformServiceInterface.php
index 267a603..38fff9e 100644
--- a/src/GroupWebformServiceInterface.php
+++ b/src/GroupWebformServiceInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\group_webform;
 
+use Drupal\Core\Access\AccessResult;
 use Drupal\webform\WebformSubmissionInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\WebformInterface;
@@ -16,12 +17,12 @@ interface GroupWebformServiceInterface {
    *
    * @param string $op
    *   The operation to perform on the webform.
-   * @param \Drupal\webform\WebformInterface $webform
+   * @param WebformInterface $webform
    *   Run access checks for this webform object.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformAccess($op, WebformInterface $webform, AccountInterface $account = NULL);
@@ -31,12 +32,12 @@ interface GroupWebformServiceInterface {
    *
    * @param string $op
    *   The operation to perform on the webform.
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   Run access checks for this webform object.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function webformSubmissionAccessItems($op, WebformSubmissionInterface $webform_submission, AccountInterface $account = NULL);
@@ -44,10 +45,10 @@ interface GroupWebformServiceInterface {
   /**
    * Load a list of webforms where a user is the owner.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user to load the webforms for.
    *
-   * @return \Drupal\webform\WebformInterface[]
+   * @return WebformInterface[]
    *   An array of webform objects keyed by webform name.
    */
   public function loadUserOwnerGroupWebforms(AccountInterface $account = NULL);
@@ -57,10 +58,10 @@ interface GroupWebformServiceInterface {
    *
    * @param int $group_id
    *   The group ID to load the webforms from.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\webform\WebformInterface[]
+   * @return WebformInterface[]
    *   An array of webform objects keyed by webform name.
    */
   public function loadUserGroupWebformsByGroup($group_id, AccountInterface $account = NULL);
diff --git a/src/Plugin/GroupContentEnabler/GroupWebform.php b/src/Plugin/GroupContentEnabler/GroupWebform.php
index 60d22d2..e187f8c 100644
--- a/src/Plugin/GroupContentEnabler/GroupWebform.php
+++ b/src/Plugin/GroupContentEnabler/GroupWebform.php
@@ -43,9 +43,11 @@ class GroupWebform extends GroupContentEnablerBase {
 
     // Allow permissions here and in child classes to easily use the plugin name
     // and target entity type name in their titles and descriptions.
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Please confirm that `getEntityType()` is an instance of `\Drupal\Core\Entity\EntityType`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
     $t_args = [
       '%plugin_name' => $this->getLabel(),
-      '%entity_type' => $this->getEntityType()->getLowercaseLabel(),
+      '%entity_type' => $this->getEntityType()->getSingularLabel(),
     ];
     $defaults = ['title_args' => $t_args, 'description_args' => $t_args];
 
diff --git a/tests/src/Functional/GroupWebformAccessTest.php b/tests/src/Functional/GroupWebformAccessTest.php
index 6f7a955..6a41551 100644
--- a/tests/src/Functional/GroupWebformAccessTest.php
+++ b/tests/src/Functional/GroupWebformAccessTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\group_webform\Functional;
 
+use Drupal\group\Entity\Storage\GroupContentTypeStorageInterface;
 use Drupal\Tests\group\Functional\GroupBrowserTestBase;
 
 /**
@@ -53,7 +54,7 @@ class GroupWebformAccessTest extends GroupBrowserTestBase {
     $this->assertSession()->linkByHrefNotExists('group/1/webform/create');
 
     // Install webform entity for group.
-    /** @var \Drupal\group\Entity\Storage\GroupContentTypeStorageInterface $storage */
+    /** @var GroupContentTypeStorageInterface $storage */
     $storage = $this->entityTypeManager->getStorage('group_content_type');
     $storage->createFromPlugin($group->getGroupType(), 'group_webform:webform')->save();
 
