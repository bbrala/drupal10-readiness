modules/contrib/mimemail/mimemail.module
modules/contrib/mimemail/modules/mimemail_example/mimemail_example.module
modules/contrib/mimemail/modules/mimemail_example/src/Form/ExampleForm.php
modules/contrib/mimemail/modules/mimemail_example/tests/src/Functional/ExampleMailTest.php
modules/contrib/mimemail/src/Form/AdminForm.php
modules/contrib/mimemail/src/Plugin/Mail/MimeMail.php
modules/contrib/mimemail/src/Utility/MimeMailFormatHelper.php
modules/contrib/mimemail/tests/src/Functional/MimeMailWebTest.php
modules/contrib/mimemail/tests/src/Kernel/MimeMailCompressTest.php
modules/contrib/mimemail/tests/src/Kernel/MimeMailFormatHelperTest.php

7 files with changes
====================

1) modules/contrib/mimemail/tests/src/Kernel/MimeMailFormatHelperTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\mimemail\Kernel;

+use Drupal\user\UserInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\user\Traits\UserCreationTrait;
 use Drupal\mimemail\Utility\MimeMailFormatHelper;
@@ @@
   /**
    * Administrator.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Authenticated user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $userA;

@@ @@
   /**
    * A different authenticated user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $userB;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Sets up an anonymous and two authenticated users.
     $this->adminUser = $this->setUpCurrentUser([
@@ @@
   /**
    * Tests formatting an address string.
    *
-   * @param string|array|\Drupal\user\UserInterface $address
+   * @param string|array|UserInterface $address
    *   MimeMailFormatHelper::mimeMailAddress() accepts addresses in one of
    *   four different formats:
    *   - A text email address, e.g. someone@example.com.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/mimemail/tests/src/Functional/MimeMailWebTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\mimemail\Functional;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\mimemail\Utility\MimeMailFormatHelper;

@@ @@
   /**
    * A user with all permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create admin user.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/mimemail/src/Utility/MimeMailFormatHelper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mimemail\Utility;

+use Symfony\Component\Mime\MimeTypesInterface;
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\Mail;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Language\LanguageInterface;
@@ @@
   /**
    * Formats an email address as a string.
    *
-   * @param string|array|\Drupal\user\UserInterface $address
+   * @param string|array|UserInterface $address
    *   MimeMailFormatHelper::mimeMailAddress() accepts addresses in one of
    *   four different formats:
    *   - A text email address, e.g. someone@example.com.
@@ @@
     // to an email message.
     static $files = [];

-    /** @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mime_type_guesser */
+    /** @var MimeTypesInterface $mime_type_guesser */
     $mime_type_guesser = \Drupal::service('file.mime_type.guesser');

-    /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+    /** @var FileSystemInterface $file_system */
     $file_system = \Drupal::service('file_system');

-    /** @var \Drupal\Core\Config\ImmutableConfig file_config */
+    /** @var ImmutableConfig file_config */
     $file_config = \Drupal::config('system.file');

-    /** @var \Symfony\Component\HttpFoundation\Request $current_request */
+    /** @var Request $current_request */
     $current_request = \Drupal::requestStack()->getCurrentRequest();

-    /** @var \Drupal\Core\Session\AccountProxyInterface $current_user */
+    /** @var AccountProxyInterface $current_user */
     $current_user = \Drupal::currentUser();

-    /** @var \Drupal\Core\Config\ImmutableConfig $mimemail_config */
+    /** @var ImmutableConfig $mimemail_config */
     $mimemail_config = \Drupal::config('mimemail.settings');

     if ($url) {
@@ @@
         }
         // The $url is a non-local URI that needs to be converted to a URL.
         else {
-          $file = $file_system->realpath($url) ? $file_system->realpath($url) : file_create_url($url);
+          $file = $file_system->realpath($url) ? $file_system->realpath($url) : \Drupal::service('file_url_generator')->generateAbsoluteString($url);
         }
       }
     }
@@ @@
    *   A processed URL.
    */
   public static function mimeMailUrl($url, $to_embed = FALSE) {
-    /** @var \Drupal\Core\Config\ImmutableConfig $mimemail_config */
+    /** @var ImmutableConfig $mimemail_config */
     $mimemail_config = \Drupal::config('mimemail.settings');

-    /** @var \Drupal\Core\Language\LanguageManagerInterface $language_manager */
+    /** @var LanguageManagerInterface $language_manager */
     $language_manager = \Drupal::languageManager();

     $url = urldecode($url);
@@ @@
       if ($is_image) {
         if ($to_link) {
           // Exclude images from embedding if needed.
-          $url = file_create_url($url);
+          $url = \Drupal::service('file_url_generator')->generateAbsoluteString($url);
           $url = str_replace(' ', '%20', $url);
         }
         else {
@@ @@
     // Control variable to avoid boundary collision.
     static $part_num = 0;

-    /** @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mime_type_guesser */
+    /** @var MimeTypesInterface $mime_type_guesser */
     $mime_type_guesser = \Drupal::service('file.mime_type.guesser');

-    /** @var \Drupal\Component\Datetime\TimeInterface $time */
+    /** @var TimeInterface $time */
     $time = \Drupal::time();

     // Compute boundary hash.
@@ @@
    *   Overwritten headers.
    */
   public static function mimeMailHeaders(array $headers, $from = NULL) {
-    /** @var \Drupal\Core\Config\ImmutableConfig $site_config */
+    /** @var ImmutableConfig $site_config */
     $site_config = \Drupal::config('system.site');

     // Overwrite standard headers.
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector


4) modules/contrib/mimemail/src/Plugin/Mail/MimeMail.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The email.validator service.
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   protected $emailValidator;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Component\Utility\EmailValidatorInterface $email_validator
+   * @param EmailValidatorInterface $email_validator
    *   The email validator service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, EmailValidatorInterface $email_validator, RendererInterface $renderer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/mimemail/src/Form/AdminForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The mail plugin manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs an AdminForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail plugin manager service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MailManagerInterface $mail_manager, ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
     $theme = $this->themeHandler->getDefault();
     // @todo Searching the path is not what we want - this is how it was done
     // in D7, but that's not how assets should be handled in D8.
-    $mailstyle = drupal_get_path('theme', $theme) . '/mail.css';
+    $mailstyle = \Drupal::service('extension.list.theme')->getPath($theme) . '/mail.css';
     // Disable site style sheets including option if found.
     if (is_file($mailstyle)) {
       $config->set('sitestyle', FALSE);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/mimemail/modules/mimemail_example/tests/src/Functional/ExampleMailTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\mimemail_example\Functional;

+use Drupal\Core\Session\AccountInterface;
+use Drupal\Tests\WebAssert;
 use Drupal\Core\Test\AssertMailTrait;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Authenticated but unprivileged user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $unprivUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create our test users.
@@ @@
    * Tests module permissions / access to configuration page.
    */
   public function testUserAccess() {
-    /** @var \Drupal\Tests\WebAssert $assert */
+    /** @var WebAssert $assert */
     $assert = $this->assertSession();

     // Test as anonymous user.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/mimemail/modules/mimemail_example/src/Form/ExampleForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The email.validator service.
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   protected $emailValidator;

@@ @@
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * Constructs a new ExampleForm.
    *
-   * @param \Drupal\Component\Utility\EmailValidatorInterface $email_validator
+   * @param EmailValidatorInterface $email_validator
    *   The email validator service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager service.
    */
   public function __construct(EmailValidatorInterface $email_validator, LanguageManagerInterface $language_manager, MailManagerInterface $mail_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

