modules/contrib/bee/bee.install
modules/contrib/bee/bee.module
modules/contrib/bee/modules/bee_webform/bee_webform.install
modules/contrib/bee/modules/bee_webform/bee_webform.module
modules/contrib/bee/modules/bee_webform/src/Element/WebformBeeReservationForm.php
modules/contrib/bee/modules/bee_webform/src/Plugin/BusinessRulesAction/LoopThroughWebformEvents.php
modules/contrib/bee/modules/bee_webform/src/Plugin/WebformElement/WebformBeeReservationForm.php
modules/contrib/bee/src/Access/BeeAddReservationAccessCheck.php
modules/contrib/bee/src/Access/BeeAvailabilityAccessCheck.php
modules/contrib/bee/src/BeePermissions.php
modules/contrib/bee/src/Controller/BeeController.php
modules/contrib/bee/src/EventSubscriber/OrderEventSubscriber.php
modules/contrib/bee/src/Form/AddReservationForm.php
modules/contrib/bee/src/Form/UpdateAvailabilityForm.php
modules/contrib/bee/src/Resolvers/SalepriceResolver.php

9 files with changes
====================

1) modules/contrib/bee/src/Form/UpdateAvailabilityForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new UpdateAvailabilityForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   }

   /**
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    * @param \DateTime $start_date
    * @param \DateTime $end_date
    * @param int $type_id
@@ @@
   }

   /**
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    * @param \DateTime $start_date
    * @param \DateTime $end_date
    * @param int $type_id
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bee/src/Form/AddReservationForm.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new AddReservationForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    * @param \Drupal\commerce_cart\CartManagerInterface|null $cart_manager
    *   The cart manager.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bee/src/EventSubscriber/OrderEventSubscriber.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new OrderEventSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/bee/src/Controller/BeeController.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new BeeController object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * The _title_callback for the page that renders the availability.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node
+   * @param EntityInterface $node
    *
    * @return string
    *   The page title.
@@ @@
   /**
    * The _title_callback for the page that renders the add reservation form.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node
+   * @param EntityInterface $node
    *
    * @return string
    *   The page title.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/bee/src/BeePermissions.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * Constructs a new BeePermissions instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/bee/src/Access/BeeAvailabilityAccessCheck.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a BeeAvailabilityAccessCheck object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, ConfigFactoryInterface $config_factory) {
@@ @@
   }

   /**
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/bee/src/Access/BeeAddReservationAccessCheck.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a BeeAddReservationAccessCheck object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, ConfigFactoryInterface $config_factory) {
@@ @@
   }

   /**
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/bee/bee.module:481

    ---------- begin diff ----------
@@ @@
 function bee_theme_registry_alter(&$theme_registry) {
   $theme_registry['field__node__field_availability_hourly'] = [
     'template' => 'field-availability-hourly',
-    'path' => drupal_get_path('module', 'bee') . '/templates',
+    'path' => \Drupal::service('extension.list.module')->getPath('bee') . '/templates',
     'render element' => 'element',
     'base hook' => 'field',
     'type' => 'module',
-    'theme path' => drupal_get_path('module', 'bee'),
+    'theme path' => \Drupal::service('extension.list.module')->getPath('bee'),
     'preprocess functions' => [
       'template_preprocess',
       'template_preprocess_field',
@@ @@

   $theme_registry['field__node__field_availability_daily'] = [
     'template' => 'field-availability-daily',
-    'path' => drupal_get_path('module', 'bee') . '/templates',
+    'path' => \Drupal::service('extension.list.module')->getPath('bee') . '/templates',
     'render element' => 'element',
     'base hook' => 'field',
     'type' => 'module',
-    'theme path' => drupal_get_path('module', 'bee'),
+    'theme path' => \Drupal::service('extension.list.module')->getPath('bee'),
     'preprocess functions' => [
       'template_preprocess',
       'template_preprocess_field',
@@ @@
       ];

       $build = [
-        '#markup' => render($render_array),
+        '#markup' => \Drupal::service('renderer')->render($render_array),
       ];
     }
   }
@@ @@
  * Add "Availability" field to the node type.
  *
  * @param string $field_name
- * @param \Drupal\node\Entity\NodeType $node_type
+ * @param NodeType $node_type
  */
 function bee_add_availability_field($field_name, NodeType $node_type) {
   $field_storage = FieldStorageConfig::loadByName('node', $field_name);
@@ @@
  * Add "Open Hours" field to the node type.
  *
  * @param string $field_name
- * @param \Drupal\node\Entity\NodeType $node_type
+ * @param NodeType $node_type
  */
 function bee_add_open_hours_field($field_name, NodeType $node_type) {
   $field_storage = FieldStorageConfig::loadByName('node', $field_name);
@@ @@
  * Add "Set Open Hours" field to the node type.
  *
  * @param string $field_name
- * @param \Drupal\node\Entity\NodeType $node_type
+ * @param NodeType $node_type
  */
 function bee_add_use_open_hours_field($field_name, NodeType $node_type) {
   $field_storage = FieldStorageConfig::loadByName('node', $field_name);
@@ @@
  * Add "Product" field to the node type.
  *
  * @param string $field_name
- * @param \Drupal\node\Entity\NodeType $node_type
+ * @param NodeType $node_type
  */
 function bee_add_product_reference_field($field_name, NodeType $node_type) {
   $field_storage = FieldStorageConfig::loadByName('node', $field_name);
@@ @@
  * Add "Price" field to the node type.
  *
  * @param string $field_name
- * @param \Drupal\node\Entity\NodeType $node_type
+ * @param NodeType $node_type
  */
 function bee_add_price_field($field_name, NodeType $node_type) {
   $field_storage = FieldStorageConfig::loadByName('node', $field_name);
@@ @@
  * Add "Price frequency" field to the node type.
  *
  * @param string $field_name
- * @param \Drupal\node\Entity\NodeType $node_type
+ * @param NodeType $node_type
  */
 function bee_add_price_frequency_field($field_name, $node_type) {
   $field_storage = FieldStorageConfig::loadByName('node', $field_name);
@@ @@
 /**
  * Create a "Product" type for each node type in BEE.
  *
- * @param \Drupal\node\Entity\NodeType $node_type
+ * @param NodeType $node_type
  */
 function bee_create_node_product_type(NodeType $node_type) {
   $id = 'bee_' . $node_type->id();
@@ @@
 }

 /**
- * @param \Drupal\node\Entity\Node $node
- * @param \Drupal\bat_booking\Entity\Booking $booking
+ * @param Node $node
+ * @param Booking $booking
  * @param DateTime $start_date
  * @param DateTime $end_date
  *
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * RenderRector
 * ArgumentRemoverRector


9) modules/contrib/bee/bee.install:165

    ---------- begin diff ----------
@@ @@
     'bat_event_series.event_series_type.availability_hourly',
   ];

-  $path = drupal_get_path('module', 'bee') . '/config/install';
+  $path = \Drupal::service('extension.list.module')->getPath('bee') . '/config/install';
   $source = new FileStorage($path);
   $config_storage = \Drupal::service('config.storage');
   foreach ($configs as $config) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/bee/src/Resolvers/SalepriceResolver.php" file, due to: 
         "Analyze error: "Class                                                 
         Drupal\commerce_price\Resolver\PriceResolverInterface not found.".     
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bee/modules/bee_webform/src/Plugin/WebformElement/Webfor
         mBeeReservationForm.php" file, due to:                                 
         "Analyze error: "Class                                                 
         Drupal\webform\Plugin\WebformElement\WebformCompositeBase not found.". 
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bee/modules/bee_webform/src/Plugin/BusinessRulesAction/L
         oopThroughWebformEvents.php" file, due to:                             
         "Analyze error: "Class                                                 
         Drupal\business_rules\Plugin\BusinessRulesActionPlugin not found.".    
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bee/modules/bee_webform/src/Element/WebformBeeReservatio
         nForm.php" file, due to:                                               
         "Analyze error: "Class Drupal\webform\Element\WebformCompositeBase not 
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

