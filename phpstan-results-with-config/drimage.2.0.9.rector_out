modules/contrib/drimage/drimage.api.php
modules/contrib/drimage/drimage.install
modules/contrib/drimage/drimage.module
modules/contrib/drimage/src/Controller/DrImageController.php
modules/contrib/drimage/src/Form/DrimageSettingsForm.php
modules/contrib/drimage/src/PathProcessor/PathProcessorImageStyles.php
modules/contrib/drimage/src/Plugin/Field/FieldFormatter/DrImageFormatter.php
modules/contrib/drimage/src/Plugin/Field/FieldFormatter/DrImageUriFormatter.php

5 files with changes
====================

1) modules/contrib/drimage/src/Plugin/Field/FieldFormatter/DrImageUriFormatter.php:58

    ---------- begin diff ----------
@@ @@
     $elements[0]['#alt'] = $file->getMetaData('alt');
     $elements[0]['#data']['original_width'] = $file->getMetaData('width');
     $elements[0]['#data']['original_height'] = $file->getMetaData('height');
-    $elements[0]['#data']['original_source'] = file_url_transform_relative(file_create_url($file->getFileUri()));
+    $elements[0]['#data']['original_source'] = \Drupal::service('file_url_generator')->generateString($file->getFileUri());

     // Add image_handling and specific data for the type of handling.
     $elements[0]['#data']['image_handling'] = $this->getSetting('image_handling');
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/drimage/src/Plugin/Field/FieldFormatter/DrImageFormatter.php:266

    ---------- begin diff ----------
@@ @@
       $elements[$delta]['#alt'] = $element['#item']->getValue()['alt'];
       $elements[$delta]['#data']['original_width'] = $element['#item']->getValue()['width'];
       $elements[$delta]['#data']['original_height'] = $element['#item']->getValue()['height'];
-      $elements[$delta]['#data']['original_source'] = file_url_transform_relative(file_create_url($files[$delta]->getFileUri()));
+      $elements[$delta]['#data']['original_source'] = \Drupal::service('file_url_generator')->generateString($files[$delta]->getFileUri());

       // Add image_handling and specific data for the type of handling.
       $elements[$delta]['#data']['image_handling'] = $this->getSetting('image_handling');
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/drimage/src/PathProcessor/PathProcessorImageStyles.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The stream wrapper manager service.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;

@@ @@
   /**
    * Constructs a new PathProcessorImageStyles object.
    *
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager service.
    */
   public function __construct(StreamWrapperManagerInterface $stream_wrapper_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/drimage/src/Form/DrimageSettingsForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs a DrimageSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, DateFormatterInterface $date_formatter, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/drimage/src/Controller/DrImageController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\drimage\Controller;

+use Symfony\Component\HttpFoundation\BinaryFileResponse;
+use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
+use Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException;
 use Drupal\Core\Entity\EntityStorageException;
 use Drupal\file\Entity\File;
 use Drupal\image\Controller\ImageStyleDownloadController;
@@ @@
   /**
    * Deliver an image from the requested parameters.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    * @param int $width
    *    The requested width in pixels that came from the JS.
@@ @@
    * @param string|NULL $iwc_id
    *    (optional) The id for the image_widget crop type to use.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse|\Symfony\Component\HttpFoundation\Response
+   * @return BinaryFileResponse|Response
    *   The transferred file as response or some error response.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Thrown when the user does not have access to the file.
-   * @throws \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException
+   * @throws ServiceUnavailableHttpException
    *   Thrown when the file is still being generated.
    */
   public function image(Request $request, $width, $height, $fid, $iwc_id = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

