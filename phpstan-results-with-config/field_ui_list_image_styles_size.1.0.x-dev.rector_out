modules/contrib/field_ui_list_image_styles_size/field_ui_list_image_styles_size.module
modules/contrib/field_ui_list_image_styles_size/src/EntityViewDisplayAppliedImageSize.php
modules/contrib/field_ui_list_image_styles_size/src/Form/SettingsForm.php
modules/contrib/field_ui_list_image_styles_size/src/Service/ImageSizeService.php
modules/contrib/field_ui_list_image_styles_size/src/Service/ImageSizeServiceInterface.php
modules/contrib/field_ui_list_image_styles_size/tests/src/Functional/FieldWidgetFormAlterTest.php
modules/contrib/field_ui_list_image_styles_size/tests/src/Functional/Service/ImageSizeServiceTest.php
modules/contrib/field_ui_list_image_styles_size/tests/src/Functional/TestBase.php

7 files with changes
====================

1) modules/contrib/field_ui_list_image_styles_size/tests/src/Functional/TestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\field_ui_list_image_styles_size\Functional;

+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\Core\Config\Config;
+use Drupal\node\NodeInterface;
+use Drupal\image\ImageStyleInterface;
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\Core\Entity\Entity\EntityViewMode;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
@@ @@
   /**
    * Entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;

@@ @@
   /**
    * No image style view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $noImageStyleViewDisplay;

@@ @@
   /**
    * Default view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $defaultViewDisplay;

@@ @@
   /**
    * Alternative view display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $alternativeViewDisplay;

@@ @@
   /**
    * Form display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface
+   * @var EntityFormDisplayInterface
    */
   protected $formDisplay;

@@ @@
   /**
    * Module settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $fieldUiListImageStylesSettingsConfig;

@@ @@
   /**
    * Test node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;

@@ @@
   /**
    * Resize image style.
    *
-   * @var \Drupal\image\ImageStyleInterface
+   * @var ImageStyleInterface
    */
   protected $resizeImageStyle;

@@ @@
   /**
    * Resize (width) image style.
    *
-   * @var \Drupal\image\ImageStyleInterface
+   * @var ImageStyleInterface
    */
   protected $resizeWithoutHeightImageStyle;

@@ @@
   /**
    * A user with permission to bypass content access checks.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Field_image field config.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $fieldImageConfig;

@@ @@
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->entityDisplayRepository = $this->container->get('entity_display.repository');
@@ @@
     ]);
     $this->formDisplay->save();

-    $testimage = file_save_data(file_get_contents(__DIR__ . '/test.jpg'), 'public://test.jpg');
+    $testimage = \Drupal::service('file.repository')->writeData(file_get_contents(__DIR__ . '/test.jpg'), 'public://test.jpg');

     $this->node = $this->drupalCreateNode([
       'type' => 'test',
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_ui_list_image_styles_size/tests/src/Functional/Service/ImageSizeServiceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\field_ui_list_image_styles_size\Functional\Service;

+use Drupal\field_ui_list_image_styles_size\Service\ImageSizeService;
 use Drupal\Tests\field_ui_list_image_styles_size\Functional\TestBase;

 /**
@@ @@
   /**
    * Image size service.
    *
-   * @var \Drupal\field_ui_list_image_styles_size\Service\ImageSizeService
+   * @var ImageSizeService
    */
   protected $imageSizeService;

@@ @@
   /**
    * {@inheritDoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->imageSizeService = $this->container->get('field_ui_list_image_styles_size.imagesize');
   }
@@ @@
     $appliedImageStyles = $this->imageSizeService->getAppliedImageStyles('node', 'test', 'field_image');

     $this->assertCount(2, $appliedImageStyles);
-    $this->assertEqual($this->resizeImageStyle->id(), $appliedImageStyles['default']->id());
-    $this->assertEqual($this->resizeWithoutHeightImageStyle->id(), $appliedImageStyles['alternative']->id());
+    $this->assertEquals($this->resizeImageStyle->id(), $appliedImageStyles['default']->id());
+    $this->assertEquals($this->resizeWithoutHeightImageStyle->id(), $appliedImageStyles['alternative']->id());
   }

   /**
@@ @@
     $this->assertCount(2, $entity_view_displays_applied_image_size);

     $this->assertArrayHasKey('default', $entity_view_displays_applied_image_size);
-    $this->assertEqual($this->resizeImageStyle->id(), $entity_view_displays_applied_image_size['default']->imageStyle->id());
-    $this->assertEqual(123, $entity_view_displays_applied_image_size['default']->width);
-    $this->assertEqual(456, $entity_view_displays_applied_image_size['default']->height);
-    $this->assertEqual('123x456', $entity_view_displays_applied_image_size['default']->getDimensionsAsString());
+    $this->assertEquals($this->resizeImageStyle->id(), $entity_view_displays_applied_image_size['default']->imageStyle->id());
+    $this->assertEquals(123, $entity_view_displays_applied_image_size['default']->width);
+    $this->assertEquals(456, $entity_view_displays_applied_image_size['default']->height);
+    $this->assertEquals('123x456', $entity_view_displays_applied_image_size['default']->getDimensionsAsString());

     $this->assertArrayHasKey('alternative', $entity_view_displays_applied_image_size);
-    $this->assertEqual($this->resizeWithoutHeightImageStyle->id(), $entity_view_displays_applied_image_size['alternative']->imageStyle->id());
-    $this->assertEqual(1000, $entity_view_displays_applied_image_size['alternative']->width);
+    $this->assertEquals($this->resizeWithoutHeightImageStyle->id(), $entity_view_displays_applied_image_size['alternative']->imageStyle->id());
+    $this->assertEquals(1000, $entity_view_displays_applied_image_size['alternative']->width);
     $this->assertNull($entity_view_displays_applied_image_size['alternative']->height);
-    $this->assertEqual('1000x?', $entity_view_displays_applied_image_size['alternative']->getDimensionsAsString());
+    $this->assertEquals('1000x?', $entity_view_displays_applied_image_size['alternative']->getDimensionsAsString());
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_ui_list_image_styles_size/tests/src/Functional/FieldWidgetFormAlterTest.php:26

    ---------- begin diff ----------
@@ @@
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');

-    $this->assertEqual('field_image - 123x456', $field_image_label->getText());
+    $this->assertEquals('field_image - 123x456', $field_image_label->getText());

     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ @@
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');

-    $this->assertEqual('field_image', $field_image_label->getText());
+    $this->assertEquals('field_image', $field_image_label->getText());

     $session->elementNotExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ @@
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');

-    $this->assertEqual('field_image - 1000x?', $field_image_label->getText());
+    $this->assertEquals('field_image - 1000x?', $field_image_label->getText());

     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
@@ @@
     $session = $this->assertSession();
     $field_image_label = $session->elementExists('css', '#edit-field-image-0--label');

-    $this->assertEqual('field_image', $field_image_label->getText());
+    $this->assertEquals('field_image', $field_image_label->getText());

     $session->elementExists('css', '#edit-field-image-0-field-ui-list-image-styles-size');
   }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/field_ui_list_image_styles_size/src/Service/ImageSizeServiceInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\field_ui_list_image_styles_size\Service;

+use Drupal\image\ImageStyleInterface;
+use Drupal\field_ui_list_image_styles_size\EntityViewDisplayAppliedImageSize;
 /**
  * Interface ImageSizeServiceInterface.
  *
@@ @@
    * @param string $fieldName
    *   The field name.
    *
-   * @return \Drupal\image\ImageStyleInterface[]|null[]
+   * @return ImageStyleInterface[]|null[]
    *   An array of applied image styles by view mode.
    */
   public function getAppliedImageStyles(string $entityTypeId, string $bundle, string $fieldName): array;
@@ @@
    * @param string $fieldName
    *   The field.
    *
-   * @return \Drupal\field_ui_list_image_styles_size\EntityViewDisplayAppliedImageSize[]
+   * @return EntityViewDisplayAppliedImageSize[]
    *   The applied image sizes per entity view display.
    */
   public function getEntityViewDisplaysAppliedImageSize(string $entityTypeId, string $bundle, string $fieldName): array;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/field_ui_list_image_styles_size/src/Service/ImageSizeService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\field_ui_list_image_styles_size\Service;

+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\field_ui_list_image_styles_size\EntityViewDisplayAppliedImageSize;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Image styles storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;

@@ @@
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;

@@ @@
   /**
    * ImageSizeService constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entityDisplayRepository
+   * @param EntityDisplayRepositoryInterface $entityDisplayRepository
    *   The entity display repository.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, EntityDisplayRepositoryInterface $entityDisplayRepository) {
     $this->entityTypeManager = $entityTypeManager;
@@ @@
       }

       /**
-       * @var \Drupal\image\ImageStyleInterface|null $image_style
+       * @var ImageStyleInterface|null $image_style
        */
       $image_style = $this->imageStyleStorage->load($component['settings']['image_style']);

@@ @@
   /**
    * Determine the image size of an image processed by the given image style.
    *
-   * @param \Drupal\image\ImageStyleInterface $imageStyle
+   * @param ImageStyleInterface $imageStyle
    *   The image style.
    *
    * @return int[]|null[]
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/field_ui_list_image_styles_size/src/EntityViewDisplayAppliedImageSize.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The entity view display this applies to.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   public $entityViewDisplay;

@@ @@
   /**
    * The image style applied.
    *
-   * @var \Drupal\image\ImageStyleInterface|null
+   * @var ImageStyleInterface|null
    */
   public $imageStyle;

@@ @@
   /**
    * EntityViewDisplayAppliedImageSize constructor.
    *
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $entityViewDisplay
+   * @param EntityViewDisplayInterface $entityViewDisplay
    *   The entity view display this applies to.
-   * @param \Drupal\image\ImageStyleInterface|null $imageStyle
+   * @param ImageStyleInterface|null $imageStyle
    *   The image style applied.
    * @param int|null $width
    *   The resulting width.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/field_ui_list_image_styles_size/field_ui_list_image_styles_size.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Field\WidgetBase;
+use Drupal\Core\Field\FieldItemListInterface;
+use Drupal\field_ui_list_image_styles_size\Service\ImageSizeServiceInterface;
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\field_ui\Form\FieldConfigEditForm;
 /**
  * @file
  * Field_ui_list_image_styles_size module file.
@@ @@
   $show_viewmodes_list_below_field = $config->get('show_viewmodes_list_below_field');

   /**
-   * @var \Drupal\Core\Field\WidgetBase $widget
+   * @var WidgetBase $widget
    */
   $widget = $context['widget'];
   $plugin_definition = $widget->getPluginDefinition();
@@ @@
   }

   /**
-   * @var \Drupal\Core\Field\FieldItemListInterface $items
+   * @var FieldItemListInterface $items
    */
   $items = $context['items'];

@@ @@
   $entity = $entity_adapter->getEntity();

   /**
-   * @var \Drupal\field_ui_list_image_styles_size\Service\ImageSizeServiceInterface $image_size_service
+   * @var ImageSizeServiceInterface $image_size_service
    */
   $image_size_service = Drupal::service('field_ui_list_image_styles_size.imagesize');

@@ @@
   }

   /**
-   * @var \Drupal\field\Entity\FieldConfig $field_config
+   * @var FieldConfig $field_config
    */
   $field_config = $items->getFieldDefinition();

@@ @@
  */
 function _field_ui_list_image_styles_size_get_view_mode_label(string $entity_type_id, string $bundle, string $view_mode): string {
   /**
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @var EntityDisplayRepositoryInterface $entity_display_repository
    */
   $entity_display_repository = Drupal::service('entity_display.repository');
   $view_mode_options = $entity_display_repository->getViewModeOptionsByBundle($entity_type_id, $bundle);
@@ @@
  */
 function field_ui_list_image_styles_size_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   /**
-   * @var \Drupal\field_ui\Form\FieldConfigEditForm $form_object
+   * @var FieldConfigEditForm $form_object
    */
   $form_object = $form_state->getFormObject();
   /**
-   * @var \Drupal\field\Entity\FieldConfig $field_config
+   * @var FieldConfig $field_config
    */
   $field_config = $form_object->getEntity();

   /**
-   * @var \Drupal\field_ui_list_image_styles_size\Service\ImageSizeServiceInterface $image_size_service
+   * @var ImageSizeServiceInterface $image_size_service
    */
   $image_size_service = Drupal::service('field_ui_list_image_styles_size.imagesize');

@@ @@
  *
  * @param string $entity_Type
  *   The entity type.
- * @param \Drupal\field\Entity\FieldConfig $field_config
+ * @param FieldConfig $field_config
  *   Field config.
  * @param array $form
  *   The form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function field_ui_list_image_styles_size_form_field_config_edit_form_alter_entity_builder(string $entity_Type, FieldConfig $field_config, array $form, FormStateInterface $form_state): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

