diff --git a/src/EventSubscriber/AjaxResponseSubscriber.php b/src/EventSubscriber/AjaxResponseSubscriber.php
index 2c83a8d..2c89023 100644
--- a/src/EventSubscriber/AjaxResponseSubscriber.php
+++ b/src/EventSubscriber/AjaxResponseSubscriber.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\views_infinite_scroll\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\views\Ajax\ViewAjaxResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -35,10 +35,10 @@ class AjaxResponseSubscriber implements EventSubscriberInterface {
   /**
    * Renders the ajax commands right before preparing the result.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The response event, which contains the possible AjaxResponse object.
    */
-  public function onResponse(\Symfony\Component\HttpKernel\Event\ResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();
 
     // Only alter views ajax responses.
diff --git a/views_infinite_scroll.module b/views_infinite_scroll.module
index 1362c17..f696dbd 100644
--- a/views_infinite_scroll.module
+++ b/views_infinite_scroll.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Pager\PagerManagerInterface;
 /**
  * @file
  * Module file for views_infinite_scroll.
@@ -15,7 +16,7 @@ use Drupal\views_infinite_scroll\Plugin\views\pager\InfiniteScroll;
 function views_infinite_scroll_preprocess_views_infinite_scroll_pager(&$vars) {
   // The important parts we needed lifted wholesale from
   // template_preprocess_views_mini_pager().
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');
   $element = $vars['element'];
   $parameters = $vars['parameters'];
