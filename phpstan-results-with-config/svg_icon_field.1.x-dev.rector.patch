diff --git a/src/Plugin/Field/FieldFormatter/IconFormatterType.php b/src/Plugin/Field/FieldFormatter/IconFormatterType.php
index fc04fa2..aa7d3f9 100644
--- a/src/Plugin/Field/FieldFormatter/IconFormatterType.php
+++ b/src/Plugin/Field/FieldFormatter/IconFormatterType.php
@@ -118,7 +118,9 @@ class IconFormatterType extends FormatterBase implements ContainerFactoryPluginI
 
       $category = $this->static_icons->getCategoriesStructure($item->getValue()['group']);
 
-      $uri = $base_path . drupal_get_path($category['element_type'], $category['element_name']) . '/' . $category['icons_path'] . '/' . $item->getValue()['icon'];
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+      $uri = $base_path . \Drupal::service('extension.path.resolver')->getPath($category['element_type'], $category['element_name']) . '/' . $category['icons_path'] . '/' . $item->getValue()['icon'];
       $elements[$delta] = [
         '#theme' => 'svg_icon_formatter',
         '#uri' => $uri,
diff --git a/src/Plugin/Field/FieldWidget/IconWidgetType.php b/src/Plugin/Field/FieldWidget/IconWidgetType.php
index 0869cb8..b6df71c 100644
--- a/src/Plugin/Field/FieldWidget/IconWidgetType.php
+++ b/src/Plugin/Field/FieldWidget/IconWidgetType.php
@@ -30,7 +30,7 @@ class IconWidgetType extends WidgetBase implements ContainerFactoryPluginInterfa
   /**
    * Var staticIcon.
    *
-   * @var Drupal\svg_icon_field\StaticIcons
+   * @var StaticIcons
    */
   protected $staticIcons;
 
diff --git a/src/StaticIcons.php b/src/StaticIcons.php
index 9f6ff79..3174faa 100644
--- a/src/StaticIcons.php
+++ b/src/StaticIcons.php
@@ -17,23 +17,23 @@ class StaticIcons {
   /**
    * String translation.
    *
-   * @var Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $stringTranslation;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new StaticIcons object.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(TranslationInterface $string_translation, ModuleHandlerInterface $module_handler) {
@@ -51,7 +51,7 @@ class StaticIcons {
    *   Array of categories or single category.
    */
   public function getCategoriesStructure($id = NULL) {
-    $categories = Yaml::decode(file_get_contents(drupal_get_path('module', 'svg_icon_field') . '/icons/icons.categories.yaml'));
+    $categories = Yaml::decode(file_get_contents(\Drupal::service('extension.list.module')->getPath('svg_icon_field') . '/icons/icons.categories.yaml'));
     $this->moduleHandler->invokeAll('svg_icon_field_categories_alter', [&$categories]);
     return (!empty($id)) ? $categories['categories'][$id] : $categories;
   }
@@ -69,7 +69,7 @@ class StaticIcons {
     global $base_path;
 
     if (empty($path)) {
-      $base_dir = scandir(drupal_get_path('module', 'svg_icon_field') . "/icons");
+      $base_dir = scandir(\Drupal::service('extension.list.module')->getPath('svg_icon_field') . "/icons");
       foreach ($base_dir as $sub_dir) {
         if ((substr($sub_dir, 0, 1) === '.')) {
           $path = $sub_dir;
@@ -102,7 +102,9 @@ class StaticIcons {
     $type = $locations['categories'][$category]['element_type'];
     $name = $locations['categories'][$category]['element_name'];
     $path = $locations['categories'][$category]['icons_path'];
-    $path_to_element = drupal_get_path($type, $name);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $path_to_element = \Drupal::service('extension.path.resolver')->getPath($type, $name);
     return $path_to_element . '/' . $path;
   }
 
diff --git a/svg_icon_field.info.yml b/svg_icon_field.info.yml
index 930017b..6489378 100644
--- a/svg_icon_field.info.yml
+++ b/svg_icon_field.info.yml
@@ -1,5 +1,5 @@
 name: 'SVG Icon Field'
 type: module
 description: 'SVG icon field'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Fields
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 8a2e7bc..ba17e50 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\svg_icon_field\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,7 +23,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -36,7 +37,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
