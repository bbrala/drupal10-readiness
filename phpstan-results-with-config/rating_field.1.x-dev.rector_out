modules/contrib/rating_field/rating_field.module
modules/contrib/rating_field/src/Element/Rating.php
modules/contrib/rating_field/src/Plugin/Field/FieldFormatter/RatingFormatter.php
modules/contrib/rating_field/src/Plugin/Field/FieldType/RatingField.php
modules/contrib/rating_field/src/Plugin/Field/FieldType/RatingSettingsTrait.php
modules/contrib/rating_field/src/Plugin/Field/FieldWidget/RatingWidgetBase.php
modules/contrib/rating_field/tests/src/Functional/DefaultWidgetTest.php
modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingCustomOptionTest.php
modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingFormatterTestBase.php
modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingLikertOptionTest.php
modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingNumericOptionTest.php
modules/contrib/rating_field/tests/src/Kernel/RatingTest.php

9 files with changes
====================

1) modules/contrib/rating_field/tests/src/Kernel/RatingTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The test entity.
    *
-   * @var \Drupal\entity_test\Entity\EntityTest
+   * @var EntityTest
    */
   protected $testEntity;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $field_storage = FieldStorageConfig::create([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingNumericOptionTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set storageSetting to option 1, 3 questions and a max.value of 5.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingLikertOptionTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set storageSetting to option 1, 3 questions and a max.value of 5.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingFormatterTestBase.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The entity display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $display;

@@ @@
   /**
    * The list field storage used in the test.
    *
-   * @var \Drupal\field\Entity\FieldStorageConfig
+   * @var FieldStorageConfig
    */
   protected $fieldStorage;

@@ @@
   /**
    * The list field used in the test.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $field;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(['system']);
@@ @@
   /**
    * Renders fields of a given entity with a given display.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity object with attached fields to render.
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+   * @param EntityViewDisplayInterface $display
    *   The display to render the fields in.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/rating_field/tests/src/Kernel/Formatter/RatingCustomOptionTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set storageSetting to custom option.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/rating_field/tests/src/Functional/DefaultWidgetTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\rating_field\Functional;

+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
   /**
    * A user with permission to create pages.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;

@@ @@
   /**
    * EntityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->entityTypeManager = $this->container->get('entity_type.manager');
@@ @@
    */
   public function testRatingWidget() {
     $this->drupalGet('node/add/page');
-    $this->assertFieldByName("test_rating-row-0", 0);
-    $this->assertFieldByName("test_rating-row-0", 1);
-    $this->assertFieldByName("test_rating-row-0", 2);
-    $this->assertFieldByName("test_rating-row-0", 3);
-    $this->assertFieldByName("test_rating-row-1", 0);
-    $this->assertFieldByName("test_rating-row-1", 1);
-    $this->assertFieldByName("test_rating-row-1", 2);
-    $this->assertFieldByName("test_rating-row-1", 3);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 0);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 1);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 2);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 3);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 0);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 1);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 2);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 3);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/rating_field/src/Plugin/Field/FieldWidget/RatingWidgetBase.php:126

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $form
    *   The form element.
@@ @@
   /**
    * Custom function to check the inputs of our rating grid field.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $widget_element
    *   The element array to check, we want the widget index.
@@ @@
   /**
    * Get the values of the field when the form is submitted.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $widget_element
    *   The element array to check, we want the widget index.
@@ @@
    *
    * @param array $user_input
    *   Array of all the inputs of the user from the form_state.
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The field values.
    * @param array $questions
    *   The questions of the field from the element.
@@ @@
   /**
    * Checks if the field is new, has been sumbitted or is being set.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/rating_field/src/Plugin/Field/FieldType/RatingField.php:247

    ---------- begin diff ----------
@@ @@
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form for the form this element belongs to.
    */
   public static function validateAllowedValues(array $element, FormStateInterface $form_state) {
@@ @@
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form for the form this element belongs to.
    */
   public static function validateQuantityValues(array $element, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/rating_field/src/Element/Rating.php:81

    ---------- begin diff ----------
@@ @@
    * @param array $element
    *   An associative array containing the properties and children of the
    *   rating element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

