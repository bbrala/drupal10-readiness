modules/contrib/ephoto_dam/ephoto_dam.module
modules/contrib/ephoto_dam/modules/ephoto_dam_field/ephoto_dam_field.install
modules/contrib/ephoto_dam/modules/ephoto_dam_field/ephoto_dam_field.module
modules/contrib/ephoto_dam/modules/ephoto_dam_field/src/Plugin/Field/FieldFormatter/EphotoDamFieldFormatter.php
modules/contrib/ephoto_dam/modules/ephoto_dam_field/src/Plugin/Field/FieldType/EphotoDamField.php
modules/contrib/ephoto_dam/modules/ephoto_dam_field/src/Plugin/Field/FieldWidget/EphotoDamFieldWidget.php
modules/contrib/ephoto_dam/modules/ephoto_dam_field/src/Plugin/Validation/Constraint/EphotoDamFieldConstraint.php
modules/contrib/ephoto_dam/modules/ephoto_dam_field/src/Plugin/Validation/Constraint/EphotoDamFieldConstraintValidator.php
modules/contrib/ephoto_dam/src/Form/ConfigurationForm.php
modules/contrib/ephoto_dam/src/Plugin/CKEditorPlugin/EphotoDam.php
modules/contrib/ephoto_dam/src/Plugin/Filter/EphotoDam.php

4 files with changes
====================

1) modules/contrib/ephoto_dam/src/Plugin/CKEditorPlugin/EphotoDam.php:39

    ---------- begin diff ----------
@@ @@
      * {@inheritdoc}
      */
     public function getFile() {
-        return drupal_get_path('module', 'ephoto_dam') . '/plugin/plugin.js';
+        return \Drupal::service('extension.list.module')->getPath('ephoto_dam') . '/plugin/plugin.js';
     }
     
     /**
@@ @@
         return [
             'ephoto_dam' => [
                 'label' => $this->t('Select a file from Ephoto Dam'),
-                'image' => drupal_get_path('module', 'ephoto_dam') . '/plugin/icon.png',
+                'image' => \Drupal::service('extension.list.module')->getPath('ephoto_dam') . '/plugin/icon.png',
             ],
         ];
     }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ephoto_dam/modules/ephoto_dam_field/src/Plugin/Field/FieldFormatter/EphotoDamFieldFormatter.php:20

    ---------- begin diff ----------
@@ @@
  */
 class EphotoDamFieldFormatter extends FormatterBase implements ContainerFactoryPluginInterface {
     /**
-     * Constructs a new instance of the plugin.
-     *
-     * @param string $plugin_id
-     *   The plugin_id for the formatter.
-     * @param mixed $plugin_definition
-     *   The plugin implementation definition.
-     * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
-     *   The definition of the field to which the formatter is associated.
-     * @param array $settings
-     *   The formatter settings.
-     * @param string $label
-     *   The formatter label display setting.
-     * @param string $view_mode
-     *   The view mode.
-     * @param array $third_party_settings
-     *   Third party settings.
-     */
-    public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, $settings, $label, $view_mode, $third_party_settings) {
+				 * Constructs a new instance of the plugin.
+				 *
+				 * @param string $plugin_id
+				 *   The plugin_id for the formatter.
+				 * @param mixed $plugin_definition
+				 *   The plugin implementation definition.
+				 * @param FieldDefinitionInterface $field_definition
+				 *   The definition of the field to which the formatter is associated.
+				 * @param array $settings
+				 *   The formatter settings.
+				 * @param string $label
+				 *   The formatter label display setting.
+				 * @param string $view_mode
+				 *   The view mode.
+				 * @param array $third_party_settings
+				 *   Third party settings.
+				 */
+				public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, $settings, $label, $view_mode, $third_party_settings) {
         parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $label, $view_mode, $third_party_settings);
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/ephoto_dam/modules/ephoto_dam_field/ephoto_dam_field.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
 /**
  * Install new fieldType property (identifier).
  */
@@ @@
       $field_storage_definition = $manager->getFieldStorageDefinition($field_name, $entity_type_id);
       $storage = \Drupal::entityTypeManager()->getStorage($entity_type_id);

-      if ($storage instanceof \Drupal\Core\Entity\Sql\SqlContentEntityStorage) {
+      if ($storage instanceof SqlContentEntityStorage) {
         $table_mapping = $storage->getTableMapping([
           $field_name => $field_storage_definition,
         ]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


4) modules/contrib/ephoto_dam/ephoto_dam.module:13

    ---------- begin diff ----------
@@ @@
  * Hook : implements hook_ckeditor_css_alter().
  */
 function ephoto_dam_ckeditor_css_alter(array &$css, Editor $editor) {
-    $css[] = drupal_get_path('module', 'ephoto_dam') . '/plugin/plugin.css';
+    $css[] = \Drupal::service('extension.list.module')->getPath('ephoto_dam') . '/plugin/plugin.css';
 }

 /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

