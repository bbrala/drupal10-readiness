modules/contrib/tmgmt_yandex_api/src/Plugin/tmgmt/Translator/YandexTranslator.php
modules/contrib/tmgmt_yandex_api/src/Tests/YandexTest.php
modules/contrib/tmgmt_yandex_api/src/YandexTranslatorUi.php
modules/contrib/tmgmt_yandex_api/tmgmt_yandex_test/src/Controller/YandexTranslatorTestController.php

2 files with changes
====================

1) modules/contrib/tmgmt_yandex_api/src/YandexTranslatorUi.php:5

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tmgmt_yandex_api;

+use Drupal\tmgmt\TranslatorInterface;
 use Drupal\tmgmt\TranslatorPluginUiBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
     $form = parent::buildConfigurationForm($form, $form_state);

-    /** @var \Drupal\tmgmt\TranslatorInterface $translator */
+    /** @var TranslatorInterface $translator */
     $translator = $form_state->getFormObject()->getEntity();
     $register_app = 'https://tech.yandex.com/translate/';
     $form['api_key'] = array(
@@ @@
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $form_state) {
     parent::validateConfigurationForm($form, $form_state);
-    /** @var \Drupal\tmgmt\TranslatorInterface $translator */
+    /** @var TranslatorInterface $translator */
     $translator = $form_state->getFormObject()->getEntity();
     $supported_remote_languages = $translator->getPlugin()
       ->getSupportedRemoteLanguages($translator);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/tmgmt_yandex_api/src/Plugin/tmgmt/Translator/YandexTranslator.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tmgmt_yandex_api\Plugin\tmgmt\Translator;

+use Psr\Http\Message\ResponseInterface;
+use Drupal\tmgmt\Entity\Job;
+use Drupal\tmgmt\Entity\JobItem;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\tmgmt\ContinuousTranslatorInterface;
@@ @@
   /**
    * Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;

@@ @@
   /**
    * Constructs a LocalActionBase object.
    *
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   The Guzzle HTTP client.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ @@
                ->filterTranslatable($job->getData()) as $value) {
       // If one of the texts in this job exceeds the max character count
       // the job can't be translated.
-      if (Unicode::strlen($value['#text']) > $this->maxCharacters) {
+      if (mb_strlen($value['#text']) > $this->maxCharacters) {
         return TranslatableResult::no(t('The length of the job exceeds tha max character count (@count).', ['@count' => $this->maxCharacters]));
       }
     }
@@ @@
    * @param $headers
    *   (Optional) Array of additional HTTP headers.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   The HTTP response.
    */
   protected function doRequest(Translator $translator, $path, array $query = [], array $headers = []) {
@@ @@
    * {@inheritdoc}
    */
   public function requestJobItemsTranslation(array $job_items) {
-    /** @var \Drupal\tmgmt\Entity\Job $job */
+    /** @var Job $job */
     $job = reset($job_items)->getJob();
-    /** @var \Drupal\tmgmt\Entity\JobItem $job_item */
+    /** @var JobItem $job_item */
     foreach ($job_items as $job_item) {
       if ($job->isContinuous()) {
         $job_item->active();
    ----------- end diff -----------

Applied rules:
 * UnicodeStrlenRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/tmgmt_yandex_api/src/Tests/YandexTest.php" file, due to:
                                                                                
         "Analyze error: "Class Drupal\simpletest\WebTestBase not found.". Include
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

