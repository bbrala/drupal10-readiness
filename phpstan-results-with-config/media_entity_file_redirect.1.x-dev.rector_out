modules/contrib/media_entity_file_redirect/media_entity_file_redirect.module
modules/contrib/media_entity_file_redirect/src/Controller/MediaEntityFileRedirectController.php
modules/contrib/media_entity_file_redirect/src/Plugin/Linkit/Matcher/MediaEntityFileRedirectMatcher.php
modules/contrib/media_entity_file_redirect/src/Plugin/Linkit/Substitution/MediaFileRedirect.php

2 files with changes
====================

1) modules/contrib/media_entity_file_redirect/src/Controller/MediaEntityFileRedirectController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_file_redirect\Controller;

+use Drupal\media\Entity\MediaType;
+use Drupal\file\FileInterface;
 use Drupal\Core\Cache\CacheableRedirectResponse;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
@@ @@
    * Returns a redirect to file source associated with passed in media entity.
    */
   public function redirectToFile(MediaInterface $media) {
-    /** @var \Drupal\media\Entity\MediaType $mediaType */
+    /** @var MediaType $mediaType */
     $mediaType = $this
       ->entityTypeManager
       ->getStorage('media_type')
@@ @@
       // Now load the file and return a redirect response to the file URL.
       $fid = $media->getSource()->getSourceFieldValue($media);
       if ($fid) {
-        /** @var \Drupal\file\FileInterface $file */
+        /** @var FileInterface $file */
         $file = $this->entityTypeManager->getStorage('file')->load($fid);
         if ($file) {

@@ @@
           // See https://drupal.stackexchange.com/questions/273579
           $context = new RenderContext();
           $url = \Drupal::service('renderer')->executeInRenderContext($context, function () use ($file) {
-            return file_create_url($file->getFileUri());
+            return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
           });

           $response = new CacheableRedirectResponse($url);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/media_entity_file_redirect/media_entity_file_redirect.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\media\Entity\MediaType;
 /**
  * @file
  * Media Entity File Redirect module.
@@ @@
  * Adds crop configuration fields to media form.
  */
 function media_entity_file_redirect_form_media_type_edit_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\media\Entity\MediaType $entityType */
+  /** @var MediaType $entityType */
   $entityType = $form_state->getFormObject()->getEntity();
   $mediaSource = $entityType->getSource();
   if ($mediaSource instanceof File) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/media_entity_file_redirect/src/Plugin/Linkit/Substitutio
         n/MediaFileRedirect.php" file, due to:                                 
         "Analyze error: "Class Drupal\linkit\SubstitutionInterface not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/media_entity_file_redirect/src/Plugin/Linkit/Matcher/Med
         iaEntityFileRedirectMatcher.php" file, due to:                         
         "Analyze error: "Class Drupal\linkit\Plugin\Linkit\Matcher\EntityMatcher
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

