diff --git a/lightning_api.install b/lightning_api.install
index 40f1e26..8575345 100644
--- a/lightning_api.install
+++ b/lightning_api.install
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\path_alias\AliasRepository;
+use Drupal\Core\Extension\ModuleInstallerInterface;
+use Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface;
 /**
  * @file
  * Contains installation and update routines for Lightning API.
@@ -21,7 +24,7 @@ function lightning_api_install() {
   // If the openapi_ui_redoc and jsonapi modules are installed, give the API
   // documentation a nice path alias.
   if ($module_handler->moduleExists('openapi_ui_redoc') && $module_handler->moduleExists('jsonapi')) {
-    /** @var \Drupal\path_alias\AliasRepository $alias_storage */
+    /** @var AliasRepository $alias_storage */
     $alias_storage = \Drupal::service('path_alias.repository');
 
     $path = $alias_storage->lookupByAlias(
@@ -72,7 +75,7 @@ function lightning_api_update_8002() {
  * @see openapi_update_8100
  */
 function lightning_api_update_8300() {
-  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
+  /** @var ModuleInstallerInterface $module_installer */
   $module_installer = \Drupal::service('module_installer');
   $uninstalled = $module_installer->uninstall([
     'openapi_redoc',
@@ -133,7 +136,7 @@ function lightning_api_update_8302() {
 function lightning_api_update_8401() {
   Drupal::service('module_installer')->uninstall(['simple_oauth_extras']);
 
-  /** @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $schema */
+  /** @var EntityLastInstalledSchemaRepositoryInterface $schema */
   $schema = Drupal::service('entity.last_installed_schema.repository');
   $entity_updater = Drupal::entityDefinitionUpdateManager();
   $installed_storages = $schema->getLastInstalledFieldStorageDefinitions('consumer');
diff --git a/lightning_api.module b/lightning_api.module
index c6de2a3..9dd7fca 100644
--- a/lightning_api.module
+++ b/lightning_api.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\jsonapi\ResourceType\ResourceType;
 /**
  * @file
  * Contains hook implementations for Lightning API.
@@ -46,10 +47,10 @@ function lightning_api_view_presave(ViewEntityInterface $view) {
 /**
  * Determines the URL of the JSON API representation of an entity.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity.
  *
- * @return \Drupal\Core\Url
+ * @return Url
  *   The URL to the JSON API representation of the entity.
  */
 function lightning_api_entity_json(EntityInterface $entity) {
@@ -57,7 +58,7 @@ function lightning_api_entity_json(EntityInterface $entity) {
 
   $uuid = $entity->uuid();
 
-  /** @var \Drupal\jsonapi\ResourceType\ResourceType $resource_type */
+  /** @var ResourceType $resource_type */
   $resource_type = \Drupal::service('jsonapi.resource_type.repository')
     ->get(
       $entity->getEntityTypeId(),
diff --git a/src/Form/OAuthKeyForm.php b/src/Form/OAuthKeyForm.php
index 6816ee5..bc27f11 100644
--- a/src/Form/OAuthKeyForm.php
+++ b/src/Form/OAuthKeyForm.php
@@ -18,18 +18,18 @@ class OAuthKeyForm extends ConfigFormBase {
   /**
    * The OAuth key service.
    *
-   * @var \Drupal\lightning_api\OAuthKey
+   * @var OAuthKey
    */
   protected $key;
 
   /**
    * OAuthKeyForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\lightning_api\OAuthKey $key
+   * @param OAuthKey $key
    *   The OAuth keys service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The string translation service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, OAuthKey $key, TranslationInterface $translation) {
@@ -68,7 +68,7 @@ class OAuthKeyForm extends ConfigFormBase {
    *
    * @param \Exception $e
    *   The caught exception.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current form state.
    */
   private function onException(\Exception $e, FormStateInterface $form_state) {
@@ -136,7 +136,7 @@ class OAuthKeyForm extends ConfigFormBase {
    *
    * @param array $element
    *   The form element being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current form state.
    */
   public function validateDestinationExists(array &$element, FormStateInterface $form_state) {
@@ -155,7 +155,7 @@ class OAuthKeyForm extends ConfigFormBase {
    *
    * @param array $element
    *   The form element being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current form state.
    */
   public function validateKeyFileName(array &$element, FormStateInterface $form_state) {
diff --git a/src/OAuthKey.php b/src/OAuthKey.php
index ddc3f03..a1a4782 100644
--- a/src/OAuthKey.php
+++ b/src/OAuthKey.php
@@ -14,23 +14,23 @@ class OAuthKey {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * OAuthKey constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
@@ -113,7 +113,7 @@ class OAuthKey {
    * @return string[]
    *   Returns the private and public key components, in that order.
    *
-   * @throws \Drupal\lightning_api\Exception\KeyGenerationException
+   * @throws KeyGenerationException
    *   If an error occurs during key generation or storage.
    */
   public static function generate(array $options = []) {
diff --git a/src/RequestSubscriber.php b/src/RequestSubscriber.php
index 300cdcb..9b90470 100644
--- a/src/RequestSubscriber.php
+++ b/src/RequestSubscriber.php
@@ -21,25 +21,25 @@ class RequestSubscriber implements EventSubscriberInterface {
   /**
    * The current route match service.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * The OAuth key service.
    *
-   * @var \Drupal\lightning_api\OAuthKey
+   * @var OAuthKey
    */
   protected $key;
 
   /**
    * RequestSubscriber constructor.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match service.
-   * @param \Drupal\lightning_api\OAuthKey $key
+   * @param OAuthKey $key
    *   The OAuth keys service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The string translation service.
    */
   public function __construct(RouteMatchInterface $route_match, OAuthKey $key, TranslationInterface $translation) {
diff --git a/tests/src/Functional/ApiTest.php b/tests/src/Functional/ApiTest.php
index d953845..ed08b99 100644
--- a/tests/src/Functional/ApiTest.php
+++ b/tests/src/Functional/ApiTest.php
@@ -32,7 +32,7 @@ class ApiTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Allow writing via JSON:API.
@@ -306,7 +306,7 @@ class ApiTest extends BrowserTestBase {
    * @param array $data
    *   (optional) Additional JSON data to send with the request.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   The response from the request.
    */
   private function request($endpoint, $method = 'get', $token = NULL, array $data = NULL) {
@@ -330,7 +330,7 @@ class ApiTest extends BrowserTestBase {
   /**
    * Decodes a JSON response from the server.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   The response object.
    *
    * @return mixed
diff --git a/tests/src/Functional/BasicUsageTest.php b/tests/src/Functional/BasicUsageTest.php
index d41a721..2bc5e5d 100644
--- a/tests/src/Functional/BasicUsageTest.php
+++ b/tests/src/Functional/BasicUsageTest.php
@@ -25,7 +25,7 @@ class BasicUsageTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->config('lightning_api.settings')
