modules/contrib/funnelback/funnelback.install
modules/contrib/funnelback/funnelback.module
modules/contrib/funnelback/src/Controller/FunnelbackPageController.php
modules/contrib/funnelback/src/Form/FunnelbackSettingsForm.php
modules/contrib/funnelback/src/Form/SearchForm.php
modules/contrib/funnelback/src/Funnelback.php
modules/contrib/funnelback/src/FunnelbackClient.php
modules/contrib/funnelback/src/FunnelbackQueryString.php
modules/contrib/funnelback/src/Plugin/Block/ContextualNavigationBlock.php
modules/contrib/funnelback/src/Plugin/Block/FacetBlock.php
modules/contrib/funnelback/src/Plugin/Block/SearchBlock.php
modules/contrib/funnelback/src/Twig/Extention/FunnelbackTwigExtension.php
modules/contrib/funnelback/tests/src/Unit/FunnelbackTest.php

9 files with changes
====================

1) modules/contrib/funnelback/tests/src/Unit/FunnelbackTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

-    $requestStack = $this->getMockBuilder(RequestStack::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $requestStack = $this->createMock(RequestStack::class);

-    $configFactory = $this->getMockBuilder(ConfigFactoryInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $configFactory = $this->createMock(ConfigFactoryInterface::class);
     $configFactory->expects($this->any())
       ->method('get')
       ->willReturn(NULL);

-    $moduleHandler = $this->getMockBuilder(ModuleHandlerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $moduleHandler = $this->createMock(ModuleHandlerInterface::class);

-    $funnelbackClient = $this->getMockBuilder(FunnelbackClient::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $funnelbackClient = $this->createMock(FunnelbackClient::class);

     $funnelbackQuerystring = new FunnelbackQueryString();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/funnelback/src/Plugin/Block/SearchBlock.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The FormBuilder object.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, FormBuilderInterface $form_builder) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/funnelback/src/Plugin/Block/FacetBlock.php:22

    ---------- begin diff ----------
@@ @@
 class FacetBlock extends BlockBase implements ContainerFactoryPluginInterface {

   /**
-   * @var \Drupal\funnelback\Funnelback
+   * @var Funnelback
    */
   protected $funnelback;

   /**
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;

@@ @@
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\funnelback\Funnelback $funnelback
+   * @param Funnelback $funnelback
    * @param RequestStack $request
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, Funnelback $funnelback, RequestStack $request) {
@@ @@
    * @param string $plugin_id
    * @param mixed $plugin_definition
    *
-   * @return \Drupal\Core\Plugin\ContainerFactoryPluginInterface|\Drupal\funnelback\Plugin\Block\ContextualNavigationBlock
+   * @return ContainerFactoryPluginInterface|ContextualNavigationBlock
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/funnelback/src/Plugin/Block/ContextualNavigationBlock.php:22

    ---------- begin diff ----------
@@ @@
 class ContextualNavigationBlock extends BlockBase implements ContainerFactoryPluginInterface {

   /**
-   * @var \Drupal\funnelback\Funnelback
+   * @var Funnelback
    */
   protected $funnelback;

   /**
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;

@@ @@
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\funnelback\Funnelback $funnelback
+   * @param Funnelback $funnelback
    * @param RequestStack $request
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, Funnelback $funnelback, RequestStack $request) {
@@ @@
   }

   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
    *
-   * @return \Drupal\Core\Plugin\ContainerFactoryPluginInterface|\Drupal\funnelback\Plugin\Block\ContextualNavigationBlock
+   * @return ContainerFactoryPluginInterface|\Drupal\funnelback\Plugin\Block\ContextualNavigationBlock
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/funnelback/src/FunnelbackClient.php:18

    ---------- begin diff ----------
@@ @@
   protected $debugVerbose = 'verbose';

   /**
-   * @var \Drupal\funnelback\FunnelbackQueryString
+   * @var FunnelbackQueryString
    */
   protected $funnelbackQueryString;

   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

   /**
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $logger;

@@ @@
   /**
    * FunnelbackClient constructor.
    *
-   * @param \Drupal\funnelback\FunnelbackQueryString $funnelbackQueryString
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger
+   * @param FunnelbackQueryString $funnelbackQueryString
+   * @param ConfigFactoryInterface $configFactory
+   * @param LoggerChannelFactory $logger
    */
   public function __construct(FunnelbackQueryString $funnelbackQueryString, ConfigFactoryInterface $configFactory, LoggerChannelFactory $logger) {
     $this->funnelbackQueryString = $funnelbackQueryString;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/funnelback/src/Funnelback.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\funnelback;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 USE Drupal\Core\Logger\RfcLogLevel;
@@ @@
   protected $apiPath = 's/search.json';

   /**
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

   /**
-   * @var \Drupal\funnelback\FunnelbackQueryString
+   * @var FunnelbackQueryString
    */
   protected $funnelbackQuerystring;

   /**
-   * @var \Drupal\funnelback\FunnelbackClient
+   * @var FunnelbackClient
    */
   protected $funnebackClient;

   /**
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/funnelback/src/Form/SearchForm.php:14

    ---------- begin diff ----------
@@ @@
 class SearchForm extends FormBase {

   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * SearchForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
     $this->configFactory = $configFactory;
@@ @@
   }

   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *
-   * @return \Drupal\Core\Form\FormBase|\Drupal\funnelback\Form\SearchForm
+   * @return FormBase|\Drupal\funnelback\Form\SearchForm
    */
   public static function create(ContainerInterface $container) {
     return new static(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/funnelback/src/Form/FunnelbackSettingsForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a FunnelbackSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/funnelback/src/Controller/FunnelbackPageController.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;

   /**
-   * @var \Drupal\funnelback\Funnelback
+   * @var Funnelback
    */
   protected $funnelback;

   /**
-   * @var \Drupal\funnelback\FunnelbackQueryString
+   * @var FunnelbackQueryString
    */
   protected $funnelbackQueryString;

   /**
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;

   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

