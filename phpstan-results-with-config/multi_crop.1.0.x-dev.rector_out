modules/contrib/multi_crop/modules/multi_crop_focal_point/src/Plugin/MultiCrop/FocalPoint.php
modules/contrib/multi_crop/modules/multi_crop_image_widget_crop/src/Plugin/MultiCrop/ImageWidgetCrop.php
modules/contrib/multi_crop/multi_crop.module
modules/contrib/multi_crop/src/Annotation/MultiCrop.php
modules/contrib/multi_crop/src/MultiCropInterface.php
modules/contrib/multi_crop/src/MultiCropPluginBase.php
modules/contrib/multi_crop/src/MultiCropPluginManager.php
modules/contrib/multi_crop/src/Plugin/Field/FieldFormatter/MulticropFormatter.php

4 files with changes
====================

1) modules/contrib/multi_crop/src/Plugin/Field/FieldFormatter/MulticropFormatter.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The multicrop plugin manager.
    *
-   * @var \Drupal\multi_crop\MultiCropPluginManager
+   * @var MultiCropPluginManager
    */
   private $multiCropManager;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The image style storage.
-   * @param \Drupal\Core\File\FileUrlGeneratorInterface $file_url_generator
+   * @param FileUrlGeneratorInterface $file_url_generator
    *   The file URL generator.
-   * @param \Drupal\multi_crop\MultiCropPluginManager $multiCropManager
+   * @param MultiCropPluginManager $multiCropManager
    *   The multicrop plugin manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage, FileUrlGeneratorInterface $file_url_generator = NULL, MultiCropPluginManager $multiCropManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/multi_crop/src/MultiCropPluginManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/multi_crop/src/MultiCropPluginBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\multi_crop;

+use Drupal\crop\Entity\Crop;
+use Drupal\file\FileInterface;
 use Drupal\Component\Plugin\PluginBase;

 /**
@@ @@
    * @param string $new_uri
    *   Uri of the "copy image".
    *
-   * @return \Drupal\crop\Entity\Crop
+   * @return Crop
    *   Return the crop entity.
    */
   protected function retrievCrop($crop_type, $old_uri, $new_uri) {
@@ @@
     // Try to load crop from source image.
     if ($crop == NULL) {

-      /** @var \Drupal\file\FileInterface[] $files */
+      /** @var FileInterface[] $files */
       $files = \Drupal::entityTypeManager()
         ->getStorage('file')
         ->loadByProperties(['uri' => $old_uri]);
-      /** @var \Drupal\file\FileInterface|null $file */
+      /** @var FileInterface|null $file */
       $file = reset($files) ?: NULL;

       $values = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/multi_crop/src/Annotation/MultiCrop.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\multi_crop\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 4 files have been changed by Rector                                       

