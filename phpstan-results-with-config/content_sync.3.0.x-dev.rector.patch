diff --git a/content_sync.module b/content_sync.module
index 012fcc0..9ec1ca7 100755
--- a/content_sync.module
+++ b/content_sync.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\content_sync\ContentSyncHelpManagerInterface;
 /**
  * @file
  * Allows site administrators to modify content.
@@ -23,7 +24,7 @@ function content_sync_help($route_name, RouteMatchInterface $route_match) {
     return NULL;
   }
 
-  /** @var \Drupal\content_sync\ContentSyncHelpManagerInterface $help_manager */
+  /** @var ContentSyncHelpManagerInterface $help_manager */
   $help_manager = \Drupal::service('content_sync.help_manager');
   if ($route_name == 'help.page.content_sync') {
     $build = $help_manager->buildIndex();
@@ -50,19 +51,19 @@ function content_sync_help($route_name, RouteMatchInterface $route_match) {
       $output .= '<h3>' . t('Uses') . '</h3>';
       $output .= '<dl>';
       $output .= '<dt>' . t('Exporting the full content') . '</dt>';
-      $output .= '<dd>' . t('You can create and download an archive consisting of all your site\'s content exported as <em>*.yml</em> files on the <a href=":url">Export</a> page.', [':url' => \Drupal::url('content.export_full')]) . '</dd>';
+      $output .= '<dd>' . t('You can create and download an archive consisting of all your site\'s content exported as <em>*.yml</em> files on the <a href=":url">Export</a> page.', [':url' => Url::fromRoute('content.export_full')->toString()]) . '</dd>';
       $output .= '<dt>' . t('Importing a full content') . '</dt>';
-      $output .= '<dd>' . t('You can upload a full site content from an archive file on the <a href=":url">Import</a> page. When importing data from a different environment, the site and import files must have matching configuration values for UUID in the <em>system.site</em> configuration item. That means that your other environments should initially be set up as clones of the target site.', [':url' => \Drupal::url('content.import_full')]) . '</dd>';
+      $output .= '<dd>' . t('You can upload a full site content from an archive file on the <a href=":url">Import</a> page. When importing data from a different environment, the site and import files must have matching configuration values for UUID in the <em>system.site</em> configuration item. That means that your other environments should initially be set up as clones of the target site.', [':url' => Url::fromRoute('content.import_full')->toString()]) . '</dd>';
       $output .= '<dt>' . t('Exporting a single content item') . '</dt>';
-      $output .= '<dd>' . t('You can export a single content item by selecting a <em>Content type</em> and <em>Content name</em> on the <a href=":single-export">Single export</a> page. The content and its corresponding <em>*.yml file name</em> are then displayed on the page for you to copy.', [':single-export' => \Drupal::url('content.export_single')]) . '</dd>';
+      $output .= '<dd>' . t('You can export a single content item by selecting a <em>Content type</em> and <em>Content name</em> on the <a href=":single-export">Single export</a> page. The content and its corresponding <em>*.yml file name</em> are then displayed on the page for you to copy.', [':single-export' => Url::fromRoute('content.export_single')->toString()]) . '</dd>';
       $output .= '<dt>' . t('Importing a single content item') . '</dt>';
-      $output .= '<dd>' . t('You can import a single content item by pasting it in YAML format into the form on the <a href=":single-import">Single import</a> page.', [':single-import' => \Drupal::url('content.import_single')]) . '</dd>';
+      $output .= '<dd>' . t('You can import a single content item by pasting it in YAML format into the form on the <a href=":single-import">Single import</a> page.', [':single-import' => Url::fromRoute('content.import_single')->toString()]) . '</dd>';
       $output .= '<dt>' . t('Synchronizing content') . '</dt>';
-      $output .= '<dd>' . t('You can review differences between the active content and an imported content archive on the <a href=":synchronize">Synchronize</a> page to ensure that the changes are as expected, before finalizing the import. The <a href=":synchronize">Synchronize</a>Synchronize</a> page also shows content items that would be added or removed.', [':synchronize' => \Drupal::url('content.sync')]) . '</dd>';
+      $output .= '<dd>' . t('You can review differences between the active content and an imported content archive on the <a href=":synchronize">Synchronize</a> page to ensure that the changes are as expected, before finalizing the import. The <a href=":synchronize">Synchronize</a>Synchronize</a> page also shows content items that would be added or removed.', [':synchronize' => Url::fromRoute('content.sync')->toString()]) . '</dd>';
       $output .= '<dt>' . t('Content logs') . '</dt>';
-      $output .= '<dd>' . t('You can view a chronological list of recorded events containing errors, warnings and operational information of the content import, export and synchronization on the <a href=":content-logs">Logs</a> page.', [':content-logs' => \Drupal::url('content.overview')]) . '</dd>';
+      $output .= '<dd>' . t('You can view a chronological list of recorded events containing errors, warnings and operational information of the content import, export and synchronization on the <a href=":content-logs">Logs</a> page.', [':content-logs' => Url::fromRoute('content.overview')->toString()]) . '</dd>';
       $output .= '<dt>' . t('Content synchronization settings') . '</dt>';
-      $output .= '<dd>' . t('You can set specific settings for the content synchronization behavior as ignore the UUID Site validation and more on the <a href=":settings">Settings</a> page.', [':settings' => \Drupal::url('content.settings')]) . '</dd>';
+      $output .= '<dd>' . t('You can set specific settings for the content synchronization behavior as ignore the UUID Site validation and more on the <a href=":settings">Settings</a> page.', [':settings' => Url::fromRoute('content.settings')->toString()]) . '</dd>';
       $output .= '</dl>';
 
       //return $output;
@@ -258,4 +259,4 @@ function content_sync_entity_delete(EntityInterface $entity) {
     // Invalidate the CS Cache of the entity.
     $cache = \Drupal::cache('content')->invalidate($entity_type.".".$entity_bundle.":".$name);
   }
-}
\ No newline at end of file
+}
diff --git a/includes/content_sync.theme.inc b/includes/content_sync.theme.inc
index cfd44b5..9b30014 100644
--- a/includes/content_sync.theme.inc
+++ b/includes/content_sync.theme.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\content_sync\ContentSyncHelpManagerInterface;
 /**
  * @file
  * Preprocessors and helper functions to make theming easier.
@@ -28,7 +29,7 @@ use Drupal\webform\Utility\WebformElementHelper;
  *   - content: Help content.
  */
 function template_preprocess_content_sync_help(array &$variables) {
-  /** @var \Drupal\content_sync\ContentSyncHelpManagerInterface $help_manager */
+  /** @var ContentSyncHelpManagerInterface $help_manager */
   $help_manager = \Drupal::service('content_sync.help_manager');
 
   $help_info = $variables['info'];
@@ -87,4 +88,4 @@ function template_preprocess_content_sync_message(array &$variables) {
   if (isset($element['#closed'])) {
     $variables['closed'] = $element['#closed'];
   }
-}
\ No newline at end of file
+}
diff --git a/src/Annotation/SyncNormalizerDecorator.php b/src/Annotation/SyncNormalizerDecorator.php
index ecde521..83dd6a8 100755
--- a/src/Annotation/SyncNormalizerDecorator.php
+++ b/src/Annotation/SyncNormalizerDecorator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_sync\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class SyncNormalizerDecorator extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Commands/ContentSyncCommands.php b/src/Commands/ContentSyncCommands.php
index ab16f44..6a2ac92 100644
--- a/src/Commands/ContentSyncCommands.php
+++ b/src/Commands/ContentSyncCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_sync\Commands;
 
+use Drupal\Core\TempStore\Lock;
 use Drupal\content_sync\Content\ContentStorageComparer;
 use Drupal\content_sync\ContentSyncManagerInterface;
 use Drupal\content_sync\Exporter\ContentExporterInterface;
@@ -45,91 +46,91 @@ class ContentSyncCommands extends DrushCommands {
   /**
    * The configuration manager.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface;
+   * @var ConfigManagerInterface ;
    */
   protected $configManager;
 
   /**
    * The content storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $contentStorage;
 
   /**
    * The content sync storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $contentStorageSync;
 
   /**
    * The content sync manager.
    *
-   * @var \Drupal\content_sync\ContentSyncManagerInterface
+   * @var ContentSyncManagerInterface
    */
   protected $contentSyncManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The content exporter.
    *
-   * @var \Drupal\content_sync\Exporter\ContentExporterInterface
+   * @var ContentExporterInterface
    */
   protected $contentExporter;
 
   /**
    * The lock information for this configuration.
    *
-   * @var \Drupal\Core\TempStore\Lock|null
+   * @var Lock|null
    */
   protected $lock;
 
   /**
    * The typed config manager.
    *
-   * @var \Drupal\Core\Config\TypedConfigManagerInterface
+   * @var TypedConfigManagerInterface
    */
   protected $typedConfigManager;
 
   /**
    * The module installer.
    *
-   * @var \Drupal\Core\Extension\ModuleInstallerInterface
+   * @var ModuleInstallerInterface
    */
   protected $moduleInstaller;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $stringTranslation;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Gets the configManager.
    *
-   * @return \Drupal\Core\Config\ConfigManagerInterface
+   * @return ConfigManagerInterface
    *   The configManager.
    */
   public function getConfigManager() {
@@ -139,7 +140,7 @@ class ContentSyncCommands extends DrushCommands {
   /**
    * Gets the contentStorage.
    *
-   * @return \Drupal\Core\Config\StorageInterface
+   * @return StorageInterface
    *   The contentStorage.
    */
   public function getContentStorage() {
@@ -149,7 +150,7 @@ class ContentSyncCommands extends DrushCommands {
   /**
    * Gets the contentStorageSync.
    *
-   * @return \Drupal\Core\Config\StorageInterface
+   * @return StorageInterface
    *   The contentStorageSync.
    */
   public function getContentStorageSync() {
@@ -180,31 +181,31 @@ class ContentSyncCommands extends DrushCommands {
   /**
    * ContentSyncCommands constructor.
    *
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The configManager.
-   * @param \Drupal\Core\Config\StorageInterface $contentStorage
+   * @param StorageInterface $contentStorage
    *   The contentStorage.
-   * @param \Drupal\Core\Config\StorageInterface $contentStorageSync
+   * @param StorageInterface $contentStorageSync
    *   The contentStorageSync.
-   * @param \Drupal\content_sync\ContentSyncManagerInterface $contentSyncManager
+   * @param ContentSyncManagerInterface $contentSyncManager
    *   The contentSyncManager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entityTypeManager.
-   * @param \Drupal\content_sync\Exporter\ContentExporterInterface $content_exporter
+   * @param ContentExporterInterface $content_exporter
    *   The contentExporter.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The moduleHandler.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The eventDispatcher.
-   * @param \Drupal\Core\Lock\LockBackendInterface $lock
+   * @param LockBackendInterface $lock
    *   The lock.
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typedConfigManager
+   * @param TypedConfigManagerInterface $typedConfigManager
    *   The typedConfigManager.
-   * @param \Drupal\Core\Extension\ModuleInstallerInterface $moduleInstaller
+   * @param ModuleInstallerInterface $moduleInstaller
    *   The moduleInstaller.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler
+   * @param ThemeHandlerInterface $themeHandler
    *   The themeHandler.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The stringTranslation.
    */
   public function __construct(ConfigManagerInterface $configManager, StorageInterface $contentStorage, StorageInterface $contentStorageSync, ContentSyncManagerInterface $contentSyncManager, EntityTypeManagerInterface $entity_type_manager, ContentExporterInterface $content_exporter, ModuleHandlerInterface $moduleHandler, EventDispatcherInterface $eventDispatcher, LockBackendInterface $lock, TypedConfigManagerInterface $typedConfigManager, ModuleInstallerInterface $moduleInstaller, ThemeHandlerInterface $themeHandler, TranslationInterface $stringTranslation) {
@@ -463,12 +464,12 @@ class ContentSyncCommands extends DrushCommands {
    *
    * @param array $content_changes
    *   An array of changes keyed by collection.
-   * @param \Symfony\Component\Console\Output\OutputInterface $output
+   * @param OutputInterface $output
    *   The output.
    * @param bool $use_color
    *   If it should use color.
    *
-   * @return \Symfony\Component\Console\Helper\Table
+   * @return Table
    *   A Symfony table object.
    */
   public static function contentChangesTable(array $content_changes, OutputInterface $output, $use_color = TRUE) {
diff --git a/src/Content/ContentFileStorageFactory.php b/src/Content/ContentFileStorageFactory.php
index f32a340..9049bd8 100644
--- a/src/Content/ContentFileStorageFactory.php
+++ b/src/Content/ContentFileStorageFactory.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_sync\Content;
 
+use Drupal\Core\Config\FileStorage;
 /**
  * Provides a factory for creating content file storage objects.
  */
@@ -10,7 +11,7 @@ class ContentFileStorageFactory {
   /**
    * Returns a FileStorage object working with the active content directory.
    *
-   * @return \Drupal\Core\Config\FileStorage FileStorage
+   * @return FileStorage FileStorage
    *
    * @deprecated in Drupal 8.0.x and will be removed before 9.0.0. Drupal core
    * no longer creates an active directory.
@@ -24,7 +25,7 @@ class ContentFileStorageFactory {
   /**
    * Returns a FileStorage object working with the sync content directory.
    *
-   * @return \Drupal\Core\Config\FileStorage FileStorage
+   * @return FileStorage FileStorage
    */
   public static function getSync() {
     // Load the class from a different namespace.
diff --git a/src/ContentSyncHelpManager.php b/src/ContentSyncHelpManager.php
index fe2e9f8..20673fa 100644
--- a/src/ContentSyncHelpManager.php
+++ b/src/ContentSyncHelpManager.php
@@ -38,35 +38,35 @@ class ContentSyncHelpManager implements ContentSyncHelpManagerInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The configuration object factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
@@ -74,15 +74,15 @@ class ContentSyncHelpManager implements ContentSyncHelpManagerInterface {
   /**
    * Constructs a ContentSyncHelpManager object.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration object factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
    */
   public function __construct(AccountInterface $current_user, ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, StateInterface $state, PathMatcherInterface $path_matcher) {
diff --git a/src/ContentSyncHelpManagerInterface.php b/src/ContentSyncHelpManagerInterface.php
index 24869a9..6a816d1 100644
--- a/src/ContentSyncHelpManagerInterface.php
+++ b/src/ContentSyncHelpManagerInterface.php
@@ -25,7 +25,7 @@ interface ContentSyncHelpManagerInterface {
    *
    * @param string $route_name
    *   The route for which to find help.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match object from which to find help.
    *
    * @return array
diff --git a/src/ContentSyncManager.php b/src/ContentSyncManager.php
index ffa056c..7a5d822 100755
--- a/src/ContentSyncManager.php
+++ b/src/ContentSyncManager.php
@@ -14,22 +14,22 @@ class ContentSyncManager implements ContentSyncManagerInterface {
   const DELIMITER = '.';
 
   /**
-   * @var \Symfony\Component\Serializer\Serializer
+   * @var Serializer
    */
   protected $serializer;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\content_sync\Exporter\ContentExporterInterface
+   * @var ContentExporterInterface
    */
   protected $contentExporter;
 
   /**
-   * @var \Drupal\content_sync\Importer\ContentImporterInterface
+   * @var ContentImporterInterface
    */
   protected $contentImporter;
 
@@ -44,14 +44,14 @@ class ContentSyncManager implements ContentSyncManagerInterface {
   }
 
   /**
-   * @return \Drupal\content_sync\Exporter\ContentExporterInterface
+   * @return ContentExporterInterface
    */
   public function getContentExporter() {
     return $this->contentExporter;
   }
 
   /**
-   * @return \Drupal\content_sync\Importer\ContentImporterInterface
+   * @return ContentImporterInterface
    */
   public function getContentImporter() {
     return $this->contentImporter;
@@ -102,14 +102,14 @@ class ContentSyncManager implements ContentSyncManagerInterface {
   }
 
   /**
-   * @return \Symfony\Component\Serializer\Serializer
+   * @return Serializer
    */
   public function getSerializer() {
     return $this->serializer;
   }
 
   /**
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    */
   public function getEntityTypeManager() {
     return $this->entityTypeManager;
diff --git a/src/ContentSyncManagerInterface.php b/src/ContentSyncManagerInterface.php
index 820803a..f64e5e5 100755
--- a/src/ContentSyncManagerInterface.php
+++ b/src/ContentSyncManagerInterface.php
@@ -2,7 +2,10 @@
 
 namespace Drupal\content_sync;
 
-
+use Drupal\content_sync\Importer\ContentImporterInterface;
+use Drupal\content_sync\Exporter\ContentExporterInterface;
+use Symfony\Component\Serializer\Serializer;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 /**
  * Interface ContentSyncManagerInterface.
  *
@@ -11,22 +14,22 @@ namespace Drupal\content_sync;
 interface ContentSyncManagerInterface {
 
   /**
-   * @return \Drupal\content_sync\Importer\ContentImporterInterface
+   * @return ContentImporterInterface
    */
   public function getContentImporter();
 
   /**
-   * @return \Drupal\content_sync\Exporter\ContentExporterInterface
+   * @return ContentExporterInterface
    */
   public function getContentExporter();
 
   /**
-   * @return \Symfony\Component\Serializer\Serializer
+   * @return Serializer
    */
   public function getSerializer();
 
   /**
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    */
   public function getEntityTypeManager();
 
diff --git a/src/Controller/ContentController.php b/src/Controller/ContentController.php
index 775d0d1..89e5ae8 100644
--- a/src/Controller/ContentController.php
+++ b/src/Controller/ContentController.php
@@ -24,35 +24,35 @@ class ContentController implements ContainerInjectionInterface {
   /**
    * The target storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $targetStorage;
 
   /**
    * The source storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $sourceStorage;
 
   /**
    * The content manager.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $contentManager;
 
   /**
    * The file download controller.
    *
-   * @var \Drupal\system\FileDownloadController
+   * @var FileDownloadController
    */
   protected $fileDownloadController;
 
   /**
    * The diff formatter.
    *
-   * @var \Drupal\Core\Diff\DiffFormatter
+   * @var DiffFormatter
    */
   protected $diffFormatter;
 
@@ -72,11 +72,11 @@ class ContentController implements ContainerInjectionInterface {
   /**
    * Constructs a ContentController object.
    *
-   * @param \Drupal\Core\Config\StorageInterface $target_storage
+   * @param StorageInterface $target_storage
    *   The target storage.
-   * @param \Drupal\Core\Config\StorageInterface $source_storage
+   * @param StorageInterface $source_storage
    *   The source storage
-   * @param \Drupal\system\FileDownloadController $file_download_controller
+   * @param FileDownloadController $file_download_controller
    *   The file download controller.
    */
   public function __construct(StorageInterface $target_storage, StorageInterface $source_storage, ConfigManagerInterface $content_manager, DiffFormatter $diff_formatter, FileSystemInterface $file_system) {
diff --git a/src/Controller/ContentElementController.php b/src/Controller/ContentElementController.php
index dceec9c..5201c78 100644
--- a/src/Controller/ContentElementController.php
+++ b/src/Controller/ContentElementController.php
@@ -19,7 +19,7 @@ class ContentElementController extends ControllerBase {
    * @param string $id
    *   The unique id of the message.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An empty Ajax response.
    *
    * @throws \Exception
diff --git a/src/Controller/ContentHelpController.php b/src/Controller/ContentHelpController.php
index ff4b26d..ba80b07 100644
--- a/src/Controller/ContentHelpController.php
+++ b/src/Controller/ContentHelpController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_sync\Controller;
 
+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\content_sync\ContentSyncHelpManagerInterface;
@@ -17,14 +18,14 @@ class ContentHelpController extends ControllerBase implements ContainerInjection
   /**
    * The help manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $helpManager;
 
   /**
    * Constructs a ContentSyncHelpController object.
    *
-   * @param \Drupal\content_sync\ContentSyncHelpManagerInterface $help_manager
+   * @param ContentSyncHelpManagerInterface $help_manager
    *   The help manager.
    */
   public function __construct(ContentSyncHelpManagerInterface $help_manager) {
@@ -43,7 +44,7 @@ class ContentHelpController extends ControllerBase implements ContainerInjection
   /**
    * Returns dedicated help about (aka How can we help you?) page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
    * @return array
@@ -63,7 +64,7 @@ class ContentHelpController extends ControllerBase implements ContainerInjection
   /**
    * Returns dedicated help video page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param string $id
    *   The video id.
@@ -99,7 +100,7 @@ class ContentHelpController extends ControllerBase implements ContainerInjection
   /**
    * Route video title callback.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param string $id
    *   The id of the dedicated help section.
diff --git a/src/Controller/ContentLogController.php b/src/Controller/ContentLogController.php
index d254bf6..95c5277 100644
--- a/src/Controller/ContentLogController.php
+++ b/src/Controller/ContentLogController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\content_sync\Controller;
 
+use Drupal\user\UserStorageInterface;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Component\Utility\Xss;
@@ -25,35 +27,35 @@ class ContentLogController extends ControllerBase {
   /**
    * The database service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The user storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
@@ -73,13 +75,13 @@ class ContentLogController extends ControllerBase {
   /**
    * Constructs a LogController object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   A database connection.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   A module handler.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
    */
   public function __construct(Connection $database, ModuleHandlerInterface $module_handler, DateFormatterInterface $date_formatter, FormBuilderInterface $form_builder, EntityTypeManagerInterface $entity_type_manager) {
@@ -340,7 +342,7 @@ class ContentLogController extends ControllerBase {
    *   The record from the cs_logs table. The object properties are: csid, uid,
    *   severity, type, timestamp, message, variables, link, name.
    *
-   * @return string|\Drupal\Core\StringTranslation\TranslatableMarkup|false
+   * @return string|TranslatableMarkup|false
    *   The formatted log message or FALSE if the message or variables properties
    *   are not set.
    */
diff --git a/src/Element/ContentSyncMessage.php b/src/Element/ContentSyncMessage.php
index 6509192..377e5fb 100644
--- a/src/Element/ContentSyncMessage.php
+++ b/src/Element/ContentSyncMessage.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\content_sync\Element;
 
+use Drupal\Core\State\StateInterface;
+use Drupal\user\UserDataInterface;
 use Drupal\Core\Render\Element\RenderElement;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Url;
@@ -168,13 +170,13 @@ class ContentSyncMessage extends RenderElement {
     $namespace = 'content_sync.element.message';
     switch ($storage) {
       case self::STORAGE_STATE:
-        /** @var \Drupal\Core\State\StateInterface $state */
+        /** @var StateInterface $state */
         $state = \Drupal::service('state');
         $values = $state->get($namespace, []);
         return (isset($values[$id])) ? TRUE : FALSE;
 
       case self::STORAGE_USER:
-        /** @var \Drupal\user\UserDataInterface $user_data */
+        /** @var UserDataInterface $user_data */
         $user_data = \Drupal::service('user.data');
         $values = $user_data->get('content_sync', $account->id(), $namespace) ?: [];
         return (isset($values[$id])) ? TRUE : FALSE;
@@ -198,7 +200,7 @@ class ContentSyncMessage extends RenderElement {
     $namespace = 'content_sync.element.message';
     switch ($storage) {
       case self::STORAGE_STATE:
-        /** @var \Drupal\Core\State\StateInterface $state */
+        /** @var StateInterface $state */
         $state = \Drupal::service('state');
         $values = $state->get($namespace, []);
         $values[$id] = TRUE;
@@ -206,7 +208,7 @@ class ContentSyncMessage extends RenderElement {
         break;
 
       case self::STORAGE_USER:
-        /** @var \Drupal\user\UserDataInterface $user_data */
+        /** @var UserDataInterface $user_data */
         $user_data = \Drupal::service('user.data');
         $values = $user_data->get('content_sync', $account->id(), $namespace) ?: [];
         $values[$id] = TRUE;
@@ -229,7 +231,7 @@ class ContentSyncMessage extends RenderElement {
     $namespace = 'content_sync.element.message';
     switch ($storage) {
       case self::STORAGE_STATE:
-        /** @var \Drupal\Core\State\StateInterface $state */
+        /** @var StateInterface $state */
         $state = \Drupal::service('state');
         $values = $state->get($namespace, []);
         unset($values[$id]);
@@ -237,7 +239,7 @@ class ContentSyncMessage extends RenderElement {
         break;
 
       case self::STORAGE_USER:
-        /** @var \Drupal\user\UserDataInterface $user_data */
+        /** @var UserDataInterface $user_data */
         $user_data = \Drupal::service('user.data');
         $values = $user_data->get('content_sync', $account->id(), $namespace) ?: [];
         unset($values[$id]);
diff --git a/src/EventSubscriber/ContentSyncEvents.php b/src/EventSubscriber/ContentSyncEvents.php
index fe63015..085046d 100644
--- a/src/EventSubscriber/ContentSyncEvents.php
+++ b/src/EventSubscriber/ContentSyncEvents.php
@@ -17,7 +17,7 @@ class ContentSyncEvents implements EventSubscriberInterface {
    * This method is called whenever the EntityTypeEvents::CREATE event is 
    * dispatched.
    *
-   * @param \Drupal\Core\Entity\EntityTypeEvent $event
+   * @param EntityTypeEvent $event
    *   The Event to process.
    */
   public function onContentSyncCreate(EntityTypeEvent $event) {
diff --git a/src/Exporter/ContentExporter.php b/src/Exporter/ContentExporter.php
index 92c06d3..2b2a00a 100755
--- a/src/Exporter/ContentExporter.php
+++ b/src/Exporter/ContentExporter.php
@@ -64,7 +64,7 @@ class ContentExporter implements ContentExporterInterface {
   }
 
   /**
-   * @return \Symfony\Component\Serializer\Serializer
+   * @return Serializer
    */
   public function getSerializer() {
     return $this->serializer;
diff --git a/src/Exporter/ContentExporterInterface.php b/src/Exporter/ContentExporterInterface.php
index 0f9ca76..baf352d 100755
--- a/src/Exporter/ContentExporterInterface.php
+++ b/src/Exporter/ContentExporterInterface.php
@@ -10,7 +10,7 @@ interface ContentExporterInterface {
   /**
    * Exports the given entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    * @param array $context
    *
    * @return array
diff --git a/src/Form/ContentExportForm.php b/src/Form/ContentExportForm.php
index ac5e119..f398441 100755
--- a/src/Form/ContentExportForm.php
+++ b/src/Form/ContentExportForm.php
@@ -19,17 +19,17 @@ class ContentExportForm extends FormBase {
   use ContentExportTrait;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\content_sync\Exporter\ContentExporterInterface
+   * @var ContentExporterInterface
    */
   protected $contentExporter;
 
   /**
-   * @var \Drupal\content_sync\ContentSyncManagerInterface
+   * @var ContentSyncManagerInterface
    */
   protected $contentSyncManager;
 
diff --git a/src/Form/ContentExportMultiple.php b/src/Form/ContentExportMultiple.php
index e65e1e6..d475f8f 100755
--- a/src/Form/ContentExportMultiple.php
+++ b/src/Form/ContentExportMultiple.php
@@ -24,19 +24,19 @@ class ContentExportMultiple extends ConfirmFormBase {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Private Temp Store Factory service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
   /**
-   * @var \Drupal\content_sync\ContentSyncManagerInterface
+   * @var ContentSyncManagerInterface
    */
   protected $contentSyncManager;
 
@@ -55,9 +55,9 @@ class ContentExportMultiple extends ConfirmFormBase {
   /**
    * Constructs a ContentSyncMultiple form object.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   The tempstore factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $manager
+   * @param EntityTypeManagerInterface $manager
    *   The entity type manager.
    */
   public function __construct(PrivateTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $manager, ContentSyncManagerInterface $content_sync_manager, array $formats, FileSystemInterface $file_system) {
diff --git a/src/Form/ContentExportTrait.php b/src/Form/ContentExportTrait.php
index 811a397..b9830a4 100755
--- a/src/Form/ContentExportTrait.php
+++ b/src/Form/ContentExportTrait.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\content_sync\Form;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\content_sync\Exporter\ContentExporterInterface;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Archiver\ArchiveTar;
 use Drupal\content_sync\Content\ContentDatabaseStorage;
 use Drupal\Core\Entity\ContentEntityType;
@@ -311,17 +314,17 @@ trait ContentExportTrait {
   }
 
   /**
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    */
   abstract protected function getEntityTypeManager();
 
   /**
-   * @return \Drupal\content_sync\Exporter\ContentExporterInterface
+   * @return ContentExporterInterface
    */
   abstract protected function getContentExporter();
 
   /**
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    */
   abstract protected function getExportLogger();
 
diff --git a/src/Form/ContentLogFilterForm.php b/src/Form/ContentLogFilterForm.php
index 8eb15ab..0067884 100644
--- a/src/Form/ContentLogFilterForm.php
+++ b/src/Form/ContentLogFilterForm.php
@@ -86,7 +86,7 @@ class ContentLogFilterForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function resetForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/ContentSingleExportForm.php b/src/Form/ContentSingleExportForm.php
index cada7cd..599347f 100755
--- a/src/Form/ContentSingleExportForm.php
+++ b/src/Form/ContentSingleExportForm.php
@@ -21,30 +21,30 @@ class ContentSingleExportForm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity bundle manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityBundleManager;
 
   /**
-   * @var \Drupal\content_sync\Exporter\ContentExporterInterface
+   * @var ContentExporterInterface
    */
   protected $contentExporter;
 
   /**
    * Constructs a new ContentSingleExportForm.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entity_bundle_manager
+   * @param EntityTypeBundleInfo $entity_bundle_manager
    *
-   * @param \Drupal\content_sync\Exporter\ContentExporterInterface $content_exporter
+   * @param ContentExporterInterface $content_exporter
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfo $entity_bundle_manager, ContentExporterInterface $content_exporter) {
     $this->entityTypeManager = $entity_type_manager;
diff --git a/src/Form/ContentSingleImportForm.php b/src/Form/ContentSingleImportForm.php
index 72e51bd..6a723db 100755
--- a/src/Form/ContentSingleImportForm.php
+++ b/src/Form/ContentSingleImportForm.php
@@ -15,12 +15,12 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ContentSingleImportForm extends FormBase {
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\content_sync\Importer\ContentImporterInterface
+   * @var ContentImporterInterface
    */
   protected $contentImporter;
 
diff --git a/src/Form/ContentSync.php b/src/Form/ContentSync.php
index 1f93ddd..d5fa14f 100755
--- a/src/Form/ContentSync.php
+++ b/src/Form/ContentSync.php
@@ -21,39 +21,39 @@ class ContentSync extends FormBase {
   /**
    * The sync content object.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $syncStorage;
 
   /**
    * The active content object.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $activeStorage;
 
   /**
    * The configuration manager.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface;
+   * @var ConfigManagerInterface ;
    */
   protected $configManager;
 
   /**
-   * @var \Drupal\content_sync\ContentSyncManagerInterface
+   * @var ContentSyncManagerInterface
    */
   protected $contentSyncManager;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\Core\Config\StorageInterface $sync_storage
+   * @param StorageInterface $sync_storage
    *   The source storage.
-   * @param \Drupal\Core\Config\StorageInterface $active_storage
+   * @param StorageInterface $active_storage
    *   The target storage.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $config_manager
+   * @param ConfigManagerInterface $config_manager
    *   Configuration manager.
-   * @param \Drupal\content_sync\ContentSyncManagerInterface $content_sync_manager
+   * @param ContentSyncManagerInterface $content_sync_manager
    *   The content sync manager.
    */
   public function __construct(StorageInterface $sync_storage, StorageInterface $active_storage, ConfigManagerInterface $config_manager, ContentSyncManagerInterface $content_sync_manager) {
diff --git a/src/Importer/ContentImporter.php b/src/Importer/ContentImporter.php
index 176dec1..cb5e916 100755
--- a/src/Importer/ContentImporter.php
+++ b/src/Importer/ContentImporter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_sync\Importer;
 
+use Drupal\Core\Entity\ContentEntityType;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\serialization\Normalizer\SerializedColumnNormalizerTrait;
@@ -18,12 +19,12 @@ class ContentImporter implements ContentImporterInterface {
   protected $context = [];
 
   /**
-   * @var \Symfony\Component\Serializer\Serializer
+   * @var Serializer
    */
   protected $serializer;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -85,7 +86,7 @@ class ContentImporter implements ContentImporterInterface {
    *
    * @param $entity
    *   An entity object.
-   * @param \Drupal\Core\Entity\ContentEntityType $entity_type
+   * @param ContentEntityType $entity_type
    *   A ContentEntityType object.
    * @param array $entity_translations
    *   An array of translations.
diff --git a/src/Importer/ContentImporterInterface.php b/src/Importer/ContentImporterInterface.php
index 90920bb..da8efea 100755
--- a/src/Importer/ContentImporterInterface.php
+++ b/src/Importer/ContentImporterInterface.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\content_sync\Importer;
 
-
+use Drupal\Core\Entity\ContentEntityInterface;
 interface ContentImporterInterface {
 
   /**
@@ -10,7 +10,7 @@ interface ContentImporterInterface {
    * @param $entity_type_id
    * @param array $context
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    */
   public function importEntity($decoded_entity, $context = []);
 
diff --git a/src/Logger/ContentSyncLog.php b/src/Logger/ContentSyncLog.php
index 05be48f..4c4ea01 100644
--- a/src/Logger/ContentSyncLog.php
+++ b/src/Logger/ContentSyncLog.php
@@ -27,23 +27,23 @@ class ContentSyncLog implements LoggerInterface {
   /**
    * The database connection object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The message's placeholders parser.
    *
-   * @var \Drupal\Core\Logger\LogMessageParserInterface
+   * @var LogMessageParserInterface
    */
   protected $parser;
 
   /**
    * Constructs a csLog object.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection object.
-   * @param \Drupal\Core\Logger\LogMessageParserInterface $parser
+   * @param LogMessageParserInterface $parser
    *   The parser to use when extracting message variables.
    */
   public function __construct(Connection $connection, LogMessageParserInterface $parser) {
diff --git a/src/Normalizer/ContentEntityNormalizer.php b/src/Normalizer/ContentEntityNormalizer.php
index 229e410..c20f4bb 100755
--- a/src/Normalizer/ContentEntityNormalizer.php
+++ b/src/Normalizer/ContentEntityNormalizer.php
@@ -29,11 +29,11 @@ class ContentEntityNormalizer extends BaseContentEntityNormalizer {
   /**
    * Constructs an EntityNormalizer object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeRepositoryInterface $entity_type_repository
+   * @param EntityTypeRepositoryInterface $entity_type_repository
    *   The entity type repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    * @param SyncNormalizerDecoratorManager $decorator_manager
    */
diff --git a/src/Normalizer/EntityReferenceFieldItemNormalizer.php b/src/Normalizer/EntityReferenceFieldItemNormalizer.php
index fa14255..3ba6ed8 100755
--- a/src/Normalizer/EntityReferenceFieldItemNormalizer.php
+++ b/src/Normalizer/EntityReferenceFieldItemNormalizer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_sync\Normalizer;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\content_sync\ContentSyncManager;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Entity\RevisionableInterface;
@@ -26,14 +27,14 @@ class EntityReferenceFieldItemNormalizer extends FieldItemNormalizer {
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs a EntityReferenceFieldItemNormalizer object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(EntityRepositoryInterface $entity_repository) {
@@ -45,7 +46,7 @@ class EntityReferenceFieldItemNormalizer extends FieldItemNormalizer {
    */
   public function normalize($field_item, $format = NULL, array $context = []) {
     $values = parent::normalize($field_item, $format, $context);
-    /** @var \Drupal\Core\Entity\EntityInterface $entity */
+    /** @var EntityInterface $entity */
     if ($entity = $field_item->get('entity')->getValue()) {
       // We are only interested in content entities.
       $reflection = new \ReflectionClass($entity);
@@ -96,7 +97,7 @@ class EntityReferenceFieldItemNormalizer extends FieldItemNormalizer {
    */
   protected function constructValue($data, $context) {
     if (isset($data['target_uuid'])) {
-      /** @var \Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem $field_item */
+      /** @var EntityReferenceItem $field_item */
       $field_item = $context['target_instance'];
       if (empty($data['target_uuid'])) {
         throw new InvalidArgumentException(sprintf('If provided "target_uuid" cannot be empty for field "%s".', $field_item->getName()));
diff --git a/src/Normalizer/FileEntityNormalizer.php b/src/Normalizer/FileEntityNormalizer.php
index 9b3e155..3ab8c09 100755
--- a/src/Normalizer/FileEntityNormalizer.php
+++ b/src/Normalizer/FileEntityNormalizer.php
@@ -24,23 +24,23 @@ class FileEntityNormalizer extends ContentEntityNormalizer {
   /**
    * File system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * FileEntityNormalizer constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeRepositoryInterface $entity_type_repository
+   * @param EntityTypeRepositoryInterface $entity_type_repository
    *   The entity type repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    *
-   * @param \Drupal\content_sync\Plugin\SyncNormalizerDecoratorManager $decorator_manager
+   * @param SyncNormalizerDecoratorManager $decorator_manager
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    */
   public function __construct(
       EntityTypeManagerInterface $entity_type_manager,
diff --git a/src/Normalizer/LinkItemNormalizer.php b/src/Normalizer/LinkItemNormalizer.php
index ddb3843..8fa7fee 100755
--- a/src/Normalizer/LinkItemNormalizer.php
+++ b/src/Normalizer/LinkItemNormalizer.php
@@ -24,23 +24,22 @@ class LinkItemNormalizer extends FieldItemNormalizer {
    */
   protected $supportedInterfaceOrClass = LinkItem::class;
   //protected $supportedInterfaceOrClass = 'Drupal\link\Plugin\Field\FieldType\LinkItem';
-
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a EntityReferenceFieldItemNormalizer object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeManagerInterface $entity_type_manager) {
@@ -101,7 +100,7 @@ class LinkItemNormalizer extends FieldItemNormalizer {
    */
   protected function constructValue($data, $context) {
     if (isset($data['target_uuid'])) {
-      /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $field_item */
+      /** @var LinkItem $field_item */
       $field_item = $context['target_instance'];
       if (empty($data['target_uuid'])) {
         throw new InvalidArgumentException(sprintf('If provided "target_uuid" cannot be empty for field "%s".', $field_item->getName()));
diff --git a/src/Normalizer/ParagraphEntityNormalizer.php b/src/Normalizer/ParagraphEntityNormalizer.php
index ab93a29..974321f 100755
--- a/src/Normalizer/ParagraphEntityNormalizer.php
+++ b/src/Normalizer/ParagraphEntityNormalizer.php
@@ -25,18 +25,18 @@ class ParagraphEntityNormalizer extends ContentEntityNormalizer {
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs an EntityNormalizer object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeRepositoryInterface $entity_type_repository
+   * @param EntityTypeRepositoryInterface $entity_type_repository
    *   The entity type repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    * @param SyncNormalizerDecoratorManager $decorator_manager
    * @param EntityRepositoryInterface $entityRepository
diff --git a/src/Normalizer/PathAliasEntityNormalizer.php b/src/Normalizer/PathAliasEntityNormalizer.php
index 0537e27..ebf7c54 100755
--- a/src/Normalizer/PathAliasEntityNormalizer.php
+++ b/src/Normalizer/PathAliasEntityNormalizer.php
@@ -26,18 +26,18 @@ class PathAliasEntityNormalizer extends ContentEntityNormalizer {
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs an EntityNormalizer object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeRepositoryInterface $entity_type_repository
+   * @param EntityTypeRepositoryInterface $entity_type_repository
    *   The entity type repository.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    * @param SyncNormalizerDecoratorManager $decorator_manager
    * @param EntityRepositoryInterface $entityRepository
diff --git a/src/Normalizer/UserEntityNormalizer.php b/src/Normalizer/UserEntityNormalizer.php
index c565253..cea4902 100755
--- a/src/Normalizer/UserEntityNormalizer.php
+++ b/src/Normalizer/UserEntityNormalizer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_sync\Normalizer;
 
+use Drupal\user\Entity\User;
 /**
  * User entity normalizer class.
  */
@@ -60,7 +61,7 @@ class UserEntityNormalizer extends ContentEntityNormalizer {
    * {@inheritdoc}
    */
   protected function getContentSyncMetadata($object, $context = []) {
-    /** @var \Drupal\user\Entity\User $object */
+    /** @var User $object */
     $metadata = parent::getContentSyncMetadata($object, $context);
     if ($object->isAnonymous()) {
       $metadata['is_anonymous'] = TRUE;
diff --git a/src/Plugin/Action/ExportNodes.php b/src/Plugin/Action/ExportNodes.php
index 1f395eb..417dc9b 100755
--- a/src/Plugin/Action/ExportNodes.php
+++ b/src/Plugin/Action/ExportNodes.php
@@ -30,7 +30,7 @@ class ExportNodes extends ActionBase implements ContainerFactoryPluginInterface
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -43,7 +43,7 @@ class ExportNodes extends ActionBase implements ContainerFactoryPluginInterface
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   The tempstore factory.
    * @param AccountInterface $current_user
    *   Current user.
diff --git a/src/Plugin/SyncNormalizerDecorator/IdsCleaner.php b/src/Plugin/SyncNormalizerDecorator/IdsCleaner.php
index d06a38a..44bd7f7 100755
--- a/src/Plugin/SyncNormalizerDecorator/IdsCleaner.php
+++ b/src/Plugin/SyncNormalizerDecorator/IdsCleaner.php
@@ -23,17 +23,17 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class IdsCleaner extends SyncNormalizerDecoratorBase implements ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
@@ -55,9 +55,8 @@ class IdsCleaner extends SyncNormalizerDecoratorBase implements ContainerFactory
    * @param string $plugin_id
    * @param mixed $plugin_definition
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entityTypeBundleInfo
-   *
+   * @param EntityFieldManagerInterface $entityFieldManager
+   * @param EntityTypeBundleInfoInterface $entityTypeBundleInfo
    */
   public function __construct(array $configuration,
             $plugin_id,
@@ -79,7 +78,7 @@ class IdsCleaner extends SyncNormalizerDecoratorBase implements ContainerFactory
 
   /**
    * @param array $normalized_entity
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    * @param $format
    * @param array $context
    */
@@ -89,7 +88,7 @@ class IdsCleaner extends SyncNormalizerDecoratorBase implements ContainerFactory
 
   /**
    * @param $normalized_entity
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *
    * @return mixed
    */
diff --git a/src/Plugin/SyncNormalizerDecoratorManager.php b/src/Plugin/SyncNormalizerDecoratorManager.php
index db0675e..21c352f 100755
--- a/src/Plugin/SyncNormalizerDecoratorManager.php
+++ b/src/Plugin/SyncNormalizerDecoratorManager.php
@@ -17,9 +17,9 @@ class SyncNormalizerDecoratorManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Utility/ContentSyncDialogHelper.php b/src/Utility/ContentSyncDialogHelper.php
index 02539c3..1d636b0 100644
--- a/src/Utility/ContentSyncDialogHelper.php
+++ b/src/Utility/ContentSyncDialogHelper.php
@@ -64,7 +64,7 @@ class ContentSyncDialogHelper {
     // @see \Drupal\content_sync\Element\content_syncHtmlEditor::preRendercontent_syncHtmlEditor
     if (\Drupal::moduleHandler()->moduleExists('imce') && Imce::access()) {
       $element['#attached']['library'][] = 'imce/drupal.imce.ckeditor';
-      $element['#attached']['drupalSettings']['content_sync']['html_editor']['ImceImageIcon'] = file_create_url(drupal_get_path('module', 'imce') . '/js/plugins/ckeditor/icons/imceimage.png');
+      $element['#attached']['drupalSettings']['content_sync']['html_editor']['ImceImageIcon'] = \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/icons/imceimage.png');
     }
   }
 
