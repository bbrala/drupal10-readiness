diff --git a/cmis.install b/cmis.install
index d250967..006508d 100644
--- a/cmis.install
+++ b/cmis.install
@@ -6,6 +6,7 @@
  */
 
 declare(strict_types = 1);
+use Drupal\user\RoleInterface;
 
 use Drupal\user\Entity\Role;
 
@@ -13,7 +14,7 @@ use Drupal\user\Entity\Role;
  * Add the new "administer cmis connection entity" permission.
  */
 function cmis_update_8201() {
-  /** @var \Drupal\user\RoleInterface $role */
+  /** @var RoleInterface $role */
   foreach (Role::loadMultiple() as $role) {
     if ($role->hasPermission('administer site configuration')) {
       $role->grantPermission('administer cmis connection entity');
@@ -33,7 +34,7 @@ function cmis_update_8202() {
  * Add the new "access all cmis browsers" permission.
  */
 function cmis_update_8203() {
-  /** @var \Drupal\user\RoleInterface $role */
+  /** @var RoleInterface $role */
   foreach (Role::loadMultiple() as $role) {
     if ($role->hasPermission('access cmis browser')) {
       $role->grantPermission('access all cmis browsers');
@@ -47,7 +48,7 @@ function cmis_update_8203() {
  * Revoke "access cmis operations" permission.
  */
 function cmis_update_8204() {
-  /** @var \Drupal\user\RoleInterface $role */
+  /** @var RoleInterface $role */
   foreach (Role::loadMultiple() as $role) {
     if ($role->hasPermission('access cmis operations')) {
       $role->revokePermission('access cmis operations');
diff --git a/cmis.module b/cmis.module
index cee0474..70887fb 100644
--- a/cmis.module
+++ b/cmis.module
@@ -140,7 +140,7 @@ function template_preprocess_cmis_content_properties(&$variables) {
       '#header' => [t('Property'), t('Value')],
       '#rows' => $rows,
     ];
-    $variables['properties'] = render($table);
+    $variables['properties'] = \Drupal::service('renderer')->render($table);
   }
 }
 
@@ -161,7 +161,7 @@ function cmis_get_configurations() {
 /**
  * Helper function.
  *
- * @param \Dkd\PhpCmis\Data\PropertyInterface $property
+ * @param PropertyInterface $property
  *   The property to get values from.
  *
  * @return string
diff --git a/src/CmisBrowser.php b/src/CmisBrowser.php
index 614c191..b8cd024 100644
--- a/src/CmisBrowser.php
+++ b/src/CmisBrowser.php
@@ -61,7 +61,7 @@ class CmisBrowser {
   /**
    * Current object.
    *
-   * @var \Dkd\PhpCmis\Data\FolderInterface
+   * @var FolderInterface
    */
   protected $current;
 
@@ -116,7 +116,7 @@ class CmisBrowser {
     $this->init($config, $folder_id);
     if ($this->connection && !empty($this->current) && $browse = $this->browse()) {
       $response = new AjaxResponse();
-      $content = render($browse);
+      $content = \Drupal::service('renderer')->render($browse);
       $response->addCommand(new HtmlCommand('#cmis-browser-wrapper', $content));
 
       return $response;
@@ -182,7 +182,7 @@ class CmisBrowser {
       return [
         '#theme' => 'cmis_content_properties',
         '#object' => $this->current,
-        '#download' => render($path),
+        '#download' => \Drupal::service('renderer')->render($path),
       ];
     }
   }
@@ -334,7 +334,7 @@ class CmisBrowser {
         $url->setOptions($link_options);
         $path = Link::fromTextAndUrl($title, $url)->toRenderable();
         $links[] = [
-          '#markup' => render($path),
+          '#markup' => \Drupal::service('renderer')->render($path),
           '#wrapper_attributes' => [
             'class' => ['object-properties'],
           ],
@@ -347,14 +347,14 @@ class CmisBrowser {
         '#type' => 'ul',
       ];
 
-      return render($list);
+      return \Drupal::service('renderer')->render($list);
     }
   }
 
   /**
    * Add folder objects to render array.
    *
-   * @param \Dkd\PhpCmis\Data\FolderInterface $folder
+   * @param FolderInterface $folder
    *   A CMIS folder object.
    */
   protected function printFolderContent(FolderInterface $folder) {
@@ -374,7 +374,7 @@ class CmisBrowser {
   /**
    * Create breadcrumbs from parent folders.
    *
-   * @param \Dkd\PhpCmis\Data\FolderInterface $folder
+   * @param FolderInterface $folder
    *   Folder name.
    */
   protected function setBreadcrumbs(FolderInterface $folder) {
diff --git a/src/CmisConnectionApi.php b/src/CmisConnectionApi.php
index f9bd31b..eb2d17a 100644
--- a/src/CmisConnectionApi.php
+++ b/src/CmisConnectionApi.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\cmis;
 
+use Drupal\Core\Http\ClientFactory;
 use Dkd\PhpCmis\Enum\BindingType;
 use Dkd\PhpCmis\SessionFactory;
 use Dkd\PhpCmis\SessionParameter;
@@ -128,7 +129,7 @@ class CmisConnectionApi {
           ],
         ];
       }
-      /** @var \Drupal\Core\Http\ClientFactory $clientFactory */
+      /** @var ClientFactory $clientFactory */
       $clientFactory = \Drupal::service('http_client_factory');
       $this->httpInvoker = $clientFactory->fromOptions($auth);
     }
diff --git a/src/CmisElement.php b/src/CmisElement.php
index bd2c09f..7534537 100644
--- a/src/CmisElement.php
+++ b/src/CmisElement.php
@@ -82,7 +82,7 @@ class CmisElement {
    *   Entity label.
    * @param bool $popup
    *   Get true if is a popup.
-   * @param \Dkd\PhpCmis\DataObjects\AbstractFileableCmisObject $parent
+   * @param AbstractFileableCmisObject $parent
    *   Get AbstractFileableCmisObject class.
    * @param string $query
    *   CMIS Query.
@@ -102,7 +102,7 @@ class CmisElement {
    *
    * @param string $type
    *   Controller type.
-   * @param \Dkd\PhpCmis\DataObjects\AbstractFileableCmisObject $element
+   * @param AbstractFileableCmisObject $element
    *   Get AbstractFileableCmisObject class.
    */
   public function setElement($type, AbstractFileableCmisObject $element) {
@@ -134,7 +134,7 @@ class CmisElement {
           '#element' => $name,
             // '#cache' => $this->cacheable,.
         ];
-        $this->data = [render($element)];
+        $this->data = [\Drupal::service('renderer')->render($element)];
     }
   }
 
@@ -199,8 +199,8 @@ class CmisElement {
         // '#cache' => $this->cacheable,.
     ];
     $this->data = [
-      render($element),
-      render($details),
+      \Drupal::service('renderer')->render($element),
+      \Drupal::service('renderer')->render($details),
       $author,
       $created,
       $description,
@@ -232,11 +232,11 @@ class CmisElement {
       ];
       $url->setOptions($link_options);
       $path = Link::fromTextAndUrl($this->t('Choose'), $url)->toRenderable();
-      $operations = render($path);
+      $operations = \Drupal::service('renderer')->render($path);
     }
     $url = Url::fromUserInput('/cmis/document/' . $this->config . '/' . $id);
     $path = Link::fromTextAndUrl($data, $url)->toRenderable();
-    $data = ['#markup' => render($path)];
+    $data = ['#markup' => \Drupal::service('renderer')->render($path)];
   }
 
   /**
@@ -281,7 +281,7 @@ class CmisElement {
       ];
       $url_operation->setOptions($link_options_operations);
       $path = Link::fromTextAndUrl($this->t('Choose folder'), $url_operation)->toRenderable();
-      $operations = render($path);
+      $operations = \Drupal::service('renderer')->render($path);
       $link_options['query'] = ['type' => 'popup'];
     }
 
@@ -311,7 +311,7 @@ class CmisElement {
     $url->setOptions($link_options);
     $path = Link::fromTextAndUrl($this->t('Properties'), $url)->toRenderable();
     $links[] = [
-      '#markup' => render($path),
+      '#markup' => \Drupal::service('renderer')->render($path),
       '#wrapper_attributes' => [
         'class' => [
           'object-properties',
@@ -356,7 +356,7 @@ class CmisElement {
       $url->setOptions($link_options);
       $path = Link::fromTextAndUrl($this->t('Delete'), $url)->toRenderable();
       $links[] = [
-        '#markup' => render($path),
+        '#markup' => \Drupal::service('renderer')->render($path),
         '#wrapper_attributes' => [
           'class' => [
             'object-delete',
@@ -371,7 +371,7 @@ class CmisElement {
       '#type' => 'ul',
     ];
 
-    $operations = render($list);
+    $operations = \Drupal::service('renderer')->render($list);
   }
 
 }
diff --git a/src/CmisPermissions.php b/src/CmisPermissions.php
index 111a4c8..85ef122 100644
--- a/src/CmisPermissions.php
+++ b/src/CmisPermissions.php
@@ -20,14 +20,14 @@ class CmisPermissions implements ContainerInjectionInterface {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a CmisPermissions instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Controller/CmisRepositoryController.php b/src/Controller/CmisRepositoryController.php
index b0b7305..3bd550f 100644
--- a/src/Controller/CmisRepositoryController.php
+++ b/src/Controller/CmisRepositoryController.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\cmis\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\cmis\CmisConnectionApi;
@@ -30,7 +31,7 @@ class CmisRepositoryController extends ControllerBase {
   /**
    * Call the CmisConnectionApi class.
    *
-   * @var \Drupal\cmis\CmisConnectionApi
+   * @var CmisConnectionApi
    */
   private $connection;
 
@@ -147,7 +148,7 @@ class CmisRepositoryController extends ControllerBase {
     $link_options = ['query' => $parameters];
     $url->setOptions($link_options);
     $path = Link::fromTextAndUrl($this->t('Delete'), $url)->toRenderable();
-    $link = render($path);
+    $link = \Drupal::service('renderer')->render($path);
 
     return [
       '#theme' => 'cmis_object_delete_verify',
@@ -328,10 +329,10 @@ class CmisRepositoryController extends ControllerBase {
   /**
    * Check permission.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Get Account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $account) {
diff --git a/src/Form/CmisBrowserDocumentUploadForm.php b/src/Form/CmisBrowserDocumentUploadForm.php
index 4cdf5dc..eb7d457 100644
--- a/src/Form/CmisBrowserDocumentUploadForm.php
+++ b/src/Form/CmisBrowserDocumentUploadForm.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\cmis\Form;
 
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\cmis\CmisConnectionApi;
 use Dkd\PhpCmis\PropertyIds;
 use Drupal\cmis\Controller\CmisRepositoryController;
 use Drupal\Core\Form\FormBase;
@@ -21,14 +23,14 @@ class CmisBrowserDocumentUploadForm extends FormBase {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * CMIS Connection API.
    *
-   * @var \Drupal\cmis\CmisConnectionApi
+   * @var CmisConnectionApi
    */
   protected $cmisConnectionApi;
 
diff --git a/src/Form/CmisCreateFolderForm.php b/src/Form/CmisCreateFolderForm.php
index 5a1816d..c79d7fb 100644
--- a/src/Form/CmisCreateFolderForm.php
+++ b/src/Form/CmisCreateFolderForm.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\cmis\Form;
 
+use Drupal\cmis\CmisConnectionApi;
 use Dkd\PhpCmis\PropertyIds;
 use Drupal\cmis\Controller\CmisRepositoryController;
 use Drupal\Core\Form\FormBase;
@@ -20,7 +21,7 @@ class CmisCreateFolderForm extends FormBase {
   /**
    * CMIS Connection API.
    *
-   * @var \Drupal\cmis\CmisConnectionApi
+   * @var CmisConnectionApi
    */
   protected $cmisConnectionApi;
 
diff --git a/src/Form/CmisQueryForm.php b/src/Form/CmisQueryForm.php
index 40a5866..c9404a1 100644
--- a/src/Form/CmisQueryForm.php
+++ b/src/Form/CmisQueryForm.php
@@ -188,7 +188,7 @@ class CmisQueryForm extends FormBase {
           '#elements' => $rows,
         ];
 
-        $content = render($table);
+        $content = \Drupal::service('renderer')->render($table);
       }
     }
 
@@ -200,7 +200,7 @@ class CmisQueryForm extends FormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/CmisFieldLink.php b/src/Plugin/Field/FieldFormatter/CmisFieldLink.php
index 66f5b7e..b856e3b 100644
--- a/src/Plugin/Field/FieldFormatter/CmisFieldLink.php
+++ b/src/Plugin/Field/FieldFormatter/CmisFieldLink.php
@@ -39,7 +39,7 @@ class CmisFieldLink extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return array
