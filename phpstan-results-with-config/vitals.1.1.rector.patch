diff --git a/src/Controller/VitalsController.php b/src/Controller/VitalsController.php
index 8dfd9fe..84d4e87 100644
--- a/src/Controller/VitalsController.php
+++ b/src/Controller/VitalsController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vitals\Controller;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ -22,59 +24,59 @@ class VitalsController extends ControllerBase {
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The the state object.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The flood service.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;
 
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The object that gets the data.
    *
-   * @var \Drupal\vitals\Vitals
+   * @var Vitals
    */
   protected $vitals;
 
   /**
    * Constructs a new VitalsController object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Flood\FloodInterface $flood
+   * @param FloodInterface $flood
    *   The flood service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\vitals\Vitals $vitals
+   * @param Vitals $vitals
    *   The object that gets the data.
    */
   public function __construct(
diff --git a/src/Form/VitalsAdminForm.php b/src/Form/VitalsAdminForm.php
index 0be5d1a..b05b919 100644
--- a/src/Form/VitalsAdminForm.php
+++ b/src/Form/VitalsAdminForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vitals\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -19,21 +20,21 @@ class VitalsAdminForm extends ConfigFormBase {
   /**
    * The config factory object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The the state object.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Include the messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -47,13 +48,13 @@ class VitalsAdminForm extends ConfigFormBase {
   /**
    * Constructs a new VitalsAdminForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\vitals\Vitals $vitals
+   * @param Vitals $vitals
    *   The object that gets the data.
    */
   public function __construct(
diff --git a/tests/src/Functional/VitalsTest.php b/tests/src/Functional/VitalsTest.php
index fd49249..bbd04ee 100644
--- a/tests/src/Functional/VitalsTest.php
+++ b/tests/src/Functional/VitalsTest.php
@@ -31,7 +31,7 @@ class VitalsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $user = $this->drupalCreateUser(['access content']);
     $this->drupalLogin($user);
@@ -48,11 +48,23 @@ class VitalsTest extends BrowserTestBase {
     $this->drupalGet($url);
 
     // Checking for the keys we know should exist.
-    $this->assertResponse(200);
-    $this->assertText('php_version');
-    $this->assertText('cms_version');
-    $this->assertText('security_updates');
-    $this->assertText('pending_updates');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('php_version');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('cms_version');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('security_updates');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('pending_updates');
   }
 
   /**
@@ -63,7 +75,7 @@ class VitalsTest extends BrowserTestBase {
     $config->set('vitals_unauthorized_action', Vitals::VITALS_404)->save();
 
     $this->drupalGet('vitals/invalid-token');
-    $this->assertResponse(404);
+    $this->assertSession()->statusCodeEquals(404);
   }
 
   /**
@@ -76,7 +88,7 @@ class VitalsTest extends BrowserTestBase {
     // Simulate and check several invalid requests.
     for ($i = 0; $i < 11; $i++) {
       $this->drupalGet('vitals/invalid-token');
-      $this->assertResponse(403);
+      $this->assertSession()->statusCodeEquals(403);
     }
 
     // Simulate a valid request and ensure it is rejected.
@@ -85,7 +97,7 @@ class VitalsTest extends BrowserTestBase {
     $url = Url::fromRoute('vitals.content', ['token' => $token])->toString();
 
     $this->drupalGet($url);
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -98,7 +110,7 @@ class VitalsTest extends BrowserTestBase {
     // Simulate and check several invalid requests.
     for ($i = 0; $i < 11; $i++) {
       $this->drupalGet('vitals/invalid-token');
-      $this->assertResponse(404);
+      $this->assertSession()->statusCodeEquals(404);
     }
 
     // Simulate a valid request and ensure it is rejected.
@@ -107,7 +119,7 @@ class VitalsTest extends BrowserTestBase {
     $url = Url::fromRoute('vitals.content', ['token' => $token])->toString();
 
     $this->drupalGet($url);
-    $this->assertResponse(404);
+    $this->assertSession()->statusCodeEquals(404);
   }
 
   /**
@@ -120,7 +132,7 @@ class VitalsTest extends BrowserTestBase {
     // Simulate and check several invalid requests.
     for ($i = 0; $i < 5; $i++) {
       $this->drupalGet('vitals/invalid-token');
-      $this->assertResponse(404);
+      $this->assertSession()->statusCodeEquals(404);
     }
 
     // Simulate a valid request and ensure it is rejected.
@@ -129,7 +141,7 @@ class VitalsTest extends BrowserTestBase {
     $url = Url::fromRoute('vitals.content', ['token' => $token])->toString();
 
     $this->drupalGet($url);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
