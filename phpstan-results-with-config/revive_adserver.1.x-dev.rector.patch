diff --git a/revive_adserver.info.yml b/revive_adserver.info.yml
index 0bc1945..9a1ec0a 100644
--- a/revive_adserver.info.yml
+++ b/revive_adserver.info.yml
@@ -1,8 +1,7 @@
 name: 'Revive Adserver'
 type: module
 description: 'Provides plugins for displaying Revive Adserver ads in Drupal.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 configure: revive_adserver.settings
 dependencies:
   - drupal:block
diff --git a/src/Annotation/InvocationMethodService.php b/src/Annotation/InvocationMethodService.php
index 0110425..89f658e 100644
--- a/src/Annotation/InvocationMethodService.php
+++ b/src/Annotation/InvocationMethodService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\revive_adserver\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class InvocationMethodService extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Form/ReviveAdserverSettingsForm.php b/src/Form/ReviveAdserverSettingsForm.php
index 5ed159c..93555d3 100644
--- a/src/Form/ReviveAdserverSettingsForm.php
+++ b/src/Form/ReviveAdserverSettingsForm.php
@@ -21,7 +21,7 @@ class ReviveAdserverSettingsForm extends ConfigFormBase {
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;
 
@@ -135,7 +135,7 @@ class ReviveAdserverSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function syncZones(array &$form, FormStateInterface $form_state) {
diff --git a/src/InvocationMethodServiceBase.php b/src/InvocationMethodServiceBase.php
index 2982350..61676d5 100644
--- a/src/InvocationMethodServiceBase.php
+++ b/src/InvocationMethodServiceBase.php
@@ -58,14 +58,14 @@ abstract class InvocationMethodServiceBase extends PluginBase implements Invocat
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;
 
@@ -78,9 +78,9 @@ abstract class InvocationMethodServiceBase extends PluginBase implements Invocat
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\revive_adserver\InvocationMethodServiceManager $invocationMethodServiceManager
+   * @param InvocationMethodServiceManager $invocationMethodServiceManager
    *   Invocation method manager service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $configFactory, InvocationMethodServiceManager $invocationMethodServiceManager) {
diff --git a/src/InvocationMethodServiceManager.php b/src/InvocationMethodServiceManager.php
index 5139f83..79cca61 100644
--- a/src/InvocationMethodServiceManager.php
+++ b/src/InvocationMethodServiceManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\revive_adserver;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ -18,11 +19,11 @@ class InvocationMethodServiceManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ -52,7 +53,7 @@ class InvocationMethodServiceManager extends DefaultPluginManager {
    * @param string $input
    *   Input provided from a field.
    *
-   * @return \Drupal\revive_adserver\InvocationMethodServiceInterface|bool
+   * @return InvocationMethodServiceInterface|bool
    *   The loaded plugin.
    */
   public function loadInvocationMethodFromInput($input) {
diff --git a/src/Plugin/Block/ReviveAdserverZoneBlock.php b/src/Plugin/Block/ReviveAdserverZoneBlock.php
index 9c6f239..38b32a7 100644
--- a/src/Plugin/Block/ReviveAdserverZoneBlock.php
+++ b/src/Plugin/Block/ReviveAdserverZoneBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\revive_adserver\Plugin\Block;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -21,7 +22,7 @@ class ReviveAdserverZoneBlock extends BlockBase implements ContainerFactoryPlugi
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;
 
@@ -29,7 +30,7 @@ class ReviveAdserverZoneBlock extends BlockBase implements ContainerFactoryPlugi
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, InvocationMethodServiceManager $invocationMethodServiceManager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
@@ -37,7 +38,7 @@ class ReviveAdserverZoneBlock extends BlockBase implements ContainerFactoryPlugi
   }
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
diff --git a/src/Plugin/Field/FieldFormatter/ReviveFormatter.php b/src/Plugin/Field/FieldFormatter/ReviveFormatter.php
index 9a3ba51..5ac569b 100644
--- a/src/Plugin/Field/FieldFormatter/ReviveFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ReviveFormatter.php
@@ -26,7 +26,7 @@ class ReviveFormatter extends FormatterBase implements ContainerFactoryPluginInt
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;
 
@@ -37,7 +37,7 @@ class ReviveFormatter extends FormatterBase implements ContainerFactoryPluginInt
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -45,7 +45,7 @@ class ReviveFormatter extends FormatterBase implements ContainerFactoryPluginInt
    *   The formatter label display setting.
    * @param string $view_mode
    *   The view mode.
-   * @param \Drupal\revive_adserver\InvocationMethodServiceManager $invocationMethodServiceManager
+   * @param InvocationMethodServiceManager $invocationMethodServiceManager
    *   The Invocation Method Manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, InvocationMethodServiceManager $invocationMethodServiceManager) {
diff --git a/src/Plugin/Field/FieldWidget/ReviveWidget.php b/src/Plugin/Field/FieldWidget/ReviveWidget.php
index af24700..5ed6639 100644
--- a/src/Plugin/Field/FieldWidget/ReviveWidget.php
+++ b/src/Plugin/Field/FieldWidget/ReviveWidget.php
@@ -28,21 +28,21 @@ class ReviveWidget extends WidgetBase implements ContainerFactoryPluginInterface
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;
 
diff --git a/tests/src/Functional/ReviveFieldTest.php b/tests/src/Functional/ReviveFieldTest.php
index f3473db..d79a7d4 100644
--- a/tests/src/Functional/ReviveFieldTest.php
+++ b/tests/src/Functional/ReviveFieldTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\revive_adserver\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\revive_adserver\Traits\ReviveTestTrait;
 
@@ -31,21 +33,21 @@ class ReviveFieldTest extends BrowserTestBase {
   /**
    * A user with permissions to edit Articles.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $contentAuthorUser;
 
   /**
    * The node object used in the test.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create the Article node type.
diff --git a/tests/src/Functional/ReviveSettingsTest.php b/tests/src/Functional/ReviveSettingsTest.php
index f8445fd..6930311 100644
--- a/tests/src/Functional/ReviveSettingsTest.php
+++ b/tests/src/Functional/ReviveSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\revive_adserver\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\revive_adserver\Traits\ReviveTestTrait;
 
@@ -29,14 +30,14 @@ class ReviveSettingsTest extends BrowserTestBase {
   /**
    * A user with permissions to access the revive settings page.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Log in as a user, that can configure the revive adserver settings.
diff --git a/tests/src/FunctionalJavascript/ReviveBlockJavascriptTest.php b/tests/src/FunctionalJavascript/ReviveBlockJavascriptTest.php
index 697a7cb..999d762 100644
--- a/tests/src/FunctionalJavascript/ReviveBlockJavascriptTest.php
+++ b/tests/src/FunctionalJavascript/ReviveBlockJavascriptTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\revive_adserver\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\revive_adserver\Traits\ReviveTestTrait;
 
@@ -31,14 +32,14 @@ class ReviveBlockJavascriptTest extends WebDriverTestBase {
   /**
    * A user with permissions to access the revive adserver settings page.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Log in as a user, that can add and configure blocks.
@@ -62,7 +63,8 @@ class ReviveBlockJavascriptTest extends WebDriverTestBase {
       'settings[invocation_method]' => 'iframe',
       'region' => 'content',
     ];
-    $this->drupalPostForm('admin/structure/block/add/revive_adserver_zone_block', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/add/revive_adserver_zone_block');
+    $this->submitForm($edit, 'Save block');
 
     // Check that the ad wrappers and iframe got loaded.
     $this->drupalGet('<front>');
@@ -72,7 +74,8 @@ class ReviveBlockJavascriptTest extends WebDriverTestBase {
     $edit = [
       'settings[invocation_method]' => 'async_javascript',
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver ins');
     $this->assertSession()->elementAttributeContains('css', '.block-revive-adserver ins', 'data-revive-zoneid', 1);
 
@@ -80,7 +83,8 @@ class ReviveBlockJavascriptTest extends WebDriverTestBase {
     $edit = [
       'settings[block_banner]' => TRUE,
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver ins');
     $this->assertSession()->elementAttributeContains('css', '.block-revive-adserver ins', 'data-revive-block', 1);
 
@@ -88,7 +92,8 @@ class ReviveBlockJavascriptTest extends WebDriverTestBase {
     $edit = [
       'settings[block_banner_campaign]' => TRUE,
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver ins');
     $this->assertSession()->elementAttributeContains('css', '.block-revive-adserver ins', 'data-revive-blockcampaign', 1);
 
@@ -96,7 +101,8 @@ class ReviveBlockJavascriptTest extends WebDriverTestBase {
     $edit = [
       'settings[invocation_method]' => 'javascript',
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver script');
   }
 
diff --git a/tests/src/FunctionalJavascript/ReviveFieldJavascriptTest.php b/tests/src/FunctionalJavascript/ReviveFieldJavascriptTest.php
index 24ebaed..0758c5f 100644
--- a/tests/src/FunctionalJavascript/ReviveFieldJavascriptTest.php
+++ b/tests/src/FunctionalJavascript/ReviveFieldJavascriptTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\revive_adserver\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\field\Entity\FieldConfig;
@@ -35,14 +37,14 @@ class ReviveFieldJavascriptTest extends WebDriverTestBase {
   /**
    * A user with permissions to access the revive adserver settings page.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'article']);
@@ -75,7 +77,8 @@ class ReviveFieldJavascriptTest extends WebDriverTestBase {
       'title[0][value]' => 'My test title',
       'field_revive[0][zone_id]' => 1,
     ];
-    $this->drupalPostForm('node/add/article', $edit, 'Save');
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, 'Save');
 
     // Verify that the ad is displayed correctly. By default with the "async_javascript"
     // method.
@@ -185,7 +188,7 @@ class ReviveFieldJavascriptTest extends WebDriverTestBase {
   /**
    * Creates the necessary fields.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setupFields() {
     FieldStorageConfig::create([
diff --git a/tests/src/Traits/ReviveTestTrait.php b/tests/src/Traits/ReviveTestTrait.php
index 27a443f..4e0b9b3 100644
--- a/tests/src/Traits/ReviveTestTrait.php
+++ b/tests/src/Traits/ReviveTestTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\revive_adserver\Traits;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\field\Entity\FieldConfig;
@@ -56,7 +57,7 @@ trait ReviveTestTrait {
    * @param bool $withInvocationMethodPerEntity
    *   Configures the field with invocation method per entity.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function setupReviveField($withInvocationMethodPerEntity = FALSE) {
     $field_storage = FieldStorageConfig::create([
