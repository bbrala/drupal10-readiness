modules/contrib/color_schema_ui/color_schema_ui.install
modules/contrib/color_schema_ui/color_schema_ui.module
modules/contrib/color_schema_ui/src/Command/ColorSchemaDrushCommands.php
modules/contrib/color_schema_ui/src/Controller/CompileController.php
modules/contrib/color_schema_ui/src/FilesystemAdapter.php
modules/contrib/color_schema_ui/src/Form/SettingsForm.php
modules/contrib/color_schema_ui/src/RequestContentHandler.php
modules/contrib/color_schema_ui/src/SCSSColorHandler.php
modules/contrib/color_schema_ui/src/SCSSCompiler.php
modules/contrib/color_schema_ui/src/SCSSCompilerFacade.php
modules/contrib/color_schema_ui/src/SCSSPhpCompilerFactory.php
modules/contrib/color_schema_ui/tests/src/Kernel/InstallTest.php
modules/contrib/color_schema_ui/tests/src/Unit/RequestContentHandlerTest.php
modules/contrib/color_schema_ui/tests/src/Unit/SCSSColorHandlerTest.php

6 files with changes
====================

1) modules/contrib/color_schema_ui/tests/src/Unit/SCSSColorHandlerTest.php:9

    ---------- begin diff ----------
@@ @@

   private $colorHandler;

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->colorHandler = new SCSSColorHandler();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/color_schema_ui/tests/src/Kernel/InstallTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\color_schema_ui\Kernel;

+use Drupal\color_schema_ui\SCSSCompilerFacade;
 use Drupal\color_schema_ui\FilesystemAdapter;
 use Drupal\KernelTests\KernelTestBase;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(['color_schema_ui']);
@@ @@

   public function testCompileOnInstall(): void {
     /**
-     * @var \Drupal\color_schema_ui\SCSSCompilerFacade $SCSSCompilerFacade
+     * @var SCSSCompilerFacade $SCSSCompilerFacade
      */
     $SCSSCompilerFacade = \Drupal::service('color_schema_ui.scss_compiler_facade');
     $SCSSCompilerFacade->initialCompileSCSSToFilesystem();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/color_schema_ui/src/SCSSCompilerFacade.php:49

    ---------- begin diff ----------
@@ @@
     $this->initialSCSSDestinationFilepath = DRUPAL_ROOT . '/' . $activeThemePath . '/source/sass/color_schema_ui.scss';

     if (!\file_exists($this->initialSCSSDestinationFilepath)) {
-      $this->initialSCSSDestinationFilepath = drupal_get_path('module', 'color_schema_ui') . '/templates/scss/color_schema_ui.scss';
+      $this->initialSCSSDestinationFilepath = \Drupal::service('extension.list.module')->getPath('color_schema_ui') . '/templates/scss/color_schema_ui.scss';
     }
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/color_schema_ui/src/Command/ColorSchemaDrushCommands.php:42

    ---------- begin diff ----------
@@ @@
    * @param String|null $color_schema_ui_scss Mirgrate from custom color_schema_ui template.
    *
    * @throws FileNotFoundException
-   * @throws \Drush\Exceptions\UserAbortException
+   * @throws UserAbortException
    * @throws \Exception
    */
   public function migrate($color_schema_ui_scss = null) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/color_schema_ui/color_schema_ui.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Asset\AttachedAssetsInterface;
 use Drupal\Core\Url;

 /**
@@ @@
 /**
  * Implements hook_css_alter().
  */
-function color_schema_ui_css_alter(&$css, \Drupal\Core\Asset\AttachedAssetsInterface $assets)
+function color_schema_ui_css_alter(&$css, AttachedAssetsInterface $assets)
 {
-  $pathToCSS = drupal_get_path('module', 'color_schema_ui') . '/../../../sites/default/files/color_schema_ui.css';
+  $pathToCSS = \Drupal::service('extension.list.module')->getPath('color_schema_ui') . '/../../../sites/default/files/color_schema_ui.css';

   if (!file_exists($pathToCSS)) {
     \Drupal::logger('color_schema_ui')->error('No color schema ui CSS file found in the following path: ' . $pathToCSS . ' Run `drush color_schema_ui:compile` (csuc) to generate it.');
@@ @@
   }

   if (!\Drupal::service('router.admin_context')->isAdminRoute()) {
-    $librariesKey = drupal_get_path('module', 'color_schema_ui') . '/../../../sites/default/files/color_schema_ui.css';
+    $librariesKey = \Drupal::service('extension.list.module')->getPath('color_schema_ui') . '/../../../sites/default/files/color_schema_ui.css';
     if (isset($css[$librariesKey])) {
       $css[$librariesKey]['group'] = 200;
     }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


6) modules/contrib/color_schema_ui/color_schema_ui.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\color_schema_ui\SCSSCompilerFacade;
+use Drupal\locale\Gettext;
+use Drupal\Component\Serialization\Yaml;
 /**
  * Implements hook_install().
  */
@@ @@
 function color_schema_ui_install()
 {
   /**
-   * @var \Drupal\color_schema_ui\SCSSCompilerFacade $SCSSCompilerFacade
+   * @var SCSSCompilerFacade $SCSSCompilerFacade
    */
   $SCSSCompilerFacade = \Drupal::service('color_schema_ui.scss_compiler_facade');
   $SCSSCompilerFacade->initialCompileSCSSToFilesystem();

   $file = new \stdClass();
-  $file->uri = drupal_get_path('module', 'color_schema_ui') . '/translations/de-de.po';
+  $file->uri = \Drupal::service('extension.list.module')->getPath('color_schema_ui') . '/translations/de-de.po';
   $file->langcode = 'de';

-  Drupal\locale\Gettext::fileToDatabase($file, [
+  Gettext::fileToDatabase($file, [
     'overwrite_options' => [
       'not_customized' => TRUE,
     ],
@@ @@
   ];

   /**
-   * @var \Drupal\Component\Serialization\Yaml $yamlSerializer
+   * @var Yaml $yamlSerializer
    */
   $yamlSerializer = \Drupal::service('serialization.yaml');
   $initialColorSchemaSettingsYaml = $yamlSerializer::encode($initialColorSchemaSettings);
@@ @@
 function color_schema_ui_uninstall()
 {
   /**
-   * @var \Drupal\color_schema_ui\SCSSCompilerFacade $SCSSCompilerFacade
+   * @var SCSSCompilerFacade $SCSSCompilerFacade
    */
   $SCSSCompilerFacade = \Drupal::service('color_schema_ui.scss_compiler_facade');
   $SCSSCompilerFacade->removeAssets();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

