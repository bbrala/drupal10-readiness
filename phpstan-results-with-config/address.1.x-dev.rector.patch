diff --git a/address.install b/address.install
index 5c06c85..f664434 100644
--- a/address.install
+++ b/address.install
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\address\Plugin\Field\FieldType\AddressItem;
+use Drupal\Core\Entity\Sql\DefaultTableMapping;
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 /**
  * @file
  * Requirements and update functions for the address module.
@@ -86,7 +89,7 @@ function address_update_8101() {
   $columns_to_add = ['given_name', 'additional_name', 'family_name'];
   $field_type_manager = \Drupal::service('plugin.manager.field.field_type');
   $address_definition = $field_type_manager->getDefinition('address');
-  /** @var \Drupal\address\Plugin\Field\FieldType\AddressItem $address_item_class */
+  /** @var AddressItem $address_item_class */
   $address_item_class = $address_definition['class'];
 
   $schema = \Drupal::database()->schema();
@@ -106,10 +109,10 @@ function address_update_8101() {
 
     $entity_type = $entity_type_manager->getDefinition($entity_type_id);
     $field_storage_definitions = $entity_field_manager->getFieldStorageDefinitions($entity_type_id);
-    /** @var Drupal\Core\Entity\Sql\DefaultTableMapping $table_mapping */
+    /** @var DefaultTableMapping $table_mapping */
     $table_mapping = $entity_storage->getTableMapping($field_storage_definitions);
     // Only need field storage definitions of address fields.
-    /** @var \Drupal\Core\Field\FieldStorageDefinitionInterface $field_storage_definition */
+    /** @var FieldStorageDefinitionInterface $field_storage_definition */
     foreach (array_intersect_key($field_storage_definitions, $field_map) as $field_storage_definition) {
       $field_name = $field_storage_definition->getName();
       try {
diff --git a/address.module b/address.module
index 92ed41b..8b599e7 100644
--- a/address.module
+++ b/address.module
@@ -57,7 +57,7 @@ function address_theme_suggestions_address_plain(array $variables) {
 /**
  * Updates the given entity's field for the RC1 changes.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity.
  * @param string $field_name
  *   The name of the field to update.
diff --git a/src/Element/Address.php b/src/Element/Address.php
index b8df3be..2ecb83b 100644
--- a/src/Element/Address.php
+++ b/src/Element/Address.php
@@ -142,7 +142,7 @@ class Address extends FormElement {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -228,7 +228,7 @@ class Address extends FormElement {
       AddressField::FAMILY_NAME => 25,
     ];
     $field_overrides = $element['#parsed_field_overrides'];
-    /** @var \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format */
+    /** @var AddressFormat $address_format */
     $address_format = \Drupal::service('address.address_format_repository')->get($value['country_code']);
     $required_fields = AddressFormatHelper::getRequiredFields($address_format, $field_overrides);
     $labels = LabelHelper::getFieldLabels($address_format);
@@ -289,7 +289,7 @@ class Address extends FormElement {
    *   The existing form element array.
    * @param array $value
    *   The address value, in $property_name => $value format.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format
+   * @param AddressFormat $address_format
    *   The address format.
    *
    * @return array
diff --git a/src/Element/Country.php b/src/Element/Country.php
index 001ada4..86dc3fc 100644
--- a/src/Element/Country.php
+++ b/src/Element/Country.php
@@ -46,7 +46,7 @@ class Country extends FormElement {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Element/Zone.php b/src/Element/Zone.php
index 1c177d2..d4f3254 100644
--- a/src/Element/Zone.php
+++ b/src/Element/Zone.php
@@ -98,7 +98,7 @@ class Zone extends FormElement {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -189,7 +189,7 @@ class Zone extends FormElement {
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function validateZone(array $element, FormStateInterface $form_state) {
@@ -249,7 +249,7 @@ class Zone extends FormElement {
    *
    * @param array $parents
    *   The element parents.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -265,7 +265,7 @@ class Zone extends FormElement {
    *
    * @param array $parents
    *   The element parents.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $element_state
    *   The element state.
diff --git a/src/Element/ZoneTerritory.php b/src/Element/ZoneTerritory.php
index 84ddceb..5d15eb6 100644
--- a/src/Element/ZoneTerritory.php
+++ b/src/Element/ZoneTerritory.php
@@ -111,7 +111,7 @@ class ZoneTerritory extends FormElement {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -152,7 +152,7 @@ class ZoneTerritory extends FormElement {
       $element['country_code']['#empty_value'] = '';
     }
     if (!empty($value['country_code'])) {
-      /** @var \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format */
+      /** @var AddressFormat $address_format */
       $address_format = \Drupal::service('address.address_format_repository')->get($value['country_code']);
       $element = static::buildSubdivisionElements($element, $value, $address_format);
       $element = static::buildPostalCodeElements($element, $value, $address_format);
@@ -168,7 +168,7 @@ class ZoneTerritory extends FormElement {
    *   The existing form element array.
    * @param array $value
    *   The element value.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format
+   * @param AddressFormat $address_format
    *   The address format for the selected country.
    *
    * @return array
@@ -225,7 +225,7 @@ class ZoneTerritory extends FormElement {
    *   The existing form element array.
    * @param array $value
    *   The element value.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format
+   * @param AddressFormat $address_format
    *   The address format for the selected country.
    *
    * @return array
@@ -279,7 +279,7 @@ class ZoneTerritory extends FormElement {
    *
    * @param array $element
    *   The existing form element array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validatePostalCodeElements(array $element, FormStateInterface $form_state) {
diff --git a/src/Event/AvailableCountriesEvent.php b/src/Event/AvailableCountriesEvent.php
index 208b324..2700e98 100644
--- a/src/Event/AvailableCountriesEvent.php
+++ b/src/Event/AvailableCountriesEvent.php
@@ -25,7 +25,7 @@ class AvailableCountriesEvent extends Event {
   /**
    * The field definition.
    *
-   * @var \Drupal\Core\Field\FieldDefinitionInterface
+   * @var FieldDefinitionInterface
    */
   protected $fieldDefinition;
 
@@ -34,7 +34,7 @@ class AvailableCountriesEvent extends Event {
    *
    * @param array $available_countries
    *   The available countries.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field definition.
    */
   public function __construct(array $available_countries, FieldDefinitionInterface $field_definition) {
@@ -68,7 +68,7 @@ class AvailableCountriesEvent extends Event {
   /**
    * Gets the field definition.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface
+   * @return FieldDefinitionInterface
    *   The field definition.
    */
   public function getFieldDefinition() {
diff --git a/src/Event/InitialValuesEvent.php b/src/Event/InitialValuesEvent.php
index a2205d3..15f04fe 100644
--- a/src/Event/InitialValuesEvent.php
+++ b/src/Event/InitialValuesEvent.php
@@ -25,7 +25,7 @@ class InitialValuesEvent extends Event {
   /**
    * The field definition.
    *
-   * @var \Drupal\Core\Field\FieldDefinitionInterface
+   * @var FieldDefinitionInterface
    */
   protected $fieldDefinition;
 
@@ -34,7 +34,7 @@ class InitialValuesEvent extends Event {
    *
    * @param array $initial_values
    *   The initial values.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field definition.
    */
   public function __construct(array $initial_values, FieldDefinitionInterface $field_definition) {
@@ -68,7 +68,7 @@ class InitialValuesEvent extends Event {
   /**
    * Gets the field definition.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface
+   * @return FieldDefinitionInterface
    *   The field definition.
    */
   public function getFieldDefinition() {
diff --git a/src/LabelHelper.php b/src/LabelHelper.php
index ed58639..d5192ad 100644
--- a/src/LabelHelper.php
+++ b/src/LabelHelper.php
@@ -45,7 +45,7 @@ class LabelHelper {
    * term than the field name (Company instead of Organization, Contact name
    * instead of Recipient, etc).
    *
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format
+   * @param AddressFormat $address_format
    *   The address format.
    *
    * @return string[]
diff --git a/src/Plugin/Field/FieldFormatter/AddressDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/AddressDefaultFormatter.php
index e9f2647..39dd51e 100644
--- a/src/Plugin/Field/FieldFormatter/AddressDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/AddressDefaultFormatter.php
@@ -36,21 +36,21 @@ class AddressDefaultFormatter extends FormatterBase implements ContainerFactoryP
   /**
    * The address format repository.
    *
-   * @var \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface
+   * @var AddressFormatRepositoryInterface
    */
   protected $addressFormatRepository;
 
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
   /**
    * The subdivision repository.
    *
-   * @var \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface
+   * @var SubdivisionRepositoryInterface
    */
   protected $subdivisionRepository;
 
@@ -61,7 +61,7 @@ class AddressDefaultFormatter extends FormatterBase implements ContainerFactoryP
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -71,11 +71,11 @@ class AddressDefaultFormatter extends FormatterBase implements ContainerFactoryP
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface $address_format_repository
+   * @param AddressFormatRepositoryInterface $address_format_repository
    *   The address format repository.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
-   * @param \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface $subdivision_repository
+   * @param SubdivisionRepositoryInterface $subdivision_repository
    *   The subdivision repository.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AddressFormatRepositoryInterface $address_format_repository, CountryRepositoryInterface $country_repository, SubdivisionRepositoryInterface $subdivision_repository) {
@@ -132,7 +132,7 @@ class AddressDefaultFormatter extends FormatterBase implements ContainerFactoryP
   /**
    * Builds a renderable array for a single address item.
    *
-   * @param \Drupal\address\AddressInterface $address
+   * @param AddressInterface $address
    *   The address.
    * @param string $langcode
    *   The language that should be used to render the field.
@@ -186,7 +186,7 @@ class AddressDefaultFormatter extends FormatterBase implements ContainerFactoryP
    *   The new rendered element.
    */
   public static function postRender($content, array $element) {
-    /** @var \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format */
+    /** @var AddressFormat $address_format */
     $address_format = $element['#address_format'];
     $locale = $element['#locale'];
     // Add the country to the bottom or the top of the format string,
@@ -243,9 +243,9 @@ class AddressDefaultFormatter extends FormatterBase implements ContainerFactoryP
   /**
    * Gets the address values used for rendering.
    *
-   * @param \Drupal\address\AddressInterface $address
+   * @param AddressInterface $address
    *   The address.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format
+   * @param AddressFormat $address_format
    *   The address format.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/AddressPlainFormatter.php b/src/Plugin/Field/FieldFormatter/AddressPlainFormatter.php
index d8bc74d..1b17428 100644
--- a/src/Plugin/Field/FieldFormatter/AddressPlainFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/AddressPlainFormatter.php
@@ -32,21 +32,21 @@ class AddressPlainFormatter extends FormatterBase implements ContainerFactoryPlu
   /**
    * The address format repository.
    *
-   * @var \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface
+   * @var AddressFormatRepositoryInterface
    */
   protected $addressFormatRepository;
 
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
   /**
    * The subdivision repository.
    *
-   * @var \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface
+   * @var SubdivisionRepositoryInterface
    */
   protected $subdivisionRepository;
 
@@ -57,7 +57,7 @@ class AddressPlainFormatter extends FormatterBase implements ContainerFactoryPlu
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -67,11 +67,11 @@ class AddressPlainFormatter extends FormatterBase implements ContainerFactoryPlu
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface $address_format_repository
+   * @param AddressFormatRepositoryInterface $address_format_repository
    *   The address format repository.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
-   * @param \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface $subdivision_repository
+   * @param SubdivisionRepositoryInterface $subdivision_repository
    *   The subdivision repository.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AddressFormatRepositoryInterface $address_format_repository, CountryRepositoryInterface $country_repository, SubdivisionRepositoryInterface $subdivision_repository) {
@@ -116,7 +116,7 @@ class AddressPlainFormatter extends FormatterBase implements ContainerFactoryPlu
   /**
    * Builds a renderable array for a single address item.
    *
-   * @param \Drupal\address\AddressInterface $address
+   * @param AddressInterface $address
    *   The address.
    * @param string $langcode
    *   The language that should be used to render the field.
@@ -162,9 +162,9 @@ class AddressPlainFormatter extends FormatterBase implements ContainerFactoryPlu
   /**
    * Gets the address values used for rendering.
    *
-   * @param \Drupal\address\AddressInterface $address
+   * @param AddressInterface $address
    *   The address.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormat $address_format
+   * @param AddressFormat $address_format
    *   The address format.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/CountryDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/CountryDefaultFormatter.php
index be1d9f4..308fa5a 100644
--- a/src/Plugin/Field/FieldFormatter/CountryDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/CountryDefaultFormatter.php
@@ -26,7 +26,7 @@ class CountryDefaultFormatter extends FormatterBase implements ContainerFactoryP
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
@@ -37,7 +37,7 @@ class CountryDefaultFormatter extends FormatterBase implements ContainerFactoryP
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -47,7 +47,7 @@ class CountryDefaultFormatter extends FormatterBase implements ContainerFactoryP
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, CountryRepositoryInterface $country_repository) {
diff --git a/src/Plugin/Field/FieldFormatter/ZoneDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/ZoneDefaultFormatter.php
index 6dcb697..ec0f69c 100644
--- a/src/Plugin/Field/FieldFormatter/ZoneDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ZoneDefaultFormatter.php
@@ -31,21 +31,21 @@ class ZoneDefaultFormatter extends FormatterBase implements ContainerFactoryPlug
   /**
    * The address format repository.
    *
-   * @var \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface
+   * @var AddressFormatRepositoryInterface
    */
   protected $addressFormatRepository;
 
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
   /**
    * The subdivision repository.
    *
-   * @var \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface
+   * @var SubdivisionRepositoryInterface
    */
   protected $subdivisionRepository;
 
@@ -56,7 +56,7 @@ class ZoneDefaultFormatter extends FormatterBase implements ContainerFactoryPlug
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -66,11 +66,11 @@ class ZoneDefaultFormatter extends FormatterBase implements ContainerFactoryPlug
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface $address_format_repository
+   * @param AddressFormatRepositoryInterface $address_format_repository
    *   The address format repository.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
-   * @param \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface $subdivision_repository
+   * @param SubdivisionRepositoryInterface $subdivision_repository
    *   The subdivision repository.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AddressFormatRepositoryInterface $address_format_repository, CountryRepositoryInterface $country_repository, SubdivisionRepositoryInterface $subdivision_repository) {
@@ -124,7 +124,7 @@ class ZoneDefaultFormatter extends FormatterBase implements ContainerFactoryPlug
   /**
    * Builds a renderable array for a single zone item.
    *
-   * @param \CommerceGuys\Addressing\Zone\Zone $zone
+   * @param Zone $zone
    *   The zone.
    * @param string $langcode
    *   The language that should be used to render the field.
diff --git a/src/Plugin/Field/FieldType/AddressItem.php b/src/Plugin/Field/FieldType/AddressItem.php
index 518ac71..3b07d38 100644
--- a/src/Plugin/Field/FieldType/AddressItem.php
+++ b/src/Plugin/Field/FieldType/AddressItem.php
@@ -229,7 +229,7 @@ class AddressItem extends FieldItemBase implements AddressInterface {
    *
    * @param array $element
    *   The field overrides form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the entire form.
    */
   public static function fieldOverridesValidate(array $element, FormStateInterface $form_state) {
diff --git a/src/Plugin/Field/FieldType/AvailableCountriesTrait.php b/src/Plugin/Field/FieldType/AvailableCountriesTrait.php
index f787654..cb3924f 100644
--- a/src/Plugin/Field/FieldType/AvailableCountriesTrait.php
+++ b/src/Plugin/Field/FieldType/AvailableCountriesTrait.php
@@ -35,7 +35,7 @@ trait AvailableCountriesTrait {
    *
    * @param array $form
    *   The form where the settings form is being included in.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the (entire) configuration form.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldWidget/AddressDefaultWidget.php b/src/Plugin/Field/FieldWidget/AddressDefaultWidget.php
index 6f4e916..c96c7f3 100644
--- a/src/Plugin/Field/FieldWidget/AddressDefaultWidget.php
+++ b/src/Plugin/Field/FieldWidget/AddressDefaultWidget.php
@@ -31,21 +31,21 @@ class AddressDefaultWidget extends WidgetBase implements ContainerFactoryPluginI
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -56,17 +56,17 @@ class AddressDefaultWidget extends WidgetBase implements ContainerFactoryPluginI
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, CountryRepositoryInterface $country_repository, EventDispatcherInterface $event_dispatcher, ConfigFactoryInterface $config_factory) {
diff --git a/src/Plugin/Field/FieldWidget/CountryDefaultWidget.php b/src/Plugin/Field/FieldWidget/CountryDefaultWidget.php
index 6e9f978..c0a157b 100644
--- a/src/Plugin/Field/FieldWidget/CountryDefaultWidget.php
+++ b/src/Plugin/Field/FieldWidget/CountryDefaultWidget.php
@@ -27,7 +27,7 @@ class CountryDefaultWidget extends WidgetBase implements ContainerFactoryPluginI
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
@@ -38,13 +38,13 @@ class CountryDefaultWidget extends WidgetBase implements ContainerFactoryPluginI
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, CountryRepositoryInterface $country_repository) {
diff --git a/src/Plugin/Field/FieldWidget/ZoneDefaultWidget.php b/src/Plugin/Field/FieldWidget/ZoneDefaultWidget.php
index 66d3e14..8c017d0 100644
--- a/src/Plugin/Field/FieldWidget/ZoneDefaultWidget.php
+++ b/src/Plugin/Field/FieldWidget/ZoneDefaultWidget.php
@@ -64,7 +64,7 @@ class ZoneDefaultWidget extends WidgetBase {
     $item = $items[$delta];
     $value = [];
     if (!$item->isEmpty()) {
-      /** @var \CommerceGuys\Addressing\Zone\Zone $zone */
+      /** @var Zone $zone */
       $zone = $item->value;
       $value = [
         'label' => $zone->getLabel(),
diff --git a/src/Plugin/Validation/Constraint/CountryConstraintValidator.php b/src/Plugin/Validation/Constraint/CountryConstraintValidator.php
index 838d9ce..f6262fc 100644
--- a/src/Plugin/Validation/Constraint/CountryConstraintValidator.php
+++ b/src/Plugin/Validation/Constraint/CountryConstraintValidator.php
@@ -16,14 +16,14 @@ class CountryConstraintValidator extends ConstraintValidator implements Containe
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
   /**
    * Constructs a new CountryConstraintValidator object.
    *
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
    */
   public function __construct(CountryRepositoryInterface $country_repository) {
diff --git a/src/Plugin/views/field/Country.php b/src/Plugin/views/field/Country.php
index d736a10..fb51f29 100644
--- a/src/Plugin/views/field/Country.php
+++ b/src/Plugin/views/field/Country.php
@@ -20,7 +20,7 @@ class Country extends FieldPluginBase {
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
@@ -33,7 +33,7 @@ class Country extends FieldPluginBase {
    *   The id of the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CountryRepositoryInterface $country_repository) {
diff --git a/src/Plugin/views/field/Subdivision.php b/src/Plugin/views/field/Subdivision.php
index 503d76b..7a9e0af 100644
--- a/src/Plugin/views/field/Subdivision.php
+++ b/src/Plugin/views/field/Subdivision.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\address\Plugin\views\field;
 
+use Drupal\address\AddressInterface;
 use CommerceGuys\Addressing\Locale;
 use CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -21,7 +22,7 @@ class Subdivision extends FieldPluginBase {
   /**
    * The subdivision repository.
    *
-   * @var \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface
+   * @var SubdivisionRepositoryInterface
    */
   protected $subdivisionRepository;
 
@@ -34,7 +35,7 @@ class Subdivision extends FieldPluginBase {
    *   The id of the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface $subdivision_repository
+   * @param SubdivisionRepositoryInterface $subdivision_repository
    *   The subdivision repository.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, SubdivisionRepositoryInterface $subdivision_repository) {
@@ -87,7 +88,7 @@ class Subdivision extends FieldPluginBase {
     }
 
     $entity = $this->getEntity($values);
-    /** @var \Drupal\address\AddressInterface $address */
+    /** @var AddressInterface $address */
     $address = $entity->{$this->definition['field_name']}->first();
     switch ($this->definition['property']) {
       case 'administrative_area':
diff --git a/src/Plugin/views/filter/AdministrativeArea.php b/src/Plugin/views/filter/AdministrativeArea.php
index 7d7e00e..c91d806 100644
--- a/src/Plugin/views/filter/AdministrativeArea.php
+++ b/src/Plugin/views/filter/AdministrativeArea.php
@@ -26,21 +26,21 @@ class AdministrativeArea extends CountryAwareInOperatorBase {
   /**
    * The address format repository.
    *
-   * @var \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface
+   * @var AddressFormatRepositoryInterface
    */
   protected $addressFormatRepository;
 
   /**
    * The subdivision repository.
    *
-   * @var \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface
+   * @var SubdivisionRepositoryInterface
    */
   protected $subdivisionRepository;
 
   /**
    * If we're in the middle of building a form, its current state.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected $formState;
 
@@ -60,15 +60,15 @@ class AdministrativeArea extends CountryAwareInOperatorBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface $address_format_repository
+   * @param AddressFormatRepositoryInterface $address_format_repository
    *   The address format repository.
-   * @param \CommerceGuys\Addressing\Subdivision\SubdivisionRepositoryInterface $subdivision_repository
+   * @param SubdivisionRepositoryInterface $subdivision_repository
    *   The subdivision repository.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CountryRepositoryInterface $country_repository, EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, AddressFormatRepositoryInterface $address_format_repository, SubdivisionRepositoryInterface $subdivision_repository) {
diff --git a/src/Plugin/views/filter/CountryAwareInOperatorBase.php b/src/Plugin/views/filter/CountryAwareInOperatorBase.php
index c6401a9..faeb226 100644
--- a/src/Plugin/views/filter/CountryAwareInOperatorBase.php
+++ b/src/Plugin/views/filter/CountryAwareInOperatorBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\address\Plugin\views\filter;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use CommerceGuys\Addressing\Country\CountryRepositoryInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -17,21 +18,21 @@ abstract class CountryAwareInOperatorBase extends InOperator {
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
@@ -44,11 +45,11 @@ abstract class CountryAwareInOperatorBase extends InOperator {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CountryRepositoryInterface $country_repository, EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager) {
@@ -95,7 +96,7 @@ abstract class CountryAwareInOperatorBase extends InOperator {
   /**
    * Gets the list of available countries for the current entity field.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type, defaults to the current type for this filter.
    * @param string $field_name
    *   The field name, defaults to the current field name for this filter.
@@ -121,7 +122,7 @@ abstract class CountryAwareInOperatorBase extends InOperator {
       if ($bundle_key = $entity_type->getKey('bundle')) {
         $values[$bundle_key] = $bundle;
       }
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       $entity = $storage->create($values);
       if ($entity->hasField($field_name)) {
         $countries_by_bundle[$bundle] = $entity->get($field_name)->appendItem()->getAvailableCountries();
@@ -156,7 +157,7 @@ abstract class CountryAwareInOperatorBase extends InOperator {
    * If the view has a non-exposed bundle filter, the bundles are taken from
    * there. Otherwise, the field's bundles are used.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The current entity type.
    * @param string $field_name
    *   The current field name.
diff --git a/src/Plugin/views/sort/Country.php b/src/Plugin/views/sort/Country.php
index f4c582f..95ac0b5 100644
--- a/src/Plugin/views/sort/Country.php
+++ b/src/Plugin/views/sort/Country.php
@@ -33,7 +33,7 @@ class Country extends SortPluginBase {
   /**
    * The country repository.
    *
-   * @var \CommerceGuys\Addressing\Country\CountryRepositoryInterface
+   * @var CountryRepositoryInterface
    */
   protected $countryRepository;
 
@@ -53,9 +53,9 @@ class Country extends SortPluginBase {
    *   The id of the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \CommerceGuys\Addressing\Country\CountryRepositoryInterface $country_repository
+   * @param CountryRepositoryInterface $country_repository
    *   The country repository.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CountryRepositoryInterface $country_repository, LanguageManagerInterface $language_manager) {
diff --git a/src/Repository/AddressFormatRepository.php b/src/Repository/AddressFormatRepository.php
index 1fd6bfc..389b0aa 100644
--- a/src/Repository/AddressFormatRepository.php
+++ b/src/Repository/AddressFormatRepository.php
@@ -18,14 +18,14 @@ class AddressFormatRepository extends ExternalAddressFormatRepository {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Creates an AddressFormatRepository instance.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
diff --git a/src/Repository/CountryRepository.php b/src/Repository/CountryRepository.php
index 30ae318..d4c610e 100644
--- a/src/Repository/CountryRepository.php
+++ b/src/Repository/CountryRepository.php
@@ -16,16 +16,16 @@ class CountryRepository extends ExternalCountryRepository {
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Creates a CountryRepository instance.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(CacheBackendInterface $cache, LanguageManagerInterface $language_manager) {
diff --git a/src/Repository/SubdivisionRepository.php b/src/Repository/SubdivisionRepository.php
index 6dd92d0..83fed33 100644
--- a/src/Repository/SubdivisionRepository.php
+++ b/src/Repository/SubdivisionRepository.php
@@ -19,25 +19,25 @@ class SubdivisionRepository extends ExternalSubdivisionRepository {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Creates a SubdivisionRepository instance.
    *
-   * @param \CommerceGuys\Addressing\AddressFormat\AddressFormatRepositoryInterface $address_format_repository
+   * @param AddressFormatRepositoryInterface $address_format_repository
    *   The address format repository.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend.
    */
   public function __construct(AddressFormatRepositoryInterface $address_format_repository, EventDispatcherInterface $event_dispatcher, CacheBackendInterface $cache) {
diff --git a/tests/modules/address_test/src/EventSubscriber/AddressTestEventSubscriber.php b/tests/modules/address_test/src/EventSubscriber/AddressTestEventSubscriber.php
index 863510c..37fbd9b 100644
--- a/tests/modules/address_test/src/EventSubscriber/AddressTestEventSubscriber.php
+++ b/tests/modules/address_test/src/EventSubscriber/AddressTestEventSubscriber.php
@@ -24,7 +24,7 @@ class AddressTestEventSubscriber implements EventSubscriberInterface {
   /**
    * Alters the available countries.
    *
-   * @param \Drupal\address\Event\AvailableCountriesEvent $event
+   * @param AvailableCountriesEvent $event
    *   The available countries event.
    */
   public function onAvailableCountries(AvailableCountriesEvent $event) {
diff --git a/tests/modules/address_test/src/EventSubscriber/GreatBritainEventSubscriber.php b/tests/modules/address_test/src/EventSubscriber/GreatBritainEventSubscriber.php
index af002e3..689fbde 100644
--- a/tests/modules/address_test/src/EventSubscriber/GreatBritainEventSubscriber.php
+++ b/tests/modules/address_test/src/EventSubscriber/GreatBritainEventSubscriber.php
@@ -28,7 +28,7 @@ class GreatBritainEventSubscriber implements EventSubscriberInterface {
   /**
    * Alters the address format for Great Britain.
    *
-   * @param \Drupal\address\Event\AddressFormatEvent $event
+   * @param AddressFormatEvent $event
    *   The address format event.
    */
   public function onAddressFormat(AddressFormatEvent $event) {
@@ -47,7 +47,7 @@ class GreatBritainEventSubscriber implements EventSubscriberInterface {
    * Note: Provides just the Welsh counties. A real subscriber would include
    * the full list, sourced from the CLDR "Territory Subdivisions" listing.
    *
-   * @param \Drupal\address\Event\SubdivisionsEvent $event
+   * @param SubdivisionsEvent $event
    *   The subdivisions event.
    */
   public function onSubdivisions(SubdivisionsEvent $event) {
diff --git a/tests/src/Functional/Views/AdministrativeAreaFilterTest.php b/tests/src/Functional/Views/AdministrativeAreaFilterTest.php
index d9a2076..822d0b4 100644
--- a/tests/src/Functional/Views/AdministrativeAreaFilterTest.php
+++ b/tests/src/Functional/Views/AdministrativeAreaFilterTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\address\Functional\Views;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\views\Views;
 
@@ -31,7 +32,7 @@ class AdministrativeAreaFilterTest extends BrowserTestBase {
   /**
    * A simple user with 'access content' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
diff --git a/tests/src/Functional/Views/CountrySortTest.php b/tests/src/Functional/Views/CountrySortTest.php
index b6bc1ee..ab7e8fb 100644
--- a/tests/src/Functional/Views/CountrySortTest.php
+++ b/tests/src/Functional/Views/CountrySortTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\address\Functional\Views;
 
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\views\Views;
 
@@ -31,14 +33,14 @@ class CountrySortTest extends BrowserTestBase {
   /**
    * A regular user with 'access content' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * The test nodes.
    *
-   * @var \Drupal\node\NodeInterface[]
+   * @var NodeInterface[]
    */
   protected $nodes;
 
