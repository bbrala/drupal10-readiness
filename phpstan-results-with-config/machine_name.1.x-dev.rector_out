modules/contrib/machine_name/src/Plugin/Field/FieldFormatter/MachineName.php
modules/contrib/machine_name/src/Plugin/Field/FieldType/MachineName.php
modules/contrib/machine_name/src/Plugin/Field/FieldWidget/MachineName.php
modules/contrib/machine_name/src/Plugin/Validation/Constraint/MachineNameUniqueConstraint.php
modules/contrib/machine_name/src/Plugin/Validation/Constraint/MachineNameUniqueValidator.php
modules/contrib/machine_name/tests/src/Kernel/MachineNameFormWidgetTest.php
modules/contrib/machine_name/tests/src/Kernel/MachineNameItemTest.php
modules/contrib/machine_name/tests/src/Kernel/MachineNameUniqueValueTest.php

4 files with changes
====================

1) modules/contrib/machine_name/tests/src/Kernel/MachineNameUniqueValueTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\machine_name\Kernel;

+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\Core\Entity\EntityBase;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
   /**
    * The form display of the entity.
    *
-   * @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface
+   * @var EntityFormDisplayInterface
    */
   protected $formDisplay;

@@ @@
   /**
    * The base entity with already set value.
    *
-   * @var \Drupal\Core\Entity\EntityBase
+   * @var EntityBase
    */
   protected $baseEntity;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/machine_name/tests/src/Kernel/MachineNameItemTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Sets the test up.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create a machine_name field storage and field for validation.
     FieldStorageConfig::create([
@@ @@
     $entity = EntityTest::load($id);
     $this->assertTrue($entity->field_test instanceof FieldItemListInterface, 'Field implements interface.');
     $this->assertTrue($entity->field_test[0] instanceof FieldItemInterface, 'Field item implements interface.');
-    $this->assertEqual($entity->field_test->value, $value);
-    $this->assertEqual($entity->field_test[0]->value, $value);
+    $this->assertEquals($entity->field_test->value, $value);
+    $this->assertEquals($entity->field_test[0]->value, $value);

     // Verify changing the field value.
     $new_value = 'changed_machine_name';
     $entity->field_test->value = $new_value;
-    $this->assertEqual($entity->field_test->value, $new_value);
+    $this->assertEquals($entity->field_test->value, $new_value);

     // Read changed entity and assert changed values.
     $entity->save();
     $entity = EntityTest::load($id);
-    $this->assertEqual($entity->field_test->value, $new_value);
+    $this->assertEquals($entity->field_test->value, $new_value);

     // Test sample item generation.
     $entity = EntityTest::create();
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/machine_name/src/Plugin/Validation/Constraint/MachineNameUniqueValidator.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The entity form display storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   private $entityFormDisplayStorage;

@@ @@
   /**
    * MachineNameUniqueValidator constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_form_display_storage
+   * @param EntityStorageInterface $entity_form_display_storage
    *   Entity form display storage.
    */
   public function __construct(EntityStorageInterface $entity_form_display_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/machine_name/src/Plugin/Field/FieldFormatter/MachineName.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

