modules/contrib/graphql_twig/graphql_twig.module
modules/contrib/graphql_twig/graphql_twig.post_update.php
modules/contrib/graphql_twig/src/Controller/ArgumentResolver.php
modules/contrib/graphql_twig/src/Controller/RouteController.php
modules/contrib/graphql_twig/src/Form/GraphQLTwigSettingsForm.php
modules/contrib/graphql_twig/src/GraphQLFragmentNode.php
modules/contrib/graphql_twig/src/GraphQLNode.php
modules/contrib/graphql_twig/src/GraphQLNodeVisitor.php
modules/contrib/graphql_twig/src/GraphQLTemplateTrait.php
modules/contrib/graphql_twig/src/GraphQLTokenParser.php
modules/contrib/graphql_twig/src/GraphQLTwigEnvironment.php
modules/contrib/graphql_twig/src/GraphQLTwigExtension.php
modules/contrib/graphql_twig/src/GraphqlTwigServiceProvider.php
modules/contrib/graphql_twig/src/Plugin/Block/GraphQLTwigBlock.php
modules/contrib/graphql_twig/src/Plugin/Deriver/GraphQLTwigBlockDeriver.php
modules/contrib/graphql_twig/src/Plugin/GraphQL/Fields/CurrentUrl.php
modules/contrib/graphql_twig/src/Routing/GraphQLTwigRouter.php
modules/contrib/graphql_twig/src/Template/Loader/Loader.php
modules/contrib/graphql_twig/tests/src/Kernel/BlockTest.php
modules/contrib/graphql_twig/tests/src/Kernel/EntityRenderTest.php
modules/contrib/graphql_twig/tests/src/Kernel/RouteTest.php
modules/contrib/graphql_twig/tests/src/Kernel/ThemeTest.php
modules/contrib/graphql_twig/tests/src/Traits/ThemeTestTrait.php
modules/contrib/graphql_twig/tests/src/Unit/GraphQLTwigExtensionTest.php
modules/contrib/graphql_twig/tests/themes/graphql_twig_test_theme/graphql_twig_test_theme.theme

16 files with changes
=====================

1) modules/contrib/graphql_twig/tests/src/Unit/GraphQLTwigExtensionTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->twig = new \Twig_Environment(new \Twig_Loader_Array([
       'query' => '{% graphql %}query ($arg: String!) { foo(id: [1, 2, 3], search: "test") { bar } }{% endgraphql %}',
       'simple' => '{% graphql %}query a { foo }{% endgraphql %}',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/graphql_twig/tests/src/Traits/ThemeTestTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\graphql_twig\Traits;

+use Prophecy\Prophecy\ObjectProphecy;
+use Drupal\Core\Extension\ThemeInstaller;
+use Drupal\Core\Theme\ThemeInitialization;
+use Drupal\Core\Theme\ThemeManager;
 use Drupal\Core\Session\AccountProxy;
 use Drupal\graphql\GraphQL\Execution\QueryProcessor;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
   /**
    * A query processor prophecy.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $processor;

@@ @@

       $themeName = 'graphql_twig_test_theme';

-      /** @var \Drupal\Core\Extension\ThemeInstaller $themeInstaller */
+      /** @var ThemeInstaller $themeInstaller */
       $themeInstaller = $this->container->get('theme_installer');
-      /** @var \Drupal\Core\Theme\ThemeInitialization $themeInitialization */
+      /** @var ThemeInitialization $themeInitialization */
       $themeInitialization = $this->container->get('theme.initialization');
-      /** @var \Drupal\Core\Theme\ThemeManager $themeManager */
+      /** @var ThemeManager $themeManager */
       $themeManager = $this->container->get('theme.manager');

       $themeInstaller->install([$themeName]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/graphql_twig/tests/src/Kernel/ThemeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\graphql_twig\Kernel;

+use Drupal\Core\Cache\Context\CacheContextsManager;
+use Prophecy\Prophecy\MethodProphecy;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\graphql\GraphQL\Execution\QueryResult;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
   /**
    * The cache contexts manager.
    *
-   * @var \Drupal\Core\Cache\Context\CacheContextsManager
+   * @var CacheContextsManager
    */
   protected $contextManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupThemeTest();
   }
@@ @@
    * Test query assembly.
    */
   public function testQueryAssembly() {
-    /** @var \Prophecy\Prophecy\MethodProphecy $process */
+    /** @var MethodProphecy $process */
     $this->processor
       ->processQuery(Argument::any(), Argument::that(function (OperationParams $params) {
         return $params->query === $this->getQuery('garage.gql');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/graphql_twig/tests/src/Kernel/RouteTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\graphql_twig\Kernel;

+use Drupal\Core\Extension\ThemeInstaller;
+use Drupal\Core\Theme\ThemeInitialization;
+use Drupal\Core\Theme\ThemeManager;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 use Symfony\Component\HttpFoundation\Request;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $themeName = 'graphql_twig_test_theme';

-    /** @var \Drupal\Core\Extension\ThemeInstaller $themeInstaller */
+    /** @var ThemeInstaller $themeInstaller */
     $themeInstaller = $this->container->get('theme_installer');
-    /** @var \Drupal\Core\Theme\ThemeInitialization $themeInitialization */
+    /** @var ThemeInitialization $themeInitialization */
     $themeInitialization = $this->container->get('theme.initialization');
-    /** @var \Drupal\Core\Theme\ThemeManager $themeManager */
+    /** @var ThemeManager $themeManager */
     $themeManager = $this->container->get('theme.manager');

     $themeInstaller->install([$themeName]);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/graphql_twig/tests/src/Kernel/EntityRenderTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupThemeTest();
     $this->installConfig(['system', 'user', 'node']);
@@ @@
     $viewBuilder = $this->container->get('entity_type.manager')->getViewBuilder('node');
     $build = $viewBuilder->view($node);
     $result = $this->render($build);
-    $this->assertContains('<h1>Test</h1>', $result);
+    $this->assertStringContainsString('<h1>Test</h1>', $result);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/graphql_twig/tests/src/Kernel/BlockTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\graphql_twig\Kernel;

+use Drupal\Core\Extension\ThemeInstaller;
+use Drupal\Core\Theme\ThemeInitialization;
+use Drupal\Core\Theme\ThemeManager;
 use Drupal\Tests\block\Traits\BlockCreationTrait;
 use Drupal\Tests\graphql\Kernel\GraphQLTestBase;
 use Symfony\Component\HttpFoundation\Request;
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['graphql_twig']);

     $themeName = 'graphql_twig_test_theme';

-    /** @var \Drupal\Core\Extension\ThemeInstaller $themeInstaller */
+    /** @var ThemeInstaller $themeInstaller */
     $themeInstaller = $this->container->get('theme_installer');
-    /** @var \Drupal\Core\Theme\ThemeInitialization $themeInitialization */
+    /** @var ThemeInitialization $themeInitialization */
     $themeInitialization = $this->container->get('theme.initialization');
-    /** @var \Drupal\Core\Theme\ThemeManager $themeManager */
+    /** @var ThemeManager $themeManager */
     $themeManager = $this->container->get('theme.manager');

     $themeInstaller->install([$themeName]);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/graphql_twig/src/Template/Loader/Loader.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Provides a high level access to the active theme and methods to use it.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * Defines an interface for cache implementations.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;

@@ @@
   /**
    * Provides an interface for helpers that operate on files and stream wrappers.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Provides a list of available themes.
    *
-   * @var \Drupal\Core\Extension\ThemeExtensionList
+   * @var ThemeExtensionList
    */
   protected $themeExtensionList;

@@ @@
   /**
    * The logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/graphql_twig/src/Routing/GraphQLTwigRouter.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler to collect routes from theme info files.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * GraphQLTwigRouter constructor.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler
+   * @param ThemeHandlerInterface $themeHandler
    *   The theme handler to collect routes from theme info files.
    */
   public function __construct(ThemeHandlerInterface $themeHandler) {
@@ @@
   /**
    * Generate a list of routes based on theme info files.
    *
-   * @return \Symfony\Component\Routing\Route[]
+   * @return Route[]
    *   A list of routes defined by themes.
    */
   public function routes() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/graphql_twig/src/Plugin/Deriver/GraphQLTwigBlockDeriver.php:14

    ---------- begin diff ----------
@@ @@
   use StringTranslationTrait;

   /**
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/graphql_twig/src/GraphQLTwigEnvironment.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * A GraphQL query processor.
    *
-   * @var \Drupal\graphql\GraphQL\Execution\QueryProcessor
+   * @var QueryProcessor
    */
   protected $queryProcessor;

@@ @@
   /**
    * Retrieve the query processor.
    *
-   * @return \Drupal\graphql\GraphQL\Execution\QueryProcessor
+   * @return QueryProcessor
    *   The GraphQL query processor.
    */
   public function getQueryProcessor() {
@@ @@
   /**
    * The renderer instance.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Retrieve the renderer instance.
    *
-   * @return \Drupal\Core\Render\RendererInterface
+   * @return RendererInterface
    *   The renderer instance.
    */
   public function getRenderer() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/graphql_twig/src/GraphQLTemplateTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_twig;

+use Drupal\Core\Template\Attribute;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\graphql\GraphQL\Execution\QueryProcessor;
 use GraphQL\Server\OperationParams;
@@ @@
   /**
    * The GraphQL query processor.
    *
-   * @var \Drupal\graphql\GraphQL\Execution\QueryProcessor
+   * @var QueryProcessor
    */
   protected $queryProcessor;

@@ @@
   /**
    * Inject the query processor.
    *
-   * @param \Drupal\graphql\GraphQL\Execution\QueryProcessor $queryProcessor
+   * @param QueryProcessor $queryProcessor
    *   The query processor instance.
    */
   public function setQueryProcessor(QueryProcessor $queryProcessor) {
@@ @@
         ];

         // Add the debug parent class to the element.
-        /** @var \Drupal\Core\Template\Attribute $attributes */
+        /** @var Attribute $attributes */
         $attributes = $context['attributes'];
         $attributes->addClass('graphql-twig-debug-parent');
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/graphql_twig/src/GraphQLNode.php:69

    ---------- begin diff ----------
@@ @@
     if ($this->query) {
       $document = Parser::parse($this->query);

-      /** @var \GraphQL\Language\AST\OperationDefinitionNode[] $operations */
+      /** @var OperationDefinitionNode[] $operations */
       $operations = array_filter(iterator_to_array($document->definitions->getIterator()), function (DefinitionNode $node) {
         return $node instanceof OperationDefinitionNode;
       });
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/graphql_twig/src/GraphQLFragmentNode.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_twig;

+use GraphQL\Error\SyntaxError;
 /**
  * A Twig node for collecting GraphQL query fragments in twig templates.
  */
@@ @@
    * @param string $fragment
    *   The query fragment.
    *
-   * @throws \GraphQL\Error\SyntaxError
+   * @throws SyntaxError
    *   Thrown if the GraphQL query is not valid.
    */
   public function __construct($fragment) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/graphql_twig/src/Form/GraphQLTwigSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_twig\Form;

+use Drupal\Core\Path\PathValidatorInterface;
+use Drupal\Core\Routing\RequestContext;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
   /**
    * Constructs a SiteInformationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    * @param \Drupal\Core\Path\AliasManagerInterface $alias_manager
    *   The path alias manager.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Routing\RequestContext $request_context
+   * @param RequestContext $request_context
    *   The request context.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/graphql_twig/src/Controller/RouteController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_twig\Controller;

+use Drupal\Component\Render\MarkupInterface;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Template\TwigEnvironment;
 use Drupal\graphql\GraphQL\Execution\QueryProcessor;
@@ @@
 class RouteController extends ControllerBase {

   /**
-   * @var \Drupal\graphql\GraphQL\Execution\QueryProcessor
+   * @var QueryProcessor
    */
   protected $queryProcessor;

   /**
-   * @var \Drupal\Core\Template\TwigEnvironment
+   * @var TwigEnvironment
    */
   protected $twig;

@@ @@
   /**
    * RouteController constructor.
    *
-   * @param \Drupal\graphql\GraphQL\Execution\QueryProcessor $processor
+   * @param QueryProcessor $processor
    *   A GraphQL query processor.
-   * @param \Drupal\Core\Template\TwigEnvironment $twig
+   * @param TwigEnvironment $twig
    *   A Twig environment.
    */
   public function __construct(QueryProcessor $processor, TwigEnvironment $twig) {
@@ @@
    * @param $_graphql_title_query
    * @param $_graphql_arguments
    *
-   * @return \Drupal\Component\Render\MarkupInterface|\Drupal\Core\StringTranslation\TranslatableMarkup|string
+   * @return MarkupInterface|TranslatableMarkup|string
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function title($_graphql_title, $_graphql_title_query, $_graphql_arguments) {
     if (!$_graphql_title) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/graphql_twig/graphql_twig.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Extension\ThemeHandlerInterface;
 /**
  * @file
  * graphql_twig.module
@@ @@
  * Auto-generate theme hooks for graphql pages and blocks.
  */
 function graphql_twig_theme($existing, $type, $theme, $path) {
-  /** @var \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler */
+  /** @var ThemeHandlerInterface $themeHandler */
   $themeHandler = \Drupal::service('theme_handler');
   $theme = [];
   foreach ($themeHandler->listInfo() as $themeName => $info) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 16 files have been changed by Rector                                      

