modules/contrib/attribution/attribution.module
modules/contrib/attribution/src/AttributionLicenseInterface.php
modules/contrib/attribution/src/AttributionLicenseListBuilder.php
modules/contrib/attribution/src/Entity/AttributionLicense.php
modules/contrib/attribution/src/Form/AttributionLicenseForm.php
modules/contrib/attribution/src/Form/AttributionLicensesForm.php
modules/contrib/attribution/src/Plugin/Block/AttributionBlock.php
modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionCreativeCommonsFormatter.php
modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionCreativeCommonsIconsFormatter.php
modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionCreativeCommonsRefinedFormatter.php
modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionHtmlFormatter.php
modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionPlainFormatter.php
modules/contrib/attribution/src/Plugin/Field/FieldType/AttributionItem.php
modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionAuthorLicenseWidget.php
modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionLicenseWidget.php
modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionSourceAuthorLicenseWidget.php
modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionSourceLicenseWidget.php

13 files with changes
=====================

1) modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionSourceLicenseWidget.php:49

    ---------- begin diff ----------
@@ @@
       '#placeholder' => $this->t('https://example.org/source'),
     ];

-    /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+    /** @var AttributionLicense $license */
     $licenses = AttributionLicense::loadMultiple();
     foreach ($licenses as $license) {
       $options[$license->getId()] = $license->getName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionSourceAuthorLicenseWidget.php:69

    ---------- begin diff ----------
@@ @@
       '#placeholder' => $this->t('https://author.example.org'),
     ];

-    /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+    /** @var AttributionLicense $license */
     $licenses = AttributionLicense::loadMultiple();
     foreach ($licenses as $license) {
       $options[$license->getId()] = $license->getName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionLicenseWidget.php:29

    ---------- begin diff ----------
@@ @@
       '#open' => TRUE,
     ];

-    /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+    /** @var AttributionLicense $license */
     $licenses = AttributionLicense::loadMultiple();
     foreach ($licenses as $license) {
       $options[$license->getId()] = $license->getName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/attribution/src/Plugin/Field/FieldWidget/AttributionAuthorLicenseWidget.php:49

    ---------- begin diff ----------
@@ @@
       '#placeholder' => $this->t('https://author.example.org'),
     ];

-    /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+    /** @var AttributionLicense $license */
     $licenses = AttributionLicense::loadMultiple();
     foreach ($licenses as $license) {
       $options[$license->getId()] = $license->getName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/attribution/src/Plugin/Field/FieldType/AttributionItem.php:36

    ---------- begin diff ----------
@@ @@
    */
   public function fieldSettingsForm(array $form, FormStateInterface $form_state) {
     $options = [];
-    /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+    /** @var AttributionLicense $license */
     $licenses = AttributionLicense::loadMultiple();
     foreach ($licenses as $license) {
       $options[$license->getId()] = $license->getName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionPlainFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\attribution\Plugin\Field\FieldFormatter;

+use Drupal\attribution\Plugin\Field\FieldType\AttributionItem;
 use Drupal\attribution\Entity\AttributionLicense;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $element = [];

-    /** @var \Drupal\attribution\Plugin\Field\FieldType\AttributionItem $item */
+    /** @var AttributionItem $item */
     foreach ($items as $delta => $item) {
       $values = $item->getValue();
-      /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+      /** @var AttributionLicense $license */
       $license = AttributionLicense::load($values['license']);
       $element[$delta] = [
         '#theme' => 'attribution_plain',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionHtmlFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\attribution\Plugin\Field\FieldFormatter;

+use Drupal\attribution\Plugin\Field\FieldType\AttributionItem;
 use Drupal\attribution\Entity\AttributionLicense;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $element = [];

-    /** @var \Drupal\attribution\Plugin\Field\FieldType\AttributionItem $item */
+    /** @var AttributionItem $item */
     foreach ($items as $delta => $item) {
       $values = $item->getValue();
-      /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+      /** @var AttributionLicense $license */
       $license = AttributionLicense::load($values['license']);
       $element[$delta] = [
         '#theme' => 'attribution_html',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionCreativeCommonsRefinedFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\attribution\Plugin\Field\FieldFormatter;

+use Drupal\attribution\Plugin\Field\FieldType\AttributionItem;
 use Drupal\attribution\Entity\AttributionLicense;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $element = [];

-    /** @var \Drupal\attribution\Plugin\Field\FieldType\AttributionItem $item */
+    /** @var AttributionItem $item */
     foreach ($items as $delta => $item) {
       $values = $item->getValue();
-      /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+      /** @var AttributionLicense $license */
       $license = AttributionLicense::load($values['license']);
       $element[$delta] = [
         '#theme' => 'attribution_creative_commons_refined',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionCreativeCommonsIconsFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\attribution\Plugin\Field\FieldFormatter;

+use Drupal\attribution\Plugin\Field\FieldType\AttributionItem;
 use Drupal\attribution\Entity\AttributionLicense;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $element = [];

-    /** @var \Drupal\attribution\Plugin\Field\FieldType\AttributionItem $item */
+    /** @var AttributionItem $item */
     foreach ($items as $delta => $item) {
       $values = $item->getValue();
-      /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+      /** @var AttributionLicense $license */
       $license = AttributionLicense::load($values['license']);
       $element[$delta] = [
         '#theme' => 'attribution_creative_commons_icons',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/attribution/src/Plugin/Field/FieldFormatter/AttributionCreativeCommonsFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\attribution\Plugin\Field\FieldFormatter;

+use Drupal\attribution\Plugin\Field\FieldType\AttributionItem;
 use Drupal\attribution\Entity\AttributionLicense;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $element = [];

-    /** @var \Drupal\attribution\Plugin\Field\FieldType\AttributionItem $item */
+    /** @var AttributionItem $item */
     foreach ($items as $delta => $item) {
       $values = $item->getValue();
-      /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+      /** @var AttributionLicense $license */
       $license = AttributionLicense::load($values['license']);
       $element[$delta] = [
         '#theme' => 'attribution_creative_commons',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/attribution/src/Plugin/Block/AttributionBlock.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
    */
   public function blockForm($form, FormStateInterface $form_state) {
     $options = [];
-    /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+    /** @var AttributionLicense $license */
     $licenses = AttributionLicense::loadMultiple();
     foreach ($licenses as $license) {
       $options[$license->getId()] = $license->getName();
@@ @@
    * {@inheritdoc}
    */
   public function build() {
-    /** @var \Drupal\attribution\Entity\AttributionLicense $license */
+    /** @var AttributionLicense $license */
     $license = AttributionLicense::load($this->configuration['license']);
     $build['content'] = [
       //phpcs:ignore Drupal.Semantics.FunctionT.NotLiteralString
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/attribution/src/Form/AttributionLicenseForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\attribution\Form;

+use Drupal\attribution\AttributionLicenseInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
 /**
  * License form.
  *
- * @property \Drupal\attribution\AttributionLicenseInterface $entity
+ * @property AttributionLicenseInterface $entity
  */
 class AttributionLicenseForm extends EntityForm {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/attribution/src/AttributionLicenseListBuilder.php:23

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\attribution\AttributionLicenseInterface $entity */
+    /** @var AttributionLicenseInterface $entity */
     $row['name'] = $entity->getName();
     $row['identifier'] = $entity->getIdentifier();
     $row['osi'] = $entity->isOsiCertified() ? $this->t('Yes, is OSI certified') : $this->t('No, is not OSI certified');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 13 files have been changed by Rector                                      

