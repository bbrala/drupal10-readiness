diff --git a/country_state_field.info.yml b/country_state_field.info.yml
index 22ffe15..7fa738d 100644
--- a/country_state_field.info.yml
+++ b/country_state_field.info.yml
@@ -1,8 +1,7 @@
 name: 'Country, State and City Field'
 type: module
 description: 'The country, state and city field.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: '7Links'
 dependencies:
   - drupal:content_translation
diff --git a/src/CityAccessControlHandler.php b/src/CityAccessControlHandler.php
index 279e3c1..40583b1 100644
--- a/src/CityAccessControlHandler.php
+++ b/src/CityAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\country_state_field;
 
+use Drupal\country_state_field\Entity\CityInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class CityAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\country_state_field\Entity\CityInterface $entity */
+    /** @var CityInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/CityHtmlRouteProvider.php b/src/CityHtmlRouteProvider.php
index 1d7a56f..a227a66 100644
--- a/src/CityHtmlRouteProvider.php
+++ b/src/CityHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class CityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/CountryAccessControlHandler.php b/src/CountryAccessControlHandler.php
index e55858c..434ebde 100644
--- a/src/CountryAccessControlHandler.php
+++ b/src/CountryAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\country_state_field;
 
+use Drupal\country_state_field\Entity\CountryInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class CountryAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\country_state_field\Entity\CountryInterface $entity */
+    /** @var CountryInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/CountryHtmlRouteProvider.php b/src/CountryHtmlRouteProvider.php
index a209b6e..cd13181 100644
--- a/src/CountryHtmlRouteProvider.php
+++ b/src/CountryHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class CountryHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/Form/CitySettingsForm.php b/src/Form/CitySettingsForm.php
index 9fe9db0..0005e4c 100644
--- a/src/Form/CitySettingsForm.php
+++ b/src/Form/CitySettingsForm.php
@@ -27,7 +27,7 @@ class CitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class CitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/CountrySettingsForm.php b/src/Form/CountrySettingsForm.php
index f30435a..0c19d40 100644
--- a/src/Form/CountrySettingsForm.php
+++ b/src/Form/CountrySettingsForm.php
@@ -27,7 +27,7 @@ class CountrySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class CountrySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index b5adc3a..5a34b89 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -25,7 +25,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Constructs a MyClass object.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MessengerInterface $messenger, TranslationInterface $string_translation) {
@@ -108,7 +108,7 @@ class SettingsForm extends ConfigFormBase {
    */
   public static function importCountry(array &$context) {
 
-    $module_path = drupal_get_path('module', 'country_state_field');
+    $module_path = \Drupal::service('extension.list.module')->getPath('country_state_field');
 
     // Importando os dados dos paises.
     $countries = json_decode(file_get_contents($module_path . '/data/country_en.json'));
@@ -146,7 +146,7 @@ class SettingsForm extends ConfigFormBase {
    */
   public static function importState(array &$context) {
 
-    $module_path = drupal_get_path('module', 'country_state_field');
+    $module_path = \Drupal::service('extension.list.module')->getPath('country_state_field');
 
     // Importando os dados dos estados.
     $states = json_decode(file_get_contents($module_path . '/data/state_en.json'));
@@ -183,7 +183,7 @@ class SettingsForm extends ConfigFormBase {
    */
   public static function importCity(array &$context) {
 
-    $module_path = drupal_get_path('module', 'country_state_field');
+    $module_path = \Drupal::service('extension.list.module')->getPath('country_state_field');
 
     // Importando os dados das cidade.
     $cities = json_decode(file_get_contents($module_path . '/data/city_en.json'));
diff --git a/src/Form/StateSettingsForm.php b/src/Form/StateSettingsForm.php
index e49b519..ebe030b 100644
--- a/src/Form/StateSettingsForm.php
+++ b/src/Form/StateSettingsForm.php
@@ -27,7 +27,7 @@ class StateSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class StateSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/ContryStateFormatter.php b/src/Plugin/Field/FieldFormatter/ContryStateFormatter.php
index 22d2f7e..1d7f2f0 100644
--- a/src/Plugin/Field/FieldFormatter/ContryStateFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ContryStateFormatter.php
@@ -74,7 +74,7 @@ class ContryStateFormatter extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
diff --git a/src/Plugin/Field/FieldWidget/CountryStateWidget.php b/src/Plugin/Field/FieldWidget/CountryStateWidget.php
index 219b8b6..539ce4b 100644
--- a/src/Plugin/Field/FieldWidget/CountryStateWidget.php
+++ b/src/Plugin/Field/FieldWidget/CountryStateWidget.php
@@ -242,7 +242,7 @@ class CountryStateWidget extends WidgetBase {
    *
    * @param array $form
    *   A form that be modified.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The values of the form.
    *
    * @return array
diff --git a/src/StateAccessControlHandler.php b/src/StateAccessControlHandler.php
index ca386bb..a2c8a1d 100644
--- a/src/StateAccessControlHandler.php
+++ b/src/StateAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\country_state_field;
 
+use Drupal\country_state_field\Entity\StateInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class StateAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\country_state_field\Entity\StateInterface $entity */
+    /** @var StateInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/StateHtmlRouteProvider.php b/src/StateHtmlRouteProvider.php
index 0a9464b..58b8dbc 100644
--- a/src/StateHtmlRouteProvider.php
+++ b/src/StateHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class StateHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
