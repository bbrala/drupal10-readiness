diff --git a/cck_select_other.views.inc b/cck_select_other.views.inc
index 6336e17..a758060 100644
--- a/cck_select_other.views.inc
+++ b/cck_select_other.views.inc
@@ -1,9 +1,10 @@
 <?php
+
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 /**
  * @file
  * Contains \cck_select_other_views_data_alter().
  */
-
 /**
  * Implements of hook_views_data_alter().
  */
@@ -13,7 +14,7 @@ function cck_select_other_views_data_alter(array &$data) {
     // Get all the displays because Drupal.
     $displays = \Drupal::entityTypeManager()->getStorage('entity_form_display')->loadMultiple();
 
-    /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $display */
+    /** @var EntityFormDisplayInterface $display */
     foreach ($displays as $display) {
       // Get all the components on the display, which will allow to load the
       // renderer for each given field name and thus get the widget plugin id.
@@ -36,4 +37,3 @@ function cck_select_other_views_data_alter(array &$data) {
     throw $e;
   }
 }
-
diff --git a/src/EntityDisplayTrait.php b/src/EntityDisplayTrait.php
index 979cf66..245a6fb 100644
--- a/src/EntityDisplayTrait.php
+++ b/src/EntityDisplayTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\cck_select_other;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 
@@ -17,19 +19,19 @@ trait EntityDisplayTrait {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Get the entity form displays for a field definition.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $definition
+   * @param FieldDefinitionInterface $definition
    *   The field definition to use.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityManager
+   * @param EntityTypeManagerInterface $entityManager
    *   The entity manager for getting entities from storage.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]|null
+   * @return EntityInterface[]|null
    *   An array of entity form displays.
    */
   protected function getFormDisplays(FieldDefinitionInterface $definition, EntityTypeManagerInterface $entityManager) {
@@ -46,7 +48,7 @@ trait EntityDisplayTrait {
    * This is due to "loose coupling", which makes it difficult for a widget to
    * make constraints upon a field.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $definition
+   * @param FieldDefinitionInterface $definition
    *   The field definition to check.
    *
    * @return bool
@@ -58,7 +60,7 @@ trait EntityDisplayTrait {
     $field_name = $definition->getName();
 
     return array_reduce($displays, function ($result, $display) use ($field_name) {
-      /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $display */
+      /** @var EntityFormDisplayInterface $display */
       if (!$result && $display->getRenderer($field_name) !== NULL) {
         $widget_id = $display->getRenderer($field_name)->getPluginId();
         if ($widget_id === 'cck_select_other') {
@@ -72,7 +74,7 @@ trait EntityDisplayTrait {
   /**
    * Get the select other widget settings from the form display.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $definition
+   * @param FieldDefinitionInterface $definition
    *   The field definition to extract the widget from.
    *
    * @return array
@@ -84,7 +86,7 @@ trait EntityDisplayTrait {
     $settings = [];
 
     $widget = array_reduce($displays, function ($result, $display) use ($field_name) {
-      /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $display */
+      /** @var EntityFormDisplayInterface $display */
       if (!$result) {
         $widget = $display->getRenderer($field_name);
         if ($widget && $widget->getPluginId() === 'cck_select_other') {
@@ -104,7 +106,7 @@ trait EntityDisplayTrait {
   /**
    * Gets the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity_type.manager.
    */
   public function getEntityTypeManager() {
@@ -118,7 +120,7 @@ trait EntityDisplayTrait {
   /**
    * Sets the entity type manager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity_type.manager.
    */
   public function setEntityTypeManager(EntityTypeManagerInterface $entityTypeManager) {
diff --git a/src/Plugin/Field/FieldWidget/SelectOtherWidget.php b/src/Plugin/Field/FieldWidget/SelectOtherWidget.php
index 44d64a1..da16a9f 100644
--- a/src/Plugin/Field/FieldWidget/SelectOtherWidget.php
+++ b/src/Plugin/Field/FieldWidget/SelectOtherWidget.php
@@ -171,7 +171,7 @@ class SelectOtherWidget extends OptionsWidgetBase {
   /**
    * Get the default values from the items for the form elements.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   FieldInterface items.
    * @param int $delta
    *   The field item to extract.
diff --git a/src/Plugin/views/filter/SelectOtherFilter.php b/src/Plugin/views/filter/SelectOtherFilter.php
index a564cf9..3d079da 100644
--- a/src/Plugin/views/filter/SelectOtherFilter.php
+++ b/src/Plugin/views/filter/SelectOtherFilter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\cck_select_other\Plugin\views\filter;
 
+use Drupal\views\Plugin\views\query\Sql;
+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\cck_select_other\EntityDisplayTrait;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\options\Plugin\views\filter\ListField;
@@ -24,12 +26,12 @@ class SelectOtherFilter extends ListField {
   use EntityDisplayTrait;
 
   /**
-   * @var \Drupal\views\Plugin\views\query\Sql
+   * @var Sql
    */
   public $query = NULL;
 
   /**
-   * @var \Drupal\Core\Field\FieldDefinitionInterface
+   * @var FieldDefinitionInterface
    */
   protected $instance;
 
@@ -41,7 +43,7 @@ class SelectOtherFilter extends ListField {
   public function init(ViewExecutable $view, DisplayPluginBase $display, array &$options = NULL) {
     parent::init($view, $display, $options);
 
-    /** @var \Drupal\Core\Field\FieldDefinitionInterface $instance */
+    /** @var FieldDefinitionInterface $instance */
     $this->instance = $this->getFieldDefinition();
 
     $settings = $this->getWidgetSettings($this->instance);
diff --git a/src/Validation/Plugin/Validation/Constraint/SelectOtherAllowedValuesConstraintValidator.php b/src/Validation/Plugin/Validation/Constraint/SelectOtherAllowedValuesConstraintValidator.php
index 7604f4b..f599887 100644
--- a/src/Validation/Plugin/Validation/Constraint/SelectOtherAllowedValuesConstraintValidator.php
+++ b/src/Validation/Plugin/Validation/Constraint/SelectOtherAllowedValuesConstraintValidator.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\cck_select_other\Validation\Plugin\Validation\Constraint;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
+use Drupal\Core\TypedData\Exception\MissingDataException;
 use Drupal\cck_select_other\EntityDisplayTrait;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -36,7 +38,7 @@ class SelectOtherAllowedValuesConstraintValidator extends ChoiceValidator implem
   /**
    * The current user account session.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -53,9 +55,9 @@ class SelectOtherAllowedValuesConstraintValidator extends ChoiceValidator implem
   /**
    * Constructs a new SelectOtherAllowedValuesConstraintValidator.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user. Used for fallback mode.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity_type.manager service.
    */
   public function __construct(AccountInterface $current_user, EntityTypeManagerInterface $entityTypeManager) {
@@ -74,7 +76,7 @@ class SelectOtherAllowedValuesConstraintValidator extends ChoiceValidator implem
       // Get the field instance definition.
       $constraint->choices = [];
 
-      /** @var \Drupal\Core\Field\FieldDefinitionInterface $instance */
+      /** @var FieldDefinitionInterface $instance */
       $instance = $typed_data->getFieldDefinition();
       $value = $typed_data->getValue();
 
@@ -124,10 +126,10 @@ class SelectOtherAllowedValuesConstraintValidator extends ChoiceValidator implem
    *
    * @param mixed $value
    *   The value to check.
-   * @param \Symfony\Component\Validator\Constraint $constraint
+   * @param Constraint $constraint
    *   Constraint object.
    *
-   * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws MissingDataException
    * @throws \LogicException
    */
   public function validateFallback($value, Constraint $constraint) {
