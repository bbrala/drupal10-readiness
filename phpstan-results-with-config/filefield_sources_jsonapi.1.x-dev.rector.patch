diff --git a/src/Form/FileFieldSourcesJSONAPIForm.php b/src/Form/FileFieldSourcesJSONAPIForm.php
index 5c0c70d..1ea7113 100644
--- a/src/Form/FileFieldSourcesJSONAPIForm.php
+++ b/src/Form/FileFieldSourcesJSONAPIForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\filefield_sources_jsonapi\Form;
 
+use Drupal\filefield_sources_jsonapi\Entity\FileFieldSourcesJSONAPI;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -19,7 +20,7 @@ class FileFieldSourcesJSONAPIForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\filefield_sources_jsonapi\Entity\FileFieldSourcesJSONAPI $config */
+    /** @var FileFieldSourcesJSONAPI $config */
     $config = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
diff --git a/src/Form/ModalBrowserForm.php b/src/Form/ModalBrowserForm.php
index 41b3615..e2e4303 100644
--- a/src/Form/ModalBrowserForm.php
+++ b/src/Form/ModalBrowserForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\filefield_sources_jsonapi\Form;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\filefield_sources_jsonapi\FileFieldSourcesJSONAPIInterface;
 use Drupal\Core\Form\FormBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -26,22 +30,22 @@ class ModalBrowserForm extends FormBase {
   /**
    * Entity form display storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityFormDisplayStorage;
 
   /**
    * Entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function create(ContainerInterface $container) {
     return new static(
@@ -53,13 +57,13 @@ class ModalBrowserForm extends FormBase {
   /**
    * BulkMediaUploadForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
+   * @param EntityFieldManagerInterface $entityFieldManager
    *   Entity field manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(
     EntityTypeManagerInterface $entityTypeManager,
@@ -184,7 +188,7 @@ class ModalBrowserForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -193,7 +197,7 @@ class ModalBrowserForm extends FormBase {
   public function buildInsertForm(array &$form, FormStateInterface $form_state) {
     $file = $form_state->get('fetched_file');
     $settings = $form_state->get('jsonapi_settings');
-    /** @var \Drupal\filefield_sources_jsonapi\FileFieldSourcesJSONAPIInterface $actual_config */
+    /** @var FileFieldSourcesJSONAPIInterface $actual_config */
     $actual_config = $settings['actual_config'];
     $basic_auth = $actual_config->getBasicAuthentication();
 
@@ -281,7 +285,7 @@ class ModalBrowserForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function insertSelectedSubmit(array &$form, FormStateInterface $form_state) {
@@ -295,7 +299,7 @@ class ModalBrowserForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancelSelectedSubmit(array &$form, FormStateInterface $form_state) {
@@ -408,10 +412,10 @@ class ModalBrowserForm extends FormBase {
    *
    * @param array $form
    *   Render array representing from.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Array of ajax commands to execute on submit of the modal form.
    */
   public function ajaxSubmitForm(array &$form, FormStateInterface $form_state) {
@@ -456,7 +460,7 @@ class ModalBrowserForm extends FormBase {
    */
   private function renderFormElements($response, FormStateInterface $form_state) {
     $settings = $form_state->get('jsonapi_settings');
-    /** @var \Drupal\filefield_sources_jsonapi\FileFieldSourcesJSONAPIInterface $actual_config */
+    /** @var FileFieldSourcesJSONAPIInterface $actual_config */
     $actual_config = $settings['actual_config'];
     $api_url_base = $this->getApiBaseUrl($actual_config->getApiUrl());
     $basic_auth = $actual_config->getBasicAuthentication();
diff --git a/src/Plugin/FilefieldSource/RemoteJSONAPI.php b/src/Plugin/FilefieldSource/RemoteJSONAPI.php
index b108d6a..4db0316 100644
--- a/src/Plugin/FilefieldSource/RemoteJSONAPI.php
+++ b/src/Plugin/FilefieldSource/RemoteJSONAPI.php
@@ -38,7 +38,7 @@ class RemoteJSONAPI extends Remote {
    */
   public static function value(array &$element, &$input, FormStateInterface $form_state) {
     if (isset($input['filefield_remote_jsonapi']['url']) && strlen($input['filefield_remote_jsonapi']['url']) > 0 && UrlHelper::isValid($input['filefield_remote_jsonapi']['url']) && $input['filefield_remote_jsonapi']['url'] != FILEFIELD_SOURCE_REMOTE_HINT_TEXT) {
-      /** @var \Drupal\Core\File\FileSystemInterface $fileSystem */
+      /** @var FileSystemInterface $fileSystem */
       $fileSystem = \Drupal::service('file_system');
 
       $field = FieldConfig::loadByName($element['#entity_type'], $element['#bundle'], $element['#field_name']);
