diff --git a/src/Form/TemplateGeneratorForm.php b/src/Form/TemplateGeneratorForm.php
index 3652b48..0b9d8ab 100755
--- a/src/Form/TemplateGeneratorForm.php
+++ b/src/Form/TemplateGeneratorForm.php
@@ -18,23 +18,23 @@ class TemplateGeneratorForm extends FormBase {
   /**
    * The state key/value store.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Manager Template Generator.
    *
-   * @var \Drupal\template_generator\TemplateGeneratorManager
+   * @var TemplateGeneratorManager
    */
   protected $templateGeneratorManager;
 
   /**
    * Constructs a CronAccessCheck.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key/value store.
-   * @param \Drupal\template_generator\TemplateGeneratorManager $template_generator_manager
+   * @param TemplateGeneratorManager $template_generator_manager
    *   The template generator manager.
    */
   public function __construct(StateInterface $state, TemplateGeneratorManager $template_generator_manager) {
diff --git a/src/TemplateGeneratorManager.php b/src/TemplateGeneratorManager.php
index 616b597..89f6196 100644
--- a/src/TemplateGeneratorManager.php
+++ b/src/TemplateGeneratorManager.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\template_generator;
 
+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\Entity\EntityDisplayRepository;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\ContentEntityType;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
@@ -25,28 +28,28 @@ class TemplateGeneratorManager {
   /**
    * The state key/value store.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The field storage config storage.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepository
+   * @var EntityDisplayRepository
    */
   protected $entityDisplayRepository;
 
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
@@ -54,14 +57,14 @@ class TemplateGeneratorManager {
   /**
    * Contains the system.theme configuration object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $themeConfig;
 
   /**
    * Contains the file system.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $fileSystem;
 
@@ -70,17 +73,17 @@ class TemplateGeneratorManager {
    *
    * @param string $root
    *   The root.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key/value store.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The config.
-   * @param \Drupal\Core\File\FileSystem $file_system
+   * @param FileSystem $file_system
    *   The file system.
    */
   public function __construct($root, StateInterface $state, EntityTypeManagerInterface $entity_type_manager, EntityDisplayRepositoryInterface $entity_display_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info, ConfigFactoryInterface $config, FileSystem $file_system) {
@@ -158,7 +161,7 @@ class TemplateGeneratorManager {
       if ((!isset($ignore['bundle'][$bundle_id]) or $ignore['bundle'][$bundle_id] === 0)
         && (!isset($ignore['viewmode'][$view_mode]) or $ignore['viewmode'][$view_mode] === 0) ) {
 
-        $parent_path = $this->root . '/' . drupal_get_path('theme', $this->themeConfig->get('default'));
+        $parent_path = $this->root . '/' . \Drupal::service('extension.list.theme')->getPath($this->themeConfig->get('default'));
 
         $html = NULL;
         $view_mode_tpl = str_replace('_', '-', $view_mode);
@@ -307,7 +310,7 @@ class TemplateGeneratorManager {
         // Set information for this entity.
         if (isset($data[$definition->id()]['bundles'])) {
           $label = $definition->getLabel();
-          $data[$definition->id()]['name'] = render($label);
+          $data[$definition->id()]['name'] = \Drupal::service('renderer')->render($label);
           $data[$definition->id()]['id'] = $definition->id();
 
           // Set all avalaible bundle for this entity.
diff --git a/template_generator.info.yml b/template_generator.info.yml
index b37c7c9..ab3f415 100644
--- a/template_generator.info.yml
+++ b/template_generator.info.yml
@@ -3,4 +3,4 @@ type: module
 description: Automatic templates generation.
 package: Template Generator
 configure: template_generator.settings
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
