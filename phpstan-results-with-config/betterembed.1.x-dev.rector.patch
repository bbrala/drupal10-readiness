diff --git a/betterembed.info.yml b/betterembed.info.yml
index 9e71fcf..8f9bc69 100644
--- a/betterembed.info.yml
+++ b/betterembed.info.yml
@@ -4,7 +4,7 @@ package: Filters
 
 type: module
 
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
   - drupal:link
diff --git a/betterembed.module b/betterembed.module
index 574482c..c06773c 100644
--- a/betterembed.module
+++ b/betterembed.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Url;
 /**
  * @file
  * Contains betterembed.module.
@@ -123,7 +124,7 @@ function betterembed_entity_operation(EntityInterface $entity) {
   if ($entity->bundle() === 'betterembed') {
     $operations['Refresh'] = [
       'title' => t('Refresh'),
-      'url' => \Drupal\Core\Url::fromRoute('betterembed.refresh', ['media' => $entity->id()]),
+      'url' => Url::fromRoute('betterembed.refresh', ['media' => $entity->id()]),
       'weight' => 150,
     ];
   }
diff --git a/src/BetterEmbedManager.php b/src/BetterEmbedManager.php
index f0e8a05..e5e6cac 100644
--- a/src/BetterEmbedManager.php
+++ b/src/BetterEmbedManager.php
@@ -202,9 +202,7 @@ class BetterEmbedManager {
       \Drupal::service('file_system')
         ->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
       $random = new Random();
-      $file = file_save_data($image_data,
-        $directory . '/image_' . $random->word(5) . '.' . $file_type,
-        FileSystemInterface::EXISTS_RENAME);
+      $file = \Drupal::service('file.repository')->writeData($image_data, $directory . '/image_' . $random->word(5) . '.' . $file_type, FileSystemInterface::EXISTS_RENAME);
       $file->save();
 
       $entity->thumbnail->target_id = (int) $file->id();
diff --git a/src/Form/GlobalConfigForm.php b/src/Form/GlobalConfigForm.php
index beaf456..1ad1af9 100644
--- a/src/Form/GlobalConfigForm.php
+++ b/src/Form/GlobalConfigForm.php
@@ -16,7 +16,7 @@ class GlobalConfigForm extends ConfigFormBase {
   /**
    * Drupal\Core\Config\ConfigManager definition.
    *
-   * @var \Drupal\Core\Config\ConfigManager
+   * @var ConfigManager
    */
   protected $configManager;
   /**
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 6ae67ed..de5e14f 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\betterembed\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -40,7 +41,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
