modules/contrib/node_view_language_permissions/node_view_language_permissions.install
modules/contrib/node_view_language_permissions/node_view_language_permissions.module
modules/contrib/node_view_language_permissions/src/NodeViewLanguagePermissionsPermissions.php
modules/contrib/node_view_language_permissions/tests/src/Functional/NodeViewLanguagePermissionsTest.php

3 files with changes
====================

1) modules/contrib/node_view_language_permissions/tests/src/Functional/NodeViewLanguagePermissionsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\node_view_language_permissions\Functional;

+use Drupal\user\Entity\User;
+use Drupal\node\NodeInterface;
 use Drupal\Tests\BrowserTestBase;
 use Symfony\Component\HttpFoundation\Response;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $admin;

@@ @@
   /**
    * Auth user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;

@@ @@
   /**
    * Node one.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node1;

@@ @@
   /**
    * Node two.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node2;

@@ @@
   /**
    * Node three.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node3;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/node_view_language_permissions/src/NodeViewLanguagePermissionsPermissions.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\node_view_language_permissions;

+use Drupal\Core\Language\Language;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\node\Entity\NodeType;
 use Drupal\Core\Language\LanguageInterface;
@@ @@
   public function permissions() {
     $permissions = [];
     $nodeTypes = NodeType::loadMultiple();
-    /** @var \Drupal\node\Entity\NodeType $nodeType */
+    /** @var NodeType $nodeType */
     foreach ($nodeTypes as $nodeType) {
-      /** @var \Drupal\Core\Language\Language $lang */
+      /** @var Language $lang */
       foreach (\Drupal::languageManager()->getLanguages(LanguageInterface::STATE_ALL) as $lang) {
         $lang_id = $lang->getId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/node_view_language_permissions/node_view_language_permissions.module:31

    ---------- begin diff ----------
@@ @@
     // For nodes without applicable language use main node.
     if ($node->language()->getId() === Language::LANGCODE_NOT_APPLICABLE
     || $node->language()->getId() === Language::LANGCODE_NOT_SPECIFIED) {
-      /** @var \Drupal\node\NodeInterface $node_language */
+      /** @var NodeInterface $node_language */
       $node_language = $node;
     }
     else {
-      /** @var \Drupal\node\NodeInterface $node_language */
+      /** @var NodeInterface $node_language */
       $node_language = $node->getTranslation($langcode);
     }
     // Add support for unpublished content permissions.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

