diff --git a/menu_admin_per_menu.api.php b/menu_admin_per_menu.api.php
index 0ea5fcf..2a8007e 100644
--- a/menu_admin_per_menu.api.php
+++ b/menu_admin_per_menu.api.php
@@ -11,7 +11,6 @@ use Drupal\Core\Session\AccountInterface;
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter the menus for which a user has per menu admin permissions.
  *
@@ -19,7 +18,7 @@ use Drupal\Core\Session\AccountInterface;
  *   The $perm_menus array returned by getPerMenuPermissions()
  *   for a user account. Values in array are menu machine names and keys are
  *   permission name for appropriate menu.
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The user account object.
  *
  * @see \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface::getPerMenuPermissions()
diff --git a/menu_admin_per_menu.module b/menu_admin_per_menu.module
index 581c09b..ccb6146 100644
--- a/menu_admin_per_menu.module
+++ b/menu_admin_per_menu.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface;
+use Drupal\field\FieldStorageConfigInterface;
 /**
  * @file
  * Module file for menu_admin_per_menu.
@@ -61,7 +63,7 @@ function menu_admin_per_menu_form_menu_edit_form_alter(&$form, FormStateInterfac
 function menu_admin_per_menu_form_node_form_alter(&$form, FormStateInterface $form_state) {
   $account = \Drupal::currentUser();
   if (isset($form['menu']['link']['menu_parent']) && !$account->hasPermission('administer menu')) {
-    /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+    /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
     $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
     $allowed_menus = $allowedMenusService->getPerMenuPermissions($account);
 
@@ -83,7 +85,7 @@ function menu_admin_per_menu_form_node_form_alter(&$form, FormStateInterface $fo
 /**
  * Removes menu items for menus a user does not have permission to access.
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The user to check for access.
  * @param array $options
  *   An array of menu item labels keyed by menu item ID.
@@ -92,7 +94,7 @@ function menu_admin_per_menu_form_node_form_alter(&$form, FormStateInterface $fo
  *   Filtered menu item labels keyed by menu item ID.
  */
 function menu_admin_per_menu_filter_parent_options(AccountInterface $account, array $options) {
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   $allowed_menus = $allowedMenusService->getPerMenuPermissions($account);
 
@@ -110,7 +112,7 @@ function menu_admin_per_menu_filter_parent_options(AccountInterface $account, ar
  * Implements hook_ENTITY_TYPE_access() for entity type "menu_link_content".
  */
 function menu_admin_per_menu_menu_link_content_access(EntityInterface $entity, $operation, AccountInterface $account) {
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   return $allowedMenusService->menuItemAccess($account, $entity);
 }
@@ -129,7 +131,7 @@ function menu_admin_per_menu_field_widget_multivalue_form_alter(&$elements, Form
     return;
   }
 
-  /** @var \Drupal\field\FieldStorageConfigInterface $field_storage_config */
+  /** @var FieldStorageConfigInterface $field_storage_config */
   $field_storage_config = $context['items']->getFieldDefinition()->getFieldStorageDefinition();
   if ($field_storage_config->getType() !== 'entity_reference' || $field_storage_config->getSetting('target_type') !== 'menu') {
     return;
@@ -140,7 +142,7 @@ function menu_admin_per_menu_field_widget_multivalue_form_alter(&$elements, Form
   }
 
   $access = TRUE;
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   $allowed_menus = $allowedMenusService->getPerMenuPermissions($account);
   foreach ($context['items'] as $field_value) {
@@ -163,7 +165,7 @@ function menu_admin_per_menu_field_widget_multivalue_form_alter(&$elements, Form
  * the given menu.
  */
 function menu_admin_per_menu_entity_operation_alter(array &$operations, EntityInterface $entity) {
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   $account = \Drupal::currentUser();
   if (!$entity instanceof Menu || !$allowedMenusService->menuAccess($account, $entity)->isAllowed()) {
diff --git a/src/Controller/MenuAdminPerMenuController.php b/src/Controller/MenuAdminPerMenuController.php
index 8861924..20be53b 100644
--- a/src/Controller/MenuAdminPerMenuController.php
+++ b/src/Controller/MenuAdminPerMenuController.php
@@ -14,14 +14,14 @@ class MenuAdminPerMenuController extends ControllerBase {
   /**
    * The allowed menus provider.
    *
-   * @var \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess
+   * @var MenuAdminPerMenuAccess
    */
   protected $allowedMenusService;
 
   /**
    * Constructs a new MenuAdminPerMenu instance.
    *
-   * @param \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess $allowed_menus
+   * @param MenuAdminPerMenuAccess $allowed_menus
    *   The check provider.
    */
   public function __construct(MenuAdminPerMenuAccess $allowed_menus) {
diff --git a/src/MenuAdminPerMenuAccessInterface.php b/src/MenuAdminPerMenuAccessInterface.php
index 44d4563..3e4f3ed 100644
--- a/src/MenuAdminPerMenuAccessInterface.php
+++ b/src/MenuAdminPerMenuAccessInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\menu_admin_per_menu;
 
+use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Menu\MenuLinkInterface;
 use Drupal\menu_link_content\Entity\MenuLinkContent;
@@ -15,7 +16,7 @@ interface MenuAdminPerMenuAccessInterface {
   /**
    * Return array of all specific menu permissions.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user object for the user whose menu access is being checked.
    *
    * @return array
@@ -26,10 +27,10 @@ interface MenuAdminPerMenuAccessInterface {
   /**
    * A custom access check for menu overview page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menusOverviewAccess(AccountInterface $account);
@@ -37,12 +38,12 @@ interface MenuAdminPerMenuAccessInterface {
   /**
    * A custom access check for menu page and add link page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\system\Entity\Menu $menu
+   * @param Menu $menu
    *   Run access checks for this menu object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menuAccess(AccountInterface $account, Menu $menu);
@@ -50,12 +51,12 @@ interface MenuAdminPerMenuAccessInterface {
   /**
    * A custom access check for menu items page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\menu_link_content\Entity\MenuLinkContent $menu_link_content
+   * @param MenuLinkContent $menu_link_content
    *   Run access checks for this menu item object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menuItemAccess(AccountInterface $account, MenuLinkContent $menu_link_content = NULL);
@@ -63,12 +64,12 @@ interface MenuAdminPerMenuAccessInterface {
   /**
    * A custom access check for menu link page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link_plugin
+   * @param MenuLinkInterface $menu_link_plugin
    *   Run access checks for this menu link object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menuLinkAccess(AccountInterface $account, MenuLinkInterface $menu_link_plugin = NULL);
diff --git a/src/Plugin/EntityReferenceSelection/MenuSelection.php b/src/Plugin/EntityReferenceSelection/MenuSelection.php
index 163f790..5a90920 100644
--- a/src/Plugin/EntityReferenceSelection/MenuSelection.php
+++ b/src/Plugin/EntityReferenceSelection/MenuSelection.php
@@ -23,7 +23,7 @@ class MenuSelection extends DefaultSelection {
   /**
    * The allowed menu service.
    *
-   * @var \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess
+   * @var MenuAdminPerMenuAccess
    */
   protected $allowedMenuService;
 
@@ -39,7 +39,7 @@ class MenuSelection extends DefaultSelection {
   /**
    * Set the allowed menu service.
    *
-   * @param \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess $allowed_menu_service
+   * @param MenuAdminPerMenuAccess $allowed_menu_service
    *   The allowed menu service.
    *
    * @return $this
diff --git a/tests/src/Functional/MenuAdminPerMenuEntityReferenceTest.php b/tests/src/Functional/MenuAdminPerMenuEntityReferenceTest.php
index 9817549..da090ab 100644
--- a/tests/src/Functional/MenuAdminPerMenuEntityReferenceTest.php
+++ b/tests/src/Functional/MenuAdminPerMenuEntityReferenceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\menu_admin_per_menu\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\field\Traits\EntityReferenceTestTrait;
@@ -34,7 +35,7 @@ class MenuAdminPerMenuEntityReferenceTest extends BrowserTestBase {
    *
    * This user has the 'administer menu' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminMenuUser;
 
@@ -43,7 +44,7 @@ class MenuAdminPerMenuEntityReferenceTest extends BrowserTestBase {
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;
 
@@ -52,7 +53,7 @@ class MenuAdminPerMenuEntityReferenceTest extends BrowserTestBase {
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;
 
@@ -63,7 +64,7 @@ class MenuAdminPerMenuEntityReferenceTest extends BrowserTestBase {
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;
 
diff --git a/tests/src/Functional/MenuAdminPerMenuMenuPagesTest.php b/tests/src/Functional/MenuAdminPerMenuMenuPagesTest.php
index f1def89..db66819 100644
--- a/tests/src/Functional/MenuAdminPerMenuMenuPagesTest.php
+++ b/tests/src/Functional/MenuAdminPerMenuMenuPagesTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\menu_admin_per_menu\Functional;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
+use Drupal\System\MenuInterface;
+use Drupal\user\UserInterface;
 use Drupal\language\Entity\ConfigurableLanguage;
 use Drupal\language\Entity\ContentLanguageSettings;
 use Drupal\Tests\BrowserTestBase;
@@ -33,42 +37,42 @@ class MenuAdminPerMenuMenuPagesTest extends BrowserTestBase {
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;
 
   /**
    * The menu link content storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuLinkContentStorage;
 
   /**
    * The menu link manager.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;
 
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu1;
 
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu2;
 
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu3;
 
@@ -77,7 +81,7 @@ class MenuAdminPerMenuMenuPagesTest extends BrowserTestBase {
    *
    * An authenticated user without any of the administer menu permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $authenticatedUser;
 
@@ -86,7 +90,7 @@ class MenuAdminPerMenuMenuPagesTest extends BrowserTestBase {
    *
    * This user has the 'administer menu' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminMenuUser;
 
@@ -95,7 +99,7 @@ class MenuAdminPerMenuMenuPagesTest extends BrowserTestBase {
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;
 
@@ -104,7 +108,7 @@ class MenuAdminPerMenuMenuPagesTest extends BrowserTestBase {
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;
 
@@ -115,7 +119,7 @@ class MenuAdminPerMenuMenuPagesTest extends BrowserTestBase {
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;
 
diff --git a/tests/src/Functional/MenuAdminPerMenuNodeFormTest.php b/tests/src/Functional/MenuAdminPerMenuNodeFormTest.php
index 6dda947..4c167a0 100644
--- a/tests/src/Functional/MenuAdminPerMenuNodeFormTest.php
+++ b/tests/src/Functional/MenuAdminPerMenuNodeFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\menu_admin_per_menu\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -28,14 +29,14 @@ class MenuAdminPerMenuNodeFormTest extends BrowserTestBase {
   /**
    * A user with permission to create nodes but not administer menu.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $contentOnlyUser;
 
   /**
    * A user with permission to create nodes and administer menu.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $contentAndMenuUser;
 
@@ -44,7 +45,7 @@ class MenuAdminPerMenuNodeFormTest extends BrowserTestBase {
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;
 
@@ -53,7 +54,7 @@ class MenuAdminPerMenuNodeFormTest extends BrowserTestBase {
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;
 
@@ -64,7 +65,7 @@ class MenuAdminPerMenuNodeFormTest extends BrowserTestBase {
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;
 
diff --git a/tests/src/Kernel/MenuAdminPerMenuAccessTest.php b/tests/src/Kernel/MenuAdminPerMenuAccessTest.php
index 916abc0..29f39be 100644
--- a/tests/src/Kernel/MenuAdminPerMenuAccessTest.php
+++ b/tests/src/Kernel/MenuAdminPerMenuAccessTest.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\Tests\menu_admin_per_menu\Kernel;
 
+use Drupal\System\MenuInterface;
+use Drupal\user\UserInterface;
+use Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
 use Drupal\Core\Access\AccessResultAllowed;
 use Drupal\Core\Access\AccessResultNeutral;
 use Drupal\Core\Session\AnonymousUserSession;
@@ -35,21 +40,21 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu1;
 
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu2;
 
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu3;
 
@@ -58,7 +63,7 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
    *
    * An anonymous user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $anonymousUser;
 
@@ -67,7 +72,7 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
    *
    * An authenticated user without any of the administer menu permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $authenticatedUser;
 
@@ -76,7 +81,7 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
    *
    * An admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -85,7 +90,7 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
    *
    * This user has the 'administer menu' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminMenuUser;
 
@@ -94,7 +99,7 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;
 
@@ -103,7 +108,7 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;
 
@@ -114,35 +119,35 @@ class MenuAdminPerMenuAccessTest extends KernelTestBase {
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;
 
   /**
    * The allowed menus provider.
    *
-   * @var \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess
+   * @var MenuAdminPerMenuAccess
    */
   protected $menuAdminPerMenuAllowedMenus;
 
   /**
    * The menu link content storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuLinkContentStorage;
 
   /**
    * The menu link manager.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;
 
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;
 
diff --git a/tests/src/Kernel/MenuAdminPerMenuPermissionsTest.php b/tests/src/Kernel/MenuAdminPerMenuPermissionsTest.php
index 725ff3d..2d08a20 100644
--- a/tests/src/Kernel/MenuAdminPerMenuPermissionsTest.php
+++ b/tests/src/Kernel/MenuAdminPerMenuPermissionsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\menu_admin_per_menu\Kernel;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\menu_admin_per_menu\MenuAdminPerMenuPermissions;
 
@@ -26,14 +27,14 @@ class MenuAdminPerMenuPermissionsTest extends KernelTestBase {
   /**
    * The menu admin per menu permission callback.
    *
-   * @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuPermissions
+   * @var MenuAdminPerMenuPermissions
    */
   protected $menuAdminPerMenuPermissions;
 
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;
 
diff --git a/tests/src/Traits/MenuLinkContentTrait.php b/tests/src/Traits/MenuLinkContentTrait.php
index 627c418..569377a 100644
--- a/tests/src/Traits/MenuLinkContentTrait.php
+++ b/tests/src/Traits/MenuLinkContentTrait.php
@@ -22,7 +22,7 @@ trait MenuLinkContentTrait {
    *   An array of settings to change from the defaults.
    *   Example: 'menu_name' => 'foo'.
    *
-   * @return \Drupal\menu_link_content\MenuLinkContentInterface
+   * @return MenuLinkContentInterface
    *   The created menu link.
    */
   protected function createMenuContentLink(array $values = []): MenuLinkContentInterface {
