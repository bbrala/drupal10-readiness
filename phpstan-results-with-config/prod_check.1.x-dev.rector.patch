diff --git a/modules/prod_check_rest/src/Plugin/rest/resource/ProdCheckResource.php b/modules/prod_check_rest/src/Plugin/rest/resource/ProdCheckResource.php
index b8263d0..fdb57c6 100644
--- a/modules/prod_check_rest/src/Plugin/rest/resource/ProdCheckResource.php
+++ b/modules/prod_check_rest/src/Plugin/rest/resource/ProdCheckResource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check_rest\Plugin\rest\resource;
 
+use Symfony\Component\HttpKernel\Exception\HttpException;
 use Drupal\Core\Render\RenderContext;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ -24,10 +25,10 @@ class ProdCheckResource extends ResourceBase {
    *
    * Returns a resource for the prod check report
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The response containing the log entry.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
+   * @throws HttpException
    */
   public function get() {
     // Some checks might render or do things that we can not properly
diff --git a/modules/prod_check_xmlrpc/src/Plugin/ProdCheckProcessor/XmlRpc.php b/modules/prod_check_xmlrpc/src/Plugin/ProdCheckProcessor/XmlRpc.php
index 0a1e82a..9bcdd91 100644
--- a/modules/prod_check_xmlrpc/src/Plugin/ProdCheckProcessor/XmlRpc.php
+++ b/modules/prod_check_xmlrpc/src/Plugin/ProdCheckProcessor/XmlRpc.php
@@ -67,13 +67,13 @@ class XmlRpc extends ConfigurableProdCheckProcessorBase {
 
     if ($status) {
       $message = $plugin->successMessages();
-      $requirement['value'] = (string) render($message['value']);
-      $requirement['description'] = (string) render($message['description']);
+      $requirement['value'] = (string) \Drupal::service('renderer')->render($message['value']);
+      $requirement['description'] = (string) \Drupal::service('renderer')->render($message['description']);
     }
     else {
       $message = $plugin->failMessages();
-      $requirement['value'] = (string) render($message['value']);
-      $requirement['description'] = (string) render($message['description']);
+      $requirement['value'] = (string) \Drupal::service('renderer')->render($message['value']);
+      $requirement['description'] = (string) \Drupal::service('renderer')->render($message['description']);
     }
 
     return $requirement;
diff --git a/src/Annotation/ProdCheck.php b/src/Annotation/ProdCheck.php
index 4b80874..c406428 100644
--- a/src/Annotation/ProdCheck.php
+++ b/src/Annotation/ProdCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class ProdCheck extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/ProdCheckProcessor.php b/src/Annotation/ProdCheckProcessor.php
index 3079b8c..ad4a1fb 100644
--- a/src/Annotation/ProdCheckProcessor.php
+++ b/src/Annotation/ProdCheckProcessor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class ProdCheckProcessor extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/CheckListBuilder.php b/src/CheckListBuilder.php
index 5566682..2c83f89 100644
--- a/src/CheckListBuilder.php
+++ b/src/CheckListBuilder.php
@@ -24,18 +24,18 @@ class CheckListBuilder extends ConfigEntityListBuilder {
   /**
    * The processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckPluginManager
+   * @var ProdCheckPluginManager
    */
   protected $processorManager;
 
   /**
    * Constructs a new ProcessorListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The processor storage.
-   * @param \Drupal\prod_check\Plugin\ProdCheckPluginManager $manager
+   * @param ProdCheckPluginManager $manager
    *   The processor plugin manager.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, ProdCheckPluginManager $manager) {
diff --git a/src/CheckPluginCollection.php b/src/CheckPluginCollection.php
index 34e3a68..f472675 100644
--- a/src/CheckPluginCollection.php
+++ b/src/CheckPluginCollection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check;
 
+use Drupal\prod_check\Plugin\ProdCheckInterface;
 use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;
 
 /**
@@ -12,7 +13,7 @@ class CheckPluginCollection extends DefaultSingleLazyPluginCollection {
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckInterface
+   * @return ProdCheckInterface
    */
   public function &get($instance_id) {
     return parent::get($instance_id);
diff --git a/src/Controller/StatusReportController.php b/src/Controller/StatusReportController.php
index 414cfa9..261f2a8 100644
--- a/src/Controller/StatusReportController.php
+++ b/src/Controller/StatusReportController.php
@@ -17,23 +17,23 @@ class StatusReportController extends ControllerBase implements ContainerInjectio
   /**
    * The prod check processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager;
+   * @var ProdCheckProcessorPluginManager ;
    */
   protected $processManager;
 
   /**
    * The prod check category plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckCategoryPluginManager;
+   * @var ProdCheckCategoryPluginManager ;
    */
   protected $categoryManager;
 
   /**
    * Constructs a \Drupal\prod_check\Controller\StatusReportController object.
    *
-   * @param \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager $process_manager
+   * @param ProdCheckProcessorPluginManager $process_manager
    *   The prod check processor plugin manager.
-   * @param \Drupal\prod_check\Plugin\ProdCheckCategoryPluginManager $category_manager
+   * @param ProdCheckCategoryPluginManager $category_manager
    *   The prod check processor category manager.
    */
   public function __construct(ProdCheckProcessorPluginManager $process_manager, ProdCheckCategoryPluginManager $category_manager) {
diff --git a/src/Entity/ProdCheck.php b/src/Entity/ProdCheck.php
index 53179f6..13407ea 100644
--- a/src/Entity/ProdCheck.php
+++ b/src/Entity/ProdCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Entity;
 
+use Drupal\Component\Plugin\LazyPluginCollection;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ -74,14 +75,14 @@ class ProdCheck extends ConfigEntityBase implements ProdCheckConfigInterface, En
   /**
    * The plugin collection that stores action plugins.
    *
-   * @var \Drupal\prod_check\CheckPluginCollection
+   * @var CheckPluginCollection
    */
   protected $pluginCollection;
 
   /**
    * Encapsulates the creation of the action's LazyPluginCollection.
    *
-   * @return \Drupal\Component\Plugin\LazyPluginCollection
+   * @return LazyPluginCollection
    *   The action's plugin collection.
    */
   protected function getPluginCollection() {
diff --git a/src/Entity/ProdCheckConfigInterface.php b/src/Entity/ProdCheckConfigInterface.php
index 63cae37..8851277 100644
--- a/src/Entity/ProdCheckConfigInterface.php
+++ b/src/Entity/ProdCheckConfigInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Entity;
 
+use Drupal\prod_check\Plugin\ProdCheckInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -19,7 +20,7 @@ interface ProdCheckConfigInterface extends ConfigEntityInterface {
   /**
    * Returns the operation plugin.
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckInterface
+   * @return ProdCheckInterface
    */
   public function getPlugin();
 
diff --git a/src/Entity/ProdCheckProcessor.php b/src/Entity/ProdCheckProcessor.php
index 1bcbe24..99b06e1 100644
--- a/src/Entity/ProdCheckProcessor.php
+++ b/src/Entity/ProdCheckProcessor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Entity;
 
+use Drupal\Component\Plugin\LazyPluginCollection;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ -69,14 +70,14 @@ class ProdCheckProcessor extends ConfigEntityBase implements ProdCheckProcessorC
   /**
    * The plugin collection that stores processor plugins.
    *
-   * @var \Drupal\prod_check\ProcessorPluginCollection
+   * @var ProcessorPluginCollection
    */
   protected $pluginCollection;
 
   /**
    * Encapsulates the creation of the action's LazyPluginCollection.
    *
-   * @return \Drupal\Component\Plugin\LazyPluginCollection
+   * @return LazyPluginCollection
    *   The action's plugin collection.
    */
   protected function getPluginCollection() {
diff --git a/src/Entity/ProdCheckProcessorConfigInterface.php b/src/Entity/ProdCheckProcessorConfigInterface.php
index 23d2957..df0aa86 100644
--- a/src/Entity/ProdCheckProcessorConfigInterface.php
+++ b/src/Entity/ProdCheckProcessorConfigInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Entity;
 
+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -19,7 +20,7 @@ interface ProdCheckProcessorConfigInterface extends ConfigEntityInterface {
   /**
    * Returns the operation plugin.
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckProcessorInterface
+   * @return ProdCheckProcessorInterface
    */
   public function getPlugin();
 
diff --git a/src/Form/CheckFormBase.php b/src/Form/CheckFormBase.php
index 6b06edc..39063da 100644
--- a/src/Form/CheckFormBase.php
+++ b/src/Form/CheckFormBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Form;
 
+use Drupal\prod_check\Plugin\ProdCheckInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -16,21 +17,21 @@ abstract class CheckFormBase extends EntityForm {
   /**
    * The prod check plugin being configured.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckInterface
+   * @var ProdCheckInterface
    */
   protected $plugin;
 
   /**
    * The check storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
   /**
    * Constructs a new prod check form.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The check storage.
    */
   public function __construct(EntityStorageInterface $storage) {
diff --git a/src/Form/ProcessorFormBase.php b/src/Form/ProcessorFormBase.php
index 3574130..b238b29 100644
--- a/src/Form/ProcessorFormBase.php
+++ b/src/Form/ProcessorFormBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Form;
 
+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -16,21 +17,21 @@ abstract class ProcessorFormBase extends EntityForm {
   /**
    * The processor plugin being configured.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorInterface
+   * @var ProdCheckProcessorInterface
    */
   protected $plugin;
 
   /**
    * The processor storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
   /**
    * Constructs a new processor form.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The processor storage.
    */
   public function __construct(EntityStorageInterface $storage) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 3fdf12b..3293795 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -15,7 +15,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Constructs a \Drupal\ds\Form\EmergencyForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactory $config_factory) {
diff --git a/src/Plugin/ProdCheck/Modules/ModuleList.php b/src/Plugin/ProdCheck/Modules/ModuleList.php
index 23e13dc..10fcde7 100644
--- a/src/Plugin/ProdCheck/Modules/ModuleList.php
+++ b/src/Plugin/ProdCheck/Modules/ModuleList.php
@@ -28,7 +28,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ModuleList extends ProdCheckBase {
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -53,11 +53,11 @@ class ModuleList extends ProdCheckBase {
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $destination
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $generator
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $factory
-   * @param \Drupal\Core\Datetime\DateFormatter $formatter
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $handler
+   * @param RedirectDestinationInterface $destination
+   * @param LinkGeneratorInterface $generator
+   * @param ConfigFactoryInterface $factory
+   * @param DateFormatter $formatter
+   * @param ModuleHandlerInterface $handler
    */
   public function __construct(
     array $configuration, $plugin_id, $plugin_definition,
@@ -73,7 +73,7 @@ class ModuleList extends ProdCheckBase {
   }
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
diff --git a/src/Plugin/ProdCheck/ProdCheckBase.php b/src/Plugin/ProdCheck/ProdCheckBase.php
index 5ab200f..afbd25f 100644
--- a/src/Plugin/ProdCheck/ProdCheckBase.php
+++ b/src/Plugin/ProdCheck/ProdCheckBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check\Plugin\ProdCheck;
 
+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Datetime\DateFormatter;
@@ -25,42 +26,42 @@ abstract class ProdCheckBase extends PluginBase implements ContainerFactoryPlugi
   /**
    * The prod check processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
+   * @var ProdCheckProcessorInterface ;
    */
   protected $processor;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface;
+   * @var RedirectDestinationInterface ;
    */
   protected $destination;
 
   /**
    * The link generator service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface;
+   * @var LinkGeneratorInterface ;
    */
   protected $linkGenerator;
 
   /**
    * The config factory
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface;
+   * @var ConfigFactoryInterface ;
    */
   protected $configFactory;
 
   /**
    * The date formatter service
    *
-   * @var \Drupal\Core\Datetime\DateFormatter;
+   * @var DateFormatter ;
    */
   protected $dateFormatter;
 
   /**
    * The module handler service
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface;
+   * @var ModuleHandlerInterface ;
    */
   protected $moduleHandler;
 
@@ -73,15 +74,15 @@ abstract class ProdCheckBase extends PluginBase implements ContainerFactoryPlugi
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $destination
+   * @param RedirectDestinationInterface $destination
    *   The redirect destination service
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $generator
+   * @param LinkGeneratorInterface $generator
    *   The link generator service
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $factory
+   * @param ConfigFactoryInterface $factory
    *   The config factory service
-   * @param \Drupal\Core\Datetime\DateFormatter $formatter
+   * @param DateFormatter $formatter
    *   The date formatter service
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $handler
+   * @param ModuleHandlerInterface $handler
    *   The module handler service
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RedirectDestinationInterface $destination,
diff --git a/src/Plugin/ProdCheckCategoryPluginManager.php b/src/Plugin/ProdCheckCategoryPluginManager.php
index 1205150..af09879 100644
--- a/src/Plugin/ProdCheckCategoryPluginManager.php
+++ b/src/Plugin/ProdCheckCategoryPluginManager.php
@@ -17,9 +17,9 @@ class ProdCheckCategoryPluginManager extends DefaultPluginManager {
   /**
    * Constructs a new ProdCheckCategoryPluginManager instance.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend.
    */
   public function __construct(ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
diff --git a/src/Plugin/ProdCheckPluginManager.php b/src/Plugin/ProdCheckPluginManager.php
index 75b1e4f..6bbe1cf 100644
--- a/src/Plugin/ProdCheckPluginManager.php
+++ b/src/Plugin/ProdCheckPluginManager.php
@@ -17,9 +17,9 @@ class ProdCheckPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/ProdCheckProcessor/Internal.php b/src/Plugin/ProdCheckProcessor/Internal.php
index 81ac421..cfd8c01 100644
--- a/src/Plugin/ProdCheckProcessor/Internal.php
+++ b/src/Plugin/ProdCheckProcessor/Internal.php
@@ -38,11 +38,10 @@ class Internal extends ProdCheckProcessorBase {
   /**
    * Processes a single prod check plugin
    *
-   * @param \Drupal\prod_check\Plugin\ProdCheckInterface $plugin
+   * @param ProdCheckInterface $plugin
    * @return array
    *   An array containing the check result. Contains the status, severity,
    *   title and success or failure messages depending on the result.
-   *
    */
   public function process(ProdCheckInterface $plugin) {
     if (!$plugin) {
diff --git a/src/Plugin/ProdCheckProcessor/ProdCheckProcessorBase.php b/src/Plugin/ProdCheckProcessor/ProdCheckProcessorBase.php
index 5d4db4b..87614b7 100644
--- a/src/Plugin/ProdCheckProcessor/ProdCheckProcessorBase.php
+++ b/src/Plugin/ProdCheckProcessor/ProdCheckProcessorBase.php
@@ -19,14 +19,14 @@ abstract class ProdCheckProcessorBase extends PluginBase implements ContainerFac
   /**
    * The prod check plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckPluginManager;
+   * @var ProdCheckPluginManager ;
    */
   protected $checkManager;
 
   /**
    * The prod check category plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckCategoryPluginManager;
+   * @var ProdCheckCategoryPluginManager ;
    */
   protected $categoryManager;
 
diff --git a/src/Plugin/ProdCheckProcessorInterface.php b/src/Plugin/ProdCheckProcessorInterface.php
index 3cb9805..930a0c5 100644
--- a/src/Plugin/ProdCheckProcessorInterface.php
+++ b/src/Plugin/ProdCheckProcessorInterface.php
@@ -10,7 +10,7 @@ interface ProdCheckProcessorInterface {
   /**
    * Processes a single prod check plugin
    *
-   * @param \Drupal\prod_check\Plugin\ProdCheckInterface $plugin
+   * @param ProdCheckInterface $plugin
    */
   public function process(ProdCheckInterface $plugin);
 
diff --git a/src/Plugin/ProdCheckProcessorPluginManager.php b/src/Plugin/ProdCheckProcessorPluginManager.php
index 39fb002..284ed87 100644
--- a/src/Plugin/ProdCheckProcessorPluginManager.php
+++ b/src/Plugin/ProdCheckProcessorPluginManager.php
@@ -17,9 +17,9 @@ class ProdCheckProcessorPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/ProcessorListBuilder.php b/src/ProcessorListBuilder.php
index 3fc806b..b48cea0 100644
--- a/src/ProcessorListBuilder.php
+++ b/src/ProcessorListBuilder.php
@@ -24,18 +24,18 @@ class ProcessorListBuilder extends ConfigEntityListBuilder {
   /**
    * The processor plugin manager.
    *
-   * @var \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager
+   * @var ProdCheckProcessorPluginManager
    */
   protected $processorManager;
 
   /**
    * Constructs a new ProcessorListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The processor storage.
-   * @param \Drupal\prod_check\Plugin\ProdCheckProcessorPluginManager $manager
+   * @param ProdCheckProcessorPluginManager $manager
    *   The processor plugin manager.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, ProdCheckProcessorPluginManager $manager) {
diff --git a/src/ProcessorPluginCollection.php b/src/ProcessorPluginCollection.php
index 7991347..8b724c2 100644
--- a/src/ProcessorPluginCollection.php
+++ b/src/ProcessorPluginCollection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\prod_check;
 
+use Drupal\prod_check\Plugin\ProdCheckProcessorInterface;
 use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;
 
 /**
@@ -12,7 +13,7 @@ class ProcessorPluginCollection extends DefaultSingleLazyPluginCollection {
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\prod_check\Plugin\ProdCheckProcessorInterface
+   * @return ProdCheckProcessorInterface
    */
   public function &get($instance_id) {
     return parent::get($instance_id);
