diff --git a/src/Plugin/Field/FieldWidget/ModerationStateWidget.php b/src/Plugin/Field/FieldWidget/ModerationStateWidget.php
index 625143a..5b86132 100644
--- a/src/Plugin/Field/FieldWidget/ModerationStateWidget.php
+++ b/src/Plugin/Field/FieldWidget/ModerationStateWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\publishing_dropbutton\Plugin\Field\FieldWidget;
 
+use Drupal\workflows\Transition;
 use Drupal\content_moderation\StateTransitionValidationInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -30,28 +31,28 @@ class ModerationStateWidget extends OptionsSelectWidget implements ContainerFact
   /**
    * Current user service.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Moderation information service.
    *
-   * @var \Drupal\content_moderation\ModerationInformation
+   * @var ModerationInformation
    */
   protected $moderationInformation;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Moderation state transition validation service.
    *
-   * @var \Drupal\content_moderation\StateTransitionValidationInterface
+   * @var StateTransitionValidationInterface
    */
   protected $validator;
 
@@ -62,19 +63,19 @@ class ModerationStateWidget extends OptionsSelectWidget implements ContainerFact
    *   Plugin id.
    * @param mixed $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   Field definition.
    * @param array $settings
    *   Field settings.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\content_moderation\ModerationInformation $moderation_information
+   * @param ModerationInformation $moderation_information
    *   Moderation information service.
-   * @param \Drupal\content_moderation\StateTransitionValidationInterface $validator
+   * @param StateTransitionValidationInterface $validator
    *   Moderation state transition validation service
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, AccountInterface $current_user, EntityTypeManagerInterface $entity_type_manager, ModerationInformation $moderation_information, StateTransitionValidationInterface $validator) {
@@ -123,7 +124,7 @@ class ModerationStateWidget extends OptionsSelectWidget implements ContainerFact
     $workflow = $this->moderationInformation->getWorkflowForEntity($entity);
     $default = $items->get($delta)->value ? $workflow->getTypePlugin()->getState($items->get($delta)->value) : $workflow->getTypePlugin()->getInitialState($entity);
 
-    /** @var \Drupal\workflows\Transition[] $transitions */
+    /** @var Transition[] $transitions */
     $transitions = $this->validator->getValidTransitions($entity, $this->currentUser);
 
     $target_states = [];
@@ -155,11 +156,11 @@ class ModerationStateWidget extends OptionsSelectWidget implements ContainerFact
    *
    * @param string $entity_type_id
    *   The entity type identifier.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity updated with the submitted values.
    * @param array $form
    *   The complete form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function updateStatus($entity_type_id, ContentEntityInterface $entity, array $form, FormStateInterface $form_state) {
