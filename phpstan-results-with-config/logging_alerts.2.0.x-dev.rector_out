modules/contrib/logging_alerts/emaillog/emaillog.install
modules/contrib/logging_alerts/emaillog/emaillog.module
modules/contrib/logging_alerts/emaillog/src/Form/EmaillogConfigForm.php
modules/contrib/logging_alerts/emaillog/src/Logger/EmailLogger.php
modules/contrib/logging_alerts/errorlog/errorlog.install
modules/contrib/logging_alerts/errorlog/errorlog.module
modules/contrib/logging_alerts/errorlog/src/Form/ErrorlogConfigForm.php
modules/contrib/logging_alerts/errorlog/src/Logger/ErrorLogMessageFormatter.php

3 files with changes
====================

1) modules/contrib/logging_alerts/errorlog/src/Logger/ErrorLogMessageFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\errorlog\Logger;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Logger\RfcLoggerTrait;
 use Drupal\Core\Render\Renderer;
@@ @@
   /**
    * Configuration object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Renderer object.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;

@@ @@
   /**
    * Constructs a SysLog object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The configuration factory object.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The Renderer object.
    */
   public function __construct(ConfigFactory $config_factory, Renderer $renderer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/logging_alerts/emaillog/src/Logger/EmailLogger.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\emaillog\Logger;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Logger\LogMessageParserInterface;
 use Drupal\Core\Logger\RfcLoggerTrait;
@@ @@
   /**
    * A configuration object containin syslog settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The message's placeholders parser.
    *
-   * @var \Drupal\Core\Logger\LogMessageParserInterface
+   * @var LogMessageParserInterface
    */
   protected $parser;

@@ @@
   /**
    * Constructs a SysLog object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The configuration factory object.
-   * @param \Drupal\Core\Logger\LogMessageParserInterface $parser
+   * @param LogMessageParserInterface $parser
    *   The parser to use when extracting message variables.
    */
   public function __construct(ConfigFactory $config_factory, LogMessageParserInterface $parser) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/logging_alerts/emaillog/emaillog.module:51

    ---------- begin diff ----------
@@ @@
     $row = [];
     // Permission row.
     $row[] = [
-      'data' => render($form['debug_info']['variable'][$key]),
+      'data' => \Drupal::service('renderer')->render($form['debug_info']['variable'][$key]),
       'class' => ['variable'],
     ];
     foreach (array_keys($severity_levels) as $level_id) {
@@ @@
       $form['debug_info'][$level_id][$key]['#title'] = $element['#title'] . ' : ' . $form['debug_info']['variable'][$key]['#markup'];
       $form['debug_info'][$level_id][$key]['#title_display'] = 'invisible';
       $row[] = [
-        'data' => render($form['debug_info'][$level_id][$key]),
+        'data' => \Drupal::service('renderer')->render($form['debug_info'][$level_id][$key]),
         'class' => ['checkbox'],
         'title' => $element['#title'] . ' : ' . $form['debug_info']['variable'][$key]['#markup'],
       ];
@@ @@
   // Put the table with all checkboxes inside a fieldset.
   $form['debug_info']['variables'] = [
     '#type'   => 'markup',
-    '#markup' => render($table),
+    '#markup' => \Drupal::service('renderer')->render($table),
   ];

   // Render and return all remaining elements.
@@ @@
       '#log' => $params,
     ];

-    $message['body'][] = render($emaillog_theme_element);
+    $message['body'][] = \Drupal::service('renderer')->render($emaillog_theme_element);
   }
 }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

