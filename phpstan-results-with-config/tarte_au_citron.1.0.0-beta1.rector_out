modules/contrib/tarte_au_citron/modules/tarte_au_citron_addtoany/src/Plugin/tarte_au_citron/AddToAny.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_addtoany/tarte_au_citron_addtoany.module
modules/contrib/tarte_au_citron/modules/tarte_au_citron_googletagmanager/src/Plugin/tarte_au_citron/GoogleTagManager.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_googletagmanager/tarte_au_citron_googletagmanager.module
modules/contrib/tarte_au_citron/modules/tarte_au_citron_gtag/src/Plugin/tarte_au_citron/Gtag.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_media_remote_video/src/Plugin/Field/FieldFormatter/OEmbedFormatter.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_media_remote_video/src/Plugin/tarte_au_citron/OEmbed.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_media_remote_video/src/Plugin/tarte_au_citron/OEmbedDeriver.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_media_remote_video/tarte_au_citron_media_remote_video.install
modules/contrib/tarte_au_citron/modules/tarte_au_citron_media_remote_video/tarte_au_citron_media_remote_video.module
modules/contrib/tarte_au_citron/modules/tarte_au_citron_recaptcha/src/Plugin/tarte_au_citron/Recaptcha.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_recaptcha/tarte_au_citron_recaptcha.module
modules/contrib/tarte_au_citron/modules/tarte_au_citron_smarttag/src/Plugin/tarte_au_citron/SmartTag.php
modules/contrib/tarte_au_citron/modules/tarte_au_citron_xiti/src/Plugin/tarte_au_citron/Xiti.php
modules/contrib/tarte_au_citron/src/Annotation/TarteAuCitronService.php
modules/contrib/tarte_au_citron/src/Form/AbstractForm.php
modules/contrib/tarte_au_citron/src/Form/ConfigurationForm.php
modules/contrib/tarte_au_citron/src/Form/EditTexts.php
modules/contrib/tarte_au_citron/src/ServicePluginBase.php
modules/contrib/tarte_au_citron/src/ServicePluginInterface.php
modules/contrib/tarte_au_citron/src/ServicesManager.php
modules/contrib/tarte_au_citron/src/ServicesManagerInterface.php
modules/contrib/tarte_au_citron/tarte_au_citron.api.php
modules/contrib/tarte_au_citron/tarte_au_citron.install
modules/contrib/tarte_au_citron/tarte_au_citron.module

11 files with changes
=====================

1) modules/contrib/tarte_au_citron/tarte_au_citron.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\tarte_au_citron\ServicePluginBase;
 /**
  * @file
  * Provides primary Drupal hook implementations.
  */
-
 /**
  * Implements hook_page_attachments_alter().
  */
@@ @@
   $data['services'] = [];
   foreach ($enabledServices as $currentService) {
     /**
-     * @var \Drupal\tarte_au_citron\ServicePluginBase $currentService
+     * @var ServicePluginBase $currentService
      */
     $currentService->addJs($attachments, $data['user']);
     \Drupal::moduleHandler()
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/tarte_au_citron/tarte_au_citron.api.php:18

    ---------- begin diff ----------
@@ @@
  *
  * @param array $attachments
  *   The render array.
- * @param \Drupal\tarte_au_citron\ServicePluginInterface $service
+ * @param ServicePluginInterface $service
  *   The service.
  */
 function hook_tarte_au_citron_SERVICE_ID_alter(array &$attachments, ServicePluginInterface $service) {
@@ @@
 /**
  * Alter the config before save.
  *
- * @param \Drupal\Core\Config\Config $config
+ * @param Config $config
  *   The render array.
  * @param array $form
  *   An associative array containing the structure of the form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function hook_tarte_au_citron_config_alter(Config $config, array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/tarte_au_citron/src/ServicesManagerInterface.php:20

    ---------- begin diff ----------
@@ @@
    * @param bool $enabled
    *   Only return enabled services.
    *
-   * @return \Drupal\tarte_au_citron\ServicePluginBase[]
+   * @return ServicePluginBase[]
    *   An array of enabled services.
    */
   public function getServices($enabled = FALSE);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/tarte_au_citron/src/ServicesManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tarte_au_citron;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Plugin\Mapper\MapperInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig|null
+   * @var ImmutableConfig|null
    */
   protected $config = NULL;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The tarte_au_citron cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $tarteAuCitronCache;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $tarte_au_citron_cache
+   * @param CacheBackendInterface $tarte_au_citron_cache
    *   Cache backend instance to use.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory, AccountProxyInterface $current_user, CacheBackendInterface $tarte_au_citron_cache) {
@@ @@
    * @param bool $enabled
    *   If service need to be enalbed.
    *
-   * @return \Drupal\tarte_au_citron\ServicePluginInterface[]
+   * @return ServicePluginInterface[]
    *   The array of services object.
    */
   public function getServices($enabled = FALSE) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tarte_au_citron/src/ServicePluginInterface.php:77

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/tarte_au_citron/src/Form/AbstractForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The service manager.
    *
-   * @var \Drupal\tarte_au_citron\ServicesManagerInterface
+   * @var ServicesManagerInterface
    */
   protected $servicesManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/tarte_au_citron/src/Annotation/TarteAuCitronService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tarte_au_citron\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


8) modules/contrib/tarte_au_citron/modules/tarte_au_citron_recaptcha/tarte_au_citron_recaptcha.module:20

    ---------- begin diff ----------
@@ @@
  *
  * @param array $element
  *   The form element captcha.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  * @param array $complete_form
  *   The form.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


9) modules/contrib/tarte_au_citron/modules/tarte_au_citron_media_remote_video/src/Plugin/tarte_au_citron/OEmbedDeriver.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The media source manager plugin.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $mediaSourceManager;

@@ @@
   /**
    * The transliteration object.
    *
-   * @var \Drupal\Core\Transliteration\PhpTransliteration
+   * @var PhpTransliteration
    */
   protected $transliteration;

@@ @@
   /**
    * Constructs.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $media_source_manager
+   * @param PluginManagerInterface $media_source_manager
    *   The media source manager plugin.
-   * @param \Drupal\Core\Transliteration\PhpTransliteration $transliteration
+   * @param PhpTransliteration $transliteration
    *   The transliteration object.
    */
   public function __construct(PluginManagerInterface $media_source_manager, PhpTransliteration $transliteration) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/tarte_au_citron/modules/tarte_au_citron_media_remote_video/src/Plugin/Field/FieldFormatter/OEmbedFormatter.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * The media source manager plugin.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $mediaSourceManager;

@@ @@
   /**
    * The tarte au citron service manager.
    *
-   * @var \Drupal\tarte_au_citron\ServicesManagerInterface
+   * @var ServicesManagerInterface
    */
   protected $tacServiceManager;

@@ @@
    *   The plugin ID for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\media\OEmbed\ResourceFetcherInterface $resource_fetcher
+   * @param ResourceFetcherInterface $resource_fetcher
    *   The oEmbed resource fetcher service.
-   * @param \Drupal\media\OEmbed\UrlResolverInterface $url_resolver
+   * @param UrlResolverInterface $url_resolver
    *   The oEmbed URL resolver service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\media\IFrameUrlHelper $iframe_url_helper
+   * @param IFrameUrlHelper $iframe_url_helper
    *   The iFrame URL helper service.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $media_source_manager
+   * @param PluginManagerInterface $media_source_manager
    *   The media source manager plugin.
-   * @param \Drupal\tarte_au_citron\ServicesManagerInterface $tacServiceManager
+   * @param ServicesManagerInterface $tacServiceManager
    *   The tarte au citron service manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, MessengerInterface $messenger, ResourceFetcherInterface $resource_fetcher, UrlResolverInterface $url_resolver, LoggerChannelFactoryInterface $logger_factory, ConfigFactoryInterface $config_factory, IFrameUrlHelper $iframe_url_helper, PluginManagerInterface $media_source_manager, ServicesManagerInterface $tacServiceManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/tarte_au_citron/modules/tarte_au_citron_googletagmanager/src/Plugin/tarte_au_citron/GoogleTagManager.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin definition.
    * @param \Drupal\google_tag\Entity\ContainerManagerInterface $container_manager
    *   The google tag container manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 11 files have been changed by Rector                                      

