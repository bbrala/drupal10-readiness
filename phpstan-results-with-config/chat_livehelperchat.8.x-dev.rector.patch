diff --git a/chat_livehelperchat.module b/chat_livehelperchat.module
index cecb4dc..bb40ebb 100644
--- a/chat_livehelperchat.module
+++ b/chat_livehelperchat.module
@@ -17,7 +17,7 @@ use Drupal\Core\Config\ImmutableConfig;
 function chat_livehelperchat_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'help.page.chat_livehelperchat':
-      $output = file_get_contents(drupal_get_path('module', 'chat_livehelperchat') . '/README.md');
+      $output = file_get_contents(\Drupal::service('extension.list.module')->getPath('chat_livehelperchat') . '/README.md');
       return '<pre>' . $output . '</pre>';
 
     default:
@@ -69,7 +69,7 @@ function chat_livehelperchat_page_attachments(array &$attachments) {
 /**
  * Check visibility of chat in pages.
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *   Object of type configuration livehelperchatformsettings.
  *
  * @return bool
@@ -109,9 +109,9 @@ function chat_livehelperchat_check_visibility_pages(ImmutableConfig $config = NU
 /**
  * Determines if the chat should be shown for the defined content_type or not.
  *
- * @param \Drupal\node\Entity\Node $node
+ * @param Node $node
  *   Node object.
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *   Object of type configuration livehelperchatformsettings.
  *
  * @return bool
@@ -141,9 +141,9 @@ function chat_livehelperchat_check_visibility_content_type(Node $node = NULL, Im
 /**
  * Determines if the chat should be shown for the defined roles or not.
  *
- * @param \Drupal\Core\Session\AccountProxyInterface $account
+ * @param AccountProxyInterface $account
  *   A full user object.
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *   Object of type configuration livehelperchatformsettings.
  *
  * @return bool
@@ -255,7 +255,7 @@ function chat_livehelperchat_current_language_mapping() {
 /**
  * Generate the script to embebed Chat in page.
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *   Object of type configuration livehelperchatformsettings.
  * @param string $lang_code
  *   Code of Language mapping.
@@ -356,7 +356,7 @@ EOS;
 /**
  * Generate the script to embebed FAQ in page.
  *
- * @param \Drupal\Core\Config\ImmutableConfig $config
+ * @param ImmutableConfig $config
  *   Object of type configuration livehelperchatformsettings.
  * @param string $lang_code
  *   Code of Language mapping.
diff --git a/src/Form/LiveHelperChatFormSettings.php b/src/Form/LiveHelperChatFormSettings.php
index 2869897..d4fd922 100644
--- a/src/Form/LiveHelperChatFormSettings.php
+++ b/src/Form/LiveHelperChatFormSettings.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\chat_livehelperchat\Form;
 
+use Drupal\Core\Database\Driver\mysql\Connection;
+use Drupal\Core\Routing\CurrentRouteMatch;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -19,21 +22,21 @@ class LiveHelperChatFormSettings extends ConfigFormBase {
   /**
    * Drupal\Core\Database\Driver\mysql\Connection definition.
    *
-   * @var \Drupal\Core\Database\Driver\mysql\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Drupal\Core\Routing\CurrentRouteMatch definition.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;
 
   /**
    * Drupal\Core\Session\AccountProxyInterface definition.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -47,10 +50,10 @@ class LiveHelperChatFormSettings extends ConfigFormBase {
   /**
    * {@inheritdoc}
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container.
    *
-   * @return \Drupal\Core\Form\ConfigFormBase
+   * @return ConfigFormBase
    *   Return ConfigFormBase.
    */
   public static function create(ContainerInterface $container) {
@@ -89,7 +92,7 @@ class LiveHelperChatFormSettings extends ConfigFormBase {
    *
    * @param array $form
    *   Form parameter.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form State parameter.
    *
    * @return array
@@ -464,7 +467,7 @@ class LiveHelperChatFormSettings extends ConfigFormBase {
    *
    * @param array $form
    *   Form Parameter.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form State parameter.
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
@@ -476,7 +479,7 @@ class LiveHelperChatFormSettings extends ConfigFormBase {
    *
    * @param array $form
    *   Form parameter.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form State parameter.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 87f1664..63b20fe 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\chat_livehelperchat\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
