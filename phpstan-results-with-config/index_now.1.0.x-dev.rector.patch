diff --git a/src/CommerceProductOperations.php b/src/CommerceProductOperations.php
index b333cff..c582870 100644
--- a/src/CommerceProductOperations.php
+++ b/src/CommerceProductOperations.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\index_now;
 
+use Drupal\user\RoleStorage;
+use Drupal\user\Entity\Role;
 use Drupal\commerce_product\Entity\Product;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -19,32 +21,32 @@ class CommerceProductOperations implements ContainerInjectionInterface, Commerce
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The index now service.
    *
-   * @var \Drupal\index_now\Service\IndexNowInterface
+   * @var IndexNowInterface
    */
   protected $indexNow;
 
   /**
    * The role storage.
    *
-   * @var \Drupal\user\RoleStorage
+   * @var RoleStorage
    */
   protected $roleStorage;
 
   /**
    * Node operations class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\index_now\Service\IndexNowInterface $index_now
+   * @param IndexNowInterface $index_now
    *   The index now service.
    */
   public function __construct(
@@ -92,7 +94,7 @@ class CommerceProductOperations implements ContainerInjectionInterface, Commerce
       return FALSE;
     }
 
-    /** @var \Drupal\user\Entity\Role $anonymous_role */
+    /** @var Role $anonymous_role */
     $anonymous_role = $this->roleStorage->load(RoleInterface::ANONYMOUS_ID);
     if (!$anonymous_role->hasPermission('access content')) {
       return FALSE;
diff --git a/src/Controller/ApiKeyController.php b/src/Controller/ApiKeyController.php
index 873654d..4b2bba9 100644
--- a/src/Controller/ApiKeyController.php
+++ b/src/Controller/ApiKeyController.php
@@ -17,7 +17,7 @@ class ApiKeyController extends ControllerBase {
   /**
    * API key controller constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(StateInterface $state) {
diff --git a/src/Form/ModuleSettingsForm.php b/src/Form/ModuleSettingsForm.php
index 3d856e8..940ed8d 100644
--- a/src/Form/ModuleSettingsForm.php
+++ b/src/Form/ModuleSettingsForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\index_now\Form;
 
+use Drupal\node\Entity\NodeType;
+use Drupal\taxonomy\Entity\Vocabulary;
 use Drupal\Component\Uuid\UuidInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -40,7 +42,7 @@ class ModuleSettingsForm extends ConfigFormBase {
   /**
    * The Uuid service.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;
 
@@ -68,22 +70,22 @@ class ModuleSettingsForm extends ConfigFormBase {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The form construct.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   The uuid service.
    */
   public function __construct(
@@ -194,7 +196,7 @@ class ModuleSettingsForm extends ConfigFormBase {
       ];
 
       $node_types = [];
-      /** @var \Drupal\node\Entity\NodeType $node_type */
+      /** @var NodeType $node_type */
       foreach ($this->nodeTypes as $machine_name => $node_type) {
         $node_types[$machine_name] = $node_type->get('name');
       }
@@ -217,7 +219,7 @@ class ModuleSettingsForm extends ConfigFormBase {
       ];
 
       $vocabularies = [];
-      /** @var \Drupal\taxonomy\Entity\Vocabulary $vocabulary */
+      /** @var Vocabulary $vocabulary */
       foreach ($this->vocabularies as $machine_name => $vocabulary) {
         $vocabularies[$machine_name] = $vocabulary->get('name');
       }
diff --git a/src/NodeOperations.php b/src/NodeOperations.php
index 40b14f0..d3a97ed 100644
--- a/src/NodeOperations.php
+++ b/src/NodeOperations.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\index_now;
 
+use Drupal\user\RoleStorage;
+use Drupal\user\Entity\Role;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,32 +21,32 @@ class NodeOperations implements ContainerInjectionInterface, NodeOperationsInter
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The index now service.
    *
-   * @var \Drupal\index_now\Service\IndexNowInterface
+   * @var IndexNowInterface
    */
   protected $indexNow;
 
   /**
    * The role storage.
    *
-   * @var \Drupal\user\RoleStorage
+   * @var RoleStorage
    */
   protected $roleStorage;
 
   /**
    * Node operations class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\index_now\Service\IndexNowInterface $index_now
+   * @param IndexNowInterface $index_now
    *   The index now service.
    */
   public function __construct(
@@ -86,7 +88,7 @@ class NodeOperations implements ContainerInjectionInterface, NodeOperationsInter
       return FALSE;
     }
 
-    /** @var \Drupal\user\Entity\Role $anonymous_role */
+    /** @var Role $anonymous_role */
     $anonymous_role = $this->roleStorage->load(RoleInterface::ANONYMOUS_ID);
     if (!$anonymous_role->hasPermission('access content')) {
       return FALSE;
diff --git a/src/NodeOperationsInterface.php b/src/NodeOperationsInterface.php
index 9c01179..37ea6cb 100644
--- a/src/NodeOperationsInterface.php
+++ b/src/NodeOperationsInterface.php
@@ -12,7 +12,7 @@ interface NodeOperationsInterface {
   /**
    * Acts on a node operation (insert/update/delete) for the allowed node types.
    *
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    *   The node being inserted / updated / deleted.
    */
   public function pingIndexNow(Node $node);
@@ -20,7 +20,7 @@ interface NodeOperationsInterface {
   /**
    * Tells if a node is indexable or not.
    *
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    *   The node being inserted / updated / deleted.
    *
    * @return bool
diff --git a/src/PathProcessor/IndexNowPathProcessor.php b/src/PathProcessor/IndexNowPathProcessor.php
index ccce9f8..65e3d6e 100644
--- a/src/PathProcessor/IndexNowPathProcessor.php
+++ b/src/PathProcessor/IndexNowPathProcessor.php
@@ -14,14 +14,14 @@ class IndexNowPathProcessor implements InboundPathProcessorInterface {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(StateInterface $state) {
diff --git a/src/Service/IndexNow.php b/src/Service/IndexNow.php
index cc637d9..80df90f 100644
--- a/src/Service/IndexNow.php
+++ b/src/Service/IndexNow.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\index_now\Service;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -31,43 +32,43 @@ class IndexNow implements IndexNowInterface {
   /**
    * The HTTP client service.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * IndexNow constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_channel_factory
+   * @param LoggerChannelFactoryInterface $logger_channel_factory
    *   The logger service.
    */
   public function __construct(
@@ -123,7 +124,7 @@ class IndexNow implements IndexNowInterface {
    * @param string $api_key
    *   The API key used to prove ownership of the host.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The search engine URL we want to hit to index now.
    */
   protected function buildUrl(string $page_url, string $api_key) {
diff --git a/src/TermOperations.php b/src/TermOperations.php
index 16ca06c..51460a6 100644
--- a/src/TermOperations.php
+++ b/src/TermOperations.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\index_now;
 
+use Drupal\user\RoleStorage;
+use Drupal\user\Entity\Role;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,32 +21,32 @@ class TermOperations implements ContainerInjectionInterface, TermOperationsInter
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The index now service.
    *
-   * @var \Drupal\index_now\Service\IndexNowInterface
+   * @var IndexNowInterface
    */
   protected $indexNow;
 
   /**
    * The role storage.
    *
-   * @var \Drupal\user\RoleStorage
+   * @var RoleStorage
    */
   protected $roleStorage;
 
   /**
    * Node operations class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\index_now\Service\IndexNowInterface $index_now
+   * @param IndexNowInterface $index_now
    *   The index now service.
    */
   public function __construct(
@@ -86,7 +88,7 @@ class TermOperations implements ContainerInjectionInterface, TermOperationsInter
       return FALSE;
     }
 
-    /** @var \Drupal\user\Entity\Role $anonymous_role */
+    /** @var Role $anonymous_role */
     $anonymous_role = $this->roleStorage->load(RoleInterface::ANONYMOUS_ID);
     if (!$anonymous_role->hasPermission('access content')) {
       return FALSE;
diff --git a/src/TermOperationsInterface.php b/src/TermOperationsInterface.php
index b03e980..0d87f05 100644
--- a/src/TermOperationsInterface.php
+++ b/src/TermOperationsInterface.php
@@ -12,7 +12,7 @@ interface TermOperationsInterface {
   /**
    * Acts on a term operation for the allowed vocabularies.
    *
-   * @param \Drupal\taxonomy\Entity\Term $term
+   * @param Term $term
    *   The term being inserted / updated / deleted.
    */
   public function pingIndexNow(Term $term);
@@ -20,7 +20,7 @@ interface TermOperationsInterface {
   /**
    * Tells if a term is indexable or not.
    *
-   * @param \Drupal\taxonomy\Entity\Term $term
+   * @param Term $term
    *   The term being inserted / updated / deleted.
    *
    * @return bool
diff --git a/tests/src/Unit/IndexNowTest.php b/tests/src/Unit/IndexNowTest.php
index a651c1c..e05060a 100644
--- a/tests/src/Unit/IndexNowTest.php
+++ b/tests/src/Unit/IndexNowTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\index_now\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ -22,10 +23,11 @@ use Prophecy\Argument;
  */
 class IndexNowTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->client = $this->prophesize(ClientInterface::class);
diff --git a/tests/src/Unit/NodeOperationsTest.php b/tests/src/Unit/NodeOperationsTest.php
index 951c2a5..473bc97 100644
--- a/tests/src/Unit/NodeOperationsTest.php
+++ b/tests/src/Unit/NodeOperationsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\index_now\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,11 +28,12 @@ class NodeOperationsTest extends UnitTestCase {
   const CONFIG_EXCLUDE_NAME = 'exclude_node_types';
 
   const PERMISSION = 'access content';
+  use ProphecyTrait;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->configFactory = $this->prophesize(ConfigFactoryInterface::class);
diff --git a/tests/src/Unit/TermOperationsTest.php b/tests/src/Unit/TermOperationsTest.php
index 2ebadcb..2d71997 100644
--- a/tests/src/Unit/TermOperationsTest.php
+++ b/tests/src/Unit/TermOperationsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\index_now\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,11 +28,12 @@ class TermOperationsTest extends UnitTestCase {
   const CONFIG_EXCLUDE_NAME = 'exclude_vocabularies';
 
   const PERMISSION = 'access content';
+  use ProphecyTrait;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->configFactory = $this->prophesize(ConfigFactoryInterface::class);
