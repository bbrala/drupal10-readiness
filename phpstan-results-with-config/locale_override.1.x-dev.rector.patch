diff --git a/src/Form/LocaleOverrideImportForm.php b/src/Form/LocaleOverrideImportForm.php
index 6ab1482..9a56ea9 100644
--- a/src/Form/LocaleOverrideImportForm.php
+++ b/src/Form/LocaleOverrideImportForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\locale_override\Form;
 
+use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -15,7 +16,7 @@ class LocaleOverrideImportForm extends ConfigFormBase {
   /**
    * The cache tags invalidator.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;
 
diff --git a/src/Form/LocaleOverrideSettingsForm.php b/src/Form/LocaleOverrideSettingsForm.php
index 02b7820..9d3ea3c 100644
--- a/src/Form/LocaleOverrideSettingsForm.php
+++ b/src/Form/LocaleOverrideSettingsForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\locale_override\Form;
 
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,14 +16,14 @@ class LocaleOverrideSettingsForm extends ConfigFormBase {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The cache tags invalidator.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;
 
diff --git a/src/LocaleOverrideTranslation.php b/src/LocaleOverrideTranslation.php
index e8cf3f7..0b2354a 100644
--- a/src/LocaleOverrideTranslation.php
+++ b/src/LocaleOverrideTranslation.php
@@ -16,32 +16,32 @@ class LocaleOverrideTranslation implements TranslatorInterface  {
   /**
    * The cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The cache tags invalidator.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;
 
   /**
    * The configuration object factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a LocaleOverrideTranslation.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache_tags_invalidator
+   * @param CacheTagsInvalidatorInterface $cache_tags_invalidator
    *   The cache tags invalidator.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration object factory.
    */
   public function __construct(CacheBackendInterface $cache, CacheTagsInvalidatorInterface $cache_tags_invalidator, ConfigFactoryInterface $config_factory) {
diff --git a/tests/src/Functional/LocaleOverrideTest.php b/tests/src/Functional/LocaleOverrideTest.php
index c8fd47f..1d9d752 100644
--- a/tests/src/Functional/LocaleOverrideTest.php
+++ b/tests/src/Functional/LocaleOverrideTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\locale_override\Functional;
 
+use Drupal\locale_override\LocaleOverrideTranslation;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -22,7 +23,7 @@ class LocaleOverrideTest extends BrowserTestBase {
    * Tests locale override.
    */
   public function testLocaleOverride() {
-    /** @var \Drupal\locale_override\LocaleOverrideTranslation $string_translator */
+    /** @var LocaleOverrideTranslation $string_translator */
     $string_translator = \Drupal::service('string_translator.locale_override');
 
     $assert_session = $this->assertSession();
@@ -50,7 +51,8 @@ class LocaleOverrideTest extends BrowserTestBase {
 
     // Import 'Context' and 'JavaScript' strings which are the column headers.
     $edit = ['strings' => implode(PHP_EOL, ['Context', 'JavaScript'])];
-    $this->drupalPostForm('/admin/config/regional/translate_override/import', $edit, t('Import strings'));
+    $this->drupalGet('/admin/config/regional/translate_override/import');
+    $this->submitForm($edit, t('Import strings'));
     $assert_session->responseContains('The strings have been imported.');
 
     // Update the 'Context' and 'JavaScript' strings and append [English].
@@ -59,7 +61,8 @@ class LocaleOverrideTest extends BrowserTestBase {
       'strings[items][1][translation]' => 'JavaScript [English]',
       'strings[items][1][javascript]' => TRUE,
     ];
-    $this->drupalPostForm('/admin/config/regional/translate_override', $edit, t('Save translations'));
+    $this->drupalGet('/admin/config/regional/translate_override');
+    $this->submitForm($edit, t('Save translations'));
     $assert_session->responseContains('The strings have been saved.');
 
     // Check that the locale override English strings are being
@@ -73,7 +76,8 @@ class LocaleOverrideTest extends BrowserTestBase {
       'translation[config_names][locale_override.settings][strings][ad4e206408c1c59bfb8a057ba7857446][translation]' => 'Context [Spanish]',
       'translation[config_names][locale_override.settings][strings][686155af75a60a0f6e9d80c1f7edd3e9][translation]' => 'JavaScript [Spanish]',
     ];
-    $this->drupalPostForm('/admin/config/regional/translate_override/translate/es/add', $edit, t('Save translation'));
+    $this->drupalGet('/admin/config/regional/translate_override/translate/es/add');
+    $this->submitForm($edit, t('Save translation'));
     $assert_session->responseContains('Successfully saved Spanish translation.');
 
     // Check that the locale override Spanish strings are being
