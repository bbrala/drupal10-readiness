diff --git a/block_generation.module b/block_generation.module
index e15b4b0..5e48f09 100644
--- a/block_generation.module
+++ b/block_generation.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Utility\ThemeRegistry;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\views\ViewExecutable;
@@ -18,13 +19,13 @@ use Drupal\Core\Template\Attribute;
  * Implements hook_ENTITY_TYPE_view_alter().
  *
  * @param array $build
- * @param \Drupal\Core\Entity\EntityInterface $entity
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityInterface $entity
+ * @param EntityViewDisplayInterface $display
  */
 function block_generation_block_content_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   $block_generation_bundles = _block_generation_bundles();
   if ($entity instanceof BlockContent && array_key_exists($entity->bundle(), $block_generation_bundles)) {
-    /** @var \Drupal\Core\Utility\ThemeRegistry $theme_registry */
+    /** @var ThemeRegistry $theme_registry */
     $theme_registry = \Drupal::service('theme.registry')->getRuntime();
 
     // Generalize the entity-type-specific defaults for easier default theming.
@@ -134,12 +135,12 @@ function block_generation_theme_registry_alter(&$theme_registry) {
 
             // Possible file path of the template name containing the bundle name.
             $template_name = 'block--block-generation--' . strtr($bundle, '_', '-');
-            $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+            $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
             // If file exists then make registry changes.
             if (file_exists($file_path)) {
               // Add possible preprocesses, template with template path.
               $block_generation_theme_registry['block__block_generation__' . $bundle] = [
-                'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                 'preprocess functions' => [
                   'template_preprocess',
                   'template_preprocess_block__block_generation',
@@ -147,7 +148,7 @@ function block_generation_theme_registry_alter(&$theme_registry) {
                 ],
                 'render element' => 'elements',
                 'template' => $template_name,
-                'theme path' => drupal_get_path('module', $block_generation_module),
+                'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                 'type' => 'module',
               ];
             }
@@ -157,12 +158,12 @@ function block_generation_theme_registry_alter(&$theme_registry) {
             foreach ($view_modes as $view_mode_name => $view_mode_definition) {
               // Possible file path of the template name containing the bundle name and view mode name.
               $template_name = 'block--block-generation--' . strtr($bundle, '_', '-') . '--' . strtr($view_mode_name, '_', '-');
-              $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+              $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
               // If file exists then make registry changes.
               if (file_exists($file_path)) {
                 // Add possible preprocesses, template with template path.
                 $block_generation_theme_registry['block__block_generation__' . $bundle . '__' . $view_mode_name] = [
-                  'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                  'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                   'preprocess functions' => [
                     'template_preprocess',
                     'template_preprocess_block__block_generation',
@@ -171,7 +172,7 @@ function block_generation_theme_registry_alter(&$theme_registry) {
                   ],
                   'render element' => 'elements',
                   'template' => $template_name,
-                  'theme path' => drupal_get_path('module', $block_generation_module),
+                  'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                   'type' => 'module',
                 ];
               }
@@ -182,12 +183,12 @@ function block_generation_theme_registry_alter(&$theme_registry) {
             foreach ($fields as $fieldName => $fieldDefinition) {
               // Possible file path of the template name containing the field name.
               $template_name = 'field--block-generation--' . strtr($fieldName, '_', '-');
-              $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+              $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
               // If file exists then make registry changes.
               if (file_exists($file_path)) {
                 // Add possible preprocesses, template with template path.
                 $block_generation_theme_registry['field__block_generation__' . $fieldName] = [
-                  'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                  'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                   'preprocess functions' => [
                     'template_preprocess',
                     'template_preprocess_field',
@@ -196,19 +197,19 @@ function block_generation_theme_registry_alter(&$theme_registry) {
                   ],
                   'render element' => 'element',
                   'template' => $template_name,
-                  'theme path' => drupal_get_path('module', $block_generation_module),
+                  'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                   'type' => 'module',
                 ];
               }
 
               // Possible file path of the template name containing the field name.
               $template_name = 'field--block-generation--' . strtr($bundle, '_', '-') . '--' . strtr($fieldName, '_', '-');
-              $file_path = $app_root . '/' . drupal_get_path('module', $block_generation_module) . '/templates/' . $template_name . '.html.twig';
+              $file_path = $app_root . '/' . \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates/' . $template_name . '.html.twig';
               // If file exists then make registry changes.
               if (file_exists($file_path)) {
                 // Add possible preprocesses, template with template path.
                 $block_generation_theme_registry['field__block_generation__' . $bundle . '__' . $fieldName] = [
-                  'path' => drupal_get_path('module', $block_generation_module) . '/templates',
+                  'path' => \Drupal::service('extension.list.module')->getPath($block_generation_module) . '/templates',
                   'preprocess functions' => [
                     'template_preprocess',
                     'template_preprocess_field',
@@ -218,7 +219,7 @@ function block_generation_theme_registry_alter(&$theme_registry) {
                   ],
                   'render element' => 'element',
                   'template' => $template_name,
-                  'theme path' => drupal_get_path('module', $block_generation_module),
+                  'theme path' => \Drupal::service('extension.list.module')->getPath($block_generation_module),
                   'type' => 'module',
                 ];
               }
@@ -251,7 +252,7 @@ function block_generation_theme_registry_alter(&$theme_registry) {
 function template_preprocess_block__block_generation(array &$variables) {
   if (isset($variables['elements']['#block_content']) && $variables['elements']['#block_content'] instanceof BlockContent) {
     // Block content object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['elements']['#block_content'];
 
     $wrappers = [
@@ -282,7 +283,7 @@ function template_preprocess_block__block_generation(array &$variables) {
 function template_preprocess_field__block_generation(array &$variables) {
   if (isset($variables['element']['#object']) && $variables['element']['#object'] instanceof BlockContent) {
     // BlockContent object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['element']['#object'];
 
     $wrappers = [
@@ -345,7 +346,7 @@ function template_preprocess_block_generation_views_view_fields(&$variables) {
  * Helper function for skin processing.
  *
  * @param $skin_wrapper
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  * @param array $variables
  * @param bool $inner
  */
@@ -371,7 +372,7 @@ function _block_generation_process_skin($skin_wrapper, ContentEntityInterface $e
  * Helper function for wrapper processing.
  *
  * @param $wrapper
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  * @param array $variables
  */
 function _block_generation_process_wrapper($wrapper, ContentEntityInterface $entity, array &$variables) {
@@ -411,7 +412,7 @@ function _block_generation_process_wrapper($wrapper, ContentEntityInterface $ent
  * Helper function for wrapper's tag processing.
  *
  * @param $wrapper
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  * @param array $variables
  */
 function _block_generation_process_wrapper_tag($wrapper, ContentEntityInterface $entity, array &$variables) {
@@ -427,7 +428,7 @@ function _block_generation_process_wrapper_tag($wrapper, ContentEntityInterface
  * Helper function for attributes processing of the block.
  *
  * @param $element
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  * @param array $variables
  * @param string $destination
  */
@@ -527,7 +528,7 @@ function _block_generation_process_field_attributes($element, array &$variables)
  * Helper function for effects processing.
  *
  * @param $wrapper
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  * @param array $variables
  */
 function _block_generation_process_effects($wrapper, ContentEntityInterface $entity, array &$variables) {
@@ -549,7 +550,7 @@ function _block_generation_process_effects($wrapper, ContentEntityInterface $ent
 /**
  * Helper function for content processing.
  *
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  * @param array $variables
  * @param array $content_composition
  */
@@ -564,7 +565,7 @@ function _block_generation_process_content(ContentEntityInterface $entity, array
 /**
  * Helper function for order processing.
  *
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  * @param array $variables
  * @param array $content_composition
  */
@@ -590,7 +591,7 @@ function _block_generation_process_order(ContentEntityInterface $entity, array &
 /**
  * Get context of the entity.
  *
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  *
  * @return array
  */
diff --git a/modules/block/block_generation_block.module b/modules/block/block_generation_block.module
index a88d78e..9f84d76 100644
--- a/modules/block/block_generation_block.module
+++ b/modules/block/block_generation_block.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Utility\ThemeRegistry;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
@@ -11,7 +12,7 @@ use Drupal\block_content\Entity\BlockContent;
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _block_generation_block_form_alter(&$form, FormStateInterface $form_state) {
   // External wrapper.
@@ -44,7 +45,7 @@ function _block_generation_block_form_alter(&$form, FormStateInterface $form_sta
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_block_form_block_content_block_generation_block_edit_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_block_form_alter($form, $form_state);
@@ -54,7 +55,7 @@ function block_generation_block_form_block_content_block_generation_block_edit_f
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_block_form_block_content_block_generation_block_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_block_form_alter($form, $form_state);
@@ -64,13 +65,13 @@ function block_generation_block_form_block_content_block_generation_block_form_a
  * Implements hook_ENTITY_TYPE_view_alter().
  *
  * @param array $build
- * @param \Drupal\Core\Entity\EntityInterface $entity
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityInterface $entity
+ * @param EntityViewDisplayInterface $display
  */
 function block_generation_block_block_content_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   $block_generation_bundles = _block_generation_bundles();
   if ($entity instanceof BlockContent && $entity->bundle() == 'block_generation_block') {
-    /** @var \Drupal\Core\Utility\ThemeRegistry $theme_registry */
+    /** @var ThemeRegistry $theme_registry */
     $theme_registry = \Drupal::service('theme.registry')->getRuntime();
 
     // Update the theme for specific fields.
@@ -89,7 +90,7 @@ function block_generation_block_block_content_view_alter(array &$build, EntityIn
 function template_preprocess_block__block_generation__block_generation_block(array &$variables) {
   if (isset($variables['elements']['#block_content']) && $variables['elements']['#block_content'] instanceof BlockContent) {
     // Block content object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['elements']['#block_content'];
 
     // Process possible wrappers.
diff --git a/modules/composition/block_generation_composition.module b/modules/composition/block_generation_composition.module
index 0601800..ecd85a9 100644
--- a/modules/composition/block_generation_composition.module
+++ b/modules/composition/block_generation_composition.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Utility\ThemeRegistry;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
@@ -12,7 +13,7 @@ use Drupal\Core\Render\Element;
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _block_generation_composition_form_alter(&$form, FormStateInterface $form_state) {
   // External wrapper.
@@ -41,7 +42,7 @@ function _block_generation_composition_form_alter(&$form, FormStateInterface $fo
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_composition_form_block_content_block_generation_composition_edit_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_composition_form_alter($form, $form_state);
@@ -51,7 +52,7 @@ function block_generation_composition_form_block_content_block_generation_compos
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_composition_form_block_content_block_generation_composition_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_composition_form_alter($form, $form_state);
@@ -66,7 +67,7 @@ function block_generation_composition_form_block_content_block_generation_compos
 function template_preprocess_block__block_generation__block_generation_composition(array &$variables) {
   if (isset($variables['elements']['#block_content']) && $variables['elements']['#block_content'] instanceof BlockContent) {
     // Block content object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['elements']['#block_content'];
 
     // Process possible wrappers.
@@ -86,12 +87,12 @@ function template_preprocess_block__block_generation__block_generation_compositi
  * Implements hook_ENTITY_TYPE_view_alter().
  *
  * @param array $build
- * @param \Drupal\Core\Entity\EntityInterface $entity
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityInterface $entity
+ * @param EntityViewDisplayInterface $display
  */
 function block_generation_composition_block_content_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   if ($entity instanceof BlockContent && $entity->bundle() == 'block_generation_composition') {
-    /** @var \Drupal\Core\Utility\ThemeRegistry $theme_registry */
+    /** @var ThemeRegistry $theme_registry */
     $theme_registry = \Drupal::service('theme.registry')->getRuntime();
 
     // Update the theme for specific fields.
diff --git a/modules/image/block_generation_image.module b/modules/image/block_generation_image.module
index 2091f0c..4cb2625 100644
--- a/modules/image/block_generation_image.module
+++ b/modules/image/block_generation_image.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Utility\ThemeRegistry;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
@@ -11,7 +12,7 @@ use Drupal\block_content\Entity\BlockContent;
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _block_generation_image_form_alter(&$form, FormStateInterface $form_state) {
   // External wrapper.
@@ -48,7 +49,7 @@ function _block_generation_image_form_alter(&$form, FormStateInterface $form_sta
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_image_form_block_content_block_generation_image_edit_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_image_form_alter($form, $form_state);
@@ -58,7 +59,7 @@ function block_generation_image_form_block_content_block_generation_image_edit_f
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_image_form_block_content_block_generation_image_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_image_form_alter($form, $form_state);
@@ -73,7 +74,7 @@ function block_generation_image_form_block_content_block_generation_image_form_a
 function template_preprocess_block__block_generation__block_generation_image(array &$variables) {
   if (isset($variables['elements']['#block_content']) && $variables['elements']['#block_content'] instanceof BlockContent) {
     // Block content object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['elements']['#block_content'];
 
     // Process possible wrappers.
@@ -104,12 +105,12 @@ function template_preprocess_field__block_generation__block_generation_image__im
  * Implements hook_ENTITY_TYPE_view_alter().
  *
  * @param array $build
- * @param \Drupal\Core\Entity\EntityInterface $entity
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityInterface $entity
+ * @param EntityViewDisplayInterface $display
  */
 function block_generation_image_block_content_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   if ($entity instanceof BlockContent && $entity->bundle() == 'block_generation_image') {
-    /** @var \Drupal\Core\Utility\ThemeRegistry $theme_registry */
+    /** @var ThemeRegistry $theme_registry */
     $theme_registry = \Drupal::service('theme.registry')->getRuntime();
 
     // Update the theme for specific fields.
diff --git a/modules/media/block_generation_media.module b/modules/media/block_generation_media.module
index 81646a4..06a161d 100644
--- a/modules/media/block_generation_media.module
+++ b/modules/media/block_generation_media.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Utility\ThemeRegistry;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
@@ -11,7 +12,7 @@ use Drupal\block_content\Entity\BlockContent;
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _block_generation_media_form_alter(&$form, FormStateInterface $form_state) {
   // External wrapper.
@@ -48,7 +49,7 @@ function _block_generation_media_form_alter(&$form, FormStateInterface $form_sta
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_media_form_block_content_block_generation_media_edit_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_media_form_alter($form, $form_state);
@@ -58,7 +59,7 @@ function block_generation_media_form_block_content_block_generation_media_edit_f
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_media_form_block_content_block_generation_media_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_media_form_alter($form, $form_state);
@@ -73,7 +74,7 @@ function block_generation_media_form_block_content_block_generation_media_form_a
 function template_preprocess_block__block_generation__block_generation_media(array &$variables) {
   if (isset($variables['elements']['#block_content']) && $variables['elements']['#block_content'] instanceof BlockContent) {
     // Block content object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['elements']['#block_content'];
 
     // Process possible wrappers.
@@ -104,12 +105,12 @@ function template_preprocess_field__block_generation__block_generation_media__me
  * Implements hook_ENTITY_TYPE_view_alter().
  *
  * @param array $build
- * @param \Drupal\Core\Entity\EntityInterface $entity
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityInterface $entity
+ * @param EntityViewDisplayInterface $display
  */
 function block_generation_media_block_content_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   if ($entity instanceof BlockContent && $entity->bundle() == 'block_generation_media') {
-    /** @var \Drupal\Core\Utility\ThemeRegistry $theme_registry */
+    /** @var ThemeRegistry $theme_registry */
     $theme_registry = \Drupal::service('theme.registry')->getRuntime();
 
     // Update the theme for specific fields.
diff --git a/modules/teaser/block_generation_teaser.module b/modules/teaser/block_generation_teaser.module
index 3672fdc..e068157 100644
--- a/modules/teaser/block_generation_teaser.module
+++ b/modules/teaser/block_generation_teaser.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Utility\ThemeRegistry;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
@@ -11,7 +12,7 @@ use Drupal\block_content\Entity\BlockContent;
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _block_generation_teaser_form_alter(&$form, FormStateInterface $form_state) {
   // External wrapper.
@@ -52,7 +53,7 @@ function _block_generation_teaser_form_alter(&$form, FormStateInterface $form_st
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_teaser_form_block_content_block_generation_teaser_edit_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_teaser_form_alter($form, $form_state);
@@ -62,7 +63,7 @@ function block_generation_teaser_form_block_content_block_generation_teaser_edit
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_teaser_form_block_content_block_generation_teaser_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_teaser_form_alter($form, $form_state);
@@ -77,7 +78,7 @@ function block_generation_teaser_form_block_content_block_generation_teaser_form
 function template_preprocess_block__block_generation__block_generation_teaser(array &$variables) {
   if (isset($variables['elements']['#block_content']) && $variables['elements']['#block_content'] instanceof BlockContent) {
     // Block content object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['elements']['#block_content'];
 
     // Process possible wrappers.
@@ -119,13 +120,13 @@ function template_preprocess_field__block_generation__block_generation_teaser__m
  * Implements hook_ENTITY_TYPE_view_alter().
  *
  * @param array $build
- * @param \Drupal\Core\Entity\EntityInterface $entity
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityInterface $entity
+ * @param EntityViewDisplayInterface $display
  */
 function block_generation_teaser_block_content_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   $block_generation_bundles = _block_generation_bundles();
   if ($entity instanceof BlockContent && array_key_exists($entity->bundle(), $block_generation_bundles)) {
-    /** @var \Drupal\Core\Utility\ThemeRegistry $theme_registry */
+    /** @var ThemeRegistry $theme_registry */
     $theme_registry = \Drupal::service('theme.registry')->getRuntime();
 
     // Update the theme for specific fields.
diff --git a/modules/text/block_generation_text.module b/modules/text/block_generation_text.module
index 34842f3..5be5909 100644
--- a/modules/text/block_generation_text.module
+++ b/modules/text/block_generation_text.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Utility\ThemeRegistry;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
@@ -11,7 +12,7 @@ use Drupal\block_content\Entity\BlockContent;
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _block_generation_text_form_alter(&$form, FormStateInterface $form_state) {
   // External wrapper.
@@ -48,7 +49,7 @@ function _block_generation_text_form_alter(&$form, FormStateInterface $form_stat
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_text_form_block_content_block_generation_text_edit_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_text_form_alter($form, $form_state);
@@ -58,7 +59,7 @@ function block_generation_text_form_block_content_block_generation_text_edit_for
  * Implements hook_form_FORM_ID_alter().
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function block_generation_text_form_block_content_block_generation_text_form_alter(&$form, FormStateInterface $form_state) {
   _block_generation_text_form_alter($form, $form_state);
@@ -73,7 +74,7 @@ function block_generation_text_form_block_content_block_generation_text_form_alt
 function template_preprocess_block__block_generation__block_generation_text(array &$variables) {
   if (isset($variables['elements']['#block_content']) && $variables['elements']['#block_content'] instanceof BlockContent) {
     // Block content object.
-    /** @var \Drupal\block_content\Entity\BlockContent $block */
+    /** @var BlockContent $block */
     $block = $variables['elements']['#block_content'];
 
     // Process possible wrappers.
@@ -104,13 +105,13 @@ function template_preprocess_field__block_generation__block_generation_text__tex
  * Implements hook_ENTITY_TYPE_view_alter().
  *
  * @param array $build
- * @param \Drupal\Core\Entity\EntityInterface $entity
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityInterface $entity
+ * @param EntityViewDisplayInterface $display
  */
 function block_generation_text_block_content_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   $block_generation_bundles = _block_generation_bundles();
   if ($entity instanceof BlockContent && array_key_exists($entity->bundle(), $block_generation_bundles)) {
-    /** @var \Drupal\Core\Utility\ThemeRegistry $theme_registry */
+    /** @var ThemeRegistry $theme_registry */
     $theme_registry = \Drupal::service('theme.registry')->getRuntime();
 
     // Update the theme for specific fields.
diff --git a/src/Annotation/BlockGenerationEffect.php b/src/Annotation/BlockGenerationEffect.php
index 449bdde..d3b9e34 100644
--- a/src/Annotation/BlockGenerationEffect.php
+++ b/src/Annotation/BlockGenerationEffect.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\block_generation\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class BlockGenerationEffect extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
diff --git a/src/BlockGenerationEffectAwareInterface.php b/src/BlockGenerationEffectAwareInterface.php
index e8f4438..2c010db 100644
--- a/src/BlockGenerationEffectAwareInterface.php
+++ b/src/BlockGenerationEffectAwareInterface.php
@@ -12,7 +12,7 @@ interface BlockGenerationEffectAwareInterface {
   /**
    * Sets the entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *
    * @return $this
    */
@@ -21,7 +21,7 @@ interface BlockGenerationEffectAwareInterface {
   /**
    * Gets the entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    */
   public function getEntity();
 
diff --git a/src/BlockGenerationEffectAwareTrait.php b/src/BlockGenerationEffectAwareTrait.php
index 32c9c87..f6d2d49 100644
--- a/src/BlockGenerationEffectAwareTrait.php
+++ b/src/BlockGenerationEffectAwareTrait.php
@@ -12,7 +12,7 @@ trait BlockGenerationEffectAwareTrait {
   /**
    * The collection.
    *
-   * @var \Drupal\Core\Entity\EntityInterface $entity
+   * @var EntityInterface $entity
    */
   protected $entity;
 
diff --git a/src/BlockGenerationEffectManager.php b/src/BlockGenerationEffectManager.php
index dca5caa..d3ebe4b 100644
--- a/src/BlockGenerationEffectManager.php
+++ b/src/BlockGenerationEffectManager.php
@@ -24,11 +24,11 @@ class BlockGenerationEffectManager extends DefaultPluginManager implements Block
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\DependencyInjection\ClassResolverInterface $class_resolver
+   * @param ClassResolverInterface $class_resolver
    *   The class_resolver.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ClassResolverInterface $class_resolver) {
diff --git a/src/BlockGenerationEffectManagerInterface.php b/src/BlockGenerationEffectManagerInterface.php
index 8d87e53..75cbc5b 100644
--- a/src/BlockGenerationEffectManagerInterface.php
+++ b/src/BlockGenerationEffectManagerInterface.php
@@ -18,7 +18,7 @@ interface BlockGenerationEffectManagerInterface extends PluginOperationsProvider
    * @param mixed[] $configuration
    *   An array of configuration relevant to the plugin instance.
    *
-   * @return \Drupal\block_generation\BlockGenerationEffectPluginInterface
+   * @return BlockGenerationEffectPluginInterface
    */
   public function createInstance($plugin_id, array $configuration = []);
 
diff --git a/src/BlockGenerationGenerationEffectManager.php b/src/BlockGenerationGenerationEffectManager.php
index 3cc47e5..5a811d6 100644
--- a/src/BlockGenerationGenerationEffectManager.php
+++ b/src/BlockGenerationGenerationEffectManager.php
@@ -24,11 +24,11 @@ class BlockGenerationGenerationEffectManager extends DefaultPluginManager implem
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\DependencyInjection\ClassResolverInterface $class_resolver
+   * @param ClassResolverInterface $class_resolver
    *   The class_resolver.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ClassResolverInterface $class_resolver) {
diff --git a/src/Plugin/BlockGenerationEffect/BackgroundImage.php b/src/Plugin/BlockGenerationEffect/BackgroundImage.php
index d14c70d..ea120ce 100644
--- a/src/Plugin/BlockGenerationEffect/BackgroundImage.php
+++ b/src/Plugin/BlockGenerationEffect/BackgroundImage.php
@@ -136,7 +136,7 @@ class BackgroundImage extends BlockGenerationEffectBase {
 
     // Apply effect.
     if ($file = \Drupal::service('entity_type.manager')->getStorage('file')->load($this->configuration['fid'])) {
-      $file_url = file_url_transform_relative(file_create_url($file->getFileUri()));
+      $file_url = \Drupal::service('file_url_generator')->generateString($file->getFileUri());
 
       // Background image.
       if ($file_url) {
diff --git a/src/Plugin/BlockGenerationEffect/BackgroundMedia.php b/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
index 2511404..845c722 100644
--- a/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
+++ b/src/Plugin/BlockGenerationEffect/BackgroundMedia.php
@@ -140,7 +140,7 @@ class BackgroundMedia extends BlockGenerationEffectBase {
         $file_url = $image_style->buildUrl($file_uri);
       }
       else {
-        $file_url = file_url_transform_relative(file_create_url($file_uri));
+        $file_url = \Drupal::service('file_url_generator')->generateString($file_uri);
       }
 
       // Background image.
diff --git a/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php b/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php
index 47cb1e2..f34c869 100644
--- a/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php
+++ b/src/Plugin/BlockGenerationEffect/BlockGenerationEffectBase.php
@@ -20,7 +20,7 @@ abstract class BlockGenerationEffectBase extends PluginBase implements Container
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -33,9 +33,9 @@ abstract class BlockGenerationEffectBase extends PluginBase implements Container
    *   The plugin_id for the plugin instance.
    * @param mixed[] $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translator.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
