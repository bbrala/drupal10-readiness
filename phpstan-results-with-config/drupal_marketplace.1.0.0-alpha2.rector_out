modules/contrib/drupal_marketplace/drupal_marketplace.module
modules/contrib/drupal_marketplace/src/Controller/MarketplaceController.php
modules/contrib/drupal_marketplace/src/Controller/ProjectBrowserController.php
modules/contrib/drupal_marketplace/src/Entity/Package.php
modules/contrib/drupal_marketplace/src/Entity/Release.php
modules/contrib/drupal_marketplace/src/Normalizer/PackageNormalizer.php
modules/contrib/drupal_marketplace/src/Normalizer/ReleaseNormalizer.php
modules/contrib/drupal_marketplace/src/Plugin/rest/resource/ModulesRestResource.php
modules/contrib/drupal_marketplace/src/Plugin/rest/resource/PackageRestResource.php
modules/contrib/drupal_marketplace/src/Service/ComposerWrapper.php
modules/contrib/drupal_marketplace/src/Service/HttpClient.php
modules/contrib/drupal_marketplace/src/Service/ProjectsManager.php

6 files with changes
====================

1) modules/contrib/drupal_marketplace/src/Service/ProjectsManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\drupal_marketplace\Service;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Http\InputBag;
 use Drupal\drupal_marketplace\Entity\Package;
 use GuzzleHttp\TransferStats;
@@ @@
    * @return array
    *   An array releases.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException Thrown if request is unsuccessful.
+   * @throws GuzzleException Thrown if request is unsuccessful.
    */
   public function getProjectReleases(string $project) {
     if ($project === 'drupal/core') {
@@ @@
    * @return array The response object.
    *   The response object.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException Thrown if request is unsuccessful.
+   * @throws GuzzleException Thrown if request is unsuccessful.
    * @see https://www.drupal.org/drupalorg/docs/apis/rest-and-other-apis#s-releases
    * @see https://www.drupal.org/drupalorg/docs/apis/update-status-xml
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/drupal_marketplace/src/Service/HttpClient.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Getter for the Guzzle client.
    *
-   * @return \GuzzleHttp\Client
+   * @return Client
    *   The HTTP Client.
    */
   public function getGuzzleClient(): Client {
@@ @@
   /**
    * Setter for the Guzzle client.
    *
-   * @param \GuzzleHttp\Client $client
+   * @param Client $client
    *   The Guzzle client.
    */
   public function setGuzzleClient(Client $client): void {
@@ @@
   /**
    * Creates a Guzzle client with local file caching middleware.
    *
-   * @return \GuzzleHttp\Client
+   * @return Client
    *   The Guzzle client.
    */
   protected function createGuzzleClient(): Client {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/drupal_marketplace/src/Service/ComposerWrapper.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The console application that handles the commands.
    *
-   * @var \Composer\Console\Application
+   * @var Application
    */
   protected $application;

@@ @@
   /**
    * Create output stream.
    *
-   * @return \Symfony\Component\Console\Output\StreamOutput
+   * @return StreamOutput
    *   Stream.
    */
   private function streamOutput() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/drupal_marketplace/src/Plugin/rest/resource/PackageRestResource.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\drupal_marketplace\Plugin\rest\resource;

+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\drupal_marketplace\Service\ComposerWrapper;
+use Drupal\drupal_marketplace\Service\ProjectsManager;
+use Drupal\Core\Extension\ModuleInstaller;
+use Symfony\Component\HttpKernel\Exception\HttpException;
+use Drupal\Core\Extension\ModuleExtensionList;
 use Drupal\rest\ModifiedResourceResponse;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ @@
   /**
    * A current user instance.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Composer wrapper service.
    *
-   * @var \Drupal\drupal_marketplace\Service\ComposerWrapper
+   * @var ComposerWrapper
    */
   protected $composerWrapper;

@@ @@
   /**
    * Projects manager.
    *
-   * @var \Drupal\drupal_marketplace\Service\ProjectsManager
+   * @var ProjectsManager
    */
   protected $projectsManager;

@@ @@
   /**
    * Module installer.
    *
-   * @var \Drupal\Core\Extension\ModuleInstaller
+   * @var ModuleInstaller
    */
   protected $moduleInstaller;

@@ @@
   /**
    * Responds to GET requests.
    *
-   * @return \Drupal\rest\ResourceResponseInterface
+   * @return ResourceResponseInterface
    *   The HTTP response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
+   * @throws HttpException
    *   Throws exception expected.
    */
   public function get(): ResourceResponseInterface {
@@ @@
   /**
    * Execute require command.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Package name.
    *
-   * @return \Drupal\rest\ResourceResponseInterface
+   * @return ResourceResponseInterface
    *   Response.
    */
   public function post(Request $request): ResourceResponseInterface {
@@ @@
     }
     try {
       $result = $this->composerWrapper->requireCommand('drupal/' . $package_name);
-      /** @var \Drupal\Core\Extension\ModuleExtensionList $moduleExtensionList */
+      /** @var ModuleExtensionList $moduleExtensionList */
       $moduleExtensionList = \Drupal::service('extension.list.module');
       $moduleExtensionList->reset();
       /**
@@ @@
   /**
    * Delete.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Package name.
    *
-   * @return \Drupal\rest\ResourceResponseInterface
+   * @return ResourceResponseInterface
    *   Response.
    */
   public function delete(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/drupal_marketplace/src/Plugin/rest/resource/ModulesRestResource.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\drupal_marketplace\Plugin\rest\resource;

+use Drupal\Core\Entity\EntityInterface;
+use Symfony\Component\HttpKernel\Exception\HttpException;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ @@
   /**
    * A current user instance.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   A current user instance.
    */
   public function __construct(
@@ @@
   /**
    * Responds to GET requests.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The HTTP response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
+   * @throws HttpException
    *   Throws exception expected.
    */
   public function get() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/drupal_marketplace/src/Controller/MarketplaceController.php:13

    ---------- begin diff ----------
@@ @@
   protected $entityTypeManager;

   /**
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    */
   public function __construct(
     EntityTypeManagerInterface $entityTypeManager
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

