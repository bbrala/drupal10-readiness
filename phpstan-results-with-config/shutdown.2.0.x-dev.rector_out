modules/contrib/shutdown/shutdown.install
modules/contrib/shutdown/shutdown.module
modules/contrib/shutdown/src/EventSubscriber/ShutdownSubscriber.php
modules/contrib/shutdown/src/Form/SettingsForm.php
modules/contrib/shutdown/src/Plugin/RulesAction/OpenWebsite.php
modules/contrib/shutdown/src/Plugin/RulesAction/ShutdownWebsite.php
modules/contrib/shutdown/src/ShutdownCore.php
modules/contrib/shutdown/tests/src/Functional/RedirectTest.php

3 files with changes
====================

1) modules/contrib/shutdown/tests/src/Functional/RedirectTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create a page content type that we will use for testing.
     $type = $this->container->get('entity_type.manager')->getStorage('node_type')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/shutdown/src/ShutdownCore.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shutdown;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;

 /**
@@ @@
   /**
    * Shutdown settings config object.
    *
-   * @var Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Constructs the shutdown core service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The factory for configuration objects.
    */
   public function __construct(ConfigFactoryInterface $config) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/shutdown/src/EventSubscriber/ShutdownSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shutdown\EventSubscriber;

+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Url;
@@ @@
   /**
    * The current account.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $accountProxy;

@@ @@
   /**
    * Shutdown settings config object.
    *
-   * @var Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs the shutdown subscriber.
    *
-   * @param \Drupal\Core\Session\AccountProxy $account_proxy
+   * @param AccountProxy $account_proxy
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The configuration object factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler class to use for third-party modules alter calls.
    */
   public function __construct(AccountProxy $account_proxy, ConfigFactory $config_factory, ModuleHandlerInterface $module_handler) {
@@ @@
   /**
    * Reacts on KernelEvents::REQUEST event.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     if ($this->config->get('shutdown_enable') == 1 && !$this->accountProxy->hasPermission('navigate shut website') && !function_exists('drush_main')) {
       $excluded_route_names = $this->getExcludedRouteNames();
       $redirect_page = $this->config->get('shutdown_redirect_page');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [ERROR] Could not process                                                      
         "modules/contrib/shutdown/src/Plugin/RulesAction/ShutdownWebsite.php"  
         file, due to:                                                          
         "Analyze error: "Class Drupal\rules\Core\RulesActionBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/shutdown/src/Plugin/RulesAction/OpenWebsite.php" file,
         due to:                                                                
         "Analyze error: "Class Drupal\rules\Core\RulesActionBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

