diff --git a/src/Annotation/DataMaskingPlugin.php b/src/Annotation/DataMaskingPlugin.php
index 3a6333e..d3cc874 100644
--- a/src/Annotation/DataMaskingPlugin.php
+++ b/src/Annotation/DataMaskingPlugin.php
@@ -26,7 +26,7 @@ class DataMaskingPlugin extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/DataMaskingService.php b/src/DataMaskingService.php
index 08bb251..2467551 100644
--- a/src/DataMaskingService.php
+++ b/src/DataMaskingService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\data_masking;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,35 +28,35 @@ class DataMaskingService {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Entity definition update manager service.
    *
-   * @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface
+   * @var EntityDefinitionUpdateManagerInterface
    */
   protected $entityDefinitionUpdateManager;
 
   /**
    * String translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translation;
 
   /**
    * Logger channel factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
 
   /**
    * Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -203,14 +204,14 @@ class DataMaskingService {
   /**
    * Masking an Entity.
    *
-   * @param \Drupal\data_masking\Plugin\DataMaskingPluginManager $data_masking_plugin_service
+   * @param DataMaskingPluginManager $data_masking_plugin_service
    *   Data masking plugin service.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity to mask data.
    * @param array $data
    *   Prepared data to mask data.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   private static function maskingEntity(DataMaskingPluginManager $data_masking_plugin_service, EntityInterface $entity, array $data) {
     if (is_callable([$entity, 'setIsUpdateFromSync'])) {
diff --git a/src/Form/DataMaskingBatchForm.php b/src/Form/DataMaskingBatchForm.php
index e9ffcad..1fe4448 100644
--- a/src/Form/DataMaskingBatchForm.php
+++ b/src/Form/DataMaskingBatchForm.php
@@ -23,42 +23,42 @@ class DataMaskingBatchForm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\data_masking\Plugin\DataMaskingPluginManager
+   * @var DataMaskingPluginManager
    */
   protected $dataMaskingPluginManager;
 
   /**
    * The masking data service.
    *
-   * @var \Drupal\data_masking\DataMaskingService
+   * @var DataMaskingService
    */
   protected $dataMaskingService;
 
   /**
    * Entity bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * Entity bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
diff --git a/src/Form/DataMaskingMultipleBatchForm.php b/src/Form/DataMaskingMultipleBatchForm.php
index d3e9560..74d423f 100644
--- a/src/Form/DataMaskingMultipleBatchForm.php
+++ b/src/Form/DataMaskingMultipleBatchForm.php
@@ -17,21 +17,21 @@ class DataMaskingMultipleBatchForm extends DataMaskingBatchForm {
   /**
    * The masking data service.
    *
-   * @var \Drupal\data_masking\DataMaskingService
+   * @var DataMaskingService
    */
   protected $dataMaskingService;
 
   /**
    * The extension path resolver service.
    *
-   * @var \Drupal\Core\Extension\ExtensionPathResolver
+   * @var ExtensionPathResolver
    */
   protected $extensionPathResolver;
 
   /**
    * The file url generator service.
    *
-   * @var \Drupal\Core\File\FileUrlGeneratorInterface
+   * @var FileUrlGeneratorInterface
    */
   protected $fileUrlGenerator;
 
@@ -155,11 +155,7 @@ class DataMaskingMultipleBatchForm extends DataMaskingBatchForm {
       );
       foreach ($uploadedFiles as $uploadedFile) {
         if ($this->dataMaskingService->validateMaskingConfigFile($uploadedFile->getFileUri())) {
-          file_move(
-            $uploadedFile,
-            'private://data_masking/uploaded_masking_config.csv',
-            FileSystemInterface::EXISTS_REPLACE
-          );
+          \Drupal::service('file.repository')->move($uploadedFile, 'private://data_masking/uploaded_masking_config.csv', FileSystemInterface::EXISTS_REPLACE);
         }
         else {
           \Drupal::entityTypeManager()
diff --git a/src/Plugin/DataMaskingPluginManager.php b/src/Plugin/DataMaskingPluginManager.php
index d4965be..a4e36e2 100644
--- a/src/Plugin/DataMaskingPluginManager.php
+++ b/src/Plugin/DataMaskingPluginManager.php
@@ -17,9 +17,9 @@ class DataMaskingPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
