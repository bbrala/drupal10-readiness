modules/contrib/field_group_link/src/Element/LinkElement.php
modules/contrib/field_group_link/src/Plugin/field_group/FieldGroupFormatter/Link.php
modules/contrib/field_group_link/tests/src/Functional/FieldGroupLinkDisplayTest.php

2 files with changes
====================

1) modules/contrib/field_group_link/tests/src/Functional/FieldGroupLinkDisplayTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\field_group_link\Functional;

+use Drupal\node\NodeInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Url;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
   /**
    * A node to use for testing.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;

@@ @@
   /**
    * A referenced node to use for testing.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $referencedNode;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Configure 'node' as front page.
@@ @@
     $type = $this->drupalCreateContentType(array('name' => $type_name, 'type' => $type_name));
     $this->type = $type->id();

-    /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display */
+    /** @var EntityViewDisplayInterface $display */
     $display = \Drupal::entityTypeManager()
       ->getStorage('entity_view_display')
       ->load('node' . '.' . $type_name . '.' . 'default');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_group_link/src/Plugin/field_group/FieldGroupFormatter/Link.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
    * @param array $rendering_object
    *   The group render array.  As passed to preRender().
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    *   Either the entity, or NULL if not found.
    */
   protected function getEntity(array $rendering_object) {
@@ @@
   /**
    * Retrieve the url object from a field.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The object of the current entity.
    *
-   * @return \Drupal\Core\Url|null
+   * @return Url|null
    *   Either a valid Url object, or NULL.
    */
   protected function getUrlFromField(EntityInterface $entity) {
@@ @@
             // @todo: Change to $file->toUrl() once
             // https://www.drupal.org/node/2402533 is resolved.
             if ($file) {
-              $url = Url::fromUri(file_create_url($file->getFileUri()));
+              $url = \Drupal::service('file_url_generator')->generate($file->getFileUri());
             }
             break;
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

