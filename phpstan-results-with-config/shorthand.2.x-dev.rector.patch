diff --git a/shorthand.info.yml b/shorthand.info.yml
index 862bf23..abcd827 100755
--- a/shorthand.info.yml
+++ b/shorthand.info.yml
@@ -1,7 +1,7 @@
 name: Shorthand
 type: module
 description: A module that allows the publishing of Shorthand stories directly to Drupal.
-core_version_requirement: ^8.8 | ^9
+core_version_requirement: ^9.3 || ^10
 package: Other
 
 dependencies:
diff --git a/shorthand.module b/shorthand.module
index b9e54e2..abcf7b2 100755
--- a/shorthand.module
+++ b/shorthand.module
@@ -33,7 +33,7 @@ function shorthand_preprocess_html(&$variables) {
     ($story = \Drupal::routeMatch()->getParameter('shorthand_story')) &&
     ($story instanceof ShorthandStoryInterface)
   ) {
-    $files_url = file_create_url($story->getShorthandStoryFilesStorageUri());
+    $files_url = \Drupal::service('file_url_generator')->generateAbsoluteString($story->getShorthandStoryFilesStorageUri());
     $node_url = $story->toUrl()->setAbsolute()->toString();
     $html_head = $story->get('head')->value;
     if (strpos($html_head, 'amphtml') !== FALSE) {
diff --git a/src/Controller/ShorthandStoryController.php b/src/Controller/ShorthandStoryController.php
index b5896c3..9ae7588 100755
--- a/src/Controller/ShorthandStoryController.php
+++ b/src/Controller/ShorthandStoryController.php
@@ -22,32 +22,32 @@ class ShorthandStoryController extends ControllerBase implements ContainerInject
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The mocked entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Shorthand story controller.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, EntityTypeManagerInterface $entity_type_manager) {
@@ -111,7 +111,7 @@ class ShorthandStoryController extends ControllerBase implements ContainerInject
   /**
    * Generates an overview table of older revisions of a Shorthand story .
    *
-   * @param \Drupal\shorthand\Entity\ShorthandStoryInterface $shorthand_story
+   * @param ShorthandStoryInterface $shorthand_story
    *   A Shorthand story  object.
    *
    * @return array
diff --git a/src/Entity/ShorthandStory.php b/src/Entity/ShorthandStory.php
index b8c0f12..ebb4400 100755
--- a/src/Entity/ShorthandStory.php
+++ b/src/Entity/ShorthandStory.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\shorthand\Entity;
 
+use Drupal\Core\Archiver\ArchiverInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
@@ -113,7 +114,7 @@ class ShorthandStory extends RevisionableContentEntityBase implements ShorthandS
       $input_format = filter_default_format();
     }
 
-    /** @var \Drupal\Core\Archiver\ArchiverInterface $archiver */
+    /** @var ArchiverInterface $archiver */
     $file_system = \Drupal::service('file_system');
     $filepath = $file_system->realpath($file);
     $archiver = \Drupal::service('plugin.manager.archiver')->getInstance(['filepath' => $filepath]);
@@ -171,7 +172,7 @@ class ShorthandStory extends RevisionableContentEntityBase implements ShorthandS
     // tag with the new local path
     $thumb = $this->thumbnail->value;
     if(empty($thumb) || strpos($thumb, '{Shorthand Local}/') !== false){
-      $assets_path = file_create_url($this->getShorthandStoryFilesStorageUri());
+      $assets_path = \Drupal::service('file_url_generator')->generateAbsoluteString($this->getShorthandStoryFilesStorageUri());
       $thumb = str_replace('{Shorthand Local}/', $assets_path.'/assets/', $thumb);
       $this->thumbnail->value = $thumb;
     }
@@ -489,8 +490,8 @@ class ShorthandStory extends RevisionableContentEntityBase implements ShorthandS
    *   storage path.
    */
   protected function fixStoryContentPaths($content, $external_assets) {
-    $absolute_assets_path = file_create_url($this->getShorthandStoryFilesStorageUri());
-    $assets_path = file_url_transform_relative($absolute_assets_path);
+    $absolute_assets_path = \Drupal::service('file_url_generator')->generateAbsoluteString($this->getShorthandStoryFilesStorageUri());
+    $assets_path = \Drupal::service('file_url_generator')->transformRelative($absolute_assets_path);
     if (!$external_assets) {
       $content = str_replace('./assets/', $assets_path . '/assets/', $content);
     }
diff --git a/src/Entity/ShorthandStoryInterface.php b/src/Entity/ShorthandStoryInterface.php
index 5e1d526..3306d3f 100755
--- a/src/Entity/ShorthandStoryInterface.php
+++ b/src/Entity/ShorthandStoryInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\shorthand\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\RevisionableInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -111,7 +112,7 @@ interface ShorthandStoryInterface extends RevisionableInterface, RevisionLogInte
   /**
    * Gets the Shorthand story revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/src/Form/ShorthandStoryForm.php b/src/Form/ShorthandStoryForm.php
index 6bd4c70..490e59c 100755
--- a/src/Form/ShorthandStoryForm.php
+++ b/src/Form/ShorthandStoryForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\shorthand\Form;
 
+use Drupal\shorthand\Entity\ShorthandStory;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Entity\EntityRepositoryInterface;
@@ -24,54 +25,54 @@ class ShorthandStoryForm extends ContentEntityForm {
   /**
    * The book being displayed.
    *
-   * @var \Drupal\shorthand\Entity\ShorthandStory
+   * @var ShorthandStory
    */
   protected $entity;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Initializes an instance of the Shorthand story.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger interface.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger instance.
-   * @param Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory instance.
    */
   public function __construct(EntityRepositoryInterface $entity_repository,
@@ -107,7 +108,7 @@ class ShorthandStoryForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\shorthand\Entity\ShorthandStory $entity */
+    /** @var ShorthandStory $entity */
     $form = parent::buildForm($form, $form_state);
     $form['#attached']['library'][] = 'shorthand/shorthandForm';
 
diff --git a/src/Form/ShorthandStoryRevisionDeleteForm.php b/src/Form/ShorthandStoryRevisionDeleteForm.php
index e76760e..6d27c6d 100755
--- a/src/Form/ShorthandStoryRevisionDeleteForm.php
+++ b/src/Form/ShorthandStoryRevisionDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\shorthand\Form;
 
+use Drupal\shorthand\Entity\ShorthandStoryInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -21,39 +22,39 @@ class ShorthandStoryRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The Shorthand story revision.
    *
-   * @var \Drupal\shorthand\Entity\ShorthandStoryInterface
+   * @var ShorthandStoryInterface
    */
   protected $revision;
 
   /**
    * The Shorthand story storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $shorthandStoryStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new ShorthandStoryRevisionDeleteForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityStorageInterface $entity_storage, Connection $connection, DateFormatterInterface $date_formatter) {
diff --git a/src/Form/ShorthandStoryRevisionRevertForm.php b/src/Form/ShorthandStoryRevisionRevertForm.php
index cad7fcd..08e77b3 100755
--- a/src/Form/ShorthandStoryRevisionRevertForm.php
+++ b/src/Form/ShorthandStoryRevisionRevertForm.php
@@ -22,39 +22,39 @@ class ShorthandStoryRevisionRevertForm extends ConfirmFormBase {
   /**
    * The Shorthand story revision.
    *
-   * @var \Drupal\shorthand\Entity\ShorthandStoryInterface
+   * @var ShorthandStoryInterface
    */
   protected $revision;
 
   /**
    * The Shorthand story storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $shorthandStoryStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new ShorthandStoryRevisionRevertForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The Shorthand story storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter, TimeInterface $time) {
@@ -151,12 +151,12 @@ class ShorthandStoryRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\shorthand\Entity\ShorthandStoryInterface $revision
+   * @param ShorthandStoryInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\shorthand\Entity\ShorthandStoryInterface
+   * @return ShorthandStoryInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(ShorthandStoryInterface $revision, FormStateInterface $form_state) {
diff --git a/src/Form/ShorthandStoryRevisionRevertTranslationForm.php b/src/Form/ShorthandStoryRevisionRevertTranslationForm.php
index 0733852..ded3cda 100755
--- a/src/Form/ShorthandStoryRevisionRevertTranslationForm.php
+++ b/src/Form/ShorthandStoryRevisionRevertTranslationForm.php
@@ -28,27 +28,27 @@ class ShorthandStoryRevisionRevertTranslationForm extends ShorthandStoryRevision
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new ShorthandStoryRevisionRevertTranslationForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The Shorthand story storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter, LanguageManagerInterface $language_manager, TimeInterface $time) {
@@ -111,7 +111,7 @@ class ShorthandStoryRevisionRevertTranslationForm extends ShorthandStoryRevision
   protected function prepareRevertedRevision(ShorthandStoryInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\shorthand\Entity\ShorthandStoryInterface $default_revision */
+    /** @var ShorthandStoryInterface $default_revision */
     $latest_revision = $this->shorthandStoryStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
diff --git a/src/Form/ShorthandStorySettingsForm.php b/src/Form/ShorthandStorySettingsForm.php
index ed2e031..931a639 100755
--- a/src/Form/ShorthandStorySettingsForm.php
+++ b/src/Form/ShorthandStorySettingsForm.php
@@ -19,34 +19,34 @@ class ShorthandStorySettingsForm extends ConfigFormBase {
   /**
    * The manages modules.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;
 
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The manages modules.
-   * @param \Drupal\shorthand\ShorthandApiInterface $shorthandApi
+   * @param ShorthandApiInterface $shorthandApi
    *   The shorthand api connector.
    */
   public function __construct(
diff --git a/src/Plugin/Field/FieldWidget/PublishConfigurationSelectFieldWidget.php b/src/Plugin/Field/FieldWidget/PublishConfigurationSelectFieldWidget.php
index 61e8953..4fee886 100644
--- a/src/Plugin/Field/FieldWidget/PublishConfigurationSelectFieldWidget.php
+++ b/src/Plugin/Field/FieldWidget/PublishConfigurationSelectFieldWidget.php
@@ -26,7 +26,7 @@ class PublishConfigurationSelectFieldWidget extends WidgetBase implements Contai
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;
 
diff --git a/src/Plugin/Field/FieldWidget/StorySelectFieldWidget.php b/src/Plugin/Field/FieldWidget/StorySelectFieldWidget.php
index 2872f38..7d83fa5 100755
--- a/src/Plugin/Field/FieldWidget/StorySelectFieldWidget.php
+++ b/src/Plugin/Field/FieldWidget/StorySelectFieldWidget.php
@@ -26,7 +26,7 @@ class StorySelectFieldWidget extends WidgetBase implements ContainerFactoryPlugi
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;
 
diff --git a/src/ShorthandApiV2.php b/src/ShorthandApiV2.php
index 6fa06df..6062b1f 100755
--- a/src/ShorthandApiV2.php
+++ b/src/ShorthandApiV2.php
@@ -27,50 +27,50 @@ class ShorthandApiV2 implements ShorthandApiInterface {
   /**
    * GuzzleHttp\Client definition.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Constructs a new ShorthandApi object.
    *
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   Http client service instance.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger interface.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger instance.
-   * @param Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory instance.
    */
   public function __construct(Client $http_client, FileSystemInterface $file_system, MessengerInterface $messenger, LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
diff --git a/src/ShorthandStoryAccessControlHandler.php b/src/ShorthandStoryAccessControlHandler.php
index 6fd1cd7..091dc56 100755
--- a/src/ShorthandStoryAccessControlHandler.php
+++ b/src/ShorthandStoryAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\shorthand;
 
+use Drupal\shorthand\Entity\ShorthandStoryInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class ShorthandStoryAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\shorthand\Entity\ShorthandStoryInterface $entity */
+    /** @var ShorthandStoryInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/ShorthandStoryHtmlRouteProvider.php b/src/ShorthandStoryHtmlRouteProvider.php
index 47baeff..83a798e 100755
--- a/src/ShorthandStoryHtmlRouteProvider.php
+++ b/src/ShorthandStoryHtmlRouteProvider.php
@@ -52,10 +52,10 @@ class ShorthandStoryHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -76,10 +76,10 @@ class ShorthandStoryHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -100,10 +100,10 @@ class ShorthandStoryHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class ShorthandStoryHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -148,10 +148,10 @@ class ShorthandStoryHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -172,10 +172,10 @@ class ShorthandStoryHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/ShorthandStoryListBuilder.php b/src/ShorthandStoryListBuilder.php
index 3055aa2..71c4b8d 100755
--- a/src/ShorthandStoryListBuilder.php
+++ b/src/ShorthandStoryListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\shorthand;
 
+use Drupal\shorthand\Entity\ShorthandStory;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Link;
@@ -26,7 +27,7 @@ class ShorthandStoryListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\shorthand\Entity\ShorthandStory $entity */
+    /** @var ShorthandStory $entity */
     $row['id'] = $entity->id();
     $row['name'] = Link::createFromRoute(
       $entity->label(),
diff --git a/src/ShorthandStoryStorageInterface.php b/src/ShorthandStoryStorageInterface.php
index a70ba0d..dfb5771 100755
--- a/src/ShorthandStoryStorageInterface.php
+++ b/src/ShorthandStoryStorageInterface.php
@@ -20,7 +20,7 @@ interface ShorthandStoryStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of Shorthand story revision IDs for a specific Shorthand story.
    *
-   * @param \Drupal\shorthand\Entity\ShorthandStoryInterface $entity
+   * @param ShorthandStoryInterface $entity
    *   The Shorthand story entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface ShorthandStoryStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as Shorthand story author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface ShorthandStoryStorageInterface extends ContentEntityStorageInterface {
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\shorthand\Entity\ShorthandStoryInterface $entity
+   * @param ShorthandStoryInterface $entity
    *   The Shorthand story entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface ShorthandStoryStorageInterface extends ContentEntityStorageInterface {
   /**
    * Unsets the language for all Shorthand story with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
