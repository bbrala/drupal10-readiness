diff --git a/config_enforce_devel.info.yml b/config_enforce_devel.info.yml
index 205f577..9474480 100644
--- a/config_enforce_devel.info.yml
+++ b/config_enforce_devel.info.yml
@@ -1,8 +1,7 @@
 name: 'Config Enforce - Devel'
 description: 'Allows some configuration to be read-only.'
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: config_enforce_devel.settings
 
 dependencies:
diff --git a/src/EnforcedConfigFile.php b/src/EnforcedConfigFile.php
index fb55088..c8626a0 100644
--- a/src/EnforcedConfigFile.php
+++ b/src/EnforcedConfigFile.php
@@ -57,7 +57,7 @@ class EnforcedConfigFile {
    */
   public function getDerivedConfigFilePath(array $settings = []) {
     if (empty($settings)) $settings = $this->settings;
-    $config_file_path  = drupal_get_path('module', $settings['target_module']);
+    $config_file_path  = \Drupal::service('extension.list.module')->getPath($settings['target_module']);
     $config_file_path .= DIRECTORY_SEPARATOR . $settings['config_directory'] . DIRECTORY_SEPARATOR;
     $config_file_path .= $this->configName . '.yml';
     return $config_file_path;
diff --git a/src/EventSubscriber/ConfigDeleteSubscriber.php b/src/EventSubscriber/ConfigDeleteSubscriber.php
index 409e277..103e877 100644
--- a/src/EventSubscriber/ConfigDeleteSubscriber.php
+++ b/src/EventSubscriber/ConfigDeleteSubscriber.php
@@ -16,21 +16,21 @@ class ConfigDeleteSubscriber implements EventSubscriberInterface {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The enforced config collection.
    *
-   * @var \Drupal\config_enforce_devel\EnforcedConfigCollection
+   * @var EnforcedConfigCollection
    */
   protected $enforcedConfigCollection;
 
   /**
    * Constructs the ConfigDeleteSubscriber object.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
@@ -41,7 +41,7 @@ class ConfigDeleteSubscriber implements EventSubscriberInterface {
   /**
    * React to configuration ConfigEvent::DELETE events.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The event to process.
    */
   public function onConfigDelete(ConfigCrudEvent $event) {
diff --git a/src/Form/DevelFormHelperTrait.php b/src/Form/DevelFormHelperTrait.php
index 65df983..2035414 100644
--- a/src/Form/DevelFormHelperTrait.php
+++ b/src/Form/DevelFormHelperTrait.php
@@ -426,7 +426,7 @@ trait DevelFormHelperTrait {
    * Return a list of all config object names from given module and directory.
    */
   protected function getModuleConfigNames($module, $directory) {
-    $module_config_path = drupal_get_path('module', $module) . '/' . $directory;
+    $module_config_path = \Drupal::service('extension.list.module')->getPath($module) . '/' . $directory;
     $storage = new FileStorage($module_config_path, StorageInterface::DEFAULT_COLLECTION);
     return $storage->listAll();
   }
diff --git a/src/TargetModuleBuilder.php b/src/TargetModuleBuilder.php
index 5fbd144..422fa8a 100644
--- a/src/TargetModuleBuilder.php
+++ b/src/TargetModuleBuilder.php
@@ -309,7 +309,7 @@ class TargetModuleBuilder {
    * Return a rendered the info file template.
    */
   protected function getInfoFileContents() {
-    $template = drupal_get_path('module', 'config_enforce_devel') . '/templates/info.yml.twig';
+    $template = \Drupal::service('extension.list.module')->getPath('config_enforce_devel') . '/templates/info.yml.twig';
     // Cast to string since twig_render_template returns a Markup object.
     return (string) \Drupal::service('twig')
       ->loadTemplate($template)
