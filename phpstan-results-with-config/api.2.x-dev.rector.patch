diff --git a/api.install b/api.install
index e7b50e3..a46978d 100644
--- a/api.install
+++ b/api.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\api\Interfaces\PhpBranchInterface;
 /**
  * @file
  * Install, update and uninstall functions for the api module.
@@ -24,7 +25,7 @@ function api_install() {
   $pathautoConfig->save();
 
   // Create new PHP branch.
-  /** @var \Drupal\api\Interfaces\PhpBranchInterface $php_branch */
+  /** @var PhpBranchInterface $php_branch */
   $php_branch = PhpBranch::create();
   $php_branch
     ->setTitle('PHP functions')
diff --git a/api.module b/api.module
index b405aad..524abd0 100644
--- a/api.module
+++ b/api.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\api\Parser;
+use Drupal\api\Utilities;
+use Drupal\Core\Field\FieldDefinitionInterface;
 /**
  * @file
  * Contains api.module.
@@ -43,9 +46,9 @@ function api_cron() {
   // This might be a lengthy operation.
   Environment::setTimeLimit(0);
 
-  /** @var \Drupal\api\Parser $parser */
+  /** @var Parser $parser */
   $parser = Drupal::service('api.parser');
-  /** @var \Drupal\api\Utilities $utilities */
+  /** @var Utilities $utilities */
   $utilities = Drupal::service('api.utilities');
 
   // Remove cruft.
@@ -523,7 +526,7 @@ function api_entity_base_field_info_alter(array &$fields, EntityTypeInterface $e
     $config = \Drupal::config('api.comments')->get();
     unset($config['status']);
 
-    /** @var \Drupal\Core\Field\FieldDefinitionInterface[] $fields */
+    /** @var FieldDefinitionInterface[] $fields */
     $settings = array_merge($fields['comments']->getSettings(), $config);
     $fields['comments']->setSettings($settings);
   }
diff --git a/api.theme.inc b/api.theme.inc
index 32a1b5b..837d425 100644
--- a/api.theme.inc
+++ b/api.theme.inc
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\api\Entity\Project;
+use Drupal\api\Interfaces\DocBlockInterface;
 /**
  * @file
  * Theme-related functions for the API module.
@@ -56,7 +58,7 @@ function template_preprocess_views_view_dl_list(array &$variables) {
 function template_preprocess_project(array &$variables) {
   $project = $variables['elements']['#project'] ?? NULL;
   if ($project) {
-    /** @var \Drupal\api\Entity\Project $project */
+    /** @var Project $project */
     $variables += Formatter::prepareBranchVariables($project->getDefaultBranch(TRUE));
   }
 }
@@ -123,7 +125,7 @@ function api_preprocess_api_group_page(&$variables) {
  * Sets up variables for the file link and summary line.
  */
 function api_preprocess_api_defined(&$variables) {
-  /** @var \Drupal\api\Interfaces\DocBlockInterface $object */
+  /** @var DocBlockInterface $object */
   $object = $variables['object'];
   $branch = $variables['branch'];
   $variables['file_link'] = Formatter::linkFile($object);
@@ -140,7 +142,7 @@ function api_preprocess_api_defined(&$variables) {
  * Sets up variables for the class link and summary line.
  */
 function api_preprocess_api_class_section(&$variables) {
-  /** @var \Drupal\api\Interfaces\DocBlockInterface $class */
+  /** @var DocBlockInterface $class */
   $class = $variables['class'];
   $branch = $variables['branch'];
 
diff --git a/modules/api_search_api_db_defaults/api_search_api_db_defaults.install b/modules/api_search_api_db_defaults/api_search_api_db_defaults.install
index 1a37370..c95ca74 100644
--- a/modules/api_search_api_db_defaults/api_search_api_db_defaults.install
+++ b/modules/api_search_api_db_defaults/api_search_api_db_defaults.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityTypeManager;
 /**
  * @file
  * Install, update and uninstall functions for the DB Search Defaults module.
@@ -19,7 +20,7 @@ function api_search_api_db_defaults_requirements($phase) {
         'view' => 'api_search_api_db',
       ];
 
-      /** @var \Drupal\Core\Entity\EntityTypeManager $entity_type_manager */
+      /** @var EntityTypeManager $entity_type_manager */
       $entity_type_manager = \Drupal::service('entity_type.manager');
       foreach ($entities_to_check as $entity_type => $entity_id) {
         // Find out if the entity is already in place. If so, fail to install
diff --git a/modules/api_search_api_solr_defaults/api_search_api_solr_defaults.install b/modules/api_search_api_solr_defaults/api_search_api_solr_defaults.install
index 0a60dfb..68ce035 100644
--- a/modules/api_search_api_solr_defaults/api_search_api_solr_defaults.install
+++ b/modules/api_search_api_solr_defaults/api_search_api_solr_defaults.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityTypeManager;
 /**
  * @file
  * Install and uninstall functions for the API Solr Search-API Defaults module.
@@ -19,7 +20,7 @@ function api_search_api_solr_defaults_requirements($phase) {
         'view' => 'api_search_api_solr',
       ];
 
-      /** @var \Drupal\Core\Entity\EntityTypeManager $entity_type_manager */
+      /** @var EntityTypeManager $entity_type_manager */
       $entity_type_manager = \Drupal::service('entity_type.manager');
       foreach ($entities_to_check as $entity_type => $entity_id) {
         // Find out if the entity is already in place. If so, fail to install
diff --git a/modules/api_search_core/src/Plugin/Search/DocBlockSearch.php b/modules/api_search_core/src/Plugin/Search/DocBlockSearch.php
index aa29fbc..84b8cff 100644
--- a/modules/api_search_core/src/Plugin/Search/DocBlockSearch.php
+++ b/modules/api_search_core/src/Plugin/Search/DocBlockSearch.php
@@ -27,21 +27,21 @@ class DocBlockSearch extends SearchPluginBase implements AccessibleInterface {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -62,11 +62,11 @@ class DocBlockSearch extends SearchPluginBase implements AccessibleInterface {
   /**
    * Creates a UserSearch object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Commands/ApiCommands.php b/src/Commands/ApiCommands.php
index 899fe81..9f6674e 100644
--- a/src/Commands/ApiCommands.php
+++ b/src/Commands/ApiCommands.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\api\Commands;
 
+use Drupal\api\Interfaces\BranchInterface;
+use Drupal\Core\Queue\QueueInterface;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
 use Drupal\api\Entity\Branch;
 use Drupal\api\Entity\ExternalBranch;
@@ -52,7 +54,7 @@ class ApiCommands extends DrushCommands {
   public function upsertBranch($project, $project_title, $project_type, $branch, $branch_title, $directory, $core_compatibility, $update_frequency) {
     if (!Project::exists($project)) {
       $project_slug = $project;
-      /** @var \Drupal\api\Interfaces\ProjectInterface $project */
+      /** @var ProjectInterface $project */
       $project = Project::create();
       $project
         ->setTitle($project_title)
@@ -73,7 +75,7 @@ class ApiCommands extends DrushCommands {
     if ($project->id()) {
       $branch = Branch::getBySlug($branch_slug, $project);
       if (empty($branch)) {
-        /** @var \Drupal\api\Interfaces\BranchInterface $branch */
+        /** @var BranchInterface $branch */
         $branch = Branch::create();
         $branch
           ->setTitle($branch_title)
@@ -175,7 +177,7 @@ class ApiCommands extends DrushCommands {
    */
   protected function emptyParsingQueue() {
     $queue_factory = \Drupal::service('queue');
-    /** @var \Drupal\Core\Queue\QueueInterface $queue */
+    /** @var QueueInterface $queue */
     $queue = $queue_factory->get(Parser::QUEUE_PARSE);
     $queue->deleteQueue();
   }
@@ -219,7 +221,7 @@ class ApiCommands extends DrushCommands {
    * @aliases apiqw
    */
   public function quickWizard($repo_url, $type = 'module') {
-    /** @var \Drupal\api\Utilities $utilities */
+    /** @var Utilities $utilities */
     $utilities = \Drupal::service('api.utilities');
 
     if (!UrlHelper::isValid($repo_url)) {
@@ -245,7 +247,7 @@ class ApiCommands extends DrushCommands {
         // Repo was cloned to the filesystem, create the project now.
         $formatted_name = Unicode::ucwords(str_replace(['-', '_'], [' ', ' '], $project_name));
 
-        /** @var \Drupal\api\Interfaces\ProjectInterface $project */
+        /** @var ProjectInterface $project */
         $project = Project::create();
         $project
           ->setTitle($formatted_name)
@@ -275,7 +277,7 @@ class ApiCommands extends DrushCommands {
             $utilities->addExtraDocumentation($branch_info['folder'], $branch_info['branch'], $project);
           }
 
-          /** @var \Drupal\api\Interfaces\BranchInterface $branch */
+          /** @var BranchInterface $branch */
           $branch = Branch::getBySlug($branch_info['branch'], $project) ?? Branch::create();
           $branch
             ->setTitle($branch_info['branch'])
@@ -320,7 +322,7 @@ class ApiCommands extends DrushCommands {
    *
    * @filter-default-field branch
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Rows to be rendered as output.
    */
   public function listBranches(array $options = ['format' => 'table']) {
@@ -356,12 +358,12 @@ class ApiCommands extends DrushCommands {
    *
    * @filter-default-field queue
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Rows to be rendered as output.
    */
   public function countQueues(array $options = ['format' => 'table']) {
     $queue_factory = \Drupal::service('queue');
-    /** @var \Drupal\Core\Queue\QueueInterface $queue */
+    /** @var QueueInterface $queue */
     $queue = $queue_factory->get(Parser::QUEUE_PARSE);
 
     $rows[] = [
diff --git a/src/Controller/AutocompleteController.php b/src/Controller/AutocompleteController.php
index 09bda4e..572ec92 100644
--- a/src/Controller/AutocompleteController.php
+++ b/src/Controller/AutocompleteController.php
@@ -20,12 +20,12 @@ class AutocompleteController extends ControllerBase {
   /**
    * Searches a branch for a given term.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to search in.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Autocomplete results.
    */
   public function searchAutocomplete(BranchInterface $branch, Request $request) {
diff --git a/src/Controller/BranchController.php b/src/Controller/BranchController.php
index c946e31..2a1a9bd 100644
--- a/src/Controller/BranchController.php
+++ b/src/Controller/BranchController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\api\Interfaces\BranchInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpFoundation\Request;
@@ -16,12 +17,12 @@ class BranchController extends ControllerBase {
   /**
    * Marks a branch for re-parsing.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to mark for re-parsing.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect with a message.
    */
   public function parse(BranchInterface $branch, Request $request) {
diff --git a/src/Controller/OpenSearchController.php b/src/Controller/OpenSearchController.php
index 079ba43..0a34264 100644
--- a/src/Controller/OpenSearchController.php
+++ b/src/Controller/OpenSearchController.php
@@ -22,14 +22,14 @@ class OpenSearchController extends ControllerBase {
   /**
    * Utilities service.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
   /**
    * Construct method.
    *
-   * @param \Drupal\api\Utilities $utilities
+   * @param Utilities $utilities
    *   Utilities service.
    */
   public function __construct(Utilities $utilities) {
@@ -47,10 +47,10 @@ class OpenSearchController extends ControllerBase {
   /**
    * Page callback: Prints out OpenSearch plugin discovery XML output.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   XML page output response.
    *
    * @see https://developer.mozilla.org/en/Creating_OpenSearch_plugins_for_Firefox
@@ -106,10 +106,10 @@ class OpenSearchController extends ControllerBase {
    *
    * @param string $term
    *   The string to search for.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Suggest results.
    *
    * @see http://www.opensearch.org/Specifications/OpenSearch/Extensions/Suggestions/1.0
diff --git a/src/Controller/OutputController.php b/src/Controller/OutputController.php
index 190ddf6..8cb1029 100644
--- a/src/Controller/OutputController.php
+++ b/src/Controller/OutputController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\api\Controller;
 
+use Drupal\api\Interfaces\BranchInterface;
+use Drupal\api\Interfaces\DocBlockInterface;
 use Drupal\api\Entity\Branch;
 use Drupal\api\Entity\DocBlock;
 use Drupal\api\Entity\DocBlock\DocFunction;
@@ -101,14 +103,14 @@ class OutputController extends ControllerBase {
   /**
    * Utilities service.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
   /**
    * Construct method.
    *
-   * @param \Drupal\api\Utilities $utilities
+   * @param Utilities $utilities
    *   Utilities service.
    */
   public function __construct(Utilities $utilities) {
@@ -126,14 +128,14 @@ class OutputController extends ControllerBase {
   /**
    * Outputs a full list of elements for a branch / project.
    *
-   * @param string|\Drupal\api\Interfaces\ProjectInterface $project
+   * @param string|ProjectInterface $project
    *   Project, ID or slug where the branch belongs to.
-   * @param string|\Drupal\api\Interfaces\BranchInterface $branch
+   * @param string|BranchInterface $branch
    *   Branch, ID or slug.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Json output.
    */
   public function fullList($project, $branch, Request $request) {
@@ -150,7 +152,7 @@ class OutputController extends ControllerBase {
     $ids = DocBlock::getFullList($branch, $range);
     $output = [];
     foreach ($ids as $id) {
-      /** @var \Drupal\api\Interfaces\DocBlockInterface $docBlock */
+      /** @var DocBlockInterface $docBlock */
       $docBlock = DocBlock::load($id);
       $output[] = $docBlock->toBasicArray();
     }
@@ -161,7 +163,7 @@ class OutputController extends ControllerBase {
   /**
    * Checks the parameters for range options.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return array|null|false
@@ -191,10 +193,10 @@ class OutputController extends ControllerBase {
    *
    * @param string $project
    *   Project ID or slug where the branch belongs to.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Json output.
    */
   public function fullListProject($project, Request $request) {
@@ -212,10 +214,10 @@ class OutputController extends ControllerBase {
    *
    * @param string $branch
    *   Branch to give elements from.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse|\Symfony\Component\HttpFoundation\Response
+   * @return JsonResponse|Response
    *   Json output or plain text, depending on request object.
    */
   public function functionDump($branch, Request $request) {
@@ -245,10 +247,10 @@ class OutputController extends ControllerBase {
    *
    * @param string $argument
    *   Type of the object user is trying to see.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect to the branch and project or front page.
    */
   public function default($argument, Request $request) {
@@ -306,7 +308,7 @@ class OutputController extends ControllerBase {
   /**
    * Page callback: Displays a list of links to projects using a pager.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return array
@@ -333,10 +335,10 @@ class OutputController extends ControllerBase {
    *   Project slug.
    * @param string $argument
    *   Rest of the route.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return array|null|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|null|RedirectResponse
    *   Render array for the page, NULL if the page doesn't work or redirect.
    */
   public function branchDefaultRoute($project, $argument, Request $request) {
@@ -385,10 +387,10 @@ class OutputController extends ControllerBase {
    *   Rest of the route.
    * @param string $branch
    *   Branch slug.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return array|null|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|null|RedirectResponse
    *   Render array for the page, or NULL if the page doesn't work.
    */
   public function branchExplicitRoute($project, $argument, $branch, Request $request) {
@@ -432,7 +434,7 @@ class OutputController extends ControllerBase {
    * @param string $branch_slug
    *   Slug of the branch.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|\Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @return RedirectResponse|NotFoundHttpException
    *   Either redirect to the right place or throw a not found exception.
    */
   protected function legacyObject($type, $object_name, $branch_slug) {
@@ -467,7 +469,7 @@ class OutputController extends ControllerBase {
    * @param string $file_information
    *   All parametres after the 'file/' part of the URL.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|\Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @return RedirectResponse|NotFoundHttpException
    *   Either redirect to the right place or throw a not found exception.
    */
   public function legacyFileRoute($file_information) {
@@ -529,7 +531,7 @@ class OutputController extends ControllerBase {
    * @param string $branch_slug
    *   Slug of the branch.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|\Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @return RedirectResponse|NotFoundHttpException
    *   Either redirect to the right place or throw a not found exception.
    */
   protected function legacyListing($type, $branch_slug) {
@@ -566,7 +568,7 @@ class OutputController extends ControllerBase {
    *   Namespace to see.
    * @param string $branch
    *   Branch slug.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return array|null
@@ -605,10 +607,10 @@ class OutputController extends ControllerBase {
    *   Type of element to show.
    * @param string $branch
    *   Branch slug.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return array|null|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|null|RedirectResponse
    *   Render array for the page, or NULL if the page doesn't work.
    */
   public function fileReferencesRoute($project, $filename, $type, $branch, Request $request) {
@@ -656,10 +658,10 @@ class OutputController extends ControllerBase {
    *   Element to see.
    * @param string $branch
    *   Branch slug.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return array|null|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|null|RedirectResponse
    *   Render array for the page, or NULL if the page doesn't work.
    */
   public function detailPageTypeRoute($project, $filename, $type, $item, $branch, Request $request) {
@@ -716,7 +718,7 @@ class OutputController extends ControllerBase {
    *   Element to see.
    * @param string $branch
    *   Branch slug.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return array|null
@@ -752,11 +754,11 @@ class OutputController extends ControllerBase {
   /**
    * Page callback: Generates the default documentation page for a branch.
    *
-   * @param string|\Drupal\api\Interfaces\BranchInterface $branch
+   * @param string|BranchInterface $branch
    *   Branch giving the branch to display documentation for.
-   * @param string|\Drupal\api\Interfaces\ProjectInterface $project
+   * @param string|ProjectInterface $project
    *   Branch giving the branch to display documentation for.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return array|null
diff --git a/src/Controller/SearchController.php b/src/Controller/SearchController.php
index 85be724..ef83f62 100644
--- a/src/Controller/SearchController.php
+++ b/src/Controller/SearchController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Controller;
 
+use Symfony\Component\HttpFoundation\Response;
 use Drupal\api\Entity\Branch;
 use Drupal\api\Entity\DocBlock;
 use Drupal\api\Form\SearchForm;
@@ -29,23 +30,23 @@ class SearchController extends ControllerBase {
   /**
    * Utilities service.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * Construct method.
    *
-   * @param \Drupal\api\Utilities $utilities
+   * @param Utilities $utilities
    *   Utilities service.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
    */
   public function __construct(Utilities $utilities, PathValidatorInterface $path_validator) {
@@ -68,7 +69,7 @@ class SearchController extends ControllerBase {
    *
    * @param string $term
    *   Original term passed to the route, most likely empty.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return string
@@ -92,10 +93,10 @@ class SearchController extends ControllerBase {
    *
    * @param string $term
    *   Search term.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Response object.
    */
   public function globalSearchRedirect($term, Request $request) {
@@ -135,10 +136,10 @@ class SearchController extends ControllerBase {
   /**
    * Endpoint with no project or branch, so just redirect to defaults.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect to the right page.
    */
   public function defaultsRedirect(Request $request) {
@@ -161,10 +162,10 @@ class SearchController extends ControllerBase {
    *   Branch slug.
    * @param string $term
    *   Search term.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect to the right page.
    */
   public function branchSearchRedirect($branch, $term, Request $request) {
@@ -190,10 +191,10 @@ class SearchController extends ControllerBase {
    *
    * @param string $term
    *   Term to search.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Redirect to the right place.
    */
   public function moduleSearchRedirect($term, Request $request) {
@@ -218,7 +219,7 @@ class SearchController extends ControllerBase {
    *   Project slug.
    * @param string $branch
    *   Branch slug.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return array
@@ -246,10 +247,10 @@ class SearchController extends ControllerBase {
    *   Branch slug.
    * @param string $term
    *   Search term.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   Render array.
    */
   public function searchListingPage($project, $branch, $term, Request $request) {
diff --git a/src/Entity/Branch.php b/src/Entity/Branch.php
index f8c190a..d8e7011 100644
--- a/src/Entity/Branch.php
+++ b/src/Entity/Branch.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Entity;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\Interfaces\ProjectInterface;
 use Drupal\api\Traits\MatchingTrait;
 use Drupal\api\Utilities;
@@ -494,7 +495,7 @@ class Branch extends ContentEntityBase implements BranchInterface {
    *   Matching entries IDs or null.
    */
   public static function matches(array $conditions) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('branch');
     self::applyConditions($query, $conditions);
 
@@ -506,7 +507,7 @@ class Branch extends ContentEntityBase implements BranchInterface {
    *
    * @param string $slug
    *   Slug of the branch.
-   * @param \Drupal\api\Interfaces\ProjectInterface|null $project
+   * @param ProjectInterface|null $project
    *   Project object or null.
    *
    * @return int[]|null
@@ -527,10 +528,10 @@ class Branch extends ContentEntityBase implements BranchInterface {
    *
    * @param string $slug
    *   Slug of the branch.
-   * @param \Drupal\api\Interfaces\ProjectInterface $project
+   * @param ProjectInterface $project
    *   Project where the branch belongs.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface|null
+   * @return BranchInterface|null
    *   Branch if it exists or null if not.
    */
   public static function getBySlug($slug, ProjectInterface $project) {
@@ -571,7 +572,7 @@ class Branch extends ContentEntityBase implements BranchInterface {
    * @param string $field_name
    *   Name of the field pointing at the DocBlock. Defaults to 'docblock'.
    *
-   * @return \Drupal\api\Entity\DocBlock
+   * @return DocBlock
    *   The called php_branch entity.
    */
   public function deleteRelated($entity_type, $field_name = 'branch') {
@@ -591,10 +592,10 @@ class Branch extends ContentEntityBase implements BranchInterface {
   /**
    * Attempts to locate a core branch corresponding to the given branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch object to find a core branch for.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface|null
+   * @return BranchInterface|null
    *   Branch object for the core branch, if there is one. If not, FALSE.
    */
   public static function findCoreBranch(BranchInterface $branch) {
@@ -623,12 +624,12 @@ class Branch extends ContentEntityBase implements BranchInterface {
   /**
    * Attempts to locate a core branch corresponding to the given branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface|string $branch
+   * @param BranchInterface|string $branch
    *   Branch object to find a core branch for or core compatibility value.
    * @param bool $full_entities
    *   Return full entities or just IDs.
    *
-   * @return int[]|\Drupal\api\Interfaces\BranchInterface[]|null
+   * @return int[]|BranchInterface[]|null
    *   IDs of branches with same core compatibility as the one given.
    */
   public static function sameCoreCompatibilityBranches($branch, $full_entities = FALSE) {
@@ -654,7 +655,7 @@ class Branch extends ContentEntityBase implements BranchInterface {
    * @param bool $full_entities
    *   Return full entities or just IDs.
    *
-   * @return int[]|\Drupal\api\Interfaces\BranchInterface[]|null
+   * @return int[]|BranchInterface[]|null
    *   IDs of branches with same core compatibility as the one given.
    */
   public static function getByCoreCompatibility($core_compatibility, $full_entities = FALSE) {
diff --git a/src/Entity/DocBlock.php b/src/Entity/DocBlock.php
index ace63ca..59bde0a 100644
--- a/src/Entity/DocBlock.php
+++ b/src/Entity/DocBlock.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\api\Entity;
 
+use Drupal\Core\Entity\Query\QueryInterface;
+use Drupal\api\Parser;
+use Drupal\api\Interfaces\DocBlock\DocFunctionInterface;
+use Drupal\api\Interfaces\DocBlock\DocFileInterface;
+use Drupal\api\Interfaces\DocBlock\DocNamespaceInterface;
 use Drupal\api\Entity\DocBlock\DocClassMember;
 use Drupal\api\Entity\DocBlock\DocFile;
 use Drupal\api\Entity\DocBlock\DocFunction;
@@ -616,7 +621,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
    *
    * @param array $reference_ids
    *   Array of DocReference IDs.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where to look for results.
    * @param bool $extends_match
    *   Get the ID of the extends_docblock instead of the docblock property.
@@ -871,7 +876,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
    * {@inheritdoc}
    */
   public static function matches(array $conditions, BranchInterface $branch = NULL, array $range = NULL, array $sort = NULL) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('docblock');
     if ($branch) {
       $query->condition('branch', $branch->id());
@@ -982,12 +987,12 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
    *
    * @param array $docblock
    *   Docblock information.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where it belongs to.
    * @param array $processed_ids
    *   Already processed ids to avoid duplication.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface|null
+   * @return DocBlockInterface|null
    *   Created or updated entity or null.
    */
   protected static function upsert(array $docblock, BranchInterface $branch, array $processed_ids) {
@@ -1041,9 +1046,9 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
    *
    * @param array $docblock
    *   Docblock array.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $entity
+   * @param DocBlockInterface $entity
    *   DocBlock entity.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch entity.
    * @param string $namespace
    *   Namespace where the info belongs to.
@@ -1051,7 +1056,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
    *   Aliases used in this docblock.
    */
   protected static function upsertRelated(array $docblock, DocBlockInterface $entity, BranchInterface $branch, $namespace, array $use_aliases) {
-    /** @var \Drupal\api\Parser $parser */
+    /** @var Parser $parser */
     $parser = \Drupal::service('api.parser');
 
     // Now let's go for all the related entities.
@@ -1060,7 +1065,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
         $entity->deleteRelated('docblock_function');
 
         $parser->addTextDefaults($docblock, 'docblock_function');
-        /** @var \Drupal\api\Interfaces\DocBlock\DocFunctionInterface $docFunction */
+        /** @var DocFunctionInterface $docFunction */
         $docFunction = DocFunction::create();
         $docFunction
           ->setDocBlock($entity)
@@ -1078,7 +1083,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
       case 'file':
         $entity->deleteRelated('docblock_file');
 
-        /** @var \Drupal\api\Interfaces\DocBlock\DocFileInterface $docFile */
+        /** @var DocFileInterface $docFile */
         $docFile = DocFile::create();
         $docFile
           ->setDocBlock($entity)
@@ -1136,7 +1141,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
                     // This is an insteadof statement.
                     $name = Formatter::fullClassname($name, $namespace, $use_aliases);
 
-                    /** @var \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface $docNamespace */
+                    /** @var DocNamespaceInterface $docNamespace */
                     $docNamespace = DocNamespace::create();
                     $docNamespace
                       ->setDocBlock($entity)
@@ -1154,7 +1159,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
                     ]);
                   }
                   else {
-                    /** @var \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface $docNamespace */
+                    /** @var DocNamespaceInterface $docNamespace */
                     $docNamespace = DocNamespace::create();
                     $docNamespace
                       ->setDocBlock($entity)
@@ -1208,14 +1213,14 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
    *
    * @param array $docblocks_array
    *   Fields and values to insert/udpate.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where this item belongs to.
    *
    * @return bool
    *   Whether everything went as expected or not.
    */
   public static function createOrUpdate(array $docblocks_array, BranchInterface $branch) {
-    /** @var \Drupal\api\Parser $parser */
+    /** @var Parser $parser */
     $parser = \Drupal::service('api.parser');
 
     $docblocks = $docblocks_array;
@@ -1333,7 +1338,7 @@ class DocBlock extends ContentEntityBase implements DocBlockInterface {
    *
    * @param string $group
    *   Name of the group.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to search in.
    * @param string $exclude_this_file
    *   If filled in, ignore results in this file.
diff --git a/src/Entity/DocBlock/DocClassMember.php b/src/Entity/DocBlock/DocClassMember.php
index 7a4bae2..b7d8b19 100644
--- a/src/Entity/DocBlock/DocClassMember.php
+++ b/src/Entity/DocBlock/DocClassMember.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Entity\DocBlock;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\Interfaces\DocBlock\DocClassMemberInterface;
 use Drupal\api\Traits\MatchingTrait;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -117,7 +118,7 @@ class DocClassMember extends ContentEntityBase implements DocClassMemberInterfac
    * {@inheritdoc}
    */
   public static function matches(array $conditions, DocBlockInterface $class = NULL) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('docblock_class_member');
     if ($class) {
       $query->condition('class_docblock', $class->id());
diff --git a/src/Entity/DocBlock/DocFile.php b/src/Entity/DocBlock/DocFile.php
index fb9117b..58074f1 100644
--- a/src/Entity/DocBlock/DocFile.php
+++ b/src/Entity/DocBlock/DocFile.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Entity\DocBlock;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\Interfaces\DocBlock\DocFileInterface;
 use Drupal\api\Traits\MatchingTrait;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -113,7 +114,7 @@ class DocFile extends ContentEntityBase implements DocFileInterface {
    * {@inheritdoc}
    */
   public static function matches(array $conditions, DocBlockInterface $docBlock = NULL) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('docblock_file');
     if (!is_null($docBlock)) {
       $query->condition('docblock', $docBlock->id());
diff --git a/src/Entity/DocBlock/DocFunction.php b/src/Entity/DocBlock/DocFunction.php
index f1a7a9e..58ef5f9 100644
--- a/src/Entity/DocBlock/DocFunction.php
+++ b/src/Entity/DocBlock/DocFunction.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Entity\DocBlock;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\ExtendedQueries;
 use Drupal\api\Interfaces\BranchInterface;
 use Drupal\api\Interfaces\DocBlock\DocFunctionInterface;
@@ -133,7 +134,7 @@ class DocFunction extends ContentEntityBase implements DocFunctionInterface {
   /**
    * Gets an array of all the plain functions belonging to a branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to check data from.
    *
    * @return array
@@ -147,7 +148,7 @@ class DocFunction extends ContentEntityBase implements DocFunctionInterface {
    * {@inheritdoc}
    */
   public static function matches(array $conditions, DocBlockInterface $docBlock) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('docblock_function');
     $query->condition('docblock', $docBlock->id());
     self::applyConditions($query, $conditions);
diff --git a/src/Entity/DocBlock/DocNamespace.php b/src/Entity/DocBlock/DocNamespace.php
index 79af4a7..c52f336 100644
--- a/src/Entity/DocBlock/DocNamespace.php
+++ b/src/Entity/DocBlock/DocNamespace.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Entity\DocBlock;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\Interfaces\DocBlock\DocNamespaceInterface;
 use Drupal\api\Traits\MatchingTrait;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -74,7 +75,7 @@ class DocNamespace extends ContentEntityBase implements DocNamespaceInterface {
    * {@inheritdoc}
    */
   public static function matches(array $conditions, DocBlockInterface $docBlock = NULL) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('docblock_namespace');
     if ($docBlock) {
       $query->condition('docblock', $docBlock->id());
diff --git a/src/Entity/DocBlock/DocOverride.php b/src/Entity/DocBlock/DocOverride.php
index 91a120c..3a54bef 100644
--- a/src/Entity/DocBlock/DocOverride.php
+++ b/src/Entity/DocBlock/DocOverride.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Entity\DocBlock;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\Interfaces\DocBlock\DocOverrideInterface;
 use Drupal\api\Traits\MatchingTrait;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -120,7 +121,7 @@ class DocOverride extends ContentEntityBase implements DocOverrideInterface {
    * {@inheritdoc}
    */
   public static function matches(array $conditions, DocBlockInterface $docBlock = NULL) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('docblock_override');
     if ($docBlock) {
       $query->condition('docblock', $docBlock->id());
diff --git a/src/Entity/DocBlock/DocReference.php b/src/Entity/DocBlock/DocReference.php
index 78c3cdb..263f023 100644
--- a/src/Entity/DocBlock/DocReference.php
+++ b/src/Entity/DocBlock/DocReference.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\api\Entity\DocBlock;
 
+use Drupal\api\Interfaces\DocBlock\DocNamespaceInterface;
+use Drupal\api\Interfaces\DocBlock\DocClassMemberInterface;
+use Drupal\api\Interfaces\DocBlock\DocOverrideInterface;
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\Entity\Branch;
 use Drupal\api\Entity\DocBlock;
 use Drupal\api\Entity\PhpDocumentation;
@@ -164,9 +168,9 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
   /**
    * Remove any references for the entity and branch.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $entity
+   * @param DocBlockInterface $entity
    *   Entity where references are linked to.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where references are linked to.
    * @param bool $do_namespaces
    *   Do namespaces too or not.
@@ -204,9 +208,9 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
   /**
    * Add references for the entity and branch.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $entity
+   * @param DocBlockInterface $entity
    *   Entity where references are linked to.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where references are linked to.
    * @param array $references
    *   References to add.
@@ -226,7 +230,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
           if ($do_namespaces) {
             // In this case, $list is actually a string containing the namespace
             // for a file, not a list.
-            /** @var \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface $docNamespace */
+            /** @var DocNamespaceInterface $docNamespace */
             $docNamespace = DocNamespace::create();
             $docNamespace
               ->setDocBlock($entity)
@@ -241,7 +245,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
           if ($do_namespaces) {
             // Save all of the use aliases.
             foreach ($list as $alias => $class) {
-              /** @var \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface $docNamespace */
+              /** @var DocNamespaceInterface $docNamespace */
               $docNamespace = DocNamespace::create();
               $docNamespace
                 ->setDocBlock($entity)
@@ -329,7 +333,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
     $name = Formatter::validateEncoding($name);
 
     if (!$is_php_function) {
-      /** @var \Drupal\api\Interfaces\DocBlock\DocReferenceInterface $reference */
+      /** @var DocReferenceInterface $reference */
       $reference = self::create();
       $reference
         ->setObjectName($name)
@@ -371,7 +375,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
    *   ID of the class.
    */
   protected static function updateMembers(array $members, $class_id) {
-    /** @var \Drupal\api\Interfaces\DocBlockInterface $docBlock */
+    /** @var DocBlockInterface $docBlock */
     $classDocBlock = DocBlock::load($class_id);
 
     // Delete all references.
@@ -387,7 +391,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
 
         $processed_key = $member_alias . '-' . $member['docblock'] . '-' . $classDocBlock->id();
         if (empty($processed[$processed_key])) {
-          /** @var \Drupal\api\Interfaces\DocBlock\DocClassMemberInterface $classMember */
+          /** @var DocClassMemberInterface $classMember */
           $classMember = DocClassMember::create();
           $classMember
             ->setDocBlock(DocBlock::load($member['docblock']))
@@ -413,7 +417,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
     foreach ($members as $list) {
       foreach ($list as $member) {
         if ($member['direct_member']) {
-          /** @var \Drupal\api\Interfaces\DocBlockInterface $docBlock */
+          /** @var DocBlockInterface $docBlock */
           $docBlock = DocBlock::load($member['docblock']);
 
           if ($member['documented_in_docblock'] != $member['docblock']) {
@@ -423,7 +427,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
           // Delete the old information and insert new.
           $docBlock->deleteRelated('docblock_override');
 
-          /** @var \Drupal\api\Interfaces\DocBlock\DocOverrideInterface $override */
+          /** @var DocOverrideInterface $override */
           $override = DocOverride::create();
           $override->setDocBlock($docBlock);
 
@@ -442,7 +446,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
   /**
    * Finds the trait aliases for a given class.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   Class object.
    *
    * @return array
@@ -456,7 +460,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
 
     $return = [];
     foreach ($items as $item) {
-      /** @var \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface $item */
+      /** @var DocNamespaceInterface $item */
       $alias = $item->getClassAlias();
       $name = $item->getClassName();
       $pos = strpos($name, '::');
@@ -473,7 +477,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
   /**
    * Finds the trait precedences for a given class.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   Class object.
    *
    * @return array
@@ -487,7 +491,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
 
     $omit = [];
     foreach ($items as $item) {
-      /** @var \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface $item */
+      /** @var DocNamespaceInterface $item */
       $class = $item->getClassAlias();
       $method = $item->getClassName();
       $omit[$class][] = $method;
@@ -499,7 +503,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
   /**
    * Calculates a bare list of this class's direct members.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   DocBlock object.
    * @param array $member_info
    *   Member information.
@@ -573,7 +577,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
       return $cache_array[$class_id];
     }
 
-    /** @var \Drupal\api\Interfaces\DocBlockInterface $docBlock */
+    /** @var DocBlockInterface $docBlock */
     $docBlock = DocBlock::load($class_id);
 
     // Add this class's direct members to the list, and put it in the
@@ -697,9 +701,9 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
   /**
    * Get 'class' DocReference IDs for given DocBlock IDs.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to check in.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   Docblock to check in.
    *
    * @return int[]|null
@@ -715,7 +719,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
    * {@inheritdoc}
    */
   public static function matches(array $conditions, BranchInterface $branch = NULL, DocBlockInterface $docBlock = NULL) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('docblock_reference');
     if ($branch) {
       $query->condition('branch', $branch->id());
@@ -737,9 +741,9 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
    *   Classes to do.
    * @param array $classes_added
    *   Classes added.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $classDocBlock
+   * @param DocBlockInterface $classDocBlock
    *   Class DocBlock entity.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where all this info belongs to.
    */
   protected static function fillClassInheritedArray(array &$classes_changed, array &$classes_todo, array &$classes_added, DocBlockInterface $classDocBlock, BranchInterface $branch) {
@@ -773,7 +777,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
       if ($results) {
         $entities = self::loadMultiple($results);
         foreach ($entities as $entity) {
-          /** @var \Drupal\api\Interfaces\DocBlock\DocReferenceInterface $entity */
+          /** @var DocReferenceInterface $entity */
           if (!$entity->getDocBlock()) {
             continue;
           }
@@ -803,9 +807,9 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
    *   Classes to do.
    * @param array $classes_added
    *   Classes added.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $classDocBlock
+   * @param DocBlockInterface $classDocBlock
    *   Class DocBlock entity.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where all this info belongs to.
    */
   protected static function fillClassParentsArray(array &$class_parents, array &$classes_changed, array &$classes_todo, array &$classes_added, DocBlockInterface $classDocBlock, BranchInterface $branch = NULL) {
@@ -824,11 +828,11 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
     }
 
     foreach ($parents_to_check as $parent) {
-      /** @var \Drupal\api\Interfaces\DocBlock\DocReferenceInterface $parent_reference */
+      /** @var DocReferenceInterface $parent_reference */
       $parent_reference = self::load($parent);
 
       // Figure out the ID of this parent.
-      /** @var \Drupal\api\Interfaces\DocBlockInterface $bestClassDocBlock */
+      /** @var DocBlockInterface $bestClassDocBlock */
       $bestClassDocBlock = DocBlock::bestByClassByName(
         $parent_reference->getObjectName(),
         $parent_reference->getBranch()
@@ -879,9 +883,9 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
    *
    * @param array $class_members
    *   Array to fill.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $classDocBlock
+   * @param DocBlockInterface $classDocBlock
    *   Class DocBlock entity.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where all this info belongs to.
    */
   protected static function fillClassMembersArray(array &$class_members, DocBlockInterface $classDocBlock, BranchInterface $branch = NULL) {
@@ -903,7 +907,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
         'constant' => [],
       ];
       foreach ($result as $item) {
-        /** @var \Drupal\api\Interfaces\DocBlockInterface $item */
+        /** @var DocBlockInterface $item */
         $direct_members[$item->getObjectType()][$item->getMemberName()] = $item->id();
       }
       $class_members[$classDocBlock->id()] = $direct_members;
@@ -961,7 +965,7 @@ class DocReference extends ContentEntityBase implements DocReferenceInterface {
         continue;
       }
 
-      /** @var \Drupal\api\Interfaces\DocBlockInterface $classDocBlock */
+      /** @var DocBlockInterface $classDocBlock */
       $classDocBlock = DocBlock::load($class_id);
 
       self::fillClassMembersArray($class_members, $classDocBlock);
diff --git a/src/Entity/DocBlock/DocReferenceCount.php b/src/Entity/DocBlock/DocReferenceCount.php
index cba399a..da28670 100644
--- a/src/Entity/DocBlock/DocReferenceCount.php
+++ b/src/Entity/DocBlock/DocReferenceCount.php
@@ -129,7 +129,7 @@ class DocReferenceCount extends ContentEntityBase implements DocReferenceCountIn
   /**
    * Calculates all new reference counts for a given branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to check counts.
    */
   public static function calculateReferenceCounts(BranchInterface $branch) {
diff --git a/src/Entity/ExternalDocumentation.php b/src/Entity/ExternalDocumentation.php
index ac281dc..76fa9c2 100644
--- a/src/Entity/ExternalDocumentation.php
+++ b/src/Entity/ExternalDocumentation.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Entity;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\api\Interfaces\ExternalBranchInterface;
 use Drupal\api\Traits\MatchingTrait;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -233,7 +234,7 @@ class ExternalDocumentation extends ContentEntityBase implements ExternalDocumen
    * {@inheritdoc}
    */
   public static function matches(array $conditions, ExternalBranchInterface $branch = NULL) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('external_documentation');
     if ($branch) {
       $query->condition('external_branch', $branch->id());
@@ -300,10 +301,10 @@ class ExternalDocumentation extends ContentEntityBase implements ExternalDocumen
    *
    * @param array $properties
    *   Fields and values to insert/udpate.
-   * @param \Drupal\api\Interfaces\ExternalBranchInterface $branch
+   * @param ExternalBranchInterface $branch
    *   Branch where this item belongs to.
    *
-   * @return \Drupal\api\Interfaces\ExternalDocumentationInterface|null
+   * @return ExternalDocumentationInterface|null
    *   Created entity or null.
    */
   public static function createOrUpdate(array $properties, ExternalBranchInterface $branch) {
diff --git a/src/Entity/PhpDocumentation.php b/src/Entity/PhpDocumentation.php
index d8024f8..ed10848 100644
--- a/src/Entity/PhpDocumentation.php
+++ b/src/Entity/PhpDocumentation.php
@@ -180,7 +180,7 @@ class PhpDocumentation extends ContentEntityBase implements PhpDocumentationInte
    *
    * @param string $object_name
    *   Name of the function to look for.
-   * @param \Drupal\api\Interfaces\PhpBranchInterface $branch
+   * @param PhpBranchInterface $branch
    *   Branch the function belongs to.
    *
    * @return int[]|null
@@ -212,10 +212,10 @@ class PhpDocumentation extends ContentEntityBase implements PhpDocumentationInte
    *
    * @param array $properties
    *   Fields and values to insert/udpate.
-   * @param \Drupal\api\Interfaces\PhpBranchInterface $branch
+   * @param PhpBranchInterface $branch
    *   Branch where this item belongs to.
    *
-   * @return \Drupal\api\Interfaces\PhpDocumentationInterface|null
+   * @return PhpDocumentationInterface|null
    *   Created entity or null.
    */
   public static function createOrUpdate(array $properties, PhpBranchInterface $branch) {
diff --git a/src/Entity/Project.php b/src/Entity/Project.php
index ca3f89d..97bab8c 100644
--- a/src/Entity/Project.php
+++ b/src/Entity/Project.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\api\Entity;
 
+use Drupal\Core\Entity\Query\QueryInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\api\Interfaces\BranchInterface;
 use Drupal\api\Traits\MatchingTrait;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityChangedTrait;
@@ -204,7 +207,7 @@ class Project extends ContentEntityBase implements ProjectInterface {
    *   Matching entries IDs or null.
    */
   public static function matches(array $conditions) {
-    /** @var \Drupal\Core\Entity\Query\QueryInterface $query */
+    /** @var QueryInterface $query */
     $query = \Drupal::entityQuery('project');
     self::applyConditions($query, $conditions);
 
@@ -231,7 +234,7 @@ class Project extends ContentEntityBase implements ProjectInterface {
    * @param string $slug
    *   Slug of the project.
    *
-   * @return \Drupal\api\Interfaces\ProjectInterface|null
+   * @return ProjectInterface|null
    *   Project if it exists or null if not.
    */
   public static function getBySlug($slug) {
@@ -256,7 +259,7 @@ class Project extends ContentEntityBase implements ProjectInterface {
    * @param bool $full_entity
    *   Return full entities or just ids.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]|int[]|null
+   * @return EntityInterface[]|int[]|null
    *   List of core projects as objects or IDs or NULL if none found.
    */
   public static function getCoreProjects($full_entity = FALSE) {
@@ -292,7 +295,7 @@ class Project extends ContentEntityBase implements ProjectInterface {
     $branches = $this->getBranches(TRUE);
     if ($branches) {
       foreach ($branches as $branch) {
-        /** @var \Drupal\api\Interfaces\BranchInterface $branch */
+        /** @var BranchInterface $branch */
         if ($branch->isPreferred()) {
           return $branch;
         }
diff --git a/src/ExtendedQueries.php b/src/ExtendedQueries.php
index b14a299..f96f32a 100644
--- a/src/ExtendedQueries.php
+++ b/src/ExtendedQueries.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api;
 
+use Drupal\Core\Database\Connection;
 use Drupal\api\Entity\DocBlock;
 use Drupal\api\Interfaces\BranchInterface;
 use Drupal\api\Interfaces\DocBlockInterface;
@@ -61,7 +62,7 @@ class ExtendedQueries {
   /**
    * Returns the database connection service object.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   Database connection object.
    */
   protected static function connection() {
@@ -123,7 +124,7 @@ class ExtendedQueries {
    *
    * @param string|int $object_name_or_id
    *   The string object name or integer documentation ID to load.
-   * @param \Drupal\api\Interfaces\BranchInterface|null $branch
+   * @param BranchInterface|null $branch
    *   Branch object. Ignored if $object_name_or_id is an integer.
    * @param string|array|null $object_type
    *   A string type, or array of strings: class, interface, function, etc.
@@ -225,7 +226,7 @@ class ExtendedQueries {
    *   tries again with the plain name.
    * @param string $type
    *   Type of object to match (see api_link_name() for options).
-   * @param \Drupal\api\Interfaces\BranchInterface|null $branch
+   * @param BranchInterface|null $branch
    *   Object representing the branch to search. If NULL, use core compatibility
    *   instead.
    * @param string $core_compatibility
@@ -455,7 +456,7 @@ class ExtendedQueries {
    *   Name of the class.
    * @param string $member_name
    *   Name of the member.
-   * @param \Drupal\api\Interfaces\BranchInterface|null $branch
+   * @param BranchInterface|null $branch
    *   Branch object.
    * @param string $core_compatibility
    *   Core compatibility if branch is not given.
@@ -511,7 +512,7 @@ class ExtendedQueries {
   /**
    * Gets an array of all the plain functions belonging to a branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to check data from.
    *
    * @return array
@@ -550,7 +551,7 @@ class ExtendedQueries {
   /**
    * Calculates all new reference counts for a given branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to check counts.
    */
   public static function calculateReferenceCounts(BranchInterface $branch) {
@@ -792,9 +793,9 @@ class ExtendedQueries {
   /**
    * Counts or lists references to a function or file.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   DocBlock object.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Object representing the branch to check.
    * @param string $type
    *   Type of reference. One of:
diff --git a/src/Form/ApiSettingsForm.php b/src/Form/ApiSettingsForm.php
index deaebc1..28d6655 100644
--- a/src/Form/ApiSettingsForm.php
+++ b/src/Form/ApiSettingsForm.php
@@ -19,14 +19,14 @@ class ApiSettingsForm extends ConfigFormBase {
   /**
    * Drupal\api\Utilities definition.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\api\Utilities $utilities
+   * @param Utilities $utilities
    *   The utitities service.
    */
   public function __construct(Utilities $utilities) {
@@ -101,7 +101,7 @@ class ApiSettingsForm extends ConfigFormBase {
     if (count($branches)) {
       $branches_array = [];
       foreach ($branches as $branch) {
-        /** @var \Drupal\api\Entity\Branch $branch */
+        /** @var Branch $branch */
         $project = $branch->getProject();
         $branches_array[$project->getTitle()][$branch->getSlug() . '|' . $branch->id()] = $branch->getTitle() . ' - ' . $project->getTitle();
         ksort($branches_array[$project->getTitle()]);
diff --git a/src/Form/BranchForm.php b/src/Form/BranchForm.php
index 7c7928c..973e2d2 100644
--- a/src/Form/BranchForm.php
+++ b/src/Form/BranchForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Form;
 
+use Drupal\api\Interfaces\BranchInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -14,7 +15,7 @@ class BranchForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\api\Interfaces\BranchInterface $entity */
+    /** @var BranchInterface $entity */
     $entity = $this->getEntity();
     $result = $entity->save();
     $link = $entity->toLink($this->t('View'))->toString();
diff --git a/src/Form/CommentsForm.php b/src/Form/CommentsForm.php
index 9f05d01..6958bc2 100644
--- a/src/Form/CommentsForm.php
+++ b/src/Form/CommentsForm.php
@@ -21,14 +21,14 @@ class CommentsForm extends ConfigFormBase {
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(ModuleHandlerInterface $module_handler) {
@@ -193,7 +193,7 @@ class CommentsForm extends ConfigFormBase {
    *
    * @param array $form
    *   Form object.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public function applyToAll(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/QuickWizardForm.php b/src/Form/QuickWizardForm.php
index 6efe98e..2c3954a 100644
--- a/src/Form/QuickWizardForm.php
+++ b/src/Form/QuickWizardForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\api\Form;
 
+use Drupal\api\Interfaces\BranchInterface;
+use Drupal\Core\Entity\EntityBase;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\api\Entity\Branch;
 use Drupal\api\Entity\Project;
 use Drupal\api\Interfaces\ProjectInterface;
@@ -24,14 +27,14 @@ class QuickWizardForm extends FormBase {
   /**
    * Drupal\api\Utilities definition.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\api\Utilities $utilities
+   * @param Utilities $utilities
    *   The utitities service.
    */
   public function __construct(Utilities $utilities) {
@@ -219,14 +222,14 @@ class QuickWizardForm extends FormBase {
    *
    * @param array $branch_info
    *   Information about the branch folder structure.
-   * @param \Drupal\api\Entity\Project $project
+   * @param Project $project
    *   Project object.
    *
    * @return bool
    *   Whether the branch folder and entity was created or not.
    */
   public static function upsertBranch(array $branch_info, Project $project) {
-    /** @var \Drupal\api\Utilities $utilities */
+    /** @var Utilities $utilities */
     $utilities = \Drupal::service('api.utilities');
     $base_folder = substr($branch_info['folder'], 0, -1 * (strlen($branch_info['branch']) + 1));
 
@@ -244,7 +247,7 @@ class QuickWizardForm extends FormBase {
         $utilities->addExtraDocumentation($branch_info['folder'], $branch_info['branch'], $project);
       }
 
-      /** @var \Drupal\api\Interfaces\BranchInterface $branch */
+      /** @var BranchInterface $branch */
       $branch = Branch::getBySlug($branch_info['branch'], $project) ?? Branch::create();
       $branch
         ->setTitle($branch_info['branch'])
@@ -268,13 +271,13 @@ class QuickWizardForm extends FormBase {
    * @param string $type
    *   Type of the project.
    *
-   * @return \Drupal\Core\Entity\EntityBase|\Drupal\Core\Entity\EntityInterface
+   * @return EntityBase|EntityInterface
    *   Created project.
    */
   protected function createProject($project_name, $type) {
     $formatted_name = Unicode::ucwords(str_replace(['-', '_'], [' ', ' '], $project_name));
 
-    /** @var \Drupal\api\Interfaces\ProjectInterface $project */
+    /** @var ProjectInterface $project */
     $project = Project::create();
     $project
       ->setTitle($formatted_name)
diff --git a/src/Form/SearchForm.php b/src/Form/SearchForm.php
index 9292fee..c7f4f0c 100644
--- a/src/Form/SearchForm.php
+++ b/src/Form/SearchForm.php
@@ -18,9 +18,9 @@ class SearchForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\api\Interfaces\BranchInterface|null $branch
+   * @param BranchInterface|null $branch
    *   Branch currently loaded.
    *
    * @return array
diff --git a/src/Formatter.php b/src/Formatter.php
index 9c0c2e9..54833a0 100644
--- a/src/Formatter.php
+++ b/src/Formatter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\api;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\api\Interfaces\ExternalDocumentationInterface;
+use Drupal\api\Interfaces\DocBlock\DocNamespaceInterface;
 use Drupal\api\Entity\Branch;
 use Drupal\api\Entity\ExternalBranch;
 use Drupal\api\Entity\ExternalDocumentation;
@@ -134,7 +137,7 @@ class Formatter {
    *   Text with line break characters added.
    */
   public static function addBreaks($text) {
-    /** @var \Drupal\Core\Config\ImmutableConfig $api_config */
+    /** @var ImmutableConfig $api_config */
     $config = \Drupal::config('api.settings');
 
     $where = array_filter(explode(' ', $config->get('breaks_where') ?? self::BREAKS_WHERE));
@@ -273,7 +276,7 @@ class Formatter {
    * Regular expression callback for \@code tags in formatDocumentation().
    */
   public static function formatEmbeddedPhp($matches) {
-    /** @var \Drupal\api\Parser $apiParser */
+    /** @var Parser $apiParser */
     $apiParser = \Drupal::service('api.parser');
     $code = self::entityDecode($matches[1]);
     $statements = $apiParser->parsePhpCode($code);
@@ -722,7 +725,7 @@ class Formatter {
    *
    * @param string $documentation
    *   Documentation to scan for things to turn into links.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to make the links in.
    * @param int $docblock_id
    *   Documentation ID of the docblock the code is in (for namespace
@@ -826,7 +829,7 @@ class Formatter {
    *
    * @param string $documentation
    *   PHP code or documentation to scan for text to link.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to make the links in.
    * @param int $docblock_id
    *   Documentation ID of the docblock the code is in (for namespace
@@ -1164,7 +1167,7 @@ class Formatter {
   /**
    * Generates tab navigation for listing pages.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch of the current page.
    * @param string $object_type
    *   (optional) Object type of the listing page; leave out for the branch
@@ -1182,7 +1185,7 @@ class Formatter {
     $branches = $project->getBranches(TRUE);
     $links = [];
     foreach ($branches as $other_branch) {
-      /** @var \Drupal\api\Interfaces\BranchInterface $other_branch */
+      /** @var BranchInterface $other_branch */
       if ($suffix) {
         $path = 'api/' . $project->getSlug() . '/' . $suffix . '/' . $other_branch->getSlug();
       }
@@ -1222,7 +1225,7 @@ class Formatter {
    *
    * @param string $object_type
    *   The type to look for.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where to look.
    *
    * @return array
@@ -1329,7 +1332,7 @@ class Formatter {
    *
    * @param string $name
    *   Text to link.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch object indicating which branch to make the link in.
    * @param string $prepend
    *   Text to prepend on the link.
@@ -1368,7 +1371,7 @@ class Formatter {
    *
    * @param string $text
    *   Text matched by the regular expression.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch object indicating which branch to make the link in.
    * @param string $prepend
    *   Unused.
@@ -1416,7 +1419,7 @@ class Formatter {
       }
     }
 
-    /** @var \Drupal\api\Interfaces\BranchInterface $default_branch */
+    /** @var BranchInterface $default_branch */
     $default_core_compatibility = '';
     $default_branch = \Drupal::service('api.utilities')->getDefaultBranchProject();
     if ($default_branch) {
@@ -1540,7 +1543,7 @@ class Formatter {
    * @param int|null $file_id
    *   Documentation ID of the file the code is in (for namespace information).
    *   Can omit if namespaces are not relevant.
-   * @param \Drupal\api\Interfaces\BranchInterface|null $branch
+   * @param BranchInterface|null $branch
    *   Object representing the branch to search. If NULL, use core compatibility
    *   instead.
    * @param string $core_compatibility
@@ -1665,7 +1668,7 @@ class Formatter {
       ];
 
       if ($using_api_branch) {
-        /** @var \Drupal\api\Interfaces\ExternalDocumentationInterface $object */
+        /** @var ExternalDocumentationInterface $object */
         $url = $object->getUrl();
         unset($options['attributes']['class']);
       }
@@ -1688,13 +1691,13 @@ class Formatter {
 
     $object = array_shift($matches);
     if ($using_api_branch) {
-      /** @var \Drupal\api\Interfaces\ExternalDocumentationInterface $object */
+      /** @var ExternalDocumentationInterface $object */
       $api_branch = $object->getExternalBranch();
       $url = $api_branch->getSearchUrl() . $name;
       unset($options['attributes']['class']);
     }
     else {
-      /** @var \Drupal\api\Interfaces\DocBlockInterface $object */
+      /** @var DocBlockInterface $object */
       $url = 'internal:/api/' . $object->getBranch()->getProject()->getSlug() . '/' . $object->getBranch()->getSlug() . '/search/' . $name;
     }
 
@@ -1718,7 +1721,7 @@ class Formatter {
    *
    * @param string $name
    *   Object name to link to.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch object indicating which branch to make the link in.
    * @param string $prepend
    *   Text to prepend on the link.
@@ -1793,7 +1796,7 @@ class Formatter {
       $is_link = FALSE;
     }
 
-    /** @var \Drupal\api\Interfaces\BranchInterface $default_branch */
+    /** @var BranchInterface $default_branch */
     $default_core_compatibility = '';
     $default_branch = \Drupal::service('api.utilities')->getDefaultBranchProject();
     if ($default_branch) {
@@ -2015,7 +2018,7 @@ class Formatter {
     $ids = DocNamespace::getByDocBlock($docBlock);
     $values = DocNamespace::loadMultiple($ids);
     foreach ($values as $info) {
-      /** @var \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface $info */
+      /** @var DocNamespaceInterface $info */
       // Start namespaces with backslash.
       $name = $info->getClassName();
       if (mb_substr($name, 0, 1) != '\\') {
@@ -2051,7 +2054,7 @@ class Formatter {
    *   Type of object to match (see api_link_name() for options).
    * @param bool $try_link
    *   If TRUE, try making links as if this is to a topic or file first.
-   * @param \Drupal\api\Interfaces\BranchInterface|null $branch
+   * @param BranchInterface|null $branch
    *   Object representing the branch to search. If NULL, use core compatibility
    *   instead.
    * @param string $core_compatibility
@@ -2209,7 +2212,7 @@ class Formatter {
   /**
    * Constructs a link to an API object page.
    *
-   * @param object|\Drupal\api\Interfaces\DocBlockInterface $object
+   * @param object|DocBlockInterface $object
    *   An API object with object_type, object_name, branch, and file_name
    *   properties.
    * @param bool $file
@@ -2338,7 +2341,7 @@ class Formatter {
    *   used to separate it into the class name and member name.
    * @param string $text
    *   Text to put in the link.
-   * @param \Drupal\api\Interfaces\BranchInterface|null $branch
+   * @param BranchInterface|null $branch
    *   Object representing the branch to search. If NULL, use core compatibility
    *   instead.
    * @param string $core_compatibility
@@ -2472,7 +2475,7 @@ class Formatter {
   /**
    * Prepare the render array to display a listing.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Object representing branch to generate the listing for.
    * @param string $object_type
    *   Type of object to list ('file', 'group', etc.), or 'deprecated' for the
@@ -2562,7 +2565,7 @@ class Formatter {
   /**
    * Prepare the render array to display a function call.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   Docblock element.
    * @param string $type
    *   Type of function call.
@@ -2584,7 +2587,7 @@ class Formatter {
   /**
    * Prepare the render array to display a branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to display.
    *
    * @return array
@@ -2625,7 +2628,7 @@ class Formatter {
   /**
    * Prepare the render array to display a file.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $file
+   * @param DocBlockInterface $file
    *   File to display.
    *
    * @return array
@@ -2697,9 +2700,9 @@ class Formatter {
    *
    * @param string[] $types
    *   Types of references to make (see api_find_references() for the list).
-   * @param \Drupal\api\Interfaces\DocBlockInterface $object
+   * @param DocBlockInterface $object
    *   Documentation object to find references for.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to find references in.
    *
    * @return string[]
@@ -2708,7 +2711,7 @@ class Formatter {
    *   page. Empty sections are omitted.
    */
   public static function buildReferencesSection(array $types, DocBlockInterface $object, BranchInterface $branch) {
-    /** @var \Drupal\Core\Config\ImmutableConfig $config */
+    /** @var ImmutableConfig $config */
     $config = \Drupal::config('api.settings');
     $output = [];
     foreach ($types as $type) {
@@ -2757,7 +2760,7 @@ class Formatter {
   /**
    * Generates a link to the file.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $file
+   * @param DocBlockInterface $file
    *   Entity to link its file.
    *
    * @return string
@@ -2790,7 +2793,7 @@ class Formatter {
    *   Render array of the page.
    */
   public static function prepareObjectPage(array &$variables) {
-    /** @var \Drupal\api\Interfaces\DocBlockInterface $object */
+    /** @var DocBlockInterface $object */
     $object = $variables['object'];
     $branch = $object->getBranch();
     $extended_object = (array) ExtendedQueries::loadExtendedWithOverrides($object->id());
@@ -2841,7 +2844,7 @@ class Formatter {
    *
    * @param string $code
    *   PHP code to scan for things to make into links.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to make the links in.
    * @param int $file_id
    *   Documentation ID of the file the code is in (for namespace information).
@@ -2908,7 +2911,7 @@ class Formatter {
    *   - 'implements': Interface implements list ($count is ignored).
    * @param int $count
    *   The number of referenced items.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   The function, class, or file object being referenced.
    *
    * @return string
@@ -3037,9 +3040,9 @@ class Formatter {
   /**
    * Generates a list of references as HTML.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $object
+   * @param DocBlockInterface $object
    *   Object to list references for.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch the object is in.
    * @param string $type
    *   Type of references: see api_find_references() for list.
@@ -3082,7 +3085,7 @@ class Formatter {
    *   The type of reference link. See ::findReferences() for list.
    * @param int $count
    *   The number of referenced items.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   The function, class, or file object being referenced.
    * @param string $override_text
    *   Text to override the link text.
@@ -3124,7 +3127,7 @@ class Formatter {
    * Constructs a URL for a namespace, replacing any NAMESPACE_SEPARATOR in a
    * file path with FILEPATH_SEPARATOR_REPLACEMENT.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch object.
    * @param string $namespace
    *   Namespace to make the link for.
@@ -3140,7 +3143,7 @@ class Formatter {
   /**
    * Finds alternative versions of an object for the object page.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $object
+   * @param DocBlockInterface $object
    *   Object to find alternatives for.
    * @param array $variables
    *   Variables array, passed by reference, to put the alternatives in.
@@ -3195,9 +3198,9 @@ class Formatter {
   /**
    * Makes a set of alternative links from a query result.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface[] $result
+   * @param DocBlockInterface[] $result
    *   Database query result to turn into alternatives list.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $object
+   * @param DocBlockInterface $object
    *   Object we are making alternatives list for.
    * @param int $min_count
    *   Minimum count the alternatives list must have to consider it not empty.
@@ -3211,7 +3214,7 @@ class Formatter {
     ];
 
     foreach ($result as $alternative) {
-      /** @var \Drupal\api\Interfaces\DocBlockInterface $alternative */
+      /** @var DocBlockInterface $alternative */
       // Construct link label.
       $label = $alternative->getBranch()->getSlug() . ' ' . $alternative->getFileName();
       $suffix = ($object->getObjectType() == 'file') ? '' : ' ' . $alternative->getNamespacedName();
@@ -3238,9 +3241,9 @@ class Formatter {
   /**
    * Creates a section documenting which class a member is from.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   Documentation item for the member.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch the item is in.
    *
    * @return array|false
@@ -3271,7 +3274,7 @@ class Formatter {
   /**
    * Generates a page when viewing the class or interface hierarchy.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    *
    * @return array
@@ -3287,7 +3290,7 @@ class Formatter {
   /**
    * Generates a page when viewing the interface implements sections.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    *
    * @return array
@@ -3334,7 +3337,7 @@ class Formatter {
    * Finds all interfaces that extend it and classes that implement it,
    * directly, and adds them to the to do and found lists.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $interface
+   * @param DocBlockInterface $interface
    *   Documentation object for the interface to check.
    * @param object[] $to_process
    *   List of classes and interfaces still to be processed, keyed by
@@ -3392,7 +3395,7 @@ class Formatter {
    * Finds all classes that extend it directly, and adds them to the to do and
    * found lists.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $class
+   * @param DocBlockInterface $class
    *   Documentation object for the class to check.
    * @param object[] $to_process
    *   List of classes and interfaces still to be processed, keyed by
@@ -3432,7 +3435,7 @@ class Formatter {
   /**
    * Generates a page when viewing multiple sections ($subtype) or an element.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    * @param string $subtype
    *   Subtype of the element to generate output for.
@@ -3455,7 +3458,7 @@ class Formatter {
   /**
    * Generates a page when viewing simple item types (constant, global...).
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    * @param string $type
    *   Type of the element to generate output for.
@@ -3506,7 +3509,7 @@ class Formatter {
   /**
    * Generates a page when viewing class-like items types.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    *
    * @return array
@@ -3569,7 +3572,7 @@ class Formatter {
   /**
    * Renders a class hierarchy, either full or partial.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $class
+   * @param DocBlockInterface $class
    *   Class object.
    * @param string $type
    *   One of the following strings to indicate what type of hierarchy:
@@ -3700,7 +3703,7 @@ class Formatter {
   /**
    * Finds and renders the children of a class within the same branch.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $class
+   * @param DocBlockInterface $class
    *   Documentation object for the class.
    * @param int $current_id
    *   Documentation ID of the class on the current page.
@@ -3728,7 +3731,7 @@ class Formatter {
   /**
    * Renders the class hierarchy line for a single class.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $class
+   * @param DocBlockInterface $class
    *   Documentation object for the class to render.
    * @param int $current_id
    *   Documentation ID of the class that the current page is showing. If this
@@ -3820,7 +3823,7 @@ class Formatter {
   /**
    * Generates a page when viewing function-like items types.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    *
    * @return array
@@ -3876,7 +3879,7 @@ class Formatter {
   /**
    * Generates a page when viewing service-like items types.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    *
    * @return array
@@ -3927,7 +3930,7 @@ class Formatter {
   /**
    * Generates a page when viewing group-like items types.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $item
+   * @param DocBlockInterface $item
    *   DocBlock element to generate the output from.
    *
    * @return array
@@ -3997,7 +4000,7 @@ class Formatter {
    *   Term to search.
    * @param string $text
    *   Text for the link.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where to check.
    *
    * @return string
@@ -4015,7 +4018,7 @@ class Formatter {
    *
    * @param string $term
    *   Term to search.
-   * @param \Drupal\api\Interfaces\BranchInterface $search_branch
+   * @param BranchInterface $search_branch
    *   Branch where the search is originated.
    *
    * @return array
diff --git a/src/Interfaces/BranchInterface.php b/src/Interfaces/BranchInterface.php
index 38dcb98..1cb690a 100644
--- a/src/Interfaces/BranchInterface.php
+++ b/src/Interfaces/BranchInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Interfaces;
 
+use Drupal\api\Entity\DocBlock;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
 
@@ -70,7 +71,7 @@ interface BranchInterface extends ContentEntityInterface, EntityChangedInterface
   /**
    * Gets the project that the branch belongs to.
    *
-   * @return \Drupal\api\Interfaces\ProjectInterface
+   * @return ProjectInterface
    *   The project where this branch is located.
    */
   public function getProject();
@@ -78,7 +79,7 @@ interface BranchInterface extends ContentEntityInterface, EntityChangedInterface
   /**
    * Sets the project for the branch.
    *
-   * @param \Drupal\api\Interfaces\ProjectInterface $project
+   * @param ProjectInterface $project
    *   The project for the branch.
    *
    * @return \Drupal\api\Interfaces\BranchInterface
@@ -272,7 +273,7 @@ interface BranchInterface extends ContentEntityInterface, EntityChangedInterface
    * @param int $timestamp
    *   The php_branch queued timestamp.
    *
-   * @return \Drupal\api\Interfaces\PhpBranchInterface
+   * @return PhpBranchInterface
    *   The called php_branch entity.
    */
   public function setQueued($timestamp);
@@ -291,7 +292,7 @@ interface BranchInterface extends ContentEntityInterface, EntityChangedInterface
    * @param bool $full_entities
    *   Whether to get full entities or just the ids.
    *
-   * @return \Drupal\api\Entity\DocBlock[]|int[]|null
+   * @return DocBlock[]|int[]|null
    *   Array of DocBlock entities, or ids, or null if no docblocks are linked.
    */
   public function getDocBlocks($full_entities = FALSE);
diff --git a/src/Interfaces/DocBlock/DocClassMemberInterface.php b/src/Interfaces/DocBlock/DocClassMemberInterface.php
index 3a8fc73..04ecc9d 100644
--- a/src/Interfaces/DocBlock/DocClassMemberInterface.php
+++ b/src/Interfaces/DocBlock/DocClassMemberInterface.php
@@ -32,7 +32,7 @@ interface DocClassMemberInterface extends ContentEntityInterface {
   /**
    * Gets the docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The docblock of the DocBlock class member entity.
    */
   public function getDocBlock();
@@ -40,7 +40,7 @@ interface DocClassMemberInterface extends ContentEntityInterface {
   /**
    * Sets the docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocClassMemberInterface
@@ -51,7 +51,7 @@ interface DocClassMemberInterface extends ContentEntityInterface {
   /**
    * Gets the class docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The class docblock of the DocBlock class member entity.
    */
   public function getClassDocBlock();
@@ -59,7 +59,7 @@ interface DocClassMemberInterface extends ContentEntityInterface {
   /**
    * Sets the class docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocClassMemberInterface
@@ -72,7 +72,7 @@ interface DocClassMemberInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Conditions to apply.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $class
+   * @param DocBlockInterface $class
    *   Class to search matching members from.
    *
    * @return int[]|null
diff --git a/src/Interfaces/DocBlock/DocFileInterface.php b/src/Interfaces/DocBlock/DocFileInterface.php
index 2ce9a67..01e1aed 100644
--- a/src/Interfaces/DocBlock/DocFileInterface.php
+++ b/src/Interfaces/DocBlock/DocFileInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Interfaces\DocBlock;
 
+use Drupal\api\Interfaces\BranchInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\api\Interfaces\DocBlockInterface;
 
@@ -32,7 +33,7 @@ interface DocFileInterface extends ContentEntityInterface {
   /**
    * Gets the docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The docblock of the DocBlock file entity.
    */
   public function getDocBlock();
@@ -40,7 +41,7 @@ interface DocFileInterface extends ContentEntityInterface {
   /**
    * Sets the docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocFileInterface
@@ -62,7 +63,7 @@ interface DocFileInterface extends ContentEntityInterface {
    * @param int $timestamp
    *   The DocFile creation timestamp.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface
+   * @return BranchInterface
    *   The called DocFile entity.
    */
   public function setCreatedTime($timestamp);
@@ -72,7 +73,7 @@ interface DocFileInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Array with conditions to match.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   DocBlock the element belongs to.
    *
    * @return int[]|null
diff --git a/src/Interfaces/DocBlock/DocFunctionInterface.php b/src/Interfaces/DocBlock/DocFunctionInterface.php
index 4ff8413..7a67c38 100644
--- a/src/Interfaces/DocBlock/DocFunctionInterface.php
+++ b/src/Interfaces/DocBlock/DocFunctionInterface.php
@@ -70,7 +70,7 @@ interface DocFunctionInterface extends ContentEntityInterface {
   /**
    * Gets the docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The docblock of the DocBlock function entity.
    */
   public function getDocBlock();
@@ -78,7 +78,7 @@ interface DocFunctionInterface extends ContentEntityInterface {
   /**
    * Sets the docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocFunctionInterface
@@ -91,7 +91,7 @@ interface DocFunctionInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Array with conditions to match.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   DocBlock the element belongs to.
    *
    * @return int[]|null
diff --git a/src/Interfaces/DocBlock/DocNamespaceInterface.php b/src/Interfaces/DocBlock/DocNamespaceInterface.php
index 9abedeb..2dc616a 100644
--- a/src/Interfaces/DocBlock/DocNamespaceInterface.php
+++ b/src/Interfaces/DocBlock/DocNamespaceInterface.php
@@ -70,7 +70,7 @@ interface DocNamespaceInterface extends ContentEntityInterface {
   /**
    * Gets the docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The docblock of the DocBlock namespace entity.
    */
   public function getDocBlock();
@@ -78,7 +78,7 @@ interface DocNamespaceInterface extends ContentEntityInterface {
   /**
    * Sets the docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocNamespaceInterface
@@ -91,7 +91,7 @@ interface DocNamespaceInterface extends ContentEntityInterface {
    *
    * @param array $types
    *   To map with object_type column.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $entity
+   * @param DocBlockInterface $entity
    *   DocBlock entity.
    */
   public static function deleteRelatedByType(array $types, DocBlockInterface $entity);
@@ -101,7 +101,7 @@ interface DocNamespaceInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Array with conditions to match.
-   * @param \Drupal\api\Interfaces\DocBlockInterface|null $docBlock
+   * @param DocBlockInterface|null $docBlock
    *   DocBlock the element belongs to.
    *
    * @return int[]|null
@@ -112,7 +112,7 @@ interface DocNamespaceInterface extends ContentEntityInterface {
   /**
    * Gets namespaces objects IDs linked to a docblock object.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   DocBlock object.
    *
    * @return int[]|null
diff --git a/src/Interfaces/DocBlock/DocOverrideInterface.php b/src/Interfaces/DocBlock/DocOverrideInterface.php
index ac1a8f3..de1cbbb 100644
--- a/src/Interfaces/DocBlock/DocOverrideInterface.php
+++ b/src/Interfaces/DocBlock/DocOverrideInterface.php
@@ -13,7 +13,7 @@ interface DocOverrideInterface extends ContentEntityInterface {
   /**
    * Gets the docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The docblock of the DocBlock override entity.
    */
   public function getDocBlock();
@@ -21,7 +21,7 @@ interface DocOverrideInterface extends ContentEntityInterface {
   /**
    * Sets the docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocOverrideInterface
@@ -32,7 +32,7 @@ interface DocOverrideInterface extends ContentEntityInterface {
   /**
    * Gets the overrides docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface|null
+   * @return DocBlockInterface|null
    *   The overrides docblock of the DocBlock override entity.
    */
   public function getOverridesDocBlock();
@@ -40,7 +40,7 @@ interface DocOverrideInterface extends ContentEntityInterface {
   /**
    * Sets the overrides docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocOverrideInterface
@@ -51,7 +51,7 @@ interface DocOverrideInterface extends ContentEntityInterface {
   /**
    * Gets the documented docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The documented docblock of the DocBlock override entity.
    */
   public function getDocumentedInDocBlock();
@@ -59,7 +59,7 @@ interface DocOverrideInterface extends ContentEntityInterface {
   /**
    * Sets the documented docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocOverrideInterface
@@ -72,7 +72,7 @@ interface DocOverrideInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Array with conditions to match.
-   * @param \Drupal\api\Interfaces\DocBlockInterface|null $docBlock
+   * @param DocBlockInterface|null $docBlock
    *   DocBlock the element belongs to.
    *
    * @return int[]|null
diff --git a/src/Interfaces/DocBlock/DocReferenceCountInterface.php b/src/Interfaces/DocBlock/DocReferenceCountInterface.php
index 6c47b08..beb8983 100644
--- a/src/Interfaces/DocBlock/DocReferenceCountInterface.php
+++ b/src/Interfaces/DocBlock/DocReferenceCountInterface.php
@@ -32,7 +32,7 @@ interface DocReferenceCountInterface extends ContentEntityInterface {
   /**
    * Gets the branch property of the entity.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface
+   * @return BranchInterface
    *   The branch of the ReferenceCount entity.
    */
   public function getBranch();
@@ -40,7 +40,7 @@ interface DocReferenceCountInterface extends ContentEntityInterface {
   /**
    * Sets the branch property.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocReferenceCountInterface
diff --git a/src/Interfaces/DocBlock/DocReferenceInterface.php b/src/Interfaces/DocBlock/DocReferenceInterface.php
index b41667d..890ec5b 100644
--- a/src/Interfaces/DocBlock/DocReferenceInterface.php
+++ b/src/Interfaces/DocBlock/DocReferenceInterface.php
@@ -33,7 +33,7 @@ interface DocReferenceInterface extends ContentEntityInterface {
   /**
    * Gets the branch property of the entity.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface
+   * @return BranchInterface
    *   The branch of the Reference entity.
    */
   public function getBranch();
@@ -41,7 +41,7 @@ interface DocReferenceInterface extends ContentEntityInterface {
   /**
    * Sets the branch property.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocReferenceInterface
@@ -71,7 +71,7 @@ interface DocReferenceInterface extends ContentEntityInterface {
   /**
    * Gets the docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The docblock of the Reference entity.
    */
   public function getDocBlock();
@@ -79,7 +79,7 @@ interface DocReferenceInterface extends ContentEntityInterface {
   /**
    * Sets the docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocReferenceInterface
@@ -90,7 +90,7 @@ interface DocReferenceInterface extends ContentEntityInterface {
   /**
    * Gets the extends_docblock property of the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface
+   * @return DocBlockInterface
    *   The extends_docblock of the Reference entity.
    */
   public function getExtendsDocBlock();
@@ -98,7 +98,7 @@ interface DocReferenceInterface extends ContentEntityInterface {
   /**
    * Sets the extends_docblock property.
    *
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docblock
+   * @param DocBlockInterface $docblock
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocReferenceInterface
@@ -111,9 +111,9 @@ interface DocReferenceInterface extends ContentEntityInterface {
    *
    * @param array $docblock
    *   Docblock array.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $entity
+   * @param DocBlockInterface $entity
    *   DocBlock entity.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch entity.
    * @param string $namespace
    *   Namespace where references are placed.
@@ -129,9 +129,9 @@ interface DocReferenceInterface extends ContentEntityInterface {
    *
    * @param array $types
    *   To map with object_type column.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $entity
+   * @param DocBlockInterface $entity
    *   DocBlock entity.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch entity.
    */
   public static function deleteRelatedByType(array $types, DocBlockInterface $entity, BranchInterface $branch);
@@ -139,13 +139,13 @@ interface DocReferenceInterface extends ContentEntityInterface {
   /**
    * Adds a new reference and does some additional checks beforehand.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where the reference will belong to.
    * @param string $type
    *   Type of the reference.
    * @param string $name
    *   Name of the object.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   DocBlock linked to the reference.
    *
    * @return \Drupal\api\Interfaces\DocBlock\DocReferenceInterface|null
@@ -161,7 +161,7 @@ interface DocReferenceInterface extends ContentEntityInterface {
    * are created or updated once the rest of the information was parsed and
    * processed for a branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to create records from.
    */
   public static function classRelations(BranchInterface $branch);
@@ -171,9 +171,9 @@ interface DocReferenceInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Array with conditions to match.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch the element belongs to.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $docBlock
+   * @param DocBlockInterface $docBlock
    *   DocBlock the element belongs to.
    *
    * @return int[]|null
diff --git a/src/Interfaces/DocBlockInterface.php b/src/Interfaces/DocBlockInterface.php
index f84ae7c..aa9f0ba 100644
--- a/src/Interfaces/DocBlockInterface.php
+++ b/src/Interfaces/DocBlockInterface.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\api\Interfaces;
 
+use Drupal\comment\CommentFieldItemList;
+use Drupal\api\Interfaces\DocBlock\DocFunctionInterface;
+use Drupal\api\Interfaces\DocBlock\DocFileInterface;
+use Drupal\api\Entity\DocBlock;
+use Drupal\api\Entity\DocBlock\DocReference;
+use Drupal\api\Entity\DocBlock\DocOverride;
 use Drupal\Core\Entity\ContentEntityInterface;
 
 /**
@@ -31,7 +37,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets the docblock comments.
    *
-   * @return \Drupal\comment\CommentFieldItemList
+   * @return CommentFieldItemList
    *   Comments settings for the docblock.
    */
   public function getComments();
@@ -370,7 +376,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets the branch property of the entity.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface
+   * @return BranchInterface
    *   The branch of the DocBlock entity.
    */
   public function getBranch();
@@ -378,7 +384,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Sets the branch property.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\DocBlockInterface
@@ -389,7 +395,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets the function object related to the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlock\DocFunctionInterface
+   * @return DocFunctionInterface
    *   The function related to the DocBlock entity.
    */
   public function getDocFunction();
@@ -397,7 +403,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets the file object related to the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlock\DocFileInterface
+   * @return DocFileInterface
    *   The file related to the DocBlock entity.
    */
   public function getDocFile();
@@ -405,7 +411,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets the class member objects related to the entity.
    *
-   * @return \Drupal\api\Interfaces\DocBlock\DocFunctionInterface[]
+   * @return DocFunctionInterface[]
    *   The class members related to the DocBlock entity.
    */
   public function getDocClassMembers();
@@ -454,7 +460,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Array with conditions to match.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch the element belongs to.
    * @param array|null $range
    *   Pagination information if desired.
@@ -469,7 +475,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Returns list of files for a given branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to search in.
    *
    * @return int[]|null
@@ -482,7 +488,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    *
    * @param string $term
    *   Term to search in the title.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where to look.
    * @param int $limit
    *   Number of results.
@@ -499,7 +505,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    *
    * @param string $namespaced_name
    *   Namespaced name.
-   * @param \Drupal\api\Interfaces\BranchInterface[] $branch_ids
+   * @param BranchInterface[] $branch_ids
    *   Branch IDs to search in.
    *
    * @return int[]|null
@@ -530,7 +536,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    * @param string $field_name
    *   Name of the field pointing at the DocBlock. Defaults to 'docblock'.
    *
-   * @return \Drupal\api\Entity\DocBlock
+   * @return DocBlock
    *   The called php_branch entity.
    */
   public function deleteRelated($entity_type, $field_name = 'docblock');
@@ -538,7 +544,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets a full list of elements belonging to a branch..
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch the element belongs to.
    * @param array|null $range
    *   Pagination information if desired.
@@ -551,7 +557,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets the mainpage DocBlock id of the mainpage element of a branch, if any.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to check in.
    *
    * @return int|null
@@ -562,7 +568,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Gets the different listing types present for a branch.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch to check in.
    *
    * @return array
@@ -575,7 +581,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    *
    * @param string $type
    *   Type of listing.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch object.
    *
    * @return int|null
@@ -593,7 +599,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    * @param string $name_match
    *   Match by name instead of ID.
    *
-   * @return \Drupal\api\Entity\DocBlock\DocReference[]|null
+   * @return DocReference[]|null
    *   DocReference objects or null.
    */
   public function getDocReferences($type = '', $extending_internal_only = TRUE, $name_match = NULL);
@@ -601,7 +607,7 @@ interface DocBlockInterface extends ContentEntityInterface {
   /**
    * Get the overrides for a docblock.
    *
-   * @return \Drupal\api\Entity\DocBlock\DocOverride[]|null
+   * @return DocOverride[]|null
    *   Overrides or null.
    */
   public function getDocOverrides();
@@ -627,7 +633,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    *
    * @param array $docblocks_array
    *   Fields and values to insert/udpate.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where this item belongs to.
    *
    * @return bool
@@ -683,7 +689,7 @@ interface DocBlockInterface extends ContentEntityInterface {
    *
    * @param string $class_name
    *   The namespaced class name to find.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch_id
+   * @param BranchInterface $branch_id
    *   The branch this name was referenced in.
    *
    * @return \Drupal\api\Interfaces\DocBlockInterface|null
diff --git a/src/Interfaces/ExternalBranchInterface.php b/src/Interfaces/ExternalBranchInterface.php
index 2fbcc61..bddcf50 100644
--- a/src/Interfaces/ExternalBranchInterface.php
+++ b/src/Interfaces/ExternalBranchInterface.php
@@ -195,7 +195,7 @@ interface ExternalBranchInterface extends ContentEntityInterface, EntityChangedI
    * @param int $timestamp
    *   The php_branch queued timestamp.
    *
-   * @return \Drupal\api\Interfaces\PhpBranchInterface
+   * @return PhpBranchInterface
    *   The called php_branch entity.
    */
   public function setQueued($timestamp);
diff --git a/src/Interfaces/ExternalDocumentationInterface.php b/src/Interfaces/ExternalDocumentationInterface.php
index d8f6520..8c0dd59 100644
--- a/src/Interfaces/ExternalDocumentationInterface.php
+++ b/src/Interfaces/ExternalDocumentationInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Interfaces;
 
+use Drupal\Core\Link;
 use Drupal\Core\Entity\ContentEntityInterface;
 
 /**
@@ -126,7 +127,7 @@ interface ExternalDocumentationInterface extends ContentEntityInterface {
   /**
    * Gets the external_branch property of the entity.
    *
-   * @return \Drupal\api\Interfaces\ExternalBranchInterface
+   * @return ExternalBranchInterface
    *   The external_branch of the External documentation entity.
    */
   public function getExternalBranch();
@@ -134,7 +135,7 @@ interface ExternalDocumentationInterface extends ContentEntityInterface {
   /**
    * Sets the external_branch property.
    *
-   * @param \Drupal\api\Interfaces\ExternalBranchInterface $external_branch
+   * @param ExternalBranchInterface $external_branch
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\ExternalDocumentationInterface
@@ -164,7 +165,7 @@ interface ExternalDocumentationInterface extends ContentEntityInterface {
   /**
    * Gets the external link for the item.
    *
-   * @return \Drupal\Core\Link
+   * @return Link
    *   Link object to the external source.
    */
   public function getExternalLink();
@@ -174,7 +175,7 @@ interface ExternalDocumentationInterface extends ContentEntityInterface {
    *
    * @param array $conditions
    *   Conditions to apply.
-   * @param \Drupal\api\Interfaces\ExternalBranchInterface|null $branch
+   * @param ExternalBranchInterface|null $branch
    *   Branch to link the matches, if given any.
    *
    * @return int[]|null
@@ -217,7 +218,7 @@ interface ExternalDocumentationInterface extends ContentEntityInterface {
    *
    * @param string $url
    *   Url of the function to look for.
-   * @param \Drupal\api\Interfaces\ExternalBranchInterface $branch
+   * @param ExternalBranchInterface $branch
    *   Branch the function belongs to.
    *
    * @return \Drupal\api\Interfaces\ExternalDocumentationInterface[]|null
diff --git a/src/Interfaces/PhpDocumentationInterface.php b/src/Interfaces/PhpDocumentationInterface.php
index 1d4366a..b50cb9b 100644
--- a/src/Interfaces/PhpDocumentationInterface.php
+++ b/src/Interfaces/PhpDocumentationInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Interfaces;
 
+use Drupal\Core\Link;
 use Drupal\Core\Entity\ContentEntityInterface;
 
 /**
@@ -88,7 +89,7 @@ interface PhpDocumentationInterface extends ContentEntityInterface {
   /**
    * Gets the php_branch property of the entity.
    *
-   * @return \Drupal\api\Interfaces\PhpBranchInterface
+   * @return PhpBranchInterface
    *   The php_branch of the PHP documentation entity.
    */
   public function getPhpBranch();
@@ -96,7 +97,7 @@ interface PhpDocumentationInterface extends ContentEntityInterface {
   /**
    * Sets the PhpBranch property.
    *
-   * @param \Drupal\api\Interfaces\PhpBranchInterface $php_branch
+   * @param PhpBranchInterface $php_branch
    *   Value to set.
    *
    * @return \Drupal\api\Interfaces\PhpDocumentationInterface
@@ -107,7 +108,7 @@ interface PhpDocumentationInterface extends ContentEntityInterface {
   /**
    * Gets the php.net link for the item.
    *
-   * @return \Drupal\Core\Link
+   * @return Link
    *   Link object to the external source.
    */
   public function getExternalLink();
diff --git a/src/Interfaces/ProjectInterface.php b/src/Interfaces/ProjectInterface.php
index d7f2ff5..d0be59c 100644
--- a/src/Interfaces/ProjectInterface.php
+++ b/src/Interfaces/ProjectInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Interfaces;
 
+use Drupal\api\Entity\Branch;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
 
@@ -100,7 +101,7 @@ interface ProjectInterface extends ContentEntityInterface, EntityChangedInterfac
    * @param bool $full_entity
    *   Whether to return full entities or just IDs.
    *
-   * @return string[]|\Drupal\api\Entity\Branch[]
+   * @return string[]|Branch[]
    *   Array of branch IDs for this project.
    */
   public function getBranches($full_entity = FALSE);
@@ -111,7 +112,7 @@ interface ProjectInterface extends ContentEntityInterface, EntityChangedInterfac
    * @param bool $fallback
    *   If no default branch is set or found, return any branch from the project.
    *
-   * @return \Drupal\api\Entity\Branch|null
+   * @return Branch|null
    *   Default project's branch or null.
    */
   public function getDefaultBranch($fallback = FALSE);
diff --git a/src/ListBuilder/BranchListBuilder.php b/src/ListBuilder/BranchListBuilder.php
index d39a3a0..c27f341 100644
--- a/src/ListBuilder/BranchListBuilder.php
+++ b/src/ListBuilder/BranchListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\ListBuilder;
 
+use Drupal\api\Interfaces\BranchInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Datetime\DateFormatterInterface;
@@ -18,27 +19,27 @@ class BranchListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new BranchListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -90,7 +91,7 @@ class BranchListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\api\Interfaces\BranchInterface $entity */
+    /** @var BranchInterface $entity */
     $row['branch'] = $entity->toLink();
     $row['slug'] = $entity->getSlug();
     $row['project'] = $entity->getProject()->toLink();
diff --git a/src/ListBuilder/ExternalBranchListBuilder.php b/src/ListBuilder/ExternalBranchListBuilder.php
index aaede52..cf75d9b 100644
--- a/src/ListBuilder/ExternalBranchListBuilder.php
+++ b/src/ListBuilder/ExternalBranchListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\ListBuilder;
 
+use Drupal\api\Interfaces\ExternalBranchInterface;
 use Drupal\api\Entity\ExternalDocumentation;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
@@ -21,27 +22,27 @@ class ExternalBranchListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new ExternalBranchListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -100,7 +101,7 @@ class ExternalBranchListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\api\Interfaces\ExternalBranchInterface $entity */
+    /** @var ExternalBranchInterface $entity */
     $row['external_branch'] = $entity->toLink();
     $row['function_list'] = Link::fromTextAndUrl(
       $this->t('Function list'),
diff --git a/src/ListBuilder/ExternalDocumentationListBuilder.php b/src/ListBuilder/ExternalDocumentationListBuilder.php
index dccf214..6d6dab5 100644
--- a/src/ListBuilder/ExternalDocumentationListBuilder.php
+++ b/src/ListBuilder/ExternalDocumentationListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\ListBuilder;
 
+use Drupal\api\Interfaces\ExternalDocumentationInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -17,18 +18,18 @@ class ExternalDocumentationListBuilder extends EntityListBuilder {
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new ExternalDocumentationListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, RedirectDestinationInterface $redirect_destination) {
@@ -74,7 +75,7 @@ class ExternalDocumentationListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\api\Interfaces\ExternalDocumentationInterface $entity */
+    /** @var ExternalDocumentationInterface $entity */
     $row['object_name'] = $entity->getExternalLink();
     return $row;
   }
diff --git a/src/ListBuilder/PhpBranchListBuilder.php b/src/ListBuilder/PhpBranchListBuilder.php
index 68c6404..939797e 100644
--- a/src/ListBuilder/PhpBranchListBuilder.php
+++ b/src/ListBuilder/PhpBranchListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\ListBuilder;
 
+use Drupal\api\Interfaces\PhpBranchInterface;
 use Drupal\api\Entity\PhpDocumentation;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
@@ -21,27 +22,27 @@ class PhpBranchListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new PhpBranchListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -99,7 +100,7 @@ class PhpBranchListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\api\Interfaces\PhpBranchInterface $entity */
+    /** @var PhpBranchInterface $entity */
     $row['php_branch'] = $entity->toLink();
     $row['function_list'] = Link::fromTextAndUrl(
       $this->t('Function list'),
diff --git a/src/ListBuilder/PhpDocumentationListBuilder.php b/src/ListBuilder/PhpDocumentationListBuilder.php
index 1980dde..7385ec9 100644
--- a/src/ListBuilder/PhpDocumentationListBuilder.php
+++ b/src/ListBuilder/PhpDocumentationListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\ListBuilder;
 
+use Drupal\api\Interfaces\PhpDocumentationInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -17,18 +18,18 @@ class PhpDocumentationListBuilder extends EntityListBuilder {
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new PhpDocumentationListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, RedirectDestinationInterface $redirect_destination) {
@@ -74,7 +75,7 @@ class PhpDocumentationListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\api\Interfaces\PhpDocumentationInterface $entity */
+    /** @var PhpDocumentationInterface $entity */
     $row['object_name'] = $entity->getExternalLink();
     return $row;
   }
diff --git a/src/ListBuilder/ProjectListBuilder.php b/src/ListBuilder/ProjectListBuilder.php
index 8c81c59..6ba2e8c 100644
--- a/src/ListBuilder/ProjectListBuilder.php
+++ b/src/ListBuilder/ProjectListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\ListBuilder;
 
+use Drupal\api\Interfaces\ProjectInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Datetime\DateFormatterInterface;
@@ -18,27 +19,27 @@ class ProjectListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new ProjectListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -88,7 +89,7 @@ class ProjectListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\api\Interfaces\ProjectInterface $entity */
+    /** @var ProjectInterface $entity */
     $row['project'] = $entity->toLink();
     $row['slug'] = $entity->getSlug();
     $row['type'] = $entity->getType();
diff --git a/src/Parser.php b/src/Parser.php
index 9de4aa6..e5da4ed 100644
--- a/src/Parser.php
+++ b/src/Parser.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\api;
 
+use Drupal\Core\Queue\QueueInterface;
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\api\Interfaces\PhpBranchInterface;
+use Drupal\api\Interfaces\ExternalBranchInterface;
+use PhpParser\Node\Stmt;
 use Drupal\api\Entity\Branch;
 use Drupal\api\Entity\DocBlock;
 use Drupal\api\Entity\PhpBranch;
@@ -106,42 +111,42 @@ class Parser {
   /**
    * DateFormatterInterface definition.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * ModuleHandlerInterface definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Utilities definition.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
   /**
    * The queue object.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -155,58 +160,58 @@ class Parser {
   /**
    * Parsing queue.
    *
-   * @var \Drupal\Core\Queue\QueueInterface
+   * @var QueueInterface
    */
   protected $parseQueue;
 
   /**
    * File system service.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $fileSystem;
 
   /**
    * PHP Parser factory object.
    *
-   * @var \PhpParser\ParserFactory
+   * @var ParserFactory
    */
   protected $phpParser;
 
   /**
    * Logger instance for the api module.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerService;
 
   /**
    * Parser constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Configuration service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   Date formatter service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler service.
-   * @param \Drupal\api\Utilities $utilities
+   * @param Utilities $utilities
    *   Utilities service.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   Queue factory service to get new/existing queues for use.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   Http client.
-   * @param \Drupal\Core\File\FileSystem $file_system
+   * @param FileSystem $file_system
    *   File system service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_service
+   * @param LoggerChannelFactoryInterface $logger_service
    *   Logger service.
    */
   public function __construct(
@@ -267,7 +272,7 @@ class Parser {
 
     $branches = Branch::loadMultiple() ?? [];
     foreach ($branches as $branch) {
-      /** @var \Drupal\api\Entity\Branch $branch */
+      /** @var Branch $branch */
       $parsed = FALSE;
       $docblock_counter = 0;
       $needs_parsing = $this->needsParsing($branch);
@@ -277,7 +282,7 @@ class Parser {
         $files_to_scan = $this->filesToScan($branch);
         if ($files_to_scan->hasResults()) {
           foreach ($files_to_scan as $file) {
-            /** @var \Symfony\Component\Finder\SplFileInfo $file */
+            /** @var SplFileInfo $file */
             $extension = $file->getExtension();
             if (!empty($parse_functions[$extension])) {
               $parseFunction = $parse_functions[$extension];
@@ -349,7 +354,7 @@ class Parser {
 
     $branches = PhpBranch::loadMultiple() ?? [];
     foreach ($branches as $branch) {
-      /** @var \Drupal\api\Entity\PhpBranch $branch */
+      /** @var PhpBranch $branch */
       $parsed = FALSE;
       $docblock_counter = 0;
       $needs_parsing = $this->needsParsing($branch);
@@ -403,7 +408,7 @@ class Parser {
 
     $branches = ExternalBranch::loadMultiple() ?? [];
     foreach ($branches as $branch) {
-      /** @var \Drupal\api\Entity\ExternalBranch $branch */
+      /** @var ExternalBranch $branch */
       $parsed = FALSE;
       $docblock_counter = 0;
       $needs_parsing = $this->needsParsing($branch);
@@ -482,7 +487,7 @@ class Parser {
   /**
    * Returns whether a branch needs parsing or not.
    *
-   * @param \Drupal\api\Interfaces\PhpBranchInterface|\Drupal\api\Interfaces\ExternalBranchInterface $branch
+   * @param PhpBranchInterface|ExternalBranchInterface $branch
    *   Branch to check.
    *
    * @return bool
@@ -498,10 +503,10 @@ class Parser {
   /**
    * Returns the files that can be scanned based on the branch configuration.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch object containing path information.
    *
-   * @return \Symfony\Component\Finder\Finder
+   * @return Finder
    *   Finder object which can be used to loop through files.
    */
   public function filesToScan(BranchInterface $branch) {
@@ -533,7 +538,7 @@ class Parser {
   /**
    * Reads in a file and returns a base object to use in parsing functions.
    *
-   * @param \Symfony\Component\Finder\SplFileInfo $file
+   * @param SplFileInfo $file
    *   File to parse.
    * @param array $drupal_regexps
    *   Regular expressions to exclude Drupalisms.
@@ -705,7 +710,7 @@ class Parser {
    * @param string $code
    *   Code to parse.
    *
-   * @return \PhpParser\Node\Stmt[]|null
+   * @return Stmt[]|null
    *   Array of statements or NULL.
    */
   public function parsePhpCode($code) {
@@ -1312,7 +1317,7 @@ class Parser {
     $in_class = !empty($default_block['class']);
     $class_prefix = $in_class ? $default_block['class'] . '::' : '';
 
-    /** @var \PhpParser\Node\Stmt $statement */
+    /** @var Stmt $statement */
     foreach ($statements as $statement) {
       $docblock = $default_block;
       $docblock['start_line'] = $statement->getLine();
@@ -1937,7 +1942,7 @@ class Parser {
    *   Nested groups in this docblock.
    * @param array $class_ids
    *   Array of documentation ids.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch this docblock will be attached to.
    *
    * @return bool
diff --git a/src/PathProcessor/PathProcessorLegacyFiles.php b/src/PathProcessor/PathProcessorLegacyFiles.php
index bac42ee..de5d346 100644
--- a/src/PathProcessor/PathProcessorLegacyFiles.php
+++ b/src/PathProcessor/PathProcessorLegacyFiles.php
@@ -16,7 +16,7 @@ class PathProcessorLegacyFiles implements InboundPathProcessorInterface {
    *
    * @param string $path
    *   Current path being checked.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
    * @return string
diff --git a/src/Plugin/Block/NavigationBlock.php b/src/Plugin/Block/NavigationBlock.php
index 2737dc0..6394593 100644
--- a/src/Plugin/Block/NavigationBlock.php
+++ b/src/Plugin/Block/NavigationBlock.php
@@ -26,7 +26,7 @@ class NavigationBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * Drupal\api\Utilities definition.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
@@ -171,10 +171,10 @@ class NavigationBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * Creates links to be rendered in the block contents.
    *
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch for this block.
    *
-   * @return \Drupal\Core\Link[]|null
+   * @return Link[]|null
    *   Array of links or null.
    */
   protected function createLinks(BranchInterface $branch) {
diff --git a/src/Plugin/Block/SearchBlock.php b/src/Plugin/Block/SearchBlock.php
index 478d7f3..b0a4aa9 100644
--- a/src/Plugin/Block/SearchBlock.php
+++ b/src/Plugin/Block/SearchBlock.php
@@ -27,14 +27,14 @@ class SearchBlock extends BlockBase implements ContainerFactoryPluginInterface {
   /**
    * Form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * Drupal\api\Utilities definition.
    *
-   * @var \Drupal\api\Utilities
+   * @var Utilities
    */
   protected $utilities;
 
diff --git a/src/Plugin/Field/FieldFormatter/DocBlockFileNameFormatter.php b/src/Plugin/Field/FieldFormatter/DocBlockFileNameFormatter.php
index 0795111..63f612f 100644
--- a/src/Plugin/Field/FieldFormatter/DocBlockFileNameFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/DocBlockFileNameFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Plugin\Field\FieldFormatter;
 
+use Drupal\api\Interfaces\DocBlockInterface;
 use Drupal\api\Entity\DocBlock;
 use Drupal\api\Formatter;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -25,7 +26,7 @@ class DocBlockFileNameFormatter extends FormatterBase {
    * {@inheritdoc}
    */
   public function viewElements(FieldItemListInterface $items, $langcode) {
-    /** @var \Drupal\api\Interfaces\DocBlockInterface $entity */
+    /** @var DocBlockInterface $entity */
     $entity = $items->getEntity();
 
     $element = [];
@@ -33,7 +34,7 @@ class DocBlockFileNameFormatter extends FormatterBase {
       $file_docblock_id = DocBlock::findFileByFileName($item->value, $entity->getBranch());
       $link_to_file = $item->value;
       if ($file_docblock_id) {
-        /** @var \Drupal\api\Interfaces\DocBlockInterface $file_entity */
+        /** @var DocBlockInterface $file_entity */
         $file_entity = DocBlock::load($file_docblock_id);
         $link_to_file = Formatter::linkFile($file_entity);
       }
diff --git a/src/Plugin/Field/FieldFormatter/DocBlockNamespaceFormatter.php b/src/Plugin/Field/FieldFormatter/DocBlockNamespaceFormatter.php
index 5edc28d..7836adb 100644
--- a/src/Plugin/Field/FieldFormatter/DocBlockNamespaceFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/DocBlockNamespaceFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Plugin\Field\FieldFormatter;
 
+use Drupal\api\Interfaces\DocBlockInterface;
 use Drupal\api\Formatter;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -26,7 +27,7 @@ class DocBlockNamespaceFormatter extends FormatterBase {
    * {@inheritdoc}
    */
   public function viewElements(FieldItemListInterface $items, $langcode) {
-    /** @var \Drupal\api\Interfaces\DocBlockInterface $entity */
+    /** @var DocBlockInterface $entity */
     $entity = $items->getEntity();
 
     $element = [];
diff --git a/src/Plugin/Filter/LinkDocumentationFilter.php b/src/Plugin/Filter/LinkDocumentationFilter.php
index d5f952c..1e269e6 100644
--- a/src/Plugin/Filter/LinkDocumentationFilter.php
+++ b/src/Plugin/Filter/LinkDocumentationFilter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Plugin\Filter;
 
+use Drupal\api\Utilities;
 use Drupal\api\Formatter;
 use Drupal\filter\FilterProcessResult;
 use Drupal\filter\Plugin\FilterBase;
@@ -26,11 +27,11 @@ class LinkDocumentationFilter extends FilterBase {
    * @param string $langcode
    *   Language of the text.
    *
-   * @return \Drupal\filter\FilterProcessResult
+   * @return FilterProcessResult
    *   Processed result.
    */
   public function process($text, $langcode) {
-    /** @var \Drupal\api\Utilities $utilities */
+    /** @var Utilities $utilities */
     $utilities = \Drupal::service('api.utilities');
 
     // Try to get the loaded elements.
diff --git a/src/Plugin/QueueWorker/DeleteRelatedQueueWorker.php b/src/Plugin/QueueWorker/DeleteRelatedQueueWorker.php
index 56a577f..ab68dd4 100644
--- a/src/Plugin/QueueWorker/DeleteRelatedQueueWorker.php
+++ b/src/Plugin/QueueWorker/DeleteRelatedQueueWorker.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Plugin\QueueWorker;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Queue\QueueWorkerBase;
 
 /**
@@ -66,7 +67,7 @@ class DeleteRelatedQueueWorker extends QueueWorkerBase {
    * @param int $id
    *   ID of the entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   Branch object or null if nothing was found.
    */
   protected function loadEntity($type, $id) {
diff --git a/src/Plugin/QueueWorker/ParseQueueWorker.php b/src/Plugin/QueueWorker/ParseQueueWorker.php
index 17dd615..5676717 100644
--- a/src/Plugin/QueueWorker/ParseQueueWorker.php
+++ b/src/Plugin/QueueWorker/ParseQueueWorker.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Plugin\QueueWorker;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\api\Entity\DocBlock;
 use Drupal\api\Entity\DocBlock\DocReferenceCount;
 use Drupal\api\Entity\DocBlock\DocReference;
@@ -90,7 +91,7 @@ class ParseQueueWorker extends QueueWorkerBase {
    * @param int $id
    *   ID of the branch.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   Branch object or null if nothing was found.
    */
   protected function loadBranch($type, $id) {
diff --git a/src/Plugin/views/field/ServiceTags.php b/src/Plugin/views/field/ServiceTags.php
index ad490b9..139a7e6 100644
--- a/src/Plugin/views/field/ServiceTags.php
+++ b/src/Plugin/views/field/ServiceTags.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\api\Plugin\views\field;
 
+use Drupal\api\Interfaces\DocBlock\DocReferenceInterface;
 use Drupal\api\Entity\DocBlock\DocReference;
 use Drupal\views\Plugin\views\display\DisplayPluginBase;
 use Drupal\views\Plugin\views\field\PrerenderList;
@@ -50,7 +51,7 @@ class ServiceTags extends PrerenderList {
       if ($result) {
         $tags = DocReference::loadMultiple($result);
         foreach ($tags as $tag) {
-          /** @var \Drupal\api\Interfaces\DocBlock\DocReferenceInterface $tag */
+          /** @var DocReferenceInterface $tag */
           $this->items[$tag->getDocBlock()->id()][$tag->getObjectName()]['name'] = $tag->getObjectName();
         }
       }
diff --git a/src/Plugin/views/filter/ServiceTags.php b/src/Plugin/views/filter/ServiceTags.php
index 21d3d3f..0a341bd 100644
--- a/src/Plugin/views/filter/ServiceTags.php
+++ b/src/Plugin/views/filter/ServiceTags.php
@@ -18,7 +18,7 @@ class ServiceTags extends StringFilter {
   /**
    * Views Handler Plugin Manager.
    *
-   * @var \Drupal\views\Plugin\ViewsHandlerManager
+   * @var ViewsHandlerManager
    */
   protected $joinHandler;
 
@@ -31,9 +31,9 @@ class ServiceTags extends StringFilter {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\views\Plugin\ViewsHandlerManager $join_handler
+   * @param ViewsHandlerManager $join_handler
    *   Views Handler Plugin Manager.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ViewsHandlerManager $join_handler, Connection $connection) {
diff --git a/src/PrettyPrinter.php b/src/PrettyPrinter.php
index c452713..9707369 100644
--- a/src/PrettyPrinter.php
+++ b/src/PrettyPrinter.php
@@ -220,7 +220,7 @@ class PrettyPrinter extends Standard {
   /**
    * Overrides pretty-printing of nodes to add HTML in some cases.
    *
-   * @param \PhpParser\Node $node
+   * @param Node $node
    *   Node to be pretty printed.
    * @param bool $parentFormatPreserved
    *   Preserve parent format or not.
@@ -299,7 +299,7 @@ class PrettyPrinter extends Standard {
    * and there are empty lines between comment blocks. HTML spans are also
    * added.
    *
-   * @param \PhpParser\Comment[] $comments
+   * @param Comment[] $comments
    *   List of comments.
    *
    * @return string
@@ -335,7 +335,7 @@ class PrettyPrinter extends Standard {
   /**
    * Figures out the comment prefix.
    *
-   * @param \PhpParser\Comment $comment
+   * @param Comment $comment
    *   Comment object.
    *
    * @return string
@@ -632,7 +632,7 @@ class PrettyPrinter extends Standard {
   /**
    * Pretty-prints an array of nodes, comma separated, on separate lines.
    *
-   * @param \PhpParser\Node[] $nodes
+   * @param Node[] $nodes
    *   Array of Nodes to be printed.
    * @param bool $comma_at_end
    *   (optional) TRUE (default) if there should be a comma at the end of the
@@ -717,7 +717,7 @@ class PrettyPrinter extends Standard {
    *
    * Overrides the default to have the { on the same line, and add HTML.
    *
-   * @param \PhpParser\Node $node
+   * @param Node $node
    *   If, else, or elseif statement to print.
    * @param string $keyword
    *   Keyword to print, 'if', 'else', or 'elseif'.
diff --git a/src/Traits/MatchingTrait.php b/src/Traits/MatchingTrait.php
index 2001a3d..6216b58 100644
--- a/src/Traits/MatchingTrait.php
+++ b/src/Traits/MatchingTrait.php
@@ -14,7 +14,7 @@ trait MatchingTrait {
   /**
    * Applies a group of conditions to a query object.
    *
-   * @param \Drupal\Core\Entity\Query\QueryInterface $query
+   * @param QueryInterface $query
    *   Query to apply conditions to.
    * @param array $conditions
    *   Group of conditions to apply.
diff --git a/src/Traits/RouteElementsTrait.php b/src/Traits/RouteElementsTrait.php
index 8673254..b9fd33c 100644
--- a/src/Traits/RouteElementsTrait.php
+++ b/src/Traits/RouteElementsTrait.php
@@ -24,14 +24,14 @@ trait RouteElementsTrait {
    *
    * @param string $item
    *   Information about the object to get.
-   * @param \Drupal\api\Interfaces\DocBlockInterface $file
+   * @param DocBlockInterface $file
    *   File where the object will be.
    * @param string $type
    *   Type of the item.
    * @param bool $throw_exception
    *   Whether to throw a not found exception or just return null.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface|null
+   * @return DocBlockInterface|null
    *   DocBlock object.
    */
   protected function getItem($item, DocBlockInterface $file, $type, $throw_exception = FALSE) {
@@ -57,12 +57,12 @@ trait RouteElementsTrait {
    *
    * @param string $filename
    *   Path and name of the file as given by the URL argument.
-   * @param \Drupal\api\Interfaces\BranchInterface $branch
+   * @param BranchInterface $branch
    *   Branch where the file is supposed to be.
    * @param bool $throw_exception
    *   Whether to throw a not found exception or just return null.
    *
-   * @return \Drupal\api\Interfaces\DocBlockInterface|null
+   * @return DocBlockInterface|null
    *   File object.
    */
   protected function getFile($filename, BranchInterface $branch, $throw_exception = FALSE) {
@@ -95,15 +95,15 @@ trait RouteElementsTrait {
   /**
    * Filters the parameter and gets the project linked to it by ID or slug.
    *
-   * @param string|\Drupal\api\Interfaces\ProjectInterface $project
+   * @param string|ProjectInterface $project
    *   Project, ID or slug of the project.
    * @param bool $throw_exception
    *   Whether to throw a not found exception or just return null.
    *
-   * @return \Drupal\api\Interfaces\ProjectInterface|null
+   * @return ProjectInterface|null
    *   Project, if found, or null.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If no project is found and $throw_exception is TRUE.
    */
   protected function getProject($project, $throw_exception = FALSE) {
@@ -124,14 +124,14 @@ trait RouteElementsTrait {
   /**
    * Filters the parameter and gets the branch linked to it by ID or slug.
    *
-   * @param string|\Drupal\api\Interfaces\BranchInterface $branch
+   * @param string|BranchInterface $branch
    *   Branch, ID or slug of the branch.
-   * @param \Drupal\api\Interfaces\ProjectInterface $project
+   * @param ProjectInterface $project
    *   Project the branch belongs to.
    * @param bool $throw_exception
    *   Whether to throw a not found exception or just return null.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface|null
+   * @return BranchInterface|null
    *   Branch, if found, or null.
    */
   protected function getBranch($branch, ProjectInterface $project, $throw_exception = FALSE) {
diff --git a/src/Utilities.php b/src/Utilities.php
index f5e20d0..b9ca2bc 100644
--- a/src/Utilities.php
+++ b/src/Utilities.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\api;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\api\Interfaces\BranchInterface;
 use Composer\Semver\Semver;
 use CzProject\GitPhp\Git;
 use CzProject\GitPhp\GitRepository;
@@ -60,55 +63,55 @@ class Utilities {
   /**
    * FileSystemInterface definition.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Logger instance for the api module.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerService;
 
   /**
    * ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Config instance.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $apiConfig;
 
   /**
    * Current route match service.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $currentRouteMatch;
 
   /**
    * Utilities constructor.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   File system service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_service
+   * @param LoggerChannelFactoryInterface $logger_service
    *   Logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $current_route_match
+   * @param RouteMatchInterface $current_route_match
    *   Route match service.
    */
   public function __construct(FileSystemInterface $file_system, LoggerChannelFactoryInterface $logger_service, ConfigFactoryInterface $config_factory, RouteMatchInterface $current_route_match) {
@@ -253,7 +256,7 @@ class Utilities {
   /**
    * Gets the remote sanitized branch names of a repo object.
    *
-   * @param \CzProject\GitPhp\GitRepository $repo_object
+   * @param GitRepository $repo_object
    *   Repository object.
    *
    * @return array
@@ -313,7 +316,7 @@ class Utilities {
   /**
    * Fetch new branches or updates existing ones.
    *
-   * @param \Drupal\api\Interfaces\ProjectInterface $project
+   * @param ProjectInterface $project
    *   Project to fetch branches from.
    * @param array $branches
    *   Branches to checkout or pull.
@@ -336,7 +339,7 @@ class Utilities {
       return NULL;
     }
 
-    /** @var \Drupal\api\Interfaces\BranchInterface $anyBranch */
+    /** @var BranchInterface $anyBranch */
     $anyBranch = array_shift($projectBranches);
     $directories = $anyBranch->getDirectories(TRUE);
     foreach ($directories as $directory) {
@@ -503,7 +506,7 @@ class Utilities {
    *   Path to the folder.
    * @param string $branch_name
    *   Name of the branch.
-   * @param \Drupal\api\Interfaces\ProjectInterface $project
+   * @param ProjectInterface $project
    *   Project where this folder is.
    */
   public function addExtraDocumentation($folder, $branch_name, ProjectInterface $project) {
@@ -524,7 +527,7 @@ class Utilities {
   /**
    * Returns the default branch for the whole site.
    *
-   * @return \Drupal\api\Interfaces\BranchInterface|null
+   * @return BranchInterface|null
    *   Returns the default branch or null.
    */
   public function getDefaultBranchProject() {
