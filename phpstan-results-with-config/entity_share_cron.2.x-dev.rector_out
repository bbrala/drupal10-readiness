modules/contrib/entity_share_cron/entity_share_cron.install
modules/contrib/entity_share_cron/entity_share_cron.module
modules/contrib/entity_share_cron/src/EntityShareCronService.php
modules/contrib/entity_share_cron/src/EntityShareCronServiceInterface.php
modules/contrib/entity_share_cron/src/Form/SettingsForm.php
modules/contrib/entity_share_cron/src/Plugin/QueueWorker/EntityShareCronPending.php
modules/contrib/entity_share_cron/tests/src/Kernel/HookCronTest.php
modules/contrib/entity_share_cron/tests/src/Unit/EntityShareCronServiceTest.php

5 files with changes
====================

1) modules/contrib/entity_share_cron/tests/src/Unit/EntityShareCronServiceTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_share_cron\Unit;

+use Drupal\Core\Queue\QueueInterface;
+use Psr\Http\Message\StreamInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Tests\UnitTestCase;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\entity_share_client\Entity\Remote;
@@ @@
   /**
    * The service under test.
    *
-   * @var \Drupal\entity_share_cron\EntityShareCronServiceInterface
+   * @var EntityShareCronServiceInterface
    */
   protected $service;

@@ @@
   /**
    * Mocked queue.
    *
-   * @var \Drupal\Core\Queue\QueueInterface
+   * @var QueueInterface
    */
   protected $queue;

@@ @@
   /**
    * Returns the body of a request for a page.
    *
-   * @return \Psr\Http\Message\StreamInterface
+   * @return StreamInterface
    *   The mocked body.
    */
   public function getResponseBody() {
@@ @@
    * @param string $uuid
    *   The UUID of the entity to create.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The mocked entity.
    */
   protected function createEntity($uuid) {
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->responsePages = count($this->responseData);
     $this->requestCount = 0;

     // Mocks a configuration factory for the module settings.
-    $settings = $this->getMockBuilder('Drupal\Core\Config\ImmutableConfig')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $settings = $this->createMock('Drupal\Core\Config\ImmutableConfig');
     $settings->expects($this->any())
       ->method('get')
       ->with('remotes')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_share_cron/tests/src/Kernel/HookCronTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_share_cron\Kernel;

+use Drupal\Core\Config\Config;
+use Drupal\Core\State\StateInterface;
+use Drupal\Core\Queue\QueueInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\entity_share_cron\EntityShareCronServiceInterface;

@@ @@
   /**
    * Editable module settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Drupal state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * Queue of pending channels.
    *
-   * @var \Drupal\Core\Queue\QueueInterface
+   * @var QueueInterface
    */
   protected $queue;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Installs and gets module configuration.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_share_cron/src/Plugin/QueueWorker/EntityShareCronPending.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_share_cron\Plugin\QueueWorker;

+use Drupal\entity_share_cron\EntityShareCronServiceInterface;
 use Drupal\Core\Queue\QueueWorkerBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\entity_share_cron\EntityShareCronService;
@@ @@
   /**
    * Entity Share Cron service.
    *
-   * @var \Drupal\entity_share_cron\EntityShareCronServiceInterface
+   * @var EntityShareCronServiceInterface
    */
   protected $service;

@@ @@
   /**
    * Logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\entity_share_cron\EntityShareCronService $service
+   * @param EntityShareCronService $service
    *   Entity Share Cron service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Logger.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityShareCronService $service, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_share_cron/src/Form/SettingsForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Remote manager service.
    *
-   * @var \Drupal\entity_share_client\Service\RemoteManagerInterface
+   * @var RemoteManagerInterface
    */
   protected $remoteManager;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\entity_share_client\Service\RemoteManagerInterface $remote_manager
+   * @param RemoteManagerInterface $remote_manager
    *   Remote manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, RemoteManagerInterface $remote_manager) {
@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_share_cron/src/EntityShareCronService.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_share_cron;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Queue\QueueFactory;
@@ @@
   /**
    * Module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * Remote manager service.
    *
-   * @var \Drupal\entity_share_client\Service\RemoteManagerInterface
+   * @var RemoteManagerInterface
    */
   protected $remoteManager;

@@ @@
   /**
    * JSON API helper service.
    *
-   * @var \Drupal\entity_share_client\Service\JsonapiHelperInterface
+   * @var JsonapiHelperInterface
    */
   protected $jsonapiHelper;

@@ @@
   /**
    * Queue service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;

@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\entity_share_client\Service\RemoteManagerInterface $remote_manager
+   * @param RemoteManagerInterface $remote_manager
    *   Remote manager to get channels infos from.
-   * @param \Drupal\entity_share_client\Service\JsonapiHelperInterface $jsonapi_helper
+   * @param JsonapiHelperInterface $jsonapi_helper
    *   Helps to prepare JSON responses.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   Queue service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 5 files have been changed by Rector                                       

