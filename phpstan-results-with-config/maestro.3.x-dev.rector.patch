diff --git a/maestro.install b/maestro.install
index 00dd77d..fafbbd1 100644
--- a/maestro.install
+++ b/maestro.install
@@ -115,7 +115,7 @@ function maestro_update_8003() {
 function maestro_update_8004() {
   $message = NULL;
   if (\Drupal::moduleHandler()->moduleExists('views') && !View::load('maestro_completed_tasks')) {
-    $config_path = drupal_get_path('module', 'maestro') . '/config/install/views.view.maestro_completed_tasks.yml';
+    $config_path = \Drupal::service('extension.list.module')->getPath('maestro') . '/config/install/views.view.maestro_completed_tasks.yml';
     $data = Yaml::parse(file_get_contents($config_path));
     \Drupal::configFactory()->getEditable('views.view.maestro_completed_tasks')->setData($data)->save(TRUE);
     $message = 'The new Maestro Completed Tasks view has been created.';
@@ -132,7 +132,7 @@ function maestro_update_8004() {
 function maestro_update_8005() {
   $message = NULL;
   if (\Drupal::moduleHandler()->moduleExists('views') && !View::load('maestro_entity_identifiers')) {
-    $config_path = drupal_get_path('module', 'maestro') . '/config/install/views.view.maestro_entity_identifiers.yml';
+    $config_path = \Drupal::service('extension.list.module')->getPath('maestro') . '/config/install/views.view.maestro_entity_identifiers.yml';
     $data = Yaml::parse(file_get_contents($config_path));
     \Drupal::configFactory()->getEditable('views.view.maestro_entity_identifiers')->setData($data)->save(TRUE);
     $message = 'The new Maestro Entity Identifiers view for the Task Console has been created.';
diff --git a/maestro.module b/maestro.module
index e472236..fe337ad 100644
--- a/maestro.module
+++ b/maestro.module
@@ -307,7 +307,7 @@ function maestro_menu_local_tasks_alter(&$data, $route_name) {
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The formstate information from the form.
  */
 function maestro_content_type_task_submit(array &$form, FormStateInterface $form_state) {
@@ -759,7 +759,7 @@ function maestro_theme_registry_alter(&$theme_registry) {
 
   // Now, we actually want to use our own template, which is inside of our Maestro module templates folder.
   $theme_registry['maestro_views_view_table']['template'] = 'maestro-views-view-table';
-  $path = drupal_get_path('module', 'maestro');
+  $path = \Drupal::service('extension.list.module')->getPath('maestro');
   $theme_registry['maestro_views_view_table']['path'] = $path . '/templates';
 }
 
diff --git a/modules/examples/maestro_form_approval_example/src/MaestroFormApprovalExampleUninstallValidator.php b/modules/examples/maestro_form_approval_example/src/MaestroFormApprovalExampleUninstallValidator.php
index feb8c20..e711140 100644
--- a/modules/examples/maestro_form_approval_example/src/MaestroFormApprovalExampleUninstallValidator.php
+++ b/modules/examples/maestro_form_approval_example/src/MaestroFormApprovalExampleUninstallValidator.php
@@ -18,7 +18,7 @@ class MaestroFormApprovalExampleUninstallValidator implements ModuleUninstallVal
   /**
    * Constructs a new MaestroFormApprovalExampleUninstallValidator.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(TranslationInterface $string_translation) {
diff --git a/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php b/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php
index c821bfb..e2b6930 100644
--- a/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php
+++ b/modules/examples/maestro_form_approval_example/src/ProxyClass/MaestroFormApprovalExampleUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\maestro_form_approval_example\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\maestro_form_approval_example\MaestroFormApprovalExampleUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MaestroFormApprovalExampleUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class MaestroFormApprovalExampleUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -34,19 +38,19 @@ namespace Drupal\maestro_form_approval_example\ProxyClass {
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;
 
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\maestro_form_approval_example\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/modules/examples/maestro_interactive_task_plugin_example/src/MaestroInteractiveExampleTaskUninstallValidator.php b/modules/examples/maestro_interactive_task_plugin_example/src/MaestroInteractiveExampleTaskUninstallValidator.php
index e6ea4e4..df82f06 100644
--- a/modules/examples/maestro_interactive_task_plugin_example/src/MaestroInteractiveExampleTaskUninstallValidator.php
+++ b/modules/examples/maestro_interactive_task_plugin_example/src/MaestroInteractiveExampleTaskUninstallValidator.php
@@ -17,7 +17,7 @@ class MaestroInteractiveExampleTaskUninstallValidator implements ModuleUninstall
   /**
    * Constructs a new MaestroInteractiveExampleTaskUninstallValidator.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(TranslationInterface $string_translation) {
diff --git a/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php b/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php
index 93c145a..a056904 100644
--- a/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php
+++ b/modules/examples/maestro_interactive_task_plugin_example/src/ProxyClass/MaestroInteractiveExampleTaskUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\maestro_interactive_task_plugin_example\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\maestro_interactive_task_plugin_example\MaestroInteractiveExampleTaskUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MaestroInteractiveExampleTaskUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class MaestroInteractiveExampleTaskUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -34,19 +38,19 @@ namespace Drupal\maestro_interactive_task_plugin_example\ProxyClass {
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;
 
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\maestro_interactive_task_plugin_example\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/modules/examples/maestro_noninteractive_task_plugin_example/src/MaestroNonInteractiveExampleTaskUninstallValidator.php b/modules/examples/maestro_noninteractive_task_plugin_example/src/MaestroNonInteractiveExampleTaskUninstallValidator.php
index e08f652..fa9a08d 100644
--- a/modules/examples/maestro_noninteractive_task_plugin_example/src/MaestroNonInteractiveExampleTaskUninstallValidator.php
+++ b/modules/examples/maestro_noninteractive_task_plugin_example/src/MaestroNonInteractiveExampleTaskUninstallValidator.php
@@ -17,7 +17,7 @@ class MaestroNonInteractiveExampleTaskUninstallValidator implements ModuleUninst
   /**
    * Constructs a new MaestroExampleTaskUninstallValidator.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(TranslationInterface $string_translation) {
diff --git a/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php b/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php
index 957b1cb..a9cbfb6 100644
--- a/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php
+++ b/modules/examples/maestro_noninteractive_task_plugin_example/src/ProxyClass/MaestroNonInteractiveExampleTaskUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\maestro_noninteractive_task_plugin_example\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\maestro_noninteractive_task_plugin_example\MaestroNonInteractiveExampleTaskUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MaestroNonInteractiveExampleTaskUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class MaestroNonInteractiveExampleTaskUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -34,19 +38,19 @@ namespace Drupal\maestro_noninteractive_task_plugin_example\ProxyClass {
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;
 
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\maestro_noninteractive_task_plugin_example\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/modules/maestro_webform/tests/src/Functional/LoadTest.php b/modules/maestro_webform/tests/src/Functional/LoadTest.php
index b480115..a245a4e 100644
--- a/modules/maestro_webform/tests/src/Functional/LoadTest.php
+++ b/modules/maestro_webform/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\maestro_webform\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -40,7 +41,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
diff --git a/src/Controller/MaestroAutoCompleteController.php b/src/Controller/MaestroAutoCompleteController.php
index da566d8..4614e8a 100644
--- a/src/Controller/MaestroAutoCompleteController.php
+++ b/src/Controller/MaestroAutoCompleteController.php
@@ -15,10 +15,10 @@ class MaestroAutoCompleteController extends ControllerBase {
   /**
    * Returns response for the autocompletion.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object containing the search string.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing the autocomplete suggestions.
    */
   public function autocompleteRoles(Request $request) {
@@ -37,10 +37,10 @@ class MaestroAutoCompleteController extends ControllerBase {
   /**
    * Returns response for the autocompletion.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object containing the search string.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing the autocomplete suggestions.
    */
   public function autocompleteInteractiveHandlers(Request $request) {
@@ -62,10 +62,10 @@ class MaestroAutoCompleteController extends ControllerBase {
   /**
    * Returns response for the autocompletion.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object containing the search string.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing the autocomplete suggestions.
    */
   public function autocompleteBatchHandlers(Request $request) {
diff --git a/src/Controller/MaestroProcessStatusController.php b/src/Controller/MaestroProcessStatusController.php
index 2d08d9a..828ad69 100644
--- a/src/Controller/MaestroProcessStatusController.php
+++ b/src/Controller/MaestroProcessStatusController.php
@@ -22,7 +22,7 @@ class MaestroProcessStatusController extends ControllerBase {
    * @param int $processID
    *   The processID we wish to get details for.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response
    */
   public function getDetails($processID) {
diff --git a/src/Controller/MaestroTemplateListBuilder.php b/src/Controller/MaestroTemplateListBuilder.php
index 9caa9fe..90acf56 100644
--- a/src/Controller/MaestroTemplateListBuilder.php
+++ b/src/Controller/MaestroTemplateListBuilder.php
@@ -32,7 +32,7 @@ class MaestroTemplateListBuilder extends ConfigEntityListBuilder {
   /**
    * Builds a row for an entity in the entity listing.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity for which to build the row.
    *
    * @return array
diff --git a/src/Form/MaestroInteractiveFormBase.php b/src/Form/MaestroInteractiveFormBase.php
index 7343d46..71bbefe 100644
--- a/src/Form/MaestroInteractiveFormBase.php
+++ b/src/Form/MaestroInteractiveFormBase.php
@@ -114,7 +114,7 @@ class MaestroInteractiveFormBase extends FormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the form.
    */
   public function completeForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/MaestroTemplateAddForm.php b/src/Form/MaestroTemplateAddForm.php
index a1e73ca..37beda9 100644
--- a/src/Form/MaestroTemplateAddForm.php
+++ b/src/Form/MaestroTemplateAddForm.php
@@ -20,7 +20,7 @@ class MaestroTemplateAddForm extends MaestroTemplateFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form's form state.
    *
    * @return array
diff --git a/src/Form/MaestroTemplateDeleteForm.php b/src/Form/MaestroTemplateDeleteForm.php
index 37d25fa..6c70f70 100644
--- a/src/Form/MaestroTemplateDeleteForm.php
+++ b/src/Form/MaestroTemplateDeleteForm.php
@@ -67,7 +67,7 @@ class MaestroTemplateDeleteForm extends EntityConfirmFormBase {
   /**
    * Gets the cancel route.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Returns a formatted Drupal URL.
    */
   public function getCancelUrl() {
@@ -79,7 +79,7 @@ class MaestroTemplateDeleteForm extends EntityConfirmFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form's form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/MaestroTemplateEditForm.php b/src/Form/MaestroTemplateEditForm.php
index 229b81d..28ef1cf 100644
--- a/src/Form/MaestroTemplateEditForm.php
+++ b/src/Form/MaestroTemplateEditForm.php
@@ -22,7 +22,7 @@ class MaestroTemplateEditForm extends MaestroTemplateFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
diff --git a/src/Form/MaestroTemplateFormBase.php b/src/Form/MaestroTemplateFormBase.php
index 6fb4f8b..738dd0e 100644
--- a/src/Form/MaestroTemplateFormBase.php
+++ b/src/Form/MaestroTemplateFormBase.php
@@ -25,7 +25,7 @@ class MaestroTemplateFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form's form state.
    *
    * @return array
@@ -372,7 +372,7 @@ class MaestroTemplateFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form's form state.
    *
    * @return array
@@ -389,7 +389,7 @@ class MaestroTemplateFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form's form state.
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
@@ -409,7 +409,7 @@ class MaestroTemplateFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form's form state.
    */
   public function save(array $form, FormStateInterface $form_state) {
diff --git a/src/MaestroEnginePermissions.php b/src/MaestroEnginePermissions.php
index cb63756..fe6c09e 100644
--- a/src/MaestroEnginePermissions.php
+++ b/src/MaestroEnginePermissions.php
@@ -24,7 +24,7 @@ class MaestroEnginePermissions implements ContainerInjectionInterface {
   /**
    * Constructs a new MaestroEnginePermissions instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager) {
diff --git a/src/MaestroEngineTaskInterface.php b/src/MaestroEngineTaskInterface.php
index 282b427..a213a3d 100644
--- a/src/MaestroEngineTaskInterface.php
+++ b/src/MaestroEngineTaskInterface.php
@@ -42,7 +42,7 @@ interface MaestroEngineTaskInterface extends ExecutableInterface, PluginInspecti
    *
    * @param string $modal
    *   Defines if the form is a modal form or not.
-   * @param Drupal\maestro\Form\MaestroExecuteInteractive $parent
+   * @param MaestroExecuteInteractive $parent
    *   Parent class for using modal callbacks to the interactive form base if needed.
    */
   public function getExecutableForm($modal, MaestroExecuteInteractive $parent);
@@ -77,7 +77,7 @@ interface MaestroEngineTaskInterface extends ExecutableInterface, PluginInspecti
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form's form state.
    * @param array $task
    *   The fully loaded task array from the template.
diff --git a/src/MaestroEngineTasksPluginManager.php b/src/MaestroEngineTasksPluginManager.php
index ea93c71..a94b29f 100644
--- a/src/MaestroEngineTasksPluginManager.php
+++ b/src/MaestroEngineTasksPluginManager.php
@@ -19,9 +19,9 @@ class MaestroEngineTasksPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/MaestroTaskTrait.php b/src/MaestroTaskTrait.php
index 9aefd9e..67733c3 100644
--- a/src/MaestroTaskTrait.php
+++ b/src/MaestroTaskTrait.php
@@ -485,7 +485,7 @@ trait MaestroTaskTrait {
    *
    * @param array $form
    *   The form submission from the submit handler.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The FormStateInterface from the submit handler.
    * @param array $task
    *   The array representation of loading a task from the template via the MaestroEngine::getTemplateTaskByID method.
diff --git a/src/Plugin/EngineTasks/MaestroBatchFunctionTask.php b/src/Plugin/EngineTasks/MaestroBatchFunctionTask.php
index 26e6ccc..1721c11 100644
--- a/src/Plugin/EngineTasks/MaestroBatchFunctionTask.php
+++ b/src/Plugin/EngineTasks/MaestroBatchFunctionTask.php
@@ -188,7 +188,7 @@ class MaestroBatchFunctionTask extends PluginBase implements MaestroEngineTaskIn
    *
    * @param array $form
    *   From render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current state of form.
    *
    * @return array
diff --git a/src/Plugin/EngineTasks/MaestroInteractiveTask.php b/src/Plugin/EngineTasks/MaestroInteractiveTask.php
index 9311277..a6a89c9 100644
--- a/src/Plugin/EngineTasks/MaestroInteractiveTask.php
+++ b/src/Plugin/EngineTasks/MaestroInteractiveTask.php
@@ -236,7 +236,7 @@ class MaestroInteractiveTask extends PluginBase implements MaestroEngineTaskInte
    *
    * @param array $form
    *   From render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current state of form.
    *
    * @return array
diff --git a/src/Plugin/EngineTasks/MaestroSpawnSubFlowTask.php b/src/Plugin/EngineTasks/MaestroSpawnSubFlowTask.php
index 5328c6b..675c1b5 100644
--- a/src/Plugin/EngineTasks/MaestroSpawnSubFlowTask.php
+++ b/src/Plugin/EngineTasks/MaestroSpawnSubFlowTask.php
@@ -268,7 +268,7 @@ class MaestroSpawnSubFlowTask extends PluginBase implements MaestroEngineTaskInt
    *
    * @param array $form
    *   From render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current state of form.
    *
    * @return array
