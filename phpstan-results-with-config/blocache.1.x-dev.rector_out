modules/contrib/blocache/blocache.module
modules/contrib/blocache/src/Blocache.php
modules/contrib/blocache/src/BlocacheMetadata.php
modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTest.php
modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTestBase.php
modules/contrib/blocache/tests/src/Unit/BlocacheMetadataUnitTest.php

4 files with changes
====================

1) modules/contrib/blocache/tests/src/Unit/BlocacheMetadataUnitTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The blocache.metadata service.
    *
-   * @var \Drupal\blocache\BlocacheMetadata
+   * @var BlocacheMetadata
    */
   protected $blocacheMetadata;

@@ @@
   /**
    * The block entity.
    *
-   * @var \Drupal\block\BlockInterface
+   * @var BlockInterface
    */
   protected $block;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->blocacheMetadata = new BlocacheMetadata();

-    $plugin = $this->getMockBuilder('Drupal\Core\Block\BlockBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $plugin = $this->createMock('Drupal\Core\Block\BlockBase');
     $plugin->expects($this->any())
       ->method('getMachineNameSuggestion')
       ->will($this->returnValue($this->randomMachineName(8)));

-    $block = $this->getMockBuilder('Drupal\block\Entity\Block')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $block = $this->createMock('Drupal\block\Entity\Block');
     $block->expects($this->any())
       ->method('getPlugin')
       ->will($this->returnValue($plugin));
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     unset($this->blocacheMetadata);
     unset($this->block);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\blocache\Functional;

+use Drupal\user\UserInterface;
+use Drupal\blocache\BlocacheMetadata;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * The blocache.metadata service.
    *
-   * @var \Drupal\blocache\BlocacheMetadata
+   * @var BlocacheMetadata
    */
   protected $blocacheMetadata;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Use the test page as the front page.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/blocache/tests/src/Functional/BlocacheBrowserTest.php:18

    ---------- begin diff ----------
@@ @@
     $block_name = 'system_powered_by_block';
     $default_theme = $this->config('system.theme')->get('default');
     $this->drupalGet('admin/structure/block/add/' . $block_name . '/' . $default_theme);
-    $this->assertField('edit-blocache-overridden');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Change assertion to buttonExists() if checking for a button.
+    $this->assertSession()->fieldExists('edit-blocache-overridden');
   }

   /**
@@ @@
       'blocache[tabs][contexts][value][languages]' => 1,
       'blocache[tabs][contexts][value][languages__arg]' => LanguageInterface::TYPE_URL,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save block'));
+    $this->submitForm($edit, t('Save block'));

     // Access the block form again and check if the values have been saved.
-    $this->assertText('The block configuration has been saved.', 'Block was saved');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The block configuration has been saved.');
     $this->clickLink('Configure');
-    $this->assertFieldChecked('edit-blocache-overridden');
-    $this->assertFieldByName('blocache[tabs][max-age][value]', 600);
-    $this->assertFieldByName('blocache[tabs][contexts][value][user.roles]', 1);
-    $this->assertFieldByName('blocache[tabs][contexts][value][user.roles__arg]', 'administrator');
-    $this->assertFieldByName('blocache[tabs][contexts][value][languages]', 1);
-    $this->assertFieldByName('blocache[tabs][contexts][value][languages__arg]', LanguageInterface::TYPE_URL);
+    $this->assertSession()->checkboxChecked('edit-blocache-overridden');
+    $this->assertSession()->fieldValueEquals('blocache[tabs][max-age][value]', 600);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][user.roles]', 1);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][user.roles__arg]', 'administrator');
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][languages]', 1);
+    $this->assertSession()->fieldValueEquals('blocache[tabs][contexts][value][languages__arg]', LanguageInterface::TYPE_URL);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertFieldCheckedRector
 * AssertFieldRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/blocache/src/BlocacheMetadata.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * The block entity.
    *
-   * @var \Drupal\block\BlockInterface
+   * @var BlockInterface
    */
   protected $block = NULL;

@@ @@
   /**
    * Gets the block entity.
    *
-   * @return \Drupal\block\BlockInterface|null
+   * @return BlockInterface|null
    *   Return the block entity or NULL.
    */
   public function getBlock() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 4 files have been changed by Rector                                       

