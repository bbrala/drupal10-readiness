diff --git a/elasticsearch_connector_autocomp.module b/elasticsearch_connector_autocomp.module
index 30c4218..889041e 100644
--- a/elasticsearch_connector_autocomp.module
+++ b/elasticsearch_connector_autocomp.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\search_api\Form\IndexForm;
+use Drupal\search_api\IndexInterface;
 /**
  * @file
  * Contains elasticsearch_connector_autocomp.module.
@@ -146,13 +148,13 @@ function elasticsearch_connector_autocomp_form_search_api_index_form_alter(&$for
  *
  * @param array $form
  *   An associative array containing the structure of the form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function elasticsearch_connector_autocomp_form_search_api_index_form_submit(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\search_api\Form\IndexForm $formObject */
+  /** @var IndexForm $formObject */
   $formObject = $form_state->getFormObject();
-  /** @var \Drupal\search_api\IndexInterface $index */
+  /** @var IndexInterface $index */
   $index = $formObject->getEntity();
   $new_state = $index->getThirdPartySetting('elasticsearch_connector', 'ngram_filter_enabled', FALSE);
   $new_state_config = $index->getThirdPartySetting('elasticsearch_connector', 'ngram_config', FALSE);
@@ -188,7 +190,7 @@ function elasticsearch_connector_autocomp_form_search_api_index_form_submit(arra
  * Implements hook_form_FORM_ID_alter().
  */
 function elasticsearch_connector_autocomp_form_search_api_index_fields_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\search_api\IndexInterface $index_entity */
+  /** @var IndexInterface $index_entity */
   $index_entity = $form_state->getFormObject()->getEntity();
   $ngram_index_analyzer_enabled = $index_entity->getThirdPartySetting('elasticsearch_connector', 'ngram_filter_enabled', FALSE);
 
diff --git a/src/EventSubscriber/DefaultSubscriber.php b/src/EventSubscriber/DefaultSubscriber.php
index 4dba019..40cdd23 100644
--- a/src/EventSubscriber/DefaultSubscriber.php
+++ b/src/EventSubscriber/DefaultSubscriber.php
@@ -2,11 +2,13 @@
 
 namespace Drupal\elasticsearch_connector_autocomp\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\search_api\Entity\Index;
 use Drupal\Core\Database\Connection;
 use Drupal\elasticsearch_connector\ElasticSearch\Parameters\Factory\IndexFactory;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class DefaultSubscriber.
@@ -23,16 +25,16 @@ class DefaultSubscriber implements EventSubscriberInterface {
   /**
    * Connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $connection;
 
   /**
    * Constructs a new DefaultSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The connection service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, Connection $connection) {
@@ -53,7 +55,7 @@ class DefaultSubscriber implements EventSubscriberInterface {
   /**
    * Called on elasticsearch_connector.prepare_index_mapping event.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The event.
    */
   public function elasticsearchConnectorPrepareIndexMapping(Event $event) {
@@ -84,7 +86,7 @@ class DefaultSubscriber implements EventSubscriberInterface {
   /**
    * Called on elasticsearch_connector.prepare_index event.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The event.
    */
   public function elasticsearchConnectorPrepareIndex(Event $event) {
@@ -151,12 +153,12 @@ EOF;
    * @param string $index_name
    *   The long index name as a string.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The loaded index or NULL.
    */
   private function loadIndexFromIndexName($index_name) {
     $index_storage = $this->entityTypeManager->getStorage('search_api_index');
-    /** @var \Drupal\search_api\Entity\Index[] $search_api_indexes */
+    /** @var Index[] $search_api_indexes */
     $search_api_indexes = $index_storage->loadMultiple();
 
     foreach ($search_api_indexes as $search_api_index) {
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 1d501d8..e04b8a8 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\elasticsearch_connector_autocomp\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,7 +23,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -34,7 +35,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/tests/src/FunctionalJavascript/IndexFormTest.php b/tests/src/FunctionalJavascript/IndexFormTest.php
index 1bb394d..3ed00c7 100644
--- a/tests/src/FunctionalJavascript/IndexFormTest.php
+++ b/tests/src/FunctionalJavascript/IndexFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\elasticsearch_connector_autocomp\FunctionalJavascript;
 
+use Drupal\search_api\IndexInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 
 /**
@@ -83,7 +84,7 @@ class IndexFormTest extends WebDriverTestBase {
    * Tests confirm form behaviour.
    */
   public function internalTestConfirmForm() {
-    /** @var \Drupal\search_api\IndexInterface $index */
+    /** @var IndexInterface $index */
     $indexStorage = $this->container->get('entity_type.manager')->getStorage('search_api_index');
     $index = $indexStorage->load('elasticsearch_index');
 
@@ -134,7 +135,7 @@ class IndexFormTest extends WebDriverTestBase {
    * Tests showing fields for taxonomy based indices.
    */
   public function internalTestTaxonomyIndex() {
-    /** @var \Drupal\search_api\IndexInterface $index */
+    /** @var IndexInterface $index */
     $indexStorage = $this->container->get('entity_type.manager')->getStorage('search_api_index');
 
     // Test hook_form_search_api_index_fields_alter, see issue #3006322.
