modules/contrib/config_rewrite/config_rewrite.module
modules/contrib/config_rewrite/src/ConfigRewriter.php
modules/contrib/config_rewrite/src/ConfigRewriterInterface.php
modules/contrib/config_rewrite/src/Exception/NonexistentInitialConfigException.php
modules/contrib/config_rewrite/tests/src/Kernel/ConfigRewriteTest.php
modules/contrib/config_rewrite/tests/src/Kernel/NonexistentInitialConfigTest.php

3 files with changes
====================

1) modules/contrib/config_rewrite/tests/src/Kernel/NonexistentInitialConfigTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\config_rewrite\Kernel;

+use Drupal\Core\Config\CachedStorage;
+use Drupal\config_rewrite\ConfigRewriterInterface;
+use Drupal\language\Config\LanguageConfigFactoryOverrideInterface;
+use Drupal\config_rewrite\Exception\NonexistentInitialConfigException;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The active configuration storage.
    *
-   * @var \Drupal\Core\Config\CachedStorage
+   * @var CachedStorage
    */
   protected $activeConfigStorage;

@@ @@
   /**
    * The configuration rewriter.
    *
-   * @var \Drupal\config_rewrite\ConfigRewriterInterface
+   * @var ConfigRewriterInterface
    */
   protected $configRewriter;

@@ @@
   /**
    * The language config factory override service.
    *
-   * @var \Drupal\language\Config\LanguageConfigFactoryOverrideInterface
+   * @var LanguageConfigFactoryOverrideInterface
    */
   protected $languageConfigFactoryOverride;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->configRewriter = $this->container->get('config_rewrite.config_rewriter');
@@ @@
   /**
    * @covers ::rewriteModuleConfig
    * @covers ::rewriteConfig
-   * @expectedException \Drupal\config_rewrite\Exception\NonexistentInitialConfigException
    */
   function testConfigRewrite() {
+    $this->expectException(NonexistentInitialConfigException::class);
     $this->configRewriter->rewriteModuleConfig('config_rewrite_nonexisting');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/config_rewrite/tests/src/Kernel/ConfigRewriteTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\config_rewrite\Kernel;

+use Drupal\Core\Config\CachedStorage;
+use Drupal\config_rewrite\ConfigRewriterInterface;
+use Drupal\language\Config\LanguageConfigFactoryOverrideInterface;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The active configuration storage.
    *
-   * @var \Drupal\Core\Config\CachedStorage
+   * @var CachedStorage
    */
   protected $activeConfigStorage;

@@ @@
   /**
    * The configuration rewriter.
    *
-   * @var \Drupal\config_rewrite\ConfigRewriterInterface
+   * @var ConfigRewriterInterface
    */
   protected $configRewriter;

@@ @@
   /**
    * The language config factory override service.
    *
-   * @var \Drupal\language\Config\LanguageConfigFactoryOverrideInterface
+   * @var LanguageConfigFactoryOverrideInterface
    */
   protected $languageConfigFactoryOverride;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->configRewriter = $this->container->get('config_rewrite.config_rewriter');
@@ @@

     // Verify that the original configuration data exists.
     $data = $this->activeConfigStorage->read('user.role.test1');
-    $this->assertIdentical($data['label'], $expected_original_data['label']);
-    $this->assertIdentical($data['permissions'], $expected_original_data['permissions']);
+    $this->assertSame($data['label'], $expected_original_data['label']);
+    $this->assertSame($data['permissions'], $expected_original_data['permissions']);

     // Rewrite configuration.
     $this->configRewriter->rewriteModuleConfig('config_rewrite_test_rewrite');
    ----------- end diff -----------

Applied rules:
 * AssertIdenticalRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/config_rewrite/src/ConfigRewriter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\config_rewrite;

+use Drupal\language\Config\LanguageConfigFactoryOverrideInterface;
+use Drupal\Core\Extension\Extension;
+use Drupal\language\Config\LanguageConfigOverride;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The language config factory override service.
    *
-   * @var \Drupal\language\Config\LanguageConfigFactoryOverrideInterface|NULL
+   * @var LanguageConfigFactoryOverrideInterface|NULL
    */
   protected $languageConfigFactoryOverride;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * A logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs a new ConfigRewriter.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   A logger channel.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\language\Config\LanguageConfigFactoryOverrideInterface|NULL $language_config_factory_override
+   * @param LanguageConfigFactoryOverrideInterface|NULL $language_config_factory_override
    *   (Optional) The language config factory override service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, LoggerChannelInterface $logger, FileSystemInterface $file_system, $language_config_factory_override) {
@@ @@
   /**
    * Finds files in a given directory and uses them to rewrite active config.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension that contains the config rewrites.
    * @param string $rewrite_dir
    *   The directory that contains config rewrites.
@@ @@
         // Parse the rewrites and retrieve the original config.
         $rewrite = Yaml::parse(file_get_contents($rewrite_dir . DIRECTORY_SEPARATOR . $file->name . '.yml'));
         if ($langcode) {
-          /** @var \Drupal\language\Config\LanguageConfigOverride $original_config */
+          /** @var LanguageConfigOverride $original_config */
           $config = $this->languageConfigFactoryOverride->getOverride($langcode, $file->name);
           $original_data = $config->get();

@@ @@
    * @param string $extensionName
    *
    * @return array
-   * @throws \Drupal\config_rewrite\Exception\NonexistentInitialConfigException
+   * @throws NonexistentInitialConfigException
    */
   public function rewriteConfig($original_config, $rewrite, $config_name, $extensionName) {
     if (empty($original_config)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

