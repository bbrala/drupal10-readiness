diff --git a/src/Annotation/PurgePlugin.php b/src/Annotation/PurgePlugin.php
index b2fc950..17453fb 100755
--- a/src/Annotation/PurgePlugin.php
+++ b/src/Annotation/PurgePlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\custom_purge\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class PurgePlugin extends Plugin {
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Commands/CustomPurgeCommands.php b/src/Commands/CustomPurgeCommands.php
index 7a1e858..dafe599 100644
--- a/src/Commands/CustomPurgeCommands.php
+++ b/src/Commands/CustomPurgeCommands.php
@@ -13,14 +13,14 @@ class CustomPurgeCommands extends DrushCommands {
   /**
    * The Purger service.
    *
-   * @var \Drupal\custom_purge\Purger
+   * @var Purger
    */
   protected $purger;
 
   /**
    * Construct of CustomPurgeCommands.
    *
-   * @param \Drupal\custom_purge\Purger $purger
+   * @param Purger $purger
    *   The Purger service.
    */
   public function __construct(Purger $purger) {
diff --git a/src/Form/UrlPurgeForm.php b/src/Form/UrlPurgeForm.php
index 04d9e5e..a1c3b14 100644
--- a/src/Form/UrlPurgeForm.php
+++ b/src/Form/UrlPurgeForm.php
@@ -20,50 +20,50 @@ class UrlPurgeForm extends FormBase {
   /**
    * The flood control mechanism.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The purger.
    *
-   * @var \Drupal\custom_purge\Purger
+   * @var Purger
    */
   protected $purger;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $dbConnection;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Flood\FloodInterface $flood
+   * @param FloodInterface $flood
    *   The flood control mechanism.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date service.
-   * @param \Drupal\custom_purge\Purger $purger
+   * @param Purger $purger
    *   The Url purger.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Database\Connection $db_connection
+   * @param Connection $db_connection
    *   The database connection.
    */
   public function __construct(FloodInterface $flood, DateFormatterInterface $date_formatter, Purger $purger, ModuleHandlerInterface $module_handler, Connection $db_connection) {
diff --git a/src/Plugin/DomainSensitiveCacheInterface.php b/src/Plugin/DomainSensitiveCacheInterface.php
index 0c4c0de..e177365 100644
--- a/src/Plugin/DomainSensitiveCacheInterface.php
+++ b/src/Plugin/DomainSensitiveCacheInterface.php
@@ -20,7 +20,7 @@ interface DomainSensitiveCacheInterface {
   /**
    * Set the domain settings.
    *
-   * @param \Drupal\custom_purge\Plugin\DomainSettings $settings
+   * @param DomainSettings $settings
    *   The domain settings.
    */
   public function setDomainSettings(DomainSettings $settings);
@@ -28,7 +28,7 @@ interface DomainSensitiveCacheInterface {
   /**
    * Get the domain settings.
    *
-   * @return \Drupal\custom_purge\Plugin\DomainSettings
+   * @return DomainSettings
    *   The domain settings.
    */
   public function getDomainSettings();
diff --git a/src/Plugin/DomainSensitiveCacheTrait.php b/src/Plugin/DomainSensitiveCacheTrait.php
index c783315..14f413d 100644
--- a/src/Plugin/DomainSensitiveCacheTrait.php
+++ b/src/Plugin/DomainSensitiveCacheTrait.php
@@ -10,14 +10,14 @@ trait DomainSensitiveCacheTrait {
   /**
    * The domain settings.
    *
-   * @var \Drupal\custom_purge\Plugin\DomainSettings
+   * @var DomainSettings
    */
   protected $domainSettings;
 
   /**
    * Set the domain settings.
    *
-   * @param \Drupal\custom_purge\Plugin\DomainSettings $settings
+   * @param DomainSettings $settings
    *   The domain settings.
    */
   public function setDomainSettings(DomainSettings $settings) {
@@ -27,7 +27,7 @@ trait DomainSensitiveCacheTrait {
   /**
    * Get the domain settings.
    *
-   * @return \Drupal\custom_purge\Plugin\DomainSettings
+   * @return DomainSettings
    *   The domain settings.
    */
   public function getDomainSettings() {
diff --git a/src/Plugin/PurgePluginBase.php b/src/Plugin/PurgePluginBase.php
index 8314b0b..9fbc254 100644
--- a/src/Plugin/PurgePluginBase.php
+++ b/src/Plugin/PurgePluginBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\custom_purge\Plugin;
 
+use GuzzleHttp\Client;
+use Psr\Log\LoggerInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,7 +16,7 @@ abstract class PurgePluginBase extends PluginBase implements PurgePluginInterfac
   /**
    * The settings of this purge cache plugin.
    *
-   * @var \Drupal\custom_purge\Plugin\PurgePluginSettings
+   * @var PurgePluginSettings
    */
   protected $settings;
 
@@ -56,7 +58,7 @@ abstract class PurgePluginBase extends PluginBase implements PurgePluginInterfac
    * @param array $config
    *   (Optional) The client configuration.
    *
-   * @return \GuzzleHttp\Client
+   * @return Client
    *   The http client instance.
    *
    * @see \Drupal\Core\Http\ClientFactory::fromOptions
@@ -68,7 +70,7 @@ abstract class PurgePluginBase extends PluginBase implements PurgePluginInterfac
   /**
    * Get the logger channel.
    *
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    *   The logger channel.
    */
   protected static function logger() {
diff --git a/src/Plugin/PurgePluginInterface.php b/src/Plugin/PurgePluginInterface.php
index ef53248..22b7a1b 100644
--- a/src/Plugin/PurgePluginInterface.php
+++ b/src/Plugin/PurgePluginInterface.php
@@ -31,7 +31,7 @@ interface PurgePluginInterface extends PluginInspectionInterface {
   /**
    * Get the purge plugin settings.
    *
-   * @return \Drupal\custom_purge\Plugin\PurgePluginSettings
+   * @return PurgePluginSettings
    *   The purge plugin settings.
    */
   public function getPurgePluginSettings();
diff --git a/src/Plugin/PurgePluginManager.php b/src/Plugin/PurgePluginManager.php
index 407ab38..2cd6f02 100755
--- a/src/Plugin/PurgePluginManager.php
+++ b/src/Plugin/PurgePluginManager.php
@@ -15,14 +15,14 @@ class PurgePluginManager extends DefaultPluginManager {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * A cached list of instantiated purge plugins.
    *
-   * @var \Drupal\custom_purge\Plugin\PurgePluginInterface[]
+   * @var PurgePluginInterface[]
    */
   protected $purgePlugins;
 
@@ -32,9 +32,9 @@ class PurgePluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ -55,7 +55,7 @@ class PurgePluginManager extends DefaultPluginManager {
    *   at known Varnish instances. ['name' => ['my_varnish_instance']] Purges
    *   the urls only at a known instance having the specified name.
    *
-   * @return \Drupal\custom_purge\Plugin\PurgePluginInterface[]
+   * @return PurgePluginInterface[]
    *   A list of purge plugins for the domain.
    */
   public function getPurgePluginsForDomain($domain, array $caches = []) {
@@ -141,7 +141,7 @@ class PurgePluginManager extends DefaultPluginManager {
   /**
    * Set the config factory.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function setConfigFactory(ConfigFactoryInterface $config_factory) {
diff --git a/src/Plugin/QueueWorker/CustomPurgeWorkerBase.php b/src/Plugin/QueueWorker/CustomPurgeWorkerBase.php
index 2e614a3..8cbc54b 100644
--- a/src/Plugin/QueueWorker/CustomPurgeWorkerBase.php
+++ b/src/Plugin/QueueWorker/CustomPurgeWorkerBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\custom_purge\Plugin\QueueWorker;
 
+use Drupal\custom_purge\Purger;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Queue\QueueFactory;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Queue\QueueWorkerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,21 +17,21 @@ abstract class CustomPurgeWorkerBase extends QueueWorkerBase implements Containe
   /**
    * The purger service.
    *
-   * @var \Drupal\custom_purge\Purger
+   * @var Purger
    */
   protected $purger;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
diff --git a/src/Plugin/custom_purge/Purge/CloudflarePurgePlugin.php b/src/Plugin/custom_purge/Purge/CloudflarePurgePlugin.php
index 6654b59..bdb5913 100644
--- a/src/Plugin/custom_purge/Purge/CloudflarePurgePlugin.php
+++ b/src/Plugin/custom_purge/Purge/CloudflarePurgePlugin.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\custom_purge\Plugin\custom_purge\Purge;
 
+use GuzzleHttp\Client;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\custom_purge\Plugin\PurgePluginBase;
 use GuzzleHttp\Exception\GuzzleException;
 use GuzzleHttp\RequestOptions;
@@ -62,7 +65,7 @@ class CloudflarePurgePlugin extends PurgePluginBase {
   /**
    * The http client for purging the cloudflare cache.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $purgeClient;
 
@@ -71,10 +74,10 @@ class CloudflarePurgePlugin extends PurgePluginBase {
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
+    /** @var ModuleHandlerInterface $module_handler */
     $module_handler = $container->get('module_handler');
     if ($module_handler->moduleExists('cloudflare') && $instance->settings->get('use_cf_settings')) {
-      /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+      /** @var ConfigFactoryInterface $config_factory */
       $config_factory = $container->get('config.factory');
       $cloudflare_config = $config_factory->get('cloudflare.settings');
       $instance->zoneId = $cloudflare_config->get('zone_id');
diff --git a/src/Plugin/custom_purge/Purge/DrupalPageCachePurgePlugin.php b/src/Plugin/custom_purge/Purge/DrupalPageCachePurgePlugin.php
index f1be7d3..900f080 100644
--- a/src/Plugin/custom_purge/Purge/DrupalPageCachePurgePlugin.php
+++ b/src/Plugin/custom_purge/Purge/DrupalPageCachePurgePlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\custom_purge\Plugin\custom_purge\Purge;
 
+use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\custom_purge\Plugin\PurgePluginBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
@@ -18,7 +19,7 @@ class DrupalPageCachePurgePlugin extends PurgePluginBase {
   /**
    * The backend of the page cache, if it exists.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface|null
+   * @var CacheBackendInterface|null
    */
   protected $cacheBackend;
 
diff --git a/src/Plugin/custom_purge/Purge/VarnishPurgePlugin.php b/src/Plugin/custom_purge/Purge/VarnishPurgePlugin.php
index 1db4e77..fad2052 100644
--- a/src/Plugin/custom_purge/Purge/VarnishPurgePlugin.php
+++ b/src/Plugin/custom_purge/Purge/VarnishPurgePlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\custom_purge\Plugin\custom_purge\Purge;
 
+use GuzzleHttp\Client;
 use Drupal\custom_purge\Plugin\DomainSensitiveCacheInterface;
 use Drupal\custom_purge\Plugin\DomainSensitiveCacheTrait;
 use Drupal\custom_purge\Plugin\PurgePluginBase;
@@ -23,7 +24,7 @@ class VarnishPurgePlugin extends PurgePluginBase implements DomainSensitiveCache
   /**
    * The http client for purging single urls.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $singlePurgeClient;
 
@@ -37,14 +38,14 @@ class VarnishPurgePlugin extends PurgePluginBase implements DomainSensitiveCache
   /**
    * The http client for purging everything.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $purgeEverythingClient;
 
   /**
    * The request object used for purging everything.
    *
-   * @var \GuzzleHttp\Psr7\Request
+   * @var Request
    */
   protected $purgeEverythingRequest;
 
diff --git a/src/Purger.php b/src/Purger.php
index 5e7dd5c..90b3dd5 100644
--- a/src/Purger.php
+++ b/src/Purger.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\custom_purge;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\custom_purge\Plugin\PurgePluginInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -23,66 +27,66 @@ class Purger {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The (optional) messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The purge plugin manager.
    *
-   * @var \Drupal\custom_purge\Plugin\PurgePluginManager
+   * @var PurgePluginManager
    */
   protected $purgePluginManager;
 
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The Purger constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
-   * @param \Drupal\custom_purge\Plugin\PurgePluginManager $purge_plugin_manager
+   * @param PurgePluginManager $purge_plugin_manager
    *   The purge plugin manager.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, LoggerChannelFactoryInterface $logger_factory, PurgePluginManager $purge_plugin_manager, QueueFactory $queue_factory, TimeInterface $time) {
@@ -97,7 +101,7 @@ class Purger {
   /**
    * Set the messenger.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface|null $messenger
+   * @param MessengerInterface|null $messenger
    *   The messenger. Set to NULL to unset the messenger.
    */
   public function setMessenger(MessengerInterface $messenger = NULL) {
@@ -200,7 +204,7 @@ class Purger {
     }
 
     foreach ($urls_by_domain as $domain => $domain_urls) {
-      /** @var \Drupal\custom_purge\Plugin\PurgePluginInterface $purge_plugin */
+      /** @var PurgePluginInterface $purge_plugin */
       foreach ($this->purgePluginManager->getPurgePluginsForDomain($domain, $caches) as $purge_plugin) {
         $plugin_settings = $purge_plugin->getPurgePluginSettings();
         $cache_name = $plugin_settings->getCacheName();
@@ -358,7 +362,7 @@ class Purger {
       $queue_items = [];
     }
 
-    /** @var \Drupal\custom_purge\Plugin\PurgePluginInterface $purge_plugin */
+    /** @var PurgePluginInterface $purge_plugin */
     foreach ($purge_plugins as $purge_plugin) {
       $plugin_settings = $purge_plugin->getPurgePluginSettings();
       $cache_name = $plugin_settings->getCacheName();
@@ -413,7 +417,7 @@ class Purger {
    * @param string $name
    *   (Optional) The name of the config. Skip to get the custom_purge.settings.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The configuration object.
    */
   protected function getConfig($name = 'custom_purge.settings') {
@@ -425,7 +429,7 @@ class Purger {
    *
    * @param string $log_level
    *   A log level, as defined via constant from \Psr\Log\LogLevel.
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   The translated message to log.
    * @param bool $include_messenger
    *   (Optional) Set to FALSE if you definetly not want to print the message.
