diff --git a/likeit.info.yml b/likeit.info.yml
index d87f255..772bfe8 100644
--- a/likeit.info.yml
+++ b/likeit.info.yml
@@ -1,7 +1,7 @@
 name: Like It!
 type: module
 description: Provides functionality to like the entity.
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Content
 configure: likeit.settings_form
 dependencies:
diff --git a/likeit.module b/likeit.module
index 5e2ffd1..2bed81f 100644
--- a/likeit.module
+++ b/likeit.module
@@ -276,7 +276,7 @@ function likeit_build_link($target, $id, $action = 'like') {
       $title . '</span><span class="likeit-count"> ' . $count . '</span>',
     ];
 
-    $link['#title'] = render($markup);
+    $link['#title'] = \Drupal::service('renderer')->render($markup);
   }
 
   return [
@@ -314,9 +314,9 @@ function likeit_get_user_session_id() {
 /**
  * Do like.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   Target entity.
- * @param \Drupal\Core\Session\AccountInterface|null $account
+ * @param AccountInterface|null $account
  *   (optional) User account.
  *
  * @return string|null
@@ -364,9 +364,9 @@ function likeit_do_like(EntityInterface $entity, AccountInterface $account = NUL
 /**
  * Do unlike.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   Target entity.
- * @param \Drupal\Core\Session\AccountInterface|null $account
+ * @param AccountInterface|null $account
  *   (optional) User account.
  *
  * @return string|null
@@ -504,7 +504,7 @@ function likeit_get_link_action_type($target, $id) {
  *
  * @param object $entity
  *   Target entity.
- * @param \Drupal\Core\Session\AccountInterface|null $user
+ * @param AccountInterface|null $user
  *   (optional) User account.
  *
  * @return bool
@@ -573,7 +573,7 @@ function likeit_user_delete(UserInterface $account) {
 /**
  * Remove all Likeit entities from user account.
  *
- * @param \Drupal\user\UserInterface $account
+ * @param UserInterface $account
  *   User account.
  */
 function likeit_remove_from_user(UserInterface $account) {
diff --git a/src/Access/LikeItCsrfTokenGenerator.php b/src/Access/LikeItCsrfTokenGenerator.php
index 69bbbdd..58d5012 100644
--- a/src/Access/LikeItCsrfTokenGenerator.php
+++ b/src/Access/LikeItCsrfTokenGenerator.php
@@ -18,14 +18,14 @@ class LikeItCsrfTokenGenerator {
   /**
    * The private key service.
    *
-   * @var \Drupal\Core\PrivateKey
+   * @var PrivateKey
    */
   protected $privateKey;
 
   /**
    * Read only site settings.
    *
-   * @var \Drupal\Core\Site\Settings
+   * @var Settings
    */
   protected $settings;
 
@@ -39,11 +39,11 @@ class LikeItCsrfTokenGenerator {
   /**
    * Constructs the token generator.
    *
-   * @param \Drupal\Core\PrivateKey $private_key
+   * @param PrivateKey $private_key
    *   The private key service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   Read only site settings.
    */
   public function __construct(PrivateKey $private_key, ConfigFactoryInterface $config_factory, Settings $settings) {
diff --git a/src/Controller/LikeItController.php b/src/Controller/LikeItController.php
index 8e15c87..a6ca700 100644
--- a/src/Controller/LikeItController.php
+++ b/src/Controller/LikeItController.php
@@ -21,32 +21,32 @@ class LikeItController extends ControllerBase {
   /**
    * Custom token generator service.
    *
-   * @var \Drupal\likeit\Access\LikeItCsrfTokenGenerator
+   * @var LikeItCsrfTokenGenerator
    */
   protected $csrfGenerator;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * LikeItController constructor.
    *
-   * @param \Drupal\likeit\Access\LikeItCsrfTokenGenerator $token_generator
+   * @param LikeItCsrfTokenGenerator $token_generator
    *   The the custom token generator.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(LikeItCsrfTokenGenerator $token_generator, RequestStack $request_stack, EventDispatcherInterface $event_dispatcher) {
@@ -97,7 +97,7 @@ class LikeItController extends ControllerBase {
           $event = new LikeItEvent($object);
 
           // Use the event dispatcher service to notify any event subscribers.
-          $this->eventDispatcher->dispatch(LikeItEvents::LIKE, $event);
+          $this->eventDispatcher->dispatch($event, LikeItEvents::LIKE);
         }
       }
       catch (\LogicException $e) {
@@ -139,7 +139,7 @@ class LikeItController extends ControllerBase {
           $event = new LikeItEvent($object);
 
           // Use the event dispatcher service to notify any event subscribers.
-          $this->eventDispatcher->dispatch(LikeItEvents::UNLIKE, $event);
+          $this->eventDispatcher->dispatch($event, LikeItEvents::UNLIKE);
         }
       }
       catch (\LogicException $e) {
@@ -162,7 +162,7 @@ class LikeItController extends ControllerBase {
    * @param string $html_id
    *   Element DOM id.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response to the user.
    */
   public function response($target, $id, $session_id, $html_id) {
@@ -192,7 +192,7 @@ class LikeItController extends ControllerBase {
     }
 
     // Update like/unlike link.
-    $replace = new ReplaceCommand($link_id, render($content));
+    $replace = new ReplaceCommand($link_id, \Drupal::service('renderer')->render($content));
     $response->addCommand($replace);
 
     return $response;
@@ -203,7 +203,7 @@ class LikeItController extends ControllerBase {
    *
    * @param string $action
    *   Action name.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   User account or null.
    *
    * @return bool
diff --git a/src/Entity/LikeItInterface.php b/src/Entity/LikeItInterface.php
index a51de27..ff16b72 100644
--- a/src/Entity/LikeItInterface.php
+++ b/src/Entity/LikeItInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\likeit\Entity;
 
+use Drupal\Core\Entity\EntityBase;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
 use Drupal\user\EntityOwnerInterface;
@@ -71,7 +72,7 @@ interface LikeItInterface extends ContentEntityInterface, EntityChangedInterface
   /**
    * Gets the Likeit target entity.
    *
-   * @return \Drupal\Core\Entity\EntityBase
+   * @return EntityBase
    *   Target entity.
    */
   public function getTargetEntity();
diff --git a/src/Event/LikeItEvent.php b/src/Event/LikeItEvent.php
index 63fc3ad..4d86aea 100644
--- a/src/Event/LikeItEvent.php
+++ b/src/Event/LikeItEvent.php
@@ -13,14 +13,14 @@ class LikeItEvent extends Event {
   /**
    * The target entity.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;
 
   /**
    * Constructs an like/unlike event object.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The target entity.
    */
   public function __construct(EntityInterface $entity) {
@@ -30,7 +30,7 @@ class LikeItEvent extends Event {
   /**
    * Get the target entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The liked/unliked target entity.
    */
   public function getEntity() {
diff --git a/src/Form/LikeItSettingsForm.php b/src/Form/LikeItSettingsForm.php
index 6359c2b..1399ee7 100644
--- a/src/Form/LikeItSettingsForm.php
+++ b/src/Form/LikeItSettingsForm.php
@@ -21,14 +21,14 @@ class LikeItSettingsForm extends ConfigFormBase {
   /**
    * The bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfoService;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -51,11 +51,11 @@ class LikeItSettingsForm extends ConfigFormBase {
   /**
    * Constructs a LikeItSettings object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundle_info_service
+   * @param EntityTypeBundleInfoInterface $bundle_info_service
    *   The bundle info service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory,
diff --git a/src/Plugin/views/field/LikeItTargetEntityTitleViewsField.php b/src/Plugin/views/field/LikeItTargetEntityTitleViewsField.php
index e297503..2f4acfb 100644
--- a/src/Plugin/views/field/LikeItTargetEntityTitleViewsField.php
+++ b/src/Plugin/views/field/LikeItTargetEntityTitleViewsField.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\likeit\Plugin\views\field;
 
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
@@ -19,7 +20,7 @@ class LikeItTargetEntityTitleViewsField extends FieldPluginBase {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -32,7 +33,7 @@ class LikeItTargetEntityTitleViewsField extends FieldPluginBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
@@ -91,7 +92,7 @@ class LikeItTargetEntityTitleViewsField extends FieldPluginBase {
       ->getStorage($entity_target_type)->load($entity_target_id);
     $link = $target_entity->toLink();
 
-    return render($link->toRenderable());
+    return \Drupal::service('renderer')->render($link->toRenderable());
   }
 
 }
diff --git a/src/Plugin/views/field/LikeItTargetEntityViewViewsField.php b/src/Plugin/views/field/LikeItTargetEntityViewViewsField.php
index 0e325c0..3af65c8 100644
--- a/src/Plugin/views/field/LikeItTargetEntityViewViewsField.php
+++ b/src/Plugin/views/field/LikeItTargetEntityViewViewsField.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\likeit\Plugin\views\field;
 
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
@@ -20,7 +21,7 @@ class LikeItTargetEntityViewViewsField extends FieldPluginBase {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -33,7 +34,7 @@ class LikeItTargetEntityViewViewsField extends FieldPluginBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
@@ -130,7 +131,7 @@ class LikeItTargetEntityViewViewsField extends FieldPluginBase {
       $view_mode = $this->options['view_mode'];
       $output = $view_builder->view($target_entity, $view_mode);
 
-      return render($output);
+      return \Drupal::service('renderer')->render($output);
     }
 
     return FALSE;
diff --git a/src/Plugin/views/relationship/LikeItViewsRelationship.php b/src/Plugin/views/relationship/LikeItViewsRelationship.php
index e64f3e0..c085688 100644
--- a/src/Plugin/views/relationship/LikeItViewsRelationship.php
+++ b/src/Plugin/views/relationship/LikeItViewsRelationship.php
@@ -17,7 +17,7 @@ class LikeItViewsRelationship extends RelationshipPluginBase {
   /**
    * The kill switch service.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;
 
@@ -30,7 +30,7 @@ class LikeItViewsRelationship extends RelationshipPluginBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\PageCache\ResponsePolicy\KillSwitch $kill_switch
+   * @param KillSwitch $kill_switch
    *   The kill switch service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, KillSwitch $kill_switch) {
