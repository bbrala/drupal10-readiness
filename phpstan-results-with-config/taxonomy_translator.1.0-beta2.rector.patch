diff --git a/src/BatchTermTranslator.php b/src/BatchTermTranslator.php
index 1365043..81d0b55 100644
--- a/src/BatchTermTranslator.php
+++ b/src/BatchTermTranslator.php
@@ -6,6 +6,10 @@
  */
 namespace Drupal\taxonomy_translator;
 
+use Drupal\Taxonomy\TermStorage;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\taxonomy\Entity\Term;
 use Google\Cloud\Translate\V2\TranslateClient;
@@ -30,7 +34,7 @@ class BatchTermTranslator {
   /** @var integer $count_limit - how many terms to translate by one step */
   private $step_size;
 
-  /** @var \Drupal\Taxonomy\TermStorage $termStorage */
+  /** @var TermStorage $termStorage */
   private $termStorage;
 
   /** @var string $exploder - string to separate tid and taxonomy name in translation text */
@@ -48,8 +52,8 @@ class BatchTermTranslator {
    * @param int $step_size - item count for one step
    * @param int $count_limit - maximum step number for total batch
    * @param int $term_id - id of the term for translation
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct($vocabulary, $language, $skip_count, $step_size, $count_limit=0, $term_id=0) {
     $this->vocabulary = trim($vocabulary);
@@ -146,9 +150,9 @@ class BatchTermTranslator {
    * @param array $termData - list of terms for translation
    * @param array $context - context variables
    * @return bool
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function translation($termData, &$context) {
     set_time_limit(600);
diff --git a/taxonomy_translator.module b/taxonomy_translator.module
index 19d5139..115a7a4 100644
--- a/taxonomy_translator.module
+++ b/taxonomy_translator.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Url;
 use Drupal\Core\Routing\RouteMatchInterface;
 
 /**
@@ -13,7 +14,7 @@ function taxonomy_translator_help($route_name, RouteMatchInterface $route_match)
       $output .= '<h3>' . t('About') . '</h3>';
       $output .= '<p>' . t('Module for adding a new language to taxonomy terms (bulk term translation)') . '</p>';
       $output .= '<p>' . t('To start using the module open the module configuration page and set the translation options') . '</p>';
-      $output .= '<p>' . t('Then open <a href="@url">main module page</a> and run the translation process', ['@url' => \Drupal\Core\Url::fromRoute('taxonomy_translator.action')->toString()]) . '</p>';
+      $output .= '<p>' . t('Then open <a href="@url">main module page</a> and run the translation process', ['@url' => Url::fromRoute('taxonomy_translator.action')->toString()]) . '</p>';
       return $output;
 
     default:
