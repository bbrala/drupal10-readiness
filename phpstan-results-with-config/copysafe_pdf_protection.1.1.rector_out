modules/contrib/copysafe_pdf_protection/src/Controller/CopySafePdfController.php
modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfClass.php
modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfConfig.php
modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfFileDelete.php
modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfSettings.php
modules/contrib/copysafe_pdf_protection/src/Plugin/Filter/FilterCopySafePdf.php

6 files with changes
====================

1) modules/contrib/copysafe_pdf_protection/src/Plugin/Filter/FilterCopySafePdf.php:126

    ---------- begin diff ----------
@@ @@
           }
         }

-        $settings['copysafe_pdf_protection']['embed_options'][$csp_id]['plugin_url'] = $base_url . '/' . drupal_get_path('module', 'copysafe_pdf_protection') . '/';
-        $settings['copysafe_pdf_protection']['embed_options'][$csp_id]['plugin_path'] = $base_url . '/' . drupal_get_path('module', 'copysafe_pdf_protection') . '/';
+        $settings['copysafe_pdf_protection']['embed_options'][$csp_id]['plugin_url'] = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('copysafe_pdf_protection') . '/';
+        $settings['copysafe_pdf_protection']['embed_options'][$csp_id]['plugin_path'] = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('copysafe_pdf_protection') . '/';
         $settings['copysafe_pdf_protection']['embed_options'][$csp_id]['upload_path'] = $base_url . '/' . $upload_folder;
         $settings['copysafe_pdf_protection']['embed_options'][$csp_id]['upload_url'] = $base_url . '/' . $upload_folder;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfSettings.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a Copysafe Video settings object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfFileDelete.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\copysafe_pdf_protection\Form;

+use Drupal\file\Entity\File;
 use Drupal\Core\Entity\EntityManagerInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
       return RedirectResponse::create('/admin/config/copysafe/copysafe_pdf_protection', RedirectResponse::HTTP_MOVED_PERMANENTLY);
     }
     else {
-      /** @var \Drupal\file\Entity\File $file */
+      /** @var File $file */
       $file = $this->entityManager->getStorage('file')->load($this->fid);
       if (empty($file)) {
         return RedirectResponse::create('/admin/config/copysafe/copysafe_pdf_protection', RedirectResponse::HTTP_MOVED_PERMANENTLY);
@@ @@
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $storage = $this->entityManager->getStorage('file');
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = $storage->load($this->fid);
     // Delete File.
     $storage->delete([$file]);
@@ @@
       return '';
     }
     else {
-      /** @var \Drupal\file\Entity\File $file */
+      /** @var File $file */
       $file = $this->entityManager->getStorage('file')->load($this->fid);
       if (!empty($file)) {
         return $this->t('Are you sure that you want to delete %id?', ['%id' => $file->getFilename()]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfConfig.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\copysafe_pdf_protection\Form;

+use Drupal\file\Entity\File;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Constructs a CopySafePDFConfig object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   Entity Manager.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityManagerInterface $entity_manager, Connection $database) {
@@ @@
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $values = $form_state->getValues();

-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $strip_file = $this->entityManager->getStorage('file')
       ->load($values['image']['0']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/copysafe_pdf_protection/src/Form/CopySafePdfClass.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\copysafe_pdf_protection\Form;

+use Drupal\file\Entity\File;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\OpenModalDialogCommand;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityManagerInterface $entity_manager, ConfigFactoryInterface $config_factory) {
@@ @@
       return RedirectResponse::create('/admin/config/copysafe/copysafe_pdf_protection', RedirectResponse::HTTP_MOVED_PERMANENTLY);
     }

-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = $this->entityManager->getStorage('file')->load($fid['fid']);

     if (empty($file)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/copysafe_pdf_protection/src/Controller/CopySafePdfController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\copysafe_pdf_protection\Controller;

+use Drupal\file\Entity\File;
 use Drupal\Core\Entity\EntityManagerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * The CopySafePdfController constructor.
    *
-   * @param \Drupal\Core\Form\FormBuilder $formBuilder
+   * @param FormBuilder $formBuilder
    *   The form builder.
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   Entity Manager.
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The Drupal service container.
    *
    * @return static
@@ @@
     if (is_null($fid) || !is_numeric($fid)) {
       return ['#makup' => ''];
     }
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = $this->entityManager->getStorage('file')->load($fid);

     // Get the modal form using the form builder.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

