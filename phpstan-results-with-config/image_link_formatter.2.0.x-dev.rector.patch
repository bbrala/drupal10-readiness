diff --git a/image_link_formatter.info.yml b/image_link_formatter.info.yml
index b66dc29..3653256 100644
--- a/image_link_formatter.info.yml
+++ b/image_link_formatter.info.yml
@@ -3,7 +3,7 @@ description: Extends Core 'image' formatter to allow displaying images wrapped w
 package: Fields
 
 type: module
-core_version_requirement: ^8.8.0 || ^9.0
+core_version_requirement: ^8.8.0 || ^9.0 || ^10
 
 dependencies:
   - drupal:image
diff --git a/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php b/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php
index 4a52b34..861f87c 100644
--- a/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageLinkFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\image_link_formatter\Plugin\Field\FieldFormatter;
 
+use Drupal\link\Plugin\Field\FieldType\LinkItem;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -33,7 +34,7 @@ class ImageLinkFormatter extends ImageFormatter implements ContainerFactoryPlugi
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   private $entityFieldManager;
 
@@ -104,7 +105,7 @@ class ImageLinkFormatter extends ImageFormatter implements ContainerFactoryPlugi
       // If a link field is selected in formatter's settings, iterate through
       // each rendered image and set its '#url' value to matching link URL.
       foreach ($elements as $delta => $element) {
-        /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $link_item_value */
+        /** @var LinkItem $link_item_value */
         $link_item_value = $link_items->get($delta);
         if (!empty($link_item_value)) {
           $elements[$delta]['#url'] = $link_item_value->getUrl();
diff --git a/tests/src/Functional/ImageLinkFormatterTest.php b/tests/src/Functional/ImageLinkFormatterTest.php
index 7e32021..0e3fc3b 100644
--- a/tests/src/Functional/ImageLinkFormatterTest.php
+++ b/tests/src/Functional/ImageLinkFormatterTest.php
@@ -69,11 +69,11 @@ class ImageLinkFormatterTest extends ImageFieldTestBase {
     $output = $this->renderField($node, $image_field_name, $image_field_settings);
     // For core versions below 9.1.
     if (floatval(\Drupal::VERSION) < 9.1) {
-      $this->assertEqual($output, '<img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" />');
+      $this->assertEquals($output, '<img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" />');
     }
     elseif (floatval(\Drupal::VERSION) < 9.4) {
       // Moving forward, attribute 'loading' is added by default, see #3173719.
-      $this->assertEqual($output, '<img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" loading="lazy" />');
+      $this->assertEquals($output, '<img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" loading="lazy" />');
     }
     else {
       // As of 9.4.0, lazy loading is part of core image formatter's
@@ -93,11 +93,11 @@ class ImageLinkFormatterTest extends ImageFieldTestBase {
     $output = $this->renderField($node, $image_field_name, $image_field_settings);
     // For core versions below 9.1.
     if (floatval(\Drupal::VERSION) < 9.1) {
-      $this->assertEqual($output, '<a href="http://example.com"><img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" /></a>');
+      $this->assertEquals($output, '<a href="http://example.com"><img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" /></a>');
     }
     elseif (floatval(\Drupal::VERSION) < 9.4) {
       // Moving forward, attribute 'loading' is added by default, see #3173719.
-      $this->assertEqual($output, '<a href="http://example.com"><img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" loading="lazy" /></a>');
+      $this->assertEquals($output, '<a href="http://example.com"><img src="' . $file->createFileUrl() . '" width="40" height="20" alt="" loading="lazy" /></a>');
     }
     else {
       // As of 9.4.0, lazy loading is part of core image formatter's
diff --git a/tests/src/Kernel/ImageLinkFormatterTest.php b/tests/src/Kernel/ImageLinkFormatterTest.php
index 4f4fd71..c526d91 100644
--- a/tests/src/Kernel/ImageLinkFormatterTest.php
+++ b/tests/src/Kernel/ImageLinkFormatterTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\image_link_formatter\Kernel;
 
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Url;
 use Drupal\entity_test\Entity\EntityTest;
@@ -100,7 +101,7 @@ class ImageLinkFormatterTest extends ImageFormatterTest {
       $this->assertInstanceOf(Url::class, $build[$this->fieldName][$delta]['#url']);
       $build[$this->fieldName][$delta]['#url']->setOption('attributes', ['data-attributes-test' => 'test123']);
 
-      /** @var \Drupal\Core\Render\RendererInterface $renderer */
+      /** @var RendererInterface $renderer */
       $renderer = $this->container->get('renderer');
 
       $output = $renderer->renderRoot($build[$this->fieldName][$delta]);
