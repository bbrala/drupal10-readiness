diff --git a/entity_sort.module b/entity_sort.module
index 3627f2e..7fe15c9 100644
--- a/entity_sort.module
+++ b/entity_sort.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * @file
  * This is the Entity Sort module.
@@ -27,7 +28,7 @@ function _entity_sort_update_batch_process(array $entities, array $updates, $wei
   // Process entities by groups of 5.
   $count = min(5, count($context['sandbox']['entities']));
   for ($i = 1; $i <= $count; $i++) {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = array_shift($context['sandbox']['entities']);
     $entity_id = $entity->id();
     $weight = $updates[$entity_id]['weight'];
diff --git a/src/Form/EntitySortForm.php b/src/Form/EntitySortForm.php
index 550c67f..914df7f 100644
--- a/src/Form/EntitySortForm.php
+++ b/src/Form/EntitySortForm.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\entity_sort\Form;
 
+use Drupal\Core\Entity\EntityType;
+use Drupal\Core\Entity\ContentEntityBase;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Batch\BatchBuilder;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
@@ -29,7 +34,7 @@ class EntitySortForm extends FormBase implements FormInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -43,7 +48,7 @@ class EntitySortForm extends FormBase implements FormInterface {
   /**
    * The entity type.
    *
-   * @var \Drupal\Core\Entity\EntityType
+   * @var EntityType
    */
   protected $entityType;
 
@@ -64,16 +69,16 @@ class EntitySortForm extends FormBase implements FormInterface {
   /**
    * The entities.
    *
-   * @var \Drupal\Core\Entity\EntityInterface[]
+   * @var EntityInterface[]
    */
   protected $entities;
 
   /**
    * Constructs a form object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(ConfigFactory $config_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ -194,7 +199,7 @@ class EntitySortForm extends FormBase implements FormInterface {
    */
   public function buildRow(EntityInterface $entity) {
     $row = [];
-    /** @var \Drupal\Core\Entity\ContentEntityBase */
+    /** @var ContentEntityBase */
     if (!$entity->hasField($this->weightKey())) {
       return $row;
     }
@@ -221,11 +226,11 @@ class EntitySortForm extends FormBase implements FormInterface {
   /**
    * Loads entities.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   An array of entities.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadEntities() {
     if (!$this->entities) {
@@ -242,10 +247,10 @@ class EntitySortForm extends FormBase implements FormInterface {
   /**
    * Provides the entity type definition.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface|null
+   * @return EntityTypeInterface|null
    *   The entity type.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   protected function entityType() {
     if (!$this->entityType) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 06df5f1..1a4dbf5 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -22,43 +22,43 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfo;
 
   /**
    * The field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Constructs an object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundle_info
+   * @param EntityTypeBundleInfoInterface $bundle_info
    *   The bundle info service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $bundle_info, FieldTypePluginManagerInterface $field_type_manager, EntityFieldManagerInterface $entity_field_manager) {
diff --git a/src/Plugin/Derivative/LocalTasks.php b/src/Plugin/Derivative/LocalTasks.php
index b1bc99a..fc23d58 100644
--- a/src/Plugin/Derivative/LocalTasks.php
+++ b/src/Plugin/Derivative/LocalTasks.php
@@ -17,32 +17,32 @@ class LocalTasks extends DeriverBase implements ContainerDeriverInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfo;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a new EntityBundle.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundle_info
+   * @param EntityTypeBundleInfoInterface $bundle_info
    *   The bundle info service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $bundle_info, ConfigFactoryInterface $config_factory) {
