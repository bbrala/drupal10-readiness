diff --git a/src/Access/UserpointsTabAccess.php b/src/Access/UserpointsTabAccess.php
index a8fb88c..9b79e7e 100644
--- a/src/Access/UserpointsTabAccess.php
+++ b/src/Access/UserpointsTabAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\userpoints\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -16,12 +17,12 @@ class UserpointsTabAccess implements AccessInterface {
   /**
    * Checks access to the given entity's userpoints page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The account being viewed / edited.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function checkAccess(AccountInterface $account, EntityInterface $entity) {
diff --git a/src/Controller/UserPointsController.php b/src/Controller/UserPointsController.php
index 89d5ae3..86731fb 100644
--- a/src/Controller/UserPointsController.php
+++ b/src/Controller/UserPointsController.php
@@ -22,23 +22,23 @@ class UserPointsController extends ControllerBase implements ContainerInjectionI
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * Constructs a new UserPointsController.
    *
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer.
    */
   public function __construct(DateFormatter $date_formatter, Renderer $renderer) {
@@ -94,7 +94,7 @@ class UserPointsController extends ControllerBase implements ContainerInjectionI
   /**
    * Generates an overview table of older revisions of a User points.
    *
-   * @param \Drupal\userpoints\Entity\UserPointsInterface $userpoints
+   * @param UserPointsInterface $userpoints
    *   A User points object.
    *
    * @return array
@@ -134,7 +134,9 @@ class UserPointsController extends ControllerBase implements ContainerInjectionI
         ]));
       }
       else {
-        $link = $userpoints->link($date);
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // Please confirm that `$userpoints` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+        $link = $userpoints->toLink($date)->toString();
       }
 
       $row = [];
diff --git a/src/Entity/UserPointsInterface.php b/src/Entity/UserPointsInterface.php
index f00a85d..28d4679 100644
--- a/src/Entity/UserPointsInterface.php
+++ b/src/Entity/UserPointsInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\userpoints\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -47,7 +48,7 @@ interface UserPointsInterface extends ContentEntityInterface, RevisionLogInterfa
   /**
    * Gets the User points revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/src/Form/UserPointsForm.php b/src/Form/UserPointsForm.php
index cdb0738..15562ef 100644
--- a/src/Form/UserPointsForm.php
+++ b/src/Form/UserPointsForm.php
@@ -20,20 +20,20 @@ class UserPointsForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * Constructs a new UserPointsForm.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user account.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL, AccountProxyInterface $account) {
diff --git a/src/Form/UserPointsRevisionDeleteForm.php b/src/Form/UserPointsRevisionDeleteForm.php
index b2a37e2..7fec036 100644
--- a/src/Form/UserPointsRevisionDeleteForm.php
+++ b/src/Form/UserPointsRevisionDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\userpoints\Form;
 
+use Drupal\userpoints\Entity\UserPointsInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\ConfirmFormBase;
@@ -20,30 +21,30 @@ class UserPointsRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The User points revision.
    *
-   * @var \Drupal\userpoints\Entity\UserPointsInterface
+   * @var UserPointsInterface
    */
   protected $revision;
 
   /**
    * The User points storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $UserPointsStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructs a new UserPointsRevisionDeleteForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(EntityStorageInterface $entity_storage, Connection $connection) {
@@ -74,7 +75,7 @@ class UserPointsRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -109,7 +110,7 @@ class UserPointsRevisionDeleteForm extends ConfirmFormBase {
     $this->UserPointsStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('User points: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of User points %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of User points %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.userpoints.canonical',
        ['userpoints' => $this->revision->id()]
diff --git a/src/Form/UserPointsRevisionRevertForm.php b/src/Form/UserPointsRevisionRevertForm.php
index d6be60b..bb52417 100644
--- a/src/Form/UserPointsRevisionRevertForm.php
+++ b/src/Form/UserPointsRevisionRevertForm.php
@@ -21,30 +21,30 @@ class UserPointsRevisionRevertForm extends ConfirmFormBase {
   /**
    * The User points revision.
    *
-   * @var \Drupal\userpoints\Entity\UserPointsInterface
+   * @var UserPointsInterface
    */
   protected $revision;
 
   /**
    * The User points storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $UserPointsStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new UserPointsRevisionRevertForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The User points storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter) {
@@ -134,18 +134,18 @@ class UserPointsRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\userpoints\Entity\UserPointsInterface $revision
+   * @param UserPointsInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\userpoints\Entity\UserPointsInterface
+   * @return UserPointsInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(UserPointsInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/UserPointsSettingsForm.php b/src/Form/UserPointsSettingsForm.php
index c064708..d7b4d55 100644
--- a/src/Form/UserPointsSettingsForm.php
+++ b/src/Form/UserPointsSettingsForm.php
@@ -34,25 +34,25 @@ class UserPointsSettingsForm extends ConfigFormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The route builder service.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
   /**
    * Creates a new UserPointsSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entityTypeBundleInfo
+   * @param EntityTypeBundleInfoInterface $entityTypeBundleInfo
    *   The entity type bundle info service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(
@@ -101,7 +101,7 @@ class UserPointsSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -148,7 +148,7 @@ class UserPointsSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/UserpointsEntityTabForm.php b/src/Form/UserpointsEntityTabForm.php
index 0c3f62d..ec849a4 100644
--- a/src/Form/UserpointsEntityTabForm.php
+++ b/src/Form/UserpointsEntityTabForm.php
@@ -19,7 +19,7 @@ abstract class UserpointsEntityTabForm extends FormBase {
   /**
    * The userpoints service.
    *
-   * @var \Drupal\userpoints\Service\UserPointsServiceInterface
+   * @var UserPointsServiceInterface
    */
   protected $userpointsService;
 
@@ -33,27 +33,27 @@ abstract class UserpointsEntityTabForm extends FormBase {
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new UserpointsUserEditTabForm object.
    *
-   * @param \Drupal\userpoints\Service\UserPointsServiceInterface $userpointsService
+   * @param UserPointsServiceInterface $userpointsService
    *   The userpoints service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundleInfo
+   * @param EntityTypeBundleInfoInterface $bundleInfo
    *   The bundle info service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user instance.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   The date formatter.
    */
   public function __construct(
@@ -90,7 +90,7 @@ abstract class UserpointsEntityTabForm extends FormBase {
   /**
    * Helper function to get view and edit access for different point types.
    *
-   * @param Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The account for which points are edited.
    */
   protected function getTypesAccess(EntityInterface $entity) {
@@ -141,9 +141,9 @@ abstract class UserpointsEntityTabForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The account for which points are edited.
    *
    * @return array
diff --git a/src/Form/UserpointsNodeTabForm.php b/src/Form/UserpointsNodeTabForm.php
index 05ff0f6..65f33e1 100644
--- a/src/Form/UserpointsNodeTabForm.php
+++ b/src/Form/UserpointsNodeTabForm.php
@@ -22,9 +22,9 @@ class UserpointsNodeTabForm extends UserpointsEntityTabForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The account for which points are edited.
    *
    * @return array
diff --git a/src/Form/UserpointsUserTabForm.php b/src/Form/UserpointsUserTabForm.php
index 43e159e..99264d8 100644
--- a/src/Form/UserpointsUserTabForm.php
+++ b/src/Form/UserpointsUserTabForm.php
@@ -22,9 +22,9 @@ class UserpointsUserTabForm extends UserpointsEntityTabForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The account for which points are edited.
    *
    * @return array
diff --git a/src/Plugin/Derivative/DynamicLocalTasks.php b/src/Plugin/Derivative/DynamicLocalTasks.php
index 92bda9b..2a3329e 100644
--- a/src/Plugin/Derivative/DynamicLocalTasks.php
+++ b/src/Plugin/Derivative/DynamicLocalTasks.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\userpoints\Plugin\Derivative;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Plugin\Discovery\ContainerDeriverInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -19,23 +20,23 @@ class DynamicLocalTasks extends DeriverBase implements ContainerDeriverInterface
   /**
    * The module config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new DynamicLocalTasks object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory object.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    *   The stream wrapper manager service.
    */
diff --git a/src/Plugin/rest/resource/UserpointsRestResource.php b/src/Plugin/rest/resource/UserpointsRestResource.php
index 91ffae3..cbda2e0 100644
--- a/src/Plugin/rest/resource/UserpointsRestResource.php
+++ b/src/Plugin/rest/resource/UserpointsRestResource.php
@@ -38,21 +38,21 @@ class UserpointsRestResource extends ResourceBase {
   /**
    * The current user instance.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Entity Type Manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The userpoints service.
    *
-   * @var \Drupal\userpoints\Service\UserPointsServiceInterface
+   * @var UserPointsServiceInterface
    */
   protected $userpointsService;
 
@@ -67,13 +67,13 @@ class UserpointsRestResource extends ResourceBase {
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   A current user instance.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\userpoints\Service\UserPointsServiceInterface $userpointsService
+   * @param UserPointsServiceInterface $userpointsService
    *   The userpoints service.
    */
   public function __construct(
@@ -126,7 +126,7 @@ class UserpointsRestResource extends ResourceBase {
    * @param array $data
    *   The request data.
    *
-   * @return \Drupal\rest\ModifiedResourceResponse
+   * @return ModifiedResourceResponse
    *   The HTTP response object.
    */
   public function post(array $data) {
diff --git a/src/Routing/UserpointsRoutes.php b/src/Routing/UserpointsRoutes.php
index fb91455..a14a55b 100644
--- a/src/Routing/UserpointsRoutes.php
+++ b/src/Routing/UserpointsRoutes.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\userpoints\Routing;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -16,23 +17,23 @@ class UserpointsRoutes implements ContainerInjectionInterface {
   /**
    * The module config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new UserpointsRoutes object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory object.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    *   The stream wrapper manager service.
    */
@@ -57,7 +58,7 @@ class UserpointsRoutes implements ContainerInjectionInterface {
   /**
    * Returns an array of route objects.
    *
-   * @return \Symfony\Component\Routing\Route[]
+   * @return Route[]
    *   An array of route objects.
    */
   public function routes() {
diff --git a/src/Service/UserPointsService.php b/src/Service/UserPointsService.php
index 650f8e5..a81660d 100644
--- a/src/Service/UserPointsService.php
+++ b/src/Service/UserPointsService.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\userpoints\Service;
 
+use Drupal\Core\Entity\Sql\SqlEntityStorageInterface;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
@@ -10,7 +12,6 @@ use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\userpoints\Entity\UserPointsInterface;
 use Drupal\userpoints\Exception\UserPointsException;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the User Points service.
@@ -22,7 +23,7 @@ class UserPointsService implements UserPointsServiceInterface {
   /**
    * Userpoints storage.
    *
-   * @var \Drupal\Core\Entity\Sql\SqlEntityStorageInterface
+   * @var SqlEntityStorageInterface
    */
   protected $userPointsStorage;
 
@@ -36,27 +37,27 @@ class UserPointsService implements UserPointsServiceInterface {
   /**
    * The Event Dispatcher service.
    *
-   * @var Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundleInfo
+   * @param EntityTypeBundleInfoInterface $bundleInfo
    *   The bundle info service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The Event Dispatcher service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user instance.
    */
   public function __construct(
diff --git a/src/Service/UserPointsServiceInterface.php b/src/Service/UserPointsServiceInterface.php
index af562eb..8e2183f 100644
--- a/src/Service/UserPointsServiceInterface.php
+++ b/src/Service/UserPointsServiceInterface.php
@@ -13,12 +13,12 @@ interface UserPointsServiceInterface {
   /**
    * Get points entity for a referencing (owner) entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check.
    * @param string $points_type
    *   Type of points.
    *
-   * @return \Drupal\userpoints\Entity\UserPoints|null
+   * @return UserPoints|null
    *   User points entity.
    */
   public function getPointsEntity(EntityInterface $entity, $points_type);
@@ -26,7 +26,7 @@ interface UserPointsServiceInterface {
   /**
    * Get points for an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check.
    * @param string $points_type
    *   Type of points to get.
@@ -39,7 +39,7 @@ interface UserPointsServiceInterface {
   /**
    * Gets points revisions data for an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check.
    * @param string $points_type
    *   Type of points to get log for.
@@ -56,7 +56,7 @@ interface UserPointsServiceInterface {
    *   The number of points (can be negative to subtract).
    * @param string $points_type
    *   Type of points to add.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check.
    * @param string $log
    *   Revision log messsage for the operation.
@@ -70,9 +70,9 @@ interface UserPointsServiceInterface {
    *   The number of points to transfer (must be positive).
    * @param string $points_type
    *   Type of points to get.
-   * @param \Drupal\Core\Entity\EntityInterface $source
+   * @param EntityInterface $source
    *   The source entity.
-   * @param \Drupal\Core\Entity\EntityInterface $target
+   * @param EntityInterface $target
    *   The target entity.
    * @param string $log
    *   Revision log messsage for the operation.
diff --git a/src/UserPointsHtmlRouteProvider.php b/src/UserPointsHtmlRouteProvider.php
index e9bd1d8..aa5dcc3 100644
--- a/src/UserPointsHtmlRouteProvider.php
+++ b/src/UserPointsHtmlRouteProvider.php
@@ -48,10 +48,10 @@ class UserPointsHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -72,10 +72,10 @@ class UserPointsHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -96,10 +96,10 @@ class UserPointsHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -120,10 +120,10 @@ class UserPointsHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -144,10 +144,10 @@ class UserPointsHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/UserPointsPermissions.php b/src/UserPointsPermissions.php
index 284ff0a..e8ea2c1 100644
--- a/src/UserPointsPermissions.php
+++ b/src/UserPointsPermissions.php
@@ -35,7 +35,7 @@ class UserPointsPermissions {
   /**
    * Returns a list of node permissions for a given node type.
    *
-   * @param \Drupal\userpoints\Entity\UserPointsType $type
+   * @param UserPointsType $type
    *   The UserPoints type.
    *
    * @return array
diff --git a/src/UserPointsStorageInterface.php b/src/UserPointsStorageInterface.php
index 636a142..bd12ad5 100644
--- a/src/UserPointsStorageInterface.php
+++ b/src/UserPointsStorageInterface.php
@@ -19,7 +19,7 @@ interface UserPointsStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of User points revision IDs for a specific User points.
    *
-   * @param \Drupal\userpoints\Entity\UserPointsInterface $entity
+   * @param UserPointsInterface $entity
    *   The User points entity.
    *
    * @return int[]
@@ -30,7 +30,7 @@ interface UserPointsStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as User points author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
diff --git a/userpoints.info.yml b/userpoints.info.yml
index 2d61e6a..1ace309 100644
--- a/userpoints.info.yml
+++ b/userpoints.info.yml
@@ -1,5 +1,5 @@
 name: Userpoints
 description: Allows to assign points to users.
 type: module
-core_version_requirement: ^9
+core_version_requirement: ^9 || ^10
 configure: userpoints.admin
