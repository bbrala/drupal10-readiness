diff --git a/src/Plugin/views/display_extender/ViewsEviDisplayExtender.php b/src/Plugin/views/display_extender/ViewsEviDisplayExtender.php
index 89755c1..540c36c 100644
--- a/src/Plugin/views/display_extender/ViewsEviDisplayExtender.php
+++ b/src/Plugin/views/display_extender/ViewsEviDisplayExtender.php
@@ -237,7 +237,7 @@ class ViewsEviDisplayExtender extends DisplayExtenderPluginBase {
   /**
    * Get filter wrappers for all exposed filters of this view.
    *
-   * @return \Drupal\views_evi\ViewsEviFilterWrapper[]
+   * @return ViewsEviFilterWrapper[]
    */
   public function getViewsEviFilterWrappers() {
     $all_filter_handlers = $this->displayHandler->getHandlers('filter');
diff --git a/src/Plugin/views_evi/ViewsEviHandlerBase.php b/src/Plugin/views_evi/ViewsEviHandlerBase.php
index c15851e..5b3610d 100755
--- a/src/Plugin/views_evi/ViewsEviHandlerBase.php
+++ b/src/Plugin/views_evi/ViewsEviHandlerBase.php
@@ -10,7 +10,7 @@ abstract class ViewsEviHandlerBase implements ViewsEviHandlerInterface {
 
   use StringTranslationTrait;
 
-  /** @var \Drupal\views_evi\ViewsEviFilterWrapper $filter_wrapper */
+  /** @var ViewsEviFilterWrapper $filter_wrapper */
   protected $filter_wrapper;
 
   /**
diff --git a/src/ViewsEviFilterWrapper.php b/src/ViewsEviFilterWrapper.php
index 033e7b6..ce1ee18 100755
--- a/src/ViewsEviFilterWrapper.php
+++ b/src/ViewsEviFilterWrapper.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\views_evi;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
+use Drupal\views\Plugin\views\display\DisplayPluginInterface;
+use Drupal\views_evi\Plugin\views\display_extender\ViewsEviDisplayExtender;
+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Component\Render\FormattableMarkup;
 
 /**
@@ -9,11 +13,11 @@ use Drupal\Component\Render\FormattableMarkup;
  */
 class ViewsEviFilterWrapper {
 
-  /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filterHandler */
+  /** @var FilterPluginBase $filterHandler */
   protected $filterHandler;
 
   /**
-   * @param \Drupal\views\Plugin\views\filter\FilterPluginBase $filter_handler
+   * @param FilterPluginBase $filter_handler
    */
   function __construct($filter_handler) {
     $this->filterHandler = $filter_handler;
@@ -22,7 +26,7 @@ class ViewsEviFilterWrapper {
   /**
    * Get filter handler.
    *
-   * @return \Drupal\views\Plugin\views\filter\FilterPluginBase
+   * @return FilterPluginBase
    */
   public function getFilterHandler() {
     return $this->filterHandler;
@@ -81,7 +85,7 @@ class ViewsEviFilterWrapper {
   /**
    * Get current display handler.
    *
-   * @return \Drupal\views\Plugin\views\display\DisplayPluginInterface
+   * @return DisplayPluginInterface
    */
   public function getDisplayHandler() {
     $view = $this->filterHandler->view;
@@ -92,7 +96,7 @@ class ViewsEviFilterWrapper {
   /**
    * Get EVIÂ display extender class.
    *
-   * @return \Drupal\views_evi\Plugin\views\display_extender\ViewsEviDisplayExtender
+   * @return ViewsEviDisplayExtender
    */
   public function getEvi() {
     $display_handler = $this->getDisplayHandler();
@@ -127,7 +131,7 @@ class ViewsEviFilterWrapper {
     return $plugin_class;
   }
 
-  /** @var \Drupal\views_evi\ViewsEviHandlerInterface[] $plugin */
+  /** @var ViewsEviHandlerInterface[] $plugin */
   private $plugin;
 
   /**
@@ -146,10 +150,10 @@ class ViewsEviFilterWrapper {
   }
 
   /**
-   * @return \Drupal\Component\Plugin\PluginManagerInterface
+   * @return PluginManagerInterface
    */
   protected function getPluginManager($plugin_type) {
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $plugin_manager */
+    /** @var PluginManagerInterface $plugin_manager */
     if ($plugin_type == 'value') {
       $plugin_manager = \Drupal::service('plugin.manager.views_evi.value');
     }
diff --git a/src/ViewsEviHandlerInterface.php b/src/ViewsEviHandlerInterface.php
index 1c1a427..7f6799d 100755
--- a/src/ViewsEviHandlerInterface.php
+++ b/src/ViewsEviHandlerInterface.php
@@ -14,7 +14,7 @@ interface ViewsEviHandlerInterface {
   public function setFilterWrapper(ViewsEviFilterWrapper $filter_wrapper);
 
   /**
-   * @return \Drupal\views_evi\ViewsEviFilterWrapper
+   * @return ViewsEviFilterWrapper
    */
   public function getFilterWrapper();
 
diff --git a/src/ViewsEviValueInterface.php b/src/ViewsEviValueInterface.php
index fd96234..ffa3a81 100755
--- a/src/ViewsEviValueInterface.php
+++ b/src/ViewsEviValueInterface.php
@@ -4,7 +4,7 @@ namespace Drupal\views_evi;
 
 interface ViewsEviValueInterface extends ViewsEviHandlerInterface {
   /**
-   * @param \Drupal\views_evi\ViewsEviFilterWrapper $filter_wrapper
+   * @param ViewsEviFilterWrapper $filter_wrapper
    * @return array
    */
   public function getValue();
diff --git a/tests/src/Functional/AdminPageTest.php b/tests/src/Functional/AdminPageTest.php
index 5e4dc0e..fd0b700 100644
--- a/tests/src/Functional/AdminPageTest.php
+++ b/tests/src/Functional/AdminPageTest.php
@@ -33,7 +33,7 @@ class AdminPageTest extends BrowserTestBase {
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
diff --git a/views_evi.info.yml b/views_evi.info.yml
index 08a2059..5340419 100755
--- a/views_evi.info.yml
+++ b/views_evi.info.yml
@@ -2,7 +2,7 @@ name: Views EVI (Exposed Filter Value Injector)
 description: Provides the ability to use arguments in exposed filters. A first step to abstract value providers from filters.
 package: "Views"
 type: module
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^8.7.7 || ^9 || ^10
 dependencies:
   - views
 
diff --git a/views_evi.module b/views_evi.module
index d67ade4..5ac7ac5 100755
--- a/views_evi.module
+++ b/views_evi.module
@@ -1,4 +1,7 @@
 <?php
+use Drupal\views\Plugin\views\display\DisplayPluginInterface;
+use Drupal\views_evi\Plugin\views\display_extender\ViewsEviDisplayExtender;
+use Drupal\Component\Plugin\PluginManagerInterface;
 /**
  * @file
  * Main file for the views_evi module with some utility functions.
@@ -26,9 +29,9 @@ use Drupal\views\ViewExecutable;
  * @param $form_state
  */
 function views_evi_form_views_exposed_form_alter(&$form, FormStateInterface &$form_state) {
-  /** @var \Drupal\views\Plugin\views\display\DisplayPluginInterface $display */
+  /** @var DisplayPluginInterface $display */
   $display = $form_state->get('view')->display_handler;
-  /** @var \Drupal\views_evi\Plugin\views\display_extender\ViewsEviDisplayExtender $views_evi */
+  /** @var ViewsEviDisplayExtender $views_evi */
   if (isset($display->getExtenders()['views_evi'])) {
     $views_evi = $display->getExtenders()['views_evi'];
     $views_evi->viewsEviExposedFormAlter($form, $form_state);
@@ -45,7 +48,7 @@ function views_evi_form_views_exposed_form_alter(&$form, FormStateInterface &$fo
  * @param array $args
  */
 function views_evi_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
-  /** @var \Drupal\views_evi\Plugin\views\display_extender\ViewsEviDisplayExtender $views_evi */
+  /** @var ViewsEviDisplayExtender $views_evi */
   if (isset($view->displayHandlers->get($display_id)->getExtenders()['views_evi'])) {
     $views_evi = $view->displayHandlers->get($display_id)->getExtenders()['views_evi'];
     $views_evi->viewsEviPreView();
@@ -76,7 +79,7 @@ function views_evi_plugin_types() {
  * @return mixed
  */
 function views_evi_plugin_labels($plugin_type) {
-  /** @var \Drupal\Component\Plugin\PluginManagerInterface $plugin_manager */
+  /** @var PluginManagerInterface $plugin_manager */
   if ($plugin_type == 'value') {
     $plugin_manager = \Drupal::service('plugin.manager.views_evi.value');
   }
