diff --git a/audiofield.module b/audiofield.module
index 8d6d150..402bcf8 100644
--- a/audiofield.module
+++ b/audiofield.module
@@ -98,7 +98,7 @@ function audiofield_theme_registry_alter(&$theme_registry) {
    * By default, Drupal 8 does not include theme suggestions from inside the
    * module in which they were created, so we must add them manually here.
    */
-  $path = drupal_get_path('module', 'audiofield');
+  $path = \Drupal::service('extension.list.module')->getPath('audiofield');
   $audioplayer_templates = drupal_find_theme_templates($theme_registry, '.html.twig', $path);
   foreach ($audioplayer_templates as &$audioplayer_template) {
     $audioplayer_template['type'] = 'module';
diff --git a/src/Annotation/AudioPlayer.php b/src/Annotation/AudioPlayer.php
index 7f48242..a6c2671 100644
--- a/src/Annotation/AudioPlayer.php
+++ b/src/Annotation/AudioPlayer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\audiofield\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class AudioPlayer extends Plugin {
   /**
    * The audio player's title.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -37,7 +38,7 @@ class AudioPlayer extends Plugin {
   /**
    * The description of this audio player.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/AudioFieldPlayerManager.php b/src/AudioFieldPlayerManager.php
index 550618e..5f9e840 100644
--- a/src/AudioFieldPlayerManager.php
+++ b/src/AudioFieldPlayerManager.php
@@ -17,9 +17,9 @@ class AudioFieldPlayerManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/AudioFieldPluginBase.php b/src/AudioFieldPluginBase.php
index 6afa847..7b2ed1c 100755
--- a/src/AudioFieldPluginBase.php
+++ b/src/AudioFieldPluginBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\audiofield;
 
+use Drupal\file\Plugin\Field\FieldType\FileItem;
+use Drupal\link\Plugin\Field\FieldType\LinkItem;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\file\FileInterface;
@@ -29,28 +31,28 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Library discovery service.
    *
-   * @var Drupal\Core\Asset\LibraryDiscovery
+   * @var LibraryDiscovery
    */
   protected $libraryDiscovery;
 
   /**
    * Messenger service.
    *
-   * @var Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * File System service.
    *
-   * @var Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Messenger service.
    *
-   * @var Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -84,7 +86,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Renders the player.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The uploaded item list.
    * @param string $langcode
    *   The language code.
@@ -259,7 +261,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Validate that a file entity will work with this player.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   A file entity.
    *
    * @return bool
@@ -284,7 +286,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Validate that a link entity will work with this player.
    *
-   * @param \Drupal\Core\Url $link
+   * @param Url $link
    *   Url to the link.
    *
    * @return bool
@@ -308,7 +310,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Get the class type for an entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are determining class type.
    *
    * @return string
@@ -329,7 +331,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Validate that this entity will work with this player.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item which we are validating works with the player.
    *
    * @return bool
@@ -373,10 +375,10 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Load a file from an audio file entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are loading the file entity.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   FileInterface from the item.
    */
   private function loadFileFromItem($item) {
@@ -397,7 +399,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Get a unique ID for an item.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are generating a unique ID.
    *
    * @return string
@@ -425,7 +427,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Get the filetype for an item.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are determining filetype.
    *
    * @return string
@@ -449,10 +451,10 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Get source URL from an audiofield entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are determining source.
    *
-   * @return \Drupal\Core\Url|string
+   * @return Url|string
    *   The source URL of an entity.
    */
   private function getAudioSource($item) {
@@ -460,7 +462,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
       // Load the associated file.
       $file = $this->loadFileFromItem($item);
       // Get the file URL.
-      return Url::fromUri(file_create_url($file->getFileUri()));
+      return \Drupal::service('file_url_generator')->generate($file->getFileUri());
     }
     // Handle Link entity.
     elseif ($this->getClassType($item) == 'LinkItem') {
@@ -474,7 +476,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Get a title description from an audiofield entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which a title is being generated.
    *
    * @return string
@@ -507,7 +509,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Get required rendering information from an entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are getting render information.
    *
    * @return object
@@ -604,7 +606,7 @@ abstract class AudioFieldPluginBase extends PluginBase implements ContainerFacto
   /**
    * Used to render a default player (for fallback).
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The uploaded item list.
    * @param array $settings
    *   An array of additional render settings.
diff --git a/src/Commands/AudiofieldCommands.php b/src/Commands/AudiofieldCommands.php
index 449ac68..952f748 100644
--- a/src/Commands/AudiofieldCommands.php
+++ b/src/Commands/AudiofieldCommands.php
@@ -17,7 +17,7 @@ class AudiofieldCommands extends DrushCommands {
   /**
    * Library discovery service.
    *
-   * @var Drupal\audiofield\AudioFieldPlayerManager
+   * @var AudioFieldPlayerManager
    */
   protected $playerManager;
 
@@ -31,7 +31,7 @@ class AudiofieldCommands extends DrushCommands {
   /**
    * Archive manager service.
    *
-   * @var Drupal\Core\Archiver\ArchiverManager
+   * @var ArchiverManager
    */
   protected $archiverManager;
 
diff --git a/src/Plugin/AudioPlayer/WavesurferAudioPlayer.php b/src/Plugin/AudioPlayer/WavesurferAudioPlayer.php
index 8e2f37e..0cca3dd 100644
--- a/src/Plugin/AudioPlayer/WavesurferAudioPlayer.php
+++ b/src/Plugin/AudioPlayer/WavesurferAudioPlayer.php
@@ -33,7 +33,7 @@ class WavesurferAudioPlayer extends AudioFieldPluginBase {
   /**
    * Module handler service.
    *
-   * @var Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
@@ -155,7 +155,7 @@ class WavesurferAudioPlayer extends AudioFieldPluginBase {
 
         // If the file exists, add it to the jQuery and template settings.
         if (file_exists($peakData['url'])) {
-          $renderInfo->peakpath = $fileSettings['peakpath'] = file_create_url($peakData['url']);
+          $renderInfo->peakpath = $fileSettings['peakpath'] = \Drupal::service('file_url_generator')->generateAbsoluteString($peakData['url']);
         }
       }
 
diff --git a/src/Plugin/Field/FieldFormatter/AudioFieldFieldFormatter.php b/src/Plugin/Field/FieldFormatter/AudioFieldFieldFormatter.php
index 2e75082..97ddc88 100644
--- a/src/Plugin/Field/FieldFormatter/AudioFieldFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/AudioFieldFieldFormatter.php
@@ -26,7 +26,7 @@ class AudioFieldFieldFormatter extends FormatterBase implements ContainerFactory
   /**
    * Audio player management service.
    *
-   * @var \Drupal\audiofield\AudioFieldPlayerManager
+   * @var AudioFieldPlayerManager
    */
   protected $audioPlayerManager;
 
