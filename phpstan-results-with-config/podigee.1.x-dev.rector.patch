diff --git a/podigee.info.yml b/podigee.info.yml
index 354fb93..d367f5c 100644
--- a/podigee.info.yml
+++ b/podigee.info.yml
@@ -2,6 +2,6 @@ name: Podigee Podcast Player
 type: module
 description: Listen to an audio file with the Podigee HTML5 player.
 package: Media
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:file
diff --git a/src/Plugin/Field/FieldFormatter/PodigeeFormatter.php b/src/Plugin/Field/FieldFormatter/PodigeeFormatter.php
index 326e8d6..e06a2e9 100644
--- a/src/Plugin/Field/FieldFormatter/PodigeeFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/PodigeeFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\podigee\Plugin\Field\FieldFormatter;
 
+use Drupal\file\Entity\File;
 use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\Plugin\Field\FieldFormatter\FileMediaFormatterBase;
@@ -143,7 +144,7 @@ class PodigeeFormatter extends FileMediaFormatterBase {
   /**
    * Gets source files with attributes.
    *
-   * @param \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items
+   * @param EntityReferenceFieldItemListInterface $items
    *   The item list.
    * @param string $langcode
    *   The language code of the referenced entities to display.
@@ -160,7 +161,7 @@ class PodigeeFormatter extends FileMediaFormatterBase {
 
     // Because we can have the files grouped in a single media tag, we do a
     // grouping in case the multiple file behavior is not 'tags'.
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     foreach ($this->getEntitiesToView($items, $langcode) as $file) {
       if (static::mimeTypeApplies($file->getMimeType())) {
         $player_configuration = [
@@ -179,7 +180,7 @@ class PodigeeFormatter extends FileMediaFormatterBase {
           'episode' => [
             'media' => [
               // TODO: Support other file types than mp3.
-              'mp3' => file_create_url($file->getFileUri()),
+              'mp3' => \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()),
             ],
             'title' => $this->replace('title', $entity),
             'subtitle' => $this->replace('subtitle', $entity),
