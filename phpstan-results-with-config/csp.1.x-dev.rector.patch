diff --git a/csp_extras/csp_extras.module b/csp_extras/csp_extras.module
index 38d7fca..c5eb7b2 100644
--- a/csp_extras/csp_extras.module
+++ b/csp_extras/csp_extras.module
@@ -12,7 +12,7 @@ function csp_extras_library_info_alter(&$libraries, $extension) {
 
   // Add module ajax.js to core library.
   if ($extension == 'core' && isset($libraries['drupal.ajax'])) {
-    $path = '/' . drupal_get_path('module', 'csp_extras') . '/js/ajax.js';
+    $path = '/' . \Drupal::service('extension.list.module')->getPath('csp_extras') . '/js/ajax.js';
     $libraries['drupal.ajax']['js'][$path] = [
       'version' => '1.13',
     ];
diff --git a/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php b/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php
index 1050a2a..4e09814 100644
--- a/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php
+++ b/csp_extras/src/Ajax/AjaxResponseAttachmentsProcessor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\csp_extras\Ajax;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\SettingsCommand;
@@ -25,50 +26,50 @@ class AjaxResponseAttachmentsProcessor implements AttachmentsResponseProcessorIn
   /**
    * The asset resolver service.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;
 
   /**
    * A config object for the system performance configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a AjaxResponseAttachmentsProcessor object.
    *
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   An asset resolver.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(
@@ -106,9 +107,9 @@ class AjaxResponseAttachmentsProcessor implements AttachmentsResponseProcessorIn
   /**
    * Prepares the AJAX commands to attach assets.
    *
-   * @param \Drupal\Core\Ajax\AjaxResponse $response
+   * @param AjaxResponse $response
    *   The AJAX response to update.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object that the AJAX is responding to.
    *
    * @return array
@@ -166,7 +167,7 @@ class AjaxResponseAttachmentsProcessor implements AttachmentsResponseProcessorIn
             'type' => 'stylesheet',
             'attributes' => [
               'media' => $css_asset['media'],
-              'href' => file_url_transform_relative(file_create_url($css_asset['data'])),
+              'href' => \Drupal::service('file_url_generator')->generateString($css_asset['data']),
             ],
           ];
 
@@ -190,7 +191,7 @@ class AjaxResponseAttachmentsProcessor implements AttachmentsResponseProcessorIn
           $asset = [
             'type' => 'script',
             'attributes' => [
-              'src' => file_url_transform_relative(file_create_url($js_asset['data'])),
+              'src' => \Drupal::service('file_url_generator')->generateString($js_asset['data']),
             ],
           ];
 
diff --git a/src/Controller/ReportUri.php b/src/Controller/ReportUri.php
index d7229fa..97d4162 100644
--- a/src/Controller/ReportUri.php
+++ b/src/Controller/ReportUri.php
@@ -19,32 +19,32 @@ class ReportUri implements ContainerInjectionInterface {
   /**
    * The Request Stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   private $requestStack;
 
   /**
    * The Logger channel.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   private $logger;
 
   /**
    * The Config Factory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
 
   /**
    * Create a new Report URI Controller.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The Request Stack service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Logger channel.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The Config Factory Service.
    */
   public function __construct(RequestStack $requestStack, LoggerInterface $logger, ConfigFactoryInterface $configFactory) {
@@ -70,7 +70,7 @@ class ReportUri implements ContainerInjectionInterface {
    * @param string $type
    *   The report type.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   An empty response.
    */
   public function log($type) {
diff --git a/src/Event/PolicyAlterEvent.php b/src/Event/PolicyAlterEvent.php
index 7c298d4..f830e27 100644
--- a/src/Event/PolicyAlterEvent.php
+++ b/src/Event/PolicyAlterEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\csp\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\csp\Csp;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpFoundation\Response;
 
 /**
@@ -14,23 +14,23 @@ class PolicyAlterEvent extends Event {
   /**
    * A CSP policy.
    *
-   * @var \Drupal\csp\Csp
+   * @var Csp
    */
   private $policy;
 
   /**
    * The Response the policy is being applied to.
    *
-   * @var \Symfony\Component\HttpFoundation\Response
+   * @var Response
    */
   private $response;
 
   /**
    * Create a new PolicyAlterEvent instance.
    *
-   * @param \Drupal\csp\Csp $policy
+   * @param Csp $policy
    *   A CSP policy.
-   * @param \Symfony\Component\HttpFoundation\Response $response
+   * @param Response $response
    *   The Response the policy is being applied to.
    */
   public function __construct(Csp $policy, Response $response) {
@@ -41,7 +41,7 @@ class PolicyAlterEvent extends Event {
   /**
    * Retrieve the defined CSP policy.
    *
-   * @return \Drupal\csp\Csp
+   * @return Csp
    *   The CSP policy.
    */
   public function getPolicy() {
@@ -51,7 +51,7 @@ class PolicyAlterEvent extends Event {
   /**
    * Retrieve the Response the policy is applied to.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The Response the policy is applied to.
    */
   public function getResponse() {
diff --git a/src/EventSubscriber/CoreCspSubscriber.php b/src/EventSubscriber/CoreCspSubscriber.php
index 737e689..7b2ffe3 100644
--- a/src/EventSubscriber/CoreCspSubscriber.php
+++ b/src/EventSubscriber/CoreCspSubscriber.php
@@ -18,14 +18,14 @@ class CoreCspSubscriber implements EventSubscriberInterface {
   /**
    * The Library Dependency Resolver service.
    *
-   * @var \Drupal\Core\Asset\LibraryDependencyResolverInterface
+   * @var LibraryDependencyResolverInterface
    */
   private $libraryDependencyResolver;
 
   /**
    * The Module Handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;
 
@@ -40,9 +40,9 @@ class CoreCspSubscriber implements EventSubscriberInterface {
   /**
    * CoreCspSubscriber constructor.
    *
-   * @param \Drupal\Core\Asset\LibraryDependencyResolverInterface $libraryDependencyResolver
+   * @param LibraryDependencyResolverInterface $libraryDependencyResolver
    *   The Library Dependency Resolver Service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The Module Handler service.
    */
   public function __construct(LibraryDependencyResolverInterface $libraryDependencyResolver, ModuleHandlerInterface $moduleHandler) {
@@ -53,7 +53,7 @@ class CoreCspSubscriber implements EventSubscriberInterface {
   /**
    * Alter CSP policy for libraries included in Drupal core.
    *
-   * @param \Drupal\csp\Event\PolicyAlterEvent $alterEvent
+   * @param PolicyAlterEvent $alterEvent
    *   The Policy Alter event.
    */
   public function onCspPolicyAlter(PolicyAlterEvent $alterEvent) {
diff --git a/src/EventSubscriber/Ie9CspSubscriber.php b/src/EventSubscriber/Ie9CspSubscriber.php
index 96dcd02..d5bc7aa 100644
--- a/src/EventSubscriber/Ie9CspSubscriber.php
+++ b/src/EventSubscriber/Ie9CspSubscriber.php
@@ -17,14 +17,14 @@ class Ie9CspSubscriber implements EventSubscriberInterface {
   /**
    * The Module Handler Service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;
 
   /**
    * The Config Factory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
 
@@ -39,9 +39,9 @@ class Ie9CspSubscriber implements EventSubscriberInterface {
   /**
    * Ie9CspSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The Config Factory service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The Module Handler service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, ModuleHandlerInterface $moduleHandler) {
@@ -58,7 +58,7 @@ class Ie9CspSubscriber implements EventSubscriberInterface {
    * more difficult, just check the optimization settings, as in
    * HtmlResponseAttachmentsProcessor::processAssetLibraries()
    *
-   * @param \Drupal\csp\Event\PolicyAlterEvent $alterEvent
+   * @param PolicyAlterEvent $alterEvent
    *   The Policy Alter event.
    *
    * @see https://www.drupal.org/node/2993171
diff --git a/src/EventSubscriber/ResponseCspSubscriber.php b/src/EventSubscriber/ResponseCspSubscriber.php
index 6807302..bd51ee5 100644
--- a/src/EventSubscriber/ResponseCspSubscriber.php
+++ b/src/EventSubscriber/ResponseCspSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\csp\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -12,7 +13,6 @@ use Drupal\csp\LibraryPolicyBuilder;
 use Drupal\csp\ReportingHandlerPluginManager;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -23,41 +23,41 @@ class ResponseCspSubscriber implements EventSubscriberInterface {
   /**
    * The Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Library Policy Builder service.
    *
-   * @var \Drupal\csp\LibraryPolicyBuilder
+   * @var LibraryPolicyBuilder
    */
   protected $libraryPolicyBuilder;
 
   /**
    * The Reporting Handler Plugin Manager service.
    *
-   * @var \Drupal\csp\ReportingHandlerPluginManager
+   * @var ReportingHandlerPluginManager
    */
   private $reportingHandlerPluginManager;
 
   /**
    * The Event Dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   private $eventDispatcher;
 
   /**
    * Constructs a new ResponseSubscriber object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config Factory service.
-   * @param \Drupal\csp\LibraryPolicyBuilder $libraryPolicyBuilder
+   * @param LibraryPolicyBuilder $libraryPolicyBuilder
    *   The Library Parser service.
-   * @param \Drupal\csp\ReportingHandlerPluginManager $reportingHandlerPluginManager
+   * @param ReportingHandlerPluginManager $reportingHandlerPluginManager
    *   The Reporting Handler Plugin Manager service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The Event Dispatcher Service.
    */
   public function __construct(
@@ -83,10 +83,10 @@ class ResponseCspSubscriber implements EventSubscriberInterface {
   /**
    * Add Content-Security-Policy header to response.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The Response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
@@ -174,8 +174,8 @@ class ResponseCspSubscriber implements EventSubscriberInterface {
       }
 
       $this->eventDispatcher->dispatch(
-        CspEvents::POLICY_ALTER,
-        new PolicyAlterEvent($policy, $response)
+        new PolicyAlterEvent($policy, $response),
+        CspEvents::POLICY_ALTER
       );
 
       if (($headerValue = $policy->getHeaderValue())) {
diff --git a/src/Form/CspSettingsForm.php b/src/Form/CspSettingsForm.php
index 73f3a3a..c04cb3e 100644
--- a/src/Form/CspSettingsForm.php
+++ b/src/Form/CspSettingsForm.php
@@ -20,14 +20,14 @@ class CspSettingsForm extends ConfigFormBase {
   /**
    * The Library Policy Builder service.
    *
-   * @var \Drupal\csp\LibraryPolicyBuilder
+   * @var LibraryPolicyBuilder
    */
   private $libraryPolicyBuilder;
 
   /**
    * The Reporting Handler Plugin Manager service.
    *
-   * @var \Drupal\csp\ReportingHandlerPluginManager
+   * @var ReportingHandlerPluginManager
    */
   private $reportingHandlerPluginManager;
 
@@ -74,13 +74,13 @@ class CspSettingsForm extends ConfigFormBase {
   /**
    * Constructs a \Drupal\csp\Form\CspSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\csp\LibraryPolicyBuilder $libraryPolicyBuilder
+   * @param LibraryPolicyBuilder $libraryPolicyBuilder
    *   The Library Policy Builder service.
-   * @param \Drupal\csp\ReportingHandlerPluginManager $reportingHandlerPluginManager
+   * @param ReportingHandlerPluginManager $reportingHandlerPluginManager
    *   The Reporting Handler Plugin Manger service.
-   * @param \Drupal\Core\Messenger\MessengerInterface|null $messenger
+   * @param MessengerInterface|null $messenger
    *   The Messenger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LibraryPolicyBuilder $libraryPolicyBuilder, ReportingHandlerPluginManager $reportingHandlerPluginManager, MessengerInterface $messenger) {
@@ -592,7 +592,7 @@ class CspSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   The form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function submitClearPolicy(array &$form, FormStateInterface $form_state) {
diff --git a/src/LibraryPolicyBuilder.php b/src/LibraryPolicyBuilder.php
index 13b4462..ac7b7f6 100644
--- a/src/LibraryPolicyBuilder.php
+++ b/src/LibraryPolicyBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\csp;
 
+use Drupal\Core\Asset\LibraryDiscovery;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Asset\LibraryDiscoveryInterface;
 use Drupal\Core\Cache\Cache;
@@ -18,28 +19,28 @@ class LibraryPolicyBuilder {
   /**
    * The Library Discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscovery
+   * @var LibraryDiscovery
    */
   protected $libraryDiscovery;
 
   /**
    * The cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The Theme Handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -57,13 +58,13 @@ class LibraryPolicyBuilder {
   /**
    * Constructs a new Library Parser.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache bin.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The Module Handler service.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler
+   * @param ThemeHandlerInterface $themeHandler
    *   The Theme Handler service.
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The Library Discovery Collector service.
    */
   public function __construct(
diff --git a/src/Plugin/ReportingHandlerInterface.php b/src/Plugin/ReportingHandlerInterface.php
index a59699e..601d32b 100644
--- a/src/Plugin/ReportingHandlerInterface.php
+++ b/src/Plugin/ReportingHandlerInterface.php
@@ -26,7 +26,7 @@ interface ReportingHandlerInterface {
    *
    * @param array $form
    *   The form fields for this plugin.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The submitted form state.
    */
   public function validateForm(array &$form, FormStateInterface $form_state);
@@ -34,7 +34,7 @@ interface ReportingHandlerInterface {
   /**
    * Alter the provided policy according to the plugin settings.
    *
-   * @param \Drupal\csp\Csp $policy
+   * @param Csp $policy
    *   The policy to alter.
    */
   public function alterPolicy(Csp $policy);
diff --git a/src/ReportingHandlerPluginManager.php b/src/ReportingHandlerPluginManager.php
index e1bbf7e..8d9874d 100644
--- a/src/ReportingHandlerPluginManager.php
+++ b/src/ReportingHandlerPluginManager.php
@@ -17,9 +17,9 @@ class ReportingHandlerPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(
diff --git a/tests/src/Unit/Controller/ReportUriTest.php b/tests/src/Unit/Controller/ReportUriTest.php
index f7fc636..7b839d3 100644
--- a/tests/src/Unit/Controller/ReportUriTest.php
+++ b/tests/src/Unit/Controller/ReportUriTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\csp\Unit\Controller;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\csp\Controller\ReportUri;
 use Drupal\Tests\UnitTestCase;
 use Prophecy\Argument;
@@ -17,6 +18,7 @@ use Symfony\Component\HttpFoundation\RequestStack;
  */
 class ReportUriTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Valid JSON should get sent to the logger.
    */
diff --git a/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php b/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php
index 5733e4b..8920358 100644
--- a/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/CoreCspSubscriberTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\csp\Unit\EventSubscriber;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Asset\LibraryDependencyResolverInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Render\HtmlResponse;
@@ -20,28 +21,28 @@ class CoreCspSubscriberTest extends UnitTestCase {
   /**
    * The Library Dependency Resolver service.
    *
-   * @var \Drupal\Core\Asset\LibraryDependencyResolverInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var LibraryDependencyResolverInterface|MockObject
    */
   private $libraryDependencyResolver;
 
   /**
    * The Module Handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var ModuleHandlerInterface|MockObject
    */
   private $moduleHandler;
 
   /**
    * The event subscriber for core modules.
    *
-   * @var \Drupal\csp\EventSubscriber\CoreCspSubscriber
+   * @var CoreCspSubscriber
    */
   private $coreCspSubscriber;
 
   /**
    * The response object.
    *
-   * @var \Drupal\Core\Render\HtmlResponse|\PHPUnit\Framework\MockObject\MockObject
+   * @var HtmlResponse|MockObject
    */
   private $response;
 
@@ -51,19 +52,13 @@ class CoreCspSubscriberTest extends UnitTestCase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->libraryDependencyResolver = $this->getMockBuilder(LibraryDependencyResolverInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->libraryDependencyResolver = $this->createMock(LibraryDependencyResolverInterface::class);
     $this->libraryDependencyResolver->method('getLibrariesWithDependencies')
       ->willReturnArgument(0);
 
-    $this->moduleHandler = $this->getMockBuilder(ModuleHandlerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandlerInterface::class);
 
-    $this->response = $this->getMockBuilder(HtmlResponse::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->response = $this->createMock(HtmlResponse::class);
 
     $this->coreCspSubscriber = new CoreCspSubscriber($this->libraryDependencyResolver, $this->moduleHandler);
   }
diff --git a/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php b/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php
index f2b3dd1..af303b2 100644
--- a/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/Ie9CspSubscriberTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\csp\Unit\EventSubscriber;
 
+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\csp\Csp;
@@ -20,14 +22,14 @@ class Ie9CspSubscriberTest extends UnitTestCase {
   /**
    * The Module Handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var ModuleHandlerInterface|MockObject
    */
   private $moduleHandler;
 
   /**
    * The response object.
    *
-   * @var \Drupal\Core\Render\HtmlResponse|\PHPUnit\Framework\MockObject\MockObject
+   * @var HtmlResponse|MockObject
    */
   private $response;
 
@@ -37,13 +39,9 @@ class Ie9CspSubscriberTest extends UnitTestCase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->moduleHandler = $this->getMockBuilder(ModuleHandlerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandlerInterface::class);
 
-    $this->response = $this->getMockBuilder(HtmlResponse::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->response = $this->createMock(HtmlResponse::class);
   }
 
   /**
@@ -66,7 +64,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -95,7 +93,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -138,7 +136,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -180,7 +178,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
       ->with($this->equalTo('ie9'))
       ->willReturn(TRUE);
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -221,7 +219,7 @@ class Ie9CspSubscriberTest extends UnitTestCase {
         return $parameter === 'ie9';
       }));
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
diff --git a/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php b/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php
index edfb854..04f5d6c 100644
--- a/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/ResponseCspSubscriberTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\csp\Unit\EventSubscriber;
 
+use PHPUnit\Framework\MockObject\MockObject;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\csp\Csp;
@@ -12,7 +16,6 @@ use Drupal\csp\ReportingHandlerPluginManager;
 use Drupal\Tests\UnitTestCase;
 use Symfony\Component\EventDispatcher\EventDispatcher;
 use Symfony\Component\HttpFoundation\ResponseHeaderBag;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -24,35 +27,35 @@ class ResponseCspSubscriberTest extends UnitTestCase {
   /**
    * Mock HTTP Response.
    *
-   * @var \Drupal\Core\Render\HtmlResponse|\PHPUnit_Framework_MockObject_MockObject
+   * @var HtmlResponse|MockObject
    */
   protected $response;
 
   /**
    * Mock Response Event.
    *
-   * @var \Symfony\Component\HttpKernel\Event\FilterResponseEvent|\PHPUnit_Framework_MockObject_MockObject
+   * @var ResponseEvent|MockObject
    */
   protected $event;
 
   /**
    * The Library Policy service.
    *
-   * @var \Drupal\csp\LibraryPolicyBuilder|\PHPUnit_Framework_MockObject_MockObject
+   * @var LibraryPolicyBuilder|MockObject
    */
   private $libraryPolicy;
 
   /**
    * The Reporting Handler Plugin Manager service.
    *
-   * @var \Drupal\csp\ReportingHandlerPluginManager|\PHPUnit_Framework_MockObject_MockObject
+   * @var ReportingHandlerPluginManager|MockObject
    */
   private $reportingHandlerPluginManager;
 
   /**
    * The Event Dispatcher Service.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject|\Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var MockObject|EventDispatcherInterface
    */
   private $eventDispatcher;
 
@@ -62,21 +65,14 @@ class ResponseCspSubscriberTest extends UnitTestCase {
   public function setUp(): void {
     parent::setUp();
 
-    $this->response = $this->getMockBuilder(HtmlResponse::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $this->response->headers = $this->getMockBuilder(ResponseHeaderBag::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $responseCacheableMetadata = $this->getMockBuilder(CacheableMetadata::class)
-      ->getMock();
+    $this->response = $this->createMock(HtmlResponse::class);
+    $this->response->headers = $this->createMock(ResponseHeaderBag::class);
+    $responseCacheableMetadata = $this->createMock(CacheableMetadata::class);
     $this->response->method('getCacheableMetadata')
       ->willReturn($responseCacheableMetadata);
 
-    /** @var \Symfony\Component\HttpKernel\Event\FilterResponseEvent|\PHPUnit_Framework_MockObject_MockObject $event */
-    $this->event = $this->getMockBuilder(FilterResponseEvent::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    /** @var ResponseEvent|MockObject $event */
+    $this->event = $this->createMock(ResponseEvent::class);
     $this->event->expects($this->any())
       ->method('isMasterRequest')
       ->willReturn(TRUE);
@@ -84,17 +80,11 @@ class ResponseCspSubscriberTest extends UnitTestCase {
       ->method('getResponse')
       ->willReturn($this->response);
 
-    $this->libraryPolicy = $this->getMockBuilder(LibraryPolicyBuilder::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->libraryPolicy = $this->createMock(LibraryPolicyBuilder::class);
 
-    $this->reportingHandlerPluginManager = $this->getMockBuilder(ReportingHandlerPluginManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->reportingHandlerPluginManager = $this->createMock(ReportingHandlerPluginManager::class);
 
-    $this->eventDispatcher = $this->getMockBuilder(EventDispatcher::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->eventDispatcher = $this->createMock(EventDispatcher::class);
   }
 
   /**
@@ -113,7 +103,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testPolicyAlterEvent() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -176,7 +166,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    * @covers ::onKernelResponse
    */
   public function testEmptyDirective() {
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -210,7 +200,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    * @covers ::onKernelResponse
    */
   public function testUnoptimizedResponse() {
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => FALSE,
@@ -263,7 +253,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testOptimizedResponse() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -312,7 +302,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testEnforcedResponse() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -361,7 +351,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testBothPolicies() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -427,7 +417,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testWithLibraryDirective() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
@@ -482,7 +472,7 @@ class ResponseCspSubscriberTest extends UnitTestCase {
    */
   public function testDisabledLibraryDirective() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject $configFactory */
+    /** @var ConfigFactoryInterface|MockObject $configFactory */
     $configFactory = $this->getConfigFactoryStub([
       'system.performance' => [
         'css.preprocess' => TRUE,
diff --git a/tests/src/Unit/LibraryPolicyBuilderTest.php b/tests/src/Unit/LibraryPolicyBuilderTest.php
index 438d4e1..844a0c8 100644
--- a/tests/src/Unit/LibraryPolicyBuilderTest.php
+++ b/tests/src/Unit/LibraryPolicyBuilderTest.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\Tests\csp\Unit;
 
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Theme\ActiveTheme;
+use Drupal\Core\Extension\ThemeHandlerInterface;
+use Drupal\Core\Asset\LibraryDiscoveryInterface;
 use Drupal\Core\Asset\LibraryDiscovery;
 use Drupal\Core\Cache\MemoryBackend;
 use Drupal\Core\Extension\ModuleHandler;
@@ -18,35 +24,35 @@ class LibraryPolicyBuilderTest extends UnitTestCase {
   /**
    * Memory Cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Mock Module Handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var ModuleHandlerInterface|MockObject
    */
   protected $moduleHandler;
 
   /**
    * Mock Active Theme.
    *
-   * @var \Drupal\Core\Theme\ActiveTheme|\PHPUnit_Framework_MockObject_MockObject
+   * @var ActiveTheme|MockObject
    */
   protected $activeTheme;
 
   /**
    * Mock Theme Handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var ThemeHandlerInterface|MockObject
    */
   protected $themeHandler;
 
   /**
    * Mock Library Discovery.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var LibraryDiscoveryInterface|MockObject
    */
   protected $libraryDiscovery;
 
@@ -58,17 +64,11 @@ class LibraryPolicyBuilderTest extends UnitTestCase {
 
     $this->cache = new MemoryBackend();
 
-    $this->moduleHandler = $this->getMockBuilder(ModuleHandler::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock(ModuleHandler::class);
 
-    $this->themeHandler = $this->getMockBuilder(ThemeHandler::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->themeHandler = $this->createMock(ThemeHandler::class);
 
-    $this->libraryDiscovery = $this->getMockBuilder(LibraryDiscovery::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->libraryDiscovery = $this->createMock(LibraryDiscovery::class);
   }
 
   /**
