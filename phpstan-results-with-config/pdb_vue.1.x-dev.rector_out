modules/contrib/pdb_vue/pdb_vue.install
modules/contrib/pdb_vue/pdb_vue.module
modules/contrib/pdb_vue/src/Form/VueForm.php
modules/contrib/pdb_vue/src/Plugin/Block/VueBlock.php
modules/contrib/pdb_vue/src/Plugin/Derivative/VueBlockDeriver.php
modules/contrib/pdb_vue/src/Render/VueMarkup.php
modules/contrib/pdb_vue/tests/src/Functional/Example1Test.php
modules/contrib/pdb_vue/tests/src/Functional/SpaComponentTest.php
modules/contrib/pdb_vue/tests/src/Functional/TemplateTest.php
modules/contrib/pdb_vue/tests/src/FunctionalJavascript/VueRenderTest.php
modules/contrib/pdb_vue/tests/src/Unit/Form/VueFormTest.php
modules/contrib/pdb_vue/tests/src/Unit/Plugin/Block/VueBlockTest.php
modules/contrib/pdb_vue/tests/src/Unit/Plugin/Derivative/VueBlockDeriverTest.php

7 files with changes
====================

1) modules/contrib/pdb_vue/tests/src/Unit/Plugin/Derivative/VueBlockDeriverTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\pdb_vue\Unit\Plugin\Derivative;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Config\ConfigFactory;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\pdb_vue\Plugin\Derivative\VueBlockDeriver;
@@ @@
  */
 class VueBlockDeriverTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Mocked Component Discovery.
    *
-   * @var \Drupal\pdb\ComponentDiscoveryInterface
+   * @var ComponentDiscoveryInterface
    */
   protected $componentDiscovery;

@@ @@
   /**
    * The mocked config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory|\PHPUnit_Framework_MockObject_MockObject
+   * @var ConfigFactory|MockObject
    */
   protected $configFactory;

@@ @@
   /**
    * Instance of the Block Deriver.
    *
-   * @var \Drupal\pdb_vue\Plugin\Derivative\VueBlockDeriver
+   * @var VueBlockDeriver
    */
   protected $deriver;

@@ @@
   /**
    * Create the setup for constants and configFactory stub.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Stub the Config Factory.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/pdb_vue/tests/src/Unit/Plugin/Block/VueBlockTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\pdb_vue\Unit\Plugin\Block;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Config\ConfigFactory;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\pdb_vue\Plugin\Block\VueBlock;
@@ @@
  */
 class VueBlockTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The mocked config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory|\PHPUnit_Framework_MockObject_MockObject
+   * @var ConfigFactory|MockObject
    */
   protected $configFactory;

@@ @@
   /**
    * Instance of the Plugin.
    *
-   * @var \Drupal\pdb_vue\Plugin\Block\VueBlock
+   * @var VueBlock
    */
   protected $plugin;

@@ @@
   /**
    * Create the setup for constants and configFactory stub.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Stub the Config Factory.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/pdb_vue/tests/src/Unit/Form/VueFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\pdb_vue\Unit\Form;

+use Drupal\Core\Config\ConfigFactory;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\pdb_vue\Form\VueForm;
@@ @@
   /**
    * The mocked config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory|\PHPUnit_Framework_MockObject_MockObject
+   * @var ConfigFactory|MockObject
    */
   protected $configFactory;

@@ @@
   /**
    * Form State stub.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected $formState;

@@ @@
   /**
    * Form instance.
    *
-   * @var \Drupal\pdb_vue\Form\VueForm
+   * @var VueForm
    */
   protected $form;

@@ @@
   /**
    * Create the setup for constants and configFactory stub.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Stub the Config Factory.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/pdb_vue/src/Plugin/Derivative/VueBlockDeriver.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * VueBlockDeriver constructor.
    *
-   * @param \Drupal\pdb\ComponentDiscoveryInterface $component_discovery
+   * @param ComponentDiscoveryInterface $component_discovery
    *   The component discovery service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config Factory service.
    */
   public function __construct(ComponentDiscoveryInterface $component_discovery, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/pdb_vue/src/Plugin/Block/VueBlock.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Stores the configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/pdb_vue/pdb_vue.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\pdb\ComponentDiscovery;
 /**
  * @file
  * Any procedural Vue PHP work lives here.
@@ @@
   $config = \Drupal::config('pdb_vue.settings');

   if ($extension == 'pdb') {
-    /** @var \Drupal\pdb\ComponentDiscovery $discovery */
+    /** @var ComponentDiscovery $discovery */
     $discovery = \Drupal::service('pdb.component_discovery');
     $components = $discovery->getComponents();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


7) modules/contrib/pdb_vue/pdb_vue.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\Config;
 /**
  * @file
  * Update hooks.
  */
-
 /**
  * Add in a version config defaulted to vue2 for existing sites.
  */
 function pdb_vue_update_8101(&$sandbox) {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::service('config.factory')->getEditable('pdb_vue.settings');
   $config->set('version', 'vue2')
     ->save();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

