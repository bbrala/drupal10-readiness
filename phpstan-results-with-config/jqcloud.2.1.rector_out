modules/contrib/jqcloud/jqcloud.install
modules/contrib/jqcloud/jqcloud.module
modules/contrib/jqcloud/src/Plugin/Block/JqcloudBlock.php
modules/contrib/jqcloud/src/Plugin/Derivative/JqcloudBlockDeriver.php
modules/contrib/jqcloud/src/TermService.php
modules/contrib/jqcloud/src/TermServiceInterface.php
modules/contrib/jqcloud/tests/modules/jqcloud_library_test/jqcloud_library_test.install
modules/contrib/jqcloud/tests/modules/jqcloud_library_test/jqcloud_library_test.module
modules/contrib/jqcloud/tests/src/FunctionalJavascript/JqcloudJavascriptTest.php

4 files with changes
====================

1) modules/contrib/jqcloud/src/TermServiceInterface.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Returns list of terms.
    *
-   * @param \Drupal\taxonomy\VocabularyInterface $vocabulary
+   * @param VocabularyInterface $vocabulary
    *   Taxonomy vocabulary.
    * @param null|int $size
    *   Size of terms to return, default 40, set NULL for unlimited.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/jqcloud/src/TermService.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Language\LanguageManager definition.
    *
-   * @var \Drupal\Core\Language\LanguageManager
+   * @var LanguageManager
    */
   protected $languageManager;

@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Drupal\Core\Cache\DatabaseBackend definition.
    *
-   * @var \Drupal\Core\Cache\DatabaseBackend
+   * @var DatabaseBackend
    */
   protected $cacheData;

@@ @@
   /**
    * TagService constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
-   * @param \Drupal\Core\Language\LanguageManager $language_manager
+   * @param LanguageManager $language_manager
    *   Language manager service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\Core\Cache\DatabaseBackend $cache_data
+   * @param DatabaseBackend $cache_data
    *   Cache data service.
    */
   public function __construct(
@@ @@
   /**
    * Returns cache tag.
    *
-   * @param \Drupal\taxonomy\VocabularyInterface $vocabulary
+   * @param VocabularyInterface $vocabulary
    *   Taxonomy vocabulary.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/jqcloud/src/Plugin/Derivative/JqcloudBlockDeriver.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\jqcloud\Plugin\Derivative;

+use Drupal\taxonomy\VocabularyInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Component\Plugin\Derivative\DeriverInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
    * {@inheritdoc}
    */
   public function getDerivativeDefinitions($base_plugin_definition) {
-    /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+    /** @var VocabularyInterface $vocabulary */
     foreach (Vocabulary::loadMultiple() as $vocabulary) {
       $this->derivatives[$vocabulary->id()] = $base_plugin_definition;
       $this->derivatives[$vocabulary->id()]['admin_label'] = $this->t(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/jqcloud/src/Plugin/Block/JqcloudBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\jqcloud\Plugin\Block;

+use Drupal\taxonomy\VocabularyInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Cache\CacheTagsInvalidator;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Drupal\jqcloud\TermServiceInterface definition.
    *
-   * @var \Drupal\jqcloud\TermServiceInterface
+   * @var TermServiceInterface
    */
   protected $term;

@@ @@
   /**
    * Drupal\Core\Cache\CacheTagsInvalidator definition.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidator
+   * @var CacheTagsInvalidator
    */
   protected $cacheInvalidator;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\jqcloud\TermServiceInterface $term
+   * @param TermServiceInterface $term
    *   Term service.
-   * @param \Drupal\Core\Cache\CacheTagsInvalidator $cache_tags_invalidator
+   * @param CacheTagsInvalidator $cache_tags_invalidator
    *   Cache tags invalidator service.
    */
   public function __construct(
@@ @@
   public function build() {
     $content = [];

-    /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+    /** @var VocabularyInterface $vocabulary */
     $vocabulary = $this->pluginDefinition['vocabulary'];
     $id = "jqcloud-{$vocabulary->id()}";
     $content['#attributes']['class'][] = $id;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [ERROR] Could not process                                                      
         "modules/contrib/jqcloud/tests/src/FunctionalJavascript/JqcloudJavascript
         Test.php" file, due to:                                                
         "Analyze error: "Class                                                 
         Drupal\FunctionalJavascriptTests\JavascriptTestBase not found.". Include
         your files in "$rectorConfig->autoloadPaths([...]);" or                
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

