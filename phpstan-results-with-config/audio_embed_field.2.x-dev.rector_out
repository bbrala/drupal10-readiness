modules/contrib/audio_embed_field/audio_embed_field.api.php
modules/contrib/audio_embed_field/audio_embed_field.module
modules/contrib/audio_embed_field/modules/audio_embed_media/audio_embed_media.install
modules/contrib/audio_embed_field/modules/audio_embed_media/audio_embed_media.module
modules/contrib/audio_embed_field/modules/audio_embed_media/src/Plugin/MediaEntity/Type/AudioEmbedField.php
modules/contrib/audio_embed_field/modules/audio_embed_media_core/audio_embed_media_core.install
modules/contrib/audio_embed_field/modules/audio_embed_media_core/audio_embed_media_core.module
modules/contrib/audio_embed_field/modules/audio_embed_media_core/src/Plugin/media/Source/AudioEmbedField.php
modules/contrib/audio_embed_field/src/Annotation/AudioEmbedProvider.php
modules/contrib/audio_embed_field/src/Element/AudioEmbedHtml5.php
modules/contrib/audio_embed_field/src/Element/AudioEmbedIFrame.php
modules/contrib/audio_embed_field/src/Form/AudioEmbedFieldAdminSettingsForm.php
modules/contrib/audio_embed_field/src/Plugin/Field/FieldFormatter/Audio.php
modules/contrib/audio_embed_field/src/Plugin/Field/FieldFormatter/Colorbox.php
modules/contrib/audio_embed_field/src/Plugin/Field/FieldFormatter/Thumbnail.php
modules/contrib/audio_embed_field/src/Plugin/Field/FieldType/AudioEmbedField.php
modules/contrib/audio_embed_field/src/Plugin/Field/FieldWidget/AudioTextfield.php
modules/contrib/audio_embed_field/src/Plugin/audio_embed_field/Provider/CustomUrl.php
modules/contrib/audio_embed_field/src/Plugin/audio_embed_field/Provider/SoundCloud.php
modules/contrib/audio_embed_field/src/ProviderManager.php
modules/contrib/audio_embed_field/src/ProviderManagerInterface.php
modules/contrib/audio_embed_field/src/ProviderPluginBase.php
modules/contrib/audio_embed_field/src/ProviderPluginInterface.php

11 files with changes
=====================

1) modules/contrib/audio_embed_field/src/ProviderPluginBase.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * An http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   An HTTP client.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/audio_embed_field/src/ProviderManagerInterface.php:33

    ---------- begin diff ----------
@@ @@
    * @param string $user_input
    *   The user input to test against the plugins.
    *
-   * @return \Drupal\audio_embed_field\ProviderPluginInterface|bool
+   * @return ProviderPluginInterface|bool
    *   The relevant plugin or FALSE on failure.
    */
   public function filterApplicableDefinitions(array $definitions, $user_input);
@@ @@
    * @param string $input
    *   Input provided from a field.
    *
-   * @return \Drupal\audio_embed_field\ProviderPluginInterface|bool
+   * @return ProviderPluginInterface|bool
    *   The loaded plugin.
    */
   public function loadProviderFromInput($input);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/audio_embed_field/src/Plugin/Field/FieldWidget/AudioTextfield.php:42

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateFormElement(array &$element, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/audio_embed_field/src/Plugin/Field/FieldType/AudioEmbedField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\audio_embed_field\Plugin\Field\FieldType;

+use Drupal\audio_embed_field\ProviderManagerInterface;
 use Drupal\Core\Field\FieldItemBase;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The embed provider plugin manager.
    *
-   * @var \Drupal\audio_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/audio_embed_field/src/Plugin/Field/FieldFormatter/Thumbnail.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The embed provider plugin manager.
    *
-   * @var \Drupal\audio_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\audio_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   Provider Manager Interface.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   Image Style Storage.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, ProviderManagerInterface $provider_manager, EntityStorageInterface $image_style_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/audio_embed_field/src/Plugin/Field/FieldFormatter/Colorbox.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The field formatter plugin instance for thumbnails.
    *
-   * @var \Drupal\Core\Field\FormatterInterface
+   * @var FormatterInterface
    */
   protected $thumbnailFormatter;

@@ @@
   /**
    * The field formatterp plguin instance for audio.
    *
-   * @var \Drupal\Core\Field\FormatterInterface
+   * @var FormatterInterface
    */
   protected $audioFormatter;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Field\FormatterInterface $thumbnail_formatter
+   * @param FormatterInterface $thumbnail_formatter
    *   The field formatter for thumbnails.
-   * @param \Drupal\Core\Field\FormatterInterface $audio_formatter
+   * @param FormatterInterface $audio_formatter
    *   The field formatter for audio.
    * @param \Drupal\colorbox\ElementAttachmentInterface|null $colorbox_attachment
    *   The colorbox attachment if colorbox is enabled.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/audio_embed_field/src/Plugin/Field/FieldFormatter/Audio.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The embed provider plugin manager.
    *
-   * @var \Drupal\audio_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * The logged in user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\audio_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The audio embed provider manager.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The logged in user.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, ProviderManagerInterface $provider_manager, AccountInterface $current_user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/audio_embed_field/src/Annotation/AudioEmbedProvider.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\audio_embed_field\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


9) modules/contrib/audio_embed_field/modules/audio_embed_media_core/src/Plugin/media/Source/AudioEmbedField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\audio_embed_media_core\Plugin\media\Source;

+use Drupal\Core\Config\Config;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The audio provider manager.
    *
-   * @var \Drupal\audio_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * The media settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $mediaSettings;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   Config field type manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\audio_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The audio provider manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, FieldTypePluginManagerInterface $field_type_manager, ConfigFactoryInterface $config_factory, ProviderManagerInterface $provider_manager) {
@@ @@
   /**
    * Get the audio URL from a media entity.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   The media entity.
    *
    * @return string|bool
    *   A audio URL or FALSE on failure.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getAudioUrl(MediaInterface $media) {
     $media_type = $this->entityTypeManager
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/audio_embed_field/modules/audio_embed_media_core/audio_embed_media_core.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\File\FileSystem;
 /**
  * @file
  * Install file for audio_embed_media_core.
@@ @@
     ->getPath('audio_embed_media_core') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');

-  /** @var \Drupal\Core\File\FileSystem $file_system */
+  /** @var FileSystem $file_system */
   $file_system = \Drupal::service('file_system');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


11) modules/contrib/audio_embed_field/modules/audio_embed_media/audio_embed_media.install:9

    ---------- begin diff ----------
@@ @@
  */
 function audio_embed_media_install() {
   // Copy the audio icons into the right place.
-  $icon_folder = drupal_get_path('module', 'audio_embed_media') . '/images/icons';
+  $icon_folder = \Drupal::service('extension.list.module')->getPath('audio_embed_media') . '/images/icons';
   $destination = \Drupal::config('media_entity.settings')->get('icon_base');
   media_entity_copy_icons($icon_folder, $destination);
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/audio_embed_field/modules/audio_embed_media/src/Plugin/M
         ediaEntity/Type/AudioEmbedField.php" file, due to:                     
         "Analyze error: "Class Drupal\media_entity\MediaTypeBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/audio_embed_field/modules/audio_embed_media/audio_embed_
         media.module" file, due to:                                            
         "Analyze error: "Class Drupal\media_entity\MediaTypeBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

