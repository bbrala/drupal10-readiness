diff --git a/leaflet_geojson_file.info.yml b/leaflet_geojson_file.info.yml
index 5adf162..fa53b61 100644
--- a/leaflet_geojson_file.info.yml
+++ b/leaflet_geojson_file.info.yml
@@ -1,7 +1,7 @@
 type: module
 name: Leaflet GeoJSON File
 description: 'Display and edit GeoJSON data from a file field.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:field
   - leaflet:leaflet
diff --git a/leaflet_geojson_file.module b/leaflet_geojson_file.module
index d4c0d32..2b02830 100644
--- a/leaflet_geojson_file.module
+++ b/leaflet_geojson_file.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\File\FileSystem;
 /**
  * @file
  */
@@ -26,7 +27,7 @@ function leaflet_geojson_file_search_api_data_type_info_alter(array &$data_type_
  * Implements hook_entity_insert().
  */
 function leaflet_geojson_file_entity_insert(EntityInterface $entity) {
-  /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+  /** @var ContentEntityInterface $entity */
   if (!$entity instanceof ContentEntityInterface) {
     return;
   }
@@ -51,14 +52,14 @@ function leaflet_geojson_file_entity_insert(EntityInterface $entity) {
     if ($widget_type['type'] == 'geojson_leaflet_widget') {
       $fid = $field->target_id;
       if ($fid) {
-        /** @var \Drupal\file\Entity\File $file */
+        /** @var File $file */
         $file = File::load($fid);
         if (strpos($file->getFileUri(), $entity->uuid())) {
-          /** @var \Drupal\Core\File\FileSystem $file_system */
+          /** @var FileSystem $file_system */
           $file_system = \Drupal::service('file_system');
 
           $destination = str_replace($entity->uuid(), $entity->id(), $file->getFileUri());
-          $file_new = file_move($file, $destination, FileSystemInterface::EXISTS_REPLACE);
+          $file_new = \Drupal::service('file.repository')->move($file, $destination, FileSystemInterface::EXISTS_REPLACE);
           $name = $file_system->basename($destination);
           $file_new->setFilename($name);
           $file_new->save();
diff --git a/src/LeafletGeoJsonService.php b/src/LeafletGeoJsonService.php
index e021396..e103365 100644
--- a/src/LeafletGeoJsonService.php
+++ b/src/LeafletGeoJsonService.php
@@ -62,13 +62,13 @@ class LeafletGeoJsonService extends LeafletService {
    * @return string
    */
   public function leafletProcessGeofieldFileUrl($fid, NodeInterface $entity) {
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = File::load($fid);
     if ($file) {
-      /** @var \Drupal\Core\Url $file_uri */
+      /** @var Url $file_uri */
       $file_uri = Url::fromUri($file->url());
       $file_uri->setOption('query', ['v' => $entity->getRevisionId()]);
-      return file_url_transform_relative($file_uri->toUriString());
+      return \Drupal::service('file_url_generator')->transformRelative($file_uri->toUriString());
 
     }
   }
diff --git a/src/Plugin/Field/FieldFormatter/LeafletGeoJsonFormatter.php b/src/Plugin/Field/FieldFormatter/LeafletGeoJsonFormatter.php
index 6efa3c7..ff56694 100644
--- a/src/Plugin/Field/FieldFormatter/LeafletGeoJsonFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/LeafletGeoJsonFormatter.php
@@ -34,17 +34,17 @@ class LeafletGeoJsonFormatter extends LeafletDefaultFormatter {
    *
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    * @param array $settings
    * @param $label
    * @param $view_mode
    * @param array $third_party_settings
-   * @param \Drupal\leaflet_geojson_file\LeafletGeoJsonService $leaflet_service
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
-   * @param \Drupal\Core\Utility\Token $token
-   * @param \Drupal\core\Render\Renderer $renderer
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LeafletGeoJsonService $leaflet_service
+   * @param EntityFieldManagerInterface $entity_field_manager
+   * @param Token $token
+   * @param Renderer $renderer
+   * @param ModuleHandlerInterface $module_handler
+   * @param LinkGeneratorInterface $link_generator
    */
   public function __construct(
     $plugin_id,
diff --git a/src/Plugin/Field/FieldWidget/LeafletGeoJsonWidget.php b/src/Plugin/Field/FieldWidget/LeafletGeoJsonWidget.php
index a06a58b..e3689e8 100644
--- a/src/Plugin/Field/FieldWidget/LeafletGeoJsonWidget.php
+++ b/src/Plugin/Field/FieldWidget/LeafletGeoJsonWidget.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\leaflet_geojson_file\Plugin\Field\FieldWidget;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\field\Entity\FieldConfig;
+use Drupal\Core\File\FileSystem;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Entity\EntityFormInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -36,22 +39,22 @@ class LeafletGeoJsonWidget extends FileWidget {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\Core\Field\WidgetPluginManager
+   * @var WidgetPluginManager
    */
   private $widget_plugin_manager;
 
   /**
-   * @var \Drupal\leaflet\LeafletService
+   * @var LeafletService
    */
   private $leafletService;
 
   /**
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   private $file_system;
 
   /**
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManager
+   * @var StreamWrapperManager
    */
   private $stream_wrapper_manager;
 
@@ -126,7 +129,7 @@ class LeafletGeoJsonWidget extends FileWidget {
     $fid = $items[$delta]->target_id ?: NULL;
     $file = NULL;
     if (!empty($fid)) {
-      /** @var \Drupal\file\Entity\File $file */
+      /** @var File $file */
       $file = File::load($fid);
     }
 
@@ -224,29 +227,29 @@ class LeafletGeoJsonWidget extends FileWidget {
 
       if (!empty($value['fids']) && !empty($value['fids']['0'])) {
         $fid = $value['fids']['0'];
-        /** @var \Drupal\file\Entity\File $file */
+        /** @var File $file */
         $file = File::load($fid);
-        file_save_data($data, $file->getFileUri(), FileSystemInterface::EXISTS_REPLACE);
+        \Drupal::service('file.repository')->writeData($data, $file->getFileUri(), FileSystemInterface::EXISTS_REPLACE);
       }
       else {
         if ($form_state->getFormObject() instanceof EntityFormInterface) {
-          /** @var \Drupal\Core\Entity\EntityInterface $entity */
+          /** @var EntityInterface $entity */
           $entity = $form_state->getFormObject()->getEntity();
 
-          /** @var \Drupal\field\Entity\FieldConfig $field_definition */
+          /** @var FieldConfig $field_definition */
           $field_definition = $entity->getFieldDefinition($field_name);
           $field_storage = $field_definition->getFieldStorageDefinition();
           $destination_scheme_name = $field_storage->getSetting('uri_scheme');
           $directory = $field_definition->getSetting('file_directory');
 
-          /** @var \Drupal\Core\File\FileSystem $file_system */
+          /** @var FileSystem $file_system */
           $file_system = \Drupal::service('file_system');
           $stream_wrapper_manager = \Drupal::service('stream_wrapper_manager');
           $stream_wrapper = $stream_wrapper_manager->getViaScheme($destination_scheme_name);
           $destination = $stream_wrapper->getUri() . $directory . '/' . $entity->uuid() . '-' . $field_name . '.json';
           $dirname = $file_system->dirname($destination);
           $file_system->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY);
-          $file = file_save_data($value['geojson_input'], $destination, FileSystemInterface::EXISTS_REPLACE);
+          $file = \Drupal::service('file.repository')->writeData($value['geojson_input'], $destination, FileSystemInterface::EXISTS_REPLACE);
           if ($file) {
             $values['fids'][] = $file->id();
             NestedArray::setValue($form_state->getValues(), $element['#parents'], $values);
diff --git a/src/Plugin/search_api/processor/GeoJson.php b/src/Plugin/search_api/processor/GeoJson.php
index e397bb1..09e37fd 100644
--- a/src/Plugin/search_api/processor/GeoJson.php
+++ b/src/Plugin/search_api/processor/GeoJson.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\leaflet_geojson_file\Plugin\search_api\processor;
 
+use Drupal\search_api\Item\FieldInterface;
+use Drupal\search_api\Entity\Index;
 use Drupal\file\Entity\File;
 use Drupal\search_api\Processor\ProcessorPluginBase;
 
@@ -29,9 +31,9 @@ class GeoJson extends ProcessorPluginBase {
    */
   public function preprocessIndexItems(array $items) {
     foreach ($items as $item) {
-      /** @var \Drupal\search_api\Item\FieldInterface $field */
+      /** @var FieldInterface $field */
       foreach ($item->getFields() as $field) {
-        /** @var \Drupal\search_api\Entity\Index $index */
+        /** @var Index $index */
         $index = $field->getIndex();
         $field_settings = $index->getField($field->getFieldIdentifier());
         if ('rpt_json' === $field_settings->getType()) {
