modules/contrib/opensearchtab/opensearchtab.module
modules/contrib/opensearchtab/src/Controller/OpenSearchDescriptionController.php
modules/contrib/opensearchtab/src/Form/OpenSearchSettingsForm.php
modules/contrib/opensearchtab/src/Services/OpenSearchDescriptionXmlService.php
modules/contrib/opensearchtab/src/Tests/OpenSearchDescriptionTest.php
modules/contrib/opensearchtab/src/Tests/OpenSearchSettingsFormTest.php

4 files with changes
====================

1) modules/contrib/opensearchtab/src/Tests/OpenSearchSettingsFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\opensearchtab\Tests;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\user\Entity\Role;

@@ @@
   /**
    * The role anonymous user.
    *
-   * @var \Drupal\user\Entity\Role
+   * @var Role
    */
   private $guestRole;

@@ @@
   /**
    * An user with administration permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   private $adminUser;

@@ @@
   /**
    * An user with guest permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   private $guestUser;

@@ @@
    * Info to administrator permissions:
    * http://drupal.stackexchange.com/q/233416/72107
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->guestRole = Role::load('anonymous');
@@ @@

     // Test the empty form.
     $this->drupalGet('admin/config/search/opensearchtab');
-    $this->assertResponse(200);
-    $this->assertText(
-      'See the XML of the open search tab:',
-      'Infobox text is shown.'
-    );
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('See the XML of the open search tab:');

-    $this->assertFieldByName(
-      'opensearchtab_search_form_path',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_search_path',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_json',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_xml',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_shortname',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_description',
-      '',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_favicon_path',
-      '',
-      'The field was found with the correct value.'
-    );
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_form_path', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_path', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_json', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_xml', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_shortname', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_description', '');
+    $this->assertSession()->fieldValueEquals('opensearchtab_favicon_path', '');

-    $this->assertNoFieldByName(
-      'test_field',
-      'test value'
-    );
+    $this->assertSession()->fieldValueNotEquals('test_field', 'test value');

     // Test saving the form.
     $edit = [
@@ @@
       'opensearchtab_description' => 'My site search',
       'opensearchtab_favicon_path' => '/themes/contrib/mytheme/favicon.ico',
     ];
-    $this->drupalPostForm(NULL,
-      $edit,
-      t('Save configuration')
-    );
+    $this->submitForm($edit, t('Save configuration'));

-    $this->assertText(
-      'The configuration options have been saved.',
-      'The form was saved correctly.'
-    );
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');

     // Test the updated the form.
-    $this->assertFieldByName(
-      'opensearchtab_search_form_path',
-      '/my-search',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_search_path',
-      '/my-search?{searchTerms}',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_json',
-      '/suggestions?{searchTerms}',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_suggestions_path_xml',
-      '/suggestions?{searchTerms}',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_shortname',
-      'My site',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_description',
-      'My site search',
-      'The field was found with the correct value.'
-    );
-    $this->assertFieldByName(
-      'opensearchtab_favicon_path',
-      '/themes/contrib/mytheme/favicon.ico',
-      'The field was found with the correct value.'
-    );
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_form_path', '/my-search');
+    $this->assertSession()->fieldValueEquals('opensearchtab_search_path', '/my-search?{searchTerms}');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_json', '/suggestions?{searchTerms}');
+    $this->assertSession()->fieldValueEquals('opensearchtab_suggestions_path_xml', '/suggestions?{searchTerms}');
+    $this->assertSession()->fieldValueEquals('opensearchtab_shortname', 'My site');
+    $this->assertSession()->fieldValueEquals('opensearchtab_description', 'My site search');
+    $this->assertSession()->fieldValueEquals('opensearchtab_favicon_path', '/themes/contrib/mytheme/favicon.ico');

-    $this->assertNoFieldByName(
-      'test_field',
-      'test value'
-    );
+    $this->assertSession()->fieldValueNotEquals('test_field', 'test value');

   }

@@ @@
     $this->drupalLogin($this->guestUser);

     $this->drupalGet('admin/config/search/opensearchtab');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertNoFieldByNameRector
 * AssertResponseRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/opensearchtab/src/Tests/OpenSearchDescriptionTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\opensearchtab\Tests;

+use Symfony\Component\HttpFoundation\Request;
+use Drupal\user\Entity\User;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * A simple user with 'access content' permission.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $user;

@@ @@
   /**
    * Perform any initial set up tasks that run before every test method.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['access content']);
     $this->config = \Drupal::configFactory()
@@ @@

     // Display the open search description page.
     $this->drupalGet('opensearchdescription');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Test the tags.
-    $this->assertRaw('<OpenSearchDescription xmlns="http://a9.com/-/spec/opensearch/1.1/" xmlns:moz="http://www.mozilla.org/2006/browser/search/">');
-    $this->assertRaw('</OpenSearchDescription>');
-    $this->assertRaw('<ShortName>My site</ShortName>');
-    $this->assertRaw('<Description>My site search</Description>');
-    $this->assertRaw('<Url type="text/html" method="get" template="' .
+    $this->assertSession()->responseContains('<OpenSearchDescription xmlns="http://a9.com/-/spec/opensearch/1.1/" xmlns:moz="http://www.mozilla.org/2006/browser/search/">');
+    $this->assertSession()->responseContains('</OpenSearchDescription>');
+    $this->assertSession()->responseContains('<ShortName>My site</ShortName>');
+    $this->assertSession()->responseContains('<Description>My site search</Description>');
+    $this->assertSession()->responseContains('<Url type="text/html" method="get" template="' .
       $this->request->getSchemeAndHttpHost() . '/my-search?{searchTerms}"/>');
-    $this->assertRaw('<Url type="application/x-suggestions+json" method="get" template="' .
+    $this->assertSession()->responseContains('<Url type="application/x-suggestions+json" method="get" template="' .
       $this->request->getSchemeAndHttpHost() . '/suggestions?{searchTerms}"/>');
-    $this->assertRaw('<Url type="application/x-suggestions+xml" method="get" template="' .
+    $this->assertSession()->responseContains('<Url type="application/x-suggestions+xml" method="get" template="' .
       $this->request->getSchemeAndHttpHost() . '/suggestions?{searchTerms}"/>');
-    $this->assertRaw('<moz:SearchForm>' .
+    $this->assertSession()->responseContains('<moz:SearchForm>' .
       $this->request->getSchemeAndHttpHost() . '/my-search</moz:SearchForm>');
-    $this->assertRaw('<Image height="16" width="16" type="image/x-icon">' .
+    $this->assertSession()->responseContains('<Image height="16" width="16" type="image/x-icon">' .
       $this->request->getSchemeAndHttpHost() . '/themes/contrib/mytheme/favicon.ico</Image>');
   }
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/opensearchtab/src/Services/OpenSearchDescriptionXmlService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\opensearchtab\Services;

+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Config\ConfigFactory;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
@@ @@
   /**
    * System configurations.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $systemConfig;

@@ @@
   /**
    * Open Search Tab configurations.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $ostConfig;

@@ @@
   /**
    * A request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The current request.
    */
   public function __construct(ConfigFactory $config_factory, RequestStack $request_stack) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/opensearchtab/src/Controller/OpenSearchDescriptionController.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * A response object.
    *
-   * @var \Symfony\Component\HttpFoundation\Response
+   * @var Response
    */
   protected $response;

@@ @@
   /**
    * Open Search Description XML.
    *
-   * @var \Drupal\opensearchtab\Services\OpenSearchDescriptionXmlService
+   * @var OpenSearchDescriptionXmlService
    */
   protected $openSearchDefinitionXml;

@@ @@
   /**
    * Class constructor.
    *
-   * @param \Drupal\opensearchtab\Services\OpenSearchDescriptionXmlService $open_search_definition_xml
+   * @param OpenSearchDescriptionXmlService $open_search_definition_xml
    *   Open Search Description XML.
    */
   public function __construct(OpenSearchDescriptionXmlService $open_search_definition_xml) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

