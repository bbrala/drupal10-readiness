diff --git a/src/BackendBase.php b/src/BackendBase.php
index 53b3216..cd435db 100644
--- a/src/BackendBase.php
+++ b/src/BackendBase.php
@@ -46,7 +46,7 @@ abstract class BackendBase implements BackendInterface {
    * If the supplied context is a theme compiler context, then it will be used
    * to resolve theme-relative file paths.
    *
-   * @param \Drupal\compiler\CompilerContextInterface $context
+   * @param CompilerContextInterface $context
    *   A compiler context used to define a compilation.
    * @param string $path
    *   A path, possibly theme-relative.
@@ -102,7 +102,7 @@ abstract class BackendBase implements BackendInterface {
    * value must be absolute if not passed a theme compiler context; otherwise
    * the path is theme-relative.
    *
-   * @param \Drupal\compiler\CompilerContextInterface $context
+   * @param CompilerContextInterface $context
    *   A compiler context used to define a compilation.
    *
    * @return string|null
@@ -121,7 +121,7 @@ abstract class BackendBase implements BackendInterface {
   /**
    * Retrieve the source code to pass to the compiler.
    *
-   * @param \Drupal\compiler\CompilerContextInterface $context
+   * @param CompilerContextInterface $context
    *   A compiler context used to define a compilation.
    *
    * @return string
diff --git a/src/Element/ScssColor.php b/src/Element/ScssColor.php
index 2a658bf..0d7af3a 100644
--- a/src/Element/ScssColor.php
+++ b/src/Element/ScssColor.php
@@ -63,7 +63,7 @@ class ScssColor extends FormElement {
    *
    * @param array $element
    *   The element to process before being rendered.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ -109,7 +109,7 @@ class ScssColor extends FormElement {
    *
    * @param array $element
    *   The element that should be validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
diff --git a/src/Element/ScssFontFamily.php b/src/Element/ScssFontFamily.php
index f4e41d6..97af387 100644
--- a/src/Element/ScssFontFamily.php
+++ b/src/Element/ScssFontFamily.php
@@ -30,7 +30,7 @@ class ScssFontFamily extends FormElement {
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function addMoreAjax(array $form, FormStateInterface $form_state) {
@@ -51,7 +51,7 @@ class ScssFontFamily extends FormElement {
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function addMoreSubmit(array $form, FormStateInterface $form_state) {
@@ -129,7 +129,7 @@ class ScssFontFamily extends FormElement {
    *
    * @param array $element
    *   The element to process before being rendered.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ -205,7 +205,7 @@ class ScssFontFamily extends FormElement {
    *
    * @param array $element
    *   The element that should be validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
diff --git a/src/Element/ScssNumber.php b/src/Element/ScssNumber.php
index e2401ba..7c7ad2f 100644
--- a/src/Element/ScssNumber.php
+++ b/src/Element/ScssNumber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\compiler_scss\Element;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element\FormElement;
 
@@ -149,20 +150,20 @@ class ScssNumber extends FormElement {
    *
    * Each group is an array of unit labels keyed by unit name.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup[string][int]
+   * @var TranslatableMarkup [string][int]
    */
   protected static $units = [];
 
   /**
-   * Get an associative array of allowed unit options, keyed by unit name.
-   *
-   * @param int|null $type
-   *   The type(s) of unit to retrieve. See the contsants in this class for all
-   *   possible unit types. If null, all types are included (default: NULL).
-   *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[string]
-   *   An associative array of allowed unit options, keyed by unit name.
-   */
+  * Get an associative array of allowed unit options, keyed by unit name.
+  *
+  * @param int|null $type
+  *   The type(s) of unit to retrieve. See the contsants in this class for all
+  *   possible unit types. If null, all types are included (default: NULL).
+  *
+   * @return TranslatableMarkup [string]
+    An associative array of allowed unit options, keyed by unit name.
+  */
   public static function getAllowedUnits($type = NULL) {
     $groups = array_keys(self::$units);
     $type = is_int($type) ? $type : self::UNIT_ALL;
@@ -208,25 +209,25 @@ class ScssNumber extends FormElement {
   }
 
   /**
-   * Get an associative array of unit options for the supplied element.
-   *
-   * The supplied element's "#unit_options" property will determine the result
-   * of this method using the following algorithm:
-   *
-   * 1. If "#unit_options" is an array, it will be intersected with an internal
-   *    list of allowed unit options.
-   * 2. Else, if "#unit_options" is a string, the desired unit will be extracted
-   *    from an internal list of allowed unit options.
-   * 3. Else, if "#unit_options" is equivalent to TRUE, all allowed unit options
-   *    will be produced.
-   * 4. Else, no unit options will be produced.
-   *
-   * @param array $element
-   *   The element for which to get an associative array of unit options.
-   *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[string]
-   *   An associative array of unit option labels keyed by unit name.
-   */
+  * Get an associative array of unit options for the supplied element.
+  *
+  * The supplied element's "#unit_options" property will determine the result
+  * of this method using the following algorithm:
+  *
+  * 1. If "#unit_options" is an array, it will be intersected with an internal
+  *    list of allowed unit options.
+  * 2. Else, if "#unit_options" is a string, the desired unit will be extracted
+  *    from an internal list of allowed unit options.
+  * 3. Else, if "#unit_options" is equivalent to TRUE, all allowed unit options
+  *    will be produced.
+  * 4. Else, no unit options will be produced.
+  *
+  * @param array $element
+  *   The element for which to get an associative array of unit options.
+  *
+   * @return TranslatableMarkup [string]
+    An associative array of unit option labels keyed by unit name.
+  */
   protected static function getUnitOptions(array $element) {
     $allowed = self::getAllowedUnits();
     $desired = $element['#unit_options'];
@@ -388,7 +389,7 @@ class ScssNumber extends FormElement {
    *
    * @param array $element
    *   The element to process before being rendered.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ -438,7 +439,7 @@ class ScssNumber extends FormElement {
    *
    * @param array $element
    *   The element to which a unit select element should be added.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ -481,7 +482,7 @@ class ScssNumber extends FormElement {
    *
    * @param array $element
    *   The element to which a hidden unit input should be added.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ -510,7 +511,7 @@ class ScssNumber extends FormElement {
    *
    * @param array $element
    *   The element that should be validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
diff --git a/src/Plugin/Compiler/ScssCompiler.php b/src/Plugin/Compiler/ScssCompiler.php
index 928c8df..4e94ca7 100644
--- a/src/Plugin/Compiler/ScssCompiler.php
+++ b/src/Plugin/Compiler/ScssCompiler.php
@@ -27,7 +27,7 @@ class ScssCompiler extends CompilerPluginBase implements ContainerFactoryPluginI
   /**
    * The backend impementation for this compiler plugin.
    *
-   * @var \Drupal\compiler_scss\BackendInterface
+   * @var BackendInterface
    */
   protected $backend;
 
@@ -40,7 +40,7 @@ class ScssCompiler extends CompilerPluginBase implements ContainerFactoryPluginI
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\compiler_scss\BackendInterface $backend
+   * @param BackendInterface $backend
    *   The backend impementation for this compiler plugin.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, BackendInterface $backend) {
