diff --git a/a11y_form_helpers.info.yml b/a11y_form_helpers.info.yml
index a2ba10e..11be9e6 100644
--- a/a11y_form_helpers.info.yml
+++ b/a11y_form_helpers.info.yml
@@ -1,7 +1,7 @@
 name: 'A11Y: Form Helpers'
 description: Make forms more accessible.
 package: Accessibility
-core_version_requirement: ^9
+core_version_requirement: ^9.3 || ^10
 type: module
 
 dependencies:
diff --git a/a11y_form_helpers.module b/a11y_form_helpers.module
index 6a1b607..2d943ad 100644
--- a/a11y_form_helpers.module
+++ b/a11y_form_helpers.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\a11y_form_helpers\AutocompleteAttributeManagerInterface;
+use Drupal\a11y_form_helpers\AutocompleteAttributeManager;
+use Drupal\a11y_form_helpers\Plugin\AutocompleteAttributePluginBaseInterface;
 /**
  * @file
  * Hooks and alters for A11Y Form Helpers.
@@ -55,7 +58,7 @@ function a11y_form_helpers_theme_registry_alter(&$theme_registry) {
   // Replace default theme form-element.html.twig template from core.
   if (strpos($theme_registry['form_element']['path'], 'core/') === 0) {
     $path = explode('/', $theme_registry['form_element']['path']);
-    $module_path = drupal_get_path('module', 'a11y_form_helpers');
+    $module_path = \Drupal::service('extension.list.module')->getPath('a11y_form_helpers');
 
     if (file_exists($module_path . '/templates/' . $path[2])) {
       $theme_registry['form_element']['path'] = $module_path . '/templates/' . $path[2];
@@ -70,7 +73,7 @@ function a11y_form_helpers_theme_registry_alter(&$theme_registry) {
   // Replace default theme fieldset.html.twig template from core.
   if (strpos($theme_registry['fieldset']['path'], 'core/') === 0) {
     $path = explode('/', $theme_registry['fieldset']['path']);
-    $module_path = drupal_get_path('module', 'a11y_form_helpers');
+    $module_path = \Drupal::service('extension.list.module')->getPath('a11y_form_helpers');
 
     if (file_exists($module_path . '/templates/' . $path[2])) {
       $theme_registry['fieldset']['path'] = $module_path . '/templates/' . $path[2];
@@ -114,7 +117,7 @@ function a11y_form_helpers_preprocess_fieldset(&$variables) {
  * Implements hook_field_widget_third_party_settings_form().
  */
 function a11y_form_helpers_field_widget_third_party_settings_form(WidgetInterface $plugin, FieldDefinitionInterface $field_definition, $form_mode, array $form, FormStateInterface $form_state) {
-  /** @var \Drupal\a11y_form_helpers\AutocompleteAttributeManagerInterface $autocompleteAttrManager */
+  /** @var AutocompleteAttributeManagerInterface $autocompleteAttrManager */
   $autocompleteAttrManager = \Drupal::service('a11y_form_helpers.autocomplete_attribute');
 
   try {
@@ -147,7 +150,7 @@ function a11y_form_helpers_field_widget_settings_summary_alter(array &$summary,
   $purpose = $context['widget']->getThirdPartySetting('a11y_form_helpers', 'purpose');
 
   if (!empty($purpose)) {
-    /** @var \Drupal\a11y_form_helpers\AutocompleteAttributeManager $autocomplete_attr_manager */
+    /** @var AutocompleteAttributeManager $autocomplete_attr_manager */
     $autocomplete_attr_manager = \Drupal::service('a11y_form_helpers.autocomplete_attribute');
 
     $summary[] = t('Purpose: @key', [
@@ -167,11 +170,11 @@ function a11y_form_helpers_field_widget_form_alter(&$element, FormStateInterface
   }
 
   try {
-    /** @var \Drupal\a11y_form_helpers\AutocompleteAttributeManager $autocomplete_attr_manager */
+    /** @var AutocompleteAttributeManager $autocomplete_attr_manager */
     $autocomplete_attr_manager = \Drupal::service('a11y_form_helpers.autocomplete_attribute');
 
     if ($autocomplete_attr_manager->hasDefinition($plugin_id)) {
-      /** @var \Drupal\a11y_form_helpers\Plugin\AutocompleteAttributePluginBaseInterface $plugin */
+      /** @var AutocompleteAttributePluginBaseInterface $plugin */
       $plugin = $autocomplete_attr_manager->createInstance($plugin_id);
 
       $plugin->fieldWidgetFormAlter($element, $form_state, $context);
diff --git a/src/AutocompleteAttributeManager.php b/src/AutocompleteAttributeManager.php
index b034852..72ab3dd 100644
--- a/src/AutocompleteAttributeManager.php
+++ b/src/AutocompleteAttributeManager.php
@@ -21,9 +21,9 @@ class AutocompleteAttributeManager extends DefaultPluginManager implements Autoc
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cacheBackend, ModuleHandlerInterface $moduleHandler) {
@@ -42,7 +42,7 @@ class AutocompleteAttributeManager extends DefaultPluginManager implements Autoc
   public function getPurposes($field_type = NULL) {
     $purposes = [];
 
-    /** @var \Drupal\a11y_form_helpers\Plugin\AutocompleteAttributePluginBaseInterface $plugin */
+    /** @var AutocompleteAttributePluginBaseInterface $plugin */
     foreach ($this->getDefinitions() as $plugin) {
       if (!$field_type) {
         $purposes[$plugin['id']] = $plugin['label'];
diff --git a/src/Plugin/AutocompleteAttributePluginBaseInterface.php b/src/Plugin/AutocompleteAttributePluginBaseInterface.php
index 4cf2fcb..ce0548f 100644
--- a/src/Plugin/AutocompleteAttributePluginBaseInterface.php
+++ b/src/Plugin/AutocompleteAttributePluginBaseInterface.php
@@ -14,7 +14,7 @@ interface AutocompleteAttributePluginBaseInterface {
    *
    * @param array $element
    *   The element to alter.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    * @param array $context
    *   The context of the field widget.
