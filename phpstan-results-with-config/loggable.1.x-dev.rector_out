modules/contrib/loggable/loggable.install
modules/contrib/loggable/src/Entity/LoggableFilter.php
modules/contrib/loggable/src/Entity/LoggableFilterInterface.php
modules/contrib/loggable/src/Form/LoggableFilterDeleteForm.php
modules/contrib/loggable/src/Form/LoggableFilterForm.php
modules/contrib/loggable/src/Form/LoggableSettingsForm.php
modules/contrib/loggable/src/LoggableFilterHtmlRouteProvider.php
modules/contrib/loggable/src/LoggableFilterListBuilder.php
modules/contrib/loggable/src/Logger/Loggable.php

1 file with changes
===================

1) modules/contrib/loggable/src/Logger/Loggable.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\loggable\Logger;

+use Drupal\Core\Config\ImmutableConfig;
+use function GuzzleHttp\Promise\settle;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Promise;
 use Drupal\Core\Path\PathMatcherInterface;
@@ @@
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;

@@ @@
   /**
    * The modue configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a new Loggable object.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(ClientInterface $http_client, PathMatcherInterface $path_matcher, ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ @@

     // Build the event payload.
     $data = [
-      'type' => Unicode::substr($context['channel'], 0, self::FIELD_MAXLENGTH),
+      'type' => mb_substr($context['channel'], 0, self::FIELD_MAXLENGTH),
       'severity' => $levels[$level],
       'user' => !empty($account_name) ? $account_name : NULL,
       // TODO: Use link somehow?
       'url' => $context['request_uri'],
-      'message' => Unicode::substr(strtr($message, $placeholders), 0, self::MESSAGE_MAXLENGTH),
+      'message' => mb_substr(strtr($message, $placeholders), 0, self::MESSAGE_MAXLENGTH),
       'created' => $context['timestamp'],
     ];

@@ @@
     $requests = array_chunk(array_reverse($requests), self::ASYNC_MAX_REQUESTS);

     foreach ($requests as $batch) {
-      Promise\settle($batch)->wait();
+      settle($batch)->wait();
     }
   }
    ----------- end diff -----------

Applied rules:
 * UnicodeSubstrRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 1 file has been changed by Rector                                         

