diff --git a/composer.json b/composer.json
index c9557be..6c051c9 100644
--- a/composer.json
+++ b/composer.json
@@ -12,6 +12,6 @@
     }
   ],
   "require": {
-    "drupal/core": "^8.8 || ^9"
+    "drupal/core": "^9.1 || ^10"
   }
 }
diff --git a/google_optimize_js.info.yml b/google_optimize_js.info.yml
index 912ad03..901225d 100644
--- a/google_optimize_js.info.yml
+++ b/google_optimize_js.info.yml
@@ -3,7 +3,7 @@ description: Conditionally adds Google Optimize to certain pages via optimize.js
 package: A/B Testing
 configure: google_optimize_js.settings
 type: module
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.1 || ^10
 dependencies:
   - drupal:path_alias
 
diff --git a/src/Inclusion.php b/src/Inclusion.php
index ec04c9b..c1a675e 100644
--- a/src/Inclusion.php
+++ b/src/Inclusion.php
@@ -16,50 +16,50 @@ class Inclusion implements InclusionInterface {
   /**
    * The module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The admin context service.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;
 
   /**
    * The current path stack service.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPathStack;
 
   /**
    * The alias manager service.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The patch matcher service.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * Inclusion constructor.
    *
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The module configuration.
-   * @param \Drupal\Core\Routing\AdminContext $admin_context
+   * @param AdminContext $admin_context
    *   The admin context service.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path_stack
+   * @param CurrentPathStack $current_path_stack
    *   The current path stack service.
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   The alias manager service.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The patch matcher service.
    */
   public function __construct(ImmutableConfig $config, AdminContext $admin_context, CurrentPathStack $current_path_stack, AliasManagerInterface $alias_manager, PathMatcherInterface $path_matcher) {
diff --git a/tests/src/Functional/FrontendTest.php b/tests/src/Functional/FrontendTest.php
index 2cb38bc..ad14378 100644
--- a/tests/src/Functional/FrontendTest.php
+++ b/tests/src/Functional/FrontendTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_optimize_js\Functional;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -36,7 +37,7 @@ class FrontendTest extends BrowserTestBase {
     $this->assertStringNotContainsString('https://www.googleoptimize.com/optimize.js?id=GTM-XXXXXXX', $page_content);
     $this->assertStringNotContainsString('a,s,y,n,c,h,i,d,e', $page_content);
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+    /** @var ConfigFactoryInterface $config_factory */
     $config_factory = $this->container->get('config.factory');
 
     // Simulate if form validation has been defeated (ie by direct sql query).
@@ -70,7 +71,7 @@ class FrontendTest extends BrowserTestBase {
    */
   public function testAsynchronousStrategy() {
 
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+    /** @var ConfigFactoryInterface $config_factory */
     $config_factory = $this->container->get('config.factory');
 
     $config_factory->getEditable('google_optimize_js.settings')
diff --git a/tests/src/Functional/SettingsFormTest.php b/tests/src/Functional/SettingsFormTest.php
index 6e690bb..eea4c18 100644
--- a/tests/src/Functional/SettingsFormTest.php
+++ b/tests/src/Functional/SettingsFormTest.php
@@ -30,12 +30,12 @@ class SettingsFormTest extends BrowserTestBase {
 
     // Ensure that anonymous users are denied access.
     $this->drupalGet('/admin/config/system/google_optimize');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
 
     // Ensure that authenticated users without permission are denied access.
     $this->drupalLogin($this->drupalCreateUser());
     $this->drupalGet('/admin/config/system/google_optimize');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
   /**
@@ -46,7 +46,7 @@ class SettingsFormTest extends BrowserTestBase {
 
     // Ensure that authorized users are allowed access.
     $this->drupalGet('/admin/config/system/google_optimize');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     $edit = [
       'container' => '"</script><script>alert("XSS!");</script>',
@@ -57,8 +57,11 @@ class SettingsFormTest extends BrowserTestBase {
       'datalayer_js_weight' => 1,
     ];
 
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
-    $this->assertText('Container Id field is not in the right format.');
+    $this->submitForm($edit, 'Save configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Container Id field is not in the right format.');
 
     // Fill out the form.
     $edit = [
@@ -71,17 +74,17 @@ class SettingsFormTest extends BrowserTestBase {
       'loading_strategy' => 'asynchronous',
     ];
 
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');
 
     $config = $this->config('google_optimize_js.settings');
     foreach ($edit as $k => $v) {
 
       // Assert the value on the form has updated.
       $form_element = $this->getSession()->getPage()->findField($k);
-      $this->assertEqual($form_element->getValue(), $v);
+      $this->assertEquals($form_element->getValue(), $v);
 
       // Assert that configuration has updated.
-      $this->assertEqual($config->get($k), $v);
+      $this->assertEquals($config->get($k), $v);
     }
   }
 
diff --git a/tests/src/Functional/UpdateTest.php b/tests/src/Functional/UpdateTest.php
index 09e014c..4d75e53 100644
--- a/tests/src/Functional/UpdateTest.php
+++ b/tests/src/Functional/UpdateTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\google_optimize_js\Functional;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\FunctionalTests\Update\UpdatePathTestBase;
 
 /**
@@ -14,14 +16,14 @@ class UpdateTest extends UpdatePathTestBase {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->configFactory = $this->container->get('config.factory');
   }
@@ -29,7 +31,7 @@ class UpdateTest extends UpdatePathTestBase {
   /**
    * Gets an uncached copy of the module config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The module config.
    */
   protected function getModuleConfig() {
diff --git a/tests/src/Kernel/InclusionTest.php b/tests/src/Kernel/InclusionTest.php
index 979556e..6d3cf8c 100644
--- a/tests/src/Kernel/InclusionTest.php
+++ b/tests/src/Kernel/InclusionTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\google_optimize_js\Kernel;
 
+use Drupal\google_optimize_js\InclusionInterface;
+use Drupal\Core\Config\Config;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Path\CurrentPathStack;
 use Drupal\Core\Routing\AdminContext;
 use Drupal\KernelTests\KernelTestBase;
@@ -24,47 +27,43 @@ class InclusionTest extends KernelTestBase {
   /**
    * The subject under test.
    *
-   * @var \Drupal\google_optimize_js\InclusionInterface
+   * @var InclusionInterface
    */
   protected $instance;
 
   /**
    * The optimize configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The mocked current path stack service.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack|\PHPUnit\Framework\MockObject\MockObject
+   * @var CurrentPathStack|MockObject
    */
   protected $currentPathStack;
 
   /**
    * The mocked admin context service.
    *
-   * @var \Drupal\Core\Routing\AdminContext|\PHPUnit\Framework\MockObject\MockObject
+   * @var AdminContext|MockObject
    */
   protected $adminContext;
 
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig('google_optimize_js');
 
-    $this->currentPathStack = $this->getMockBuilder(CurrentPathStack::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->currentPathStack = $this->createMock(CurrentPathStack::class);
 
     $this->container->set('path.current', $this->currentPathStack);
 
-    $this->adminContext = $this->getMockBuilder(AdminContext::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->adminContext = $this->createMock(AdminContext::class);
 
     $this->container->set('router.admin_context', $this->adminContext);
 
