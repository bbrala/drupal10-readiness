diff --git a/apidae_tourisme.module b/apidae_tourisme.module
index 6e34b2b..bd3d9c7 100644
--- a/apidae_tourisme.module
+++ b/apidae_tourisme.module
@@ -1,10 +1,10 @@
 <?php
 
+use Drupal\apidae_tourisme\ApidaeSync;
 /**
  * @file
  * Contains hooks for module apidae_tourisme.
  */
-
 /**
  * Implements hook_cron().
  *
@@ -12,7 +12,7 @@
  */
 function apidae_tourisme_cron() {
   if (\Drupal::config('apidae_tourisme.config')->get('enabled')) {
-    /** @var \Drupal\apidae_tourisme\ApidaeSync $apidaeService */
+    /** @var ApidaeSync $apidaeService */
     $apidaeService = \Drupal::service('apidae_tourisme.sync');
     $apidaeService->sync(FALSE);
   }
diff --git a/apidae_tourisme_dates/src/EventSubscriber/ApidaeDatePresaveSubscriber.php b/apidae_tourisme_dates/src/EventSubscriber/ApidaeDatePresaveSubscriber.php
index 8523424..16e71ea 100644
--- a/apidae_tourisme_dates/src/EventSubscriber/ApidaeDatePresaveSubscriber.php
+++ b/apidae_tourisme_dates/src/EventSubscriber/ApidaeDatePresaveSubscriber.php
@@ -27,7 +27,7 @@ class ApidaeDatePresaveSubscriber implements EventSubscriberInterface {
   /**
    * The main function to alter the node.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent $event
+   * @param ApidaeNodePresaveEvent $event
    *   The Event object.
    */
   public function nodeUpdate(ApidaeNodePresaveEvent $event) {
diff --git a/apidae_tourisme_dates/src/EventSubscriber/ApidaeDateQueryBuilderSubscriber.php b/apidae_tourisme_dates/src/EventSubscriber/ApidaeDateQueryBuilderSubscriber.php
index 002a710..456cf18 100644
--- a/apidae_tourisme_dates/src/EventSubscriber/ApidaeDateQueryBuilderSubscriber.php
+++ b/apidae_tourisme_dates/src/EventSubscriber/ApidaeDateQueryBuilderSubscriber.php
@@ -27,7 +27,7 @@ class ApidaeDateQueryBuilderSubscriber implements EventSubscriberInterface {
   /**
    * The main function to alter the query.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent $event
+   * @param ApidaeQueryBuilderEvent $event
    *   The Event object.
    */
   public function alterQuery(ApidaeQueryBuilderEvent $event) {
diff --git a/apidae_tourisme_dates/src/Plugin/Field/FieldFormatter/ApidaeDate.php b/apidae_tourisme_dates/src/Plugin/Field/FieldFormatter/ApidaeDate.php
index 14619a5..6572b77 100644
--- a/apidae_tourisme_dates/src/Plugin/Field/FieldFormatter/ApidaeDate.php
+++ b/apidae_tourisme_dates/src/Plugin/Field/FieldFormatter/ApidaeDate.php
@@ -23,7 +23,7 @@ class ApidaeDate extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return array
diff --git a/apidae_tourisme_examples/src/EventSubscriber/ApidaeNodePresaveSubscriber.php b/apidae_tourisme_examples/src/EventSubscriber/ApidaeNodePresaveSubscriber.php
index dec81a6..610db9d 100644
--- a/apidae_tourisme_examples/src/EventSubscriber/ApidaeNodePresaveSubscriber.php
+++ b/apidae_tourisme_examples/src/EventSubscriber/ApidaeNodePresaveSubscriber.php
@@ -27,7 +27,7 @@ class ApidaeNodePresaveSubscriber implements EventSubscriberInterface {
   /**
    * The main function to alter the node.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent $event
+   * @param ApidaeNodePresaveEvent $event
    *   The Event object.
    */
   public function nodeUpdate(ApidaeNodePresaveEvent $event) {
diff --git a/apidae_tourisme_examples/src/EventSubscriber/ApidaeQueryBuilderSubscriber.php b/apidae_tourisme_examples/src/EventSubscriber/ApidaeQueryBuilderSubscriber.php
index 0736006..c700e68 100644
--- a/apidae_tourisme_examples/src/EventSubscriber/ApidaeQueryBuilderSubscriber.php
+++ b/apidae_tourisme_examples/src/EventSubscriber/ApidaeQueryBuilderSubscriber.php
@@ -27,7 +27,7 @@ class ApidaeQueryBuilderSubscriber implements EventSubscriberInterface {
   /**
    * The main function to alter the query.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent $event
+   * @param ApidaeQueryBuilderEvent $event
    *   The Event object.
    */
   public function alterQuery(ApidaeQueryBuilderEvent $event) {
diff --git a/src/ApidaeSync.php b/src/ApidaeSync.php
index 39311b3..9734089 100644
--- a/src/ApidaeSync.php
+++ b/src/ApidaeSync.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\apidae_tourisme;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent;
 use Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent;
 use Drupal\Component\Serialization\Json;
@@ -30,70 +34,70 @@ class ApidaeSync {
   /**
    * GuzzleHttp\ClientInterface definition.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
   /**
    * Module Handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Event Dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * State service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   private $state;
 
   /**
    * Logger chanel service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   private $logger;
 
   /**
    * Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private $messenger;
 
   /**
    * Entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
    * File System Service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   private $fileSystem;
 
@@ -191,25 +195,25 @@ class ApidaeSync {
   /**
    * Constructs a new ApidaeSync object.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   Guzzle client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler to check if i18n is enabled.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   Event dispatcher (@see ApidaeNodePresaveEvent, ApidaeQueryBuilderEvent).
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   Logger service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Messenger service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity Type Manager service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system service.
    */
   public function __construct(ClientInterface $http_client, ConfigFactoryInterface $config_factory, CacheBackendInterface $cacheBackend, ModuleHandlerInterface $module_handler, EventDispatcherInterface $eventDispatcher, StateInterface $state, LoggerChannelFactoryInterface $loggerFactory, MessengerInterface $messenger, EntityTypeManagerInterface $entityTypeManager, FileSystemInterface $fileSystem) {
@@ -253,9 +257,9 @@ class ApidaeSync {
    * @return bool
    *   Sync result.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function sync($forceUpdate = FALSE, array $ids = []) {
     $this->state->set('apidae.last_sync', date('U'));
@@ -322,9 +326,9 @@ class ApidaeSync {
   /**
    * @param array $objetsTouristiquesQueryIds
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function deleteDeprecatedObjects(array $objetsTouristiquesQueryIds): void {
     $objetsTouristiquesWebsiteIds = \Drupal::database()
@@ -588,9 +592,9 @@ class ApidaeSync {
    * @param bool $forceUpdate
    *   If true, the update is forced, even if the content update is after.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function parseOject(array $apidaeObject, array &$results, $forceUpdate = FALSE) {
     $modificationDate = \DateTime::createFromFormat("Y-m-d\TH:i:s.uP", $apidaeObject['gestion']['dateModification']);
@@ -599,7 +603,7 @@ class ApidaeSync {
       $locales = [];
     }
     if (!$objet = $this->entityTypeManager->getStorage('node')->loadByProperties(['type' => 'objet_touristique', 'field_id_ws' => $apidaeObject['id']])) {
-      /** @var \Drupal\node\Entity\Node $objet */
+      /** @var Node $objet */
       $objet = Node::create([
         'field_id_ws' => $apidaeObject['id'],
         'langcode' => $this->langcode,
@@ -616,7 +620,7 @@ class ApidaeSync {
     else {
       $is_new = FALSE;
       $objet = array_pop($objet);
-      /** @var \Drupal\node\Entity\Node $objet */
+      /** @var Node $objet */
       if (!$forceUpdate && $objet->getChangedTime() > $modificationDate->format('U')) {
         $results['not_updated']++;
         return;
@@ -846,13 +850,13 @@ class ApidaeSync {
         }
         if ($data = file_get_contents($url)) {
           if ($this->mediaImageStyle !== NULL) {
-            $file = file_save_data($data, $temporarydDestination, FileSystemInterface::EXISTS_REPLACE);
+            $file = \Drupal::service('file.repository')->writeData($data, $temporarydDestination, FileSystemInterface::EXISTS_REPLACE);
             $style->createDerivative($temporarydDestination, $destination);
             unlink($temporarydDestination);
             $file->setFileUri($destination);
           }
           else {
-            $file = file_save_data($data, $destination, FileSystemInterface::EXISTS_REPLACE);
+            $file = \Drupal::service('file.repository')->writeData($data, $destination, FileSystemInterface::EXISTS_REPLACE);
           }
           $file->save();
           $files[] = [
diff --git a/src/Commands/Apidae.php b/src/Commands/Apidae.php
index 98daf69..5b00404 100644
--- a/src/Commands/Apidae.php
+++ b/src/Commands/Apidae.php
@@ -8,7 +8,7 @@ use Drush\Commands\DrushCommands;
 class Apidae extends DrushCommands {
 
   /**
-   * @var \Drupal\apidae_tourisme\ApidaeSync
+   * @var ApidaeSync
    */
   protected $apidaeSync;
 
diff --git a/src/Controller/ApidaeController.php b/src/Controller/ApidaeController.php
index 17271ad..5597d8f 100644
--- a/src/Controller/ApidaeController.php
+++ b/src/Controller/ApidaeController.php
@@ -17,7 +17,7 @@ class ApidaeController extends ControllerBase {
   /**
    * Drupal\apidae_tourisme\ApidaeSync definition.
    *
-   * @var \Drupal\apidae_tourisme\ApidaeSync
+   * @var ApidaeSync
    */
   protected $apidaeTourismeSync;
 
diff --git a/src/Event/ApidaeNodePresaveEvent.php b/src/Event/ApidaeNodePresaveEvent.php
index a0e4a75..295da3d 100644
--- a/src/Event/ApidaeNodePresaveEvent.php
+++ b/src/Event/ApidaeNodePresaveEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\apidae_tourisme\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\node\Entity\Node;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event dispatched before the saving of a node.
@@ -17,7 +17,7 @@ class ApidaeNodePresaveEvent extends Event {
   /**
    * The Node object.
    *
-   * @var \Drupal\node\Entity\Node
+   * @var Node
    */
   protected $node;
 
@@ -52,7 +52,7 @@ class ApidaeNodePresaveEvent extends Event {
   /**
    * ApidaeNodePresaveEvent constructor.
    *
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    *   The node object.
    * @param array $apidaeObject
    *   The Apidae object.
@@ -74,7 +74,7 @@ class ApidaeNodePresaveEvent extends Event {
   /**
    * Return the implicated node.
    *
-   * @return \Drupal\node\Entity\Node
+   * @return Node
    *   The Node object.
    */
   public function getNode() : Node {
diff --git a/src/Event/ApidaeQueryBuilderEvent.php b/src/Event/ApidaeQueryBuilderEvent.php
index 9a30ab5..fdd97f5 100644
--- a/src/Event/ApidaeQueryBuilderEvent.php
+++ b/src/Event/ApidaeQueryBuilderEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\apidae_tourisme\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Event dispatched when the query is built, before it's execution.
diff --git a/src/Form/ApidaeConfigForm.php b/src/Form/ApidaeConfigForm.php
index 126b30f..10ba39b 100644
--- a/src/Form/ApidaeConfigForm.php
+++ b/src/Form/ApidaeConfigForm.php
@@ -17,7 +17,7 @@ class ApidaeConfigForm extends ConfigFormBase {
   /**
    * Apidae sync service.
    *
-   * @var \Drupal\apidae_tourisme\ApidaeSync
+   * @var ApidaeSync
    */
   protected $apidaeSync;
 
