diff --git a/cookiec.info.yml b/cookiec.info.yml
index a93a9f7..f1ae136 100644
--- a/cookiec.info.yml
+++ b/cookiec.info.yml
@@ -1,8 +1,7 @@
 name: CookieC
 type: module
-core: 8.x
 # version: 8.x-1.0
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 description: This module aims at making the website compliant with the new EU cookie regulation
 configure: cookiec.settings
 
diff --git a/src/Controller/Cookiec.php b/src/Controller/Cookiec.php
index 99c1953..2ea4bea 100644
--- a/src/Controller/Cookiec.php
+++ b/src/Controller/Cookiec.php
@@ -16,14 +16,14 @@ class Cookiec extends ControllerBase {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Cookiec constructor.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    */
   public function __construct(LanguageManagerInterface $languageManager) {
     $this->config = $this->config('cookiec.settings');
diff --git a/src/EventSubscriber/CookiecSubscriber.php b/src/EventSubscriber/CookiecSubscriber.php
index 84e450a..d101832 100644
--- a/src/EventSubscriber/CookiecSubscriber.php
+++ b/src/EventSubscriber/CookiecSubscriber.php
@@ -2,11 +2,12 @@
 
 namespace Drupal\cookiec\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Render\AttachmentsInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
@@ -23,14 +24,14 @@ class CookiecSubscriber implements EventSubscriberInterface {
   /**
    * The cookiec config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -38,8 +39,8 @@ class CookiecSubscriber implements EventSubscriberInterface {
   /**
    * CookiecSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param ConfigFactoryInterface $config
+   * @param LanguageManagerInterface $languageManager
    */
   public function __construct(ConfigFactoryInterface $config, LanguageManagerInterface $languageManager) {
     $this->config = $config->get('cookiec.settings');
@@ -47,9 +48,9 @@ class CookiecSubscriber implements EventSubscriberInterface {
   }
 
   /**
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    */
-  public function showPopupMessage(FilterResponseEvent $event) {
+  public function showPopupMessage(ResponseEvent $event) {
 
     // Check permissions to display message.
     $response = $event->getResponse();
@@ -66,7 +67,7 @@ class CookiecSubscriber implements EventSubscriberInterface {
     );
 
     $twig = \Drupal::service('twig');
-    $template = $twig->loadTemplate(drupal_get_path('module', 'cookiec') . '/templates/cookiec_info.html.twig');
+    $template = $twig->loadTemplate(\Drupal::service('extension.list.module')->getPath('cookiec') . '/templates/cookiec_info.html.twig');
     $html_info = $template->render($variables);
 
 
@@ -76,7 +77,7 @@ class CookiecSubscriber implements EventSubscriberInterface {
       'hide' => 'hide',
     );
     $twig = \Drupal::service('twig');
-    $template = $twig->loadTemplate(drupal_get_path('module', 'cookiec') . '/templates/cookiec_agreed.html.twig');
+    $template = $twig->loadTemplate(\Drupal::service('extension.list.module')->getPath('cookiec') . '/templates/cookiec_agreed.html.twig');
     $html_agreed = $template->render($variables);
 
     $variables = array(
