diff --git a/config_split.module b/config_split.module
index 4b57df9..643f9b7 100644
--- a/config_split.module
+++ b/config_split.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\config_split\Entity\ConfigSplitEntityInterface;
 /**
  * @file
  * Configuration split module functions.
@@ -21,7 +22,7 @@ function config_split_form_config_admin_import_form_alter(&$form, FormStateInter
   $active_filters = array_filter($active_filters, function ($filter) {
     return $filter['status'];
   });
-  /** @var \Drupal\config_split\Entity\ConfigSplitEntityInterface $config_split_entity */
+  /** @var ConfigSplitEntityInterface $config_split_entity */
   foreach ($config_split_entities as $config_split_entity) {
     if (in_array('config_split:' . $config_split_entity->id(), array_keys($active_filters))) {
       $enabled[] = Link::fromTextAndUrl($config_split_entity->label(), $config_split_entity->toUrl())->toString();
diff --git a/src/Commands/ConfigSplitCommands.php b/src/Commands/ConfigSplitCommands.php
index e620fce..589ac14 100644
--- a/src/Commands/ConfigSplitCommands.php
+++ b/src/Commands/ConfigSplitCommands.php
@@ -17,14 +17,14 @@ class ConfigSplitCommands extends DrushCommands {
   /**
    * The interoperability cli service.
    *
-   * @var \Drupal\config_split\ConfigSplitCliService
+   * @var ConfigSplitCliService
    */
   protected $cliService;
 
   /**
    * ConfigSplitCommands constructor.
    *
-   * @param \Drupal\config_split\ConfigSplitCliService $cliService
+   * @param ConfigSplitCliService $cliService
    *   The CLI service which allows interoperability.
    */
   public function __construct(ConfigSplitCliService $cliService) {
diff --git a/src/ConfigSplitCliService.php b/src/ConfigSplitCliService.php
index b004e7f..4011a7f 100644
--- a/src/ConfigSplitCliService.php
+++ b/src/ConfigSplitCliService.php
@@ -2,6 +2,15 @@
 
 namespace Drupal\config_split;
 
+use Drupal\Core\Config\ConfigManager;
+use Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher;
+use Drupal\Core\ProxyClass\Lock\DatabaseLockBackend;
+use Drupal\Core\Config\TypedConfigManager;
+use Drupal\Core\Extension\ModuleHandler;
+use Drupal\Core\ProxyClass\Extension\ModuleInstaller;
+use Drupal\Core\Extension\ThemeHandler;
+use Drupal\Core\StringTranslation\TranslationManager;
+use Symfony\Component\Console\Style\StyleInterface;
 use Drupal\config_filter\Config\FilteredStorage;
 use Drupal\config_filter\Config\FilteredStorageInterface;
 use Drupal\config_filter\ConfigFilterManagerInterface;
@@ -47,91 +56,91 @@ class ConfigSplitCliService {
   /**
    * The filter manager.
    *
-   * @var \Drupal\config_filter\ConfigFilterManagerInterface
+   * @var ConfigFilterManagerInterface
    */
   protected $configFilterManager;
 
   /**
    * The config filter storage factory.
    *
-   * @var \Drupal\config_filter\ConfigFilterStorageFactory
+   * @var ConfigFilterStorageFactory
    */
   protected $storageFactory;
 
   /**
    * Drupal\Core\Config\ConfigManager definition.
    *
-   * @var \Drupal\Core\Config\ConfigManager
+   * @var ConfigManager
    */
   protected $configManager;
 
   /**
    * Active Config Storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $activeStorage;
 
   /**
    * Sync Config Storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $syncStorage;
 
   /**
    * Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher definition.
    *
-   * @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher
+   * @var ContainerAwareEventDispatcher
    */
   protected $eventDispatcher;
 
   /**
    * Drupal\Core\ProxyClass\Lock\DatabaseLockBackend definition.
    *
-   * @var \Drupal\Core\ProxyClass\Lock\DatabaseLockBackend
+   * @var DatabaseLockBackend
    */
   protected $lock;
 
   /**
    * Drupal\Core\Config\TypedConfigManager definition.
    *
-   * @var \Drupal\Core\Config\TypedConfigManager
+   * @var TypedConfigManager
    */
   protected $configTyped;
 
   /**
    * Drupal\Core\Extension\ModuleHandler definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
    * Drupal\Core\ProxyClass\Extension\ModuleInstaller definition.
    *
-   * @var \Drupal\Core\ProxyClass\Extension\ModuleInstaller
+   * @var ModuleInstaller
    */
   protected $moduleInstaller;
 
   /**
    * Drupal\Core\Extension\ThemeHandler definition.
    *
-   * @var \Drupal\Core\Extension\ThemeHandler
+   * @var ThemeHandler
    */
   protected $themeHandler;
 
   /**
    * Drupal\Core\StringTranslation\TranslationManager definition.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $stringTranslation;
 
   /**
    * The ModuleExtensionList to be passed to the config importer.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
@@ -181,7 +190,7 @@ public function __construct(
    *
    * @param string|null $split
    *   The split name to export, null for standard export.
-   * @param \Symfony\Component\Console\Style\StyleInterface|\ConfigSplitDrush8Io $io
+   * @param StyleInterface|\ConfigSplitDrush8Io $io
    *   The io interface of the cli tool calling the method.
    * @param callable $t
    *   The translation function akin to t().
@@ -225,7 +234,7 @@ public function ioExport($split, $io, callable $t, $confirmed = FALSE) {
    *
    * @param string|null $split
    *   The split name to import, null for standard import.
-   * @param \Symfony\Component\Console\Style\StyleInterface|\ConfigSplitDrush8Io $io
+   * @param StyleInterface|\ConfigSplitDrush8Io $io
    *   The $io interface of the cli tool calling.
    * @param callable $t
    *   The translation function akin to t().
@@ -287,9 +296,9 @@ public function ioImport($split, $io, callable $t, $confirmed = FALSE) {
    *
    * This is the quintessential config export.
    *
-   * @param \Drupal\Core\Config\StorageInterface $storage
+   * @param StorageInterface $storage
    *   The config storage to export to.
-   * @param \Drupal\Core\Config\StorageInterface|null $active
+   * @param StorageInterface|null $active
    *   The config storage to export from (optional).
    */
   public function export(StorageInterface $storage, StorageInterface $active = NULL) {
@@ -307,7 +316,7 @@ public function export(StorageInterface $storage, StorageInterface $active = NUL
    *
    * This is the quintessential config import.
    *
-   * @param \Drupal\Core\Config\StorageInterface $storage
+   * @param StorageInterface $storage
    *   The config storage to import from.
    *
    * @return string
@@ -425,9 +434,9 @@ protected function getDestination($config_name) {
    * This method is the copy of how it worked prior to Drupal 9.4.
    * See https://www.drupal.org/node/3273823 for more details.
    *
-   * @param \Drupal\Core\Config\StorageInterface $source
+   * @param StorageInterface $source
    *   The configuration storage to copy from.
-   * @param \Drupal\Core\Config\StorageInterface $target
+   * @param StorageInterface $target
    *   The configuration storage to copy to.
    */
   protected static function replaceStorageContents(StorageInterface $source, StorageInterface &$target) {
diff --git a/src/ConfigSplitEntityHtmlRouteProvider.php b/src/ConfigSplitEntityHtmlRouteProvider.php
index 4b9515c..d8c2364 100644
--- a/src/ConfigSplitEntityHtmlRouteProvider.php
+++ b/src/ConfigSplitEntityHtmlRouteProvider.php
@@ -32,10 +32,10 @@ public function getRoutes(EntityTypeInterface $entity_type) {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
diff --git a/src/ConfigSplitEntityListBuilder.php b/src/ConfigSplitEntityListBuilder.php
index 36dea99..8fd9916 100644
--- a/src/ConfigSplitEntityListBuilder.php
+++ b/src/ConfigSplitEntityListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_split;
 
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
@@ -17,7 +18,7 @@ class ConfigSplitEntityListBuilder extends ConfigEntityListBuilder {
   /**
    * The config factory that knows what is overwritten.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -35,11 +36,11 @@ public static function createInstance(ContainerInterface $container, EntityTypeI
   /**
    * Constructs a new EntityListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, ConfigFactoryInterface $config_factory) {
@@ -78,7 +79,7 @@ public function buildRow(EntityInterface $entity) {
    * {@inheritdoc}
    */
   public function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityInterface $entity */
+    /** @var ConfigEntityInterface $entity */
     $operations = parent::getDefaultOperations($entity);
     if (!$entity->get('status') && $entity->hasLinkTemplate('enable')) {
       $operations['enable'] = [
diff --git a/src/ConfigSplitEntityViewBuilder.php b/src/ConfigSplitEntityViewBuilder.php
index 17af20d..e85190d 100644
--- a/src/ConfigSplitEntityViewBuilder.php
+++ b/src/ConfigSplitEntityViewBuilder.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\config_split;
 
+use Drupal\config_filter\Plugin\ConfigFilterPluginManager;
+use Drupal\config_split\Entity\ConfigSplitEntityInterface;
+use Drupal\config_split\Plugin\ConfigFilter\SplitFilter;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityViewBuilder;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,7 +17,7 @@ class ConfigSplitEntityViewBuilder extends EntityViewBuilder {
   /**
    * The plugin manager for config filter plugins.
    *
-   * @var \Drupal\config_filter\Plugin\ConfigFilterPluginManager
+   * @var ConfigFilterPluginManager
    */
   protected $filterPluginManager;
 
@@ -31,11 +34,11 @@ public static function createInstance(ContainerInterface $container, EntityTypeI
    * {@inheritdoc}
    */
   public function viewMultiple(array $entities = [], $view_mode = 'full', $langcode = NULL) {
-    /** @var \Drupal\config_split\Entity\ConfigSplitEntityInterface[] $entities */
+    /** @var ConfigSplitEntityInterface[] $entities */
     $build = [];
 
     foreach ($entities as $entity_id => $entity) {
-      /** @var \Drupal\config_split\Plugin\ConfigFilter\SplitFilter $filter */
+      /** @var SplitFilter $filter */
       $filter = $this->filterPluginManager->getFilterInstance('config_split:' . $entity->id());
 
       // @todo: make this prettier.
diff --git a/src/Controller/ConfigSplitController.php b/src/Controller/ConfigSplitController.php
index 870b5c9..62eb3ce 100644
--- a/src/Controller/ConfigSplitController.php
+++ b/src/Controller/ConfigSplitController.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\config_split\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Controller\ControllerBase;
 
 /**
@@ -15,12 +19,12 @@ class ConfigSplitController extends ControllerBase {
    * @param string $config_split
    *   The split name.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function enableEntity($config_split) {
     $entity = $this->entityTypeManager()->getStorage('config_split')->load($config_split);
@@ -36,12 +40,12 @@ public function enableEntity($config_split) {
    * @param string $config_split
    *   The split name.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function disableEntity($config_split) {
     $entity = $this->entityTypeManager()->getStorage('config_split')->load($config_split);
diff --git a/src/Form/ConfigSplitEntityForm.php b/src/Form/ConfigSplitEntityForm.php
index c239c39..25d8591 100644
--- a/src/Form/ConfigSplitEntityForm.php
+++ b/src/Form/ConfigSplitEntityForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_split\Form;
 
+use Drupal\config_split\Entity\ConfigSplitEntityInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -17,23 +18,23 @@ class ConfigSplitEntityForm extends EntityForm {
   /**
    * The drupal state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Drupal\Core\Extension\ThemeHandler definition.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * Constructs a new class instance.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The drupal state.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler
+   * @param ThemeHandlerInterface $themeHandler
    *   The theme handler.
    */
   public function __construct(StateInterface $state, ThemeHandlerInterface $themeHandler) {
@@ -57,7 +58,7 @@ public static function create(ContainerInterface $container) {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\config_split\Entity\ConfigSplitEntityInterface $config */
+    /** @var ConfigSplitEntityInterface $config */
     $config = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
diff --git a/src/Plugin/ConfigFilter/SplitFilter.php b/src/Plugin/ConfigFilter/SplitFilter.php
index 5bb8f99..91db68c 100644
--- a/src/Plugin/ConfigFilter/SplitFilter.php
+++ b/src/Plugin/ConfigFilter/SplitFilter.php
@@ -31,14 +31,14 @@ class SplitFilter extends ConfigFilterBase implements ContainerFactoryPluginInte
   /**
    * The Configuration manager to calculate the dependencies.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $manager;
 
   /**
    * The storage for the config which is not part of the directory to sync.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $secondaryStorage;
 
@@ -58,9 +58,9 @@ class SplitFilter extends ConfigFilterBase implements ContainerFactoryPluginInte
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $manager
+   * @param ConfigManagerInterface $manager
    *   The config manager for retrieving dependent config.
-   * @param \Drupal\Core\Config\StorageInterface|null $secondary
+   * @param StorageInterface|null $secondary
    *   The config storage for the blacklisted config.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigManagerInterface $manager, StorageInterface $secondary = NULL) {
@@ -75,7 +75,7 @@ public function __construct(array $configuration, $plugin_id, $plugin_definition
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     // Get the configuration including overrides.
-    /** @var \Drupal\Core\Config\ImmutableConfig $config */
+    /** @var ImmutableConfig $config */
     $config = $container->get('config.factory')->get($configuration['config_name']);
     // Transfer the configuration values to the configuration array.
     $fields = [
@@ -432,12 +432,12 @@ protected static function inFilterList($name, array $list) {
   /**
    * Get the Secondary config storage that the split manages.
    *
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The configuration for the split.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection for creating a database storage.
    *
-   * @return \Drupal\Core\Config\StorageInterface
+   * @return StorageInterface
    *   The secondary storage to split to and from.
    */
   protected static function getSecondaryStorage(ImmutableConfig $config, Connection $connection) {
diff --git a/src/Plugin/ConfigFilter/SplitFilterDeriver.php b/src/Plugin/ConfigFilter/SplitFilterDeriver.php
index 0cd40d0..5d820a8 100644
--- a/src/Plugin/ConfigFilter/SplitFilterDeriver.php
+++ b/src/Plugin/ConfigFilter/SplitFilterDeriver.php
@@ -18,23 +18,23 @@ class SplitFilterDeriver extends DeriverBase implements ContainerDeriverInterfac
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
   /**
    * The config Factory to load the overridden configuration.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * SplitFilter constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage to load the split entities from.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory to load the configuration including overrides from.
    */
   public function __construct(EntityStorageInterface $entity_storage, ConfigFactoryInterface $config_factory) {
diff --git a/src/Tests/GhostStorageTest.php b/src/Tests/GhostStorageTest.php
index 840303a..2630b83 100644
--- a/src/Tests/GhostStorageTest.php
+++ b/src/Tests/GhostStorageTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_split\Tests;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\config_filter\Tests\ReadonlyStorageTest;
 use Drupal\config_split\Config\GhostStorage;
 use Drupal\Core\Config\StorageInterface;
@@ -14,13 +15,14 @@
  */
 class GhostStorageTest extends ReadonlyStorageTest {
 
+  use ProphecyTrait;
   /**
    * Override the storage decorating.
    *
-   * @param \Drupal\Core\Config\StorageInterface $source
+   * @param StorageInterface $source
    *   The storage to decorate.
    *
-   * @return \Drupal\config_split\Config\GhostStorage
+   * @return GhostStorage
    *   The storage to test.
    */
   protected function getStorage(StorageInterface $source) {
diff --git a/src/Tests/SplitFilterTest.php b/src/Tests/SplitFilterTest.php
index 2779474..fda4bbd 100644
--- a/src/Tests/SplitFilterTest.php
+++ b/src/Tests/SplitFilterTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\config_split\Tests;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Config\ConfigManagerInterface;
 use Drupal\config_split\Plugin\ConfigFilter\SplitFilter;
 use Drupal\Core\Config\DatabaseStorage;
 use Drupal\Core\Config\FileStorage;
@@ -19,6 +21,7 @@
  */
 class SplitFilterTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Test that the blacklist is correctly calculated.
    */
@@ -567,7 +570,7 @@ public function testSplitFilterCreate() {
   /**
    * Returns a SplitFilter that can be used to test its behaviour.
    *
-   * @param \Drupal\Core\Config\StorageInterface|null $storage
+   * @param StorageInterface|null $storage
    *   The Storage interface the filter can use as its alternative storage.
    * @param string[] $blacklist
    *   The blacklisted configuration that is filtered out.
@@ -582,7 +585,7 @@ public function testSplitFilterCreate() {
    * @param bool $skip_equal
    *   The flag to skip equal config in graylist exports.
    *
-   * @return \Drupal\config_split\Plugin\ConfigFilter\SplitFilter
+   * @return SplitFilter
    *   The filter to test.
    */
   protected function getFilter(StorageInterface $storage = NULL, array $blacklist = [], array $modules = [], array $themes = [], array $graylist = [], $name = 'config_split.config_split.test', $skip_equal = FALSE) {
@@ -611,7 +614,7 @@ protected function getFilter(StorageInterface $storage = NULL, array $blacklist
    * @param array $themes
    *   The array of themes.
    *
-   * @return \Drupal\Core\Config\ConfigManagerInterface
+   * @return ConfigManagerInterface
    *   The mocked config manager.
    */
   protected function getConfigManagerMock(array $blacklist = [], array $graylist = [], array $modules = [], array $themes = []) {
diff --git a/tests/src/Kernel/ConfigSplitCliServiceTest.php b/tests/src/Kernel/ConfigSplitCliServiceTest.php
index 974fbf9..f77d7a1 100644
--- a/tests/src/Kernel/ConfigSplitCliServiceTest.php
+++ b/tests/src/Kernel/ConfigSplitCliServiceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\config_split\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\config\Controller\ConfigController;
 use Drupal\config_filter\Config\FilteredStorage;
 use Drupal\Core\Archiver\Tar;
@@ -21,6 +22,7 @@
  */
 class ConfigSplitCliServiceTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * Modules to enable.
    *
@@ -41,7 +43,7 @@ class ConfigSplitCliServiceTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
diff --git a/tests/src/Kernel/ConfigSplitKernelTest.php b/tests/src/Kernel/ConfigSplitKernelTest.php
index f21eeb6..5d5679f 100644
--- a/tests/src/Kernel/ConfigSplitKernelTest.php
+++ b/tests/src/Kernel/ConfigSplitKernelTest.php
@@ -34,7 +34,7 @@ class ConfigSplitKernelTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(['config_test']);
   }
@@ -141,9 +141,9 @@ public function syncFolderIsConflictingProvider() {
    * This method is the copy of how it worked prior to Drupal 9.4.
    * See https://www.drupal.org/node/3273823 for more details.
    *
-   * @param \Drupal\Core\Config\StorageInterface $source
+   * @param StorageInterface $source
    *   The configuration storage to copy from.
-   * @param \Drupal\Core\Config\StorageInterface $target
+   * @param StorageInterface $target
    *   The configuration storage to copy to.
    */
   private static function replaceAllStorageContents(StorageInterface $source, StorageInterface &$target) {
diff --git a/tests/src/Kernel/IndividualExportImportTest.php b/tests/src/Kernel/IndividualExportImportTest.php
index 1c90b73..41b7888 100644
--- a/tests/src/Kernel/IndividualExportImportTest.php
+++ b/tests/src/Kernel/IndividualExportImportTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\config_split\Kernel;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\MemoryStorage;
 use Drupal\Core\Config\StorageInterface;
 use Drupal\KernelTests\KernelTestBase;
@@ -39,7 +40,7 @@ class IndividualExportImportTest extends KernelTestBase {
   /**
    * The split config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $split;
 
@@ -204,7 +205,7 @@ public function testImport() {
   /**
    * Get the config which is expected to be split off.
    *
-   * @return \Drupal\Core\Config\StorageInterface
+   * @return StorageInterface
    *   The config storage with the data the split should have.
    */
   protected function getSplitExpectationStorage(): StorageInterface {
@@ -226,7 +227,7 @@ protected function getSplitExpectationStorage(): StorageInterface {
   /**
    * Get random data in a config storage.
    *
-   * @return \Drupal\Core\Config\StorageInterface
+   * @return StorageInterface
    *   The storage witrh random data.
    */
   protected function getRandomDataStorage(): StorageInterface {
diff --git a/tests/src/Kernel/SplitTestTrait.php b/tests/src/Kernel/SplitTestTrait.php
index cca17d7..239296f 100644
--- a/tests/src/Kernel/SplitTestTrait.php
+++ b/tests/src/Kernel/SplitTestTrait.php
@@ -21,7 +21,7 @@ trait SplitTestTrait {
    * @param array $data
    *   The split config data.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   The split config object.
    */
   protected function createSplitConfig(string $name, array $data): Config {
@@ -53,10 +53,10 @@ protected function createSplitConfig(string $name, array $data): Config {
   /**
    * Get the storage for a split.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The split config.
    *
-   * @return \Drupal\Core\Config\StorageInterface
+   * @return StorageInterface
    *   The storage.
    */
   protected function getSplitSourceStorage(Config $config): StorageInterface {
@@ -71,10 +71,10 @@ protected function getSplitSourceStorage(Config $config): StorageInterface {
   /**
    * Get the preview storage for a split.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The split config.
    *
-   * @return \Drupal\Core\Config\StorageInterface
+   * @return StorageInterface
    *   The storage.
    */
   protected function getSplitPreviewStorage(Config $config): StorageInterface {
