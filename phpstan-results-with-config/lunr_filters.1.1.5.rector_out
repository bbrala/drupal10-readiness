modules/contrib/lunr_filters/lunr_filters.module
modules/contrib/lunr_filters/src/Controller/LunrFilterSearchIndexController.php
modules/contrib/lunr_filters/src/EventSubscriber/TomePathSubscriber.php
modules/contrib/lunr_filters/src/LunrFiltersServiceProvider.php
modules/contrib/lunr_filters/src/Plugin/views/display/LunrFiltersSearchIndex.php
modules/contrib/lunr_filters/src/Plugin/views/row/LunrFiltersSearchIndexRow.php
modules/contrib/lunr_filters/src/Plugin/views/style/LunrFiltersSearchIndexJson.php
modules/contrib/lunr_filters/src/Routing/RouteSubscriber.php

4 files with changes
====================

1) modules/contrib/lunr_filters/src/Plugin/views/row/LunrFiltersSearchIndexRow.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\lunr_filters\Plugin\views\row;

+use Drupal\views\ResultRow;
 use Drupal\lunr\Plugin\views\row\LunrSearchIndexRow;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\ViewExecutable;
@@ @@
    * {@inheritdoc}
    */
   public function render($row) {
-    /** @var \Drupal\views\ResultRow $row */
+    /** @var ResultRow $row */
     $field_options = (array) $this->options['field_options'];
     $output = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/lunr_filters/src/EventSubscriber/TomePathSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\lunr_filters\EventSubscriber;

+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\lunr\LunrSearchInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\tome_static\Event\CollectPathsEvent;
@@ @@
   /**
    * The Lunr search entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $lunrSearchStorage;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs the EntityPathSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, FileSystemInterface $file_system) {
@@ @@
    *   The collect paths event.
    */
   public function collectPaths(CollectPathsEvent $event) {
-    /** @var \Drupal\lunr\LunrSearchInterface $search */
+    /** @var LunrSearchInterface $search */
     foreach ($this->lunrSearchStorage->loadMultiple() as $search) {
       $directory = dirname($search->getBaseIndexPath());
       foreach (array_keys($this->fileSystem->scanDirectory($directory, '/.*/')) as $filename) {
@@ @@
         $event->addPath(file_create_url($filename), ['language_processed' => 'language_processed']);
       }
     }
-    $event->addPath(drupal_get_path('module', 'lunr_filters') . '/js/search.worker.js', ['language_processed' => 'language_processed']);
+    $event->addPath(\Drupal::service('extension.list.module')->getPath('lunr_filters') . '/js/search.worker.js', ['language_processed' => 'language_processed']);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/lunr_filters/src/Controller/LunrFilterSearchIndexController.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Provides a page to trigger the indexing process.
    *
-   * @param \Drupal\lunr\LunrSearchInterface $lunr_search
+   * @param LunrSearchInterface $lunr_search
    *   The Lunr search entity.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/lunr_filters/lunr_filters.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\views\ViewExecutable;
 /**
  * @file
  * Add filters to lunr search pages.
@@ @@
   $build['form']['#theme'] = 'lunr_filters_form';

   // Use our worker.
-  $build['#attached']['drupalSettings']['lunr']['workerPath'] = base_path() . drupal_get_path('module', 'lunr_filters') . '/js/search.worker.js';
+  $build['#attached']['drupalSettings']['lunr']['workerPath'] = base_path() . \Drupal::service('extension.list.module')->getPath('lunr_filters') . '/js/search.worker.js';

   // Get display and table headers fields.
   $display_fields = [];
@@ @@
     return;
   }

-  $new_path = '/' . drupal_get_path('module', 'lunr_filters') . '/js';
+  $new_path = '/' . \Drupal::service('extension.list.module')->getPath('lunr_filters') . '/js';
   $replacements = [
     'js/search.js' => $new_path . '/search.js',
     'js/search.theme.js' => $new_path . '/search.theme.js',
@@ @@
  * Implements hook_form_FORM_ID_form_alter().
  */
 function lunr_filters_form_views_exposed_form_alter(&$form, FormState $form_state) {
-  /** @var \Drupal\views\ViewExecutable $view */
+  /** @var ViewExecutable $view */
   $view = $form_state->get('view');

   // Only react on our display.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

