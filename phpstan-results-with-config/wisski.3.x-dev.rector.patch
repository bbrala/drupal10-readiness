diff --git a/wisski_adapter_sparql11_pb/src/Controller/Sparql11AutocompleteController.php b/wisski_adapter_sparql11_pb/src/Controller/Sparql11AutocompleteController.php
index d4689b25..9a81fcce 100755
--- a/wisski_adapter_sparql11_pb/src/Controller/Sparql11AutocompleteController.php
+++ b/wisski_adapter_sparql11_pb/src/Controller/Sparql11AutocompleteController.php
@@ -22,15 +22,15 @@
     private $autocomplete_suggestions_limit = 10;
 
   /**
-   * Returns response for the country name autocompletion.
-   *
-   * @param \Symfony\Component\HttpFoundation\Request $request
-   *   The current request object containing the search string.
-   *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
-   *   A JSON response containing the autocomplete suggestions for countries.
-   */
-    public function autocomplete(Request $request, $fieldid, $pathid, $pbid, $engineid) {
+				 * Returns response for the country name autocompletion.
+				 *
+				 * @param Request $request
+				 *   The current request object containing the search string.
+				 *
+				 * @return JsonResponse
+				 *   A JSON response containing the autocomplete suggestions for countries.
+				 */
+				public function autocomplete(Request $request, $fieldid, $pathid, $pbid, $engineid) {
 #      drupal_set_message("fun: " . serialize(func_get_args()));
 #      drupal_set_message("pb: " . serialize($pbid));
 #      $matches = array();
diff --git a/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php b/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php
index c8826895..ce029b76 100755
--- a/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php
+++ b/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php
@@ -72,7 +72,7 @@ class WisskiEntityReferenceLabelFormatter extends EntityReferenceLabelFormatter
 
       // for now we take the interface language
       $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
-      
+
       if(isset($label[$langcode][0]["value"]))
         $label = $label[$langcode][0]["value"];
       else {
@@ -80,8 +80,8 @@ class WisskiEntityReferenceLabelFormatter extends EntityReferenceLabelFormatter
         if(isset($cur_label[0]["value"]))
           $label = $cur_label[0]["value"];
       }
-        
-      
+
+
       // If the link is to be displayed and the entity has a uri, display a
       // link.
       if ($output_as_link ) {
diff --git a/wisski_adapters/dms/src/Plugin/wisski_salz/Engine/DmsEngine.php b/wisski_adapters/dms/src/Plugin/wisski_salz/Engine/DmsEngine.php
index 01402599..c19d7755 100755
--- a/wisski_adapters/dms/src/Plugin/wisski_salz/Engine/DmsEngine.php
+++ b/wisski_adapters/dms/src/Plugin/wisski_salz/Engine/DmsEngine.php
@@ -1066,9 +1066,9 @@ class DmsEngine extends NonWritableEngineBase implements PathbuilderEngineInterf
 #        dpm(serialize($a_ret), "??");
 #        dpm(microtime(), "start");
         $invnr = $a_ret['invnr'];
-        
+
         $invnr = urlencode($invnr);
-        
+
         $uri = "http://objektkatalog.gnm.de/objekt/" . $invnr;
 
         $uriname = AdapterHelper::getDrupalIdForUri($uri,TRUE,$this->adapterId());
diff --git a/wisski_adapters/dms/src/Query/Query.php b/wisski_adapters/dms/src/Query/Query.php
index 96fd6f16..0f042188 100755
--- a/wisski_adapters/dms/src/Query/Query.php
+++ b/wisski_adapters/dms/src/Query/Query.php
@@ -80,7 +80,7 @@ class Query extends WisskiQueryBase {
 #      dpm(serialize($this->condition->conditions()), "condi?");
 
       $num_conds = 0;
-      
+
       $eidcondition = array();
 
       foreach ($this->condition->conditions() as $condition) {
@@ -134,17 +134,17 @@ class Query extends WisskiQueryBase {
           } else {
             $giveback = array_values($eidquery); // array($thing['eid']);
           }
-          
+
           $eidcondition['field'] = $pb->id() . ".inventarnummer";
           $eidcondition['operator'] = "=";
-          
+
           $uris = AdapterHelper::getUrisForDrupalId($condition['value'], $adapterid);
           $invnr = substr($uris, strlen("http://objektkatalog.gnm.de/objekt/"));
 
           $invnr = urldecode($invnr);
-          
+
           $eidcondition['value'] = $invnr;
-          
+
 #          dpm($invnr);
           #$invnr = urlencode($invnr);
 
@@ -163,7 +163,7 @@ class Query extends WisskiQueryBase {
             } else {
 
             }    
-            
+
 #            dpm("bundle?");
             // load the bundles for this id
             $bundleids = $engine->getBundleIdsForEntityId($eid);        
@@ -180,25 +180,25 @@ class Query extends WisskiQueryBase {
 #          return $giveback;
 
         }
-        
+
 #        dpm($giveback);
-        
+
 #        return $giveback;
       }
-      
+
       if($num_conds == 1 && !empty($giveback)) {
         return $giveback;
       }
-      
+
 #      dpm("half");    
       //wisski_tick("field query half");
-      
+
 #      dpm($eidcondition, "eid?");
 
       foreach($this->condition->conditions() as $condition) {
-        
+
         $conditions = $this->condition->conditions();
-        
+
         if(!is_string($condition['field'])) {
           // might be one deeper
           $conditions = $condition['field']->conditions();
@@ -207,12 +207,12 @@ class Query extends WisskiQueryBase {
           $field = $condition['field'];
           $value = $condition['value'];
         }
-        
+
         $field = $condition['field'];
         $value = $condition['value'];
-        
+
 #        dpm($conditions);
-        
+
         // if there is an array in value but it has only one value (comes from delegator!)
         // then we take the value!
 #        if(is_array($value) && count($value) == 1)
diff --git a/wisski_adapters/getty/src/Plugin/wisski_salz/Engine/AatEngine.php b/wisski_adapters/getty/src/Plugin/wisski_salz/Engine/AatEngine.php
index 099b6d79..95183767 100755
--- a/wisski_adapters/getty/src/Plugin/wisski_salz/Engine/AatEngine.php
+++ b/wisski_adapters/getty/src/Plugin/wisski_salz/Engine/AatEngine.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_adapter_aat\Plugin\wisski_salz\Engine;
 
+use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\wisski_adapter_aat\Query\Query;
@@ -341,7 +342,7 @@ class AatEngine extends NonWritableEngineBase implements PathbuilderEngineInterf
   public function loadPropertyValuesForField($field_id, array $property_ids, array $entity_ids = NULL, $bundleid_in = NULL,$language = LanguageInterface::LANGCODE_DEFAULT) {
 #dpm(func_get_args(), 'lpvff');
 
-    $main_property = \Drupal\field\Entity\FieldStorageConfig::loadByName('wisski_individual', $field_id);
+    $main_property = FieldStorageConfig::loadByName('wisski_individual', $field_id);
     if(!empty($main_property)) {
       $main_property = $main_property->getMainPropertyName();
     }
diff --git a/wisski_adapters/zotero/src/Query/Query.php b/wisski_adapters/zotero/src/Query/Query.php
index 9bebef1c..e879d0a6 100755
--- a/wisski_adapters/zotero/src/Query/Query.php
+++ b/wisski_adapters/zotero/src/Query/Query.php
@@ -74,7 +74,7 @@ class Query extends WisskiQueryBase {
 
 #          dpm($condition, "I got this");
           foreach ($condition['field']->conditions() as $subcondition) {
-        
+
           $field = $subcondition['field'];
           $value = $subcondition['value'];
   #        dpm($field, "field");
diff --git a/wisski_apus/wisski_apus/src/StackingLogger.php b/wisski_apus/wisski_apus/src/StackingLogger.php
index c6e65ea4..8385b1b8 100755
--- a/wisski_apus/wisski_apus/src/StackingLogger.php
+++ b/wisski_apus/wisski_apus/src/StackingLogger.php
@@ -15,7 +15,7 @@ class StackingLogger implements LoggerInterface {
   
   /**
    * A logger that this logger optionally forwards to.
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $backingLogger = NULL;
   
@@ -31,7 +31,7 @@ class StackingLogger implements LoggerInterface {
   /**
    * The cache key used for caching or NULL if caching is disabled.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache_key = NULL;
   
diff --git a/wisski_apus/wisski_ckeditor/src/Form/EntityLinkDialog.php b/wisski_apus/wisski_ckeditor/src/Form/EntityLinkDialog.php
index 9794c519..cf382834 100755
--- a/wisski_apus/wisski_ckeditor/src/Form/EntityLinkDialog.php
+++ b/wisski_apus/wisski_ckeditor/src/Form/EntityLinkDialog.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_ckeditor\Form;
 
+use Drupal\editor\EditorInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -27,14 +28,14 @@ class EntityLinkDialog extends FormBase {
   /**
    * The editor storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $editorStorage;
 
   /**
    * The linkit profile storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkitProfileStorage;
 
@@ -48,9 +49,9 @@ class EntityLinkDialog extends FormBase {
   /**
    * Constructs a form object for linkit dialog.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $editor_storage
+   * @param EntityStorageInterface $editor_storage
    *   The editor storage service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $linkit_profile_storage
+   * @param EntityStorageInterface $linkit_profile_storage
    *   The linkit profile storage service.
    */
   public function __construct(EntityStorageInterface $editor_storage, EntityStorageInterface $linkit_profile_storage) {
@@ -78,7 +79,7 @@ class EntityLinkDialog extends FormBase {
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\filter\Entity\FilterFormat $filter_format
+   * @param FilterFormat $filter_format
    *   The filter format for which this dialog corresponds.
    * @param string $search
    *   A search string.
@@ -95,7 +96,7 @@ class EntityLinkDialog extends FormBase {
     $user_input = $form_state->getUserInput();
     $input = isset($user_input['editor_object']) ? $user_input['editor_object'] : [];
 
-    /** @var \Drupal\editor\EditorInterface $editor */
+    /** @var EditorInterface $editor */
     $editor = $this->editorStorage->load($filter_format->id());
     $linkit_profile_id = $editor->getSettings()['plugins']['wisski_quick_entity_picker']['linkit_profile'];
     $this->linkitProfile = $this->linkitProfileStorage->load($linkit_profile_id);
diff --git a/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/Annotation.php b/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/Annotation.php
index 484fcd87..a1ad6e35 100755
--- a/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/Annotation.php
+++ b/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/Annotation.php
@@ -49,7 +49,7 @@ class Annotation extends CKEditorPluginBase implements CKEditorPluginConfigurabl
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotation/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotation/plugin.js';
   }
 
   /**
@@ -80,11 +80,11 @@ class Annotation extends CKEditorPluginBase implements CKEditorPluginConfigurabl
     return array(
       'wisskiAddAnnotation' => array(
         'label' => t('Add Annotation'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotation/annotation.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotation/annotation.png',
       ),
       'wisskiDeleteAnnotation' => array(
         'label' => t('Delete Annotation'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotation/delete.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotation/delete.png',
       ),
     );
   }
diff --git a/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/AnnotationDialog.php b/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/AnnotationDialog.php
index bc271118..7e14bb22 100755
--- a/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/AnnotationDialog.php
+++ b/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/AnnotationDialog.php
@@ -50,7 +50,7 @@ class AnnotationDialog extends CKEditorPluginBase implements CKEditorPluginConfi
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotationDialog/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotationDialog/plugin.js';
   }
 
   /**
@@ -82,7 +82,7 @@ class AnnotationDialog extends CKEditorPluginBase implements CKEditorPluginConfi
     return array(
       'ToggleWisskiAnnotationDialog' => array(
         'label' => t('Annotation Sidebar'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotationDialog/annotationDialog.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotationDialog/annotationDialog.png',
       ),
     );
   }
diff --git a/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/QuickEntityPicker.php b/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/QuickEntityPicker.php
index 45c5235d..267f5167 100755
--- a/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/QuickEntityPicker.php
+++ b/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/QuickEntityPicker.php
@@ -30,7 +30,7 @@ class QuickEntityPicker extends CKEditorPluginBase implements CKEditorPluginConf
   /**
    * The QuickEntityPicker profile storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkitProfileStorage;
 
@@ -65,7 +65,7 @@ class QuickEntityPicker extends CKEditorPluginBase implements CKEditorPluginConf
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/entityLinkDialog/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/entityLinkDialog/plugin.js';
   }
 
   /**
@@ -96,7 +96,7 @@ class QuickEntityPicker extends CKEditorPluginBase implements CKEditorPluginConf
     return array(
       'EntityPicker' => array(
         'label' => t('WissKI Entity Picker'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/entityLinkDialog/entityLinkDialog.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/entityLinkDialog/entityLinkDialog.png',
       ),
     );
   }
diff --git a/wisski_apus/wisski_ckeditor/wisski_ckeditor.module b/wisski_apus/wisski_ckeditor/wisski_ckeditor.module
index 12a12b63..3423d62d 100755
--- a/wisski_apus/wisski_ckeditor/wisski_ckeditor.module
+++ b/wisski_apus/wisski_ckeditor/wisski_ckeditor.module
@@ -37,7 +37,7 @@ function wisski_ckeditor_ckeditor_plugin() {
     'wisski_apus_adapter' => array(
       'name' => 'wisski_apus_adapter',
       'desc' => t('WissKI Annotation Commons: Provides common features and buttons to annotate and link to instances'),
-      'path' => drupal_get_path('module', 'wisski_ckeditor') . '/js/wisski_apus_adapter/',
+      'path' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/wisski_apus_adapter/',
       'buttons' => array(
         'ToggleSubject' => array(
           'label' => 'Toggle Subject',
diff --git a/wisski_apus/wisski_pipe/src/Annotation/Processor.php b/wisski_apus/wisski_pipe/src/Annotation/Processor.php
index 5fed8950..58efe04a 100755
--- a/wisski_apus/wisski_pipe/src/Annotation/Processor.php
+++ b/wisski_apus/wisski_pipe/src/Annotation/Processor.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_pipe\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -35,7 +36,7 @@ class Processor extends Plugin {
    *
    * The string should be wrapped in a @Translation().
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
@@ -45,7 +46,7 @@ class Processor extends Plugin {
    *
    * The string should be wrapped in a @Translation().
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $description;
   
diff --git a/wisski_apus/wisski_pipe/src/Entity/Pipe.php b/wisski_apus/wisski_pipe/src/Entity/Pipe.php
index 0dd74ef2..ebd41d59 100755
--- a/wisski_apus/wisski_pipe/src/Entity/Pipe.php
+++ b/wisski_apus/wisski_pipe/src/Entity/Pipe.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_pipe\Entity;
 
+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
 use Drupal\wisski_pipe\PipeInterface;
@@ -101,7 +102,7 @@ class Pipe extends ConfigEntityBase implements PipeInterface {
   /**
    * Returns the attribute manager.
    *
-   * @return \Drupal\Component\Plugin\PluginManagerInterface
+   * @return PluginManagerInterface
    *   The attribute manager.
    */
   protected function getProcessorManager() {
diff --git a/wisski_apus/wisski_pipe/src/Form/Pipe/FormBase.php b/wisski_apus/wisski_pipe/src/Form/Pipe/FormBase.php
index b0c2d67b..09a096d9 100755
--- a/wisski_apus/wisski_pipe/src/Form/Pipe/FormBase.php
+++ b/wisski_apus/wisski_pipe/src/Form/Pipe/FormBase.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_pipe\Form\Pipe;
 
+use Drupal\wisski_pipe\PipeInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -18,7 +19,7 @@ abstract class FormBase extends EntityForm {
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $entity;
 
diff --git a/wisski_apus/wisski_pipe/src/Form/Processor/AddForm.php b/wisski_apus/wisski_pipe/src/Form/Processor/AddForm.php
index 2ba610f4..07a1b6cc 100755
--- a/wisski_apus/wisski_pipe/src/Form/Processor/AddForm.php
+++ b/wisski_apus/wisski_pipe/src/Form/Processor/AddForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_pipe\Form\Processor;
 
+use Drupal\wisski_pipe\ProcessorInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Component\Plugin\ConfigurablePluginInterface;
@@ -22,7 +23,7 @@ class AddForm extends FormBase {
   /**
    * The pipes to which the processors will be applied.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $pipe;
 
@@ -30,14 +31,14 @@ class AddForm extends FormBase {
   /**
    * The processor manager.
    *
-   * @var \Drupal\wisski_pipe\ProcessorManager
+   * @var ProcessorManager
    */
   protected $manager;
 
   /**
    * Constructs a new AddForm.
    *
-   * @param \Drupal\wisski_pipe\ProcessorManager $manager
+   * @param ProcessorManager $manager
    *   The processor manager.
    */
   public function __construct(ProcessorManager $manager) {
@@ -114,7 +115,7 @@ class AddForm extends FormBase {
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $form_state->cleanValues();
 
-    /** @var \Drupal\wisski_pipe\ProcessorInterface $plugin */
+    /** @var ProcessorInterface $plugin */
     $plugin = $this->manager->createInstance($form_state->getValue('plugin'));
 
     $plugin_uuid = $this->pipe->addProcessor($plugin->getConfiguration());
@@ -154,7 +155,7 @@ class AddForm extends FormBase {
       return strnatcasecmp($a['label'], $b['label']);
     });
     foreach ($all_plugins as $definition) {
-      /** @var \Drupal\wisski_pipe\ProcessorInterface $plugin */
+      /** @var ProcessorInterface $plugin */
       $plugin = $this->manager->createInstance($definition['id']);
       $row = [
         'label' => $plugin->getLabel(),
diff --git a/wisski_apus/wisski_pipe/src/Form/Processor/DeleteForm.php b/wisski_apus/wisski_pipe/src/Form/Processor/DeleteForm.php
index b651cf4f..87134a19 100755
--- a/wisski_apus/wisski_pipe/src/Form/Processor/DeleteForm.php
+++ b/wisski_apus/wisski_pipe/src/Form/Processor/DeleteForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_pipe\Form\Processor;
 
+use Drupal\wisski_pipe\ProcessorInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -21,14 +22,14 @@ class DeleteForm extends ConfirmFormBase {
   /**
    * The pipes that the processor is applied to.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $pipe;
 
   /**
    * The processor to be removed from the pipe.
    *
-   * @var \Drupal\wisski_pipe\ProcessorInterface
+   * @var ProcessorInterface
    */
   protected $processor;
 
diff --git a/wisski_apus/wisski_pipe/src/Form/Processor/EditForm.php b/wisski_apus/wisski_pipe/src/Form/Processor/EditForm.php
index 9fa1fc88..1ac6f758 100755
--- a/wisski_apus/wisski_pipe/src/Form/Processor/EditForm.php
+++ b/wisski_apus/wisski_pipe/src/Form/Processor/EditForm.php
@@ -21,7 +21,7 @@ class EditForm extends FormBase {
   /**
    * The pipes to which the processors will be applied.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $pipe;
 
diff --git a/wisski_apus/wisski_pipe/src/Form/Processor/OverviewForm.php b/wisski_apus/wisski_pipe/src/Form/Processor/OverviewForm.php
index 5e353049..e514060e 100755
--- a/wisski_apus/wisski_pipe/src/Form/Processor/OverviewForm.php
+++ b/wisski_apus/wisski_pipe/src/Form/Processor/OverviewForm.php
@@ -23,21 +23,21 @@ class OverviewForm extends FormBase {
   /**
    * The pipes to which the processors are applied to.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   private $pipe;
 
   /**
    * The processor manager.
    *
-   * @var \Drupal\wisski_pipe\ProcessorManager
+   * @var ProcessorManager
    */
   protected $manager;
 
   /**
    * Constructs a new OverviewForm.
    *
-   * @param \Drupal\wisski_pipe\ProcessorManager $manager
+   * @param ProcessorManager $manager
    *   The processor manager.
    */
   public function __construct(ProcessorManager $manager) {
diff --git a/wisski_apus/wisski_pipe/src/PipeListBuilder.php b/wisski_apus/wisski_pipe/src/PipeListBuilder.php
index 3ae526c0..7dbfb4ba 100755
--- a/wisski_apus/wisski_pipe/src/PipeListBuilder.php
+++ b/wisski_apus/wisski_pipe/src/PipeListBuilder.php
@@ -35,7 +35,7 @@ class PipeListBuilder extends ConfigEntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\wisski_pipe\PipeInterface $pipe */
+    /** @var PipeInterface $pipe */
     $pipe = $entity;
     $row['label'] = $pipe->label();
     $row['tags'] = join(", ", $pipe->getTags());
diff --git a/wisski_apus/wisski_pipe/src/PipeManager.php b/wisski_apus/wisski_pipe/src/PipeManager.php
index cb441117..1c880d09 100755
--- a/wisski_apus/wisski_pipe/src/PipeManager.php
+++ b/wisski_apus/wisski_pipe/src/PipeManager.php
@@ -6,6 +6,7 @@
  */
 
 namespace Drupal\wisski_pipe;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Psr\Log\LoggerInterface;
 
 
@@ -30,7 +31,7 @@ class PipeManager {
   /**
    * Gets the entity manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    */
   protected function getEntityManager() {
     if (!isset($this->entity_manager)) {
diff --git a/wisski_apus/wisski_pipe/src/ProcessorCollection.php b/wisski_apus/wisski_pipe/src/ProcessorCollection.php
index 9db4fe7c..60e22b30 100755
--- a/wisski_apus/wisski_pipe/src/ProcessorCollection.php
+++ b/wisski_apus/wisski_pipe/src/ProcessorCollection.php
@@ -24,7 +24,7 @@ class ProcessorCollection extends DefaultLazyPluginCollection {
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\wisski_pipe\ProcessorInterface
+   * @return ProcessorInterface
    */
   public function &get($instance_id) {
     return parent::get($instance_id);
diff --git a/wisski_apus/wisski_textanly/src/Plugin/CKEditorPlugin/Analyse.php b/wisski_apus/wisski_textanly/src/Plugin/CKEditorPlugin/Analyse.php
index 3d4cec61..9d38c342 100755
--- a/wisski_apus/wisski_textanly/src/Plugin/CKEditorPlugin/Analyse.php
+++ b/wisski_apus/wisski_textanly/src/Plugin/CKEditorPlugin/Analyse.php
@@ -49,7 +49,7 @@ class Analyse extends CKEditorPluginBase implements CKEditorPluginConfigurableIn
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_textanly') . '/js/plugins/analyse/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/js/plugins/analyse/plugin.js';
   }
 
   /**
@@ -77,11 +77,11 @@ class Analyse extends CKEditorPluginBase implements CKEditorPluginConfigurableIn
     return array(
       'wisskiAnalyse' => array(
         'label' => t('Analyse'),
-        'image' => drupal_get_path('module', 'wisski_textanly') . '/js/plugins/analyse/analyse.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/js/plugins/analyse/analyse.png',
       ),
       'wisskiAnalysisLog' => array(
         'label' => t('Show Analysis Log'),
-        'image' => drupal_get_path('module', 'wisski_textanly') . '/js/plugins/analyse/delete.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/js/plugins/analyse/delete.png',
       ),
     );
   }
diff --git a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.datetime.inc b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.datetime.inc
index 62640e61..c3be156f 100755
--- a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.datetime.inc
+++ b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.datetime.inc
@@ -16,7 +16,7 @@ function wisski_textanly_admin_analyse_datetime($op, $ap) {
     case 'edit':
 
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
 
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
@@ -297,18 +297,18 @@ function _wisski_textanly_analyse_datetime_match_format($text, $format, $spans,
 
 
   for ($i = 1; $i < $l; $i += 2) {
-    
+
     $regex = $format['pattern'][$i-1];
     $span_pattern = $format['pattern'][$i];
 
-    
-    
+
+
     if (preg_match_all("/$regex/us", $text, $matches, PREG_SET_ORDER | PREG_OFFSET_CAPTURE)) {
 
       foreach ($matches as $match) {
-        
+
         $vars = array();
-        
+
         // check the placeholders
         // we go through the already existing spans and look for
         // those already
@@ -316,7 +316,7 @@ function _wisski_textanly_analyse_datetime_match_format($text, $format, $spans,
           foreach ($format['placeholders'] as $var => $info) {
             $match_len = mb_strlen(trim($match[$var][0]));
             $match_pos = mb_strlen(substr($text, 0, $match[$var][1]));
-            
+
             $vars[$var] = array();
             $groups == (array) $info['groups'];
             foreach ($spans as $i => $span) {
@@ -336,7 +336,7 @@ function _wisski_textanly_analyse_datetime_match_format($text, $format, $spans,
             unset($match[$var]);
           }
         }
-        
+
         // workaround: preg returns the offset in bytes, not chars!
         $range = array(mb_strlen(substr($text, 0, $match[0][1])));
         $range[1] = $range[0] + mb_strlen(trim($match[0][0]));
@@ -344,7 +344,7 @@ function _wisski_textanly_analyse_datetime_match_format($text, $format, $spans,
         foreach ($match as $key => $val) {
           if (is_string($key)) $vars[$key] = $val[0];
         }
-        
+
         $my_args = array($settings, $format, $spans, $range, $vars, $args);
         $spans = call_user_func_array($callback, $my_args);
 
diff --git a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.regexp.inc b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.regexp.inc
index bc19bc00..10bb9746 100755
--- a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.regexp.inc
+++ b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.regexp.inc
@@ -16,7 +16,7 @@ function wisski_textanly_admin_analyse_regexp($op, $ap) {
     case 'edit':
 
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
 
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
diff --git a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.vocab.inc b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.vocab.inc
index bec450ee..d1524e1d 100755
--- a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.vocab.inc
+++ b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.vocab.inc
@@ -15,7 +15,7 @@ function wisski_textanly_admin_analyse_vocab($op, $ap) {
     case 'edit':
 
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
 
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
@@ -159,7 +159,7 @@ function wisski_textanly_admin_analyse_vocab($op, $ap) {
 
     case 'submit':
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
       
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
diff --git a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.install b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.install
index 68aec837..cb98b4b8 100755
--- a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.install
+++ b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.install
@@ -9,8 +9,8 @@ function wisski_textanly_install() {
   drupal_install_schema('wisski_textanly');
 
   // load person name info file into tables
-  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), drupal_get_path('module', 'wisski_textanly') . '/default_personnames.csv');
-  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), drupal_get_path('module', 'wisski_textanly') . '/default_persontypes.csv');
+  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_personnames.csv');
+  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_persontypes.csv');
 
   // set up a default vocab detection step
   $default_vocab = array(
diff --git a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.module b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.module
index 512c8c30..f26773cf 100755
--- a/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.module
+++ b/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.module
@@ -411,7 +411,7 @@ function wisski_textanly_wysiwyg_plugin($editor, $version) {
   $plugins = array(
     // sends the text to server and retrieves automatically generated annotations 
     'wisskiTextAnly' => array(
-      'path' => drupal_get_path('module', 'wisski_textanly') . '/tinymce_plugin.js',
+      'path' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/tinymce_plugin.js',
       'buttons' => array(
         'wisskiTextAnlyAuto' => t('Wisski Toggle Periodic Analysis'),
         'wisskiTextAnlyManual' => t('Wisski Analyse (Manual trigger)'),
@@ -473,8 +473,8 @@ function wisski_textanly_test_page() {
     '#value' => '<div><pre id="analyse_log" class="json_dump"></pre></div>',
   );
 
-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
  
   return $form;
 }
@@ -581,8 +581,8 @@ function wisski_textanly_html_log($ticket) {
     return "no ticket specified";
   }
   
-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
   
   $script = "WissKI.textanly.getLogs('$ticket');";
   drupal_add_js($script,  'inline', 'footer');
diff --git a/wisski_apus/wisski_textanly/wisski_textanly.analyse.datetime.inc b/wisski_apus/wisski_textanly/wisski_textanly.analyse.datetime.inc
index 21912a9c..30118b47 100755
--- a/wisski_apus/wisski_textanly/wisski_textanly.analyse.datetime.inc
+++ b/wisski_apus/wisski_textanly/wisski_textanly.analyse.datetime.inc
@@ -15,7 +15,7 @@ function wisski_textanly_admin_analyse_datetime($op, $ap) {
     case 'edit':
 
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
 
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
diff --git a/wisski_apus/wisski_textanly/wisski_textanly.analyse.mw_automaton.inc b/wisski_apus/wisski_textanly/wisski_textanly.analyse.mw_automaton.inc
index 17c381dd..823de0f2 100755
--- a/wisski_apus/wisski_textanly/wisski_textanly.analyse.mw_automaton.inc
+++ b/wisski_apus/wisski_textanly/wisski_textanly.analyse.mw_automaton.inc
@@ -16,7 +16,7 @@ function wisski_textanly_admin_analyse_mw_automaton($op, $ap) {
     case 'edit':
 
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
 
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
diff --git a/wisski_apus/wisski_textanly/wisski_textanly.analyse.regexp.inc b/wisski_apus/wisski_textanly/wisski_textanly.analyse.regexp.inc
index d7b4015f..e2869064 100755
--- a/wisski_apus/wisski_textanly/wisski_textanly.analyse.regexp.inc
+++ b/wisski_apus/wisski_textanly/wisski_textanly.analyse.regexp.inc
@@ -16,7 +16,7 @@ function wisski_textanly_admin_analyse_regexp($op, $ap) {
     case 'edit':
 
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
 
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
diff --git a/wisski_apus/wisski_textanly/wisski_textanly.analyse.vocab.inc b/wisski_apus/wisski_textanly/wisski_textanly.analyse.vocab.inc
index 61863e3e..87f04380 100755
--- a/wisski_apus/wisski_textanly/wisski_textanly.analyse.vocab.inc
+++ b/wisski_apus/wisski_textanly/wisski_textanly.analyse.vocab.inc
@@ -15,7 +15,7 @@ function wisski_textanly_admin_analyse_vocab($op, $ap) {
     case 'edit':
 
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
 
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
@@ -159,7 +159,7 @@ function wisski_textanly_admin_analyse_vocab($op, $ap) {
 
     case 'submit':
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
       
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
diff --git a/wisski_apus/wisski_textanly/wisski_textanly.install b/wisski_apus/wisski_textanly/wisski_textanly.install
index f25a1184..2af36e00 100755
--- a/wisski_apus/wisski_textanly/wisski_textanly.install
+++ b/wisski_apus/wisski_textanly/wisski_textanly.install
@@ -9,8 +9,8 @@ function wisski_textanly_install() {
   drupal_install_schema('wisski_textanly');
 
   // load personnames file into table
-  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', drupal_get_path('module', 'wisski_textanly') . '/default_personnames.csv');
-  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', drupal_get_path('module', 'wisski_textanly') . '/default_persontypes.csv');
+  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_personnames.csv');
+  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_persontypes.csv');
 
   // set up a default vocab detection step
   $default_vocab = array(
diff --git a/wisski_apus/wisski_textanly/wisski_textanly.module b/wisski_apus/wisski_textanly/wisski_textanly.module
index ee73ef65..2bf06eb6 100755
--- a/wisski_apus/wisski_textanly/wisski_textanly.module
+++ b/wisski_apus/wisski_textanly/wisski_textanly.module
@@ -424,7 +424,7 @@ function wisski_textanly_wysiwyg_plugin($editor, $version) {
   $plugins = array(
     // sends the text to server and retrieves automatically generated annotations 
     'wisskiTextAnly' => array(
-      'path' => drupal_get_path('module', 'wisski_textanly') . '/tinymce_plugin.js',
+      'path' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/tinymce_plugin.js',
       'buttons' => array(
         'wisskiTextAnlyAuto' => t('Wisski Toggle Periodic Analysis'),
         'wisskiTextAnlyManual' => t('Wisski Analyse (Manual trigger)'),
@@ -522,8 +522,8 @@ function wisski_textanly_test_page() {
     '#value' => '<div><pre id="analyse_log" class="json_dump"></pre></div>',
   );
 
-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
  
   return $form;
 }
@@ -630,8 +630,8 @@ function wisski_textanly_html_log($ticket) {
     return "no ticket specified";
   }
   
-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
   
   $script = "WissKI.textanly.getLogs('$ticket');";
   drupal_add_js($script,  'inline', 'footer');
diff --git a/wisski_apus/wisski_triplify/src/Plugin/wisski_pipe/Processor/TriplifyStandard.php b/wisski_apus/wisski_triplify/src/Plugin/wisski_pipe/Processor/TriplifyStandard.php
index 28b10784..b03d8f1b 100755
--- a/wisski_apus/wisski_triplify/src/Plugin/wisski_pipe/Processor/TriplifyStandard.php
+++ b/wisski_apus/wisski_triplify/src/Plugin/wisski_pipe/Processor/TriplifyStandard.php
@@ -667,7 +667,7 @@ class TriplifyStandard extends ProcessorBase {
   */
   function _wisski_texttrip_triplify_standard_relation(&$group_sources, $rel, $target_uri = NULL, $target_class = NULL) {
 
-    include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+    include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
     $path_data = wisski_pathbuilder_getPathData($rel);
     $source = $group_sources[$path_data['group_id']];
 
diff --git a/wisski_core/src/ContextProvider/WisskiIndividualContextProvider.php b/wisski_core/src/ContextProvider/WisskiIndividualContextProvider.php
index 305f8718..a3191b6c 100644
--- a/wisski_core/src/ContextProvider/WisskiIndividualContextProvider.php
+++ b/wisski_core/src/ContextProvider/WisskiIndividualContextProvider.php
@@ -23,7 +23,7 @@ class WisskiIndividualContextProvider implements ContextProviderInterface {
   /**
    * The route match object.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
@@ -31,7 +31,7 @@ class WisskiIndividualContextProvider implements ContextProviderInterface {
   /**
    * Constructs a new NodeRouteContext.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match object.
    */
   public function __construct(RouteMatchInterface $route_match) {
diff --git a/wisski_core/src/Controller/WisskiEntityController.php b/wisski_core/src/Controller/WisskiEntityController.php
index cb2c51ed..820d568d 100755
--- a/wisski_core/src/Controller/WisskiEntityController.php
+++ b/wisski_core/src/Controller/WisskiEntityController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core\Controller;
 
+use Drupal\node\NodeInterface;
 use Drupal\Core\Entity\Controller\EntityViewController;
 use Drupal\Core\Link;
 use Drupal\Component\Utility\Xss;
@@ -24,32 +25,32 @@ class WisskiEntityController extends ControllerBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;
 
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected EntityRepositoryInterface $entityRepository;
 
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, EntityRepositoryInterface $entity_repository) {
@@ -130,7 +131,7 @@ class WisskiEntityController extends ControllerBase {
    * @param int $wisski_individual_revision
    *   The node revision ID.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The page title.
    *
    * @throws \Exception
@@ -184,7 +185,7 @@ class WisskiEntityController extends ControllerBase {
   /**
    * Generates an overview table of older revisions of a node.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisski_individual
+   * @param WisskiEntityInterface $wisski_individual
    *   A node object.
    *
    * @return array
@@ -231,7 +232,7 @@ class WisskiEntityController extends ControllerBase {
     // dpm(serialize(
     // dpm("yay?");.
     foreach ($this->getRevisionIds($wisski_individual, $wisski_individual_storage) as $vid) {
-      /** @var \Drupal\node\NodeInterface $revision */
+      /** @var NodeInterface $revision */
       // dpm("yay2?");.
       // dpm(serialize($wisski_individual), "ind?");
       // dpm(serialize($vid), "vid?");
@@ -379,13 +380,12 @@ class WisskiEntityController extends ControllerBase {
   // return $this->t('Create @name', [
   // '@name' => wisski_individual_type->label()]);.
   // }
-
   /**
    * Gets a list of node revision IDs for a specific node.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisski_individual
+   * @param WisskiEntityInterface $wisski_individual
    *   The WissKI Individual.
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_individual_storage
+   * @param WisskiStorageInterface $wisski_individual_storage
    *   The WissKI Individual Storage.
    *
    * @return int[]
diff --git a/wisski_core/src/Controller/WisskiEntityListBuilder.php b/wisski_core/src/Controller/WisskiEntityListBuilder.php
index 99e71596..27a72f4a 100755
--- a/wisski_core/src/Controller/WisskiEntityListBuilder.php
+++ b/wisski_core/src/Controller/WisskiEntityListBuilder.php
@@ -255,7 +255,7 @@ class WisskiEntityListBuilder extends EntityListBuilder {
       $query->pager($this->limit);
       $query->range($this->page*$this->limit,$this->limit);
     }
-    
+
     $qgroup = $query->andConditionGroup();
     //dpm($query);
     if (!empty($this->bundle)) {
@@ -397,7 +397,7 @@ $timethis = microtime(TRUE);
 #    dpm("4.1: " . microtime());
     //let the bundle generate the entity title (normally from the title pattern)
     $entity_label = $this->bundle->generateEntityTitle($entity_id);
-    
+
     // add language
     $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
     if(isset($entity_label[$langcode])) {
@@ -410,7 +410,7 @@ $timethis = microtime(TRUE);
         $entity_label = "WissKI Default Entity Title";
       }
     }
-    
+
 #    dpm($entity_label, "ente?");
 #    dpm("4.2: " . microtime());
     //create a link to the entity's "canonical" route, link templates
diff --git a/wisski_core/src/Controller/WisskiEntityViewForwarder.php b/wisski_core/src/Controller/WisskiEntityViewForwarder.php
index 1d8e6215..dfcc8de3 100755
--- a/wisski_core/src/Controller/WisskiEntityViewForwarder.php
+++ b/wisski_core/src/Controller/WisskiEntityViewForwarder.php
@@ -22,26 +22,26 @@ class WisskiEntityViewForwarder extends EntityViewController {
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
  
  /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
  
   /** Creates an WisskiEntityViewForwarder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, RendererInterface $renderer, AccountInterface $current_user, EntityRepositoryInterface $entity_repository) {
@@ -87,11 +87,11 @@ class WisskiEntityViewForwarder extends EntityViewController {
   public function title(WisskiEntity $wisski_individual = NULL) {
     //dpm(serialize($wisski_individual), "??");
 #    $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
-    
+
 #    $title = $wisski_individual->label();
 
     return $this->entityRepository->getTranslationFromContext($wisski_individual)->label();
-    
+
 #    dpm($title, "tit?");
 #    dpm($langcode, "langcode?");
 #    dpm($entity->getTranslation(
diff --git a/wisski_core/src/Entity/Render/WisskiEntityFieldRenderer.php b/wisski_core/src/Entity/Render/WisskiEntityFieldRenderer.php
index 804d774c..370fa3de 100755
--- a/wisski_core/src/Entity/Render/WisskiEntityFieldRenderer.php
+++ b/wisski_core/src/Entity/Render/WisskiEntityFieldRenderer.php
@@ -40,7 +40,7 @@ class WisskiEntityFieldRenderer extends EntityFieldRenderer {
    * - For each set of fields, entities are processed by bundle, so that
    *   formatters can operate on the proper field definition for the bundle.
    *
-   * @param \Drupal\views\ResultRow[] $values
+   * @param ResultRow[] $values
    *   An array of all ResultRow objects returned from the query.
    *
    * @return array
diff --git a/wisski_core/src/Form/WisskiBundleForm.php b/wisski_core/src/Form/WisskiBundleForm.php
index ec3d2205..fb5c4b14 100755
--- a/wisski_core/src/Form/WisskiBundleForm.php
+++ b/wisski_core/src/Form/WisskiBundleForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core\Form;
 
+use Drupal\wisski_core\WisskiBundleInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -106,7 +107,7 @@ class WisskiBundleForm extends EntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var  \Drupal\wisski_core\WisskiBundleInterface $bundle */
+    /** @var WisskiBundleInterface $bundle */
     $bundle = $this->entity;
 
     $menu_items = array();
diff --git a/wisski_core/src/Form/WisskiIndListForm.php b/wisski_core/src/Form/WisskiIndListForm.php
index cad04eb2..21cca759 100755
--- a/wisski_core/src/Form/WisskiIndListForm.php
+++ b/wisski_core/src/Form/WisskiIndListForm.php
@@ -33,7 +33,7 @@ const ALL_RECORDS = 'wisski_core.all_records';
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\Core\Pager\PagerManager
+   * @var PagerManager
    */
   private PagerManager $pagerManager;
 
diff --git a/wisski_core/src/Form/WisskiIndividualListConfirmFormDelete.php b/wisski_core/src/Form/WisskiIndividualListConfirmFormDelete.php
index 92b7dcda..15e8447f 100755
--- a/wisski_core/src/Form/WisskiIndividualListConfirmFormDelete.php
+++ b/wisski_core/src/Form/WisskiIndividualListConfirmFormDelete.php
@@ -84,11 +84,11 @@ class WisskiIndividualListConfirmFormDelete extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?string $wisskiBundleId
    *   The bundle id of the wisski individual.
-   * 
+   *
    * @throws \Exception
    *   Error if WissKI entity URI could not be loaded (?).
    */
diff --git a/wisski_core/src/Form/WisskiIndividualListConfirmFormDeleteAll.php b/wisski_core/src/Form/WisskiIndividualListConfirmFormDeleteAll.php
index bb444ccf..ba6df632 100644
--- a/wisski_core/src/Form/WisskiIndividualListConfirmFormDeleteAll.php
+++ b/wisski_core/src/Form/WisskiIndividualListConfirmFormDeleteAll.php
@@ -23,9 +23,9 @@ class WisskiIndividualListConfirmFormDeleteAll extends ConfirmFormBase {
   /**
    * Form for removing a draft DOI from the provider and the local database.
    *
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct() {
@@ -79,11 +79,11 @@ class WisskiIndividualListConfirmFormDeleteAll extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?string $wisskiBundleId
    *   The bundle id of the wisski individual.
-   * 
+   *
    * @throws \Exception
    *   Error if WissKI entity URI could not be loaded (?).
    */
diff --git a/wisski_core/src/Form/WisskiIndividualRevisionDeleteForm.php b/wisski_core/src/Form/WisskiIndividualRevisionDeleteForm.php
index 4f414ba7..fc4550b1 100755
--- a/wisski_core/src/Form/WisskiIndividualRevisionDeleteForm.php
+++ b/wisski_core/src/Form/WisskiIndividualRevisionDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core\Form;
 
+use Drupal\wisski_core\WisskiEntityInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -20,48 +21,48 @@ class WisskiIndividualRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The wisski revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected $revision;
 
   /**
    * The wisski storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $wisskiStorage;
 
   /**
    * The wisski type storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $wisskiTypeStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new NodeRevisionDeleteForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The node storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_type_storage
+   * @param EntityStorageInterface $node_type_storage
    *   The node type storage.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityStorageInterface $wisski_storage, Connection $connection, DateFormatterInterface $date_formatter) {
diff --git a/wisski_core/src/Form/WisskiIndividualRevisionRevertForm.php b/wisski_core/src/Form/WisskiIndividualRevisionRevertForm.php
index e4f87283..5ac5cd5a 100755
--- a/wisski_core/src/Form/WisskiIndividualRevisionRevertForm.php
+++ b/wisski_core/src/Form/WisskiIndividualRevisionRevertForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wisski_core\Form;
 
+use Drupal\wisski_core\WisskiStorageInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -21,39 +23,39 @@ class WisskiIndividualRevisionRevertForm extends ConfirmFormBase {
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected $revision;
 
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorageInterface
+   * @var WisskiStorageInterface
    */
   protected $wisskiStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new NodeRevisionRevertForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The wisski storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityStorageInterface $wisski_storage, DateFormatterInterface $date_formatter, TimeInterface $time) {
@@ -153,12 +155,12 @@ class WisskiIndividualRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $revision
+   * @param WisskiEntityInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\node\NodeInterface
+   * @return NodeInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(WisskiEntityInterface $revision, FormStateInterface $form_state) {
diff --git a/wisski_core/src/Form/WisskiIndividualRevisionRevertTranslationForm.php b/wisski_core/src/Form/WisskiIndividualRevisionRevertTranslationForm.php
index cd12daed..6b37699d 100755
--- a/wisski_core/src/Form/WisskiIndividualRevisionRevertTranslationForm.php
+++ b/wisski_core/src/Form/WisskiIndividualRevisionRevertTranslationForm.php
@@ -27,20 +27,20 @@ class WisskiIndividualRevisionRevertTranslationForm extends WisskiIndividualRevi
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Constructs a new WisskiIndividualRevisionRevertTranslationForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $wisski_storage
+   * @param EntityStorageInterface $wisski_storage
    *   The wisski storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityStorageInterface $wisski_storage, DateFormatterInterface $date_formatter, LanguageManagerInterface $language_manager, TimeInterface $time) {
diff --git a/wisski_core/src/Form/WisskiTitlePatternForm.php b/wisski_core/src/Form/WisskiTitlePatternForm.php
index 300e2815..645e5697 100755
--- a/wisski_core/src/Form/WisskiTitlePatternForm.php
+++ b/wisski_core/src/Form/WisskiTitlePatternForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core\Form;
 
+use Drupal\wisski_core\WisskiBundleInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
@@ -488,8 +489,8 @@ class WisskiTitlePatternForm extends EntityForm {
    */
   public function save(array $form, FormStateInterface $form_state) {
     
-    /** @var  \Drupal\wisski_core\WisskiBundleInterface $bundle */
-    $bundle = $this->entity;
+    /** @var WisskiBundleInterface $bundle */
+				$bundle = $this->entity;
     
     //dpm(array($bundle,$form_state->getValues()),__METHOD__);
     
diff --git a/wisski_core/src/Plugin/Search/WisskiEntitySearch.php b/wisski_core/src/Plugin/Search/WisskiEntitySearch.php
index 85816435..97c69ac9 100755
--- a/wisski_core/src/Plugin/Search/WisskiEntitySearch.php
+++ b/wisski_core/src/Plugin/Search/WisskiEntitySearch.php
@@ -410,7 +410,7 @@ class WisskiEntitySearch extends SearchPluginBase {
       '#type' => 'image_button',
       '#title' => 'Export to Excel',
 #      '#value' => $this->t('Export to Excel'),
-      '#src' => drupal_get_path('module', 'wisski_core') . "/images/export_excel.png",
+      '#src' => \Drupal::service('extension.list.module')->getPath('wisski_core') . "/images/export_excel.png",
       '#attributes' => [ 'alt' => t('Export to Excel'), ],
       '#op' => 'wisski_core_excel_export',
 #      '#ajax' => [
diff --git a/wisski_core/src/Plugin/views/field/EntityField.php b/wisski_core/src/Plugin/views/field/EntityField.php
index 5229a686..835977bc 100755
--- a/wisski_core/src/Plugin/views/field/EntityField.php
+++ b/wisski_core/src/Plugin/views/field/EntityField.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core\Plugin\views\field;
 
+use Drupal\views\Entity\Render\EntityFieldRenderer;
 use Drupal\views\Plugin\views\field\EntityField as ViewsEntityField;
 use Drupal\views\ResultRow; 
 use Drupal\wisski_core\Entity\Render\WisskiEntityFieldRenderer;
@@ -26,7 +27,7 @@ class EntityField extends ViewsEntityField {
   /**
    * Returns the entity field renderer.
    *
-   * @return \Drupal\views\Entity\Render\EntityFieldRenderer
+   * @return EntityFieldRenderer
    *   The entity field renderer.
    */
   protected function getEntityFieldRenderer() {
diff --git a/wisski_core/src/Plugin/views/field/Field.php b/wisski_core/src/Plugin/views/field/Field.php
index 38bf1667..fc633e8d 100755
--- a/wisski_core/src/Plugin/views/field/Field.php
+++ b/wisski_core/src/Plugin/views/field/Field.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core\Plugin\views\field;
 
+use Drupal\views\Entity\Render\EntityFieldRenderer;
 use Drupal\views\Plugin\views\field\EntityField as ViewsField;
 use Drupal\views\ResultRow; 
 use Drupal\wisski_core\Entity\Render\WisskiEntityFieldRenderer;
@@ -26,7 +27,7 @@ class Field extends ViewsField {
   /**
    * Returns the entity field renderer.
    *
-   * @return \Drupal\views\Entity\Render\EntityFieldRenderer
+   * @return EntityFieldRenderer
    *   The entity field renderer.
    */
   protected function getEntityFieldRenderer() {
diff --git a/wisski_core/src/Plugin/views/filter/FieldNumeric.php b/wisski_core/src/Plugin/views/filter/FieldNumeric.php
index 0cbafadb..19606538 100755
--- a/wisski_core/src/Plugin/views/filter/FieldNumeric.php
+++ b/wisski_core/src/Plugin/views/filter/FieldNumeric.php
@@ -86,7 +86,7 @@ class FieldNumeric extends ViewsNumeric {
     }
   }
 
- 
+
   /**
    * {@inheritdoc}
    */
diff --git a/wisski_core/src/Plugin/views/query/WisskiIndividualQuery.php b/wisski_core/src/Plugin/views/query/WisskiIndividualQuery.php
index d3ae28b3..00eafcde 100755
--- a/wisski_core/src/Plugin/views/query/WisskiIndividualQuery.php
+++ b/wisski_core/src/Plugin/views/query/WisskiIndividualQuery.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wisski_core\Plugin\views\query;
 
+use Drupal\Core\Entity\Query\QueryInterface;
+use Drupal\views\Views;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Url;
 use Drupal\views\Plugin\views\display\DisplayPluginBase;
@@ -34,7 +36,7 @@ class WisskiIndividualQuery extends QueryPluginBase
     /**
      * The EntityQuery object used for the query.
      *
-     * @var \Drupal\Core\Entity\Query\QueryInterface, \Drupal\wisski_salz\Query\WissKIQueryDelegator in our case
+     * @var QueryInterface , \Drupal\wisski_salz\Query\WissKIQueryDelegator in our case
      */
     public $query;
 
@@ -131,7 +133,7 @@ class WisskiIndividualQuery extends QueryPluginBase
                     // so we have to change this here.
 
                     if(strpos($valueGroup[0], ".") === FALSE) {
-                      $viewsdata = \Drupal\views\Views::viewsData()->get('wisski_individual');
+                      $viewsdata = Views::viewsData()->get('wisski_individual');
 
                       // see if we have something in there
                       if(isset($viewsdata[$valueGroup[0]])) {
@@ -898,7 +900,7 @@ class WisskiIndividualQuery extends QueryPluginBase
                 // add the title values to the label so it can be rendered correctly...
                 if(isset($values_per_row[$eid]['title']))
                   $pseudo_entity_fields[$eid]['label'] = array($values_per_row[$eid]['title']);
-                
+
                 // By Mark:
                 // we need to wrap the title in array brackets, otherwise we loose some parts
                 // if we have a : or something like that in the characters.
@@ -1089,25 +1091,25 @@ class WisskiIndividualQuery extends QueryPluginBase
         // and we have to solve it to its real wisski thingies
         // if it is a wisski field at all
         if(strpos($field, ".") === 0) {
-          $viewsdata = \Drupal\views\Views::viewsData()->get('wisski_individual');
-            
+          $viewsdata = Views::viewsData()->get('wisski_individual');
+
           // cut away the dot and have a look.
           $viewsdata = $viewsdata[substr($field, 1)];
-          
+
           if(isset($viewsdata['field']) && isset($viewsdata['field']['wisski_field']))  
             $wisski_field = $viewsdata['field']['wisski_field'];
           else // no wisski field?
             $wisski_field = "";
-        
+
           if(!empty($wisski_field))
             $field = $wisski_field;
-            
+
           // in this case we also have to check if the operator
           // is correct in case of entity reference thingies
           //if(is_numeric($value) && $operator == "=") {
           //    $operator = "has_eid";
           //}
-          
+
           if(strpos($field, ".") !== FALSE) {
             // load the relevant path from the cache
             // populate the cache if it doesn't exist
@@ -1139,7 +1141,7 @@ class WisskiIndividualQuery extends QueryPluginBase
                 // this is hopefully a base field like .langcode?
                 $field = $pb_and_path[1]; 
               }
-            
+
             }
           }
 
diff --git a/wisski_core/src/WisskiEntityViewsData.php b/wisski_core/src/WisskiEntityViewsData.php
index 90b98bec..818f73b6 100644
--- a/wisski_core/src/WisskiEntityViewsData.php
+++ b/wisski_core/src/WisskiEntityViewsData.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core;
 
+use Drupal\wisski_core\Drupal\Core\TypedData\TypedDataManager;
 use Drupal\views\EntityViewsData;
 
 // from Drupal\views\EntityViewsData
@@ -37,7 +38,7 @@ class WisskiEntityViewsData extends EntityViewsData {
     $this->moduleHandler = $module_handler;
     $this->setStringTranslation($translation_manager);
     
-    if (!$entity_field_manager || $entity_field_manager instanceof Drupal\Core\TypedData\TypedDataManager ) {
+    if (!$entity_field_manager || $entity_field_manager instanceof TypedDataManager ) {
       @trigger_error('Calling EntityViewsData::__construct() with the $entity_field_manager argument is supported in drupal:8.8.0 and will be required before drupal:9.0.0. See https://www.drupal.org/node/2549139.', E_USER_DEPRECATED);
       $entity_field_manager = \Drupal::service('entity_field.manager');
     }
diff --git a/wisski_core/src/WisskiIndividualListDbActions.php b/wisski_core/src/WisskiIndividualListDbActions.php
index f8ebb315..e386d530 100755
--- a/wisski_core/src/WisskiIndividualListDbActions.php
+++ b/wisski_core/src/WisskiIndividualListDbActions.php
@@ -18,14 +18,14 @@ class WisskiIndividualListDbActions implements WisskiIndividualListDbActionsInte
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private Connection $connection;
 
   /**
    * The Drupal messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private MessengerInterface $messenger;
 
diff --git a/wisski_core/src/WisskiStorage.php b/wisski_core/src/WisskiStorage.php
index 08c4fe6b..32915a4b 100755
--- a/wisski_core/src/WisskiStorage.php
+++ b/wisski_core/src/WisskiStorage.php
@@ -343,7 +343,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
             // the language "en" is added to this variable although there is no english translation for the entity name
             // to avoid this, we have to continue here, so only languages are added which do not come from entity references
             $field_def = $field_defs[$key];
-            
+
             #dpm(serialize($field_def->isTranslatable()), "is it?" . $field_def->getLabel());
             // by MyF: this part does not work as expected; we comment this out since we prefer empty and translated fields
             // instead of only original languages fields
@@ -377,19 +377,19 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
             #    dpm("answer is false");
                 $not_set_languages[$alang] = $alang;
               }
-              
+
               if(count($set_languages) == count($available_languages))
                 break;
-              
+
             }
 
             if(count($set_languages) == count($available_languages))
               break;
           }
-         
+
 #          dpm($available_languages, "available langs");          
 #          dpm($set_languages, "the setted languages");
-          
+
           // clear the titles that are not represented in the data
 #          foreach($set_languages as $slang) {
 #            unset($values[$id]["label"][$slang]);
@@ -409,7 +409,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
           // by Mark: I am unsure if this is a correct assumption
           // it might be that we have to fetch it from elsewhere
           // but for now this seems ok.
-          
+
           if(isset($values[$id]["default_langcode"])){
 
             foreach($values[$id]["default_langcode"] as $key => $value) {
@@ -418,8 +418,8 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                 $orig_lang = $key;
             } 
           }
-         
-          
+
+
           // if the entity has no default langcode (which might be and probably is the default
           // for old wisski instances) we just use the first language
           // that comes up
@@ -430,7 +430,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
             } else {
               $orig_lang = current($set_languages);
             }
-            
+
             # dpm($set_languages, "set?");
           }          
 
@@ -440,7 +440,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
           // therefore we correct it here for further development
           if(is_array($orig_lang))
             $orig_lang = current($orig_lang);
-          
+
           // by Mark:
           // if the orig_lang is not in the available languages there is something fishy
           // and we will have difficulties because data wont be loaded actively.
@@ -450,13 +450,13 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
 //            dpm($orig_lang, "orig?");
 //            dpm($available_languages, "avail?");
           }
-          
-            
+
+
 #          dpm("my orig lang is: " . serialize($orig_lang));
 
-          
+
 #          dpm(serialize($base_fields), "yay, basefields!");
-          
+
           // MF^2: In any case we process the value array for a certain entity
           // and set the x-default langcode accordingly for all base fields. 
           // Just in case of a translatable base field that really has language tags
@@ -465,7 +465,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
           // see below ;)
           // in case of a "normal" field we assume that it is always translatable
           // (which typically holds for wisski entities)
-          
+
           // after that we can iterate through all non-base-fields and these
           // typically have different languages enabled by default due to the
           // setting in the wisski Entity
@@ -475,8 +475,8 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
             // if it is a base field, simply set it to the appropriate langcode
             if(in_array($key, $base_field_names)) {
               $base_field_def = $base_fields[$key];
-             
-              
+
+
               // if this is translatable
               if($base_field_def->isTranslatable()) {
 #		      dpm($val, "val? for $key");
@@ -485,7 +485,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                 if(is_array($val)){
                   $does_it_have_any_language = FALSE;
                   foreach($val as $pot_lang => $some_field_values) {
-                    
+
                     // if this is a language tag
                     /*
                     if(!in_array($pot_lang, $available_languages)) {
@@ -495,34 +495,34 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                       // translatable base field like array("value" => "smthg")
                       // unfortunately this currently happens 
                       // @TODO: Fix this case!
-                      
+
                       // By Mark: This case also happens if there is a language in the
                       // ts that is not in the drupal... so this check is too weak 
                       // and we should NOT do this!
-                      
-                      
+
+
                       $test[$key][LanguageInterface::LANGCODE_DEFAULT] = $val;
 //                      dpm($available_languages, "avail?");
 //                      dpm($pot_lang, "pot?");
                       break;
                     }
                     */
-                    
+
                     if(in_array($pot_lang, $available_languages) || $pot_lang == "und") {
                       $does_it_have_any_language = TRUE;
                     }
-                    
+
                   }
-                  
+
                   if(!$does_it_have_any_language)
                     $test[$key][LanguageInterface::LANGCODE_DEFAULT] = $val;
                 }
                 #dpm($test);
-    
+
                 // if we have found something, we can savely continue.               
                 if(isset($test[$key][LanguageInterface::LANGCODE_DEFAULT]))
                   continue;
-              
+
                 // if not we do the "normal field handling"
                 // because it is a translatable base field
                 // which has language tags that must be replaced accordingly.
@@ -535,7 +535,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                 continue;
               }
             }
-            
+
             // and now we do the "normal field" handling and the handling for
             // translatable base fields (in fact we do the handling for any 
             // translatable fields)
@@ -545,7 +545,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
               // if we dont have anything, continue.
               if(!isset($field_defs[$key]))
                 continue;
-                
+
  #             dpm($val, "val!");
               $field_def = $field_defs[$key];
               if ($field_def->getType() === 'entity_reference') {
@@ -563,17 +563,17 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                   }
                 }
               }
-              
+
               foreach($val as $field_lang => $field_vals) {
                 // if it is the default language of the entity, we exchange the 
                 // language tag of the original language for x-default
                 #if(gettype($field_lang) != gettype($orig_lang)){
 #                  dpm("Warning: gettype(field_lang) != gettype(orig_lang)");
                 #}
-                
+
                 // check if we have languages that are very odd like und and und is not in the
                 // available languages.
-		
+
 		if($field_lang == "und" && !in_array($field_lang, $available_languages)) {
 		  $curr_lang = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
 		  if(!isset($val[$curr_lang]))
@@ -581,8 +581,8 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                   else if(!isset($val[$orig_lang]))
                     $field_lang = $orig_lang;
 		}
-		
-		
+
+
 		#dpm(serialize($field_lang));
 		#dpm(serialize($orig_lang));
 		if($field_def->isTranslatable()) {
@@ -590,7 +590,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                     $test[$key][LanguageInterface::LANGCODE_DEFAULT] = $field_vals;
                     $test[$key][$orig_lang] = $field_vals;
                   } else {
-                                  
+
                     // we just trust it for now...                 
                     $test[$key][$field_lang] = $field_vals;
                   }
@@ -607,14 +607,14 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
               }
             }
            #dpm($test, "test22?"); 
-            
+
             // else we just take it as it is.
 //            if(!empty(array_intersect(array_keys($val), $set_languages))) {
 //              $test[$key] = $val;
 //              continue;
 //            }
           } 
-                    
+
             /*
             if(is_array($val)) {
 #              $test[$key] = $val;
@@ -638,10 +638,10 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
           // we still have to set default_langcode and
           // content_translation_source and published(status) probably? 
           // Or have to get it from cache correctly.
-        
-        
-        
-        
+
+
+
+
 #          $test["eid"] = array("x-default" => $test["eid"]);
 #          $test["langcode"] = array("x-default" => "en", "fr" => "fr");
 #          $test["label"] = array("x-default" => "juhu?", "fr" => "oh weh");
@@ -663,17 +663,17 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
 #            dpm($test, "what do we give?");
 
 #          $test["default_langcode"]["x-default"] = array("value" => TRUE);
-          
-          
+
+
 #          $test["eid"] = $test["eid"]["x-default"][0];
-          
+
 #          $entity = $this->create($values[$id]);
 #          dpm($entity);
           // Initialize translations array.
           $translations = array_fill_keys(array_keys($values), []);
 
           $translations[$id] = $set_languages; //array("x-default", "fr", "ar");
-    
+
 #          dpm($this->entityClass, "??");
 #          return;
           // Debug from Node:
@@ -704,9 +704,9 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
           $inter_lang = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
 
 #          $entity = $entity->getTranslation($inter_lang);
-          
+
 #          dpm($entity);
-    
+
 #          $entity = new $this->entityClass($values[$id], "wisski_individual", $values[$id]["bundle"], array_keys($translations[$id]));
           //dpm(serialize($entity), "yay!");
           $entity->enforceIsNew(FALSE);
@@ -1137,9 +1137,9 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                     if (strpos($preview_image_uri, "public://") !== FALSE) {
                       $preview_image_uri = str_replace("public:/", \Drupal::service('stream_wrapper.public')->baseUrl(), $preview_image_uri);
                     }
-                    
+
                     $preview_id = $this->getFileId($preview_image_uri);
-                    
+
 #                    dpm($preview_id);
                     $new_field_values[$id][$field_name] = array(array("target_id" => intval($preview_id)));
 //                    $new_field_values[$id][$field_name] = array($preview_image_uri);
@@ -1352,7 +1352,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                           #else if(!isset($nfv[$main_property]))
                           #                          dpm($nfv);
                         }
-                      
+
                         // if we found something go for it...
                         if (isset($found_cached_field_value)) {
                           if(is_array($nfv))
@@ -1403,7 +1403,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
                       $file_uri = $properties_array['original_target_id'];
 #       	             dpm($file_uri, "got");                    
                       $local_uri = '';
-                        
+
                       $properties_array['target_id'] = $this->getFileId($file_uri,$local_uri, $id);
 /*
                     $properties_array = array(
@@ -1570,7 +1570,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
           }
 
 #              dpm(array('data'=>$data,'uri'=>$file_uri,'local'=>$local_file_uri),'Trying to save image');
-          $file = file_save_data($data, $local_file_uri);
+          $file = \Drupal::service('file.repository')->writeData($data, $local_file_uri);
 
           if ($file) {
             $value = $file->id();
@@ -1959,13 +1959,13 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
 
             // this is evil because we take simply the first one.
             //$lc = current($lc);
-            
+
             // go deeper...
             while(is_array($lc))
               $lc = current($lc);              
-            
+
             $langcode = $lc;
-            
+
 #            dpm($lc);
           }
           
@@ -2591,7 +2591,7 @@ class WisskiStorage extends SqlContentEntityStorage implements WisskiStorageInte
     if(empty($preview_uri) || empty($found_preview)) {
       
       $image_style = $this->getPreviewStyle();
-      $output_uri = drupal_get_path('module', 'wisski_core') . "/images/img_nopic.png";
+      $output_uri = \Drupal::service('extension.list.module')->getPath('wisski_core') . "/images/img_nopic.png";
 #      dpm($output_uri, "out");
       $preview_uri = $image_style->buildUri($output_uri);
       
diff --git a/wisski_core/src/WisskiToolbarHandler.php b/wisski_core/src/WisskiToolbarHandler.php
index 421e70a0..48d82a22 100755
--- a/wisski_core/src/WisskiToolbarHandler.php
+++ b/wisski_core/src/WisskiToolbarHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_core;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -23,32 +24,32 @@ class WisskiToolbarHandler implements ContainerInjectionInterface, TrustedCallba
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;
 
   /**
    * The devel toolbar config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * WissKI ToolbarHandler constructor.
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree
+   * @param MenuLinkTreeInterface $menu_link_tree
    *   The menu link tree service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
    */
   public function __construct(MenuLinkTreeInterface $menu_link_tree, ConfigFactoryInterface $config_factory, AccountProxyInterface $account) {
diff --git a/wisski_core/wisski_core.install b/wisski_core/wisski_core.install
index b4924298..050e16da 100755
--- a/wisski_core/wisski_core.install
+++ b/wisski_core/wisski_core.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Field\BaseFieldDefinition;
 function wisski_core_update_8001(&$sandbox) {
 
   $tables = array('wisski_entity_map', 'wisski_title_n_grams', 'wisski_calling_bundles', 'wisski_preview_images', 'wisski_entity_field_properties', 'wisski_core_ontology_namespaces');
@@ -171,7 +172,7 @@ function wisski_core_update_8006(&$sandbox) {
   */
 function wisski_core_update_8007(&$sandbox) {
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
-  $newStorage = Drupal\Core\Field\BaseFieldDefinition::create('uri')
+  $newStorage = BaseFieldDefinition::create('uri')
       ->setLabel(t('WissKI URI'))
       ->setDescription(t('The WissKI URI from the TS (in case you need it)'))
       ->setReadOnly(TRUE)
diff --git a/wisski_data_merge/src/Form/WisskiDataMergeForm.php b/wisski_data_merge/src/Form/WisskiDataMergeForm.php
index c5af37df..04ff0326 100755
--- a/wisski_data_merge/src/Form/WisskiDataMergeForm.php
+++ b/wisski_data_merge/src/Form/WisskiDataMergeForm.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\wisski_data_merge\Form;
 
+use Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB;
 use Drupal\wisski_salz\Entity\Adapter;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -123,7 +124,7 @@ class WisskiDataMergeForm extends FormBase {
           
           $engine = $adapter->getEngine();
           
-          if(!($engine instanceof \Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB))
+          if(!($engine instanceof Sparql11EngineWithPB))
             continue;
           
           $triples = $engine->generateTriplesForPath($pb, $path);
@@ -234,7 +235,7 @@ class WisskiDataMergeForm extends FormBase {
         
         $engine = $adapter->getEngine();
         
-        if(!($engine instanceof \Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB))
+        if(!($engine instanceof Sparql11EngineWithPB))
           continue;
         
         $triples = $engine->generateTriplesForPath($pb, $path);
@@ -251,29 +252,29 @@ class WisskiDataMergeForm extends FormBase {
 #        $wherefront = "WHERE { ";
         
         foreach($result as $res) {
-        
+
           $pa = $path->getPathArray();
           $palength = count($pa);
-          
+
 #          dpm($pa, "pa?");
-          
+
           #dpm($res, "res");
           #dpm($path->getPathArray(), "pa?");
           #dpm(count($path->getPathArray()), "path");
-          
+
           for($pos = 2; $pos < $palength; $pos += 2) {
             $var = "x" . $pos;
             $inverse = $engine->getInverseProperty($pa[($pos -1)]);
             $filters .= " FILTER( ?x" . $pos . " != <" . $res->$var . "> ) . ";
             $delfront .= "?x" . $pos . " a <" . $pa[$pos] . "> . ";
             $delfront .= "?x" . ($pos-2) . " <" . $pa[($pos -1)] . "> ?x" . $pos . " . ";
-            
+
             if($inverse)
               $delfront .= "?x" . $pos . " <" . $inverse . "> ?x" . ($pos-2) . " . ";
           }
-          
+
           $delfront .= "?x" . ($pos-2) . " <" . $path->getDatatypeProperty() . "> '" . $outvalue . "'";
-          
+
 #          dpm($filters, "fil");
 #          dpm($delfront, "del?");
         }
diff --git a/wisski_date_field_extractor/wisski_date_field_extractor.module b/wisski_date_field_extractor/wisski_date_field_extractor.module
index a7826045..efd26601 100644
--- a/wisski_date_field_extractor/wisski_date_field_extractor.module
+++ b/wisski_date_field_extractor/wisski_date_field_extractor.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 /** Module wisski_date_field_extractor
  *
  * @author: fit
@@ -9,7 +10,7 @@
  * Implementation of hook_ENTITY_TYPE_presave
  * for WissKI's entity type
  */
-function wisski_date_field_extractor_wisski_individual_presave(Drupal\Core\Entity\EntityInterface $entity) {
+function wisski_date_field_extractor_wisski_individual_presave(EntityInterface $entity) {
   // switch debugging on/off
   $debug = False;
 
diff --git a/wisski_doi/src/Controller/WisskiDoiAdministration.php b/wisski_doi/src/Controller/WisskiDoiAdministration.php
index 0049ad59..40f1b38a 100755
--- a/wisski_doi/src/Controller/WisskiDoiAdministration.php
+++ b/wisski_doi/src/Controller/WisskiDoiAdministration.php
@@ -16,7 +16,7 @@ class WisskiDoiAdministration extends ControllerBase {
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActionsInterface
+   * @var WisskiDoiDbActionsInterface
    */
   private WisskiDoiDbActionsInterface $wisskiDOiDbActions;
 
diff --git a/wisski_doi/src/Form/WisskiDoiBatch4CurrentRevisionsConfirmForm.php b/wisski_doi/src/Form/WisskiDoiBatch4CurrentRevisionsConfirmForm.php
index a60ee0e1..d15a9524 100755
--- a/wisski_doi/src/Form/WisskiDoiBatch4CurrentRevisionsConfirmForm.php
+++ b/wisski_doi/src/Form/WisskiDoiBatch4CurrentRevisionsConfirmForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wisski_doi\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\wisski_core\WisskiStorageInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
@@ -28,17 +30,17 @@ class WisskiDoiBatch4CurrentRevisionsConfirmForm extends WisskiDoiBatch4StaticRe
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_storage
+   * @param WisskiStorageInterface $wisski_storage
    *   The WissKI Storage service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiActions $wisskiDoiActions
+   * @param WisskiDoiActions $wisskiDoiActions
    *   The WissKi DOI Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiStorageInterface       $wisski_storage,
@@ -58,7 +60,7 @@ class WisskiDoiBatch4CurrentRevisionsConfirmForm extends WisskiDoiBatch4StaticRe
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ -85,7 +87,7 @@ class WisskiDoiBatch4CurrentRevisionsConfirmForm extends WisskiDoiBatch4StaticRe
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ -95,7 +97,7 @@ class WisskiDoiBatch4CurrentRevisionsConfirmForm extends WisskiDoiBatch4StaticRe
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ -120,10 +122,10 @@ class WisskiDoiBatch4CurrentRevisionsConfirmForm extends WisskiDoiBatch4StaticRe
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
 
diff --git a/wisski_doi/src/Form/WisskiDoiBatch4StaticRevisionsConfirmForm.php b/wisski_doi/src/Form/WisskiDoiBatch4StaticRevisionsConfirmForm.php
index 95414a42..ea209e33 100755
--- a/wisski_doi/src/Form/WisskiDoiBatch4StaticRevisionsConfirmForm.php
+++ b/wisski_doi/src/Form/WisskiDoiBatch4StaticRevisionsConfirmForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wisski_doi\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\wisski_core\WisskiStorageInterface;
 use Drupal\wisski_core\WisskiEntityInterface;
 use Drupal\Component\Datetime\TimeInterface;
@@ -38,28 +40,28 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $revision;
 
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorageInterface
+   * @var WisskiStorageInterface
    */
   protected WisskiStorageInterface $wisskiStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected TimeInterface $time;
 
@@ -67,21 +69,21 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * The service to management DOI metadata.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiActions
+   * @var WisskiDoiActions
    */
   protected WisskiDoiActions $wisskiDoiActions;
 
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDataciteRestActions
+   * @var WisskiDoiDataciteRestActions
    */
   protected WisskiDoiDataciteRestActions $wisskiDoiRestActions;
 
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   protected WisskiDoiDbActions $wisskiDoiDbActions;
 
@@ -109,17 +111,17 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_storage
+   * @param WisskiStorageInterface $wisski_storage
    *   The WissKI Storage service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiActions $wisskiDoiActions
+   * @param WisskiDoiActions $wisskiDoiActions
    *   The WissKi DOI Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiStorageInterface       $wisski_storage,
@@ -139,7 +141,7 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ -179,7 +181,7 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ -189,7 +191,7 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * Route, if you hit chancel.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The Chancel URL.
    */
   public function getCancelUrl() {
@@ -199,7 +201,7 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText() {
@@ -209,7 +211,7 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ -235,7 +237,7 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param string $wisskiBundleId
    *   The WissKI bundle ID.
@@ -399,10 +401,10 @@ class WisskiDoiBatch4StaticRevisionsConfirmForm extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
 
diff --git a/wisski_doi/src/Form/WisskiDoiBatchForm.php b/wisski_doi/src/Form/WisskiDoiBatchForm.php
index f9383a07..708b419d 100755
--- a/wisski_doi/src/Form/WisskiDoiBatchForm.php
+++ b/wisski_doi/src/Form/WisskiDoiBatchForm.php
@@ -31,14 +31,14 @@ class WisskiDoiBatchForm extends ConfigFormBase {
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   private WisskiDoiDbActions $wisskiDoiDbActions;
 
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\Core\Pager\PagerManager
+   * @var PagerManager
    */
   private PagerManager $pagerManager;
 
diff --git a/wisski_doi/src/Form/WisskiDoiConfirmFormDeleteDoi.php b/wisski_doi/src/Form/WisskiDoiConfirmFormDeleteDoi.php
index 9c2eac71..640851a4 100755
--- a/wisski_doi/src/Form/WisskiDoiConfirmFormDeleteDoi.php
+++ b/wisski_doi/src/Form/WisskiDoiConfirmFormDeleteDoi.php
@@ -20,23 +20,23 @@ class WisskiDoiConfirmFormDeleteDoi extends ConfirmFormBase {
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDataciteRestActions
+   * @var WisskiDoiDataciteRestActions
    */
   protected WisskiDoiDataciteRestActions $wisskiDoiRestActions;
 
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   protected WisskiDoiDbActions $wisskiDoiDbActions;
 
   /**
    * Form for removing a draft DOI from the provider and the local database.
    *
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiDoiDataciteRestActions $wisskiDoiRestActions, WisskiDoiDbActions $wisskiDoiDbActions) {
@@ -47,7 +47,7 @@ class WisskiDoiConfirmFormDeleteDoi extends ConfirmFormBase {
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ -120,7 +120,7 @@ class WisskiDoiConfirmFormDeleteDoi extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?int $wisski_individual
    *   The entity id of the wisski individual.
diff --git a/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForRevision.php b/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForRevision.php
index c996b17e..b6a59c1b 100755
--- a/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForRevision.php
+++ b/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForRevision.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_doi\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\wisski_salz\AdapterHelper;
 
@@ -17,13 +18,12 @@ class WisskiDoiConfirmFormRequestDoiForRevision extends WisskiDoiConfirmFormRequ
    *
    * @var array $doiInfo
    */
-
   /**
    * Validate if a DOI for a current revision exists.
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ -56,7 +56,7 @@ class WisskiDoiConfirmFormRequestDoiForRevision extends WisskiDoiConfirmFormRequ
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ -66,7 +66,7 @@ class WisskiDoiConfirmFormRequestDoiForRevision extends WisskiDoiConfirmFormRequ
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText() {
@@ -76,7 +76,7 @@ class WisskiDoiConfirmFormRequestDoiForRevision extends WisskiDoiConfirmFormRequ
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ -95,7 +95,7 @@ class WisskiDoiConfirmFormRequestDoiForRevision extends WisskiDoiConfirmFormRequ
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @throws \Exception
diff --git a/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForStaticRevision.php b/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForStaticRevision.php
index c9c9fa26..7a4c2c03 100755
--- a/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForStaticRevision.php
+++ b/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForStaticRevision.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wisski_doi\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
 use Drupal\wisski_core\WisskiStorageInterface;
@@ -34,35 +36,35 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $revision;
 
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorageInterface
+   * @var WisskiStorageInterface
    */
   protected WisskiStorageInterface $wisskiStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected TimeInterface $time;
 
   /**
    * The WissKI Individual.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $wisski_individual;
 
@@ -76,36 +78,36 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * The service to management DOI metadata.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiActions
+   * @var WisskiDoiActions
    */
   private ?WisskiDoiActions $wisskiDoiActions;
 
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDataciteRestActions
+   * @var WisskiDoiDataciteRestActions
    */
   protected WisskiDoiDataciteRestActions $wisskiDoiRestActions;
 
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   protected WisskiDoiDbActions $wisskiDoiDbActions;
 
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_storage
+   * @param WisskiStorageInterface $wisski_storage
    *   The WissKI Storage service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiStorageInterface       $wisski_storage,
@@ -123,7 +125,7 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ -161,7 +163,7 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ -171,7 +173,7 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * Route, if you hit chancel.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The Chancel URL.
    */
   public function getCancelUrl() {
@@ -181,7 +183,7 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText() {
@@ -191,7 +193,7 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ -206,10 +208,10 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The contributor list in form of the contributor-list twig template.
    */
   public static function addContributor(array &$form, FormStateInterface $form_state) {
@@ -252,10 +254,10 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
    *
    * @param string $contributor
    *   Contributor person.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   What is this and why do we use it?
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The contributor list in form of the contributor-list twig template.
    */
   public function removeContributor(string $contributor, Request $request) {
@@ -278,10 +280,10 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
   /**
    * Delete all contributors.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   What is this and why do we use it?
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The contributor list in form of the contributor-list twig template.
    */
   public function clearContributors(Request $request) {
@@ -326,7 +328,7 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param int $wisski_individual
    *   The WissKI Entity ID.
@@ -504,10 +506,10 @@ class WisskiDoiConfirmFormRequestDoiForStaticRevision extends ConfirmFormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/wisski_doi/src/Form/WisskiDoiConfirmFormUpdateMetadata.php b/wisski_doi/src/Form/WisskiDoiConfirmFormUpdateMetadata.php
index 2254df78..464d0fbb 100755
--- a/wisski_doi/src/Form/WisskiDoiConfirmFormUpdateMetadata.php
+++ b/wisski_doi/src/Form/WisskiDoiConfirmFormUpdateMetadata.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_doi\Form;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\wisski_salz\AdapterHelper;
@@ -31,7 +32,7 @@ class WisskiDoiConfirmFormUpdateMetadata extends WisskiDoiConfirmFormRequestDoiF
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion(): TranslatableMarkup {
@@ -41,7 +42,7 @@ class WisskiDoiConfirmFormUpdateMetadata extends WisskiDoiConfirmFormRequestDoiF
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText(): TranslatableMarkup {
@@ -51,7 +52,7 @@ class WisskiDoiConfirmFormUpdateMetadata extends WisskiDoiConfirmFormRequestDoiF
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ -64,7 +65,7 @@ class WisskiDoiConfirmFormUpdateMetadata extends WisskiDoiConfirmFormRequestDoiF
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ -97,7 +98,7 @@ class WisskiDoiConfirmFormUpdateMetadata extends WisskiDoiConfirmFormRequestDoiF
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?int $wisski_individual
    *   The WissKI entity id.
@@ -107,7 +108,7 @@ class WisskiDoiConfirmFormUpdateMetadata extends WisskiDoiConfirmFormRequestDoiF
    * @return array
    *   The return form.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Error if WissKI entity URI could not be loaded (?).
    */
   public function buildForm(array $form, FormStateInterface $form_state, ?int $wisski_individual = NULL, ?int $did = NULL): array {
@@ -135,7 +136,7 @@ class WisskiDoiConfirmFormUpdateMetadata extends WisskiDoiConfirmFormRequestDoiF
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @throws \Exception
diff --git a/wisski_doi/src/WisskiDoiActions.php b/wisski_doi/src/WisskiDoiActions.php
index 693378a4..e2060b3d 100755
--- a/wisski_doi/src/WisskiDoiActions.php
+++ b/wisski_doi/src/WisskiDoiActions.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_doi;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -21,28 +22,28 @@ class WisskiDoiActions implements WisskiDoiActionsInterface {
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $revision;
 
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorage
+   * @var WisskiStorage
    */
   protected WisskiStorage $wisskiStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected TimeInterface $time;
 
@@ -57,14 +58,14 @@ class WisskiDoiActions implements WisskiDoiActionsInterface {
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiRestActionsInterface
+   * @var WisskiDoiRestActionsInterface
    */
   protected WisskiDoiRestActionsInterface $wisskiDoiRestActions;
 
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActionsInterface
+   * @var WisskiDoiDbActionsInterface
    */
   protected WisskiDoiDbActionsInterface $wisskiDoiDbActions;
 
@@ -118,12 +119,12 @@ class WisskiDoiActions implements WisskiDoiActionsInterface {
    * requests a DOI for that revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getStaticDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata) {
@@ -175,12 +176,12 @@ class WisskiDoiActions implements WisskiDoiActionsInterface {
    * Just requests a DOI for the current revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getCurrentDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata) {
@@ -235,7 +236,7 @@ class WisskiDoiActions implements WisskiDoiActionsInterface {
    * @param string $individualsInBatchStateName
    *   The name of the config store.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function batchLoop(bool $current, array $wisskiIndividualsBatch, array $doiMetaData, string $individualsInBatchStateName) {
     if ($wisskiIndividualsBatch) {
diff --git a/wisski_doi/src/WisskiDoiActionsInterface.php b/wisski_doi/src/WisskiDoiActionsInterface.php
index 7d6de11c..58983106 100755
--- a/wisski_doi/src/WisskiDoiActionsInterface.php
+++ b/wisski_doi/src/WisskiDoiActionsInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_doi;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -21,17 +22,17 @@ interface WisskiDoiActionsInterface {
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The translations service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The Drupal entity type manager service.
    */
   public function __construct(TranslationInterface         $stringTranslation,
@@ -45,7 +46,7 @@ interface WisskiDoiActionsInterface {
   /**
    * Assembles metadata from WissKI individual.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI Individual.
    *
    * @return array
@@ -60,12 +61,12 @@ interface WisskiDoiActionsInterface {
    * requests a DOI for that revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getStaticDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata);
@@ -76,12 +77,12 @@ interface WisskiDoiActionsInterface {
    * Just requests a DOI for the current revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getCurrentDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata);
@@ -98,7 +99,7 @@ interface WisskiDoiActionsInterface {
    * @param string $individualsInBatchStateName
    *   The name of the config store.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function batchLoop(bool $current, array $wisskiIndividualsBatch, array $doiMetaData, string $individualsInBatchStateName);
 
diff --git a/wisski_doi/src/WisskiDoiDataciteRestActions.php b/wisski_doi/src/WisskiDoiDataciteRestActions.php
index 1602b360..4e188a00 100755
--- a/wisski_doi/src/WisskiDoiDataciteRestActions.php
+++ b/wisski_doi/src/WisskiDoiDataciteRestActions.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_doi;
 
+use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -24,28 +25,28 @@ class WisskiDoiDataciteRestActions implements WisskiDoiRestActionsInterface {
   /**
    * The translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $stringTranslation;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   private MessengerInterface $messenger;
 
   /**
    * Guzzle\Client instance.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected ClientInterface $httpClient;
 
   /**
    * The config service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected ConfigFactoryInterface $configFactory;
 
diff --git a/wisski_doi/src/WisskiDoiDbActions.php b/wisski_doi/src/WisskiDoiDbActions.php
index 01fc83c5..4d1bfb37 100755
--- a/wisski_doi/src/WisskiDoiDbActions.php
+++ b/wisski_doi/src/WisskiDoiDbActions.php
@@ -16,14 +16,14 @@ class WisskiDoiDbActions implements WisskiDoiDbActionsInterface {
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private Connection $connection;
 
   /**
    * The Drupal messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private MessengerInterface $messenger;
 
diff --git a/wisski_doi/src/WisskiDoiDbActionsInterface.php b/wisski_doi/src/WisskiDoiDbActionsInterface.php
index b7bb3d81..11e26dbc 100755
--- a/wisski_doi/src/WisskiDoiDbActionsInterface.php
+++ b/wisski_doi/src/WisskiDoiDbActionsInterface.php
@@ -14,11 +14,11 @@ interface WisskiDoiDbActionsInterface {
   /**
    * Establish database connection with query builder.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The string translation service.
    */
   public function __construct(Connection $connection, MessengerInterface $messenger, TranslationInterface $stringTranslation);
diff --git a/wisski_doi/src/WisskiDoiRestActionsInterface.php b/wisski_doi/src/WisskiDoiRestActionsInterface.php
index 9b762be3..f1e09f76 100755
--- a/wisski_doi/src/WisskiDoiRestActionsInterface.php
+++ b/wisski_doi/src/WisskiDoiRestActionsInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_doi;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\StringTranslation\TranslationInterface;
@@ -23,13 +24,13 @@ interface WisskiDoiRestActionsInterface {
    * (Configuration->[WISSKI]->WissKI DOI Settings)
    * Checks if settings are missing.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The string translation service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \GuzzleHttp\ClientInterface $httpClient
+   * @param ClientInterface $httpClient
    *   The REST request service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config storage service.
    */
   public function __construct(TranslationInterface $stringTranslation,
@@ -55,7 +56,7 @@ interface WisskiDoiRestActionsInterface {
    *     revisionUrl: Full external URL of the revision.
    *   and responseStatus with responseCode.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    *   Throws exception when response status 40x.
    */
   public function createOrUpdateDoi(array $doiInfo, bool $update = FALSE);
@@ -69,7 +70,7 @@ interface WisskiDoiRestActionsInterface {
    * @return string
    *   The response status code.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function readMetadata(string $doi);
 
@@ -82,14 +83,14 @@ interface WisskiDoiRestActionsInterface {
    * @return string
    *   The response status code.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    */
   public function deleteDoi(string $doi);
 
   /**
    * Provide some readable information of errors.
    *
-   * @param \GuzzleHttp\Exception\RequestException $error
+   * @param RequestException $error
    *   The GuzzleHttp error response.
    *
    * @return string
diff --git a/wisski_duplicate/src/Form/WisskiDuplicateForm.php b/wisski_duplicate/src/Form/WisskiDuplicateForm.php
index bcbc0c90..4836825b 100755
--- a/wisski_duplicate/src/Form/WisskiDuplicateForm.php
+++ b/wisski_duplicate/src/Form/WisskiDuplicateForm.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\wisski_duplicate\Form;
 
+use Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB;
 use Drupal\wisski_salz\Entity\Adapter;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -133,7 +134,7 @@ class WisskiDuplicateForm extends FormBase {
           
           $engine = $adapter->getEngine();
           
-          if(!($engine instanceof \Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB))
+          if(!($engine instanceof Sparql11EngineWithPB))
             continue;
           
           $triples = $engine->generateTriplesForPath($pb, $path);
@@ -148,18 +149,18 @@ class WisskiDuplicateForm extends FormBase {
 
             $options = array();
             $reses = array();
-            
+
             foreach($result as $res) {
 
               $grp = $res->grp->getValue();
-              
+
               $urls = explode(", ", $grp);
-              
+
               $grp = "";
               foreach($urls as $key => $url) {
                 $grp .= "<a href='" . base_path() . "wisski/get?uri=" . $url . "'>" . $url . "</a>, ";
               }
-              
+
               $grp = substr($grp, 0, -2);
 
               $html = $res->anzahl . "x - '" . $res->out . "' - " . $this->t('Entities: ') . $grp . "";
@@ -167,36 +168,36 @@ class WisskiDuplicateForm extends FormBase {
               $reses[$i] = $res->grp->getValue();
               $i++;
             }
-            
+
             $form['stores']['table'] = array(
               '#type' => 'checkboxes',
               '#options' => $options,
               '#title' => $this->t('What do you want to unify?'),
             );
-            
+
             $form['stores']['tableoptions'] = array(
               '#type' => 'hidden',
               '#value'=> $reses,
             );
-            
+
 /*
             $form['stores']['header'] = array(
               '#type' => 'item',
               '#markup' => '<b>Duplicates:</b><br/>',
             );
-            
+
             $table = "<table><tr><th>" . $this->t('Values') . "</th><th>" . $this->t('Count') . "</th><th>" . $this->t('Uris') . "</th><th>" . $this->t('Unify') . "</th></tr>";
-            
-            
-            
-            
+
+
+
+
             foreach($result as $res) {
               $cb = array(
                 '#type' => 'checkbox',
                 '#name' => 'check_' . $i++,
                 '#title' => $this->t('Unify'),
               );
-              
+
               $rendered = \Drupal::service('renderer')->render($cb);
 #              dpm($rendered, "ren?");
               // $table .= "<tr><td>" . $ont->ont . "</td><td>" . $ont->iri . "</td><td>" . $ont->ver . "</td><td>" . $ont->graph . "</td></tr>";
@@ -204,7 +205,7 @@ class WisskiDuplicateForm extends FormBase {
             }
 
             $table .= "</table>";
-          
+
             $form['stores']['table'] = array(
               '#type' => 'item',
               '#markup' => $table,
@@ -267,11 +268,11 @@ class WisskiDuplicateForm extends FormBase {
       $urls = explode(", ", $url_arr[$key]);
 
       $urls = array_unique($urls);
-      
+
       if(count($urls) >= 2) {
-      
+
 #      dpm($urls, "urls?");
-      
+
         $from_eids = array();
 #    \Drupal::logger('MERGE ')->debug('yay44: @yay', ['@yay' => serialize($urls)]);
         foreach ($urls as $url) {
@@ -290,7 +291,7 @@ class WisskiDuplicateForm extends FormBase {
 
 #      dpm($from_eids, "from?");
         $first = array_shift($from_eids);
-      
+
 #      dpm("I merge " . $first . " with " . serialize($from_eids));
 
         $merger = new Merger();
@@ -298,7 +299,7 @@ class WisskiDuplicateForm extends FormBase {
 
         $this->messenger()->addMessage($this->t('I merged %first with %all and got status %status', ['%first' => $first, '%all' => serialize($from_eids), '%status' => $status ]));
       }
-      
+
       // remove some of the paths that are only duplicates...
 #      $query = 
 #      foreach(
diff --git a/wisski_iip_image/src/Controller/WisskiIIIFController.php b/wisski_iip_image/src/Controller/WisskiIIIFController.php
index cb0039a1..ae4379f9 100755
--- a/wisski_iip_image/src/Controller/WisskiIIIFController.php
+++ b/wisski_iip_image/src/Controller/WisskiIIIFController.php
@@ -52,7 +52,7 @@ class WisskiIIIFController {
       $logo = $base_url . $logo;
     
     if(empty($logo)) 
-      $logo = $base_url . '/' . drupal_get_path('module', 'wisski_core') . "/images/img_nopic.png";
+      $logo = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('wisski_core') . "/images/img_nopic.png";
 
     // Basic example manifest information - this should be replaced with
     // specific details or a database call for dynamic details.
diff --git a/wisski_iip_image/wisski_iip_image.module b/wisski_iip_image/wisski_iip_image.module
index b838488c..496a4209 100755
--- a/wisski_iip_image/wisski_iip_image.module
+++ b/wisski_iip_image/wisski_iip_image.module
@@ -128,6 +128,6 @@ function wisski_iip_image_field_widget_form_alter(&$element, FormStateInterface
 function wisski_iip_image_theme_registry_alter(&$theme_registry) {
 #  dpm($theme_registry);
 #  $theme_registry['colorbox_formatter']['template'] = 'wisskiiip-colorbox-formatter';
-  $theme_registry['colorbox_formatter']['path'] = drupal_get_path('module', 'wisski_iip_image') . '/templates';
+  $theme_registry['colorbox_formatter']['path'] = \Drupal::service('extension.list.module')->getPath('wisski_iip_image') . '/templates';
 }
 
diff --git a/wisski_odbc_import/src/Form/WisskiODBCImportForm.php b/wisski_odbc_import/src/Form/WisskiODBCImportForm.php
index de0c61dc..3a305df8 100755
--- a/wisski_odbc_import/src/Form/WisskiODBCImportForm.php
+++ b/wisski_odbc_import/src/Form/WisskiODBCImportForm.php
@@ -802,7 +802,7 @@ class WisskiODBCImportForm extends FormBase {
             $out = $handler->getReferenceableEntities($fieldvalue);
 #          dpm($out, "out");
             $curr_bundle = current($out);
-            
+
             $curr_eid = NULL;
             foreach($curr_bundle as $key_eid => $val_eid) {
               if($val_eid == $fieldvalue) {
diff --git a/wisski_pathbuilder/src/Controller/WisskiPathbuilderController.php b/wisski_pathbuilder/src/Controller/WisskiPathbuilderController.php
index 22b80ecc..da98c260 100755
--- a/wisski_pathbuilder/src/Controller/WisskiPathbuilderController.php
+++ b/wisski_pathbuilder/src/Controller/WisskiPathbuilderController.php
@@ -7,6 +7,7 @@
     
 namespace Drupal\wisski_pathbuilder\Controller;
 
+use Drupal\Core\Menu\MenuLinkInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Entity\EntityForm;
@@ -36,23 +37,23 @@ class WisskiPathbuilderController extends ControllerBase {
   protected $entityQueryFactory;
 
  /**
-  * The menu link manager.
-  *
-  * @var \Drupal\Core\Menu\MenuLinkManagerInterface
-  */
+   * The menu link manager.
+   *
+   * @var MenuLinkManagerInterface
+   */
   protected $menuLinkManager;
 
   /**
    * The pathbuilder tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $pathbuilderTree;
 
   /**
    * The link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;
 
@@ -65,18 +66,18 @@ class WisskiPathbuilderController extends ControllerBase {
   public $overviewTreeForm = array('#tree' => TRUE);
 
   /**
-   * Constructs a MenuForm object.
-   *
-   * @param \Drupal\Core\Entity\Query\QueryFactory $entity_query_factory
-   *   The factory for entity queries.
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager
-   *   The menu link manager.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $pathbuilder_tree
-   *   The menu tree service.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
-   *   The link generator.
-   */
-//  public function __construct(ory, MenuLinkManagerInterface $menu_link_manager, MenuLinkTreeInterface $pathbuilder_tree, LinkGeneratorInterface $link_generator, WisskiPathbuilder $pb) {
+    * Constructs a MenuForm object.
+    *
+    * @param \Drupal\Core\Entity\Query\QueryFactory $entity_query_factory
+    *   The factory for entity queries.
+    * @param MenuLinkManagerInterface $menu_link_manager
+    *   The menu link manager.
+    * @param MenuLinkTreeInterface $pathbuilder_tree
+    *   The menu tree service.
+    * @param LinkGeneratorInterface $link_generator
+    *   The link generator.
+    */
+   //  public function __construct(ory, MenuLinkManagerInterface $menu_link_manager, MenuLinkTreeInterface $pathbuilder_tree, LinkGeneratorInterface $link_generator, WisskiPathbuilder $pb) {
    public function __construct(MenuLinkManagerInterface $menu_link_manager, MenuLinkTreeInterface $pathbuilder_tree, LinkGeneratorInterface $link_generator, MenuLinkContentStorageInterface $menu_link_content_storage, WisskiPathbuilder $pb) {
     $this->menuLinkManager = $menu_link_manager;
     $this->menuTree = $pathbuilder_tree;
@@ -487,240 +488,234 @@ class WisskiPathbuilderController extends ControllerBase {
 
   }
 /* BY KERSTIN    
-    foreach ($path_entities as $entity){        
-    #$tree = $this->menuTree->load($this->entity->id(), new MenuTreeParameters());
-    drupal_set_message('entity: ' . serialize($entity));
-    $menu_tree = \Drupal::menuTree();
-    $parameters = new MenuTreeParameters();   
-    $tree = $menu_tree->load(NULL, $parameters);
-    drupal_set_message('tree1: ');
-    drupal_set_message(serialize($tree));
-    // We indicate that a menu administrator is running the menu access check.
-   #  $entity->getRequest()->attributes->set('_menu_admin', TRUE);     
-    $manipulators = array(
-      array('callable' => 'menu.default_tree_manipulators:checkAccess'),
-      array('callable' => 'menu.default_tree_manipulators:generateIndexAndSort'),
-    #  array('callable' => 'toolbar_menu_navigation_links'),
-    );
-    $tree = $menu_tree->transform($tree, $manipulators);
-   #  $entity->getRequest()->attributes->set('_menu_admin', FALSE);   
-    drupal_set_message('tree2: ');
-    drupal_set_message(serialize($tree)); 
-
-    // Determine the delta; the number of weights to be made available.
-    $count = function(array $tree) {
-    $sum = function ($carry, MenuLinkTreeElement $item) {
-        return $carry + $item->count();    
+      foreach ($path_entities as $entity){        
+      #$tree = $this->menuTree->load($this->entity->id(), new MenuTreeParameters());
+      drupal_set_message('entity: ' . serialize($entity));
+      $menu_tree = \Drupal::menuTree();
+      $parameters = new MenuTreeParameters();   
+      $tree = $menu_tree->load(NULL, $parameters);
+      drupal_set_message('tree1: ');
+      drupal_set_message(serialize($tree));
+      // We indicate that a menu administrator is running the menu access check.
+     #  $entity->getRequest()->attributes->set('_menu_admin', TRUE);     
+      $manipulators = array(
+        array('callable' => 'menu.default_tree_manipulators:checkAccess'),
+        array('callable' => 'menu.default_tree_manipulators:generateIndexAndSort'),
+      #  array('callable' => 'toolbar_menu_navigation_links'),
+      );
+      $tree = $menu_tree->transform($tree, $manipulators);
+     #  $entity->getRequest()->attributes->set('_menu_admin', FALSE);   
+      drupal_set_message('tree2: ');
+      drupal_set_message(serialize($tree)); 
+
+      // Determine the delta; the number of weights to be made available.
+      $count = function(array $tree) {
+      $sum = function ($carry, MenuLinkTreeElement $item) {
+          return $carry + $item->count();    
+        };
+        return array_reduce($tree, $sum);
       };
-      return array_reduce($tree, $sum);
-    };
-    $delta = max($count($tree), 50);
-  }
-    $form['path_items'] = array(
-      '#type' => 'table',
-      '#theme' => 'table__menu_overview',
-     # '#header' => array(t('Label'), t('Machine name'), t('Weight'), t('Operations')), 
-      '#header' => array(
-        $this->t('Path'),
-        array(
-          'data' => $this->t('Enabled'),
-          'class' => array('checkbox'),
-        ),
-        $this->t('Weight'),
-        array(
-          'data' => $this->t('Operations'),
-          'colspan' => 3,
+      $delta = max($count($tree), 50);
+    }
+      $form['path_items'] = array(
+        '#type' => 'table',
+        '#theme' => 'table__menu_overview',
+       # '#header' => array(t('Label'), t('Machine name'), t('Weight'), t('Operations')), 
+        '#header' => array(
+          $this->t('Path'),
+          array(
+            'data' => $this->t('Enabled'),
+            'class' => array('checkbox'),
+          ),
+          $this->t('Weight'),
+          array(
+            'data' => $this->t('Operations'),
+            'colspan' => 3,
+          ),
         ),
-      ),
-      '#attributes' => array(
-        'id' => 'menu-overview',
-     # '#empty' => t('There are no items yet. <a href="@add-path-url">Add an item.</a>', array(
-     # '@add-path-url' => Url::fromRoute('entity.wisski_path.add_form'), 
-     # )), 
-       '#empty' => t('There are no WissKI Pathbuilder Paths yet.'), 
-      // TableDrag: Each array value is a list of callback arguments for
-      // drupal_add_tabledrag(). The #id of the table is automatically prepended;
-      // if there is none, an HTML ID is auto-generated.
-      '#tabledrag' => array(       
-        array(
-          'action' => 'match',
-          'relationship' => 'parent',
-          'group' => 'menu-parent',
-          'subgroup' => 'menu-parent',
-          'source' => 'menu-id',
-          'hidden' => TRUE,
-          'limit' => \Drupal::menuTree()->maxDepth() - 1,
+        '#attributes' => array(
+          'id' => 'menu-overview',
+       # '#empty' => t('There are no items yet. <a href="@add-path-url">Add an item.</a>', array(
+       # '@add-path-url' => Url::fromRoute('entity.wisski_path.add_form'), 
+       # )), 
+         '#empty' => t('There are no WissKI Pathbuilder Paths yet.'), 
+        // TableDrag: Each array value is a list of callback arguments for
+        // drupal_add_tabledrag(). The #id of the table is automatically prepended;
+        // if there is none, an HTML ID is auto-generated.
+        '#tabledrag' => array(       
+          array(
+            'action' => 'match',
+            'relationship' => 'parent',
+            'group' => 'menu-parent',
+            'subgroup' => 'menu-parent',
+            'source' => 'menu-id',
+            'hidden' => TRUE,
+            'limit' => \Drupal::menuTree()->maxDepth() - 1,
+          ),
+          array(
+            'action' => 'order',
+            'relationship' => 'sibling',
+            'group' => 'wisski-order-weight',
+          ),
         ),
-        array(
-          'action' => 'order',
-          'relationship' => 'sibling',
-          'group' => 'wisski-order-weight',
         ),
-      ),
-      ),
-    );
-    $path_items = $this->buildOverviewTreeForm($tree, $delta);
-    foreach (Element::children($path_items) as $id) {
-      if (isset($path_items[$id]['#item'])) {
-        $element = $path_items[$id];
-
-        $form['path_items'][$id]['#item'] = $element['#item'];
-
-        // TableDrag: Mark the table row as draggable.
-        $form['path_items'][$id]['#attributes'] = $element['#attributes'];
-        $form['path_items'][$id]['#attributes']['class'][] = 'draggable';
-
-        // TableDrag: Sort the table row according to its existing/configured weight.
-        $form['path_items'][$id]['#weight'] = $element['#item']->link->getWeight();
-
-        // Add special classes to be used for tabledrag.js.
-        $element['parent']['#attributes']['class'] = array('menu-parent');
-        $element['weight']['#attributes']['class'] = array('wisski-order-weight');
-        $element['id']['#attributes']['class'] = array('menu-id');
+      );
+      $path_items = $this->buildOverviewTreeForm($tree, $delta);
+      foreach (Element::children($path_items) as $id) {
+        if (isset($path_items[$id]['#item'])) {
+          $element = $path_items[$id];
+
+          $form['path_items'][$id]['#item'] = $element['#item'];
+
+          // TableDrag: Mark the table row as draggable.
+          $form['path_items'][$id]['#attributes'] = $element['#attributes'];
+          $form['path_items'][$id]['#attributes']['class'][] = 'draggable';
+
+          // TableDrag: Sort the table row according to its existing/configured weight.
+          $form['path_items'][$id]['#weight'] = $element['#item']->link->getWeight();
+
+          // Add special classes to be used for tabledrag.js.
+          $element['parent']['#attributes']['class'] = array('menu-parent');
+          $element['weight']['#attributes']['class'] = array('wisski-order-weight');
+          $element['id']['#attributes']['class'] = array('menu-id');
+
+          $form['path_items'][$id]['title'] = array(
+            array(
+              '#theme' => 'indentation',
+              '#size' => $element['#item']->depth - 1,
+            ),
+            $element['title'],
+          );
+          $form['path_items'][$id]['enabled'] = $element['enabled'];
+          $form['path_items'][$id]['enabled']['#wrapper_attributes']['class'] = array('checkbox', 'menu-enabled');
 
-        $form['path_items'][$id]['title'] = array(
-          array(
-            '#theme' => 'indentation',
-            '#size' => $element['#item']->depth - 1,
-          ),
-          $element['title'],
-        );
-        $form['path_items'][$id]['enabled'] = $element['enabled'];
-        $form['path_items'][$id]['enabled']['#wrapper_attributes']['class'] = array('checkbox', 'menu-enabled');
+          $form['path_items'][$id]['weight'] = $element['weight'];
 
-        $form['path_items'][$id]['weight'] = $element['weight'];
+          // Operations (dropbutton) column.
+          $form['path_items'][$id]['operations'] = $element['operations'];
 
-        // Operations (dropbutton) column.
-        $form['path_items'][$id]['operations'] = $element['operations'];
+          $form['links'][$id]['id'] = $element['id'];
+          $form['links'][$id]['parent'] = $element['parent'];
+        }
+      } 
 
-        $form['links'][$id]['id'] = $element['id'];
-        $form['links'][$id]['parent'] = $element['parent'];
+      return $form;
       }
-    } 
-
-    return $form;
-    }
-
-            */                                                                                           
 
+              */
+  // Build the table rows and columns.
+  // The first nested level in the render array forms the table row, on which you
+  // likely want to set #attributes and #weight.
+  // Each child element on the second level represents a table column cell in the
+  // respective table row, which are render elements on their own. For single
+  // output elements, use the table cell itself for the render element. If a cell
+  // should contain multiple elements, simply use nested sub-keys to build the
+  // render element structure for drupal_render() as you would everywhere else.
+  // Iterate through each path entity
+  #drupal_set_message('wisski pathbuilder id: ' . serialize($wisski_pathbuilder));
+  /**             
+     foreach ($path_entities as $id => $path_entity) {
+        drupal_set_message($path_entity->id . ':');
+        drupal_set_message(serialize($path_entity));
+        #drupal_set_message('name: ' . $path_entity->get('id'));
+        $weightbool = is_null($path_entity->get('weight')); 
+        #drupal_set_message(serialize($weightbool));     
+        #if ($weightbool) drupal_set_message('weight is null!');
+
+        drupal_set_message('weight: ' . $path_entity->get('weight'));
+        #drupal_set_message('weight2: ' . $path_entity->weight);
+
+       // TableDrag: Mark the table row as draggable.
+       $form['path_items'][$id]['#attributes']['class'][] = 'draggable';
+       // TableDrag: Sort the table row according to its existing/configured weight.
+       $form['path_items'][$id]['#weight'] = $path_entity->get('weight'); 
+
+       // Some table columns containing raw markup.
+       $form['path_items'][$id]['label'] = array(
+         '#plain_text' => $path_entity->label(),
+       );
+       $form['path_items'][$id]['id'] = array(
+         '#plain_text' => $path_entity->id(),
+       );
 
+       // TableDrag: Weight column element.
+       $form['path_items'][$id]['weight'] = array(
+         '#type' => 'weight',
+         '#title' => t('Weight for @title', array('@title' => $path_entity->label())),
+         '#title_display' => 'invisible',
+         '#default_value' => $path_entity->get('weight'),
+        # '#default_value' => ($weightbool ? $path_entity->set('weight', '-10') : $path_entity->get('weight')),
+        # '#delta' => 10,     
+         // Classify the weight element for #tabledrag.
+         '#attributes' => array('class' => array('wisski-order-weight')),
+         );
+
+         // Operations (dropbutton) column.
+         $form['path_items'][$id]['operations'] = array(
+           '#type' => 'operations',
+           '#links' => array(),
+         );
+         $form['path_items'][$id]['operations']['#links']['edit'] = array(
+           'title' => t('Edit'),
+           'url' => Url::fromRoute('entity.wisski_path.edit_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
+         );
+         $form['path_items'][$id]['operations']['#links']['delete'] = array(
+           'title' => t('Delete'),
+           #'url' => Url::fromRoute('entity.wisski_path.delete_form', array('id' => $id,'wisski_pathbuilder'=>$wisski_pathbuilder,'wisski_path'=>$id)),
+           'url' => Url::fromRoute('entity.wisski_path.delete_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
+         );
+       }                       
+       $form['actions'] = array('#type' => 'actions');
+       $form['actions']['submit'] = array(
+         '#type' => 'submit',
+         '#value' => t('Save changes'),
+       );
 
-    // Build the table rows and columns.
-    // The first nested level in the render array forms the table row, on which you
-    // likely want to set #attributes and #weight.
-    // Each child element on the second level represents a table column cell in the
-    // respective table row, which are render elements on their own. For single
-    // output elements, use the table cell itself for the render element. If a cell
-    // should contain multiple elements, simply use nested sub-keys to build the
-    // render element structure for drupal_render() as you would everywhere else.             
-    // Iterate through each path entity
 
-    #drupal_set_message('wisski pathbuilder id: ' . serialize($wisski_pathbuilder));
-/**             
-    foreach ($path_entities as $id => $path_entity) {
-       drupal_set_message($path_entity->id . ':');
-       drupal_set_message(serialize($path_entity));
-       #drupal_set_message('name: ' . $path_entity->get('id'));
-       $weightbool = is_null($path_entity->get('weight')); 
-       #drupal_set_message(serialize($weightbool));     
-       #if ($weightbool) drupal_set_message('weight is null!');
-
-       drupal_set_message('weight: ' . $path_entity->get('weight'));
-       #drupal_set_message('weight2: ' . $path_entity->weight);
+       return $form;
 
-      // TableDrag: Mark the table row as draggable.
-      $form['path_items'][$id]['#attributes']['class'][] = 'draggable';
-      // TableDrag: Sort the table row according to its existing/configured weight.
-      $form['path_items'][$id]['#weight'] = $path_entity->get('weight'); 
+    /**  
+      foreach($path_entities as $path_entity) {
+         drupal_set_message(serialize($path_entity));
+         drupal_set_message($path_entity->id);       
+        // Each entry will be an array using the unique id for that path_entity as
+        // the array key, and an array of table row data as the value.
+        $form['path_items'][$path_entity->id] = array(
 
-      // Some table columns containing raw markup.
-      $form['path_items'][$id]['label'] = array(
-        '#plain_text' => $path_entity->label(),
-      );
-      $form['path_items'][$id]['id'] = array(
-        '#plain_text' => $path_entity->id(),
-      );
+        // We'll use a form element of type '#markup' to display the item name.
+            'name' => array(
+              '#markup' => $path_entity->name,
+              #  ),
+            ),
 
-      // TableDrag: Weight column element.
-      $form['path_items'][$id]['weight'] = array(
-        '#type' => 'weight',
-        '#title' => t('Weight for @title', array('@title' => $path_entity->label())),
-        '#title_display' => 'invisible',
-        '#default_value' => $path_entity->get('weight'),
-       # '#default_value' => ($weightbool ? $path_entity->set('weight', '-10') : $path_entity->get('weight')),
-       # '#delta' => 10,     
-        // Classify the weight element for #tabledrag.
-        '#attributes' => array('class' => array('wisski-order-weight')),
-        );
-
-        // Operations (dropbutton) column.
-        $form['path_items'][$id]['operations'] = array(
-          '#type' => 'operations',
-          '#links' => array(),
-        );
-        $form['path_items'][$id]['operations']['#links']['edit'] = array(
-          'title' => t('Edit'),
-          'url' => Url::fromRoute('entity.wisski_path.edit_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
-        );
-        $form['path_items'][$id]['operations']['#links']['delete'] = array(
-          'title' => t('Delete'),
-          #'url' => Url::fromRoute('entity.wisski_path.delete_form', array('id' => $id,'wisski_pathbuilder'=>$wisski_pathbuilder,'wisski_path'=>$id)),
-          'url' => Url::fromRoute('entity.wisski_path.delete_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
+         // The 'weight' field will be manipulated as we move the items around in
+         // the table using the tabledrag activity.  We use the 'weight' element
+         // defined in Drupal's Form API.
+            'weight' => array(
+            '#type' => 'weight',
+            '#title' => t('Weight'),
+            '#default_value' => $path_entity->weight,
+            '#delta' => 10,
+            '#title_display' => 'invisible',
+            ),                                                                             
         );
-      }                       
-      $form['actions'] = array('#type' => 'actions');
-      $form['actions']['submit'] = array(
-        '#type' => 'submit',
-        '#value' => t('Save changes'),
-      );
 
+      }
+         // Now we add our submit button, for submitting the form results.
+         //
+         // The 'actions' wrapper used here isn't strictly necessary for tabledrag,
+         // but is included as a Form API recommended practice.
+         $form['actions'] = array('#type' => 'actions');
+         $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Save Changes'));             
 
       return $form;
-
-   /**  
-     foreach($path_entities as $path_entity) {
-        drupal_set_message(serialize($path_entity));
-        drupal_set_message($path_entity->id);       
-       // Each entry will be an array using the unique id for that path_entity as
-       // the array key, and an array of table row data as the value.
-       $form['path_items'][$path_entity->id] = array(
-
-       // We'll use a form element of type '#markup' to display the item name.
-           'name' => array(
-             '#markup' => $path_entity->name,
-             #  ),
-           ),
-
-        // The 'weight' field will be manipulated as we move the items around in
-        // the table using the tabledrag activity.  We use the 'weight' element
-        // defined in Drupal's Form API.
-           'weight' => array(
-           '#type' => 'weight',
-           '#title' => t('Weight'),
-           '#default_value' => $path_entity->weight,
-           '#delta' => 10,
-           '#title_display' => 'invisible',
-           ),                                                                             
-       );
-
-     }
-        // Now we add our submit button, for submitting the form results.
-        //
-        // The 'actions' wrapper used here isn't strictly necessary for tabledrag,
-        // but is included as a Form API recommended practice.
-        $form['actions'] = array('#type' => 'actions');
-        $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Save Changes'));             
-
-     return $form;
- */     
-    #return drupal_render($table); 
- // }
-
-
+  */
+  #return drupal_render($table);
+  // }
   /**
    * Recursive helper function for buildOverviewForm().
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeElement[] $tree
+   * @param MenuLinkTreeElement[] $tree
    *   The tree retrieved by \Drupal\Core\Menu\MenuLinkTreeInterface::load().
    * @param int $delta
    *   The default number of menu items used in the menu weight selector is 50.
@@ -739,7 +734,7 @@ class WisskiPathbuilderController extends ControllerBase {
         continue;
       }
 
-      /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+      /** @var MenuLinkInterface $link */
       $link = $element->link;
       if ($link) {
         $id = 'menu_plugin_id:' . $link->getPluginId();
diff --git a/wisski_pathbuilder/src/Controller/WisskiPathbuilderListBuilder.php b/wisski_pathbuilder/src/Controller/WisskiPathbuilderListBuilder.php
index 45c6a0d0..31a6e7ea 100755
--- a/wisski_pathbuilder/src/Controller/WisskiPathbuilderListBuilder.php
+++ b/wisski_pathbuilder/src/Controller/WisskiPathbuilderListBuilder.php
@@ -37,7 +37,7 @@ class WisskiPathbuilderListBuilder extends ConfigEntityListBuilder {
   /**
    * Gets this list's default operations.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity the operations are for.
    *
    * @return array
diff --git a/wisski_pathbuilder/src/Form/ExportAllConfirmForm.php b/wisski_pathbuilder/src/Form/ExportAllConfirmForm.php
index 98a3ff6d..92c2289d 100644
--- a/wisski_pathbuilder/src/Form/ExportAllConfirmForm.php
+++ b/wisski_pathbuilder/src/Form/ExportAllConfirmForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_pathbuilder\Form;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -26,14 +27,14 @@ class ExportAllConfirmForm extends ConfirmFormBase {
   /**
    * The variable for the pathbuilder manager service.
    *
-   * @var \Drupal\wisski_pathbuilder\PathbuilderManager
+   * @var PathbuilderManager
    */
   private PathbuilderManager $pathbuilderManager;
 
   /**
    * Create service container.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ -45,7 +46,7 @@ class ExportAllConfirmForm extends ConfirmFormBase {
   /**
    * Constructs form variables.
    *
-   * @param \Drupal\wisski_pathbuilder\PathbuilderManager $pathbuilderManager
+   * @param PathbuilderManager $pathbuilderManager
    *   Performs file system operations and updates database records accordingly.
    */
   public function __construct(PathbuilderManager $pathbuilderManager) {
@@ -91,7 +92,7 @@ class ExportAllConfirmForm extends ConfirmFormBase {
   /**
    * Loads all pathbuilders and all ontologies and saves them.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/wisski_pathbuilder/src/Form/ExporterForm.php b/wisski_pathbuilder/src/Form/ExporterForm.php
index 93d96429..b1fe192e 100755
--- a/wisski_pathbuilder/src/Form/ExporterForm.php
+++ b/wisski_pathbuilder/src/Form/ExporterForm.php
@@ -109,7 +109,7 @@ class ExporterForm extends FormBase {
     $yaml = Yaml::encode($config_assemblage);
     
     // we must not use yml extension as it is blocked by htaccess
-    $file = file_save_data($yaml, "public://pb_bundle_export.yaml");
+    $file = \Drupal::service('file.repository')->writeData($yaml, "public://pb_bundle_export.yaml");
     $uri = $file->toUrl();
 #    $uri = $file->url();
 #    $link = \Drupal\Core\Link::fromTextAndUrl($uri, \Drupal\Core\Url::fromUri($uri));
diff --git a/wisski_pathbuilder/src/Form/WisskiPathbuilderForm.php b/wisski_pathbuilder/src/Form/WisskiPathbuilderForm.php
index 7aba23c0..aaa18610 100755
--- a/wisski_pathbuilder/src/Form/WisskiPathbuilderForm.php
+++ b/wisski_pathbuilder/src/Form/WisskiPathbuilderForm.php
@@ -25,14 +25,14 @@ class WisskiPathbuilderForm extends EntityForm {
   /**
    * The FileRepositoryInterface service instance.
    *
-   * @var \Drupal\file\FileRepositoryInterface
+   * @var FileRepositoryInterface
    */
   protected FileRepositoryInterface $file;
 
   /**
    * Create service container.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ -44,7 +44,7 @@ class WisskiPathbuilderForm extends EntityForm {
   /**
    * Constructs form variables.
    *
-   * @param \Drupal\file\FileRepositoryInterface $file
+   * @param FileRepositoryInterface $file
    *   Performs file system operations and updates database records accordingly.
    */
   public function __construct(FileRepositoryInterface $file) {
@@ -484,7 +484,7 @@ class WisskiPathbuilderForm extends EntityForm {
 
     foreach ($files as $file) {
       // $form['export']['export'][] = array('#type' => 'link', '#title' => $file->filename, '#url' => Url::fromUri(file_create_url($file->uri)));
-      $items[] = ['#type' => 'link', '#title' => $file->filename, '#url' => Url::fromUri(file_create_url($file->uri))];
+      $items[] = ['#type' => 'link', '#title' => $file->filename, '#url' => \Drupal::service('file_url_generator')->generate($file->uri)];
     }
 
     $form['export']['export'] = [
@@ -543,7 +543,7 @@ class WisskiPathbuilderForm extends EntityForm {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @throws \Exception
diff --git a/wisski_pathbuilder/src/PathbuilderManager.php b/wisski_pathbuilder/src/PathbuilderManager.php
index 3fe99a29..4d28318f 100755
--- a/wisski_pathbuilder/src/PathbuilderManager.php
+++ b/wisski_pathbuilder/src/PathbuilderManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wisski_pathbuilder;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -34,7 +35,7 @@ class PathbuilderManager {
   /**
    * The FileRepositoryInterface service instance.
    *
-   * @var \Drupal\file\FileRepositoryInterface
+   * @var FileRepositoryInterface
    */
   protected FileRepositoryInterface $file;
 
@@ -46,9 +47,9 @@ class PathbuilderManager {
   /**
    * Constructs form variables.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The translations service.
-   * @param \Drupal\file\FileRepositoryInterface $file
+   * @param FileRepositoryInterface $file
    *   Performs file system operations and updates database records
    *   accordingly.
    */
@@ -509,7 +510,7 @@ class PathbuilderManager {
    * @return string
    *   The relative path to the current export directory.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function prepareExportDirectories(string $exportRootDir) {
     // Prepare file structure.
@@ -547,7 +548,7 @@ class PathbuilderManager {
    * @return bool
    *   Sucess of the export.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function exportAllOntologies(string $ontologiesDir) {
 
@@ -662,13 +663,13 @@ class PathbuilderManager {
   /**
    * Exports pathbuilder structure.
    *
-   * @param \Drupal\wisski_pathbuilder\Entity\WisskiPathbuilderEntity $pathbuilderEntity
+   * @param WisskiPathbuilderEntity $pathbuilderEntity
    *   The pathbuilder entity.
    * @param string $pathbuildersDir
    *   A folder with the current date inside the EXPORT_ROOT_DIR
    *   containing ontologies and pathbuilders.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function exportPathbuilder(WisskiPathbuilderEntity $pathbuilderEntity, string $pathbuildersDir) {
     // Create initial XML tree.
diff --git a/wisski_pathbuilder/wisski_pathbuilder.module b/wisski_pathbuilder/wisski_pathbuilder.module
index bddbda29..fd969df0 100755
--- a/wisski_pathbuilder/wisski_pathbuilder.module
+++ b/wisski_pathbuilder/wisski_pathbuilder.module
@@ -9,9 +9,8 @@ use \Drupal\wisski_pathbuilder\Entity\WisskiPathEntity;
  * Menu arugment loader. Returns a pathbuilder entity
  *
  * @param $id
- * @return \Drupal\Core\Entity\EntityInterface|static
+ * @return EntityInterface|static
  */
- 
 function wisski_pathbuilder_load($id) {
   return WisskiPathbuilderEntity::load($id);
 }
diff --git a/wisski_salz/src/AdapterInterface.php b/wisski_salz/src/AdapterInterface.php
index 02b3db76..3a981d48 100755
--- a/wisski_salz/src/AdapterInterface.php
+++ b/wisski_salz/src/AdapterInterface.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_salz;
 
+use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
 
@@ -51,7 +52,7 @@ interface AdapterInterface extends ConfigEntityInterface, EntityWithPluginCollec
 
 
   /**
-   * @return \Drupal\wisski_salz\EngineInterface
+   * @return EngineInterface
    *  The engine used by this adapter
    */
   public function getEngine();
@@ -65,7 +66,7 @@ interface AdapterInterface extends ConfigEntityInterface, EntityWithPluginCollec
   public function setEngineConfig(array $configuration);
 
   /**
-   * @return \Drupal\Core\Plugin\DefaultSingleLazyPluginCollection
+   * @return DefaultSingleLazyPluginCollection
    *  The plugin collection with the single engine
    */
   public function getEngineCollection();
diff --git a/wisski_salz/src/Annotation/Engine.php b/wisski_salz/src/Annotation/Engine.php
index 906ec9e8..01a57c0b 100755
--- a/wisski_salz/src/Annotation/Engine.php
+++ b/wisski_salz/src/Annotation/Engine.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_salz\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -28,7 +29,7 @@ class Engine extends Plugin {
   /**
    * The human readable name of the engine.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -37,7 +38,7 @@ class Engine extends Plugin {
   /**
    * A description of the engine.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/wisski_salz/src/EngineManager.php b/wisski_salz/src/EngineManager.php
index 92f8b615..65e9cae4 100755
--- a/wisski_salz/src/EngineManager.php
+++ b/wisski_salz/src/EngineManager.php
@@ -21,9 +21,9 @@ class EngineManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/wisski_salz/src/Entity/Adapter.php b/wisski_salz/src/Entity/Adapter.php
index 386b9865..b5d3e6f0 100755
--- a/wisski_salz/src/Entity/Adapter.php
+++ b/wisski_salz/src/Entity/Adapter.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_salz\Entity;
 
+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\wisski_salz\AdapterInterface;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ -116,7 +117,7 @@ class Adapter extends ConfigEntityBase implements AdapterInterface {
    *
    * This is a convenience method.
    *
-   * @return \Drupal\wisski_salz\EngineCollection
+   * @return EngineCollection
    */
   public function getEngineCollection() {
     if (!$this->engineCollection) {
@@ -132,7 +133,7 @@ class Adapter extends ConfigEntityBase implements AdapterInterface {
   /**
    * Returns the attribute manager.
    *
-   * @return \Drupal\Component\Plugin\PluginManagerInterface
+   * @return PluginManagerInterface
    *   The attribute manager.
    */
   public function getEngineManager() {
diff --git a/wisski_salz/src/Form/Adapter/AddOverviewForm.php b/wisski_salz/src/Form/Adapter/AddOverviewForm.php
index 8816d301..14f8ada1 100755
--- a/wisski_salz/src/Form/Adapter/AddOverviewForm.php
+++ b/wisski_salz/src/Form/Adapter/AddOverviewForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\wisski_salz\Form\Adapter;
 
+use Drupal\wisski_salz\EngineInterface;
 use Drupal\Core\Form\FormBase as FormBase1;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Component\Plugin\ConfigurablePluginInterface;
@@ -24,14 +25,14 @@ class AddOverviewForm extends FormBase1 {
   /**
    * The engine manager.
    *
-   * @var \Drupal\wisski_salz\EngineManager
+   * @var EngineManager
    */
   protected $manager;
 
   /**
    * Constructs a new AddForm.
    *
-   * @param \Drupal\wisski_salz\EngineManager $manager
+   * @param EngineManager $manager
    *   The engine manager.
    */
   public function __construct(EngineManager $manager) {
@@ -96,7 +97,7 @@ class AddOverviewForm extends FormBase1 {
     //  return strnatcasecmp($a['label'], $b['label']);
     //});
     foreach ($all_plugins as $definition) {
-      /** @var \Drupal\wisski_salz\EngineInterface $plugin */
+      /** @var EngineInterface $plugin */
       $plugin = $this->manager->createInstance($definition['id']);
       $row = [
         'label' => Link::createFromRoute(
diff --git a/wisski_salz/src/Query/QueryPlanner.php b/wisski_salz/src/Query/QueryPlanner.php
index 87209d0d..06a94448 100755
--- a/wisski_salz/src/Query/QueryPlanner.php
+++ b/wisski_salz/src/Query/QueryPlanner.php
@@ -165,7 +165,7 @@ class QueryPlanner {
             if ($pivot == NULL || $pivot['type'] == self::TYPE_EMPTY_PLAN) {
                 $pivot = $right;
             }
-            
+
             $left = $right; // check the next plan
         }
         return $pivot;
diff --git a/wisski_salz/src/Query/WisskiQueryDelegator.php b/wisski_salz/src/Query/WisskiQueryDelegator.php
index 24700f3a..cb816d47 100755
--- a/wisski_salz/src/Query/WisskiQueryDelegator.php
+++ b/wisski_salz/src/Query/WisskiQueryDelegator.php
@@ -4,7 +4,7 @@ namespace Drupal\wisski_salz\Query;
 
 # TODO: Check if we can generalize special cases for query classes!
 # perhaps we can add semantic methods for each of them
-
+use Drupal\wisski_adapter_dms\Query\Query;
 use Drupal\wisski_core\WisskiCacheHelper;
 use Drupal\wisski_salz\AdapterHelper;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -288,7 +288,7 @@ class WisskiQueryDelegator extends WisskiQueryBase {
       // MyF: We have to test this in a later step; so first of all we remove this in order
       if (WISSKI_DEVEL) \Drupal::logger('wisski_query_delegator')->debug("Query Strategy: In-Memory Pagination");
       foreach ($this->relevant_adapter_queries as $adapter_id => $query) {
-        if($query instanceOf \Drupal\wisski_adapter_dms\Query\Query) {
+        if($query instanceOf Query) {
           $querytmp = $query->normalQuery();
           $querytmp->range($this->range['start'],$this->range['length']);
           $ret = $querytmp->execute();
@@ -355,7 +355,7 @@ class WisskiQueryDelegator extends WisskiQueryBase {
     foreach ($this->relevant_adapter_queries as $adapter_id => $query) {
       
       // TODO: dms adapter
-      if($query instanceOf \Drupal\wisski_adapter_dms\Query\Query) {
+      if($query instanceOf Query) {
         $query = $query->count();
 
         $sub_res = $query->execute() ? : 0;
