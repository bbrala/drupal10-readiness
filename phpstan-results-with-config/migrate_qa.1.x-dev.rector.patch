diff --git a/modules/migrate_qa_demo_data/migrate_qa_demo_data.install b/modules/migrate_qa_demo_data/migrate_qa_demo_data.install
index 2dd7211..4984567 100644
--- a/modules/migrate_qa_demo_data/migrate_qa_demo_data.install
+++ b/modules/migrate_qa_demo_data/migrate_qa_demo_data.install
@@ -17,7 +17,7 @@ function migrate_qa_demo_data_install() {
   \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
 
   // Copy the example file to example directory.
-  $module_path = drupal_get_path('module', $module_name);
+  $module_path = \Drupal::service('extension.list.module')->getPath($module_name);
   $file_name = 'flag_type.csv';
   $file_source = $module_path . '/data/' . $file_name;
   \Drupal::service('file_system')->copy($file_source, $directory . '/' . $file_name, FileSystemInterface::EXISTS_REPLACE);
diff --git a/src/Controller/TrackerController.php b/src/Controller/TrackerController.php
index 4693ac3..9bbcb6d 100644
--- a/src/Controller/TrackerController.php
+++ b/src/Controller/TrackerController.php
@@ -19,32 +19,32 @@ class TrackerController extends ControllerBase implements ContainerInjectionInte
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs a TrackerController object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, EntityRepositoryInterface $entity_repository = NULL) {
diff --git a/src/Controller/TrackerRevisionController.php b/src/Controller/TrackerRevisionController.php
index b4b18ee..5c0fe4d 100644
--- a/src/Controller/TrackerRevisionController.php
+++ b/src/Controller/TrackerRevisionController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\migrate_qa\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\diff\Controller\PluginRevisionController;
 
 /**
@@ -24,8 +26,8 @@ class TrackerRevisionController extends PluginRevisionController {
    * @return array
    *   Table showing the diff between the two revisions.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function compareTrackerRevisions($left_revision, $right_revision, $filter) {
     $storage = $this->entityTypeManager()->getStorage('migrate_qa_tracker');
diff --git a/src/Entity/Connector.php b/src/Entity/Connector.php
index ce7e621..0cf7a4b 100644
--- a/src/Entity/Connector.php
+++ b/src/Entity/Connector.php
@@ -1,6 +1,8 @@
 <?php
 namespace Drupal\migrate_qa\Entity;
 
+use Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceFieldItemList;
+use Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceItem;
 use Drupal\Core\Annotation\Translation;
 use Drupal\Core\Entity\Annotation\ContentEntityType;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -51,9 +53,9 @@ class Connector extends ContentEntityBase implements ConnectorInterface {
    * {@inheritdoc}
    */
   public function label() {
-    /** @var \Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceFieldItemList $content */
+    /** @var DynamicEntityReferenceFieldItemList $content */
     $content = $this->get('content');
-    /** @var \Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityReferenceItem $item */
+    /** @var DynamicEntityReferenceItem $item */
     $item = $content->first();
     $entity = $item->entity;
     if (!empty($entity)) {
diff --git a/src/Entity/EntityReferenceViewsData.php b/src/Entity/EntityReferenceViewsData.php
index b6df819..b36ca83 100644
--- a/src/Entity/EntityReferenceViewsData.php
+++ b/src/Entity/EntityReferenceViewsData.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_qa\Entity;
 
+use Drupal\Core\Entity\Sql\DefaultTableMapping;
 use Drupal\views\EntityViewsData;
 
 /**
@@ -36,7 +37,7 @@ class EntityReferenceViewsData extends EntityViewsData {
 
       $entity_manager = $this->entityTypeManager;
       $entity_type_id = $field_storage->getTargetEntityTypeId();
-      /** @var \Drupal\Core\Entity\Sql\DefaultTableMapping $table_mapping */
+      /** @var DefaultTableMapping $table_mapping */
       $table_mapping = $entity_manager->getStorage($entity_type_id)->getTableMapping();
       $target_entity_type_id = $field_storage->getSetting('target_type');
       $target_entity_type = $entity_manager->getDefinition($target_entity_type_id);
diff --git a/src/Entity/Issue.php b/src/Entity/Issue.php
index 3c4f327..467a6bd 100644
--- a/src/Entity/Issue.php
+++ b/src/Entity/Issue.php
@@ -1,6 +1,8 @@
 <?php
 namespace Drupal\migrate_qa\Entity;
 
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Annotation\Translation;
 use Drupal\Core\Entity\Annotation\ContentEntityType;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -62,14 +64,14 @@ class Issue extends ContentEntityBase implements IssueInterface {
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
diff --git a/src/Entity/Tracker.php b/src/Entity/Tracker.php
index 095596f..9314e50 100644
--- a/src/Entity/Tracker.php
+++ b/src/Entity/Tracker.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\migrate_qa\Entity;
 
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Component\Utility\DiffArray;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityChangedTrait;
@@ -65,14 +67,14 @@ class Tracker extends ContentEntityBase implements TrackerInterface {
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
diff --git a/src/Plugin/Field/FieldType/TrackerFlags.php b/src/Plugin/Field/FieldType/TrackerFlags.php
index 2cb6134..8c0133f 100644
--- a/src/Plugin/Field/FieldType/TrackerFlags.php
+++ b/src/Plugin/Field/FieldType/TrackerFlags.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_qa\Plugin\Field\FieldType;
 
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Field\EntityReferenceFieldItemList;
 use Drupal\Core\TypedData\ComputedItemListTrait;
 use Drupal\Core\TypedData\DataDefinitionInterface;
@@ -17,7 +18,7 @@ class TrackerFlags extends EntityReferenceFieldItemList {
   /**
    * The EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   private $entityTypeManager;
 
diff --git a/src/Plugin/views/field/TrackerFlagsSummary.php b/src/Plugin/views/field/TrackerFlagsSummary.php
index b0d1b08..26fd9ad 100644
--- a/src/Plugin/views/field/TrackerFlagsSummary.php
+++ b/src/Plugin/views/field/TrackerFlagsSummary.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_qa\Plugin\views\field;
 
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -16,7 +17,7 @@ class TrackerFlagsSummary extends FieldPluginBase {
   /**
    * The EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   private $entityTypeManager;
 
diff --git a/src/Util.php b/src/Util.php
index 77ab7fa..370cd98 100644
--- a/src/Util.php
+++ b/src/Util.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\migrate_qa;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -20,32 +23,32 @@ class Util {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Util constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   Database connection service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   EntityTypeManager service.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   RouteMatch service.
    */
   public function __construct(
@@ -61,14 +64,14 @@ class Util {
   /**
    * Get status of an entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity to get a UAT status for.
    *
    * @return string
    *   The status, as a string.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getTrackerStatus(ContentEntityInterface $entity) {
     $tracker = $this->getTracker($entity);
@@ -89,14 +92,14 @@ class Util {
   /**
    * Get the tracker related to a given entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity whose tracker is being sought.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The tracker entity if found.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getTracker(ContentEntityInterface $entity) {
     $type = $entity->getEntityTypeId();
@@ -126,7 +129,7 @@ class Util {
   /**
    * Get the current content entity.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *   The entity.
    */
   public function getCurrentEntity() {
