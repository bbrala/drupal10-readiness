diff --git a/content_release.batch.inc b/content_release.batch.inc
index b862edf..2638963 100644
--- a/content_release.batch.inc
+++ b/content_release.batch.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityBase;
 /**
  * @file
  * Contains the callbacks for the content_release batch process.
@@ -16,7 +17,7 @@
  *   An array of entity idex items from the DB query.
  */
 function content_release_batch_process(string $publish_time, object $row) {
-  /** @var Drupal\Core\Entity\ContentEntityBase $entity */
+  /** @var ContentEntityBase $entity */
   // Load the entity from the DB row.
   $entity = \Drupal::entityTypeManager()
     ->getStorage($row->entity_type)
diff --git a/content_release.module b/content_release.module
index c1f93cb..5177abf 100644
--- a/content_release.module
+++ b/content_release.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\taxonomy\Entity\Term;
 /**
  * @file
  * Schedules content publishing based on release date.
@@ -38,9 +39,9 @@ function content_release_entity_base_field_info(EntityTypeInterface $entity_type
  * Implements hook_form_BASE_FORM_ID_alter() for \Drupal\taxonomy\TermForm.
  */
 function content_release_form_taxonomy_term_form_alter(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\taxonomy\Entity\Term $term */
+  /** @var Term $term */
   $term = $form_state->getFormObject()->getEntity();
-  /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+  /** @var VocabularyInterface $vocabulary */
   $vocabulary = Vocabulary::load($term->bundle());
 
   if (!$vocabulary->getThirdPartySetting('content_release', 'enabled', FALSE)) {
@@ -65,7 +66,7 @@ function content_release_form_taxonomy_term_form_alter(&$form, FormStateInterfac
  * Implements hook_form_FORM_ID_alter() for \Drupal\taxonomy\VocabularyForm.
  */
 function content_release_form_taxonomy_vocabulary_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+  /** @var VocabularyInterface $vocabulary */
   $vocabulary = $form_state->getFormObject()->getEntity();
 
   $form['content_release'] = [
@@ -106,7 +107,7 @@ function content_release_form_taxonomy_overview_terms_alter(&$form, FormStateInt
   $form['terms']['#header'][] = t('Publish date');
   $form['terms']['#header'][] = '';
   foreach (Element::children($form['terms']) as $key) {
-    /** @var \Drupal\taxonomy\Entity\Term $term */
+    /** @var Term $term */
     $term = $form['terms'][$key]['#term'];
 
     $content_release = $term->get('content_release')->value;
diff --git a/src/Access/ScheduleReleaseAccess.php b/src/Access/ScheduleReleaseAccess.php
index 4cab8e1..d90317d 100644
--- a/src/Access/ScheduleReleaseAccess.php
+++ b/src/Access/ScheduleReleaseAccess.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\content_release\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
+use Drupal\taxonomy\VocabularyInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\taxonomy\TermInterface;
@@ -15,14 +17,14 @@ class ScheduleReleaseAccess implements AccessInterface {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a ScheduleReleaseAccess object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -32,16 +34,16 @@ class ScheduleReleaseAccess implements AccessInterface {
   /**
    * Schedule release access.
    *
-   * @param \Drupal\taxonomy\TermInterface $taxonomy_term
+   * @param TermInterface $taxonomy_term
    *   The taxonomy term.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(TermInterface $taxonomy_term) {
     $vid = $taxonomy_term->bundle();
 
-    /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+    /** @var VocabularyInterface $vocabulary */
     $vocabulary = $this->entityTypeManager->getStorage('taxonomy_vocabulary')->load($vid);
 
     return $vocabulary->getThirdPartySetting('content_release', 'enabled', FALSE) ? AccessResult::allowed() : AccessResult::forbidden();
diff --git a/src/Form/ScheduleReleaseForm.php b/src/Form/ScheduleReleaseForm.php
index cd45ca2..caa675d 100644
--- a/src/Form/ScheduleReleaseForm.php
+++ b/src/Form/ScheduleReleaseForm.php
@@ -17,23 +17,23 @@ class ScheduleReleaseForm extends FormBase {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new ScheduleReleaseForm.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager service.
    */
   public function __construct(Connection $connection, EntityTypeManagerInterface $entity_type_manager) {
