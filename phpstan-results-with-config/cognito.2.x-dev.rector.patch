diff --git a/cognito.module b/cognito.module
index 16be6dc..7eb9dea 100644
--- a/cognito.module
+++ b/cognito.module
@@ -1,19 +1,20 @@
 <?php
 
+use Drupal\cognito\CognitoFlowManager;
+use Drupal\Core\Entity\EntityTypeInterface;
 /**
  * @file
  * Module file.
  */
-
 /**
  * Implements hook_entity_type_alter().
  */
 function cognito_entity_type_alter(array &$entity_types) {
-  /** @var \Drupal\cognito\CognitoFlowManager $manager */
+  /** @var CognitoFlowManager $manager */
   $manager = \Drupal::service('plugin.manager.cognito.cognito_flow');
   $flow = $manager->getSelectedFlow();
 
-  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
+  /** @var EntityTypeInterface[] $entity_types */
   $entity_types['user']->setFormClass('register', $flow->getFormClass('signup'));
 
   $entity_types['user']->setFormClass('default', $flow->getFormClass('profile'));
diff --git a/src/Aws/Cognito.php b/src/Aws/Cognito.php
index 2ac500c..89aca3f 100644
--- a/src/Aws/Cognito.php
+++ b/src/Aws/Cognito.php
@@ -13,7 +13,7 @@ class Cognito extends CognitoBase {
   /**
    * The Cognito aws-sdk client.
    *
-   * @var \Aws\CognitoIdentityProvider\CognitoIdentityProviderClient
+   * @var CognitoIdentityProviderClient
    */
   protected $client;
 
@@ -34,20 +34,20 @@ class Cognito extends CognitoBase {
   /**
    * The http client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * Cognito constructor.
    *
-   * @param \Aws\CognitoIdentityProvider\CognitoIdentityProviderClient $client
+   * @param CognitoIdentityProviderClient $client
    *   The congnito aws client.
    * @param string $clientId
    *   The client Id.
    * @param string $userPoolId
    *   The user pool Id.
-   * @param \GuzzleHttp\Client $httpClient
+   * @param Client $httpClient
    *   The http client.
    */
   public function __construct(CognitoIdentityProviderClient $client, $clientId, $userPoolId, Client $httpClient) {
@@ -334,7 +334,7 @@ class Cognito extends CognitoBase {
    * @param string $password
    *   The password.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The result includes AccessToken, RefreshToken, IdToken and ExpiresIn.
    */
   protected function adminInitiateAuth($username, $password) {
@@ -357,7 +357,7 @@ class Cognito extends CognitoBase {
    * @param string $refreshToken
    *   The refresh token.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The result includes AccessToken, IdToken and ExpiresIn.
    */
   protected function adminRefreshAccessToken($refreshToken) {
diff --git a/src/Aws/CognitoBase.php b/src/Aws/CognitoBase.php
index 0778b88..e00f098 100644
--- a/src/Aws/CognitoBase.php
+++ b/src/Aws/CognitoBase.php
@@ -15,7 +15,7 @@ abstract class CognitoBase implements CognitoInterface {
    * @param callable $callback
    *   The cognito API calls to make.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   protected function wrap(callable $callback) {
diff --git a/src/Aws/CognitoIdentityProviderClientFactory.php b/src/Aws/CognitoIdentityProviderClientFactory.php
index 5b9a454..ad8619b 100644
--- a/src/Aws/CognitoIdentityProviderClientFactory.php
+++ b/src/Aws/CognitoIdentityProviderClientFactory.php
@@ -13,10 +13,10 @@ class CognitoIdentityProviderClientFactory {
   /**
    * Creates a new client.
    *
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The settings.
    *
-   * @return \Aws\CognitoIdentityProvider\CognitoIdentityProviderClient
+   * @return CognitoIdentityProviderClient
    *   The created client.
    */
   public static function create(Settings $settings) {
diff --git a/src/Aws/CognitoInterface.php b/src/Aws/CognitoInterface.php
index 997d713..2b46d4f 100644
--- a/src/Aws/CognitoInterface.php
+++ b/src/Aws/CognitoInterface.php
@@ -15,7 +15,7 @@ interface CognitoInterface {
    * @param string $password
    *   The password.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function authorize($username, $password);
@@ -26,7 +26,7 @@ interface CognitoInterface {
    * @param string $refreshToken
    *   The refresh token.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function refreshAccessToken($refreshToken);
@@ -43,7 +43,7 @@ interface CognitoInterface {
    * @param array $userAttributes
    *   The user attributes.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function signUp($username, $password, $email, array $userAttributes = []);
@@ -54,7 +54,7 @@ interface CognitoInterface {
    * @param string $username
    *   The username.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function resendConfirmationCode($username);
@@ -67,7 +67,7 @@ interface CognitoInterface {
    * @param string $confirmCode
    *   Their verification code.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function confirmSignup($username, $confirmCode);
@@ -78,7 +78,7 @@ interface CognitoInterface {
    * @param string $username
    *   The username.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function forgotPassword($username);
@@ -91,7 +91,7 @@ interface CognitoInterface {
    * @param string $accessToken
    *   The access token.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function verifyUserAttribute($attributeName, $confirmationCode, $accessToken);
@@ -104,7 +104,7 @@ interface CognitoInterface {
    * @param string $accessToken
    *   The access token.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function getUserAttributeVerificationCode($attributeName, $accessToken);
@@ -115,7 +115,7 @@ interface CognitoInterface {
    * @param string $username
    *   The users username.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function adminGetUser($username);
@@ -130,7 +130,7 @@ interface CognitoInterface {
    * @param string $confirmationCode
    *   Their verification code.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function confirmForgotPassword($username, $password, $confirmationCode);
@@ -145,7 +145,7 @@ interface CognitoInterface {
    * @param string $newPassword
    *   The new password.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function changePassword($accessToken, $oldPassword, $newPassword);
@@ -156,7 +156,7 @@ interface CognitoInterface {
    * @param string $accessToken
    *   The access token from the auth request.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function getUser($accessToken);
@@ -169,7 +169,7 @@ interface CognitoInterface {
    * @param array $userAttributes
    *   The user attributes.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function updateUserAttributes($accessToken, array $userAttributes);
@@ -180,7 +180,7 @@ interface CognitoInterface {
    * @param string $username
    *   The username.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function adminEnableUser($username);
@@ -191,7 +191,7 @@ interface CognitoInterface {
    * @param string $username
    *   The username.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function adminDisableUser($username);
@@ -211,7 +211,7 @@ interface CognitoInterface {
    * @param array $userAttributes
    *   The user attributes.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function adminSignup($username, $email, $messageAction = '', array $userAttributes = []);
@@ -228,7 +228,7 @@ interface CognitoInterface {
    * @param string $session
    *   The unique session Id from the previous auth request.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    *
    * @see http://docs.aws.amazon.com/aws-sdk-php/v3/api/api-cognito-idp-2016-04-18.html#adminrespondtoauthchallenge
@@ -245,7 +245,7 @@ interface CognitoInterface {
    * @param string $attributeValue
    *   The attribute value.
    *
-   * @return \Drupal\cognito\Aws\CognitoResult
+   * @return CognitoResult
    *   The cognito result.
    */
   public function adminUpdateUserAttributes($username, $attributeName, $attributeValue);
diff --git a/src/CognitoFlowManagerInterface.php b/src/CognitoFlowManagerInterface.php
index 7b0c1f5..7e84147 100644
--- a/src/CognitoFlowManagerInterface.php
+++ b/src/CognitoFlowManagerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito;
 
+use Drupal\cognito\Plugin\cognito\CognitoFlowInterface;
 /**
  * The plugin manager for different cognito flows.
  */
@@ -10,7 +11,7 @@ interface CognitoFlowManagerInterface {
   /**
    * Gets the currently selected cognito plugin.
    *
-   * @return \Drupal\cognito\Plugin\cognito\CognitoFlowInterface
+   * @return CognitoFlowInterface
    *   The selected flow plugin.
    */
   public function getSelectedFlow();
diff --git a/src/CognitoMessages.php b/src/CognitoMessages.php
index 93a3e38..a1b593b 100644
--- a/src/CognitoMessages.php
+++ b/src/CognitoMessages.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 
 /**
@@ -12,14 +13,14 @@ class CognitoMessages implements CognitoMessagesInterface {
   /**
    * The Cognito configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * CognitoMessages constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
diff --git a/src/CognitoToken.php b/src/CognitoToken.php
index 6b769df..1606a0a 100644
--- a/src/CognitoToken.php
+++ b/src/CognitoToken.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\cognito\Aws\CognitoResult;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Session\AccountProxyInterface;
@@ -16,41 +17,41 @@ class CognitoToken implements CognitoTokenInterface {
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\CognitoInterface
+   * @var CognitoInterface
    */
   protected $cognito;
 
   /**
    * The current user service.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new CognitoToken object.
    *
-   * @param \Drupal\user\UserDataInterface $userData
+   * @param UserDataInterface $userData
    *   The user data service.
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(UserDataInterface $userData, CognitoInterface $cognito, AccountProxyInterface $currentUser, TimeInterface $time) {
diff --git a/src/Controller/CognitoAuthenticationController.php b/src/Controller/CognitoAuthenticationController.php
index 339a8b2..32f9e0d 100644
--- a/src/Controller/CognitoAuthenticationController.php
+++ b/src/Controller/CognitoAuthenticationController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito\Controller;
 
+use Drupal\cognito\Aws\Cognito;
 use Drupal\user\Controller\UserAuthenticationController;
 use Symfony\Component\EventDispatcher\GenericEvent;
 use Symfony\Component\HttpFoundation\Request;
@@ -16,15 +17,15 @@ class CognitoAuthenticationController extends UserAuthenticationController {
   /**
    * Logs in a user.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A response which contains the ID and CSRF token.
    */
   public function login(Request $request) {
     $format = $this->getRequestFormat($request);
-    /** @var \Drupal\cognito\Aws\Cognito $cognito */
+    /** @var Cognito $cognito */
     $cognito = \Drupal::service('cognito.aws');
     $tokens = \Drupal::service('cognito.token');
     $cognitoMessages = \Drupal::service('cognito.messages');
diff --git a/src/Controller/ConfirmationController.php b/src/Controller/ConfirmationController.php
index 87af291..36ca3a0 100644
--- a/src/Controller/ConfirmationController.php
+++ b/src/Controller/ConfirmationController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito\Controller;
 
+use Drupal\cognito\Aws\Cognito;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\cognito\CognitoMessagesInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ -20,41 +21,41 @@ class ConfirmationController extends ControllerBase {
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * The messages service.
    *
-   * @var \Drupal\cognito\CognitoMessagesInterface
+   * @var CognitoMessagesInterface
    */
   protected $cognitoMessages;
 
   /**
    * The external auth service.
    *
-   * @var \Drupal\externalauth\ExternalAuthInterface
+   * @var ExternalAuthInterface
    */
   protected $externalAuth;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * ConfirmationController constructor.
    *
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
-   * @param \Drupal\cognito\CognitoMessagesInterface $cognitoMessages
+   * @param CognitoMessagesInterface $cognitoMessages
    *   The cognito messages service.
-   * @param \Drupal\externalauth\ExternalAuthInterface $externalAuth
+   * @param ExternalAuthInterface $externalAuth
    *   The external auth service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The event dispatcher.
    */
   public function __construct(CognitoInterface $cognito, CognitoMessagesInterface $cognitoMessages, ExternalAuthInterface $externalAuth, EventDispatcherInterface $eventDispatcher) {
@@ -84,7 +85,7 @@ class ConfirmationController extends ControllerBase {
    * @param string $confirmation_code
    *   The confirmation code.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect.
    */
   public function confirm($base64_email, $confirmation_code) {
@@ -110,7 +111,7 @@ class ConfirmationController extends ControllerBase {
 
     $url = Url::fromRoute('<front>');
     $event = new GenericEvent(NULL, ['url' => $url]);
-    $this->eventDispatcher->dispatch('cognito.account_confirmed_redirect', $event);
+    $this->eventDispatcher->dispatch($event, 'cognito.account_confirmed_redirect');
 
     return new RedirectResponse($event->getArgument('url')->toString(), 302);
   }
diff --git a/src/Controller/EmailVerificationController.php b/src/Controller/EmailVerificationController.php
index 1961f89..72ae48d 100644
--- a/src/Controller/EmailVerificationController.php
+++ b/src/Controller/EmailVerificationController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito\Controller;
 
+use Drupal\cognito\Aws\Cognito;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\cognito\CognitoTokenInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ -20,41 +21,41 @@ class EmailVerificationController extends ControllerBase {
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * The external auth service.
    *
-   * @var \Drupal\externalauth\ExternalAuthInterface
+   * @var ExternalAuthInterface
    */
   protected $externalAuth;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The Cognito token.
    *
-   * @var \Drupal\cognito\CognitoTokenInterface
+   * @var CognitoTokenInterface
    */
   protected $cognitoToken;
 
   /**
    * ConfirmationController constructor.
    *
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
-   * @param \Drupal\cognito\CognitoTokenInterface $cognitoToken
+   * @param CognitoTokenInterface $cognitoToken
    *   The Cognito token.
-   * @param \Drupal\externalauth\ExternalAuthInterface $externalAuth
+   * @param ExternalAuthInterface $externalAuth
    *   The external auth service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The event dispatcher.
    */
   public function __construct(CognitoInterface $cognito, CognitoTokenInterface $cognitoToken, ExternalAuthInterface $externalAuth, EventDispatcherInterface $eventDispatcher) {
@@ -84,7 +85,7 @@ class EmailVerificationController extends ControllerBase {
    * @param string $confirmation_code
    *   The confirmation code.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect.
    */
   public function verify($base64_email, $confirmation_code) {
@@ -107,9 +108,9 @@ class EmailVerificationController extends ControllerBase {
 
     $url = Url::fromRoute('<front>');
     $event = new GenericEvent(NULL, ['url' => $url]);
-    $this->eventDispatcher->dispatch('cognito.account_verified_redirect', $event);
+    $this->eventDispatcher->dispatch($event, 'cognito.account_verified_redirect');
 
-    $this->eventDispatcher->dispatch('cognito.email_verified', new GenericEvent(NULL, ['email' => $email]));
+    $this->eventDispatcher->dispatch(new GenericEvent(NULL, ['email' => $email]), 'cognito.email_verified');
 
     return new RedirectResponse($event->getArgument('url')->toString(), 302);
   }
diff --git a/src/Event/CognitoFormEvent.php b/src/Event/CognitoFormEvent.php
index ece703c..97050f8 100644
--- a/src/Event/CognitoFormEvent.php
+++ b/src/Event/CognitoFormEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\cognito\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Form\FormStateInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines an event for when Cognito forms are submitted.
@@ -13,7 +13,7 @@ class CognitoFormEvent extends Event {
   /**
    * The form state interface.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected $formState;
 
@@ -35,7 +35,7 @@ class CognitoFormEvent extends Event {
   /**
    * CognitoFormEvent constructor.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The formState from the form being submitted.
    * @param array $userAttributes
    *   (Optional) Create the event with some user attributes.
@@ -48,7 +48,7 @@ class CognitoFormEvent extends Event {
   /**
    * Gets the formState object.
    *
-   * @return \Drupal\Core\Form\FormStateInterface
+   * @return FormStateInterface
    *   The formState object.
    */
   public function getFormState() {
diff --git a/src/Form/CognitoAccountForm.php b/src/Form/CognitoAccountForm.php
index 3cbf226..26613e5 100644
--- a/src/Form/CognitoAccountForm.php
+++ b/src/Form/CognitoAccountForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\cognito\Form;
 
+use Drupal\cognito\Aws\Cognito;
+use Drupal\cognito\CognitoMessages;
+use Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\cognito\CognitoMessagesInterface;
 use Drupal\cognito\CognitoTokenInterface;
@@ -24,67 +27,67 @@ class CognitoAccountForm extends AccountForm {
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * The cognito messages service.
    *
-   * @var \Drupal\cognito\CognitoMessages
+   * @var CognitoMessages
    */
   protected $cognitoMessages;
 
   /**
    * The external auth service.
    *
-   * @var \Drupal\externalauth\ExternalAuthInterface
+   * @var ExternalAuthInterface
    */
   protected $externalAuth;
 
   /**
    * The authmap service.
    *
-   * @var \Drupal\externalauth\AuthmapInterface
+   * @var AuthmapInterface
    */
   protected $authmap;
 
   /**
    * The eventDispatcher service.
    *
-   * @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher
+   * @var ContainerAwareEventDispatcher
    */
   protected $eventDispatcher;
 
   /**
    * The cognito token service.
    *
-   * @var \Drupal\cognito\CognitoTokenInterface
+   * @var CognitoTokenInterface
    */
   protected $cognitoToken;
 
   /**
    * Constructs a new EntityForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The translation service.
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
-   * @param \Drupal\cognito\CognitoMessagesInterface $cognitoMessages
+   * @param CognitoMessagesInterface $cognitoMessages
    *   The cognito messages service.
-   * @param \Drupal\externalauth\ExternalAuthInterface $externalAuth
+   * @param ExternalAuthInterface $externalAuth
    *   The external auth service.
-   * @param \Drupal\externalauth\AuthmapInterface $authmap
+   * @param AuthmapInterface $authmap
    *   The authmap service.
-   * @param \Drupal\cognito\CognitoTokenInterface $cognitoToken
+   * @param CognitoTokenInterface $cognitoToken
    *   The cognito token service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, LanguageManagerInterface $language_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL, TranslationInterface $translation, CognitoInterface $cognito, CognitoMessagesInterface $cognitoMessages, ExternalAuthInterface $externalAuth, AuthmapInterface $authmap, EventDispatcherInterface $eventDispatcher, CognitoTokenInterface $cognitoToken) {
diff --git a/src/Form/Email/NewPasswordForm.php b/src/Form/Email/NewPasswordForm.php
index 24f5c7f..032ad56 100644
--- a/src/Form/Email/NewPasswordForm.php
+++ b/src/Form/Email/NewPasswordForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito\Form\Email;
 
+use Drupal\cognito\Aws\Cognito;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\cognito\Plugin\cognito\CognitoFlowInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -21,14 +22,14 @@ class NewPasswordForm extends FormBase implements ContainerInjectionInterface {
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * PassResetForm constructor.
    *
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
    */
   public function __construct(CognitoInterface $cognito) {
diff --git a/src/Form/Email/PassResetForm.php b/src/Form/Email/PassResetForm.php
index dee6a7c..7dbd32a 100644
--- a/src/Form/Email/PassResetForm.php
+++ b/src/Form/Email/PassResetForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\cognito\Form\Email;
 
+use Drupal\cognito\Aws\Cognito;
+use Psr\Log\LoggerInterface;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -30,16 +32,16 @@ class PassResetForm extends FormBase {
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * PassResetForm constructor.
    *
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.
    */
   public function __construct(CognitoInterface $cognito) {
@@ -167,7 +169,7 @@ class PassResetForm extends FormBase {
    *
    * This method handles saving any submitted values and rebuilding the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function showConfirmationStep(FormStateInterface $form_state) {
diff --git a/src/Form/Email/RegisterForm.php b/src/Form/Email/RegisterForm.php
index e9ed029..9877ac9 100644
--- a/src/Form/Email/RegisterForm.php
+++ b/src/Form/Email/RegisterForm.php
@@ -73,7 +73,7 @@ class RegisterForm extends CognitoAccountForm {
    *
    * @param array $element
    *   The password element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -141,7 +141,7 @@ class RegisterForm extends CognitoAccountForm {
     }
 
     $event = new CognitoFormEvent($form_state);
-    $this->eventDispatcher->dispatch(CognitoEvents::REGISTER, $event);
+    $this->eventDispatcher->dispatch($event, CognitoEvents::REGISTER);
     $userAttributes = $event->getUserAttributes();
 
     $result = $this->cognito->signUp($email, $password, $email, $userAttributes);
@@ -186,7 +186,7 @@ class RegisterForm extends CognitoAccountForm {
    *
    * @param string $email
    *   The users email address.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function attemptResend($email, FormStateInterface $form_state) {
@@ -216,7 +216,7 @@ class RegisterForm extends CognitoAccountForm {
       }
 
       $event = new GenericEvent(NULL, ['url' => Url::fromRoute('<front>')]);
-      $this->eventDispatcher->dispatch('cognito.registered_click_to_confirm', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_click_to_confirm');
       $form_state->setRedirectUrl($event->getArgument('url'));
     }
     elseif ($this->usesAutoConfirm() || $this->showConfirmation) {
@@ -235,7 +235,7 @@ class RegisterForm extends CognitoAccountForm {
         $this->cognitoToken->setAuthTokens($result->getResult()['AuthenticationResult']);
       }
       $event = new GenericEvent(NULL, ['url' => Url::fromRoute('<front>')]);
-      $this->eventDispatcher->dispatch('cognito.registered_logged_in', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_logged_in');
       $form_state->setRedirectUrl($event->getArgument('url'));
     }
     else {
@@ -249,7 +249,7 @@ class RegisterForm extends CognitoAccountForm {
    *
    * This method handles saving any submitted values and rebuilding the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function showConfirmationStep(FormStateInterface $form_state) {
diff --git a/src/Form/Email/UserLoginForm.php b/src/Form/Email/UserLoginForm.php
index df2a388..f97e209 100644
--- a/src/Form/Email/UserLoginForm.php
+++ b/src/Form/Email/UserLoginForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\cognito\Form\Email;
 
+use Drupal\cognito\Aws\Cognito;
+use Drupal\cognito\CognitoMessages;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\cognito\Aws\CognitoResult;
 use Drupal\cognito\CognitoFlowManagerInterface;
@@ -24,59 +26,59 @@ class UserLoginForm extends FormBase {
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * The messages service.
    *
-   * @var \Drupal\cognito\CognitoMessages
+   * @var CognitoMessages
    */
   protected $cognitoMessages;
 
   /**
    * The external auth service.
    *
-   * @var \Drupal\externalauth\ExternalAuthInterface
+   * @var ExternalAuthInterface
    */
   protected $externalAuth;
 
   /**
    * The cognito flow manager.
    *
-   * @var \Drupal\cognito\CognitoFlowManagerInterface
+   * @var CognitoFlowManagerInterface
    */
   protected $cognitoFlowManager;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The cognito token service.
    *
-   * @var \Drupal\cognito\CognitoTokenInterface
+   * @var CognitoTokenInterface
    */
   protected $cognitoToken;
 
   /**
    * UserLoginForm constructor.
    *
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
-   * @param \Drupal\cognito\CognitoMessagesInterface $cognitoMessages
+   * @param CognitoMessagesInterface $cognitoMessages
    *   The cognito messages service.
-   * @param \Drupal\cognito\CognitoFlowManagerInterface $cognitoFlowManager
+   * @param CognitoFlowManagerInterface $cognitoFlowManager
    *   The cognito flow plugin manager.
-   * @param \Drupal\externalauth\ExternalAuthInterface $externalAuth
+   * @param ExternalAuthInterface $externalAuth
    *   The external auth service.
-   * @param \Drupal\cognito\CognitoTokenInterface $cognitoToken
+   * @param CognitoTokenInterface $cognitoToken
    *   The cognito token service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The event dispatcher.
    */
   public function __construct(CognitoInterface $cognito, CognitoMessagesInterface $cognitoMessages, CognitoFlowManagerInterface $cognitoFlowManager, ExternalAuthInterface $externalAuth, CognitoTokenInterface $cognitoToken, EventDispatcherInterface $eventDispatcher) {
@@ -194,7 +196,7 @@ class UserLoginForm extends FormBase {
     $event = new GenericEvent(NULL, [
       'login-context' => \Drupal::request()->get('cognito-login-context') ?: [],
     ]);
-    $this->eventDispatcher->dispatch('cognito.logged_in', $event);
+    $this->eventDispatcher->dispatch($event, 'cognito.logged_in');
 
     // Store authentication tokens.
     if ($form_state->get('authentication_result')) {
diff --git a/src/Form/VerifyEmail.php b/src/Form/VerifyEmail.php
index 766fa00..b26d46b 100644
--- a/src/Form/VerifyEmail.php
+++ b/src/Form/VerifyEmail.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito\Form;
 
+use Drupal\cognito\Aws\Cognito;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\cognito\CognitoTokenInterface;
 use Drupal\Core\Form\FormBase;
@@ -30,32 +31,32 @@ class VerifyEmail extends FormBase {
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * The Cognito token.
    *
-   * @var \Drupal\cognito\CognitoTokenInterface
+   * @var CognitoTokenInterface
    */
   protected $cognitoToken;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * PassResetForm constructor.
    *
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The cognito service.
-   * @param \Drupal\cognito\CognitoTokenInterface $cognitoToken
+   * @param CognitoTokenInterface $cognitoToken
    *   The cognito token.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The event dispatcher.
    */
   public function __construct(CognitoInterface $cognito, CognitoTokenInterface $cognitoToken, EventDispatcherInterface $eventDispatcher) {
@@ -172,7 +173,7 @@ class VerifyEmail extends FormBase {
     }
     else {
       $this->getLogger('cognito')->notice('Your email has now been verified');
-      $this->eventDispatcher->dispatch('cognito.email_verified', new GenericEvent());
+      $this->eventDispatcher->dispatch(new GenericEvent(), 'cognito.email_verified');
     }
   }
 
@@ -189,7 +190,7 @@ class VerifyEmail extends FormBase {
    *
    * This method handles saving any submitted values and rebuilding the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function showConfirmationStep(FormStateInterface $form_state) {
diff --git a/src/Plugin/rest/resource/CognitoAuthToken.php b/src/Plugin/rest/resource/CognitoAuthToken.php
index 567a6f8..2dcb551 100644
--- a/src/Plugin/rest/resource/CognitoAuthToken.php
+++ b/src/Plugin/rest/resource/CognitoAuthToken.php
@@ -25,7 +25,7 @@ class CognitoAuthToken extends ResourceBase {
   /**
    * The Cognito token service.
    *
-   * @var \Drupal\cognito\CognitoTokenInterface
+   * @var CognitoTokenInterface
    */
   protected $cognitoToken;
 
@@ -40,9 +40,9 @@ class CognitoAuthToken extends ResourceBase {
    *   Plugin definition.
    * @param array $serializer_formats
    *   Serializer Formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\cognito\CognitoTokenInterface $cognitoToken
+   * @param CognitoTokenInterface $cognitoToken
    *   Cognito token service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, array $serializer_formats, LoggerInterface $logger, CognitoTokenInterface $cognitoToken) {
diff --git a/src/Plugin/rest/resource/CognitoUserRegistrationResource.php b/src/Plugin/rest/resource/CognitoUserRegistrationResource.php
index ad34246..3b19ad6 100644
--- a/src/Plugin/rest/resource/CognitoUserRegistrationResource.php
+++ b/src/Plugin/rest/resource/CognitoUserRegistrationResource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cognito\Plugin\rest\resource;
 
+use Drupal\cognito\Aws\Cognito;
 use Drupal\cognito\Aws\CognitoInterface;
 use Drupal\cognito\Aws\CognitoResult;
 use Drupal\cognito\CognitoMessagesInterface;
@@ -44,56 +45,56 @@ class CognitoUserRegistrationResource extends ResourceBase {
   /**
    * User settings config instance.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $userSettings;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The cognito service.
    *
-   * @var \Drupal\cognito\Aws\Cognito
+   * @var Cognito
    */
   protected $cognito;
 
   /**
    * The Cognito messages service.
    *
-   * @var \Drupal\cognito\CognitoMessagesInterface
+   * @var CognitoMessagesInterface
    */
   protected $cognitoMessages;
 
   /**
    * The external auth service.
    *
-   * @var \Drupal\externalauth\ExternalAuthInterface
+   * @var ExternalAuthInterface
    */
   protected $externalAuth;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Cognito token.
    *
-   * @var \Drupal\cognito\CognitoTokenInterface
+   * @var CognitoTokenInterface
    */
   protected $cognitoToken;
 
@@ -108,23 +109,23 @@ class CognitoUserRegistrationResource extends ResourceBase {
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Config\ImmutableConfig $user_settings
+   * @param ImmutableConfig $user_settings
    *   A user settings config instance.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\cognito\Aws\CognitoInterface $cognito
+   * @param CognitoInterface $cognito
    *   The Cognito service.
-   * @param \Drupal\cognito\CognitoTokenInterface $cognitoToken
+   * @param CognitoTokenInterface $cognitoToken
    *   The Cognito token.
-   * @param \Drupal\cognito\CognitoMessagesInterface $cognitoMessages
+   * @param CognitoMessagesInterface $cognitoMessages
    *   The messages service.
-   * @param \Drupal\externalauth\ExternalAuthInterface $external_auth
+   * @param ExternalAuthInterface $external_auth
    *   The external auth service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, array $serializer_formats, LoggerInterface $logger, ImmutableConfig $user_settings, AccountInterface $current_user, CognitoInterface $cognito, CognitoTokenInterface $cognitoToken, CognitoMessagesInterface $cognitoMessages, ExternalAuthInterface $external_auth, EventDispatcherInterface $event_dispatcher, ConfigFactoryInterface $configFactory) {
@@ -163,14 +164,14 @@ class CognitoUserRegistrationResource extends ResourceBase {
   /**
    * Responds to user registration POST request.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The user account entity.
    *
-   * @return \Drupal\rest\ModifiedResourceResponse
+   * @return ModifiedResourceResponse
    *   The HTTP response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\BadRequestHttpException
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws BadRequestHttpException
+   * @throws AccessDeniedHttpException
    */
   public function post(UserInterface $account = NULL) {
     $this->ensureAccountCanRegister($account);
@@ -225,10 +226,10 @@ class CognitoUserRegistrationResource extends ResourceBase {
       if ($result instanceof CognitoResult && isset($result->getResult()['AuthenticationResult'])) {
         $this->cognitoToken->setAuthTokens($result->getResult()['AuthenticationResult']);
       }
-      $this->eventDispatcher->dispatch('cognito.registered_logged_in', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_logged_in');
     }
     else {
-      $this->eventDispatcher->dispatch('cognito.registered_click_to_confirm', $event);
+      $this->eventDispatcher->dispatch($event, 'cognito.registered_click_to_confirm');
     }
 
     return new ModifiedResourceResponse([
@@ -242,7 +243,7 @@ class CognitoUserRegistrationResource extends ResourceBase {
   /**
    * Ensure the account can be registered in this request.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The user account to register.
    */
   protected function ensureAccountCanRegister(UserInterface $account = NULL) {
@@ -272,7 +273,7 @@ class CognitoUserRegistrationResource extends ResourceBase {
   /**
    * Sends email notifications if necessary for user that was registered.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The user account.
    */
   protected function sendEmailNotifications(UserInterface $account) {
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index 3e53e58..65b7ccb 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -14,14 +14,14 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The cognito flow plugin manager.
    *
-   * @var \Drupal\cognito\CognitoFlowManager
+   * @var CognitoFlowManager
    */
   protected $cognitoFlowManager;
 
   /**
    * RouteSubscriber constructor.
    *
-   * @param \Drupal\cognito\CognitoFlowManager $cognitoFlowManager
+   * @param CognitoFlowManager $cognitoFlowManager
    *   The cognito flow plugin manager.
    */
   public function __construct(CognitoFlowManager $cognitoFlowManager) {
diff --git a/tests/src/Functional/CognitoRegistrationResourceTest.php b/tests/src/Functional/CognitoRegistrationResourceTest.php
index 0049125..b0c54b8 100644
--- a/tests/src/Functional/CognitoRegistrationResourceTest.php
+++ b/tests/src/Functional/CognitoRegistrationResourceTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\cognito\Functional;
 
+use Symfony\Component\Serializer\Serializer;
+use Drupal\user\UserInterface;
+use Psr\Http\Message\ResponseInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\rest\Functional\CookieResourceTestTrait;
@@ -41,7 +44,7 @@ class CognitoRegistrationResourceTest extends ResourceTestBase {
   /**
    * The serializer service.
    *
-   * @var \Symfony\Component\Serializer\Serializer
+   * @var Serializer
    */
   protected $serializer;
 
@@ -62,7 +65,7 @@ class CognitoRegistrationResourceTest extends ResourceTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     user_role_grant_permissions(AccountInterface::ANONYMOUS_ROLE, ['restful post cognito_user_registration']);
   }
@@ -94,7 +97,7 @@ class CognitoRegistrationResourceTest extends ResourceTestBase {
     $response = $this->request('POST', $url, $request_options);
     $result = json_decode($response->getBody(), TRUE);
 
-    /** @var \Drupal\user\UserInterface $account */
+    /** @var UserInterface $account */
     $accounts = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties(['mail' => 'ben@example.com']);
     $account = reset($accounts);
 
@@ -112,12 +115,12 @@ class CognitoRegistrationResourceTest extends ResourceTestBase {
    *
    * @param string $method
    *   The HTTP method.
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *   A Url object.
    * @param array $request_options
    *   The request options.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   The response.
    */
   protected function request($method, Url $url, array $request_options) {
diff --git a/tests/src/Functional/CognitoTestBase.php b/tests/src/Functional/CognitoTestBase.php
index b91e066..e8c5838 100644
--- a/tests/src/Functional/CognitoTestBase.php
+++ b/tests/src/Functional/CognitoTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\cognito\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -27,7 +28,7 @@ abstract class CognitoTestBase extends BrowserTestBase {
    * @param array $extraFields
    *   The extra user fields.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The newly created user.
    */
   protected function createExternalUser(array $permissions = [], array $extraFields = []) {
diff --git a/tests/src/Functional/EmailFlowAdminCreateAccountTest.php b/tests/src/Functional/EmailFlowAdminCreateAccountTest.php
index bc26413..7db3cb0 100644
--- a/tests/src/Functional/EmailFlowAdminCreateAccountTest.php
+++ b/tests/src/Functional/EmailFlowAdminCreateAccountTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\cognito\Functional;
 
+use Drupal\user\UserInterface;
 /**
  * Test admins creating new accounts.
  *
@@ -12,21 +13,22 @@ class EmailFlowAdminCreateAccountTest extends CognitoTestBase {
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $admin;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->admin = $this->createExternalUser([
       'administer permissions',
       'administer users',
     ]);
+    $this->drupalGet('/user/login');
 
-    $this->drupalPostForm('/user/login', [
+    $this->submitForm([
       'mail' => $this->admin->getEmail(),
       'pass' => 'letmein',
     ], 'Log in');
@@ -40,7 +42,8 @@ class EmailFlowAdminCreateAccountTest extends CognitoTestBase {
     $this->assertSession()->fieldNotExists('pass[pass1]');
 
     $mail = strtolower($this->randomMachineName() . '@example.com');
-    $this->drupalPostForm('/admin/people/create', [
+    $this->drupalGet('/admin/people/create');
+    $this->submitForm([
       'mail' => $mail,
       'status' => 1,
     ], 'Register');
