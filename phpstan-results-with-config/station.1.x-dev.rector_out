modules/contrib/station/station.module
modules/contrib/station/station_playlist/src/Controller/PlaylistAddByProgramController.php
modules/contrib/station/station_playlist/src/Controller/PlaylistsByProgramController.php
modules/contrib/station/station_playlist/station_playlist.module
modules/contrib/station/station_schedule/src/ContextProvider/ScheduledItemContext.php
modules/contrib/station/station_schedule/src/Controller/AlterScheduleController.php
modules/contrib/station/station_schedule/src/Controller/ScheduleItemController.php
modules/contrib/station/station_schedule/src/DatetimeHelper.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleAddForm.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleDeleteForm.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleEditForm.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleFormBase.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleItemAddForm.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleItemDeleteForm.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleItemEditForm.php
modules/contrib/station/station_schedule/src/Entity/Form/ScheduleItemFormBase.php
modules/contrib/station/station_schedule/src/Entity/Schedule.php
modules/contrib/station/station_schedule/src/Entity/ScheduleItem.php
modules/contrib/station/station_schedule/src/Entity/ScheduleItemRouteProvider.php
modules/contrib/station/station_schedule/src/Entity/ScheduleItemViewBuilder.php
modules/contrib/station/station_schedule/src/Entity/ScheduleListBuilder.php
modules/contrib/station/station_schedule/src/Entity/ScheduleRouteProvider.php
modules/contrib/station/station_schedule/src/Entity/ScheduleViewBuilder.php
modules/contrib/station/station_schedule/src/Form/ScheduleSettingsForm.php
modules/contrib/station/station_schedule/src/Plugin/Block/ScheduledItemBlock.php
modules/contrib/station/station_schedule/src/Plugin/Field/FieldWidget/Hour.php
modules/contrib/station/station_schedule/src/Plugin/Field/FieldWidget/Increment.php
modules/contrib/station/station_schedule/src/Plugin/Field/FieldWidget/Range.php
modules/contrib/station/station_schedule/src/Routing/ScheduleRouteProvider.php
modules/contrib/station/station_schedule/src/ScheduleInterface.php
modules/contrib/station/station_schedule/src/ScheduleItemInterface.php
modules/contrib/station/station_schedule/src/ScheduleRepository.php
modules/contrib/station/station_schedule/src/ScheduleRepositoryInterface.php
modules/contrib/station/station_schedule/station_schedule.module
modules/contrib/station/station_schedule/tests/src/Functional/StationScheduleUITest.php
modules/contrib/station/station_schedule/tests/src/Unit/DatetimeHelperTest.php
modules/contrib/station/station_schedule/tests/src/Unit/HourWidgetTest.php

18 files with changes
=====================

1) modules/contrib/station/station_schedule/tests/src/Unit/HourWidgetTest.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\station_schedule\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\station_schedule\Plugin\Field\FieldWidget\Hour;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class HourWidgetTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::hourOptions
    * @dataProvider providerTestHourOptions
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/station/station_schedule/tests/src/Functional/StationScheduleUITest.php:5

    ---------- begin diff ----------
@@ @@
  */
 namespace Drupal\Tests\station_schedule\Functional;

+use Drupal\node\NodeInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   protected static $modules = ['station_schedule'];

   /**
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $programNode;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/station/station_schedule/station_schedule.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\station_schedule\ScheduleItemInterface;
 /**
  * @file
  * Provides hook implementations for the Station Schedule module.
@@ @@
  * Default template: station-schedule-item.html.twig.
  */
 function template_preprocess_station_schedule_item(&$variables) {
-  /** @var \Drupal\station_schedule\ScheduleItemInterface $entity */
+  /** @var ScheduleItemInterface $entity */
   $entity = $variables['elements']['#station_schedule_item'];

   $variables['time'] = DatetimeHelper::hourRange($entity->getStart(), $entity->getFinish());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


4) modules/contrib/station/station_schedule/src/ScheduleRepositoryInterface.php:7

    ---------- begin diff ----------
@@ @@
 interface ScheduleRepositoryInterface {

   /**
-   * @return \Drupal\station_schedule\ScheduleInterface|null
+   * @return ScheduleInterface|null
    */
   public function getCurrentSchedule();

@@ @@
   public function getCurrentScheduleId();

   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface|null
+   * @return ScheduleItemInterface|null
    */
   public function getCurrentScheduleItem();

   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface|null
+   * @return ScheduleItemInterface|null
    */
   public function getNextScheduleItem();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/station/station_schedule/src/ScheduleRepository.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\station_schedule;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\station_schedule\Entity\Schedule;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $scheduleItemStorage;

   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * ScheduleRepository constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory) {
     $this->scheduleItemStorage = $entity_type_manager->getStorage('station_schedule_item');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/station/station_schedule/src/ScheduleItemInterface.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\station_schedule;

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\ContentEntityInterface;

 /**
@@ @@
   public function getFinish();

   /**
-   * @return \Drupal\station_schedule\ScheduleInterface
+   * @return ScheduleInterface
    */
   public function getSchedule();

   /**
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    */
   public function getProgram();

   /**
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    */
   public function getDjs();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/station/station_schedule/src/ScheduleInterface.php:22

    ---------- begin diff ----------
@@ @@
   public function getUnscheduledMessage();

   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface[]
+   * @return ScheduleItemInterface[]
    */
   public function getScheduledItems();

   /**
-   * @return \Drupal\station_schedule\ScheduleItemInterface[][]
+   * @return ScheduleItemInterface[][]
    */
   public function getScheduledItemsByDay();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


8) modules/contrib/station/station_schedule/src/Routing/ScheduleRouteProvider.php:19

    ---------- begin diff ----------
@@ @@
 class ScheduleRouteProvider implements ContainerInjectionInterface {

   /**
-   * @var \Drupal\station_schedule\ScheduleRepositoryInterface
+   * @var ScheduleRepositoryInterface
    */
   protected $scheduleRepository;

@@ @@
   /**
    * ScheduleRouteProvider constructor.
    *
-   * @param \Drupal\station_schedule\ScheduleRepositoryInterface $schedule_repository
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ScheduleRepositoryInterface $schedule_repository
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ScheduleRepositoryInterface $schedule_repository, ConfigFactoryInterface $config_factory) {
     $this->configFactory = $config_factory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/station/station_schedule/src/Plugin/Block/ScheduledItemBlock.php:26

    ---------- begin diff ----------
@@ @@
 class ScheduledItemBlock extends BlockBase implements ContainerFactoryPluginInterface {

   /**
-   * @var \Drupal\station_schedule\ScheduleRepositoryInterface
+   * @var ScheduleRepositoryInterface
    */
   protected $scheduleRepository;

   /**
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $scheduleItemViewBuilder;

@@ @@
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\station_schedule\ScheduleRepositoryInterface $schedule_repository
-   * @param \Drupal\Core\Entity\EntityViewBuilderInterface $view_builder
+   * @param ScheduleRepositoryInterface $schedule_repository
+   * @param EntityViewBuilderInterface $view_builder
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ScheduleRepositoryInterface $schedule_repository, EntityViewBuilderInterface $view_builder) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/station/station_schedule/src/Form/ScheduleSettingsForm.php:19

    ---------- begin diff ----------
@@ @@
 class ScheduleSettingsForm extends ConfigFormBase {

   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $scheduleStorage;

   /**
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;

@@ @@
   /**
    * ScheduleSettingsForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $schedule_storage
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $route_builder
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param EntityStorageInterface $schedule_storage
+   * @param RouteBuilderInterface $route_builder
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(EntityStorageInterface $schedule_storage, RouteBuilderInterface $route_builder, ConfigFactoryInterface $config_factory) {
     parent::__construct($config_factory);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/station/station_schedule/src/Entity/ScheduleViewBuilder.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\station_schedule\Entity;

+use Drupal\station_schedule\ScheduleInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Datetime\DateHelper;
 use Drupal\Core\Datetime\DrupalDateTime;
@@ @@
    * {@inheritdoc}
    */
   public function view(EntityInterface $entity, $view_mode = 'full', $langcode = NULL) {
-    /** @var \Drupal\station_schedule\ScheduleInterface $entity */
+    /** @var ScheduleInterface $entity */
     $header[0] = ['data' => $this->t('Time')];
     $row = [];

@@ @@
       $last_finish = $minutes_for_day + ($start_hour * 60);
       $day_finish = $minutes_for_day + ($end_hour * 60);

-      /** @var \Drupal\station_schedule\ScheduleItemInterface[] $items */
+      /** @var ScheduleItemInterface[] $items */
       foreach ($items as $item) {
         $start = $item->getStart();
         $finish = $item->getFinish();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


12) modules/contrib/station/station_schedule/src/Entity/ScheduleListBuilder.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\station_schedule\Entity;

+use Drupal\station_schedule\ScheduleInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Url;
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\station_schedule\ScheduleInterface $entity */
+    /** @var ScheduleInterface $entity */
     $row['title']['data'] = [
       '#type' => 'link',
       '#title' => $entity->label(),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/station/station_schedule/src/Entity/Schedule.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\station_schedule\Entity;

+use Drupal\station_schedule\ScheduleItemInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Datetime\DateHelper;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
   /**
    * Runtime only.
    *
-   * @var \Drupal\station_schedule\ScheduleItemInterface[]
+   * @var ScheduleItemInterface[]
    */
   protected $scheduledItems;

@@ @@
   /**
    * Runtime only.
    *
-   * @var \Drupal\station_schedule\ScheduleItemInterface[][]
+   * @var ScheduleItemInterface[][]
    */
   protected $scheduledItemsByDay;

@@ @@
   }

   /**
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    */
   protected function scheduleItemStorage() {
     return \Drupal::service('entity_type.manager')->getStorage('station_schedule_item');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/station/station_schedule/src/Entity/Form/ScheduleItemFormBase.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\station_schedule\Entity\Form;

+use Drupal\station_schedule\ScheduleItemInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\station_schedule\ScheduleItemInterface
+   * @return ScheduleItemInterface
    */
   public function getEntity() {
     return parent::getEntity();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/station/station_schedule/src/Entity/Form/ScheduleItemDeleteForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\station_schedule\Entity\Form;

+use Drupal\station_schedule\ScheduleItemInterface;
 use Drupal\Core\Entity\ContentEntityDeleteForm;

 /**
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\station_schedule\ScheduleItemInterface
+   * @return ScheduleItemInterface
    */
   public function getEntity() {
     return parent::getEntity();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


16) modules/contrib/station/station_schedule/src/Controller/AlterScheduleController.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * @todo.
    *
-   * @param \Drupal\station_schedule\ScheduleInterface $station_schedule
+   * @param ScheduleInterface $station_schedule
    *
    * @return array
    */
@@ @@
   /**
    * @todo.
    *
-   * @param \Drupal\station_schedule\ScheduleInterface $schedule
+   * @param ScheduleInterface $schedule
    * @param int $start
    * @param int $finish
    *
@@ @@
   /**
    * @todo.
    *
-   * @param \Drupal\station_schedule\ScheduleItemInterface $schedule_item
+   * @param ScheduleItemInterface $schedule_item
    *
    * @return array
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


17) modules/contrib/station/station_schedule/src/ContextProvider/ScheduledItemContext.php:20

    ---------- begin diff ----------
@@ @@
   use StringTranslationTrait;

   /**
-   * @var \Drupal\station_schedule\ScheduleRepositoryInterface
+   * @var ScheduleRepositoryInterface
    */
   protected $scheduleRepository;

@@ @@
   /**
    * ScheduledItemContext constructor.
    *
-   * @param \Drupal\station_schedule\ScheduleRepositoryInterface $schedule_repository
+   * @param ScheduleRepositoryInterface $schedule_repository
    */
   public function __construct(ScheduleRepositoryInterface $schedule_repository) {
     $this->scheduleRepository = $schedule_repository;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


18) modules/contrib/station/station_playlist/src/Controller/PlaylistsByProgramController.php:21

    ---------- begin diff ----------
@@ @@
   use StringTranslationTrait;

   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $playlistStorage;

@@ @@
   /**
    * PlaylistsByProgramController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $playlist_storage
+   * @param EntityStorageInterface $playlist_storage
    */
   public function __construct(EntityStorageInterface $playlist_storage) {
     $this->playlistStorage = $playlist_storage;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 18 files have been changed by Rector                                      

