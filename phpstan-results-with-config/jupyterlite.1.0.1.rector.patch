diff --git a/jupyterlite.info.yml b/jupyterlite.info.yml
index be36a8c..e1aaa86 100644
--- a/jupyterlite.info.yml
+++ b/jupyterlite.info.yml
@@ -1,7 +1,7 @@
 name: JupyterLite
 description: Adds a JupyterLite environment to Drupal.
 type: module
-core_version_requirement: ^9
+core_version_requirement: ^9 || ^10
 
 # Information added by Drupal.org packaging script on 2022-02-12
 version: '1.0.1'
diff --git a/src/Controller/JupyterLiteController.php b/src/Controller/JupyterLiteController.php
index 9beb25b..ab77c00 100644
--- a/src/Controller/JupyterLiteController.php
+++ b/src/Controller/JupyterLiteController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\jupyterlite\Controller;
 
+use Drupal\Core\State\State;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Session\AccountProxyInterface;
@@ -23,21 +24,21 @@ class JupyterLiteController extends ControllerBase {
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -45,11 +46,11 @@ class JupyterLiteController extends ControllerBase {
   /**
    * Constructs a new JupyterLiteController object.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *          The request stack.
-   * @param \Drupal\Core\State\State $state
+   * @param State $state
    *          The object State.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(RequestStack $request_stack, ConfigFactoryInterface $config_factory,
     AccountProxyInterface $currentUser) {
@@ -116,7 +117,7 @@ class JupyterLiteController extends ControllerBase {
     $response = new Response();
     $response->setStatusCode(200);
 
-    $cookie = new Cookie('jupyterliteDrupalBasePath', $base_path, $expire = 0, $path = '/', $domain = null, $secure = false, $httpOnly = false, $raw = true, $sameSite = null);
+    $cookie = Cookie::create('jupyterliteDrupalBasePath', $base_path, $expire = 0, $path = '/', $domain = null, $secure = false, $httpOnly = false, $raw = true, $sameSite = null);
     $response->headers->setCookie($cookie);
 
     $response->headers->set('Content-Type', $content_type);
diff --git a/src/EventSubscriber/RequestSubscriber.php b/src/EventSubscriber/RequestSubscriber.php
index 5826eed..d120038 100644
--- a/src/EventSubscriber/RequestSubscriber.php
+++ b/src/EventSubscriber/RequestSubscriber.php
@@ -3,12 +3,12 @@
 
 namespace Drupal\jupyterlite\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Controller\ControllerResolverInterface;
 use Drupal\Core\Routing\RouteProviderInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -19,30 +19,30 @@ class RequestSubscriber implements EventSubscriberInterface  {
   /**
    * The Argument Resolver service.
    *
-   * @var \Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface
+   * @var ArgumentResolverInterface
    */
   protected $argumentResolver;
 
   /**
    * The Controller Resolver service.
    *
-   * @var \Drupal\Core\Controller\ControllerResolverInterface
+   * @var ControllerResolverInterface
    */
   protected $controllerResolver;
 
   /**
    * The Route Provider service.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
   /**
    * RequestSubscriber constructor.
    *
-   * @param \Drupal\Core\Routing\RouteProviderInterface $routeProvider
-   * @param \Drupal\Core\Controller\ControllerResolverInterface $controllerResolver
-   * @param \Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface $argumentResolver
+   * @param RouteProviderInterface $routeProvider
+   * @param ControllerResolverInterface $controllerResolver
+   * @param ArgumentResolverInterface $argumentResolver
    */
   public function __construct(RouteProviderInterface $routeProvider, ControllerResolverInterface $controllerResolver, ArgumentResolverInterface $argumentResolver) {
     $this->routeProvider = $routeProvider;
@@ -53,10 +53,10 @@ class RequestSubscriber implements EventSubscriberInterface  {
   /**
    * The request event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event.
    */
-  public function checkAppRequest(GetResponseEvent $event) {
+  public function checkAppRequest(RequestEvent $event) {
     $request = $event->getRequest();
     $path = $request->getPathInfo();
 
