modules/contrib/custom_purge/custom_purge.api.php
modules/contrib/custom_purge/custom_purge.module
modules/contrib/custom_purge/src/Annotation/PurgePlugin.php
modules/contrib/custom_purge/src/Commands/CustomPurgeCommands.php
modules/contrib/custom_purge/src/Form/UrlPurgeForm.php
modules/contrib/custom_purge/src/Plugin/DomainSensitiveCacheInterface.php
modules/contrib/custom_purge/src/Plugin/DomainSensitiveCacheTrait.php
modules/contrib/custom_purge/src/Plugin/DomainSettings.php
modules/contrib/custom_purge/src/Plugin/PurgePluginBase.php
modules/contrib/custom_purge/src/Plugin/PurgePluginInterface.php
modules/contrib/custom_purge/src/Plugin/PurgePluginManager.php
modules/contrib/custom_purge/src/Plugin/PurgePluginSettings.php
modules/contrib/custom_purge/src/Plugin/QueueWorker/CustomPurgeEverything.php
modules/contrib/custom_purge/src/Plugin/QueueWorker/CustomPurgeUrls.php
modules/contrib/custom_purge/src/Plugin/QueueWorker/CustomPurgeWorkerBase.php
modules/contrib/custom_purge/src/Plugin/custom_purge/Purge/CloudflarePurgePlugin.php
modules/contrib/custom_purge/src/Plugin/custom_purge/Purge/DrupalPageCachePurgePlugin.php
modules/contrib/custom_purge/src/Plugin/custom_purge/Purge/VarnishPurgePlugin.php
modules/contrib/custom_purge/src/Purger.php

13 files with changes
=====================

1) modules/contrib/custom_purge/src/Purger.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\custom_purge;

+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\custom_purge\Plugin\PurgePluginInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * The (optional) messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The purge plugin manager.
    *
-   * @var \Drupal\custom_purge\Plugin\PurgePluginManager
+   * @var PurgePluginManager
    */
   protected $purgePluginManager;

@@ @@
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The Purger constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
-   * @param \Drupal\custom_purge\Plugin\PurgePluginManager $purge_plugin_manager
+   * @param PurgePluginManager $purge_plugin_manager
    *   The purge plugin manager.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, LoggerChannelFactoryInterface $logger_factory, PurgePluginManager $purge_plugin_manager, QueueFactory $queue_factory, TimeInterface $time) {
@@ @@
   /**
    * Set the messenger.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface|null $messenger
+   * @param MessengerInterface|null $messenger
    *   The messenger. Set to NULL to unset the messenger.
    */
   public function setMessenger(MessengerInterface $messenger = NULL) {
@@ @@
     }

     foreach ($urls_by_domain as $domain => $domain_urls) {
-      /** @var \Drupal\custom_purge\Plugin\PurgePluginInterface $purge_plugin */
+      /** @var PurgePluginInterface $purge_plugin */
       foreach ($this->purgePluginManager->getPurgePluginsForDomain($domain, $caches) as $purge_plugin) {
         $plugin_settings = $purge_plugin->getPurgePluginSettings();
         $cache_name = $plugin_settings->getCacheName();
@@ @@
       $queue_items = [];
     }

-    /** @var \Drupal\custom_purge\Plugin\PurgePluginInterface $purge_plugin */
+    /** @var PurgePluginInterface $purge_plugin */
     foreach ($purge_plugins as $purge_plugin) {
       $plugin_settings = $purge_plugin->getPurgePluginSettings();
       $cache_name = $plugin_settings->getCacheName();
@@ @@
    * @param string $name
    *   (Optional) The name of the config. Skip to get the custom_purge.settings.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The configuration object.
    */
   protected function getConfig($name = 'custom_purge.settings') {
@@ @@
    *
    * @param string $log_level
    *   A log level, as defined via constant from \Psr\Log\LogLevel.
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   The translated message to log.
    * @param bool $include_messenger
    *   (Optional) Set to FALSE if you definetly not want to print the message.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/custom_purge/src/Plugin/custom_purge/Purge/VarnishPurgePlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\custom_purge\Plugin\custom_purge\Purge;

+use GuzzleHttp\Client;
 use Drupal\custom_purge\Plugin\DomainSensitiveCacheInterface;
 use Drupal\custom_purge\Plugin\DomainSensitiveCacheTrait;
 use Drupal\custom_purge\Plugin\PurgePluginBase;
@@ @@
   /**
    * The http client for purging single urls.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $singlePurgeClient;

@@ @@
   /**
    * The http client for purging everything.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $purgeEverythingClient;

@@ @@
   /**
    * The request object used for purging everything.
    *
-   * @var \GuzzleHttp\Psr7\Request
+   * @var Request
    */
   protected $purgeEverythingRequest;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/custom_purge/src/Plugin/custom_purge/Purge/DrupalPageCachePurgePlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\custom_purge\Plugin\custom_purge\Purge;

+use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\custom_purge\Plugin\PurgePluginBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;

@@ @@
   /**
    * The backend of the page cache, if it exists.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface|null
+   * @var CacheBackendInterface|null
    */
   protected $cacheBackend;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/custom_purge/src/Plugin/custom_purge/Purge/CloudflarePurgePlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\custom_purge\Plugin\custom_purge\Purge;

+use GuzzleHttp\Client;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\custom_purge\Plugin\PurgePluginBase;
 use GuzzleHttp\Exception\GuzzleException;
 use GuzzleHttp\RequestOptions;
@@ @@
   /**
    * The http client for purging the cloudflare cache.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $purgeClient;

@@ @@
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     $instance = parent::create($container, $configuration, $plugin_id, $plugin_definition);
-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
+    /** @var ModuleHandlerInterface $module_handler */
     $module_handler = $container->get('module_handler');
     if ($module_handler->moduleExists('cloudflare') && $instance->settings->get('use_cf_settings')) {
-      /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+      /** @var ConfigFactoryInterface $config_factory */
       $config_factory = $container->get('config.factory');
       $cloudflare_config = $config_factory->get('cloudflare.settings');
       $instance->zoneId = $cloudflare_config->get('zone_id');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/custom_purge/src/Plugin/QueueWorker/CustomPurgeWorkerBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\custom_purge\Plugin\QueueWorker;

+use Drupal\custom_purge\Purger;
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Queue\QueueFactory;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Queue\QueueWorkerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The purger service.
    *
-   * @var \Drupal\custom_purge\Purger
+   * @var Purger
    */
   protected $purger;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/custom_purge/src/Plugin/PurgePluginManager.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * A cached list of instantiated purge plugins.
    *
-   * @var \Drupal\custom_purge\Plugin\PurgePluginInterface[]
+   * @var PurgePluginInterface[]
    */
   protected $purgePlugins;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ @@
    *   at known Varnish instances. ['name' => ['my_varnish_instance']] Purges
    *   the urls only at a known instance having the specified name.
    *
-   * @return \Drupal\custom_purge\Plugin\PurgePluginInterface[]
+   * @return PurgePluginInterface[]
    *   A list of purge plugins for the domain.
    */
   public function getPurgePluginsForDomain($domain, array $caches = []) {
@@ @@
   /**
    * Set the config factory.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function setConfigFactory(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/custom_purge/src/Plugin/PurgePluginInterface.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * Get the purge plugin settings.
    *
-   * @return \Drupal\custom_purge\Plugin\PurgePluginSettings
+   * @return PurgePluginSettings
    *   The purge plugin settings.
    */
   public function getPurgePluginSettings();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/custom_purge/src/Plugin/PurgePluginBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\custom_purge\Plugin;

+use GuzzleHttp\Client;
+use Psr\Log\LoggerInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The settings of this purge cache plugin.
    *
-   * @var \Drupal\custom_purge\Plugin\PurgePluginSettings
+   * @var PurgePluginSettings
    */
   protected $settings;

@@ @@
    * @param array $config
    *   (Optional) The client configuration.
    *
-   * @return \GuzzleHttp\Client
+   * @return Client
    *   The http client instance.
    *
    * @see \Drupal\Core\Http\ClientFactory::fromOptions
@@ @@
   /**
    * Get the logger channel.
    *
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    *   The logger channel.
    */
   protected static function logger() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/custom_purge/src/Plugin/DomainSensitiveCacheTrait.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * The domain settings.
    *
-   * @var \Drupal\custom_purge\Plugin\DomainSettings
+   * @var DomainSettings
    */
   protected $domainSettings;

@@ @@
   /**
    * Set the domain settings.
    *
-   * @param \Drupal\custom_purge\Plugin\DomainSettings $settings
+   * @param DomainSettings $settings
    *   The domain settings.
    */
   public function setDomainSettings(DomainSettings $settings) {
@@ @@
   /**
    * Get the domain settings.
    *
-   * @return \Drupal\custom_purge\Plugin\DomainSettings
+   * @return DomainSettings
    *   The domain settings.
    */
   public function getDomainSettings() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/custom_purge/src/Plugin/DomainSensitiveCacheInterface.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Set the domain settings.
    *
-   * @param \Drupal\custom_purge\Plugin\DomainSettings $settings
+   * @param DomainSettings $settings
    *   The domain settings.
    */
   public function setDomainSettings(DomainSettings $settings);
@@ @@
   /**
    * Get the domain settings.
    *
-   * @return \Drupal\custom_purge\Plugin\DomainSettings
+   * @return DomainSettings
    *   The domain settings.
    */
   public function getDomainSettings();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/custom_purge/src/Form/UrlPurgeForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The flood control mechanism.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The purger.
    *
-   * @var \Drupal\custom_purge\Purger
+   * @var Purger
    */
   protected $purger;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $dbConnection;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Flood\FloodInterface $flood
+   * @param FloodInterface $flood
    *   The flood control mechanism.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date service.
-   * @param \Drupal\custom_purge\Purger $purger
+   * @param Purger $purger
    *   The Url purger.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Database\Connection $db_connection
+   * @param Connection $db_connection
    *   The database connection.
    */
   public function __construct(FloodInterface $flood, DateFormatterInterface $date_formatter, Purger $purger, ModuleHandlerInterface $module_handler, Connection $db_connection) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/custom_purge/src/Commands/CustomPurgeCommands.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The Purger service.
    *
-   * @var \Drupal\custom_purge\Purger
+   * @var Purger
    */
   protected $purger;

@@ @@
   /**
    * Construct of CustomPurgeCommands.
    *
-   * @param \Drupal\custom_purge\Purger $purger
+   * @param Purger $purger
    *   The Purger service.
    */
   public function __construct(Purger $purger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/custom_purge/src/Annotation/PurgePlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\custom_purge\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 13 files have been changed by Rector                                      

