diff --git a/domain_lang.info.yml b/domain_lang.info.yml
index 0db60d8..3c56b96 100644
--- a/domain_lang.info.yml
+++ b/domain_lang.info.yml
@@ -2,8 +2,7 @@ name: Domain Lang
 description: 'Adds language detection and selection functionality per domain basis.'
 type: module
 package: Domain
-core: '8.x'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 
 dependencies:
   - drupal:language
diff --git a/src/DomainLangHandler.php b/src/DomainLangHandler.php
index ad070ed..bbf5b4a 100644
--- a/src/DomainLangHandler.php
+++ b/src/DomainLangHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\domain_lang;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,59 +21,59 @@ class DomainLangHandler implements DomainLangHandlerInterface {
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The language negotiation method plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $negotiatorManager;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\language\ConfigurableLanguageManagerInterface
+   * @var ConfigurableLanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The language negotiator.
    *
-   * @var \Drupal\language\LanguageNegotiatorInterface
+   * @var LanguageNegotiatorInterface
    */
   protected $languageNegotiator;
 
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The currently active route match object.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $currentRouteMatch;
 
   /**
    * Constructs a new class object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $negotiator_manager
+   * @param PluginManagerInterface $negotiator_manager
    *   The language negotiation methods plugin manager.
-   * @param \Drupal\language\ConfigurableLanguageManagerInterface $language_manager
+   * @param ConfigurableLanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\language\LanguageNegotiatorInterface $language_negotiator
+   * @param LanguageNegotiatorInterface $language_negotiator
    *   The language negotiation methods manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $current_route_match
+   * @param RouteMatchInterface $current_route_match
    *   The currently active route match object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PluginManagerInterface $negotiator_manager, ConfigurableLanguageManagerInterface $language_manager, LanguageNegotiatorInterface $language_negotiator, EntityTypeManagerInterface $entity_type_manager, RouteMatchInterface $current_route_match) {
@@ -87,7 +88,7 @@ class DomainLangHandler implements DomainLangHandlerInterface {
   /**
    * Returns mutable configuration object for language types.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   The language types config object.
    */
   protected function getLanguageTypesConfig() {
@@ -100,7 +101,7 @@ class DomainLangHandler implements DomainLangHandlerInterface {
    * @param string $config_name
    *   The name of the config object.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   Editable config object.
    */
   protected function getEditableConfig($config_name) {
diff --git a/src/DomainLangHandlerInterface.php b/src/DomainLangHandlerInterface.php
index cbe5dd0..49236d8 100644
--- a/src/DomainLangHandlerInterface.php
+++ b/src/DomainLangHandlerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\domain_lang;
 
+use Drupal\domain_lang\Exception\DomainLangDomainNotFoundException;
 use Drupal\domain\DomainInterface;
 
 /**
@@ -14,7 +15,7 @@ interface DomainLangHandlerInterface {
    *
    * @param string $config_name
    *   The name of the config object.
-   * @param \Drupal\domain\DomainInterface $domain
+   * @param DomainInterface $domain
    *   Domain object.
    *
    * @return string
@@ -25,10 +26,10 @@ interface DomainLangHandlerInterface {
   /**
    * Return domain object from URL.
    *
-   * @return \Drupal\domain\DomainInterface
+   * @return DomainInterface
    *   Loaded domain object.
    *
-   * @throws \Drupal\domain_lang\Exception\DomainLangDomainNotFoundException
+   * @throws DomainLangDomainNotFoundException
    *   In case if domain not found.
    */
   public function getDomainFromUrl();
diff --git a/src/EventSubscriber/DomainLangConfigRedirect.php b/src/EventSubscriber/DomainLangConfigRedirect.php
index d47c140..89fb08d 100644
--- a/src/EventSubscriber/DomainLangConfigRedirect.php
+++ b/src/EventSubscriber/DomainLangConfigRedirect.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\domain_lang\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -10,7 +11,6 @@ use Drupal\domain\DomainInterface;
 use Drupal\domain\DomainNegotiatorInterface;
 use Symfony\Cmf\Component\Routing\RouteObjectInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -22,23 +22,23 @@ class DomainLangConfigRedirect implements EventSubscriberInterface {
   /**
    * The domain negotiator.
    *
-   * @var \Drupal\domain\DomainNegotiatorInterface
+   * @var DomainNegotiatorInterface
    */
   protected $domainNegotiator;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new class object.
    *
-   * @param \Drupal\domain\DomainNegotiatorInterface $domain_negotiator
+   * @param DomainNegotiatorInterface $domain_negotiator
    *   The domain negotiator service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(DomainNegotiatorInterface $domain_negotiator, MessengerInterface $messenger) {
@@ -49,10 +49,10 @@ class DomainLangConfigRedirect implements EventSubscriberInterface {
   /**
    * Check current request and redirect if needed.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   Current request response event.
    */
-  public function checkRequest(GetResponseEvent $event) {
+  public function checkRequest(RequestEvent $event) {
     $domain = $this->domainNegotiator->getActiveDomain();
 
     if ($domain instanceof DomainInterface) {
@@ -98,14 +98,14 @@ class DomainLangConfigRedirect implements EventSubscriberInterface {
   /**
    * Sets TrustedRedirectResponse to redirect to related domain page.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The request response event.
    * @param string $route
    *   The name of the route.
-   * @param \Drupal\domain\DomainInterface $domain
+   * @param DomainInterface $domain
    *   The domain object.
    */
-  protected function setRedirectResponse(GetResponseEvent $event, $route, DomainInterface $domain) {
+  protected function setRedirectResponse(RequestEvent $event, $route, DomainInterface $domain) {
     $event->setResponse(new TrustedRedirectResponse(Url::fromRoute(
       $route,
       ['domain' => $domain->id()],
diff --git a/src/Form/DomainLangNegotiationBrowserDeleteForm.php b/src/Form/DomainLangNegotiationBrowserDeleteForm.php
index e193fe8..3709983 100644
--- a/src/Form/DomainLangNegotiationBrowserDeleteForm.php
+++ b/src/Form/DomainLangNegotiationBrowserDeleteForm.php
@@ -16,7 +16,7 @@ class DomainLangNegotiationBrowserDeleteForm extends NegotiationBrowserDeleteFor
   /**
    * The domain lang handler.
    *
-   * @var \Drupal\domain_lang\DomainLangHandlerInterface
+   * @var DomainLangHandlerInterface
    */
   protected $domainLangHandler;
 
@@ -30,7 +30,7 @@ class DomainLangNegotiationBrowserDeleteForm extends NegotiationBrowserDeleteFor
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\domain_lang\DomainLangHandlerInterface $domain_lang_handler
+   * @param DomainLangHandlerInterface $domain_lang_handler
    *   The domain lang handler.
    */
   public function __construct(DomainLangHandlerInterface $domain_lang_handler) {
diff --git a/src/Form/DomainLangNegotiationBrowserForm.php b/src/Form/DomainLangNegotiationBrowserForm.php
index b637714..5962127 100644
--- a/src/Form/DomainLangNegotiationBrowserForm.php
+++ b/src/Form/DomainLangNegotiationBrowserForm.php
@@ -18,7 +18,7 @@ class DomainLangNegotiationBrowserForm extends NegotiationBrowserForm {
   /**
    * The domain lang handler.
    *
-   * @var \Drupal\domain_lang\DomainLangHandlerInterface
+   * @var DomainLangHandlerInterface
    */
   protected $domainLangHandler;
 
@@ -32,11 +32,11 @@ class DomainLangNegotiationBrowserForm extends NegotiationBrowserForm {
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\language\ConfigurableLanguageManagerInterface $language_manager
+   * @param ConfigurableLanguageManagerInterface $language_manager
    *   The configurable language manager.
-   * @param \Drupal\domain_lang\DomainLangHandlerInterface $domain_lang_handler
+   * @param DomainLangHandlerInterface $domain_lang_handler
    *   The domain lang handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ConfigurableLanguageManagerInterface $language_manager, DomainLangHandlerInterface $domain_lang_handler) {
diff --git a/src/Form/DomainLangNegotiationConfigureForm.php b/src/Form/DomainLangNegotiationConfigureForm.php
index 56d7850..4d8b1fe 100644
--- a/src/Form/DomainLangNegotiationConfigureForm.php
+++ b/src/Form/DomainLangNegotiationConfigureForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\domain_lang\Form;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Block\BlockManagerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -25,14 +26,14 @@ class DomainLangNegotiationConfigureForm extends NegotiationConfigureForm {
   /**
    * The domain lang handler.
    *
-   * @var \Drupal\domain_lang\DomainLangHandlerInterface
+   * @var DomainLangHandlerInterface
    */
   protected $domainLangHandler;
 
   /**
    * Route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
@@ -46,21 +47,21 @@ class DomainLangNegotiationConfigureForm extends NegotiationConfigureForm {
   /**
    * Constructs a NegotiationConfigureForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\language\ConfigurableLanguageManagerInterface $language_manager
+   * @param ConfigurableLanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\language\LanguageNegotiatorInterface $negotiator
+   * @param LanguageNegotiatorInterface $negotiator
    *   The language negotiation methods manager.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $block_storage
+   * @param EntityStorageInterface $block_storage
    *   The block storage, or NULL if not available.
-   * @param \Drupal\domain_lang\DomainLangHandlerInterface $domain_lang_handler
+   * @param DomainLangHandlerInterface $domain_lang_handler
    *   The domain lang handler.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   Route provider.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ConfigurableLanguageManagerInterface $language_manager, LanguageNegotiatorInterface $negotiator, BlockManagerInterface $block_manager, ThemeHandlerInterface $theme_handler, EntityStorageInterface $block_storage = NULL, DomainLangHandlerInterface $domain_lang_handler, RouteProviderInterface $route_provider) {
@@ -80,7 +81,7 @@ class DomainLangNegotiationConfigureForm extends NegotiationConfigureForm {
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager */
+    /** @var EntityTypeManagerInterface $entity_manager */
     $entity_manager = $container->get('entity_type.manager');
     $block_storage = $entity_manager->hasHandler('block', 'storage') ? $entity_manager->getStorage('block') : NULL;
     return new static(
diff --git a/src/Form/DomainLangNegotiationSelectedForm.php b/src/Form/DomainLangNegotiationSelectedForm.php
index 3f7c451..d43d7ac 100644
--- a/src/Form/DomainLangNegotiationSelectedForm.php
+++ b/src/Form/DomainLangNegotiationSelectedForm.php
@@ -16,7 +16,7 @@ class DomainLangNegotiationSelectedForm extends NegotiationSelectedForm {
   /**
    * The domain lang handler.
    *
-   * @var \Drupal\domain_lang\DomainLangHandlerInterface
+   * @var DomainLangHandlerInterface
    */
   protected $domainLangHandler;
 
@@ -30,9 +30,9 @@ class DomainLangNegotiationSelectedForm extends NegotiationSelectedForm {
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\domain_lang\DomainLangHandlerInterface $domain_lang_handler
+   * @param DomainLangHandlerInterface $domain_lang_handler
    *   The domain lang handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, DomainLangHandlerInterface $domain_lang_handler) {
diff --git a/src/Form/DomainLangNegotiationSessionForm.php b/src/Form/DomainLangNegotiationSessionForm.php
index 28ab440..b8b0fbd 100644
--- a/src/Form/DomainLangNegotiationSessionForm.php
+++ b/src/Form/DomainLangNegotiationSessionForm.php
@@ -16,7 +16,7 @@ class DomainLangNegotiationSessionForm extends NegotiationSessionForm {
   /**
    * The domain lang handler.
    *
-   * @var \Drupal\domain_lang\DomainLangHandlerInterface
+   * @var DomainLangHandlerInterface
    */
   protected $domainLangHandler;
 
@@ -30,9 +30,9 @@ class DomainLangNegotiationSessionForm extends NegotiationSessionForm {
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\domain_lang\DomainLangHandlerInterface $domain_lang_handler
+   * @param DomainLangHandlerInterface $domain_lang_handler
    *   The domain lang handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, DomainLangHandlerInterface $domain_lang_handler) {
diff --git a/src/Form/DomainLangNegotiationUrlForm.php b/src/Form/DomainLangNegotiationUrlForm.php
index 882cbe8..82439b8 100644
--- a/src/Form/DomainLangNegotiationUrlForm.php
+++ b/src/Form/DomainLangNegotiationUrlForm.php
@@ -20,7 +20,7 @@ class DomainLangNegotiationUrlForm extends NegotiationUrlForm {
   /**
    * The domain lang handler.
    *
-   * @var \Drupal\domain_lang\DomainLangHandlerInterface
+   * @var DomainLangHandlerInterface
    */
   protected $domainLangHandler;
 
@@ -34,11 +34,11 @@ class DomainLangNegotiationUrlForm extends NegotiationUrlForm {
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\domain_lang\DomainLangHandlerInterface $domain_lang_handler
+   * @param DomainLangHandlerInterface $domain_lang_handler
    *   The domain lang handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LanguageManagerInterface $language_manager, DomainLangHandlerInterface $domain_lang_handler) {
