diff --git a/feeds.module b/feeds.module
index e42f1d54..29efe2b9 100644
--- a/feeds.module
+++ b/feeds.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\file\FileInterface;
 /**
  * @file
  * Feeds hook implementations.
@@ -156,7 +157,7 @@ function feeds_theme_suggestions_feeds_feed(array $variables) {
  */
 function feeds_file_download($uri) {
   // Get the file record based on the URI. If not in the database just return.
-  /** @var \Drupal\file\FileInterface[] $files */
+  /** @var FileInterface[] $files */
   $files = \Drupal::entityTypeManager()
     ->getStorage('file')
     ->loadByProperties(['uri' => $uri]);
diff --git a/src/Access/FeedAddAccessCheck.php b/src/Access/FeedAddAccessCheck.php
index 14718e73..a88a2cec 100644
--- a/src/Access/FeedAddAccessCheck.php
+++ b/src/Access/FeedAddAccessCheck.php
@@ -15,14 +15,14 @@ class FeedAddAccessCheck implements AccessInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a FeedAddAccessCheck object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Annotation/FeedsBase.php b/src/Annotation/FeedsBase.php
index cb25973e..ec089283 100644
--- a/src/Annotation/FeedsBase.php
+++ b/src/Annotation/FeedsBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -19,7 +20,7 @@ abstract class FeedsBase extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -28,7 +29,7 @@ abstract class FeedsBase extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Commands/FeedsDrushCommands.php b/src/Commands/FeedsDrushCommands.php
index bab6a1c5..f7acc751 100644
--- a/src/Commands/FeedsDrushCommands.php
+++ b/src/Commands/FeedsDrushCommands.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\feeds\Commands;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\EntityInterface;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
@@ -23,14 +25,14 @@ class FeedsDrushCommands extends DrushCommands {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new FeedsDrushCommands object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -46,7 +48,7 @@ class FeedsDrushCommands extends DrushCommands {
    * @param array $options
    *   A list of options for this command. See below.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Tabular data, that can be processed by drush.
    *
    * @command feeds:list-feeds
@@ -71,8 +73,8 @@ class FeedsDrushCommands extends DrushCommands {
    * @usage feeds:list-feeds --limit=10
    * @usage feeds:list-feeds --limit=10 my_feed_type
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function listFeeds($feed_type = '', array $options = [
     'limit' => 0,
@@ -101,7 +103,7 @@ class FeedsDrushCommands extends DrushCommands {
     // Loop through all retrieved feed entities and prepare them for display in
     // the formatted table.
     $tableData = [];
-    /** @var \Drupal\feeds\FeedInterface $feed */
+    /** @var FeedInterface $feed */
     foreach ($feeds as $feed) {
       $tableData[$feed->id()] = [
         'feed_type' => $feed->bundle(),
@@ -129,9 +131,9 @@ class FeedsDrushCommands extends DrushCommands {
    * @aliases feeds-en
    * @usage feeds:enable 1
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   In case the feed could not be loaded.
-   * @throws \Drush\Exceptions\UserAbortException
+   * @throws UserAbortException
    *   In case the user aborts the import process.
    */
   public function enableFeed($fid = NULL) {
@@ -174,9 +176,9 @@ class FeedsDrushCommands extends DrushCommands {
    * @aliases feeds-dis
    * @usage feeds:disable 1
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   In case the feed could not be loaded.
-   * @throws \Drush\Exceptions\UserAbortException
+   * @throws UserAbortException
    *   In case the user aborts the import process.
    */
   public function disableFeed($fid = NULL) {
@@ -223,7 +225,7 @@ class FeedsDrushCommands extends DrushCommands {
    *   Also import feed if it is not active.
    * @usage feeds:import 1
    *
-   * @throws \Drush\Exceptions\UserAbortException
+   * @throws UserAbortException
    *   In case the user aborts the import process.
    */
   public function importFeed($fid = NULL, array $options = ['import-disabled' => FALSE]) {
@@ -303,7 +305,7 @@ class FeedsDrushCommands extends DrushCommands {
     }
 
     // Loop through all retrieved feed entities and import them.
-    /** @var \Drupal\feeds\FeedInterface $feed */
+    /** @var FeedInterface $feed */
     foreach ($feeds as $feed) {
       // Only import feed if it is either active, or the user specifically wants
       // to import the feed regardless of its active state.
@@ -331,7 +333,7 @@ class FeedsDrushCommands extends DrushCommands {
    * @aliases feeds-lk
    * @usage feeds:lock 1
    *
-   * @throws \Drush\Exceptions\UserAbortException
+   * @throws UserAbortException
    *   In case the user aborts the import process.
    */
   public function lockFeed($fid = NULL) {
@@ -373,7 +375,7 @@ class FeedsDrushCommands extends DrushCommands {
    * @aliases feeds-ulk
    * @usage feeds:unlock 1
    *
-   * @throws \Drush\Exceptions\UserAbortException
+   * @throws UserAbortException
    *   In case the user aborts the import process.
    */
   public function unlockFeed($fid = NULL) {
@@ -411,7 +413,7 @@ class FeedsDrushCommands extends DrushCommands {
    * @param int $fid
    *   The ID of the feed.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The Feed entity when loaded successfully, null otherwise.
    */
   private function getFeed($fid) {
diff --git a/src/Controller/CustomSourceListController.php b/src/Controller/CustomSourceListController.php
index bde22e99..b5764cd0 100644
--- a/src/Controller/CustomSourceListController.php
+++ b/src/Controller/CustomSourceListController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Controller;
 
+use Drupal\feeds\Plugin\Type\FeedsPluginManager;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\Entity\ConfigEntityStorageInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ -18,23 +19,23 @@ class CustomSourceListController extends ControllerBase {
   /**
    * The feed type storage.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface
+   * @var ConfigEntityStorageInterface
    */
   protected $feedTypeStorage;
 
   /**
    * The plugin manager for custom sources.
    *
-   * @var \Drupal\feeds\Plugin\Type\FeedsPluginManager
+   * @var FeedsPluginManager
    */
   protected $customSourcePluginManager;
 
   /**
    * Constructs a new CustomSourcesListController object.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $feed_type_storage
+   * @param ConfigEntityStorageInterface $feed_type_storage
    *   The feed type storage.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $custom_source_plugin_manager
+   * @param PluginManagerInterface $custom_source_plugin_manager
    *   The plugin manager for custom sources.
    */
   public function __construct(ConfigEntityStorageInterface $feed_type_storage, PluginManagerInterface $custom_source_plugin_manager) {
@@ -55,7 +56,7 @@ class CustomSourceListController extends ControllerBase {
   /**
    * Page title callback.
    *
-   * @param \Drupal\feeds\FeedTypeInterface $feeds_feed_type
+   * @param FeedTypeInterface $feeds_feed_type
    *   The feed type to display custom sources for.
    *
    * @return string
@@ -68,7 +69,7 @@ class CustomSourceListController extends ControllerBase {
   /**
    * Page callback.
    *
-   * @param \Drupal\feeds\FeedTypeInterface $feeds_feed_type
+   * @param FeedTypeInterface $feeds_feed_type
    *   The feed type to display custom sources for.
    *
    * @return array
@@ -142,7 +143,7 @@ class CustomSourceListController extends ControllerBase {
    *   - label;
    *   - value;
    *   - machine_name.
-   * @param \Drupal\feeds\Plugin\Type\CustomSource\CustomSourceInterface $custom_source_plugin
+   * @param CustomSourceInterface $custom_source_plugin
    *   The custom source plugin for which to build the row.
    *
    * @return array
diff --git a/src/Controller/ItemListController.php b/src/Controller/ItemListController.php
index ea872f9e..a6b0f0d2 100644
--- a/src/Controller/ItemListController.php
+++ b/src/Controller/ItemListController.php
@@ -21,23 +21,23 @@ class ItemListController extends ControllerBase {
   /**
    * Provides a object for obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Provides a service to handle various date related functionality.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The constructor.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The object for obtaining system time.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The services of date.
    */
   public function __construct(TimeInterface $time, DateFormatterInterface $date_formatter) {
@@ -140,7 +140,7 @@ class ItemListController extends ControllerBase {
   /**
    * Returns a property of the feeds item.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The imported entity that is being listed.
    * @param string $property
    *   The property to get from the feeds item.
diff --git a/src/Controller/SubscriptionController.php b/src/Controller/SubscriptionController.php
index f6833d25..b22eb7e9 100644
--- a/src/Controller/SubscriptionController.php
+++ b/src/Controller/SubscriptionController.php
@@ -21,16 +21,16 @@ class SubscriptionController extends ControllerBase implements ContainerInjectio
   /**
    * The key value expirable factory.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueExpirableFactoryInterface
+   * @var KeyValueExpirableFactoryInterface
    */
   protected $keyValueExpireFactory;
 
   /**
    * Constructs a SubscriptionController object.
    *
-   * @param \Drupal\Core\KeyValueStore\KeyValueExpirableFactoryInterface $key_value_expire_factory
+   * @param KeyValueExpirableFactoryInterface $key_value_expire_factory
    *   The key value expirable factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(KeyValueExpirableFactoryInterface $key_value_expire_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ -55,13 +55,13 @@ class SubscriptionController extends ControllerBase implements ContainerInjectio
    *   The subscription entity id.
    * @param string $feeds_push_token
    *   The subscription token.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Thrown if the subscription was not found, or if the request is invalid.
    */
   public function subscribe($feeds_subscription_id, $feeds_push_token, Request $request) {
@@ -91,13 +91,13 @@ class SubscriptionController extends ControllerBase implements ContainerInjectio
    *   The subscription entity id.
    * @param string $token
    *   The subscription token.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The response challenge.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Thrown if anything seems amiss.
    */
   protected function handleSubscribe($subscription_id, $token, Request $request) {
@@ -130,13 +130,13 @@ class SubscriptionController extends ControllerBase implements ContainerInjectio
    *   The subscription entity id.
    * @param string $token
    *   The subscription token.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The response challenge.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Thrown if anything seems amiss.
    */
   protected function handleUnsubscribe($subscription_id, $token, Request $request) {
@@ -157,17 +157,17 @@ class SubscriptionController extends ControllerBase implements ContainerInjectio
   /**
    * Receives a notification.
    *
-   * @param \Drupal\feeds\SubscriptionInterface $feeds_subscription
+   * @param SubscriptionInterface $feeds_subscription
    *   The subscription entity.
    * @param string $feeds_push_token
    *   The subscription token.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Thrown if anything seems amiss.
    */
   public function receive(SubscriptionInterface $feeds_subscription, $feeds_push_token, Request $request) {
diff --git a/src/Entity/Feed.php b/src/Entity/Feed.php
index 0e7ecd94..dab60eb8 100644
--- a/src/Entity/Feed.php
+++ b/src/Entity/Feed.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Entity;
 
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -100,7 +101,7 @@ class Feed extends ContentEntityBase implements FeedInterface {
   /**
    * Gets the event dispatcher.
    *
-   * @return \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @return EventDispatcherInterface
    *   The event dispatcher service.
    */
   protected function eventDispatcher() {
@@ -307,7 +308,7 @@ class Feed extends ContentEntityBase implements FeedInterface {
    * {@inheritdoc}
    */
   public function dispatchEntityEvent($event, EntityInterface $entity, ItemInterface $item) {
-    return $this->eventDispatcher()->dispatch($event, new EntityEvent($this, $entity, $item));
+    return $this->eventDispatcher()->dispatch(new EntityEvent($this, $entity, $item), $event);
   }
 
   /**
@@ -328,7 +329,7 @@ class Feed extends ContentEntityBase implements FeedInterface {
     }
 
     // Allow other modules to react upon finishing importing.
-    $this->eventDispatcher()->dispatch(FeedsEvents::IMPORT_FINISHED, new ImportFinishedEvent($this));
+    $this->eventDispatcher()->dispatch(new ImportFinishedEvent($this), FeedsEvents::IMPORT_FINISHED);
 
     // Cleanup.
     $this->clearStates();
diff --git a/src/Entity/FeedType.php b/src/Entity/FeedType.php
index 1a0ebbc0..8c9b28f3 100644
--- a/src/Entity/FeedType.php
+++ b/src/Entity/FeedType.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\feeds\Entity;
 
+use Drupal\Component\Plugin\LazyPluginCollection;
+use Drupal\feeds\Plugin\Type\Target\TargetInterface;
+use Drupal\feeds\Plugin\Type\FeedsPluginManager;
 use Drupal\Core\Config\Entity\ConfigEntityBundleBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ -186,14 +189,14 @@ class FeedType extends ConfigEntityBundleBase implements FeedTypeInterface, Enti
    *
    * These are lazily instantiated on-demand.
    *
-   * @var \Drupal\Component\Plugin\LazyPluginCollection[]
+   * @var LazyPluginCollection[]
    */
   protected $pluginCollection;
 
   /**
    * The instantiated target plugins.
    *
-   * @var \Drupal\feeds\Plugin\Type\Target\TargetInterface[]
+   * @var TargetInterface[]
    */
   protected $targetPlugins = [];
 
@@ -654,7 +657,7 @@ class FeedType extends ConfigEntityBundleBase implements FeedTypeInterface, Enti
   /**
    * Returns the source plugin manager.
    *
-   * @return \Drupal\feeds\Plugin\Type\FeedsPluginManager
+   * @return FeedsPluginManager
    *   The source plugin manager.
    */
   protected function getSourcePluginManager() {
diff --git a/src/EntityFinder.php b/src/EntityFinder.php
index c30f5e2d..ca2c1dbf 100644
--- a/src/EntityFinder.php
+++ b/src/EntityFinder.php
@@ -13,23 +13,23 @@ class EntityFinder implements EntityFinderInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs a new EntityFinder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityRepositoryInterface $entity_repository) {
diff --git a/src/Event/CleanEvent.php b/src/Event/CleanEvent.php
index 2ba61bf0..5a4646a3 100644
--- a/src/Event/CleanEvent.php
+++ b/src/Event/CleanEvent.php
@@ -13,16 +13,16 @@ class CleanEvent extends EventBase {
   /**
    * The entity to clean.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;
 
   /**
    * Constructs a CleanEvent object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to clean.
    */
   public function __construct(FeedInterface $feed, EntityInterface $entity) {
@@ -33,7 +33,7 @@ class CleanEvent extends EventBase {
   /**
    * Returns the entity to clean.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The entity to clean.
    */
   public function getEntity() {
diff --git a/src/Event/DeleteFeedsEvent.php b/src/Event/DeleteFeedsEvent.php
index 9bb4aabb..fdf669a7 100644
--- a/src/Event/DeleteFeedsEvent.php
+++ b/src/Event/DeleteFeedsEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\feeds\Event;
 
-use Symfony\Component\EventDispatcher\Event;
-
+use Symfony\Contracts\EventDispatcher\Event;
+use Drupal\feeds\FeedInterface;
 /**
  * Fired when one or more feeds is being deleted.
  */
@@ -12,14 +12,14 @@ class DeleteFeedsEvent extends Event {
   /**
    * The feeds being deleted.
    *
-   * @var \Drupal\feeds\FeedInterface[]
+   * @var FeedInterface[]
    */
   protected $feeds;
 
   /**
    * Constructs a new DeleteFeedsEvent object.
    *
-   * @param \Drupal\feeds\FeedInterface[] $feeds
+   * @param FeedInterface[] $feeds
    *   A list of feed entities.
    */
   public function __construct(array $feeds) {
@@ -29,7 +29,7 @@ class DeleteFeedsEvent extends Event {
   /**
    * Returns the feeds being deleted.
    *
-   * @return \Drupal\feeds\FeedInterface[]
+   * @return FeedInterface[]
    *   A list of feeds being deleted.
    */
   public function getFeeds() {
diff --git a/src/Event/EntityEvent.php b/src/Event/EntityEvent.php
index 02bff859..3fcaa290 100644
--- a/src/Event/EntityEvent.php
+++ b/src/Event/EntityEvent.php
@@ -14,25 +14,25 @@ class EntityEvent extends EventBase {
   /**
    * The entity being inserted or updated.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;
 
   /**
    * The item that is being processed.
    *
-   * @var \Drupal\feeds\Feeds\Item\ItemInterface
+   * @var ItemInterface
    */
   protected $item;
 
   /**
    * Constructs an EntityEvent object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being inserted or updated.
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item that is being processed.
    */
   public function __construct(FeedInterface $feed, EntityInterface $entity, ItemInterface $item) {
@@ -44,7 +44,7 @@ class EntityEvent extends EventBase {
   /**
    * Returns the entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The entity being inserted or updated.
    */
   public function getEntity() {
@@ -54,7 +54,7 @@ class EntityEvent extends EventBase {
   /**
    * Returns the item.
    *
-   * @return \Drupal\feeds\Feeds\Item\ItemInterface
+   * @return ItemInterface
    *   The item that is being processed.
    */
   public function getItem() {
diff --git a/src/Event/EventBase.php b/src/Event/EventBase.php
index 1bf0ebe5..15427c22 100644
--- a/src/Event/EventBase.php
+++ b/src/Event/EventBase.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\feeds\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\feeds\FeedInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Helper class for events that need a feed.
@@ -13,14 +13,14 @@ abstract class EventBase extends Event {
   /**
    * The feed being imported.
    *
-   * @var \Drupal\feeds\FeedInterface
+   * @var FeedInterface
    */
   protected $feed;
 
   /**
    * Constructs an EventBase object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
    */
   public function __construct(FeedInterface $feed) {
@@ -30,7 +30,7 @@ abstract class EventBase extends Event {
   /**
    * Returns the feed.
    *
-   * @return \Drupal\feeds\FeedInterface
+   * @return FeedInterface
    *   The feed.
    */
   public function getFeed() {
diff --git a/src/Event/EventDispatcherTrait.php b/src/Event/EventDispatcherTrait.php
index 9fe8fcd8..d0f38d3c 100644
--- a/src/Event/EventDispatcherTrait.php
+++ b/src/Event/EventDispatcherTrait.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\feeds\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 
 /**
@@ -19,7 +19,7 @@ trait EventDispatcherTrait {
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   private $_eventDispatcher;
 
@@ -28,10 +28,10 @@ trait EventDispatcherTrait {
    *
    * @param string $event_name
    *   The name of the event.
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The event to dispatch.
    *
-   * @return \Symfony\Component\EventDispatcher\Event
+   * @return Event
    *   The invoked event.
    */
   protected function dispatchEvent($event_name, Event $event = NULL) {
@@ -41,7 +41,7 @@ trait EventDispatcherTrait {
   /**
    * Returns the event dispatcher service.
    *
-   * @return \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @return EventDispatcherInterface
    *   The event dispatcher service.
    */
   protected function getEventDispatcher() {
@@ -54,7 +54,7 @@ trait EventDispatcherTrait {
   /**
    * Sets the event dispatcher service to use.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The string translation service.
    */
   public function setEventDispatcher(EventDispatcherInterface $event_dispatcher) {
diff --git a/src/Event/ExpireEvent.php b/src/Event/ExpireEvent.php
index 9b64a9df..674ab6b5 100644
--- a/src/Event/ExpireEvent.php
+++ b/src/Event/ExpireEvent.php
@@ -19,7 +19,7 @@ class ExpireEvent extends EventBase {
   /**
    * Constructs an EventBase object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
    * @param int $item_id
    *   The ID of the item that is being expired.
diff --git a/src/Event/FetchEvent.php b/src/Event/FetchEvent.php
index e424349a..7a4723b6 100644
--- a/src/Event/FetchEvent.php
+++ b/src/Event/FetchEvent.php
@@ -12,14 +12,14 @@ class FetchEvent extends EventBase {
   /**
    * The fetcher result.
    *
-   * @var \Drupal\feeds\Result\FetcherResultInterface
+   * @var FetcherResultInterface
    */
   protected $fetcherResult;
 
   /**
    * Returns the fetcher result.
    *
-   * @return \Drupal\feeds\Result\FetcherResultInterface
+   * @return FetcherResultInterface
    *   The fetcher result.
    */
   public function getFetcherResult() {
@@ -29,7 +29,7 @@ class FetchEvent extends EventBase {
   /**
    * Sets the fetcher result.
    *
-   * @param \Drupal\feeds\Result\FetcherResultInterface $result
+   * @param FetcherResultInterface $result
    *   The fetcher result.
    */
   public function setFetcherResult(FetcherResultInterface $result) {
diff --git a/src/Event/InitEvent.php b/src/Event/InitEvent.php
index 8fdee4dc..4194a521 100644
--- a/src/Event/InitEvent.php
+++ b/src/Event/InitEvent.php
@@ -21,7 +21,7 @@ class InitEvent extends EventBase {
   /**
    * Constructs an InitEvent object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
    * @param string $stage
    *   (optional) The stage to initialize. Defaults to an empty string.
diff --git a/src/Event/ParseEvent.php b/src/Event/ParseEvent.php
index 80a6f0b4..35c717d4 100644
--- a/src/Event/ParseEvent.php
+++ b/src/Event/ParseEvent.php
@@ -14,23 +14,23 @@ class ParseEvent extends EventBase {
   /**
    * The fetcher result.
    *
-   * @var \Drupal\feeds\Result\FetcherResultInterface
+   * @var FetcherResultInterface
    */
   protected $fetcherResult;
 
   /**
    * The parser result.
    *
-   * @var \Drupal\feeds\Result\ParserResultInterface
+   * @var ParserResultInterface
    */
   protected $parserResult;
 
   /**
    * Constructs a ParseEvent object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
-   * @param \Drupal\feeds\Result\FetcherResultInterface $fetcher_result
+   * @param FetcherResultInterface $fetcher_result
    *   The fetcher result.
    */
   public function __construct(FeedInterface $feed, FetcherResultInterface $fetcher_result) {
@@ -41,7 +41,7 @@ class ParseEvent extends EventBase {
   /**
    * Returns the fetcher result.
    *
-   * @return \Drupal\feeds\Result\FetcherResultInterface
+   * @return FetcherResultInterface
    *   The fetcher result.
    */
   public function getFetcherResult() {
@@ -51,7 +51,7 @@ class ParseEvent extends EventBase {
   /**
    * Returns the parser result.
    *
-   * @return \Drupal\feeds\Result\ParserResultInterface
+   * @return ParserResultInterface
    *   The parser result.
    */
   public function getParserResult() {
@@ -61,7 +61,7 @@ class ParseEvent extends EventBase {
   /**
    * Sets the parser result.
    *
-   * @param \Drupal\feeds\Result\ParserResultInterface $result
+   * @param ParserResultInterface $result
    *   The parser result.
    */
   public function setParserResult(ParserResultInterface $result) {
diff --git a/src/Event/ProcessEvent.php b/src/Event/ProcessEvent.php
index b1765506..a992639e 100644
--- a/src/Event/ProcessEvent.php
+++ b/src/Event/ProcessEvent.php
@@ -13,16 +13,16 @@ class ProcessEvent extends EventBase {
   /**
    * The item to process.
    *
-   * @var \Drupal\feeds\Feeds\Item\ItemInterface
+   * @var ItemInterface
    */
   protected $item;
 
   /**
    * Constructs a ProcessEvent object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item to process.
    */
   public function __construct(FeedInterface $feed, ItemInterface $item) {
@@ -33,7 +33,7 @@ class ProcessEvent extends EventBase {
   /**
    * Returns the parser result.
    *
-   * @return \Drupal\feeds\Feeds\Item\ItemInterface
+   * @return ItemInterface
    *   The item to process.
    */
   public function getItem() {
diff --git a/src/EventSubscriber/AfterParseBase.php b/src/EventSubscriber/AfterParseBase.php
index 11464608..93e67e48 100644
--- a/src/EventSubscriber/AfterParseBase.php
+++ b/src/EventSubscriber/AfterParseBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\EventSubscriber;
 
+use Drupal\feeds\Result\ParserResultInterface;
 use Drupal\feeds\Event\FeedsEvents;
 use Drupal\feeds\Event\ParseEvent;
 use Drupal\feeds\Exception\SkipItemException;
@@ -25,7 +26,7 @@ abstract class AfterParseBase implements EventSubscriberInterface {
   /**
    * Acts on parser result.
    *
-   * @param \Drupal\feeds\Event\ParseEvent $event
+   * @param ParseEvent $event
    *   The parse event.
    */
   public function afterParse(ParseEvent $event) {
@@ -33,7 +34,7 @@ abstract class AfterParseBase implements EventSubscriberInterface {
       return;
     }
 
-    /** @var \Drupal\feeds\Result\ParserResultInterface $result */
+    /** @var ParserResultInterface $result */
     $result = $event->getParserResult();
 
     for ($i = 0; $i < $result->count(); $i++) {
@@ -41,7 +42,7 @@ abstract class AfterParseBase implements EventSubscriberInterface {
         break;
       }
 
-      /** @var \Drupal\feeds\Feeds\Item\ItemInterface $item */
+      /** @var ItemInterface $item */
       $item = $result->offsetGet($i);
 
       try {
@@ -57,7 +58,7 @@ abstract class AfterParseBase implements EventSubscriberInterface {
   /**
    * Returns if parsing should apply.
    *
-   * @param \Drupal\feeds\Event\ParseEvent $event
+   * @param ParseEvent $event
    *   The parse event.
    *
    * @return bool
@@ -71,12 +72,12 @@ abstract class AfterParseBase implements EventSubscriberInterface {
   /**
    * Alters a single item.
    *
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item to make modifications on.
-   * @param \Drupal\feeds\Event\ParseEvent $event
+   * @param ParseEvent $event
    *   The parse event.
    *
-   * @throws \Drupal\feeds\Exception\SkipItemException
+   * @throws SkipItemException
    *   In case the item should not be imported.
    */
   protected function alterItem(ItemInterface $item, ParseEvent $event) {}
diff --git a/src/EventSubscriber/LazySubscriber.php b/src/EventSubscriber/LazySubscriber.php
index 8c81cb94..a82f646d 100644
--- a/src/EventSubscriber/LazySubscriber.php
+++ b/src/EventSubscriber/LazySubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\feeds\EventSubscriber;
 
+use Drupal\feeds\Feeds\Item\ItemInterface;
+use Drupal\feeds\Plugin\Type\Source\SourceInterface;
 use Drupal\feeds\Event\ClearEvent;
 use Drupal\feeds\Event\ExpireEvent;
 use Drupal\feeds\Event\FeedsEvents;
@@ -87,9 +89,9 @@ class LazySubscriber implements EventSubscriberInterface {
           // Add data from source plugins to the parser result.
           $source_plugins = $this->getMappedSourcePlugins($feed->getType());
           if (!empty($source_plugins)) {
-            /** @var \Drupal\feeds\Feeds\Item\ItemInterface $item */
+            /** @var ItemInterface $item */
             foreach ($result as $item) {
-              /** @var \Drupal\feeds\Plugin\Type\Source\SourceInterface $source_plugin */
+              /** @var SourceInterface $source_plugin */
               foreach ($source_plugins as $source => $source_plugin) {
                 $item->set($source, $source_plugin->getSourceElement($feed, $item));
               }
@@ -177,10 +179,10 @@ class LazySubscriber implements EventSubscriberInterface {
   /**
    * Returns all source plugins used in mapping.
    *
-   * @param \Drupal\feeds\FeedTypeInterface $feed_type
+   * @param FeedTypeInterface $feed_type
    *   The feed type to get mapped source plugins from.
    *
-   * @return \Drupal\feeds\Plugin\Type\Source\SourceInterface[]
+   * @return SourceInterface[]
    *   A list of instantiated source plugins.
    */
   protected function getMappedSourcePlugins(FeedTypeInterface $feed_type) {
diff --git a/src/EventSubscriber/PubSubHubbub.php b/src/EventSubscriber/PubSubHubbub.php
index bf94fc08..201a827c 100644
--- a/src/EventSubscriber/PubSubHubbub.php
+++ b/src/EventSubscriber/PubSubHubbub.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\EventSubscriber;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url as CoreUrl;
@@ -27,14 +28,14 @@ class PubSubHubbub implements EventSubscriberInterface {
   /**
    * The subscription storage controller.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
   /**
    * Constructs a PubSubHubbub object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -64,7 +65,7 @@ class PubSubHubbub implements EventSubscriberInterface {
   /**
    * Subscribes to a feed.
    *
-   * @param \Drupal\feeds\Event\FetchEvent $event
+   * @param FetchEvent $event
    *   The fetch event.
    */
   public function onPostFetch(FetchEvent $event) {
@@ -128,9 +129,9 @@ class PubSubHubbub implements EventSubscriberInterface {
   /**
    * Subscribes a subscription to a hub in a batch.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to which the subscription is linked.
-   * @param \Drupal\feeds\SubscriptionInterface $subscription
+   * @param SubscriptionInterface $subscription
    *   The subscription to subscribe.
    */
   protected function subscribe(FeedInterface $feed, SubscriptionInterface $subscription) {
@@ -155,9 +156,9 @@ class PubSubHubbub implements EventSubscriberInterface {
   /**
    * Unsubscribes a subscription from a hub in a batch.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to which the subscription is linked.
-   * @param \Drupal\feeds\SubscriptionInterface $subscription
+   * @param SubscriptionInterface $subscription
    *   The subscription to unsubscribe.
    */
   protected function unsubscribe(FeedInterface $feed, SubscriptionInterface $subscription = NULL) {
@@ -188,7 +189,7 @@ class PubSubHubbub implements EventSubscriberInterface {
    *
    * This method is used as callback for a batch.
    *
-   * @param \Drupal\feeds\SubscriptionInterface $subscription
+   * @param SubscriptionInterface $subscription
    *   The subscription entity.
    *
    * @see ::subscribe
@@ -246,7 +247,7 @@ class PubSubHubbub implements EventSubscriberInterface {
   /**
    * Retries a POST request.
    *
-   * @param \Drupal\feeds\SubscriptionInterface $subscription
+   * @param SubscriptionInterface $subscription
    *   The subscription.
    * @param array $body
    *   The POST body.
@@ -275,7 +276,7 @@ class PubSubHubbub implements EventSubscriberInterface {
   /**
    * Finds a hub from a fetcher result.
    *
-   * @param \Drupal\feeds\Result\FetcherResultInterface $fetcher_result
+   * @param FetcherResultInterface $fetcher_result
    *   The fetcher result.
    * @param string $relation
    *   The type of relation to find.
@@ -296,7 +297,7 @@ class PubSubHubbub implements EventSubscriberInterface {
   /**
    * Deletes subscriptions when feeds are deleted.
    *
-   * @param \Drupal\feeds\Event\DeleteFeedsEvent $event
+   * @param DeleteFeedsEvent $event
    *   The delete event.
    */
   public function onDeleteMultipleFeeds(DeleteFeedsEvent $event) {
diff --git a/src/Exception/ValidationException.php b/src/Exception/ValidationException.php
index 3b72c3de..b949e254 100644
--- a/src/Exception/ValidationException.php
+++ b/src/Exception/ValidationException.php
@@ -12,7 +12,7 @@ class ValidationException extends FeedsRuntimeException {
   /**
    * Returns the formatted message.
    *
-   * @return \Drupal\Component\Render\FormattableMarkup
+   * @return FormattableMarkup
    *   A formatted message.
    */
   public function getFormattedMessage() {
diff --git a/src/FeedClearHandler.php b/src/FeedClearHandler.php
index f5dc7708..5d87b969 100644
--- a/src/FeedClearHandler.php
+++ b/src/FeedClearHandler.php
@@ -34,7 +34,7 @@ class FeedClearHandler extends FeedHandlerBase {
   /**
    * Deletes all items from a feed.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed entity from which to delete all items.
    * @param array $context
    *   Status of the batch.
diff --git a/src/FeedExpireHandler.php b/src/FeedExpireHandler.php
index 01883484..3b29cf14 100644
--- a/src/FeedExpireHandler.php
+++ b/src/FeedExpireHandler.php
@@ -15,7 +15,7 @@ class FeedExpireHandler extends FeedHandlerBase {
   /**
    * Starts a batch for expiring items.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed for which to expire items.
    */
   public function startBatchExpire(FeedInterface $feed) {
@@ -53,7 +53,7 @@ class FeedExpireHandler extends FeedHandlerBase {
   /**
    * Returns feed item ID's to expire.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed for which to get the expired item ID's.
    *
    * @return array
@@ -66,7 +66,7 @@ class FeedExpireHandler extends FeedHandlerBase {
   /**
    * Expires a single item imported with the given feed.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed for which to expire the item.
    * @param int $item_id
    *   The ID of the item to expire. Usually this is an entity ID.
@@ -96,7 +96,7 @@ class FeedExpireHandler extends FeedHandlerBase {
   /**
    * Handles clean up tasks after expiring items is done.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed for which items got expired.
    */
   public function postExpire(FeedInterface $feed) {
diff --git a/src/FeedForm.php b/src/FeedForm.php
index 5c593f44..1a5d3a61 100644
--- a/src/FeedForm.php
+++ b/src/FeedForm.php
@@ -17,7 +17,7 @@ class FeedForm extends ContentEntityForm {
   /**
    * The form factory.
    *
-   * @var \Drupal\feeds\Plugin\PluginFormFactory
+   * @var PluginFormFactory
    */
   protected $formFactory;
 
@@ -34,7 +34,7 @@ class FeedForm extends ContentEntityForm {
   /**
    * Sets the form factory, used to generate forms for Feeds plugins.
    *
-   * @param \Drupal\feeds\Plugin\PluginFormFactory $factory
+   * @param PluginFormFactory $factory
    *   The Feeds form factory.
    */
   protected function setPluginFormFactory(PluginFormFactory $factory) {
@@ -241,7 +241,7 @@ class FeedForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function import(array $form, FormStateInterface $form_state) {
@@ -253,7 +253,7 @@ class FeedForm extends ContentEntityForm {
   /**
    * Returns whether or not the plugin implements a form for the given type.
    *
-   * @param \Drupal\feeds\Plugin\Type\FeedsPluginInterface $plugin
+   * @param FeedsPluginInterface $plugin
    *   The Feeds plugin.
    * @param string $operation
    *   The type of form to check for. See
@@ -273,7 +273,7 @@ class FeedForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function unlock(array $form, FormStateInterface $form_state) {
diff --git a/src/FeedHandlerBase.php b/src/FeedHandlerBase.php
index d4a17abf..57d48b17 100644
--- a/src/FeedHandlerBase.php
+++ b/src/FeedHandlerBase.php
@@ -24,7 +24,7 @@ abstract class FeedHandlerBase implements EntityHandlerInterface {
   /**
    * Constructs a new FeedHandlerBase object.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
diff --git a/src/FeedImportHandler.php b/src/FeedImportHandler.php
index 0a74f8ac..69c968b9 100644
--- a/src/FeedImportHandler.php
+++ b/src/FeedImportHandler.php
@@ -14,7 +14,7 @@ class FeedImportHandler extends FeedHandlerBase {
   /**
    * Imports the whole feed at once.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to import for.
    *
    * @throws \Exception
@@ -28,10 +28,10 @@ class FeedImportHandler extends FeedHandlerBase {
   /**
    * Starts importing a feed via the batch API.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to import.
    *
-   * @throws \Drupal\feeds\Exception\LockException
+   * @throws LockException
    *   Thrown if a feed is locked.
    */
   public function startBatchImport(FeedInterface $feed) {
@@ -42,10 +42,10 @@ class FeedImportHandler extends FeedHandlerBase {
   /**
    * Starts importing a feed via cron.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to queue.
    *
-   * @throws \Drupal\feeds\Exception\LockException
+   * @throws LockException
    *   Thrown if a feed is locked.
    */
   public function startCronImport(FeedInterface $feed) {
@@ -65,11 +65,11 @@ class FeedImportHandler extends FeedHandlerBase {
   /**
    * Handles a push import.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed receiving the push.
    * @param string $payload
    *   The feed contents.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   (optional) The file system service.
    */
   public function pushImport(FeedInterface $feed, $payload, FileSystemInterface $file_system = NULL) {
@@ -98,7 +98,7 @@ class FeedImportHandler extends FeedHandlerBase {
    * @param string $class
    *   The class to load.
    *
-   * @return \Drupal\feeds\FeedsExecutableInterface
+   * @return FeedsExecutableInterface
    *   A feeds executable.
    */
   protected function getExecutable($class) {
diff --git a/src/FeedInterface.php b/src/FeedInterface.php
index be84c82e..5af68a5f 100644
--- a/src/FeedInterface.php
+++ b/src/FeedInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\feeds;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\feeds\Exception\LockException;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -47,10 +49,10 @@ interface FeedInterface extends ContentEntityInterface, EntityChangedInterface,
   /**
    * Returns the feed type object that this feed is expected to be used with.
    *
-   * @return \Drupal\feeds\FeedTypeInterface
+   * @return FeedTypeInterface
    *   The feed type object.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   In case the feed type could not be loaded.
    */
   public function getType();
@@ -170,9 +172,9 @@ interface FeedInterface extends ContentEntityInterface, EntityChangedInterface,
    *
    * @param string $event
    *   The event to invoke.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being inserted or updated.
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item that is being processed.
    */
   public function dispatchEntityEvent($event, EntityInterface $entity, ItemInterface $item);
@@ -244,7 +246,7 @@ interface FeedInterface extends ContentEntityInterface, EntityChangedInterface,
    *   One of StateInterface::FETCH, StateInterface::PARSE,
    *   StateInterface::PROCESS or StateInterface::CLEAR.
    *
-   * @return \Drupal\feeds\StateInterface
+   * @return StateInterface
    *   The State object for the given stage.
    */
   public function getState($stage);
@@ -255,7 +257,7 @@ interface FeedInterface extends ContentEntityInterface, EntityChangedInterface,
    * @param string $stage
    *   One of StateInterface::FETCH, StateInterface::PARSE,
    *   StateInterface::PROCESS or StateInterface::CLEAR.
-   * @param \Drupal\feeds\StateInterface|null $state
+   * @param StateInterface|null $state
    *   A state object or null to unset the state for the given stage.
    */
   public function setState($stage, StateInterface $state = NULL);
@@ -281,7 +283,7 @@ interface FeedInterface extends ContentEntityInterface, EntityChangedInterface,
   /**
    * Returns the configuration for a specific client plugin.
    *
-   * @param \Drupal\feeds\Plugin\Type\FeedsPluginInterface $client
+   * @param FeedsPluginInterface $client
    *   A Feeds plugin.
    *
    * @return array
@@ -292,7 +294,7 @@ interface FeedInterface extends ContentEntityInterface, EntityChangedInterface,
   /**
    * Sets the configuration for a specific client plugin.
    *
-   * @param \Drupal\feeds\Plugin\Type\FeedsPluginInterface $client
+   * @param FeedsPluginInterface $client
    *   A Feeds plugin.
    * @param array $config
    *   The configuration for the plugin.
@@ -323,7 +325,7 @@ interface FeedInterface extends ContentEntityInterface, EntityChangedInterface,
   /**
    * Locks a feed.
    *
-   * @throws \Drupal\feeds\Exception\LockException
+   * @throws LockException
    *   Thrown if the lock is unavailable.
    */
   public function lock();
diff --git a/src/FeedListBuilder.php b/src/FeedListBuilder.php
index b23663bf..4e406de6 100644
--- a/src/FeedListBuilder.php
+++ b/src/FeedListBuilder.php
@@ -21,27 +21,27 @@ class FeedListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new FeedListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
diff --git a/src/FeedTypeForm.php b/src/FeedTypeForm.php
index 76bbdd2e..fb3d11c1 100644
--- a/src/FeedTypeForm.php
+++ b/src/FeedTypeForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\feeds;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\feeds\Plugin\Type\ExternalPluginFormInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\HtmlCommand;
@@ -28,41 +30,41 @@ class FeedTypeForm extends EntityForm {
   /**
    * The feed type storage controller.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $feedTypeStorage;
 
   /**
    * The form factory.
    *
-   * @var \Drupal\feeds\Plugin\PluginFormFactory
+   * @var PluginFormFactory
    */
   protected $formFactory;
 
   /**
    * Provides a service to handle various date related functionality.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Turns a render array into a HTML string.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a new FeedTypeForm object.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $feed_type_storage
+   * @param ConfigEntityStorageInterface $feed_type_storage
    *   The feed type storage controller.
-   * @param \Drupal\feeds\Plugin\PluginFormFactory $factory
+   * @param PluginFormFactory $factory
    *   The form factory.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The services of date.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The render object.
    */
   public function __construct(ConfigEntityStorageInterface $feed_type_storage, PluginFormFactory $factory, DateFormatterInterface $date_formatter, RendererInterface $renderer) {
@@ -280,7 +282,7 @@ class FeedTypeForm extends EntityForm {
   /**
    * Returns the plugin forms for this feed type.
    *
-   * @return \Drupal\feeds\Plugin\Type\ExternalPluginFormInterface[]
+   * @return ExternalPluginFormInterface[]
    *   A list of form objects, keyed by plugin id.
    */
   protected function getPluginForms() {
@@ -401,10 +403,10 @@ class FeedTypeForm extends EntityForm {
    *
    * @param string|array $key
    *   The form state key.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state to copy values from.
    *
-   * @return \Drupal\Core\Form\FormStateInterface
+   * @return FormStateInterface
    *   A new form state object.
    *
    * @see FormStateInterface::getValue()
@@ -427,7 +429,7 @@ class FeedTypeForm extends EntityForm {
   /**
    * Returns whether or not the plugin implements a form for the given type.
    *
-   * @param \Drupal\feeds\Plugin\Type\FeedsPluginInterface $plugin
+   * @param FeedsPluginInterface $plugin
    *   The Feeds plugin.
    * @param string $operation
    *   The type of form to check for. See
diff --git a/src/FeedTypeInterface.php b/src/FeedTypeInterface.php
index 255427ef..348d3a97 100644
--- a/src/FeedTypeInterface.php
+++ b/src/FeedTypeInterface.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\feeds;
 
+use Drupal\feeds\Plugin\Type\PluginBase;
+use Drupal\feeds\Plugin\Type\Fetcher\FetcherInterface;
+use Drupal\feeds\Plugin\Type\Parser\ParserInterface;
+use Drupal\feeds\Plugin\Type\Processor\ProcessorInterface;
+use Drupal\feeds\Plugin\Type\Target\TargetInterface;
+use Drupal\feeds\Plugin\Type\Source\SourceInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -58,7 +64,7 @@ interface FeedTypeInterface extends ConfigEntityInterface {
   /**
    * Returns the configured plugins for this feed type.
    *
-   * @return \Drupal\feeds\Plugin\Type\PluginBase[]
+   * @return PluginBase[]
    *   An array of plugins keyed by plugin type.
    */
   public function getPlugins();
@@ -66,7 +72,7 @@ interface FeedTypeInterface extends ConfigEntityInterface {
   /**
    * Returns the configured fetcher for this feed type.
    *
-   * @return \Drupal\feeds\Plugin\Type\Fetcher\FetcherInterface
+   * @return FetcherInterface
    *   The fetcher associated with this feed type.
    */
   public function getFetcher();
@@ -74,7 +80,7 @@ interface FeedTypeInterface extends ConfigEntityInterface {
   /**
    * Returns the configured parser for this feed type.
    *
-   * @return \Drupal\feeds\Plugin\Type\Parser\ParserInterface
+   * @return ParserInterface
    *   The parser associated with this feed type.
    */
   public function getParser();
@@ -82,7 +88,7 @@ interface FeedTypeInterface extends ConfigEntityInterface {
   /**
    * Returns the configured processor for this feed type.
    *
-   * @return \Drupal\feeds\Plugin\Type\Processor\ProcessorInterface
+   * @return ProcessorInterface
    *   The processor associated with this feed type.
    */
   public function getProcessor();
@@ -93,7 +99,7 @@ interface FeedTypeInterface extends ConfigEntityInterface {
    * @param int $delta
    *   The number under which this target is indexed in the mappings.
    *
-   * @return \Drupal\feeds\Plugin\Type\Target\TargetInterface
+   * @return TargetInterface
    *   A target plugin instance.
    */
   public function getTargetPlugin($delta);
@@ -104,7 +110,7 @@ interface FeedTypeInterface extends ConfigEntityInterface {
    * @param string $source
    *   The source to get a plugin for.
    *
-   * @return \Drupal\feeds\Plugin\Type\Source\SourceInterface|false
+   * @return SourceInterface|false
    *   A source plugin instance, if there is one. False otherwise.
    */
   public function getSourcePlugin($source);
diff --git a/src/Feeds/CustomSource/CsvSource.php b/src/Feeds/CustomSource/CsvSource.php
index 78333b1f..ff8ad2b7 100644
--- a/src/Feeds/CustomSource/CsvSource.php
+++ b/src/Feeds/CustomSource/CsvSource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Feeds\CustomSource;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
@@ -28,7 +29,7 @@ class CsvSource extends BlankSource {
   /**
    * Returns the description for a single source.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup|null
+   * @return TranslatableMarkup|null
    *   A translated string if there's a description. Null otherwise.
    */
   protected function configSourceDescription() {
diff --git a/src/Feeds/FeedsSingleLazyPluginCollection.php b/src/Feeds/FeedsSingleLazyPluginCollection.php
index 147c2a62..45b02cda 100644
--- a/src/Feeds/FeedsSingleLazyPluginCollection.php
+++ b/src/Feeds/FeedsSingleLazyPluginCollection.php
@@ -14,20 +14,20 @@ class FeedsSingleLazyPluginCollection extends DefaultSingleLazyPluginCollection
   /**
    * The feed type.
    *
-   * @var \Drupal\feeds\FeedTypeInterface
+   * @var FeedTypeInterface
    */
   protected $feedType;
 
   /**
    * Constructs a FeedsSingleLazyPluginCollection.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The manager to be used for instantiating plugins.
    * @param string $instance_id
    *   The ID of the plugin instance.
    * @param array $configuration
    *   An array of configuration.
-   * @param \Drupal\feeds\FeedTypeInterface $feed_type
+   * @param FeedTypeInterface $feed_type
    *   The feed feed type this plugin belongs to.
    */
   public function __construct(PluginManagerInterface $manager, $instance_id, array $configuration, FeedTypeInterface $feed_type) {
diff --git a/src/Feeds/Fetcher/Form/DirectoryFetcherForm.php b/src/Feeds/Fetcher/Form/DirectoryFetcherForm.php
index 66e85d68..585025c9 100644
--- a/src/Feeds/Fetcher/Form/DirectoryFetcherForm.php
+++ b/src/Feeds/Fetcher/Form/DirectoryFetcherForm.php
@@ -18,14 +18,14 @@ class DirectoryFetcherForm extends ExternalPluginFormBase implements ContainerIn
   /**
    * The stream wrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManager
+   * @var StreamWrapperManager
    */
   protected $streamWrapperManager;
 
   /**
    * Constructs a DirectoryFetcherForm object.
    *
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManager $stream_wrapper_manager
+   * @param StreamWrapperManager $stream_wrapper_manager
    *   The stream wrapper manager.
    */
   public function __construct(StreamWrapperManager $stream_wrapper_manager) {
diff --git a/src/Feeds/Fetcher/Form/HttpFetcherFeedForm.php b/src/Feeds/Fetcher/Form/HttpFetcherFeedForm.php
index 99de17ca..342f53e1 100644
--- a/src/Feeds/Fetcher/Form/HttpFetcherFeedForm.php
+++ b/src/Feeds/Fetcher/Form/HttpFetcherFeedForm.php
@@ -19,14 +19,14 @@ class HttpFetcherFeedForm extends ExternalPluginFormBase implements ContainerInj
   /**
    * The Guzzle client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
   /**
    * Constructs an HttpFeedForm object.
    *
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   The HTTP client.
    */
   public function __construct(ClientInterface $client) {
diff --git a/src/Feeds/Fetcher/Form/UploadFetcherFeedForm.php b/src/Feeds/Fetcher/Form/UploadFetcherFeedForm.php
index c6370b65..ff8bf143 100644
--- a/src/Feeds/Fetcher/Form/UploadFetcherFeedForm.php
+++ b/src/Feeds/Fetcher/Form/UploadFetcherFeedForm.php
@@ -19,32 +19,32 @@ class UploadFetcherFeedForm extends ExternalPluginFormBase implements ContainerI
   /**
    * The file storage backend.
    *
-   * @var \Drupal\file\FileStorageInterface
+   * @var FileStorageInterface
    */
   protected $fileStorage;
 
   /**
    * The file usage backend.
    *
-   * @var \Drupal\file\FileUsage\FileUsageInterface
+   * @var FileUsageInterface
    */
   protected $fileUsage;
 
   /**
    * The UUID generator.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;
 
   /**
    * Constructs an HttpFeedForm object.
    *
-   * @param \Drupal\file\FileStorageInterface $file_storage
+   * @param FileStorageInterface $file_storage
    *   The file storage backend.
-   * @param \Drupal\file\FileUsage\FileUsageInterface $file_usage
+   * @param FileUsageInterface $file_usage
    *   The file usage backend.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   The UUID generator.
    */
   public function __construct(FileStorageInterface $file_storage, FileUsageInterface $file_usage, UuidInterface $uuid) {
diff --git a/src/Feeds/Fetcher/Form/UploadFetcherForm.php b/src/Feeds/Fetcher/Form/UploadFetcherForm.php
index 40b79e64..8ee98e15 100644
--- a/src/Feeds/Fetcher/Form/UploadFetcherForm.php
+++ b/src/Feeds/Fetcher/Form/UploadFetcherForm.php
@@ -19,23 +19,23 @@ class UploadFetcherForm extends ExternalPluginFormBase implements ContainerInjec
   /**
    * The stream wrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
   /**
    * The file and stream wrapper helper.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs a DirectoryFetcherForm object.
    *
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file and stream wrapper helper.
    */
   public function __construct(StreamWrapperManagerInterface $stream_wrapper_manager, FileSystemInterface $file_system) {
diff --git a/src/Feeds/Fetcher/HttpFetcher.php b/src/Feeds/Fetcher/HttpFetcher.php
index 548c8245..53eeab8f 100644
--- a/src/Feeds/Fetcher/HttpFetcher.php
+++ b/src/Feeds/Fetcher/HttpFetcher.php
@@ -37,21 +37,21 @@ class HttpFetcher extends PluginBase implements ClearableInterface, FetcherInter
   /**
    * The Guzzle client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Drupal file system helper.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -64,11 +64,11 @@ class HttpFetcher extends PluginBase implements ClearableInterface, FetcherInter
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   The Guzzle client.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The Drupal file system helper.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, ClientInterface $client, CacheBackendInterface $cache, FileSystemInterface $file_system) {
@@ -185,7 +185,7 @@ class HttpFetcher extends PluginBase implements ClearableInterface, FetcherInter
   /**
    * Returns the download cache key for a given feed.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to find the cache key for.
    *
    * @return string
diff --git a/src/Feeds/Fetcher/UploadFetcher.php b/src/Feeds/Fetcher/UploadFetcher.php
index cf30b5c3..b6c7efbf 100644
--- a/src/Feeds/Fetcher/UploadFetcher.php
+++ b/src/Feeds/Fetcher/UploadFetcher.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Feeds\Fetcher;
 
+use Drupal\file\FileStorageInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -33,21 +34,21 @@ class UploadFetcher extends PluginBase implements FetcherInterface, ContainerFac
   /**
    * The file usage backend.
    *
-   * @var \Drupal\file\FileUsage\FileUsageInterface
+   * @var FileUsageInterface
    */
   protected $fileUsage;
 
   /**
    * The file storage backend.
    *
-   * @var \Drupal\file\FileStorageInterface
+   * @var FileStorageInterface
    */
   protected $fileStorage;
 
   /**
    * The stream wrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
@@ -60,11 +61,11 @@ class UploadFetcher extends PluginBase implements FetcherInterface, ContainerFac
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\file\FileUsage\FileUsageInterface $file_usage
+   * @param FileUsageInterface $file_usage
    *   The file usage backend.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, FileUsageInterface $file_usage, EntityTypeManagerInterface $entity_type_manager, StreamWrapperManagerInterface $stream_wrapper_manager) {
diff --git a/src/Feeds/Processor/EntityProcessorBase.php b/src/Feeds/Processor/EntityProcessorBase.php
index a2737e75..7fb2e8ae 100644
--- a/src/Feeds/Processor/EntityProcessorBase.php
+++ b/src/Feeds/Processor/EntityProcessorBase.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\feeds\Feeds\Processor;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Entity\EntityInterface;
@@ -43,21 +47,21 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity storage controller for the entity type being processed.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storageController;
 
   /**
    * The entity info for the selected entity type.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface
+   * @var EntityTypeInterface
    */
   protected $entityType;
 
@@ -71,14 +75,14 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -91,11 +95,11 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, LanguageManagerInterface $language_manager) {
@@ -219,9 +223,9 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
    * This populates $state->cleanList with all existing entities previously
    * imported from the source.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to import.
-   * @param \Drupal\feeds\Feeds\State\CleanStateInterface $state
+   * @param CleanStateInterface $state
    *   The state of the clean stage.
    */
   protected function initCleanList(FeedInterface $feed, CleanStateInterface $state) {
@@ -410,7 +414,7 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
   /**
    * Returns the label of the entity type being processed.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The label of the entity type.
    */
   public function entityTypeLabel() {
@@ -509,7 +513,7 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
   /**
    * Checks if the entity exists already.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check.
    *
    * @return bool
@@ -856,9 +860,9 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
   /**
    * Returns an existing entity id.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed being processed.
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item to find existing ids for.
    *
    * @return int|string|null
@@ -925,7 +929,7 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
       return;
     }
 
-    /** @var \Drupal\Core\Field\FieldDefinitionInterface $field_definition */
+    /** @var FieldDefinitionInterface $field_definition */
     $field_definition = $target_definition->getFieldDefinition();
     if ($field_definition->getName() != $id_key) {
       return;
@@ -950,7 +954,7 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
           continue;
         }
 
-        /** @var \Drupal\Core\Field\FieldDefinitionInterface $field_definition */
+        /** @var FieldDefinitionInterface $field_definition */
         $field_definition = $target_definition->getFieldDefinition();
         if ($field_definition->getName() != $id_key) {
           continue;
@@ -1005,7 +1009,7 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
    * Includes mappings so that items will be updated if the mapping
    * configuration has changed.
    *
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item to hash.
    *
    * @return string
@@ -1099,9 +1103,9 @@ abstract class EntityProcessorBase extends ProcessorBase implements EntityProces
   /**
    * Clears the target on the entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to clear the target on.
-   * @param \Drupal\feeds\Plugin\Type\Target\TargetInterface $target
+   * @param TargetInterface $target
    *   The target plugin.
    * @param string $target_name
    *   The property to clear on the entity.
diff --git a/src/Feeds/Processor/Form/DefaultEntityProcessorForm.php b/src/Feeds/Processor/Form/DefaultEntityProcessorForm.php
index 194f5ec5..f6074ab2 100644
--- a/src/Feeds/Processor/Form/DefaultEntityProcessorForm.php
+++ b/src/Feeds/Processor/Form/DefaultEntityProcessorForm.php
@@ -23,50 +23,50 @@ class DefaultEntityProcessorForm extends ExternalPluginFormBase implements Conta
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The action plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $actionManager;
 
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The user storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
   /**
    * The user settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $userSettings;
 
   /**
    * Constructs a DefaultEntityProcessorForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $action_manager
+   * @param PluginManagerInterface $action_manager
    *   The action plugin manager.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter.
-   * @param \Drupal\user\UserStorageInterface $user_storage
+   * @param UserStorageInterface $user_storage
    *   The user storage.
-   * @param \Drupal\Core\Config\Config $user_settings
+   * @param Config $user_settings
    *   The user settings.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, PluginManagerInterface $action_manager, DateFormatterInterface $date_formatter, UserStorageInterface $user_storage, Config $user_settings) {
diff --git a/src/Feeds/State/CleanState.php b/src/Feeds/State/CleanState.php
index 95468d17..65cf8be9 100644
--- a/src/Feeds/State/CleanState.php
+++ b/src/Feeds/State/CleanState.php
@@ -32,7 +32,7 @@ class CleanState extends State implements CleanStateInterface {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -55,7 +55,7 @@ class CleanState extends State implements CleanStateInterface {
    *
    * @param int $feed_id
    *   The ID of the feed this state belongs to.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   (optional) The Connection object containing the feeds tables.
    */
   public function __construct($feed_id, Connection $connection = NULL) {
diff --git a/src/Feeds/State/CleanStateInterface.php b/src/Feeds/State/CleanStateInterface.php
index b3378328..c9af6e7b 100644
--- a/src/Feeds/State/CleanStateInterface.php
+++ b/src/Feeds/State/CleanStateInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Feeds\State;
 
+use Drupal\Core\Entity\EntityInterface;
 use Countable;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\feeds\StateInterface;
@@ -47,10 +48,10 @@ interface CleanStateInterface extends StateInterface, IteratorAggregate, Countab
   /**
    * Returns the next entity in the list and removes the ID from the list.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   (optional) The entity storage.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   Returns the next the entity in the list, if found.
    */
   public function nextEntity(EntityStorageInterface $storage = NULL);
diff --git a/src/Feeds/Target/Book.php b/src/Feeds/Target/Book.php
index f3f73b4f..543c937c 100644
--- a/src/Feeds/Target/Book.php
+++ b/src/Feeds/Target/Book.php
@@ -38,35 +38,35 @@ class Book extends TargetBase implements ConfigurableTargetInterface, ContainerF
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The node storage.
    *
-   * @var \Drupal\node\NodeStorageInterface
+   * @var NodeStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The book manager.
    *
-   * @var \Drupal\book\BookManagerInterface
+   * @var BookManagerInterface
    */
   protected $bookManager;
 
   /**
    * The Feeds entity finder service.
    *
-   * @var \Drupal\feeds\EntityFinderInterface
+   * @var EntityFinderInterface
    */
   protected $entityFinder;
 
@@ -79,15 +79,15 @@ class Book extends TargetBase implements ConfigurableTargetInterface, ContainerF
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database Service Object.
-   * @param \Drupal\node\NodeStorageInterface $node_storage
+   * @param NodeStorageInterface $node_storage
    *   The node storage.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\book\BookManagerInterface $book_manager
+   * @param BookManagerInterface $book_manager
    *   The book manager.
-   * @param \Drupal\feeds\EntityFinderInterface $entity_finder
+   * @param EntityFinderInterface $entity_finder
    *   The Feeds entity finder service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, Connection $database, NodeStorageInterface $node_storage, EntityFieldManagerInterface $entity_field_manager, BookManagerInterface $book_manager, EntityFinderInterface $entity_finder) {
@@ -246,7 +246,7 @@ class Book extends TargetBase implements ConfigurableTargetInterface, ContainerF
    *
    * Checks whether the provided field is available to be used as reference.
    *
-   * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $field
+   * @param FieldStorageDefinitionInterface $field
    *   The field to check.
    *
    * @return bool
diff --git a/src/Feeds/Target/ConfigEntityReference.php b/src/Feeds/Target/ConfigEntityReference.php
index 0673c961..07c9f749 100644
--- a/src/Feeds/Target/ConfigEntityReference.php
+++ b/src/Feeds/Target/ConfigEntityReference.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Feeds\Target;
 
+use Drupal\Core\Config\Entity\ConfigEntityTypeInterface;
 use Drupal\Component\Transliteration\TransliterationInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Config\TypedConfigManagerInterface;
@@ -35,28 +36,28 @@ class ConfigEntityReference extends FieldTargetBase implements ConfigurableTarge
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Feeds entity finder service.
    *
-   * @var \Drupal\feeds\EntityFinderInterface
+   * @var EntityFinderInterface
    */
   protected $entityFinder;
 
   /**
    * The transliteration manager.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;
 
   /**
    * The manager for managing config schema type plugins.
    *
-   * @var \Drupal\Core\Config\TypedConfigManagerInterface
+   * @var TypedConfigManagerInterface
    */
   protected $typedConfigManager;
 
@@ -69,13 +70,13 @@ class ConfigEntityReference extends FieldTargetBase implements ConfigurableTarge
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\feeds\EntityFinderInterface $entity_finder
+   * @param EntityFinderInterface $entity_finder
    *   The Feeds entity finder service.
-   * @param \Drupal\Component\Transliteration\TransliterationInterface $transliteration
+   * @param TransliterationInterface $transliteration
    *   The transliteration manager.
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typed_config_manager
+   * @param TypedConfigManagerInterface $typed_config_manager
    *   The manager for managing config schema type plugins.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityFinderInterface $entity_finder, TransliterationInterface $transliteration, TypedConfigManagerInterface $typed_config_manager) {
@@ -163,7 +164,7 @@ class ConfigEntityReference extends FieldTargetBase implements ConfigurableTarge
    *   A list of fields to reference by.
    */
   protected function getPotentialFields() {
-    /** @var \Drupal\Core\Config\Entity\ConfigEntityTypeInterface $config_entity_type */
+    /** @var ConfigEntityTypeInterface $config_entity_type */
     $config_entity_type = $this->entityTypeManager->getDefinition($this->getEntityType());
     $config_name = $config_entity_type->getConfigPrefix() . '.*';
     $definition = $this->typedConfigManager->getDefinition($config_name);
diff --git a/src/Feeds/Target/DateTargetBase.php b/src/Feeds/Target/DateTargetBase.php
index 7591b284..c4a03eb9 100644
--- a/src/Feeds/Target/DateTargetBase.php
+++ b/src/Feeds/Target/DateTargetBase.php
@@ -18,7 +18,7 @@ abstract class DateTargetBase extends FieldTargetBase implements ConfigurableTar
    * @param string $value
    *   The value to convert to a date.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime|null
+   * @return DrupalDateTime|null
    *   A datetime object or null, if there is no value or if the date value
    *   has errors.
    */
diff --git a/src/Feeds/Target/DateTime.php b/src/Feeds/Target/DateTime.php
index 79bc55ce..6f35e96f 100644
--- a/src/Feeds/Target/DateTime.php
+++ b/src/Feeds/Target/DateTime.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Feeds\Target;
 
+use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
 
 /**
@@ -46,7 +47,7 @@ class DateTime extends DateTargetBase {
    *   A formatted date, in UTC time.
    */
   protected function prepareDateValue($value) {
-    /** @var \Drupal\Core\Datetime\DrupalDateTime|null $date */
+    /** @var DrupalDateTime|null $date */
     $date = $this->convertToDate($value);
 
     if (isset($date) && !$date->hasErrors()) {
diff --git a/src/Feeds/Target/EntityReference.php b/src/Feeds/Target/EntityReference.php
index 8f119ecd..e8eb69ed 100644
--- a/src/Feeds/Target/EntityReference.php
+++ b/src/Feeds/Target/EntityReference.php
@@ -36,21 +36,21 @@ class EntityReference extends FieldTargetBase implements ConfigurableTargetInter
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The Feeds entity finder service.
    *
-   * @var \Drupal\feeds\EntityFinderInterface
+   * @var EntityFinderInterface
    */
   protected $entityFinder;
 
@@ -63,11 +63,11 @@ class EntityReference extends FieldTargetBase implements ConfigurableTargetInter
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\feeds\EntityFinderInterface $entity_finder
+   * @param EntityFinderInterface $entity_finder
    *   The Feeds entity finder service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, EntityFinderInterface $entity_finder) {
@@ -170,7 +170,7 @@ class EntityReference extends FieldTargetBase implements ConfigurableTargetInter
    *
    * Checks whether the provided field is available to be used as reference.
    *
-   * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $field
+   * @param FieldStorageDefinitionInterface $field
    *   The field to check.
    *
    * @return bool
diff --git a/src/Feeds/Target/File.php b/src/Feeds/Target/File.php
index 3eab9d94..1f4cf45c 100644
--- a/src/Feeds/Target/File.php
+++ b/src/Feeds/Target/File.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\feeds\Feeds\Target;
 
+use Drupal\file\FileInterface;
+use Drupal\file\FileRepositoryInterface;
 use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ -31,7 +33,7 @@ class File extends EntityReference {
   /**
    * The http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
@@ -45,14 +47,14 @@ class File extends EntityReference {
   /**
    * Token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * The file and stream wrapper helper.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -65,17 +67,17 @@ class File extends EntityReference {
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   The http client.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\feeds\EntityFinderInterface $entity_finder
+   * @param EntityFinderInterface $entity_finder
    *   The Feeds entity finder service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file and stream wrapper helper.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager, ClientInterface $client, Token $token, EntityFieldManagerInterface $entity_field_manager, EntityFinderInterface $entity_finder, FileSystemInterface $file_system) {
@@ -172,7 +174,7 @@ class File extends EntityReference {
    * @return int
    *   The file id.
    *
-   * @throws \Drupal\feeds\Exception\EmptyFeedException
+   * @throws EmptyFeedException
    *   In case an empty file url is given.
    */
   protected function getFile($value) {
@@ -234,7 +236,7 @@ class File extends EntityReference {
    * @return string
    *   The file name.
    *
-   * @throws \Drupal\feeds\Exception\TargetValidationException
+   * @throws TargetValidationException
    *   In case the file extension is not valid.
    */
   protected function getFileName($url) {
@@ -262,7 +264,7 @@ class File extends EntityReference {
    * @return string
    *   The file contents.
    *
-   * @throws \Drupal\feeds\Exception\TargetValidationException
+   * @throws TargetValidationException
    *   In case the file could not be downloaded.
    */
   protected function getContent($url) {
@@ -375,19 +377,19 @@ class File extends EntityReference {
    *     _{incrementing number} until the filename is unique.
    *   - FileSystemInterface::EXISTS_ERROR: Do nothing and return FALSE.
    *
-   * @return \Drupal\file\FileInterface|false
+   * @return FileInterface|false
    *   A file entity, or FALSE on error.
    */
   protected function writeData($data, $destination = NULL, $replace = FileSystemInterface::EXISTS_RENAME) {
     // @todo Remove file_save_data() when Drupal 9.2 is no longer supported.
     if (!\Drupal::hasService('file.repository')) {
-      return file_save_data($data, $destination, $replace);
+      return \Drupal::service('file.repository')->writeData($data, $destination, $replace);
     }
 
     if (empty($destination)) {
       $destination = \Drupal::config('system.file')->get('default_scheme') . '://';
     }
-    /** @var \Drupal\file\FileRepositoryInterface $fileRepository */
+    /** @var FileRepositoryInterface $fileRepository */
     $fileRepository = \Drupal::service('file.repository');
     try {
       return $fileRepository->writeData($data, $destination, $replace);
diff --git a/src/Feeds/Target/Password.php b/src/Feeds/Target/Password.php
index 9617d587..14c76d9d 100644
--- a/src/Feeds/Target/Password.php
+++ b/src/Feeds/Target/Password.php
@@ -40,7 +40,7 @@ class Password extends FieldTargetBase implements ConfigurableTargetInterface, C
   /**
    * The password hash service.
    *
-   * @var \Drupal\Core\Password\PasswordInterface
+   * @var PasswordInterface
    */
   protected $passwordHasher;
 
@@ -53,7 +53,7 @@ class Password extends FieldTargetBase implements ConfigurableTargetInterface, C
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Password\PasswordInterface $password_hasher
+   * @param PasswordInterface $password_hasher
    *   The password hash service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, PasswordInterface $password_hasher) {
diff --git a/src/Feeds/Target/Text.php b/src/Feeds/Target/Text.php
index f95d9a52..cdd4db23 100644
--- a/src/Feeds/Target/Text.php
+++ b/src/Feeds/Target/Text.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Feeds\Target;
 
+use Drupal\filter\FilterFormatInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -27,7 +28,7 @@ class Text extends StringTarget implements ConfigurableTargetInterface, Containe
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
@@ -40,7 +41,7 @@ class Text extends StringTarget implements ConfigurableTargetInterface, Containe
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, AccountInterface $user) {
@@ -85,10 +86,10 @@ class Text extends StringTarget implements ConfigurableTargetInterface, Containe
   /**
    * Retrieves a list of text formats that the given user may use.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account to select formats for.
    *
-   * @return \Drupal\filter\FilterFormatInterface[]
+   * @return FilterFormatInterface[]
    *   An array of text format objects, keyed by the format ID and ordered by
    *   weight.
    */
diff --git a/src/FeedsBatchBase.php b/src/FeedsBatchBase.php
index f0ae2cb5..c8fadcae 100644
--- a/src/FeedsBatchBase.php
+++ b/src/FeedsBatchBase.php
@@ -10,14 +10,14 @@ abstract class FeedsBatchBase implements FeedsBatchInterface {
   /**
    * The Feeds executable.
    *
-   * @var \Drupal\feeds\FeedsExecutableInterface
+   * @var FeedsExecutableInterface
    */
   protected $executable;
 
   /**
    * The feed to run a batch for.
    *
-   * @var \Drupal\feeds\FeedInterface
+   * @var FeedInterface
    */
   protected $feed;
 
@@ -38,9 +38,9 @@ abstract class FeedsBatchBase implements FeedsBatchInterface {
   /**
    * Constructs a new FeedsBatchBase object.
    *
-   * @param \Drupal\feeds\FeedsExecutableInterface $executable
+   * @param FeedsExecutableInterface $executable
    *   The Feeds executable.
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to run a batch for.
    * @param string $stage
    *   The stage of the batch to run.
diff --git a/src/FeedsExecutable.php b/src/FeedsExecutable.php
index efa4e69f..c5c95dd6 100644
--- a/src/FeedsExecutable.php
+++ b/src/FeedsExecutable.php
@@ -37,34 +37,34 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new FeedsExecutable object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $account_switcher
+   * @param AccountSwitcherInterface $account_switcher
    *   The account switcher.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EventDispatcherInterface $event_dispatcher, AccountSwitcherInterface $account_switcher, MessengerInterface $messenger) {
@@ -133,12 +133,12 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Creates a new batch object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to run a batch for.
    * @param string $stage
    *   The stage of the batch to run.
    *
-   * @return \Drupal\feeds\FeedsBatchInterface
+   * @return FeedsBatchInterface
    *   A feeds batch object.
    */
   protected function createBatch(FeedInterface $feed, $stage) {
@@ -148,10 +148,10 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Safely switches to another account.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed that has the account to switch to.
    *
-   * @return \Drupal\Core\Session\AccountSwitcherInterface
+   * @return AccountSwitcherInterface
    *   The account switcher to call switchBack() on.
    *
    * @see \Drupal\Core\Session\AccountSwitcherInterface::switchTo()
@@ -165,7 +165,7 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Handles an exception during importing.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
    * @param string $stage
    *   The stage which the import is at.
@@ -194,7 +194,7 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Begin an import.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to perform an import on.
    */
   protected function import(FeedInterface $feed) {
@@ -215,7 +215,7 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Invokes the fetch stage.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to fetch.
    */
   protected function doFetch(FeedInterface $feed) {
@@ -232,9 +232,9 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Parses.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to perform a parse event on.
-   * @param \Drupal\feeds\Result\FetcherResultInterface $fetcher_result
+   * @param FetcherResultInterface $fetcher_result
    *   The fetcher result.
    */
   protected function doParse(FeedInterface $feed, FetcherResultInterface $fetcher_result) {
@@ -256,9 +256,9 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Processes an item.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to perform a process event on.
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item to import.
    */
   protected function doProcess(FeedInterface $feed, ItemInterface $item) {
@@ -271,7 +271,7 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Cleans an entity.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to perform a clean event on.
    */
   protected function doClean(FeedInterface $feed) {
@@ -293,9 +293,9 @@ class FeedsExecutable implements FeedsExecutableInterface, ContainerInjectionInt
   /**
    * Finalizes the import.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed which import batch is about to be finished.
-   * @param \Drupal\feeds\Result\FetcherResultInterface $fetcher_result
+   * @param FetcherResultInterface $fetcher_result
    *   The last fetcher result.
    *
    * @return bool
diff --git a/src/FeedsExecutableInterface.php b/src/FeedsExecutableInterface.php
index f1507cf4..04f493f7 100644
--- a/src/FeedsExecutableInterface.php
+++ b/src/FeedsExecutableInterface.php
@@ -52,7 +52,7 @@ interface FeedsExecutableInterface {
   /**
    * Processes a stage of an import.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to batch.
    * @param string $stage
    *   The stage which the import is at.
diff --git a/src/FeedsItemInterface.php b/src/FeedsItemInterface.php
index 88d9f715..57f8788e 100644
--- a/src/FeedsItemInterface.php
+++ b/src/FeedsItemInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds;
 
+use Drupal\Core\Url;
 use Drupal\Core\Field\FieldItemInterface;
 
 /**
@@ -12,7 +13,7 @@ interface FeedsItemInterface extends FieldItemInterface {
   /**
    * Gets the URL object.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Returns a Url object.
    */
   public function getUrl();
diff --git a/src/FeedsPermissions.php b/src/FeedsPermissions.php
index 8aeb4a31..4f43326d 100644
--- a/src/FeedsPermissions.php
+++ b/src/FeedsPermissions.php
@@ -47,7 +47,7 @@ class FeedsPermissions {
   /**
    * Builds a standard list of feeds permissions for a given type.
    *
-   * @param \Drupal\feeds\Entity\FeedType $feed_type
+   * @param FeedType $feed_type
    *   The feed type object.
    *
    * @return array
diff --git a/src/FeedsQueueBatch.php b/src/FeedsQueueBatch.php
index 9b68a24e..54b829d8 100644
--- a/src/FeedsQueueBatch.php
+++ b/src/FeedsQueueBatch.php
@@ -12,20 +12,20 @@ class FeedsQueueBatch extends FeedsBatchBase {
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * Constructs a new FeedsQueueBatch object.
    *
-   * @param \Drupal\feeds\FeedsExecutableInterface $executable
+   * @param FeedsExecutableInterface $executable
    *   The Feeds executable.
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to run a batch for.
    * @param string $stage
    *   The stage of the batch to run.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory.
    */
   public function __construct(FeedsExecutableInterface $executable, FeedInterface $feed, $stage, QueueFactory $queue_factory) {
diff --git a/src/FeedsQueueExecutable.php b/src/FeedsQueueExecutable.php
index 678835a2..d85d3948 100644
--- a/src/FeedsQueueExecutable.php
+++ b/src/FeedsQueueExecutable.php
@@ -18,22 +18,22 @@ class FeedsQueueExecutable extends FeedsExecutable {
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * Constructs a new FeedsQueueExecutable object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $account_switcher
+   * @param AccountSwitcherInterface $account_switcher
    *   The account switcher.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EventDispatcherInterface $event_dispatcher, AccountSwitcherInterface $account_switcher, MessengerInterface $messenger, QueueFactory $queue_factory) {
diff --git a/src/FieldTargetDefinition.php b/src/FieldTargetDefinition.php
index 7b258dca..33c41d2c 100644
--- a/src/FieldTargetDefinition.php
+++ b/src/FieldTargetDefinition.php
@@ -19,14 +19,14 @@ class FieldTargetDefinition extends TargetDefinition {
   /**
    * The wrapped field definition.
    *
-   * @var \Drupal\Core\Field\FieldDefinitionInterface
+   * @var FieldDefinitionInterface
    */
   protected $fieldDefinition;
 
   /**
    * Creates a target definition form a field definition.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field definition.
    *
    * @return \Drupal\feeds\FieldTargetDefinition
@@ -40,7 +40,7 @@ class FieldTargetDefinition extends TargetDefinition {
   /**
    * Sets the field definition.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field definition.
    *
    * @return $this
@@ -67,7 +67,7 @@ class FieldTargetDefinition extends TargetDefinition {
   /**
    * Returns the field definition.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface
+   * @return FieldDefinitionInterface
    *   The wrapped field definition.
    */
   public function getFieldDefinition() {
diff --git a/src/Form/CustomSourceDeleteForm.php b/src/Form/CustomSourceDeleteForm.php
index 264150e1..0fad2c2a 100644
--- a/src/Form/CustomSourceDeleteForm.php
+++ b/src/Form/CustomSourceDeleteForm.php
@@ -16,7 +16,7 @@ class CustomSourceDeleteForm extends ConfirmFormBase {
   /**
    * The feed type for which to delete a custom source.
    *
-   * @var \Drupal\feeds\FeedTypeInterface
+   * @var FeedTypeInterface
    */
   protected $feedType;
 
@@ -70,9 +70,9 @@ class CustomSourceDeleteForm extends ConfirmFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\feeds\FeedTypeInterface $feeds_feed_type
+   * @param FeedTypeInterface $feeds_feed_type
    *   The feed type that we are deleting a custom source from.
    * @param string $key
    *   The custom source's ID.
diff --git a/src/Form/CustomSourceEditForm.php b/src/Form/CustomSourceEditForm.php
index bba0e759..4f1e614b 100644
--- a/src/Form/CustomSourceEditForm.php
+++ b/src/Form/CustomSourceEditForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Form;
 
+use Drupal\feeds\Plugin\Type\CustomSource\CustomSourceInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -19,21 +20,21 @@ class CustomSourceEditForm extends FormBase {
   /**
    * The custom source plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $pluginManager;
 
   /**
    * A FeedsCustomSource plugin.
    *
-   * @var \Drupal\feeds\Plugin\Type\CustomSource\CustomSourceInterface
+   * @var CustomSourceInterface
    */
   protected $plugin;
 
   /**
    * Constructs a new CustomSourceEditForm object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $plugin_manager
+   * @param PluginManagerInterface $plugin_manager
    *   The custom source plugin manager.
    */
   public function __construct(PluginManagerInterface $plugin_manager) {
diff --git a/src/Form/DeleteMultiple.php b/src/Form/DeleteMultiple.php
index 9cc2d2c4..d1a28fab 100644
--- a/src/Form/DeleteMultiple.php
+++ b/src/Form/DeleteMultiple.php
@@ -27,32 +27,32 @@ class DeleteMultiple extends ConfirmFormBase {
   /**
    * The tempstore factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
   /**
    * The feed storage.
    *
-   * @var \Drupal\feeds\FeedStorageInterface
+   * @var FeedStorageInterface
    */
   protected $storage;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
   /**
    * Constructs a DeleteMultiple form object.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   The tempstore factory.
-   * @param \Drupal\feeds\FeedStorageInterface $storage
+   * @param FeedStorageInterface $storage
    *   The feed storage.
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The current user.
    */
   public function __construct(PrivateTempStoreFactory $temp_store_factory, FeedStorageInterface $storage, AccountInterface $user) {
diff --git a/src/Form/MappingForm.php b/src/Form/MappingForm.php
index 70132c5d..9a84eab1 100644
--- a/src/Form/MappingForm.php
+++ b/src/Form/MappingForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Form;
 
+use Drupal\feeds\TargetDefinitionInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Config\Entity\ConfigEntityStorageInterface;
@@ -27,14 +28,14 @@ class MappingForm extends FormBase {
   /**
    * The feed type.
    *
-   * @var \Drupal\feeds\FeedTypeInterface
+   * @var FeedTypeInterface
    */
   protected $feedType;
 
   /**
    * The feed type storage.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface
+   * @var ConfigEntityStorageInterface
    */
   protected $feedTypeStorage;
 
@@ -48,9 +49,9 @@ class MappingForm extends FormBase {
   /**
    * Constructs a new MappingForm object.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $feed_type_storage
+   * @param ConfigEntityStorageInterface $feed_type_storage
    *   The feed type storage.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $custom_source_plugin_manager
+   * @param PluginManagerInterface $custom_source_plugin_manager
    *   The custom source plugin manager.
    */
   public function __construct(ConfigEntityStorageInterface $feed_type_storage, PluginManagerInterface $custom_source_plugin_manager) {
@@ -188,7 +189,7 @@ class MappingForm extends FormBase {
    *
    * @param array $form
    *   The complete mapping form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    * @param array $mapping
    *   A single configured mapper, which is expected to consist of the
@@ -221,7 +222,7 @@ class MappingForm extends FormBase {
 
     // Check if the target exists.
     if (!empty($this->targets[$mapping['target']])) {
-      /** @var \Drupal\feeds\TargetDefinitionInterface $target_definition */
+      /** @var TargetDefinitionInterface $target_definition */
       $target_definition = $this->targets[$mapping['target']];
     }
     else {
@@ -372,7 +373,7 @@ class MappingForm extends FormBase {
    *
    * @param array $element
    *   The element to which the subform is added.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param int $delta
    *   The row on the mapping form.
@@ -432,9 +433,9 @@ class MappingForm extends FormBase {
   /**
    * Checks if the given plugin has a settings form.
    *
-   * @param \Drupal\feeds\Plugin\Type\Target\TargetInterface $plugin
+   * @param TargetInterface $plugin
    *   The target plugin.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return bool
@@ -458,7 +459,7 @@ class MappingForm extends FormBase {
   /**
    * Builds the summary for a configurable target.
    *
-   * @param \Drupal\feeds\Plugin\Type\Target\ConfigurableTargetInterface $plugin
+   * @param ConfigurableTargetInterface $plugin
    *   A configurable target plugin.
    *
    * @return array
@@ -488,7 +489,7 @@ class MappingForm extends FormBase {
    *
    * @param array $form
    *   The complete mapping form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return array
@@ -529,7 +530,7 @@ class MappingForm extends FormBase {
     }
     asort($element['sources']['#rows']);
 
-    /** @var \Drupal\feeds\TargetDefinitionInterface $definition */
+    /** @var TargetDefinitionInterface $definition */
     foreach ($this->targets as $key => $definition) {
       $element['targets']['#rows'][$key] = [
         'label' => $definition->getLabel(),
@@ -548,7 +549,7 @@ class MappingForm extends FormBase {
    *   The name to check.
    * @param array $element
    *   The form element using the machine name.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @return bool
@@ -631,7 +632,7 @@ class MappingForm extends FormBase {
    *
    * @param array $form
    *   The complete mapping form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    */
   protected function processFormState(array $form, FormStateInterface $form_state) {
@@ -807,10 +808,10 @@ class MappingForm extends FormBase {
    *
    * @param string|array $key
    *   The form state key.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state to copy values from.
    *
-   * @return \Drupal\Core\Form\FormStateInterface
+   * @return FormStateInterface
    *   A new form state object.
    *
    * @see FormStateInterface::getValue()
@@ -827,7 +828,7 @@ class MappingForm extends FormBase {
    * Two mappings are considered a duplicate if they are configured the same. So
    * the same source, the same target and the same target configuration.
    *
-   * @param \Drupal\feeds\FeedTypeInterface $feed_type
+   * @param FeedTypeInterface $feed_type
    *   The feed type.
    * @param array $target_options
    *   The mapping sources target list.
diff --git a/src/Plugin/Action/DeleteFeed.php b/src/Plugin/Action/DeleteFeed.php
index 7d75b77a..2129444a 100644
--- a/src/Plugin/Action/DeleteFeed.php
+++ b/src/Plugin/Action/DeleteFeed.php
@@ -23,14 +23,14 @@ class DeleteFeed extends ActionBase implements ContainerFactoryPluginInterface {
   /**
    * The tempstore object.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStore
+   * @var PrivateTempStore
    */
   protected $tempStore;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
@@ -43,9 +43,9 @@ class DeleteFeed extends ActionBase implements ContainerFactoryPluginInterface {
    *   The plugin ID for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\TempStore\PrivateTempStore $temp_store
+   * @param PrivateTempStore $temp_store
    *   The tempstore factory.
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, PrivateTempStore $temp_store, AccountInterface $user) {
diff --git a/src/Plugin/Derivative/ExtraLinks.php b/src/Plugin/Derivative/ExtraLinks.php
index cc43ca54..e768d2a0 100644
--- a/src/Plugin/Derivative/ExtraLinks.php
+++ b/src/Plugin/Derivative/ExtraLinks.php
@@ -28,21 +28,21 @@ class ExtraLinks extends DeriverBase implements ContainerDeriverInterface {
   /**
    * The storage handler for the config entity type 'feeds_feed_type'.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityStorage
+   * @var ConfigEntityStorage
    */
   protected $feedTypeStorage;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
@@ -58,13 +58,13 @@ class ExtraLinks extends DeriverBase implements ContainerDeriverInterface {
    *
    * @param string $base_plugin_id
    *   The base plugin ID for the plugin ID.
-   * @param \Drupal\Core\Config\Entity\ConfigEntityStorage $feed_type_storage
+   * @param ConfigEntityStorage $feed_type_storage
    *   The storage handler for the config entity type 'feeds_feed_type'.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct($base_plugin_id, ConfigEntityStorage $feed_type_storage, ModuleHandlerInterface $module_handler, RouteProviderInterface $route_provider, ConfigFactoryInterface $config_factory) {
diff --git a/src/Plugin/Derivative/FeedQueueWorker.php b/src/Plugin/Derivative/FeedQueueWorker.php
index 435c1b8a..89c9ac76 100644
--- a/src/Plugin/Derivative/FeedQueueWorker.php
+++ b/src/Plugin/Derivative/FeedQueueWorker.php
@@ -19,14 +19,14 @@ class FeedQueueWorker extends DeriverBase implements ContainerDeriverInterface {
   /**
    * The entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
   /**
    * Constructs an FeedQueueWorker object.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity manager.
    */
   public function __construct(EntityStorageInterface $storage) {
diff --git a/src/Plugin/Derivative/GenericContentEntityProcessor.php b/src/Plugin/Derivative/GenericContentEntityProcessor.php
index 9375246f..01a9974b 100644
--- a/src/Plugin/Derivative/GenericContentEntityProcessor.php
+++ b/src/Plugin/Derivative/GenericContentEntityProcessor.php
@@ -21,14 +21,14 @@ class GenericContentEntityProcessor extends DeriverBase implements ContainerDeri
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs new GenericEntityProcessor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/Field/FieldFormatter/FeedsItemFormatterBase.php b/src/Plugin/Field/FieldFormatter/FeedsItemFormatterBase.php
index 1970d87f..16174576 100644
--- a/src/Plugin/Field/FieldFormatter/FeedsItemFormatterBase.php
+++ b/src/Plugin/Field/FieldFormatter/FeedsItemFormatterBase.php
@@ -31,7 +31,7 @@ abstract class FeedsItemFormatterBase extends EntityReferenceFormatterBase {
   /**
    * Generates a link element from an Url value.
    *
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *   The Url value you are creating a link with.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/FeedsItemUrlFormatter.php b/src/Plugin/Field/FieldFormatter/FeedsItemUrlFormatter.php
index 8367fa0a..4a24ae74 100644
--- a/src/Plugin/Field/FieldFormatter/FeedsItemUrlFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FeedsItemUrlFormatter.php
@@ -85,10 +85,10 @@ class FeedsItemUrlFormatter extends FeedsItemFormatterBase {
   /**
    * Builds the \Drupal\Core\Url object for a feeds_item field item.
    *
-   * @param \Drupal\feeds\FeedsItemInterface $item
+   * @param FeedsItemInterface $item
    *   The feeds_item field item being rendered.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   An Url object.
    */
   protected function buildUrl(FeedsItemInterface $item) {
diff --git a/src/Plugin/PluginFormFactory.php b/src/Plugin/PluginFormFactory.php
index 602937d4..0c553b62 100644
--- a/src/Plugin/PluginFormFactory.php
+++ b/src/Plugin/PluginFormFactory.php
@@ -14,14 +14,14 @@ class PluginFormFactory {
   /**
    * The class resolver.
    *
-   * @var \Drupal\Core\DependencyInjection\ClassResolverInterface
+   * @var ClassResolverInterface
    */
   protected $classResolver;
 
   /**
    * PluginFormFactory constructor.
    *
-   * @param \Drupal\Core\DependencyInjection\ClassResolverInterface $class_resolver
+   * @param ClassResolverInterface $class_resolver
    *   The class resolver.
    */
   public function __construct(ClassResolverInterface $class_resolver) {
@@ -31,7 +31,7 @@ class PluginFormFactory {
   /**
    * Returns whether or not the plugin implements a form for the given type.
    *
-   * @param \Drupal\feeds\Plugin\Type\FeedsPluginInterface $plugin
+   * @param FeedsPluginInterface $plugin
    *   The Feeds plugin.
    * @param string $operation
    *   The type of form to check for, which can be for example:
@@ -61,12 +61,12 @@ class PluginFormFactory {
   /**
    * Creates a form instance for the plugin.
    *
-   * @param \Drupal\feeds\Plugin\Type\FeedsPluginInterface $plugin
+   * @param FeedsPluginInterface $plugin
    *   The Feeds plugin.
    * @param string $operation
    *   The type of form to create. See ::hasForm above for possible types.
    *
-   * @return \Drupal\Core\Plugin\PluginFormInterface
+   * @return PluginFormInterface
    *   A form for the plugin.
    */
   public function createInstance(FeedsPluginInterface $plugin, $operation) {
diff --git a/src/Plugin/QueueWorker/FeedQueueWorkerBase.php b/src/Plugin/QueueWorker/FeedQueueWorkerBase.php
index 016a9837..0372669c 100644
--- a/src/Plugin/QueueWorker/FeedQueueWorkerBase.php
+++ b/src/Plugin/QueueWorker/FeedQueueWorkerBase.php
@@ -24,21 +24,21 @@ abstract class FeedQueueWorkerBase extends QueueWorkerBase implements ContainerF
   /**
    * The account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -51,13 +51,13 @@ abstract class FeedQueueWorkerBase extends QueueWorkerBase implements ContainerF
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $account_switcher
+   * @param AccountSwitcherInterface $account_switcher
    *   The account switcher.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, QueueFactory $queue_factory, EventDispatcherInterface $event_dispatcher, AccountSwitcherInterface $account_switcher, EntityTypeManagerInterface $entity_type_manager) {
@@ -98,10 +98,10 @@ abstract class FeedQueueWorkerBase extends QueueWorkerBase implements ContainerF
   /**
    * Safely switches to another account.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed that has the account to switch to.
    *
-   * @return \Drupal\Core\Session\AccountSwitcherInterface
+   * @return AccountSwitcherInterface
    *   The account switcher to call switchBack() on.
    *
    * @see \Drupal\Core\Session\AccountSwitcherInterface::switchTo()
diff --git a/src/Plugin/QueueWorker/FeedRefresh.php b/src/Plugin/QueueWorker/FeedRefresh.php
index 9ff8db40..0cad06c8 100644
--- a/src/Plugin/QueueWorker/FeedRefresh.php
+++ b/src/Plugin/QueueWorker/FeedRefresh.php
@@ -49,7 +49,7 @@ class FeedRefresh extends FeedQueueWorkerBase {
   /**
    * Returns if a feed entity still exists or not.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed entity to check for existance in the database.
    *
    * @return bool
diff --git a/src/Plugin/Type/CleanableInterface.php b/src/Plugin/Type/CleanableInterface.php
index 145510dc..62e1def0 100644
--- a/src/Plugin/Type/CleanableInterface.php
+++ b/src/Plugin/Type/CleanableInterface.php
@@ -22,11 +22,11 @@ interface CleanableInterface {
    * - Unpublishing the entity;
    * - Or any other action plugin that is applyable.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed entity.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being cleaned.
-   * @param \Drupal\feeds\Feeds\State\CleanStateInterface $state
+   * @param CleanStateInterface $state
    *   The state object.
    */
   public function clean(FeedInterface $feed, EntityInterface $entity, CleanStateInterface $state);
diff --git a/src/Plugin/Type/ClearableInterface.php b/src/Plugin/Type/ClearableInterface.php
index a281a32f..fd4edf75 100644
--- a/src/Plugin/Type/ClearableInterface.php
+++ b/src/Plugin/Type/ClearableInterface.php
@@ -27,12 +27,12 @@ interface ClearableInterface {
    * $state->progress($state->total, $state->total - $deleted);
    * @endcode
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed being cleared. Implementers should only delete items pertaining
    *   to this feed. The preferred way of determining whether an item pertains
    *   to a certain feed is by using $feed->id(). It is the plugins's
    *   responsibility to store the id of an imported item during importing.
-   * @param \Drupal\feeds\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    */
   public function clear(FeedInterface $feed, StateInterface $state);
diff --git a/src/Plugin/Type/ExternalPluginFormBase.php b/src/Plugin/Type/ExternalPluginFormBase.php
index 0161f97a..5e95c20b 100644
--- a/src/Plugin/Type/ExternalPluginFormBase.php
+++ b/src/Plugin/Type/ExternalPluginFormBase.php
@@ -19,7 +19,7 @@ abstract class ExternalPluginFormBase implements PluginFormInterface, PluginAwar
   /**
    * The Feeds plugin.
    *
-   * @var \Drupal\feeds\Plugin\Type\FeedsPluginInterface
+   * @var FeedsPluginInterface
    */
   protected $plugin;
 
diff --git a/src/Plugin/Type/ExternalPluginFormInterface.php b/src/Plugin/Type/ExternalPluginFormInterface.php
index 3aa39cf0..aa415e28 100644
--- a/src/Plugin/Type/ExternalPluginFormInterface.php
+++ b/src/Plugin/Type/ExternalPluginFormInterface.php
@@ -13,9 +13,9 @@ interface ExternalPluginFormInterface extends PluginFormInterface {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
-   * @param \Drupal\feeds\Plugin\Type\FeedsPluginInterface $plugin
+   * @param FeedsPluginInterface $plugin
    *   The plugin.
    *
    * @return static
diff --git a/src/Plugin/Type/FeedsPluginManager.php b/src/Plugin/Type/FeedsPluginManager.php
index 53ac97ad..149f3e1e 100644
--- a/src/Plugin/Type/FeedsPluginManager.php
+++ b/src/Plugin/Type/FeedsPluginManager.php
@@ -31,11 +31,11 @@ class FeedsPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct($type, \Traversable $namespaces, CacheBackendInterface $cache_backend, LanguageManagerInterface $language_manager, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Type/Fetcher/FetcherInterface.php b/src/Plugin/Type/Fetcher/FetcherInterface.php
index 51461622..cb44c833 100644
--- a/src/Plugin/Type/Fetcher/FetcherInterface.php
+++ b/src/Plugin/Type/Fetcher/FetcherInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Plugin\Type\Fetcher;
 
+use Drupal\feeds\Result\FetcherResultInterface;
 use Drupal\feeds\FeedInterface;
 use Drupal\feeds\Plugin\Type\FeedsPluginInterface;
 use Drupal\feeds\StateInterface;
@@ -14,12 +15,12 @@ interface FetcherInterface extends FeedsPluginInterface {
   /**
    * Fetch content from a feed and return it.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to fetch results for.
-   * @param \Drupal\feeds\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    *
-   * @return \Drupal\feeds\Result\FetcherResultInterface
+   * @return FetcherResultInterface
    *   A fetcher result object.
    */
   public function fetch(FeedInterface $feed, StateInterface $state);
diff --git a/src/Plugin/Type/MappingPluginFormInterface.php b/src/Plugin/Type/MappingPluginFormInterface.php
index f6fb64bd..839a76ca 100644
--- a/src/Plugin/Type/MappingPluginFormInterface.php
+++ b/src/Plugin/Type/MappingPluginFormInterface.php
@@ -14,7 +14,7 @@ interface MappingPluginFormInterface {
    *
    * @param array $form
    *   The mapping form definition.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the mapping form.
    */
   public function mappingFormAlter(array &$form, FormStateInterface $form_state);
@@ -24,7 +24,7 @@ interface MappingPluginFormInterface {
    *
    * @param array $form
    *   The mapping form definition.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the mapping form.
    */
   public function mappingFormValidate(array &$form, FormStateInterface $form_state);
@@ -34,7 +34,7 @@ interface MappingPluginFormInterface {
    *
    * @param array $form
    *   The mapping form definition.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the mapping form.
    */
   public function mappingFormSubmit(array &$form, FormStateInterface $form_state);
diff --git a/src/Plugin/Type/Parser/ParserInterface.php b/src/Plugin/Type/Parser/ParserInterface.php
index a0572d65..2c97a1db 100644
--- a/src/Plugin/Type/Parser/ParserInterface.php
+++ b/src/Plugin/Type/Parser/ParserInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Plugin\Type\Parser;
 
+use Drupal\feeds\Result\ParserResultInterface;
 use Drupal\feeds\FeedInterface;
 use Drupal\feeds\Plugin\Type\FeedsPluginInterface;
 use Drupal\feeds\Result\FetcherResultInterface;
@@ -15,14 +16,14 @@ interface ParserInterface extends FeedsPluginInterface {
   /**
    * Parses content returned by fetcher.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed we are parsing for.
-   * @param \Drupal\feeds\Result\FetcherResultInterface $fetcher_result
+   * @param FetcherResultInterface $fetcher_result
    *   The result returned by the fetcher.
-   * @param \Drupal\feeds\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    *
-   * @return \Drupal\feeds\Result\ParserResultInterface
+   * @return ParserResultInterface
    *   The parser result object.
    *
    * @todo This needs more documentation.
diff --git a/src/Plugin/Type/PluginBase.php b/src/Plugin/Type/PluginBase.php
index b7e8dab9..1dcf34a5 100644
--- a/src/Plugin/Type/PluginBase.php
+++ b/src/Plugin/Type/PluginBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\feeds\Plugin\Type;
 
+use Drupal\Core\Routing\UrlGeneratorInterface;
+use Drupal\Core\Utility\LinkGeneratorInterface;
+use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Plugin\PluginBase as DrupalPluginBase;
 use Drupal\feeds\FeedInterface;
 use Drupal\feeds\FeedTypeInterface;
@@ -21,21 +24,21 @@ abstract class PluginBase extends DrupalPluginBase implements FeedsPluginInterfa
   /**
    * The importer this plugin is working for.
    *
-   * @var \Drupal\feeds\FeedTypeInterface
+   * @var FeedTypeInterface
    */
   protected $feedType;
 
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
   /**
    * The link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;
 
@@ -161,7 +164,7 @@ abstract class PluginBase extends DrupalPluginBase implements FeedsPluginInterfa
   /**
    * Returns the link generator service.
    *
-   * @return \Drupal\Core\Utility\LinkGeneratorInterface
+   * @return LinkGeneratorInterface
    *   The link generator service.
    */
   protected function linkGenerator() {
@@ -174,7 +177,7 @@ abstract class PluginBase extends DrupalPluginBase implements FeedsPluginInterfa
   /**
    * Returns the URL generator service.
    *
-   * @return \Drupal\Core\Routing\UrlGeneratorInterface
+   * @return UrlGeneratorInterface
    *   The URL generator service.
    */
   protected function urlGenerator() {
@@ -187,7 +190,7 @@ abstract class PluginBase extends DrupalPluginBase implements FeedsPluginInterfa
   /**
    * Returns the service container.
    *
-   * @return \Symfony\Component\DependencyInjection\ContainerInterface
+   * @return ContainerInterface
    *   The service container.
    */
   private function container() {
diff --git a/src/Plugin/Type/Processor/EntityProcessorInterface.php b/src/Plugin/Type/Processor/EntityProcessorInterface.php
index f2aa99fd..29ac2e6b 100644
--- a/src/Plugin/Type/Processor/EntityProcessorInterface.php
+++ b/src/Plugin/Type/Processor/EntityProcessorInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Plugin\Type\Processor;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\feeds\FeedInterface;
 use Drupal\feeds\Plugin\Type\CleanableInterface;
@@ -19,14 +20,14 @@ interface EntityProcessorInterface extends ProcessorInterface, ClearableInterfac
    * If a translation of the requested language does not exist yet on the
    * entity, one is created.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed that controls the import.
-   * @param \Drupal\Core\Entity\TranslatableInterface $entity
+   * @param TranslatableInterface $entity
    *   A translatable entity.
    * @param string $langcode
    *   The language in which to get the translation.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The translated entity.
    */
   public function getEntityTranslation(FeedInterface $feed, TranslatableInterface $entity, $langcode);
diff --git a/src/Plugin/Type/Processor/ProcessorInterface.php b/src/Plugin/Type/Processor/ProcessorInterface.php
index 9012613d..147ded5f 100644
--- a/src/Plugin/Type/Processor/ProcessorInterface.php
+++ b/src/Plugin/Type/Processor/ProcessorInterface.php
@@ -71,11 +71,11 @@ interface ProcessorInterface extends FeedsPluginInterface {
   /**
    * Processes the results from a parser.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed being imported.
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item to process.
-   * @param \Drupal\feeds\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    */
   public function process(FeedInterface $feed, ItemInterface $item, StateInterface $state);
@@ -83,9 +83,9 @@ interface ProcessorInterface extends FeedsPluginInterface {
   /**
    * Called after an import is completed.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
-   * @param \Drupal\feeds\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    */
   public function postProcess(FeedInterface $feed, StateInterface $state);
@@ -93,7 +93,7 @@ interface ProcessorInterface extends FeedsPluginInterface {
   /**
    * Returns feed item ID's to expire.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed for which to get the expired item ID's.
    * @param int $time
    *   (optional) All items produced by this configuration that are older than
@@ -111,11 +111,11 @@ interface ProcessorInterface extends FeedsPluginInterface {
    * Do not invoke expire on a processor directly. This is called automatically
    * after an import completes.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to expire items for.
    * @param int $item_id
    *   The feed item id to expire.
-   * @param \Drupal\feeds\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    */
   public function expireItem(FeedInterface $feed, $item_id, StateInterface $state);
@@ -123,7 +123,7 @@ interface ProcessorInterface extends FeedsPluginInterface {
   /**
    * Counts the number of items imported by this processor.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed who's items we are counting.
    *
    * @return int
@@ -134,7 +134,7 @@ interface ProcessorInterface extends FeedsPluginInterface {
   /**
    * Returns a list of ID's of entities that were imported.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to check fo imported entity ID's.
    *
    * @return array
diff --git a/src/Plugin/Type/Source/SourceInterface.php b/src/Plugin/Type/Source/SourceInterface.php
index a0896ae3..6754db66 100644
--- a/src/Plugin/Type/Source/SourceInterface.php
+++ b/src/Plugin/Type/Source/SourceInterface.php
@@ -17,7 +17,7 @@ interface SourceInterface extends FeedsPluginInterface {
    *
    * @param array $sources
    *   The list of sources to modify.
-   * @param \Drupal\feeds\FeedTypeInterface $feed_type
+   * @param FeedTypeInterface $feed_type
    *   The feed type being added to.
    * @param array $definition
    *   The plugin definition.
@@ -27,9 +27,9 @@ interface SourceInterface extends FeedsPluginInterface {
   /**
    * Returns the value for a source.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed being processed.
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item that is processed.
    *
    * @return array
diff --git a/src/Plugin/Type/Target/FieldTargetBase.php b/src/Plugin/Type/Target/FieldTargetBase.php
index ee114467..66c79eab 100644
--- a/src/Plugin/Type/Target/FieldTargetBase.php
+++ b/src/Plugin/Type/Target/FieldTargetBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\feeds\Plugin\Type\Target;
 
+use Drupal\Core\Entity\Query\QueryInterface;
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -30,7 +33,7 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -65,10 +68,10 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Prepares a target definition.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field definition.
    *
-   * @return \Drupal\feeds\FieldTargetDefinition
+   * @return FieldTargetDefinition
    *   The target definition.
    */
   protected static function prepareTarget(FieldDefinitionInterface $field_definition) {
@@ -119,14 +122,14 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Get entity, or entity translation to set the map.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to import.
    *
    * @see \Drupal\feeds\Plugin\Type\Target\FieldTargetBase::isTargetTranslatable()
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   Self entity or entity translation.
    */
   public function getEntityTarget(FeedInterface $feed, EntityInterface $entity) {
@@ -185,7 +188,7 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Constructs a base query which is used to find an existing entity.
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   An entity query.
    *
    * @see ::getUniqueValue()
@@ -198,7 +201,7 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Looks for an existing entity and returns an entity ID if found.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed that is being processed.
    * @param string $target
    *   The ID of the field target plugin.
@@ -240,7 +243,7 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Returns the messenger to use.
    *
-   * @return \Drupal\Core\Messenger\MessengerInterface
+   * @return MessengerInterface
    *   The messenger service.
    */
   protected function getMessenger() {
@@ -250,7 +253,7 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Adds a message.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   The translated message to be displayed to the user.
    * @param string $type
    *   (optional) The message's type.
@@ -360,7 +363,7 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Gets the language manager.
    *
-   * @return \Drupal\Core\Language\LanguageManagerInterface
+   * @return LanguageManagerInterface
    *   The language manager.
    */
   protected function getLanguageManager() {
@@ -373,7 +376,7 @@ abstract class FieldTargetBase extends TargetBase implements ConfigurableTargetI
   /**
    * Sets the language manager.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function setLanguageManager(LanguageManagerInterface $language_manager) {
diff --git a/src/Plugin/Type/Target/TargetBase.php b/src/Plugin/Type/Target/TargetBase.php
index dd12ade9..63fcae16 100644
--- a/src/Plugin/Type/Target/TargetBase.php
+++ b/src/Plugin/Type/Target/TargetBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Plugin\Type\Target;
 
+use Drupal\feeds\TargetDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\PluginFormInterface;
 use Drupal\feeds\Plugin\Type\ConfigurablePluginTrait;
@@ -28,7 +29,7 @@ abstract class TargetBase extends PluginBase implements TargetInterface, PluginF
   /**
    * The target definition.
    *
-   * @var \Drupal\feeds\TargetDefinitionInterface
+   * @var TargetDefinitionInterface
    */
   protected $targetDefinition;
 
diff --git a/src/Plugin/Type/Target/TargetInterface.php b/src/Plugin/Type/Target/TargetInterface.php
index c54e0ccd..5203bc26 100644
--- a/src/Plugin/Type/Target/TargetInterface.php
+++ b/src/Plugin/Type/Target/TargetInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds\Plugin\Type\Target;
 
+use Drupal\feeds\TargetDefinitionInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\feeds\FeedInterface;
 use Drupal\feeds\FeedTypeInterface;
@@ -15,9 +16,9 @@ interface TargetInterface extends DependentWithRemovalPluginInterface {
   /**
    * Returns the targets defined by this plugin.
    *
-   * @param \Drupal\feeds\TargetDefinitionInterface[] $targets
+   * @param TargetDefinitionInterface[] $targets
    *   An array of targets.
-   * @param \Drupal\feeds\FeedTypeInterface $feed_type
+   * @param FeedTypeInterface $feed_type
    *   The feed type object.
    * @param array $definition
    *   The plugin implementation definition.
@@ -27,9 +28,9 @@ interface TargetInterface extends DependentWithRemovalPluginInterface {
   /**
    * Sets the values on an object.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed object.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The target object.
    * @param string $target
    *   The name of the target to set.
@@ -41,7 +42,7 @@ interface TargetInterface extends DependentWithRemovalPluginInterface {
   /**
    * Returns the target's definition.
    *
-   * @return \Drupal\feeds\TargetDefinitionInterface
+   * @return TargetDefinitionInterface
    *   The definition for this target.
    */
   public function getTargetDefinition();
@@ -57,9 +58,9 @@ interface TargetInterface extends DependentWithRemovalPluginInterface {
   /**
    * Returns if the value for the target is empty.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed object.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The target object.
    * @param string $target
    *   The name of the target to set.
diff --git a/src/Result/ParserResultInterface.php b/src/Result/ParserResultInterface.php
index 5ce099dd..4078e095 100644
--- a/src/Result/ParserResultInterface.php
+++ b/src/Result/ParserResultInterface.php
@@ -12,7 +12,7 @@ interface ParserResultInterface extends \Iterator, \ArrayAccess, \Countable {
   /**
    * Adds an item to the result.
    *
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   A parsed feed item.
    *
    * @return $this
@@ -22,7 +22,7 @@ interface ParserResultInterface extends \Iterator, \ArrayAccess, \Countable {
   /**
    * Adds a list of items to the result.
    *
-   * @param \Drupal\feeds\Feeds\Item\ItemInterface[] $items
+   * @param ItemInterface[] $items
    *   A list of feed items.
    *
    * @return $this
diff --git a/src/Result/RawFetcherResult.php b/src/Result/RawFetcherResult.php
index 1f678753..a5a6ccca 100644
--- a/src/Result/RawFetcherResult.php
+++ b/src/Result/RawFetcherResult.php
@@ -24,7 +24,7 @@ class RawFetcherResult extends FetcherResult {
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -33,7 +33,7 @@ class RawFetcherResult extends FetcherResult {
    *
    * @param string $raw
    *   The raw result string.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   (optional) The file system service.
    */
   public function __construct($raw, FileSystemInterface $file_system = NULL) {
diff --git a/src/StateInterface.php b/src/StateInterface.php
index 790bbe6a..b8246901 100644
--- a/src/StateInterface.php
+++ b/src/StateInterface.php
@@ -120,7 +120,7 @@ interface StateInterface {
   /**
    * Logs all messages.
    *
-   * @param \Drupal\feeds\FeedInterface $feed
+   * @param FeedInterface $feed
    *   The feed to log messages for.
    *
    * @see \Drupal\feeds\StateInterface::setMessage()
diff --git a/tests/modules/feeds_test_alter_source/src/EventSubscriber/CsvFeed.php b/tests/modules/feeds_test_alter_source/src/EventSubscriber/CsvFeed.php
index 3b36781d..120b4dcf 100644
--- a/tests/modules/feeds_test_alter_source/src/EventSubscriber/CsvFeed.php
+++ b/tests/modules/feeds_test_alter_source/src/EventSubscriber/CsvFeed.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds_test_alter_source\EventSubscriber;
 
+use Drupal\feeds\Feeds\Item\ItemInterface;
 use Drupal\feeds\Event\FeedsEvents;
 use Drupal\feeds\Event\ParseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
@@ -31,7 +32,7 @@ class CsvFeed implements EventSubscriberInterface {
       return;
     }
 
-    /** @var \Drupal\feeds\Feeds\Item\ItemInterface $item */
+    /** @var ItemInterface $item */
     foreach ($event->getParserResult() as $item) {
       // Set title to lowercase.
       $item->set('service_description', strtolower($item->get('service_description')));
diff --git a/tests/modules/feeds_test_alter_source/src/EventSubscriber/UserFeed.php b/tests/modules/feeds_test_alter_source/src/EventSubscriber/UserFeed.php
index 5ba9be46..6c3b5e3c 100644
--- a/tests/modules/feeds_test_alter_source/src/EventSubscriber/UserFeed.php
+++ b/tests/modules/feeds_test_alter_source/src/EventSubscriber/UserFeed.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds_test_alter_source\EventSubscriber;
 
+use Drupal\feeds\Feeds\Item\ItemInterface;
 use Drupal\feeds\Event\FeedsEvents;
 use Drupal\feeds\Event\ParseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
@@ -31,7 +32,7 @@ class UserFeed implements EventSubscriberInterface {
       return;
     }
 
-    /** @var \Drupal\feeds\Feeds\Item\ItemInterface $item */
+    /** @var ItemInterface $item */
     foreach ($event->getParserResult() as $item) {
       // Convert roles value to multiple values.
       foreach (['role_ids', 'role_labels'] as $source_name) {
diff --git a/tests/modules/feeds_test_extra_sources/src/EventSubscriber/MyFeed.php b/tests/modules/feeds_test_extra_sources/src/EventSubscriber/MyFeed.php
index 4f4702d2..73f7b076 100644
--- a/tests/modules/feeds_test_extra_sources/src/EventSubscriber/MyFeed.php
+++ b/tests/modules/feeds_test_extra_sources/src/EventSubscriber/MyFeed.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds_test_extra_sources\EventSubscriber;
 
+use Drupal\feeds\Feeds\Item\ItemInterface;
 use Drupal\feeds\Event\FeedsEvents;
 use Drupal\feeds\Event\ParseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
@@ -31,7 +32,7 @@ class MyFeed implements EventSubscriberInterface {
       return;
     }
 
-    /** @var \Drupal\feeds\Feeds\Item\ItemInterface $item */
+    /** @var ItemInterface $item */
     foreach ($event->getParserResult() as $item) {
       $title = $item->get('title');
       $slogan = $item->get('site:slogan');
diff --git a/tests/modules/feeds_test_files/src/Controller/CsvController.php b/tests/modules/feeds_test_files/src/Controller/CsvController.php
index 1ac06032..3b80f076 100644
--- a/tests/modules/feeds_test_files/src/Controller/CsvController.php
+++ b/tests/modules/feeds_test_files/src/Controller/CsvController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds_test_files\Controller;
 
+use Drupal\Core\Extension\Exception\UnknownExtensionException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Extension\ModuleExtensionList;
 use Drupal\Core\State\StateInterface;
@@ -26,23 +27,23 @@ class CsvController extends ControllerBase {
   /**
    * The state handler service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The module extension list service.
    *
-   * @var Drupal\Core\Extension\ModuleExtensionList|null
+   * @var ModuleExtensionList|null
    */
   protected $extensionList;
 
   /**
    * Constructs a CsvController object.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state handler service.
-   * @param Drupal\Core\Extension\ModuleExtensionList $extensionList
+   * @param ModuleExtensionList $extensionList
    *   The module extension list service.
    */
   public function __construct(StateInterface $state, ModuleExtensionList $extensionList = NULL) {
@@ -78,7 +79,7 @@ class CsvController extends ControllerBase {
   /**
    * Outputs a CSV file pointing to files.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A HTTP response.
    */
   public function files() {
@@ -113,7 +114,7 @@ class CsvController extends ControllerBase {
    * - Ensure that the source *is* refetched on a second import when the
    *   source *did* change.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A HTTP response.
    */
   public function nodes() {
@@ -162,13 +163,13 @@ class CsvController extends ControllerBase {
    * @return string
    *   The Drupal-root relative path to the module directory.
    *
-   * @throws \Drupal\Core\Extension\Exception\UnknownExtensionException
+   * @throws UnknownExtensionException
    *   If the module does not exist.
    */
   protected function getModulePath(string $module_name): string {
     // @todo Remove drupal_get_path() when Drupal 9.2 is no longer supported.
     if ($this->extensionList == NULL) {
-      return drupal_get_path('module', $module_name);
+      return \Drupal::service('extension.list.module')->getPath($module_name);
     }
 
     return $this->extensionList->getPath($module_name);
diff --git a/tests/modules/feeds_test_multiple_cron_runs/src/EventSubscriber/FeedSubscriber.php b/tests/modules/feeds_test_multiple_cron_runs/src/EventSubscriber/FeedSubscriber.php
index 2e2b1258..c4515f2e 100644
--- a/tests/modules/feeds_test_multiple_cron_runs/src/EventSubscriber/FeedSubscriber.php
+++ b/tests/modules/feeds_test_multiple_cron_runs/src/EventSubscriber/FeedSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feeds_test_multiple_cron_runs\EventSubscriber;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\feeds\Event\FeedsEvents;
 use Drupal\feeds\Event\ProcessEvent;
@@ -15,14 +16,14 @@ class FeedSubscriber implements EventSubscriberInterface {
   /**
    * The settings of the 'Feeds test multiple cron runs' module.
    *
-   * @var Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Constructs a new FeedSubscriber object.
    *
-   * @param Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The configuration factory.
    */
   public function __construct(ConfigFactoryInterface $config) {
diff --git a/tests/src/Functional/Commands/FeedsDrushCommandsTest.php b/tests/src/Functional/Commands/FeedsDrushCommandsTest.php
index 04ad9a4a..14283c7d 100644
--- a/tests/src/Functional/Commands/FeedsDrushCommandsTest.php
+++ b/tests/src/Functional/Commands/FeedsDrushCommandsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\feeds\Functional\Commands;
 
+use Drupal\feeds\FeedTypeInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\feeds\Functional\FeedsBrowserTestBase;
 use Drush\TestTraits\DrushTestTrait;
@@ -19,14 +20,14 @@ class FeedsDrushCommandsTest extends FeedsBrowserTestBase {
   /**
    * The feed type to test with.
    *
-   * @var \Drupal\feeds\FeedTypeInterface
+   * @var FeedTypeInterface
    */
   protected $feedType;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->feedType = $this->createFeedType([
