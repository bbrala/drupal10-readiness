modules/contrib/picture_background_formatter/picture_background_formatter.module
modules/contrib/picture_background_formatter/src/Component/Render/CSSSnippet.php
modules/contrib/picture_background_formatter/src/Plugin/Field/FieldFormatter/PictureBackgroundFormatter.php
modules/contrib/picture_background_formatter/src/Plugin/Field/FieldFormatter/PictureBackgroundFormatterMedia.php

2 files with changes
====================

1) modules/contrib/picture_background_formatter/src/Plugin/Field/FieldFormatter/PictureBackgroundFormatterMedia.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\picture_background_formatter\Plugin\Field\FieldFormatter;

+use Drupal\media\MediaInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ @@
     // The parent entity, used for token replacement in the selector.
     $entity = $items->getEntity();

-    /** @var \Drupal\media\MediaInterface $media_item */
+    /** @var MediaInterface $media_item */
     foreach ($media as $delta => $media_item) {
       $type_configuration = method_exists($media_item, 'getSource') ? $media_item->getSource()->getConfiguration() : $media_item->getType()->getConfiguration();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/picture_background_formatter/src/Plugin/Field/FieldFormatter/PictureBackgroundFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\picture_background_formatter\Plugin\Field\FieldFormatter;

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Field\FieldItemInterface;
@@ @@
   /**
    * Build the inline css style based on a set of files and a selector.
    *
-   * @param \Drupal\Core\Entity\EntityInterface[] $files
+   * @param EntityInterface[] $files
    *   The array of referenced files to display, keyed by delta.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The parent entity the field belongs to. Used for token replacement in the
    *   selector.
    *
@@ @@
           }

           if ($mapping['image_mapping'] == "_original image_") {
-            $url = file_create_url($image->getFileUri());
+            $url = \Drupal::service('file_url_generator')->generateAbsoluteString($image->getFileUri());
           }
           else {
             $url = ImageStyle::load($mapping['image_mapping'])->buildUrl($image->getFileUri());
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

