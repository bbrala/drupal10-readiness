diff --git a/modules/entity_share_async/entity_share_async.module b/modules/entity_share_async/entity_share_async.module
index db21b6d..9382db3 100644
--- a/modules/entity_share_async/entity_share_async.module
+++ b/modules/entity_share_async/entity_share_async.module
@@ -6,6 +6,7 @@
  */
 
 declare(strict_types = 1);
+use Drupal\entity_share_async\Service\QueueHelperInterface;
 
 use Drupal\Core\Form\FormStateInterface;
 
@@ -52,7 +53,7 @@ function entity_share_async_form_entity_share_client_pull_form_alter(&$form, For
  *
  * @param array $form
  *   The form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function _entity_share_async_form_submit(array &$form, FormStateInterface $form_state) {
@@ -93,7 +94,7 @@ function _entity_share_async_form_submit(array &$form, FormStateInterface $form_
     $form_state->setRedirect('entity_share_client.admin_content_pull_form', [], $redirect_parameters);
 
     if (!empty($selected_entities)) {
-      /** @var \Drupal\entity_share_async\Service\QueueHelperInterface $queue_helper */
+      /** @var QueueHelperInterface $queue_helper */
       $queue_helper = \Drupal::service('entity_share_async.queue_helper');
       $queue_helper->enqueue($remote_id, $channel_id, $selected_entities);
     }
diff --git a/modules/entity_share_async/src/Plugin/QueueWorker/EntityShareAsyncWorker.php b/modules/entity_share_async/src/Plugin/QueueWorker/EntityShareAsyncWorker.php
index f623a6d..3f416f9 100644
--- a/modules/entity_share_async/src/Plugin/QueueWorker/EntityShareAsyncWorker.php
+++ b/modules/entity_share_async/src/Plugin/QueueWorker/EntityShareAsyncWorker.php
@@ -32,42 +32,42 @@ class EntityShareAsyncWorker extends QueueWorkerBase implements ContainerFactory
   /**
    * Drupal\Core\Logger\LoggerChannelFactoryInterface definition.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $loggerChannelFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
    * The remote manager.
    *
-   * @var \Drupal\entity_share_client\Service\RemoteManagerInterface
+   * @var RemoteManagerInterface
    */
   private $remoteManager;
 
   /**
    * The jsonapi helper service.
    *
-   * @var \Drupal\entity_share_client\Service\JsonapiHelperInterface
+   * @var JsonapiHelperInterface
    */
   private $jsonapiHelper;
 
   /**
    * The request service.
    *
-   * @var \Drupal\entity_share_client\Service\RequestServiceInterface
+   * @var RequestServiceInterface
    */
   private $request;
 
   /**
    * The state storage.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   private $stateStorage;
 
diff --git a/modules/entity_share_async/src/Service/QueueHelper.php b/modules/entity_share_async/src/Service/QueueHelper.php
index 5e9e833..39f0917 100644
--- a/modules/entity_share_async/src/Service/QueueHelper.php
+++ b/modules/entity_share_async/src/Service/QueueHelper.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\entity_share_async\Service;
 
+use Drupal\Core\Queue\QueueInterface;
 use Drupal\Core\Queue\QueueFactory;
 use Drupal\Core\State\StateInterface;
 
@@ -17,23 +18,23 @@ class QueueHelper implements QueueHelperInterface {
   /**
    * The queue factory service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * QueueHelper constructor.
    *
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory service.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(
@@ -48,7 +49,7 @@ class QueueHelper implements QueueHelperInterface {
    * {@inheritdoc}
    */
   public function enqueue($remote_id, $channel_id, array $uuids) {
-    /** @var \Drupal\Core\Queue\QueueInterface $queue */
+    /** @var QueueInterface $queue */
     $queue = $this->queueFactory->get(QueueHelperInterface::QUEUE_NAME);
 
     $async_states = $this->state->get(QueueHelperInterface::STATE_ID, []);
diff --git a/modules/entity_share_async/tests/src/Functional/EntityShareAsyncFunctionalTest.php b/modules/entity_share_async/tests/src/Functional/EntityShareAsyncFunctionalTest.php
index 5e349f6..175fb5c 100644
--- a/modules/entity_share_async/tests/src/Functional/EntityShareAsyncFunctionalTest.php
+++ b/modules/entity_share_async/tests/src/Functional/EntityShareAsyncFunctionalTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\entity_share_async\Functional;
 
+use Drupal\entity_share_async\Service\QueueHelperInterface;
 use Drupal\node\NodeInterface;
 use Drupal\Tests\entity_share_client\Functional\EntityShareClientFunctionalTestBase;
 
@@ -40,7 +41,7 @@ class EntityShareAsyncFunctionalTest extends EntityShareClientFunctionalTestBase
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->postSetupFixture();
   }
@@ -77,7 +78,7 @@ class EntityShareAsyncFunctionalTest extends EntityShareClientFunctionalTestBase
     $state_storage = $this->container->get('state');
     $channel_id = static::$entityTypeId . '_' . static::$entityBundleId . '_' . static::$entityLangcode;
 
-    /** @var \Drupal\entity_share_async\Service\QueueHelperInterface $queue_helper */
+    /** @var QueueHelperInterface $queue_helper */
     $queue_helper = $this->container->get('entity_share_async.queue_helper');
     $queue_helper->enqueue($this->remote->id(), $channel_id, ['es_test']);
 
