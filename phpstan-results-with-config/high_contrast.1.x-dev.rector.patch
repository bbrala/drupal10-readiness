diff --git a/high_contrast.info.yml b/high_contrast.info.yml
index 7b3f198..d5d7d41 100644
--- a/high_contrast.info.yml
+++ b/high_contrast.info.yml
@@ -2,7 +2,7 @@ name: High Contrast
 type: module
 description: 'Allows users to switch to a high contrast version of the active theme.'
 package: User interface
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: high_contrast.config_form
 dependencies:
   - drupal:file
diff --git a/src/EventSubscriber/ConfigEventSubscriber.php b/src/EventSubscriber/ConfigEventSubscriber.php
index aa1459e..8a14486 100644
--- a/src/EventSubscriber/ConfigEventSubscriber.php
+++ b/src/EventSubscriber/ConfigEventSubscriber.php
@@ -16,23 +16,23 @@ class ConfigEventSubscriber implements EventSubscriberInterface {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
 
   /**
    * Constructs a ConfigEventSubscriber  object.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(FileSystemInterface $file_system, ConfigFactoryInterface $config_factory) {
@@ -51,7 +51,7 @@ class ConfigEventSubscriber implements EventSubscriberInterface {
   /**
    * Regenerate the stylesheet.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The Event to process.
    */
   public function updateStylesheet(ConfigCrudEvent $event) {
diff --git a/src/Form/HighContrastConfigurationForm.php b/src/Form/HighContrastConfigurationForm.php
index ffb62d5..36915df 100644
--- a/src/Form/HighContrastConfigurationForm.php
+++ b/src/Form/HighContrastConfigurationForm.php
@@ -20,25 +20,25 @@ class HighContrastConfigurationForm extends ConfigFormBase {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs a HighContrastConfigurationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler instance to use.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, FileSystemInterface $file_system) {
@@ -208,7 +208,7 @@ class HighContrastConfigurationForm extends ConfigFormBase {
     // it in place of the default theme-provided file.
     if (!empty($form_state->getValue('logo_upload'))) {
       $source = $form_state->getValue('logo_upload')->getFileUri();
-      $destination = file_build_uri($this->fileSystem->basename($source));
+      $destination = \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . $this->fileSystem->basename($source)));
       $filename = $this->fileSystem->copy($source, $destination);
       $config->set('default_logo', 0);
       $config->set('logo_path', $filename);
diff --git a/src/HighContrastConfigOverride.php b/src/HighContrastConfigOverride.php
index 65c1e40..d0aca30 100644
--- a/src/HighContrastConfigOverride.php
+++ b/src/HighContrastConfigOverride.php
@@ -19,23 +19,23 @@ class HighContrastConfigOverride implements ConfigFactoryOverrideInterface {
   /**
    * Config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
 
   /**
    * The file system interface.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   private $fileSystem;
 
   /**
    * Construct a new HighContrastConfigOverride object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
@@ -105,7 +105,7 @@ class HighContrastConfigOverride implements ConfigFactoryOverrideInterface {
       // If the default logo is desired, scan the theme dir for a logo-hg file.
       // Not using dependency injection to prevent circular references.
       $theme = \Drupal::theme()->getActiveTheme()->getName();
-      $theme_path = drupal_get_path('theme', $theme);
+      $theme_path = \Drupal::service('extension.list.theme')->getPath($theme);
 
       $candidates = [];
       try {
diff --git a/src/HighContrastController.php b/src/HighContrastController.php
index 6d37d86..8b45bb2 100644
--- a/src/HighContrastController.php
+++ b/src/HighContrastController.php
@@ -31,7 +31,7 @@ class HighContrastController extends ControllerBase {
   /**
    * Enable high contrast.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   RedirectResponse object.
    */
   public function enable() {
@@ -42,7 +42,7 @@ class HighContrastController extends ControllerBase {
   /**
    * Disable high contrast.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   RedirectResponse object.
    */
   public function disable() {
@@ -53,7 +53,7 @@ class HighContrastController extends ControllerBase {
   /**
    * Perform the redirect to the set path.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   RedirectResponse object.
    */
   protected function goBack() {
diff --git a/tests/src/FunctionalJavascript/HighContrastStyleSheetTest.php b/tests/src/FunctionalJavascript/HighContrastStyleSheetTest.php
index 9b8910b..e40ce7a 100644
--- a/tests/src/FunctionalJavascript/HighContrastStyleSheetTest.php
+++ b/tests/src/FunctionalJavascript/HighContrastStyleSheetTest.php
@@ -35,7 +35,7 @@ class HighContrastStyleSheetTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Store the values for later comparison.
@@ -61,7 +61,7 @@ class HighContrastStyleSheetTest extends WebDriverTestBase {
     // Assert all defined colors are present in the file.
     $css_file = file_get_contents($file_path);
     foreach ($this->values as $definition => $color) {
-      $this->assertContains($color, $css_file, "Color $color has been applied for $definition.");
+      $this->assertStringContainsString($color, $css_file, "Color $color has been applied for $definition.");
     }
 
     // Generate some new values.
@@ -76,11 +76,11 @@ class HighContrastStyleSheetTest extends WebDriverTestBase {
     // Assert all previous colors are gone.
     $css_file = file_get_contents($file_path);
     foreach ($this->values as $definition => $color) {
-      $this->assertNotContains($color, $css_file, "Color $color has not been applied for $definition.");
+      $this->assertStringNotContainsString($color, $css_file, "Color $color has not been applied for $definition.");
     }
     // Assert all new colors are present.
     foreach ($new_values as $definition => $color) {
-      $this->assertContains($color, $css_file, "Color $color has been applied for $definition.");
+      $this->assertStringContainsString($color, $css_file, "Color $color has been applied for $definition.");
     }
   }
 
