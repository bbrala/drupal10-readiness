diff --git a/modules/watwat_browser/src/Controller/ArticleBrowserController.php b/modules/watwat_browser/src/Controller/ArticleBrowserController.php
index 3392dda..4bc6978 100644
--- a/modules/watwat_browser/src/Controller/ArticleBrowserController.php
+++ b/modules/watwat_browser/src/Controller/ArticleBrowserController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\watwat_browser\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormBuilderInterface;
@@ -20,50 +22,50 @@ class ArticleBrowserController extends ControllerBase {
   /**
    * Drupal\watwat\WatWatApiService.
    *
-   * @var \Drupal\watwat\WatWatApiService
+   * @var WatWatApiService
    */
   protected $watwatApiService;
 
   /**
    * Drupal\Core\Form\FormBuilderInterface.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * Symfony\Component\HttpFoundation\RequestStack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;
 
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The pager manager.
    *
-   * @var \Drupal\Core\Pager\PagerManagerInterface
+   * @var PagerManagerInterface
    */
   protected $pagerManager;
 
   /**
    * ArticleBrowserController constructor.
    *
-   * @param \Drupal\watwat\WatWatApiService $watwat_api_service
+   * @param WatWatApiService $watwat_api_service
    *   The Api service for collecting themes and articles.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The Form builder.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request stack.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager interface.
-   * @param \Drupal\Core\Pager\PagerManagerInterface $pager_manager
+   * @param PagerManagerInterface $pager_manager
    *   The pager manager interface.
    */
   public function __construct(WatWatApiService $watwat_api_service,
@@ -81,7 +83,7 @@ class ArticleBrowserController extends ControllerBase {
   /**
    * Creates an instance of the controller.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The ContainerInterface.
    *
    * @return ArticleBrowserController
@@ -199,8 +201,8 @@ class ArticleBrowserController extends ControllerBase {
    * @return object
    *   The taxonomy term.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getWatWatThemeTerm($term_id) {
     $watwat_theme = [];
diff --git a/modules/watwat_browser/src/Form/ApiBrowserForm.php b/modules/watwat_browser/src/Form/ApiBrowserForm.php
index 28966b1..a9388a4 100644
--- a/modules/watwat_browser/src/Form/ApiBrowserForm.php
+++ b/modules/watwat_browser/src/Form/ApiBrowserForm.php
@@ -21,32 +21,32 @@ class ApiBrowserForm extends FormBase {
   /**
    * Symfony\Component\HttpFoundation\RequestStack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;
 
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\migrate\Plugin\MigrationPluginManager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManager
+   * @var MigrationPluginManager
    */
   protected $migrationManager;
 
   /**
    * ApiBrowserForm constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The Request stack.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity type manager interface.
-   * @param \Drupal\migrate\Plugin\MigrationPluginManager $migration_manager
+   * @param MigrationPluginManager $migration_manager
    *   The Migration plugin manager.
    */
   public function __construct(RequestStack $request,
@@ -60,7 +60,7 @@ class ApiBrowserForm extends FormBase {
   /**
    * Creates an instance of the form.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The ContainerInterface.
    *
    * @return \Drupal\watwat_browser\Form\ApiBrowserForm
diff --git a/modules/watwat_browser/src/Form/ArticleMigrationForm.php b/modules/watwat_browser/src/Form/ArticleMigrationForm.php
index bed7012..54ce779 100644
--- a/modules/watwat_browser/src/Form/ArticleMigrationForm.php
+++ b/modules/watwat_browser/src/Form/ArticleMigrationForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\watwat_browser\Form;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Database;
@@ -29,41 +32,41 @@ class ArticleMigrationForm extends FormBase {
   /**
    * Drupal\Component\Datetime\TimeInterface.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Drupal\Core\Database\Connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Logger\LoggerChannelFactory definition.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;
 
   /**
    * ArticleMigrationForm constructor.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time interface.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager interface.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $loggerFactory
+   * @param LoggerChannelFactory $loggerFactory
    *   The logger channel factory.
    */
   public function __construct(TimeInterface $time,
@@ -79,7 +82,7 @@ class ArticleMigrationForm extends FormBase {
   /**
    * Creates an instance of the form.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The ContainerInterface.
    *
    * @return \Drupal\watwat_browser\Form\ArticleMigrationForm
@@ -257,9 +260,9 @@ class ArticleMigrationForm extends FormBase {
    * @param bool $status
    *   The required status for the article.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function setPublishedStatus($article_id, $status) {
     $node_manager = $this->entityTypeManager->getStorage('node');
diff --git a/src/EventSubscriber/WatwatMigrateEventSubscriber.php b/src/EventSubscriber/WatwatMigrateEventSubscriber.php
index 46da566..31fc160 100644
--- a/src/EventSubscriber/WatwatMigrateEventSubscriber.php
+++ b/src/EventSubscriber/WatwatMigrateEventSubscriber.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\watwat\EventSubscriber;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\migrate\Event\MigrateEvents;
 use Drupal\migrate\Event\MigrateImportEvent;
@@ -20,14 +24,14 @@ class WatwatMigrateEventSubscriber implements EventSubscriberInterface {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * MigrateEventSubscriber constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -46,12 +50,12 @@ class WatwatMigrateEventSubscriber implements EventSubscriberInterface {
   /**
    * Callback function for "MigrateEvents::PRE_IMPORT" event.
    *
-   * @param \Drupal\migrate\Event\MigrateImportEvent $event
+   * @param MigrateImportEvent $event
    *   The event.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function onMigratePreImport(MigrateImportEvent $event) {
     $migration = $event->getMigration();
@@ -100,7 +104,7 @@ class WatwatMigrateEventSubscriber implements EventSubscriberInterface {
       }
 
       $destination_ids = $id_map->currentDestination();
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       if (!$entity = $storage->load(reset($destination_ids))) {
         $id_map->next();
         continue;
diff --git a/src/WatWatApiService.php b/src/WatWatApiService.php
index 039d8fc..dcf002d 100644
--- a/src/WatWatApiService.php
+++ b/src/WatWatApiService.php
@@ -20,14 +20,14 @@ class WatWatApiService {
   /**
    * The GuzzleHttp\Client service.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * WatWatApiService constructor.
    *
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The http client service.
    */
   public function __construct(Client $http_client) {
