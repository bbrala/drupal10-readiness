diff --git a/advagg.drush.inc b/advagg.drush.inc
index 1bc8028..05104f3 100644
--- a/advagg.drush.inc
+++ b/advagg.drush.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\Config;
 /**
  * @file
  * Drush commands for Advanced CSS/JS Aggregation.
@@ -37,7 +38,7 @@ function advagg_drush_help($command) {
       return dt('Remove all generated files. Useful if you think some of the generated files got corrupted and thus need to be deleted.');
 
     case 'drush:advagg-force-new-aggregates':
-      /** @var \Drupal\Core\Config\Config $config */
+      /** @var Config $config */
       $config = \Drupal::service('config.factory')->get('advagg.settings');
       return dt('Force the creation of all new optimized files by incrementing a global counter. Current value of counter: %value. This is may be useful if a CDN has cached an something incorrectly as it will force new ones to be used even if nothing else has changed.', [
         '%value' => $config->get('global_counter'),
@@ -93,7 +94,7 @@ function advagg_drush_command() {
  * Callback function for drush advagg-disable.
  */
 function drush_advagg_disable() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::service('config.factory')->getEditable('advagg.settings');
   $config->set('enabled', 0)->save();
   \Drupal::logger(dt('All Advagg functionality is disabled.'), 'ok');
@@ -103,7 +104,7 @@ function drush_advagg_disable() {
  * Callback function for drush advagg-enable.
  */
 function drush_advagg_enable() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::service('config.factory')->getEditable('advagg.settings');
   $config->set('enabled', 1)->save();
   \Drupal::logger(dt('All Advagg functionality is enabled.'), 'ok');
@@ -117,7 +118,7 @@ function drush_advagg_force_new_aggregates() {
   drush_advagg_clear_all_files();
 
   // Increment counter.
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::service('config.factory')->getEditable('advagg.settings');
   $new_value = $config->get('global_counter') + 1;
   $config->set('global_counter', $new_value)->save();
diff --git a/advagg.install b/advagg.install
index 7e02706..f052309 100644
--- a/advagg.install
+++ b/advagg.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\Config;
 /**
  * @file
  * Handles Advanced Aggregation installation and upgrade tasks.
@@ -152,7 +153,7 @@ function advagg_update_8203() {
  * Update Configuration options for 8.x-3.x.
  */
 function advagg_update_8301() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::configFactory()->getEditable('advagg.settings');
   $config
     ->clear('serializer')
diff --git a/advagg_bundler/src/Asset/AdvaggCssCollectionGrouper.php b/advagg_bundler/src/Asset/AdvaggCssCollectionGrouper.php
index 3af2c92..edff2ac 100644
--- a/advagg_bundler/src/Asset/AdvaggCssCollectionGrouper.php
+++ b/advagg_bundler/src/Asset/AdvaggCssCollectionGrouper.php
@@ -14,7 +14,7 @@ class AdvaggCssCollectionGrouper extends CssCollectionGrouper implements AssetCo
   /**
    * Construct the grouper instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/advagg_bundler/src/Asset/AdvaggJsCollectionGrouper.php b/advagg_bundler/src/Asset/AdvaggJsCollectionGrouper.php
index 9e1c425..6b7a4d1 100644
--- a/advagg_bundler/src/Asset/AdvaggJsCollectionGrouper.php
+++ b/advagg_bundler/src/Asset/AdvaggJsCollectionGrouper.php
@@ -14,7 +14,7 @@ class AdvaggJsCollectionGrouper extends JsCollectionGrouper implements AssetColl
   /**
    * Construct the grouper instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/advagg_bundler/src/EventSubscriber/MinificationSubscriber.php b/advagg_bundler/src/EventSubscriber/MinificationSubscriber.php
index d9e70a2..4204700 100644
--- a/advagg_bundler/src/EventSubscriber/MinificationSubscriber.php
+++ b/advagg_bundler/src/EventSubscriber/MinificationSubscriber.php
@@ -14,14 +14,14 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;
 
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
    */
   public function __construct(SingleAssetOptimizerBase $minifier) {
@@ -31,7 +31,7 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The optimization event.
    */
   public function minify(AssetOptimizationEvent $asset) {
diff --git a/advagg_bundler/src/Form/SettingsForm.php b/advagg_bundler/src/Form/SettingsForm.php
index 7ab780d..49606c6 100644
--- a/advagg_bundler/src/Form/SettingsForm.php
+++ b/advagg_bundler/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg_bundler\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ -46,7 +47,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_bundler.settings');
     $form['active'] = [
       '#type' => 'checkbox',
@@ -143,7 +144,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_bundler.settings')
       ->set('active', $form_state->getValue('active'))
       ->set('css.max', $form_state->getValue('max_css'))
diff --git a/advagg_bundler/tests/src/Kernel/Form/SettingsFormTest.php b/advagg_bundler/tests/src/Kernel/Form/SettingsFormTest.php
index 6ab43f1..c133cbf 100644
--- a/advagg_bundler/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/advagg_bundler/tests/src/Kernel/Form/SettingsFormTest.php
@@ -16,7 +16,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The Bundler settings form object under test.
    *
-   * @var \Drupal\advagg_bundler\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
@@ -36,7 +36,7 @@ class SettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_cdn/advagg_cdn.install b/advagg_cdn/advagg_cdn.install
index 2e31b87..d45f6db 100644
--- a/advagg_cdn/advagg_cdn.install
+++ b/advagg_cdn/advagg_cdn.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\Config;
 /**
  * @file
  * Handles Advanced Aggregation installation and upgrade tasks.
@@ -49,7 +50,7 @@ function advagg_cdn_minify_install() {
  * Update selected jQuery/jQuery UI versions to latest used in Drupal core.
  */
 function advagg_cdn_update_8300() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::configFactory()->getEditable('advagg_cdn.settings');
   $config
     ->set('jquery_version', '3.2.1')
diff --git a/advagg_cdn/tests/src/Kernel/Form/SettingsFormTest.php b/advagg_cdn/tests/src/Kernel/Form/SettingsFormTest.php
index 8c1abeb..1f3a2b2 100644
--- a/advagg_cdn/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/advagg_cdn/tests/src/Kernel/Form/SettingsFormTest.php
@@ -16,7 +16,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The CDN settings form object under test.
    *
-   * @var \Drupal\advagg_cdn\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
@@ -36,7 +36,7 @@ class SettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_css_minify/src/Asset/CssMinifier.php b/advagg_css_minify/src/Asset/CssMinifier.php
index f4cb7d3..0e0f8fc 100644
--- a/advagg_css_minify/src/Asset/CssMinifier.php
+++ b/advagg_css_minify/src/Asset/CssMinifier.php
@@ -16,9 +16,9 @@ class CssMinifier extends SingleAssetOptimizerBase {
   /**
    * Construct the optimizer instance.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
diff --git a/advagg_css_minify/src/EventSubscriber/MinificationSubscriber.php b/advagg_css_minify/src/EventSubscriber/MinificationSubscriber.php
index ac1733f..f12c032 100644
--- a/advagg_css_minify/src/EventSubscriber/MinificationSubscriber.php
+++ b/advagg_css_minify/src/EventSubscriber/MinificationSubscriber.php
@@ -14,14 +14,14 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;
 
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
    */
   public function __construct(SingleAssetOptimizerBase $minifier) {
@@ -31,7 +31,7 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function minify(AssetOptimizationEvent $asset) {
diff --git a/advagg_css_minify/src/Form/SettingsForm.php b/advagg_css_minify/src/Form/SettingsForm.php
index d7c88eb..4b7a82b 100644
--- a/advagg_css_minify/src/Form/SettingsForm.php
+++ b/advagg_css_minify/src/Form/SettingsForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\advagg_css_minify\Form;
 
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ -19,7 +21,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
@@ -54,7 +56,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_css_minify.settings');
     $form = [];
     if ($this->config('advagg.settings')->get('cache_level') === 0) {
@@ -93,7 +95,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_css_minify.settings');
 
     // Clear Caches.
diff --git a/advagg_css_minify/tests/src/Kernel/Asset/CssMinifierUnitTest.php b/advagg_css_minify/tests/src/Kernel/Asset/CssMinifierUnitTest.php
index 2518ebe..ae1cb22 100644
--- a/advagg_css_minify/tests/src/Kernel/Asset/CssMinifierUnitTest.php
+++ b/advagg_css_minify/tests/src/Kernel/Asset/CssMinifierUnitTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\advagg_css_minify\Kernel\Asset;
 
+use Drupal\advagg_css_minify\Asset\CssMinifier;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -22,14 +23,14 @@ class CssMinifierUnitTest extends KernelTestBase {
   /**
    * The Minifier.
    *
-   * @var \Drupal\advagg_css_minify\Asset\CssMinifier
+   * @var CssMinifier
    */
   protected $optimizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('advagg_css_minify');
     $this->optimizer = \Drupal::service('advagg.css_minifier');
diff --git a/advagg_css_minify/tests/src/Kernel/Form/SettingsFormTest.php b/advagg_css_minify/tests/src/Kernel/Form/SettingsFormTest.php
index e3afddf..25b3398 100644
--- a/advagg_css_minify/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/advagg_css_minify/tests/src/Kernel/Form/SettingsFormTest.php
@@ -16,7 +16,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The CSS Minify settings form object under test.
    *
-   * @var \Drupal\advagg_css_minify\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
@@ -36,7 +36,7 @@ class SettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_ext_minify/src/Asset/Minifier.php b/advagg_ext_minify/src/Asset/Minifier.php
index 155068f..5a40523 100644
--- a/advagg_ext_minify/src/Asset/Minifier.php
+++ b/advagg_ext_minify/src/Asset/Minifier.php
@@ -36,7 +36,7 @@ class Minifier extends SingleAssetOptimizerBase {
   /**
    * File System Service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $file;
 
@@ -45,11 +45,11 @@ class Minifier extends SingleAssetOptimizerBase {
    *
    * @param string $root
    *   Gets the app root.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\File\FileSystemInterface $file
+   * @param FileSystemInterface $file
    *   The filesystem service.
    */
   public function __construct(string $root, LoggerInterface $logger, ConfigFactoryInterface $config_factory, FileSystemInterface $file) {
diff --git a/advagg_ext_minify/src/EventSubscriber/MinificationSubscriber.php b/advagg_ext_minify/src/EventSubscriber/MinificationSubscriber.php
index c8a1cca..724b4e8 100644
--- a/advagg_ext_minify/src/EventSubscriber/MinificationSubscriber.php
+++ b/advagg_ext_minify/src/EventSubscriber/MinificationSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg_ext_minify\EventSubscriber;
 
+use Drupal\Core\Config\Config;
 use Drupal\advagg\Asset\AssetOptimizationEvent;
 use Drupal\advagg\Asset\SingleAssetOptimizerBase;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -15,23 +16,23 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;
 
   /**
    * The minifier configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(SingleAssetOptimizerBase $minifier, ConfigFactoryInterface $config_factory) {
@@ -42,7 +43,7 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function minifyCss(AssetOptimizationEvent $asset) {
@@ -57,7 +58,7 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function minifyJs(AssetOptimizationEvent $asset) {
diff --git a/advagg_ext_minify/tests/src/Kernel/Form/SettingsFormTest.php b/advagg_ext_minify/tests/src/Kernel/Form/SettingsFormTest.php
index 4385e39..4f8244c 100644
--- a/advagg_ext_minify/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/advagg_ext_minify/tests/src/Kernel/Form/SettingsFormTest.php
@@ -16,7 +16,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The External Minification settings form object under test.
    *
-   * @var \Drupal\advagg_ext_minify\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
@@ -36,7 +36,7 @@ class SettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_js_minify/src/Asset/JsMinifier.php b/advagg_js_minify/src/Asset/JsMinifier.php
index 70e4d56..e7f5a12 100644
--- a/advagg_js_minify/src/Asset/JsMinifier.php
+++ b/advagg_js_minify/src/Asset/JsMinifier.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\advagg_js_minify\Asset;
 
+use JShrink\Minifier;
+use Patchwork\JSqueeze;
 use Drupal\Component\Utility\Unicode;
 use Drupal\advagg\Asset\SingleAssetOptimizerBase;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -18,9 +20,9 @@ class JsMinifier extends SingleAssetOptimizerBase {
   /**
    * Construct the optimizer instance.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
@@ -185,7 +187,7 @@ class JsMinifier extends SingleAssetOptimizerBase {
 
     // Only include jsminplus.inc if the JSMinPlus class doesn't exist.
     if (!class_exists('\JSMinPlus')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jsminplus.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jsminplus.inc';
       $nesting_level = ini_get('xdebug.max_nesting_level');
       if (!empty($nesting_level) && $nesting_level < 200) {
         ini_set('xdebug.max_nesting_level', 200);
@@ -219,7 +221,7 @@ class JsMinifier extends SingleAssetOptimizerBase {
   public function minifyJspacker(&$contents) {
     // Use Packer on the contents of the aggregated file.
     if (!class_exists('\JavaScriptPacker')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jspacker.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jspacker.inc';
     }
 
     // Add semicolons to the end of lines if missing.
@@ -241,7 +243,7 @@ class JsMinifier extends SingleAssetOptimizerBase {
 
     // Only include jshrink.inc if the JShrink\Minifier class doesn't exist.
     if (!class_exists('\JShrink\Minifier')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jshrink.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jshrink.inc';
       $nesting_level = ini_get('xdebug.max_nesting_level');
       if (!empty($nesting_level) && $nesting_level < 200) {
         ini_set('xdebug.max_nesting_level', 200);
@@ -251,7 +253,7 @@ class JsMinifier extends SingleAssetOptimizerBase {
     try {
       // JShrink the contents of the aggregated file.
       // @codingStandardsIgnoreLine
-      $contents = \JShrink\Minifier::minify($contents, ['flaggedComments' => FALSE]);
+      $contents = Minifier::minify($contents, ['flaggedComments' => FALSE]);
 
       // Capture any output from JShrink.
       $error = trim(ob_get_contents());
@@ -278,7 +280,7 @@ class JsMinifier extends SingleAssetOptimizerBase {
 
     // Only include jshrink.inc if the Patchwork\JSqueeze class doesn't exist.
     if (!class_exists('\Patchwork\JSqueeze')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jsqueeze.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jsqueeze.inc';
       $nesting_level = ini_get('xdebug.max_nesting_level');
       if (!empty($nesting_level) && $nesting_level < 200) {
         ini_set('xdebug.max_nesting_level', 200);
@@ -288,7 +290,7 @@ class JsMinifier extends SingleAssetOptimizerBase {
     try {
       // Minify the contents of the aggregated file.
       // @codingStandardsIgnoreLine
-      $jz = new \Patchwork\JSqueeze();
+      $jz = new JSqueeze();
       $contents = $jz->squeeze(
         $contents,
         TRUE,
diff --git a/advagg_js_minify/src/EventSubscriber/MinificationSubscriber.php b/advagg_js_minify/src/EventSubscriber/MinificationSubscriber.php
index 2b4423e..4655b09 100644
--- a/advagg_js_minify/src/EventSubscriber/MinificationSubscriber.php
+++ b/advagg_js_minify/src/EventSubscriber/MinificationSubscriber.php
@@ -14,14 +14,14 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;
 
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
    */
   public function __construct(SingleAssetOptimizerBase $minifier) {
@@ -31,7 +31,7 @@ class MinificationSubscriber implements EventSubscriberInterface {
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The optimization event.
    */
   public function minify(AssetOptimizationEvent $asset) {
diff --git a/advagg_js_minify/src/Form/SettingsForm.php b/advagg_js_minify/src/Form/SettingsForm.php
index bbb5e96..6f9a342 100644
--- a/advagg_js_minify/src/Form/SettingsForm.php
+++ b/advagg_js_minify/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg_js_minify\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ -47,7 +48,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_js_minify.settings');
     $form = [];
     if ($this->config('advagg.settings')->get('cache_level') === 0) {
@@ -100,7 +101,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_js_minify.settings');
 
     // Clear Caches.
diff --git a/advagg_js_minify/tests/src/Kernel/Asset/JsMinifierUnitTest.php b/advagg_js_minify/tests/src/Kernel/Asset/JsMinifierUnitTest.php
index 7162631..80fc1e3 100644
--- a/advagg_js_minify/tests/src/Kernel/Asset/JsMinifierUnitTest.php
+++ b/advagg_js_minify/tests/src/Kernel/Asset/JsMinifierUnitTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\advagg_js_minify\Kernel\Asset;
 
+use Drupal\advagg_js_minify\Asset\JsMinifier;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -22,14 +23,14 @@ class JsMinifierUnitTest extends KernelTestBase {
   /**
    * The Minifier.
    *
-   * @var \Drupal\advagg_js_minify\Asset\JsMinifier
+   * @var JsMinifier
    */
   protected $optimizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('advagg_js_minify');
     $this->optimizer = \Drupal::service('advagg.js_minifier');
diff --git a/advagg_js_minify/tests/src/Kernel/Form/SettingsFormTest.php b/advagg_js_minify/tests/src/Kernel/Form/SettingsFormTest.php
index db64fed..5eeeeb8 100644
--- a/advagg_js_minify/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/advagg_js_minify/tests/src/Kernel/Form/SettingsFormTest.php
@@ -16,7 +16,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The JS Minification settings form object under test.
    *
-   * @var \Drupal\advagg_js_minify\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
@@ -36,7 +36,7 @@ class SettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_mod/advagg_mod.module b/advagg_mod/advagg_mod.module
index 78ffeef..d2016d0 100644
--- a/advagg_mod/advagg_mod.module
+++ b/advagg_mod/advagg_mod.module
@@ -16,7 +16,7 @@ function advagg_mod_js_alter(&$js) {
   }
   $config = \Drupal::config('advagg_mod.settings');
   // Use the current file system path for advagg_mod.
-  $module_path = drupal_get_path('module', 'advagg_mod');
+  $module_path = \Drupal::service('extension.list.module')->getPath('advagg_mod');
   if (isset($js[$module_path . '/js/loadCSS.js'])) {
     if ($config->get('css_defer_js_code') === 4) {
       $js[$module_path . '/js/loadCSS.js']['type'] = 'external';
diff --git a/advagg_mod/src/Asset/DeferCss.php b/advagg_mod/src/Asset/DeferCss.php
index 592ee8b..12fb94f 100644
--- a/advagg_mod/src/Asset/DeferCss.php
+++ b/advagg_mod/src/Asset/DeferCss.php
@@ -34,7 +34,7 @@ class DeferCss {
   /**
    * DeferCss constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -64,7 +64,7 @@ class DeferCss {
 
     // Put JS inline if configured.
     if ($this->deferMethod === 0) {
-      $path = drupal_get_path('module', 'advagg_mod') . '/js/loadCSS.js';
+      $path = \Drupal::service('extension.list.module')->getPath('advagg_mod') . '/js/loadCSS.js';
       if (!strpos($content, $path)) {
         $path = Crypt::hashBase64($path . $this->counter);
       }
diff --git a/advagg_mod/src/Asset/DeferJs.php b/advagg_mod/src/Asset/DeferJs.php
index 0010083..04e3a8d 100644
--- a/advagg_mod/src/Asset/DeferJs.php
+++ b/advagg_mod/src/Asset/DeferJs.php
@@ -28,7 +28,7 @@ class DeferJs {
   /**
    * The Drupal module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -42,9 +42,9 @@ class DeferJs {
   /**
    * DeferCss constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The Drupal module handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler) {
@@ -55,7 +55,7 @@ class DeferJs {
 
     // Admin Toolbar 8x fails when deferred.
     if ($this->moduleHandler->moduleExists('admin_toolbar')) {
-      $this->skipList[] = Crypt::hashBase64(drupal_get_path('module', 'admin_toolbar') . '/js/admin_toolbar.js' . $this->counter);
+      $this->skipList[] = Crypt::hashBase64(\Drupal::service('extension.list.module')->getPath('admin_toolbar') . '/js/admin_toolbar.js' . $this->counter);
     }
   }
 
diff --git a/advagg_mod/src/Asset/TranslateCss.php b/advagg_mod/src/Asset/TranslateCss.php
index f2271ff..ed6652c 100644
--- a/advagg_mod/src/Asset/TranslateCss.php
+++ b/advagg_mod/src/Asset/TranslateCss.php
@@ -17,9 +17,9 @@ class TranslateCss extends SingleAssetOptimizerBase {
   /**
    * Construct the optimizer instance.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
diff --git a/advagg_mod/src/EventSubscriber/InitSubscriber.php b/advagg_mod/src/EventSubscriber/InitSubscriber.php
index 5056df1..d457434 100644
--- a/advagg_mod/src/EventSubscriber/InitSubscriber.php
+++ b/advagg_mod/src/EventSubscriber/InitSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\advagg_mod\EventSubscriber;
 
+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\advagg\Asset\AssetOptimizationEvent;
 use Drupal\advagg_mod\Asset\AsyncJs;
 use Drupal\advagg_mod\Asset\DeferCss;
@@ -11,7 +13,6 @@ use Drupal\advagg_mod\Asset\TranslateCss;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Render\HtmlResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
@@ -23,75 +24,75 @@ class InitSubscriber implements EventSubscriberInterface {
   /**
    * A config object for the advagg_mod configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * A config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $advaggConfig;
 
   /**
    * The CSS translator service.
    *
-   * @var \Drupal\advagg_mod\Asset\TranslateCss
+   * @var TranslateCss
    */
   protected $translator;
 
   /**
    * The CSS defer service.
    *
-   * @var \Drupal\advagg_mod\Asset\DeferCss
+   * @var DeferCss
    */
   protected $cssDeferer;
 
   /**
    * The JS defer service.
    *
-   * @var \Drupal\advagg_mod\Asset\DeferJs
+   * @var DeferJs
    */
   protected $jsDeferer;
 
   /**
    * The JS asyncer service.
    *
-   * @var \Drupal\advagg_mod\Asset\AsyncJs
+   * @var AsyncJs
    */
   protected $jsAsyncer;
 
   /**
    * The Console.log remover.
    *
-   * @var \Drupal\advagg_mod\Asset\RemoveConsoleLog
+   * @var RemoveConsoleLog
    */
   protected $consoleLogRemover;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs the Subscriber object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\advagg_mod\Asset\TranslateCss $translator
+   * @param TranslateCss $translator
    *   The translator service.
-   * @param \Drupal\advagg_mod\Asset\DeferCss $deferer
+   * @param DeferCss $deferer
    *   The CSS deferer.
    * @param \Drupal\Advagg_mod\Asset\AsyncJs $js_asyncer
    *   The JS asyncer.
-   * @param \Drupal\advagg_mod\Asset\DeferJs $js_deferer
+   * @param DeferJs $js_deferer
    *   The JS deferer.
    * @param \Drupal\Advagg_mod\Asset\RemoveConsoleLog $js_console_log
    *   The class to remove console.log() calls.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(ConfigFactoryInterface $config_factory, TranslateCss $translator, DeferCss $deferer, AsyncJs $js_asyncer, DeferJs $js_deferer, RemoveConsoleLog $js_console_log, FileSystemInterface $file_system) {
@@ -160,7 +161,7 @@ class InitSubscriber implements EventSubscriberInterface {
   /**
    * Pass the CSS to the translator.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $assetOptimizationEvent
+   * @param AssetOptimizationEvent $assetOptimizationEvent
    *   The CSS optimization event.
    */
   public function translateCss(AssetOptimizationEvent $assetOptimizationEvent) {
@@ -176,7 +177,7 @@ class InitSubscriber implements EventSubscriberInterface {
   /**
    * Pass the JS to the modifier if enabled to remove console logging.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $assetOptimizationEvent
+   * @param AssetOptimizationEvent $assetOptimizationEvent
    *   The JS optimization event.
    */
   public function removeConsoleLog(AssetOptimizationEvent $assetOptimizationEvent) {
@@ -192,10 +193,10 @@ class InitSubscriber implements EventSubscriberInterface {
   /**
    * Apply CSS defer actions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function deferCss(FilterResponseEvent $response) {
+  public function deferCss(ResponseEvent $response) {
     // Skip if not enabled.
     if (!advagg_mod_css_defer_active()) {
       return;
@@ -214,10 +215,10 @@ class InitSubscriber implements EventSubscriberInterface {
   /**
    * Apply defer JS changes.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function deferJs(FilterResponseEvent $response) {
+  public function deferJs(ResponseEvent $response) {
     // Skip if not enabled.
     if (!$this->config->get('js_defer')) {
       return;
@@ -237,10 +238,10 @@ class InitSubscriber implements EventSubscriberInterface {
   /**
    * Apply CSS defer actions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function asyncJs(FilterResponseEvent $response) {
+  public function asyncJs(ResponseEvent $response) {
     // Skip if not enabled.
     if (!$this->config->get('js_async') || $this->config->get('js_defer')) {
       return;
diff --git a/advagg_mod/src/Form/SettingsForm.php b/advagg_mod/src/Form/SettingsForm.php
index 15f4721..61f5e94 100644
--- a/advagg_mod/src/Form/SettingsForm.php
+++ b/advagg_mod/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg_mod\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ -246,7 +247,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_mod.settings');
     $config
       ->set('css_adjust_sort_browsers', $form_state->getValue('css_adjust_sort_browsers'))
diff --git a/advagg_mod/tests/src/Kernel/Form/SettingsFormTest.php b/advagg_mod/tests/src/Kernel/Form/SettingsFormTest.php
index a7cd64c..8694beb 100644
--- a/advagg_mod/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/advagg_mod/tests/src/Kernel/Form/SettingsFormTest.php
@@ -16,7 +16,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The Modifier Minification settings form object under test.
    *
-   * @var \Drupal\advagg_mod\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
@@ -36,7 +36,7 @@ class SettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_old_ie_compatibility/src/Asset/AdvaggCssCollectionGrouper.php b/advagg_old_ie_compatibility/src/Asset/AdvaggCssCollectionGrouper.php
index f99f5f5..188ab3e 100755
--- a/advagg_old_ie_compatibility/src/Asset/AdvaggCssCollectionGrouper.php
+++ b/advagg_old_ie_compatibility/src/Asset/AdvaggCssCollectionGrouper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg_old_ie_compatibility\Asset;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Asset\AssetCollectionGrouperInterface;
 use Drupal\Core\Asset\CssCollectionGrouper;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -14,14 +15,14 @@ class AdvaggCssCollectionGrouper extends CssCollectionGrouper implements AssetCo
   /**
    * A config object for optimizer.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/advagg_old_ie_compatibility/src/EventSubscriber/CssSubscriber.php b/advagg_old_ie_compatibility/src/EventSubscriber/CssSubscriber.php
index 6603131..ac1589b 100644
--- a/advagg_old_ie_compatibility/src/EventSubscriber/CssSubscriber.php
+++ b/advagg_old_ie_compatibility/src/EventSubscriber/CssSubscriber.php
@@ -18,7 +18,7 @@ class CssSubscriber implements EventSubscriberInterface {
    * this is acceptable since that reduces performance hit and an exact number
    * is unimportant.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function scan(AssetOptimizationEvent $asset) {
diff --git a/advagg_old_ie_compatibility/src/Form/SettingsForm.php b/advagg_old_ie_compatibility/src/Form/SettingsForm.php
index 4764406..5f70440 100644
--- a/advagg_old_ie_compatibility/src/Form/SettingsForm.php
+++ b/advagg_old_ie_compatibility/src/Form/SettingsForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\advagg_old_ie_compatibility\Form;
 
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ -18,21 +22,21 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The Advagg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The core language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -95,7 +99,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_old_ie_compatibility.settings');
     $config
       ->set('active', $form_state->getValue('active'))
diff --git a/advagg_old_ie_compatibility/tests/src/Kernel/Form/SettingsFormTest.php b/advagg_old_ie_compatibility/tests/src/Kernel/Form/SettingsFormTest.php
index 60442de..236528d 100644
--- a/advagg_old_ie_compatibility/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/advagg_old_ie_compatibility/tests/src/Kernel/Form/SettingsFormTest.php
@@ -16,7 +16,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The Modifier Minification settings form object under test.
    *
-   * @var \Drupal\advagg_old_ie_compatibility\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
@@ -36,7 +36,7 @@ class SettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_validator/src/Form/BaseValidatorForm.php b/advagg_validator/src/Form/BaseValidatorForm.php
index fff2808..9727302 100644
--- a/advagg_validator/src/Form/BaseValidatorForm.php
+++ b/advagg_validator/src/Form/BaseValidatorForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg_validator\Form;
 
+use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\advagg\Form\AdvaggFormBase;
 use Drupal\Component\Render\HtmlEscapedText;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,7 +15,7 @@ abstract class BaseValidatorForm extends AdvaggFormBase {
   /**
    * The StreamWrapper manage.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
diff --git a/advagg_validator/src/Form/CssW3Form.php b/advagg_validator/src/Form/CssW3Form.php
index 4bd45fc..9bf5168 100644
--- a/advagg_validator/src/Form/CssW3Form.php
+++ b/advagg_validator/src/Form/CssW3Form.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\advagg_validator\Form;
 
+use GuzzleHttp\Client;
+use Drupal\Core\Render\RendererInterface;
 use DOMDocument;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,14 +20,14 @@ class CssW3Form extends BaseValidatorForm {
   /**
    * The Guzzle HTTP Client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * The Drupal renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -94,7 +96,7 @@ class CssW3Form extends BaseValidatorForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function ajaxCheck(array &$form, FormStateInterface $form_state) {
diff --git a/advagg_validator/tests/src/Kernel/Form/CssLintFormTest.php b/advagg_validator/tests/src/Kernel/Form/CssLintFormTest.php
index aee839f..d55b279 100644
--- a/advagg_validator/tests/src/Kernel/Form/CssLintFormTest.php
+++ b/advagg_validator/tests/src/Kernel/Form/CssLintFormTest.php
@@ -16,7 +16,7 @@ class CssLintFormTest extends KernelTestBase {
   /**
    * The Modifier Minification settings form object under test.
    *
-   * @var \Drupal\advagg_validator\Form\CssLintForm
+   * @var CssLintForm
    */
   protected $cssLintForm;
 
@@ -32,7 +32,7 @@ class CssLintFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_validator/tests/src/Kernel/Form/CssW3FormTest.php b/advagg_validator/tests/src/Kernel/Form/CssW3FormTest.php
index 4fe7ad2..ba05060 100644
--- a/advagg_validator/tests/src/Kernel/Form/CssW3FormTest.php
+++ b/advagg_validator/tests/src/Kernel/Form/CssW3FormTest.php
@@ -16,7 +16,7 @@ class CssW3FormTest extends KernelTestBase {
   /**
    * The validator css W3 settings form object under test.
    *
-   * @var \Drupal\advagg_validator\Form\CssW3Form
+   * @var CssW3Form
    */
   protected $cssW3Form;
 
@@ -32,7 +32,7 @@ class CssW3FormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/advagg_validator/tests/src/Kernel/Form/JsHintFormTest.php b/advagg_validator/tests/src/Kernel/Form/JsHintFormTest.php
index 402e67d..cdeb1ab 100644
--- a/advagg_validator/tests/src/Kernel/Form/JsHintFormTest.php
+++ b/advagg_validator/tests/src/Kernel/Form/JsHintFormTest.php
@@ -16,7 +16,7 @@ class JsHintFormTest extends KernelTestBase {
   /**
    * The validator JsHint settings form object under test.
    *
-   * @var \Drupal\advagg_validator\Form\JsHintForm
+   * @var JsHintForm
    */
   protected $jsHintForm;
 
@@ -32,7 +32,7 @@ class JsHintFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/src/AdvaggSettersTrait.php b/src/AdvaggSettersTrait.php
index fd88419..a3852d1 100644
--- a/src/AdvaggSettersTrait.php
+++ b/src/AdvaggSettersTrait.php
@@ -24,35 +24,35 @@ trait AdvaggSettersTrait {
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The CSS asset collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected $cssCollectionOptimizer;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The File System service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Set File System service.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The File System service.
    *
    * @return $this
@@ -65,70 +65,70 @@ trait AdvaggSettersTrait {
   /**
    * The JavaScript asset collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected $jsCollectionOptimizer;
 
   /**
    * The core language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The Guzzle HTTP Client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * The private key service.
    *
-   * @var \Drupal\Core\PrivateKey
+   * @var PrivateKey
    */
   protected $privateKey;
 
   /**
    * The Drupal renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The theme registry service.
    *
-   * @var \Drupal\Core\Theme\Registry
+   * @var Registry
    */
   protected $themeRegistry;
 
   /**
    * Obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The set cache backend.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   The AdvAgg cache.
    *
    * @return $this
@@ -142,7 +142,7 @@ trait AdvaggSettersTrait {
   /**
    * Set CSS asset collection optimizer service.
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $cssCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $cssCollectionOptimizer
    *   The CSS asset collection optimizer service.
    *
    * @return $this
@@ -155,7 +155,7 @@ trait AdvaggSettersTrait {
   /**
    * Set date formatter service.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter service.
    *
    * @return $this
@@ -168,7 +168,7 @@ trait AdvaggSettersTrait {
   /**
    * Set http client.
    *
-   * @param \GuzzleHttp\ClientInterface $httpClient
+   * @param ClientInterface $httpClient
    *   The renderer.
    *
    * @return $this
@@ -181,7 +181,7 @@ trait AdvaggSettersTrait {
   /**
    * Set JavaScript asset collection optimizer service.
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $jsCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $jsCollectionOptimizer
    *   The JavaScript asset collection optimizer service.
    *
    * @return $this
@@ -194,7 +194,7 @@ trait AdvaggSettersTrait {
   /**
    * Set language manager service.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   The core language manager service.
    *
    * @return $this
@@ -207,7 +207,7 @@ trait AdvaggSettersTrait {
   /**
    * Set module handler.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler service.
    *
    * @return $this
@@ -220,7 +220,7 @@ trait AdvaggSettersTrait {
   /**
    * Set private key service.
    *
-   * @param \Drupal\Core\PrivateKey $privateKey
+   * @param PrivateKey $privateKey
    *   The private key service.
    *
    * @return $this
@@ -233,7 +233,7 @@ trait AdvaggSettersTrait {
   /**
    * Set renderer.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    *
    * @return $this
@@ -246,7 +246,7 @@ trait AdvaggSettersTrait {
   /**
    * Set state service.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    *
    * @return $this
@@ -259,7 +259,7 @@ trait AdvaggSettersTrait {
   /**
    * The theme registry service.
    *
-   * @param \Drupal\Core\Theme\Registry $themeRegistry
+   * @param Registry $themeRegistry
    *   The theme registry.
    *
    * @return $this
@@ -272,7 +272,7 @@ trait AdvaggSettersTrait {
   /**
    * Obtaining system time.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The system time.
    *
    * @return $this
diff --git a/src/Asset/AssetOptimizationEvent.php b/src/Asset/AssetOptimizationEvent.php
index e8c4b72..4b74914 100644
--- a/src/Asset/AssetOptimizationEvent.php
+++ b/src/Asset/AssetOptimizationEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\advagg\Asset;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * @defgroup advagg_optimization_event Asset Optimization Event
diff --git a/src/Asset/AssetOptimizer.php b/src/Asset/AssetOptimizer.php
index b080e0c..db7b4ad 100644
--- a/src/Asset/AssetOptimizer.php
+++ b/src/Asset/AssetOptimizer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg\Asset;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -45,21 +46,21 @@ abstract class AssetOptimizer {
   /**
    * A config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Event Dispatcher service.
    *
-   * @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher
+   * @var ContainerAwareEventDispatcher
    */
   protected $eventDispatcher;
 
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
@@ -80,7 +81,7 @@ abstract class AssetOptimizer {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -115,11 +116,11 @@ abstract class AssetOptimizer {
   /**
    * Constructs the Optimizer object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher $event_dispatcher
+   * @param ContainerAwareEventDispatcher $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The AdvAgg cache.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ContainerAwareEventDispatcher $event_dispatcher, CacheBackendInterface $cache) {
@@ -482,7 +483,7 @@ abstract class AssetOptimizer {
     if (!$regenerate && file_exists($file)) {
       return;
     }
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = \Drupal::config('advagg.settings');
     if ($extension === 'js') {
       $type = 'application/javascript';
diff --git a/src/Asset/CssOptimizer.php b/src/Asset/CssOptimizer.php
index a90177a..60defdd 100644
--- a/src/Asset/CssOptimizer.php
+++ b/src/Asset/CssOptimizer.php
@@ -88,7 +88,7 @@ class CssOptimizer extends AssetOptimizer {
       $asset['media'] = 'all';
     }
     $asset_event = new AssetOptimizationEvent($contents, $asset, $data);
-    $this->eventDispatcher->dispatch(AssetOptimizationEvent::CSS, $asset_event);
+    $this->eventDispatcher->dispatch($asset_event, AssetOptimizationEvent::CSS);
     $contents = $asset_event->getContent();
     $asset = $asset_event->getAsset();
 
diff --git a/src/Asset/JsOptimizer.php b/src/Asset/JsOptimizer.php
index 908226b..7c06a9f 100644
--- a/src/Asset/JsOptimizer.php
+++ b/src/Asset/JsOptimizer.php
@@ -123,7 +123,7 @@ class JsOptimizer extends AssetOptimizer {
    */
   protected function optimizeFile(array &$asset, array $data) {
     $asset_event = new AssetOptimizationEvent($data['contents'], $asset, $data);
-    $this->eventDispatcher->dispatch(AssetOptimizationEvent::JS, $asset_event);
+    $this->eventDispatcher->dispatch($asset_event, AssetOptimizationEvent::JS);
     $contents = $asset_event->getContent();
     $asset = $asset_event->getAsset();
 
diff --git a/src/Asset/SingleAssetOptimizerBase.php b/src/Asset/SingleAssetOptimizerBase.php
index 26067ed..cccfcd9 100644
--- a/src/Asset/SingleAssetOptimizerBase.php
+++ b/src/Asset/SingleAssetOptimizerBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg\Asset;
 
+use Drupal\Core\Config\Config;
 use Psr\Log\LoggerInterface;
 
 /**
@@ -12,21 +13,21 @@ abstract class SingleAssetOptimizerBase {
   /**
    * Logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * A config object for optimizer.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Construct the optimizer.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A PSR compatible logger.
    */
   public function __construct(LoggerInterface $logger) {
@@ -58,7 +59,7 @@ abstract class SingleAssetOptimizerBase {
    */
   public function addLicense(&$contents, $path) {
     if ($this->config->get('add_license')) {
-      $url = file_create_url($path);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
       $contents = "/* Source and licensing information for the line(s) below can be found at $url. */\n" . $contents . "\n/* Source and licensing information for the above line(s) can be found at $url. */";
     }
   }
diff --git a/src/Commands/AdvaggCommands.php b/src/Commands/AdvaggCommands.php
index 663e287..b3d2543 100644
--- a/src/Commands/AdvaggCommands.php
+++ b/src/Commands/AdvaggCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg\Commands;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -16,32 +17,32 @@ class AdvaggCommands extends DrushCommands {
   /**
    * An editable config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $advaggConfig;
 
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Provides helpers to operate on files and stream wrappers.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs the commands instance.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The AdvAgg cache.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   Provides helpers to operate on files and stream wrappers.
    */
   public function __construct(CacheBackendInterface $cache, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
diff --git a/src/EventSubscriber/ResponseSubscriber.php b/src/EventSubscriber/ResponseSubscriber.php
index 8b19fa9..b1c20f5 100644
--- a/src/EventSubscriber/ResponseSubscriber.php
+++ b/src/EventSubscriber/ResponseSubscriber.php
@@ -2,10 +2,11 @@
 
 namespace Drupal\advagg\EventSubscriber;
 
+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Render\HtmlResponse;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -16,14 +17,14 @@ class ResponseSubscriber implements EventSubscriberInterface {
   /**
    * A config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Constructs the Subscriber object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -45,10 +46,10 @@ class ResponseSubscriber implements EventSubscriberInterface {
   /**
    * Passes HtmlResponse responses on to other functions if enabled.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function processResponse(FilterResponseEvent $event) {
+  public function processResponse(ResponseEvent $event) {
     // Only subscribe to the event if DNS prefetching is enabled.
     if ($this->config->get('dns_prefetch')) {
       $response = $event->getResponse();
@@ -74,10 +75,10 @@ class ResponseSubscriber implements EventSubscriberInterface {
   /**
    * Force absolute paths.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function forceAbsolutePaths(FilterResponseEvent $response) {
+  public function forceAbsolutePaths(ResponseEvent $response) {
     // Skip if not enabled.
     if (!$this->config->get('path.convert.absolute')) {
       return;
diff --git a/src/Form/InfoForm.php b/src/Form/InfoForm.php
index 86884a0..d4ef12f 100644
--- a/src/Form/InfoForm.php
+++ b/src/Form/InfoForm.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\advagg\Form;
 
+use Drupal\Core\Theme\Registry;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\Core\StringTranslation\Translator\TranslatorInterface;
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Form\ConfigFormBase;
@@ -18,42 +24,42 @@ class InfoForm extends ConfigFormBase {
   /**
    * The theme registry service.
    *
-   * @var \Drupal\Core\Theme\Registry
+   * @var Registry
    */
   protected $themeRegistry;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\Translator\TranslatorInterface
+   * @var TranslatorInterface
    */
   protected $translation;
 
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -193,7 +199,7 @@ class InfoForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function getFileInfoSubmit(array &$form, FormStateInterface $form_state) {
@@ -218,7 +224,7 @@ class InfoForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function getFileInfoValidate(array $form, FormStateInterface $form_state) {
diff --git a/src/Form/OperationsForm.php b/src/Form/OperationsForm.php
index d3c673a..78b4c82 100644
--- a/src/Form/OperationsForm.php
+++ b/src/Form/OperationsForm.php
@@ -266,7 +266,7 @@ class OperationsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function toggleBypassCookie(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 26741c0..f861ab1 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\advagg\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\advagg\Asset\AssetOptimizer;
 use Drupal\Core\Cache\Cache;
@@ -383,7 +384,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg.settings');
     $htaccess = FALSE;
     if ($config->get('immutable') != $form_state->getValue('immutable')) {
diff --git a/tests/src/Functional/AdvaggFunctionalTestBase.php b/tests/src/Functional/AdvaggFunctionalTestBase.php
index cedd239..9f19f3a 100644
--- a/tests/src/Functional/AdvaggFunctionalTestBase.php
+++ b/tests/src/Functional/AdvaggFunctionalTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\advagg\functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
@@ -31,7 +32,7 @@ abstract class AdvaggFunctionalTestBase extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -43,7 +44,7 @@ abstract class AdvaggFunctionalTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer site configuration',
diff --git a/tests/src/Kernel/Asset/CssOptimizerUnitTest.php b/tests/src/Kernel/Asset/CssOptimizerUnitTest.php
index a1d07c6..04ad2a4 100644
--- a/tests/src/Kernel/Asset/CssOptimizerUnitTest.php
+++ b/tests/src/Kernel/Asset/CssOptimizerUnitTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\advagg\Kernel\Asset;
 
+use Drupal\advagg\Asset\CssOptimizer;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -21,7 +22,7 @@ class CssOptimizerUnitTest extends KernelTestBase {
   /**
    * The Optimizer.
    *
-   * @var \Drupal\advagg\Asset\CssOptimizer
+   * @var CssOptimizer
    */
   protected $optimizer;
 
@@ -35,7 +36,7 @@ class CssOptimizerUnitTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('advagg');
     $this->optimizer = \Drupal::service('advagg.optimizer.css');
diff --git a/tests/src/Kernel/Form/InfoFormTest.php b/tests/src/Kernel/Form/InfoFormTest.php
index af8e1a3..398a6c4 100644
--- a/tests/src/Kernel/Form/InfoFormTest.php
+++ b/tests/src/Kernel/Form/InfoFormTest.php
@@ -16,7 +16,7 @@ class InfoFormTest extends KernelTestBase {
   /**
    * The Info form object under test.
    *
-   * @var \Drupal\advagg\Form\InfoForm
+   * @var InfoForm
    */
   protected $infoForm;
 
@@ -35,7 +35,7 @@ class InfoFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/tests/src/Kernel/Form/OperationsFormTest.php b/tests/src/Kernel/Form/OperationsFormTest.php
index bf96521..55d9c24 100644
--- a/tests/src/Kernel/Form/OperationsFormTest.php
+++ b/tests/src/Kernel/Form/OperationsFormTest.php
@@ -16,7 +16,7 @@ class OperationsFormTest extends KernelTestBase {
   /**
    * The Operations form object under test.
    *
-   * @var \Drupal\advagg\Form\OperationsForm
+   * @var OperationsForm
    */
   protected $operationsForm;
 
@@ -35,7 +35,7 @@ class OperationsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
diff --git a/tests/src/Kernel/Form/SettingsFormTest.php b/tests/src/Kernel/Form/SettingsFormTest.php
index a701077..b0f2734 100644
--- a/tests/src/Kernel/Form/SettingsFormTest.php
+++ b/tests/src/Kernel/Form/SettingsFormTest.php
@@ -25,14 +25,14 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * The Advagg settingForm.
    *
-   * @var \Drupal\advagg\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->settingsForm = SettingsForm::create($this->container);
