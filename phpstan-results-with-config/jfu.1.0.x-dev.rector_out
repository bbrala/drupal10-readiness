modules/contrib/jfu/jfu.module
modules/contrib/jfu/src/Ajax/JfuDialogSave.php
modules/contrib/jfu/src/Form/JfuImageDialog.php
modules/contrib/jfu/src/Plugin/Field/FieldFormatter/JSONComponentFormatter.php
modules/contrib/jfu/src/Plugin/Field/FieldWidget/JSONComponentWidget.php
modules/contrib/jfu/src/Plugin/rest/resource/BlockListResource.php

4 files with changes
====================

1) modules/contrib/jfu/src/Plugin/rest/resource/BlockListResource.php:19

    ---------- begin diff ----------
@@ @@
 class BlockListResource extends ResourceBase {
   /**
    * Responds to entity GET requests.
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    */
-
   public function get() {
     $blockManager = \Drupal::service('plugin.manager.block');
     $contextRepository = \Drupal::service('context.repository');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/jfu/src/Plugin/Field/FieldWidget/JSONComponentWidget.php:174

    ---------- begin diff ----------
@@ @@
     }

     $components = $this->getSetting('components');
-    $cmd = DRUPAL_ROOT . '/' . drupal_get_path('module', 'jfu') . '/component_models/';
+    $cmd = DRUPAL_ROOT . '/' . \Drupal::service('extension.list.module')->getPath('jfu') . '/component_models/';
     $jfu_components = [];
     
     foreach ($components as $name) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/jfu/src/Form/JfuImageDialog.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\jfu\Form;

+use Drupal\file\FileInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * The file storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $fileStorage;

@@ @@
   /**
    * The entity display repository service.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepository
+   * @var EntityDisplayRepository
    */
   protected $entityDisplayRepository;

@@ @@
   /**
    * Constructs a form object for image dialog.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $file_storage
+   * @param EntityStorageInterface $file_storage
    *   The file storage service.
    */
   public function __construct(EntityStorageInterface $file_storage, EntityDisplayRepository $entity_display_repository) {
@@ @@
     // attributes and set data-entity-type to 'file'.
     $fid = $form_state->getValue(['fid', 0]);
     if (!empty($fid)) {
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = $this->fileStorage->load($fid);
       $file_url = $file->getFileUri();
       $form_state->setValue(['attributes', 'src'], $file_url);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/jfu/jfu.module:225

    ---------- begin diff ----------
@@ @@
   
     $url_upload_image = Url::fromRoute('jfu.image_dialog', ['entity_type' => $entity_type, 'bundle' => $bundle], ['absolute' => TRUE]);
     $url_base = Url::fromRoute('<front>', [], ['absolute' => TRUE]);
-    $url_public = file_create_url('public://');
+    $url_public = \Drupal::service('file_url_generator')->generateAbsoluteString('public://');

     //TODO: Particular entity reference autocomplete for node
     $target_type = 'node';
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

