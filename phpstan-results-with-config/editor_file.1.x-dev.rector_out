modules/contrib/editor_file/editor_file.admin.inc
modules/contrib/editor_file/src/Form/EditorFileDialog.php
modules/contrib/editor_file/src/Plugin/CKEditorPlugin/DrupalFile.php

3 files with changes
====================

1) modules/contrib/editor_file/src/Plugin/CKEditorPlugin/DrupalFile.php:21

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'editor_file') . '/js/plugins/drupalfile/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('editor_file') . '/js/plugins/drupalfile/plugin.js';
   }

   /**
@@ @@
    * {@inheritdoc}
    */
   public function getButtons() {
-    $path = drupal_get_path('module', 'editor_file') . '/js/plugins/drupalfile';
+    $path = \Drupal::service('extension.list.module')->getPath('editor_file') . '/js/plugins/drupalfile';
     return [
       'DrupalFile' => [
         'label' => t('File'),
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/editor_file/src/Form/EditorFileDialog.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The file storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $fileStorage;

@@ @@
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Constructs a form object for image dialog.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $file_storage
+   * @param EntityStorageInterface $file_storage
    *   The file storage service.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(EntityStorageInterface $file_storage, EntityRepositoryInterface $entity_repository, RendererInterface $renderer) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\filter\Entity\FilterFormat $filter_format
+   * @param FilterFormat $filter_format
    *   The filter format for which this dialog corresponds.
    *
    * @return array
@@ @@
     $fid = $form_state->getValue(['fid', 0]);
     if (!empty($fid)) {
       $file = $this->fileStorage->load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       // Transform absolute file URLs to relative file URLs: prevent problems
       // on multisite set-ups and prevent mixed content errors.
-      $file_url = file_url_transform_relative($file_url);
+      $file_url = \Drupal::service('file_url_generator')->transformRelative($file_url);
       $form_state->setValue(['attributes', 'href'], $file_url);
       $form_state->setValue(['attributes', 'filename'], urldecode(basename($file_url)));
       $form_state->setValue(['attributes', 'data-entity-uuid'], $file->uuid());
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/editor_file/editor_file.admin.inc:11

    ---------- begin diff ----------
@@ @@
 /**
  * Subform constructor to configure the text editor's file upload settings.
  *
- * @param \Drupal\editor\Entity\Editor $editor
+ * @param Editor $editor
  *   The text editor entity that is being edited.
  *
  * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

