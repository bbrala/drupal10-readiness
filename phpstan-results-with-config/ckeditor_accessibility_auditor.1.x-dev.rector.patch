diff --git a/ckeditor_accessibility_auditor.info.yml b/ckeditor_accessibility_auditor.info.yml
index fa038b2..90c4389 100644
--- a/ckeditor_accessibility_auditor.info.yml
+++ b/ckeditor_accessibility_auditor.info.yml
@@ -4,5 +4,4 @@ description: Provides a Accessibility Auditor button for CKEditor
 package: User interface
 dependencies:
   - drupal:ckeditor
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/src/Plugin/CKEditorPlugin/HTMLCodeSniffer.php b/src/Plugin/CKEditorPlugin/HTMLCodeSniffer.php
index c0dbdff..89e902a 100644
--- a/src/Plugin/CKEditorPlugin/HTMLCodeSniffer.php
+++ b/src/Plugin/CKEditorPlugin/HTMLCodeSniffer.php
@@ -47,7 +47,7 @@ class HTMLCodeSniffer extends CKEditorPluginBase implements CKEditorPluginConfig
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/plugin.js';
   }
 
   /**
@@ -57,7 +57,7 @@ class HTMLCodeSniffer extends CKEditorPluginBase implements CKEditorPluginConfig
     return [
       'HTML_CodeSniffer' => [
         'label' => $this->t('Accessibility Auditor (HTML_CodeSniffer)'),
-        'image' => drupal_get_path('module', 'ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png',
       ],
     ];
   }
@@ -100,7 +100,7 @@ class HTMLCodeSniffer extends CKEditorPluginBase implements CKEditorPluginConfig
    *
    * @param array $element
    *   Element to validate.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function validateInput(array $element, FormStateInterface $form_state) {
diff --git a/tests/src/FunctionalJavascript/HTMLCodeSnifferTest.php b/tests/src/FunctionalJavascript/HTMLCodeSnifferTest.php
index b962f77..c7ff7fc 100644
--- a/tests/src/FunctionalJavascript/HTMLCodeSnifferTest.php
+++ b/tests/src/FunctionalJavascript/HTMLCodeSnifferTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\ckeditor_accessibility_auditor\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\editor\Entity\Editor;
 use Drupal\field\Entity\FieldConfig;
@@ -20,7 +21,7 @@ class HTMLCodeSnifferTest extends WebDriverTestBase {
   /**
    * The account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;
 
@@ -37,7 +38,7 @@ class HTMLCodeSnifferTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a text format and associate CKEditor.
@@ -115,8 +116,8 @@ class HTMLCodeSnifferTest extends WebDriverTestBase {
     $web_assert->assertWaitOnAjaxRequest();
 
     // Check that the icon is displayed.
-    $markup = file_url_transform_relative(file_create_url(drupal_get_path('module', 'ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png'));
-    $this->assertRaw($markup);
+    $markup = \Drupal::service('file_url_generator')->generateString(\Drupal::service('extension.list.module')->getPath('ckeditor_accessibility_auditor') . '/js/plugins/html_codesniffer/icons/html_codesniffer.png');
+    $this->assertSession()->responseContains($markup);
 
     // Click the button.
     $this->getSession()->getPage()->find('css', '.cke_button__html_codesniffer_icon')->click();
@@ -132,10 +133,10 @@ class HTMLCodeSnifferTest extends WebDriverTestBase {
   public function testSettings() {
     // Test as admin.
     $this->drupalGet('admin/config/content/formats/manage/filtered_html');
-    $this->assertRaw('Enter the URL to use as a base path for loading the HTML_CodeSniffer files.');
-    $this->assertRaw('Enter the default standard to be selected in the auditor');
-    $this->drupalPostForm(NULL, ['editor[settings][plugins][html_codesniffer][base_url]' => '\\//squizlabs.github.io/HTML_CodeSniffer/build/'], 'Save configuration');
-    $this->assertRaw('Please enter a valid Base URL for the Accessibility Auditor.');
+    $this->assertSession()->responseContains('Enter the URL to use as a base path for loading the HTML_CodeSniffer files.');
+    $this->assertSession()->responseContains('Enter the default standard to be selected in the auditor');
+    $this->submitForm(['editor[settings][plugins][html_codesniffer][base_url]' => '\\//squizlabs.github.io/HTML_CodeSniffer/build/'], 'Save configuration');
+    $this->assertSession()->responseContains('Please enter a valid Base URL for the Accessibility Auditor.');
 
     $not_an_admin = $this->drupalCreateUser([
       'administer nodes',
@@ -147,7 +148,7 @@ class HTMLCodeSnifferTest extends WebDriverTestBase {
     $this->drupalLogin($not_an_admin);
     $this->drupalGet('admin/config/content/formats/manage/filtered_html');
     // Check that settings are disabled for non-admins.
-    $this->assertRaw('Only editable by Administrators!');
+    $this->assertSession()->responseContains('Only editable by Administrators!');
     $page = $this->getSession()->getPage();
     $this->assertTrue($page->findField('editor[settings][plugins][html_codesniffer][base_url]')->hasAttribute('disabled'));
   }
