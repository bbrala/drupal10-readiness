diff --git a/tmgmt_contentapi/src/Annotation/FormatPlugin.php b/tmgmt_contentapi/src/Annotation/FormatPlugin.php
index 96b90e5..be7f98e 100644
--- a/tmgmt_contentapi/src/Annotation/FormatPlugin.php
+++ b/tmgmt_contentapi/src/Annotation/FormatPlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tmgmt_contentapi\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class FormatPlugin extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
diff --git a/tmgmt_contentapi/src/Format/FormatManager.php b/tmgmt_contentapi/src/Format/FormatManager.php
index c72e392..788d291 100644
--- a/tmgmt_contentapi/src/Format/FormatManager.php
+++ b/tmgmt_contentapi/src/Format/FormatManager.php
@@ -32,9 +32,9 @@ class FormatManager extends DefaultPluginManager {
      * @param \Traversable $namespaces
      *   An object that implements \Traversable which contains the root paths
      *   keyed by the corresponding namespace to look for plugin implementations.
-     * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+     * @param CacheBackendInterface $cache_backend
      *   Cache backend instance to use.
-     * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+     * @param ModuleHandlerInterface $module_handler
      *   The module handler to invoke the alter hook with.
      */
     public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/tmgmt_contentapi/src/Plugin/views/field/JobProvideridField.php b/tmgmt_contentapi/src/Plugin/views/field/JobProvideridField.php
index 4c2579d..66dd7eb 100644
--- a/tmgmt_contentapi/src/Plugin/views/field/JobProvideridField.php
+++ b/tmgmt_contentapi/src/Plugin/views/field/JobProvideridField.php
@@ -176,14 +176,14 @@ class JobProvideridField extends FieldPluginBase {
       $capisettings = $translator->getSetting('capi-settings');
       $capi = new TokenApi();
       $token = $capi->getToken($capisettings['capi_username_ctt'],$capisettings['capi_password_ctt']);
-      
-  
+
+
         if(isset($token) && $token != '') {
             $providersarray = array();
             try {
               $providerapi = new ProviderApi();
               $providers = $providerapi->providersGet($token);
-              
+
               foreach ($providers as $provider) {
                 $prid = $provider->getProviderId();
                 $prname = $provider->getProviderName();
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/FileApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/FileApi.php
index c100d56..f1a9237 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/FileApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/FileApi.php
@@ -29,6 +29,9 @@
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
 
+use GuzzleHttp\Promise\PromiseInterface;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -92,7 +95,7 @@ class FileApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \SplFileObject
      */
@@ -111,7 +114,7 @@ class FileApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \SplFileObject, HTTP status code, HTTP response headers (array of strings)
      */
@@ -222,7 +225,7 @@ class FileApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdRetrievefileGetAsync($authorization, $job_id, $request_id)
     {
@@ -244,7 +247,7 @@ class FileApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdRetrievefileGetAsyncWithHttpInfo($authorization, $job_id, $request_id)
     {
@@ -296,7 +299,7 @@ class FileApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsRequestIdRetrievefileGetRequest($authorization, $job_id, $request_id)
     {
@@ -368,7 +371,7 @@ class FileApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -383,11 +386,11 @@ class FileApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -422,7 +425,7 @@ class FileApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -440,7 +443,7 @@ class FileApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \SplFileObject
      */
@@ -558,7 +561,7 @@ class FileApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdRetrievefileGetAsyncCtt($authorization, $job_id, $request_id)
     {
@@ -580,7 +583,7 @@ class FileApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdRetrievefileGetAsyncWithHttpInfoCtt($authorization, $job_id, $request_id)
     {
@@ -632,7 +635,7 @@ class FileApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsRequestIdRetrievefileGetRequestCtt($authorization, $job_id, $request_id)
     {
@@ -704,7 +707,7 @@ class FileApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -719,11 +722,11 @@ class FileApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -758,7 +761,7 @@ class FileApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/JobApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/JobApi.php
index b808db8..9bff712 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/JobApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/JobApi.php
@@ -28,6 +28,13 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\Job;
+use GuzzleHttp\Promise\PromiseInterface;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateJob;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\ProviderId;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateJob;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -111,9 +118,9 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      * @param  bool $include_archived Include archived jobs in job listing. (optional, default to false)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job[]
+     * @return Job[]
      */
     public function jobsGet($authorization, $fetch_type = 'full', $include_archived = 'false')
     {
@@ -130,7 +137,7 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      * @param  bool $include_archived Include archived jobs in job listing. (optional, default to false)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -232,7 +239,7 @@ class JobApi
      * @param  bool $include_archived Include archived jobs in job listing. (optional, default to false)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsGetAsync($authorization, $fetch_type = 'full', $include_archived = 'false')
     {
@@ -254,7 +261,7 @@ class JobApi
      * @param  bool $include_archived Include archived jobs in job listing. (optional, default to false)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsGetAsyncWithHttpInfo($authorization, $fetch_type = 'full', $include_archived = 'false')
     {
@@ -306,7 +313,7 @@ class JobApi
      * @param  bool $include_archived Include archived jobs in job listing. (optional, default to false)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsGetRequest($authorization, $fetch_type = 'full', $include_archived = 'false')
     {
@@ -358,7 +365,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -373,11 +380,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -408,7 +415,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -425,9 +432,9 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdArchivePut($authorization, $job_id)
     {
@@ -443,7 +450,7 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -552,7 +559,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdArchivePutAsync($authorization, $job_id)
     {
@@ -573,7 +580,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdArchivePutAsyncWithHttpInfo($authorization, $job_id)
     {
@@ -624,7 +631,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdArchivePutRequest($authorization, $job_id)
     {
@@ -682,7 +689,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -697,11 +704,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -733,7 +740,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -750,9 +757,9 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdArchivePutCtt($authorization, $job_id)
     {
@@ -768,7 +775,7 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -877,7 +884,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdArchivePutAsyncCtt($authorization, $job_id)
     {
@@ -898,7 +905,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdArchivePutAsyncWithHttpInfoCtt($authorization, $job_id)
     {
@@ -949,7 +956,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdArchivePutRequestCtt($authorization, $job_id)
     {
@@ -1007,7 +1014,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1022,11 +1029,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1058,7 +1065,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1075,9 +1082,9 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdDelete($authorization, $job_id)
     {
@@ -1093,7 +1100,7 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -1202,7 +1209,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdDeleteAsync($authorization, $job_id)
     {
@@ -1223,7 +1230,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdDeleteAsyncWithHttpInfo($authorization, $job_id)
     {
@@ -1274,7 +1281,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdDeleteRequest($authorization, $job_id)
     {
@@ -1332,7 +1339,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1347,11 +1354,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1383,7 +1390,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'DELETE',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1401,9 +1408,9 @@ class JobApi
      * @param  string $job_id The ID of the job being queried. (required)
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdGet($authorization, $job_id, $fetch_type = 'full')
     {
@@ -1421,7 +1428,7 @@ class JobApi
      * @param  string $job_id The ID of the job being queried. (required)
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -1536,7 +1543,7 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdGetAsync($authorization, $job_id, $fetch_type = 'full')
     {
@@ -1558,7 +1565,7 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdGetAsyncWithHttpInfo($authorization, $job_id, $fetch_type = 'full')
     {
@@ -1610,7 +1617,7 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdGetRequest($authorization, $job_id, $fetch_type = 'full')
     {
@@ -1672,7 +1679,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1687,11 +1694,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1723,7 +1730,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1741,9 +1748,9 @@ class JobApi
      * @param  string $job_id The ID of the job being queried. (required)
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdGetCtt($authorization, $job_id, $fetch_type = 'full')
     {
@@ -1760,7 +1767,7 @@ class JobApi
      * @param  string $job_id The ID of the job being queried. (required)
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -1875,7 +1882,7 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdGetCttAsync($authorization, $job_id, $fetch_type = 'full')
     {
@@ -1897,7 +1904,7 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdGetCttAsyncWithHttpInfo($authorization, $job_id, $fetch_type = 'full')
     {
@@ -1949,9 +1956,8 @@ class JobApi
      * @param  string $fetch_type Specifies what level of detail is returned for a job. (optional, default to full)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
-
     protected function jobsJobIdGetRequestCtt($authorization, $job_id, $fetch_type = 'full')
     {
         // verify the required parameter 'authorization' is set
@@ -2012,7 +2018,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2027,11 +2033,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2058,7 +2064,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -2074,11 +2080,11 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the job being updated. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateJob $job The job being updated. (required)
+     * @param UpdateJob $job The job being updated. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdPut($authorization, $job_id, $job)
     {
@@ -2093,9 +2099,9 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the job being updated. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateJob $job The job being updated. (required)
+     * @param UpdateJob $job The job being updated. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -2202,10 +2208,10 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the job being updated. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateJob $job The job being updated. (required)
+     * @param UpdateJob $job The job being updated. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdPutAsync($authorization, $job_id, $job)
     {
@@ -2224,10 +2230,10 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the job being updated. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateJob $job The job being updated. (required)
+     * @param UpdateJob $job The job being updated. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdPutAsyncWithHttpInfo($authorization, $job_id, $job)
     {
@@ -2276,10 +2282,10 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the job being updated. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateJob $job The job being updated. (required)
+     * @param UpdateJob $job The job being updated. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdPutRequest($authorization, $job_id, $job)
     {
@@ -2346,7 +2352,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2361,11 +2367,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2396,7 +2402,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -2412,11 +2418,11 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
+     * @param ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdSubmitPut($authorization, $job_id, $body)
     {
@@ -2431,9 +2437,9 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
+     * @param ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -2540,10 +2546,10 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
+     * @param ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSubmitPutAsync($authorization, $job_id, $body)
     {
@@ -2562,10 +2568,10 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
+     * @param ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSubmitPutAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -2614,10 +2620,10 @@ class JobApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
+     * @param ProviderId $body The ID of the provider the job will be sent to. This information can be omitted if the site has only one translation provider. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdSubmitPutRequest($authorization, $job_id, $body)
     {
@@ -2684,7 +2690,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2699,11 +2705,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2735,7 +2741,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -2752,9 +2758,9 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsJobIdUnarchivePut($authorization, $job_id)
     {
@@ -2770,7 +2776,7 @@ class JobApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -2879,7 +2885,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdUnarchivePutAsync($authorization, $job_id)
     {
@@ -2900,7 +2906,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdUnarchivePutAsyncWithHttpInfo($authorization, $job_id)
     {
@@ -2951,7 +2957,7 @@ class JobApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdUnarchivePutRequest($authorization, $job_id)
     {
@@ -3009,7 +3015,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -3024,11 +3030,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -3060,7 +3066,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -3075,11 +3081,11 @@ class JobApi
      * Create a new job.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateJob $body Created job object (required)
+     * @param CreateJob $body Created job object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job
+     * @return Job
      */
     public function jobsPost($authorization, $body)
     {
@@ -3093,9 +3099,9 @@ class JobApi
      * Create a new job.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateJob $body Created job object (required)
+     * @param CreateJob $body Created job object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Job, HTTP status code, HTTP response headers (array of strings)
      */
@@ -3193,10 +3199,10 @@ class JobApi
      * Create a new job.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateJob $body Created job object (required)
+     * @param CreateJob $body Created job object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsPostAsync($authorization, $body)
     {
@@ -3214,10 +3220,10 @@ class JobApi
      * Create a new job.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateJob $body Created job object (required)
+     * @param CreateJob $body Created job object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsPostAsyncWithHttpInfo($authorization, $body)
     {
@@ -3265,10 +3271,10 @@ class JobApi
      * Create request for operation 'jobsPost'
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateJob $body Created job object (required)
+     * @param CreateJob $body Created job object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsPostRequest($authorization, $body)
     {
@@ -3321,7 +3327,7 @@ class JobApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -3336,11 +3342,11 @@ class JobApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -3371,7 +3377,7 @@ class JobApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/ProviderApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/ProviderApi.php
index 45c4902..f2b0bd4 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/ProviderApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/ProviderApi.php
@@ -28,6 +28,10 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\Provider;
+use GuzzleHttp\Promise\PromiseInterface;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -161,9 +165,9 @@ class ProviderApi
    *
    * @param  string $authorization Oauth2 token (required)
    *
-   * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+   * @throws ApiException on non-2xx response
    * @throws \InvalidArgumentException
-   * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Provider[]
+   * @return Provider[]
    */
   public function providersGet($authorization)
   {
@@ -178,7 +182,7 @@ class ProviderApi
    *
    * @param  string $authorization Oauth2 token (required)
    *
-   * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+   * @throws ApiException on non-2xx response
    * @throws \InvalidArgumentException
    * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Provider[], HTTP status code, HTTP response headers (array of strings)
    */
@@ -200,7 +204,7 @@ class ProviderApi
           $e->getResponse() ? $e->getResponse()->getBody()->getContents() : null
         );
       }
-      
+
       $statusCode = $response->getStatusCode();
 
       if ($statusCode < 200 || $statusCode > 299) {
@@ -281,7 +285,7 @@ class ProviderApi
    * @param  string $authorization Oauth2 token (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Promise\PromiseInterface
+   * @return PromiseInterface
    */
   public function providersGetAsync($authorization)
   {
@@ -301,7 +305,7 @@ class ProviderApi
    * @param  string $authorization Oauth2 token (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Promise\PromiseInterface
+   * @return PromiseInterface
    */
   public function providersGetAsyncWithHttpInfo($authorization)
   {
@@ -351,7 +355,7 @@ class ProviderApi
    * @param  string $authorization Oauth2 token (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Psr7\Request
+   * @return Request
    */
   protected function providersGetRequest($authorization)
   {
@@ -395,7 +399,7 @@ class ProviderApi
       $httpBody = $_tempBody;
       // \stdClass has no __toString(), so we should encode it manually
       if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-        $httpBody = \GuzzleHttp\json_encode($httpBody);
+        $httpBody = json_encode($httpBody);
       }
     } elseif (count($formParams) > 0) {
       if ($multipart) {
@@ -410,11 +414,11 @@ class ProviderApi
         $httpBody = new MultipartStream($multipartContents);
 
       } elseif ($headers['Content-Type'] === 'application/json') {
-        $httpBody = \GuzzleHttp\json_encode($formParams);
+        $httpBody = json_encode($formParams);
 
       } else {
         // for HTTP post (form)
-        $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+        $httpBody = build_query($formParams);
       }
     }
 
@@ -443,7 +447,7 @@ class ProviderApi
       $headers
     );
 
-    $query = \GuzzleHttp\Psr7\build_query($queryParams);
+    $query = build_query($queryParams);
     return new Request(
       'GET',
       $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -460,9 +464,9 @@ class ProviderApi
    * @param  string $authorization Oauth2 token (required)
    * @param  string $provider_id The ID of the translation provider. (required)
    *
-   * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+   * @throws ApiException on non-2xx response
    * @throws \InvalidArgumentException
-   * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Provider
+   * @return Provider
    */
   public function providersProviderIdGet($authorization, $provider_id)
   {
@@ -478,7 +482,7 @@ class ProviderApi
    * @param  string $authorization Oauth2 token (required)
    * @param  string $provider_id The ID of the translation provider. (required)
    *
-   * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+   * @throws ApiException on non-2xx response
    * @throws \InvalidArgumentException
    * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Provider, HTTP status code, HTTP response headers (array of strings)
    */
@@ -587,7 +591,7 @@ class ProviderApi
    * @param  string $provider_id The ID of the translation provider. (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Promise\PromiseInterface
+   * @return PromiseInterface
    */
   public function providersProviderIdGetAsync($authorization, $provider_id)
   {
@@ -608,7 +612,7 @@ class ProviderApi
    * @param  string $provider_id The ID of the translation provider. (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Promise\PromiseInterface
+   * @return PromiseInterface
    */
   public function providersProviderIdGetAsyncWithHttpInfo($authorization, $provider_id)
   {
@@ -659,7 +663,7 @@ class ProviderApi
    * @param  string $provider_id The ID of the translation provider. (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Psr7\Request
+   * @return Request
    */
   protected function providersProviderIdGetRequest($authorization, $provider_id)
   {
@@ -717,7 +721,7 @@ class ProviderApi
       $httpBody = $_tempBody;
       // \stdClass has no __toString(), so we should encode it manually
       if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-        $httpBody = \GuzzleHttp\json_encode($httpBody);
+        $httpBody = json_encode($httpBody);
       }
     } elseif (count($formParams) > 0) {
       if ($multipart) {
@@ -732,11 +736,11 @@ class ProviderApi
         $httpBody = new MultipartStream($multipartContents);
 
       } elseif ($headers['Content-Type'] === 'application/json') {
-        $httpBody = \GuzzleHttp\json_encode($formParams);
+        $httpBody = json_encode($formParams);
 
       } else {
         // for HTTP post (form)
-        $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+        $httpBody = build_query($formParams);
       }
     }
 
@@ -765,7 +769,7 @@ class ProviderApi
       $headers
     );
 
-    $query = \GuzzleHttp\Psr7\build_query($queryParams);
+    $query = build_query($queryParams);
     return new Request(
       'GET',
       $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -782,9 +786,9 @@ class ProviderApi
    * @param  string $authorization Oauth2 token (required)
    * @param  string $provider_id The ID of the translation provider. (required)
    *
-   * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+   * @throws ApiException on non-2xx response
    * @throws \InvalidArgumentException
-   * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Provider
+   * @return Provider
    */
   public function providersProviderIdGetCtt($authorization, $provider_id)
   {
@@ -800,7 +804,7 @@ class ProviderApi
    * @param  string $authorization Oauth2 token (required)
    * @param  string $provider_id The ID of the translation provider. (required)
    *
-   * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+   * @throws ApiException on non-2xx response
    * @throws \InvalidArgumentException
    * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Provider, HTTP status code, HTTP response headers (array of strings)
    */
@@ -909,7 +913,7 @@ class ProviderApi
    * @param  string $provider_id The ID of the translation provider. (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Promise\PromiseInterface
+   * @return PromiseInterface
    */
   public function providersProviderIdGetAsyncCtt($authorization, $provider_id)
   {
@@ -930,7 +934,7 @@ class ProviderApi
    * @param  string $provider_id The ID of the translation provider. (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Promise\PromiseInterface
+   * @return PromiseInterface
    */
   public function providersProviderIdGetAsyncWithHttpInfoCtt($authorization, $provider_id)
   {
@@ -981,7 +985,7 @@ class ProviderApi
    * @param  string $provider_id The ID of the translation provider. (required)
    *
    * @throws \InvalidArgumentException
-   * @return \GuzzleHttp\Psr7\Request
+   * @return Request
    */
   protected function providersProviderIdGetRequestCtt($authorization, $provider_id)
   {
@@ -1039,7 +1043,7 @@ class ProviderApi
       $httpBody = $_tempBody;
       // \stdClass has no __toString(), so we should encode it manually
       if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-        $httpBody = \GuzzleHttp\json_encode($httpBody);
+        $httpBody = json_encode($httpBody);
       }
     } elseif (count($formParams) > 0) {
       if ($multipart) {
@@ -1054,11 +1058,11 @@ class ProviderApi
         $httpBody = new MultipartStream($multipartContents);
 
       } elseif ($headers['Content-Type'] === 'application/json') {
-        $httpBody = \GuzzleHttp\json_encode($formParams);
+        $httpBody = json_encode($formParams);
 
       } else {
         // for HTTP post (form)
-        $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+        $httpBody = build_query($formParams);
       }
     }
 
@@ -1087,7 +1091,7 @@ class ProviderApi
       $headers
     );
 
-    $query = \GuzzleHttp\Psr7\build_query($queryParams);
+    $query = build_query($queryParams);
     return new Request(
       'GET',
       $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/RequestApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/RequestApi.php
index 690aa5c..776d500 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/RequestApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/RequestApi.php
@@ -28,6 +28,15 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestKeyValue;
+use GuzzleHttp\Promise\PromiseInterface;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestFile;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIdsNote;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsKeyValue;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsFile;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -109,9 +118,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestKeyValue $body Created Request object (required)
+     * @param CreateRequestKeyValue $body Created Request object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -128,9 +137,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestKeyValue $body Created Request object (required)
+     * @param CreateRequestKeyValue $body Created Request object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -237,10 +246,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestKeyValue $body Created Request object (required)
+     * @param CreateRequestKeyValue $body Created Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsAddPostAsync($authorization, $job_id, $body)
     {
@@ -259,10 +268,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestKeyValue $body Created Request object (required)
+     * @param CreateRequestKeyValue $body Created Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsAddPostAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -311,10 +320,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestKeyValue $body Created Request object (required)
+     * @param CreateRequestKeyValue $body Created Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsAddPostRequest($authorization, $job_id, $body)
     {
@@ -381,7 +390,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -396,11 +405,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -426,7 +435,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -442,10 +451,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestFile $body Created Request object (required)
+     * @param CreateRequestFile $body Created Request object (required)
      *
      * @param  string $requestType 1= source, 2 = reference. (optional) DEFAULT = source
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -462,9 +471,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestFile $body Created Request object (required)
+     * @param CreateRequestFile $body Created Request object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -572,10 +581,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestFile $body Created Request object (required)
+     * @param CreateRequestFile $body Created Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsAddfilePostAsync($authorization, $job_id, $body)
     {
@@ -594,10 +603,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestFile $body Created Request object (required)
+     * @param CreateRequestFile $body Created Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsAddfilePostAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -673,10 +682,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestFile $body Created Request object (required)
+     * @param CreateRequestFile $body Created Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdAddSourceReferencePostRequest($authorization, $job_id, $body, $requestType)
     {
@@ -743,7 +752,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -758,11 +767,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -794,7 +803,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -810,9 +819,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -829,9 +838,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -938,10 +947,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsApprovePutAsync($authorization, $job_id, $body)
     {
@@ -960,10 +969,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsApprovePutAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -1012,10 +1021,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsApprovePutRequest($authorization, $job_id, $body)
     {
@@ -1082,7 +1091,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1097,11 +1106,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1132,7 +1141,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1148,9 +1157,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -1167,9 +1176,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -1276,10 +1285,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsApprovePutAsyncCtt($authorization, $job_id, $body)
     {
@@ -1298,10 +1307,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsApprovePutAsyncWithHttpInfoCtt($authorization, $job_id, $body)
     {
@@ -1350,10 +1359,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsApprovePutRequestCtt($authorization, $job_id, $body)
     {
@@ -1420,7 +1429,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1435,11 +1444,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1470,7 +1479,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1487,7 +1496,7 @@ class RequestApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -1505,7 +1514,7 @@ class RequestApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -1615,7 +1624,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsGetAsync($authorization, $job_id)
     {
@@ -1636,7 +1645,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsGetAsyncWithHttpInfo($authorization, $job_id)
     {
@@ -1687,7 +1696,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsGetRequest($authorization, $job_id)
     {
@@ -1745,7 +1754,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1760,11 +1769,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1796,7 +1805,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1813,7 +1822,7 @@ class RequestApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -1831,7 +1840,7 @@ class RequestApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -1941,7 +1950,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsGetAsyncCtt($authorization, $job_id)
     {
@@ -1962,7 +1971,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsGetAsyncWithHttpInfoCtt($authorization, $job_id)
     {
@@ -2013,7 +2022,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsGetRequestCtt($authorization, $job_id)
     {
@@ -2071,7 +2080,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2086,11 +2095,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2122,7 +2131,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -2138,9 +2147,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -2157,9 +2166,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -2266,10 +2275,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsPutAsync($authorization, $job_id, $body)
     {
@@ -2288,10 +2297,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsPutAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -2340,10 +2349,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIds $body Array of RequestIds (required)
+     * @param ArrayOfRequestIds $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsPutRequest($authorization, $job_id, $body)
     {
@@ -2410,7 +2419,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2425,11 +2434,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2461,7 +2470,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -2477,9 +2486,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIdsNote $body Array of RequestIds (required)
+     * @param ArrayOfRequestIdsNote $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -2496,9 +2505,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIdsNote $body Array of RequestIds (required)
+     * @param ArrayOfRequestIdsNote $body Array of RequestIds (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -2605,10 +2614,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIdsNote $body Array of RequestIds (required)
+     * @param ArrayOfRequestIdsNote $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRejectPutAsync($authorization, $job_id, $body)
     {
@@ -2627,10 +2636,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIdsNote $body Array of RequestIds (required)
+     * @param ArrayOfRequestIdsNote $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRejectPutAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -2679,10 +2688,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\ArrayOfRequestIdsNote $body Array of RequestIds (required)
+     * @param ArrayOfRequestIdsNote $body Array of RequestIds (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsRejectPutRequest($authorization, $job_id, $body)
     {
@@ -2749,7 +2758,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2764,11 +2773,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2800,7 +2809,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -2818,7 +2827,7 @@ class RequestApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request
      */
@@ -2837,7 +2846,7 @@ class RequestApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request, HTTP status code, HTTP response headers (array of strings)
      */
@@ -2947,7 +2956,7 @@ class RequestApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdDeleteAsync($authorization, $job_id, $request_id)
     {
@@ -2969,7 +2978,7 @@ class RequestApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdDeleteAsyncWithHttpInfo($authorization, $job_id, $request_id)
     {
@@ -3021,7 +3030,7 @@ class RequestApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsRequestIdDeleteRequest($authorization, $job_id, $request_id)
     {
@@ -3093,7 +3102,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -3108,11 +3117,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -3144,7 +3153,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'DELETE',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -3162,7 +3171,7 @@ class RequestApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request
      */
@@ -3181,7 +3190,7 @@ class RequestApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request, HTTP status code, HTTP response headers (array of strings)
      */
@@ -3291,7 +3300,7 @@ class RequestApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdGetAsync($authorization, $job_id, $request_id)
     {
@@ -3313,7 +3322,7 @@ class RequestApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdGetAsyncWithHttpInfo($authorization, $job_id, $request_id)
     {
@@ -3365,7 +3374,7 @@ class RequestApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsRequestIdGetRequest($authorization, $job_id, $request_id)
     {
@@ -3437,7 +3446,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -3452,11 +3461,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -3488,7 +3497,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -3504,9 +3513,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsKeyValue $body Updated Request object (required)
+     * @param UpdateRequestsKeyValue $body Updated Request object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -3523,9 +3532,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsKeyValue $body Updated Request object (required)
+     * @param UpdateRequestsKeyValue $body Updated Request object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -3632,10 +3641,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsKeyValue $body Updated Request object (required)
+     * @param UpdateRequestsKeyValue $body Updated Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsUpdatecontentPutAsync($authorization, $job_id, $body)
     {
@@ -3654,10 +3663,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsKeyValue $body Updated Request object (required)
+     * @param UpdateRequestsKeyValue $body Updated Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsUpdatecontentPutAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -3706,10 +3715,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsKeyValue $body Updated Request object (required)
+     * @param UpdateRequestsKeyValue $body Updated Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsUpdatecontentPutRequest($authorization, $job_id, $body)
     {
@@ -3776,7 +3785,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -3791,11 +3800,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -3826,7 +3835,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -3842,9 +3851,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsFile $body Updated Request object (required)
+     * @param UpdateRequestsFile $body Updated Request object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[]
      */
@@ -3861,9 +3870,9 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsFile $body Updated Request object (required)
+     * @param UpdateRequestsFile $body Updated Request object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Request[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -3970,10 +3979,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsFile $body Updated Request object (required)
+     * @param UpdateRequestsFile $body Updated Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsUpdatefilecontentPutAsync($authorization, $job_id, $body)
     {
@@ -3992,10 +4001,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsFile $body Updated Request object (required)
+     * @param UpdateRequestsFile $body Updated Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsUpdatefilecontentPutAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -4044,10 +4053,10 @@ class RequestApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\UpdateRequestsFile $body Updated Request object (required)
+     * @param UpdateRequestsFile $body Updated Request object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsUpdatefilecontentPutRequest($authorization, $job_id, $body)
     {
@@ -4114,7 +4123,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -4129,11 +4138,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -4164,7 +4173,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -4307,7 +4316,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsCompleteRequestsGetAsync($authorization, $job_id)
     {
@@ -4328,7 +4337,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsCompleteRequestsGetAsyncWithHttpInfo($authorization, $job_id)
     {
@@ -4379,7 +4388,7 @@ class RequestApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsCompletePutRequest($authorization, $job_id)
     {
@@ -4437,7 +4446,7 @@ class RequestApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -4452,11 +4461,11 @@ class RequestApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -4488,7 +4497,7 @@ class RequestApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/SourceFileApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/SourceFileApi.php
index 417433c..1700522 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/SourceFileApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/SourceFileApi.php
@@ -28,6 +28,10 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\SourceFile;
+use GuzzleHttp\Promise\PromiseInterface;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -114,9 +118,9 @@ class SourceFileApi
      * @param  string $file_type MIME type of the source file of the request. If empty, a default will be supplied based on the extension extracted from the name of the request, or &#39;application/octet-stream&#39; if no extension can be found from the name of the request. (required)
      * @param  \SplFileObject $source_file The file of the source content for the request(s). *Note*: \&quot;Try it out\&quot; for this method on developers.lionbridge.com is currently not functioning. To test this method, use the cURL sample on https://bitbucket.org/liox-ondemand/liox-content-api-client/src/master/curl/File%20Workflow (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\SourceFile
+     * @return SourceFile
      */
     public function jobsJobIdUploadPost($authorization, $job_id, $file_name, $file_type, $source_file)
     {
@@ -135,7 +139,7 @@ class SourceFileApi
      * @param  string $file_type MIME type of the source file of the request. If empty, a default will be supplied based on the extension extracted from the name of the request, or &#39;application/octet-stream&#39; if no extension can be found from the name of the request. (required)
      * @param  \SplFileObject $source_file The file of the source content for the request(s). *Note*: \&quot;Try it out\&quot; for this method on developers.lionbridge.com is currently not functioning. To test this method, use the cURL sample on https://bitbucket.org/liox-ondemand/liox-content-api-client/src/master/curl/File%20Workflow (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\SourceFile, HTTP status code, HTTP response headers (array of strings)
      */
@@ -247,7 +251,7 @@ class SourceFileApi
      * @param  \SplFileObject $source_file The file of the source content for the request(s). *Note*: \&quot;Try it out\&quot; for this method on developers.lionbridge.com is currently not functioning. To test this method, use the cURL sample on https://bitbucket.org/liox-ondemand/liox-content-api-client/src/master/curl/File%20Workflow (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdUploadPostAsync($authorization, $job_id, $file_name, $file_type, $source_file)
     {
@@ -271,7 +275,7 @@ class SourceFileApi
      * @param  \SplFileObject $source_file The file of the source content for the request(s). *Note*: \&quot;Try it out\&quot; for this method on developers.lionbridge.com is currently not functioning. To test this method, use the cURL sample on https://bitbucket.org/liox-ondemand/liox-content-api-client/src/master/curl/File%20Workflow (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdUploadPostAsyncWithHttpInfo($authorization, $job_id, $file_name, $file_type, $source_file)
     {
@@ -325,7 +329,7 @@ class SourceFileApi
      * @param  \SplFileObject $source_file The file of the source content for the request(s). *Note*: \&quot;Try it out\&quot; for this method on developers.lionbridge.com is currently not functioning. To test this method, use the cURL sample on https://bitbucket.org/liox-ondemand/liox-content-api-client/src/master/curl/File%20Workflow (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdUploadPostRequest($authorization, $job_id, $file_name, $file_type, $source_file)
     {
@@ -414,7 +418,7 @@ class SourceFileApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -429,11 +433,11 @@ class SourceFileApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -456,7 +460,7 @@ class SourceFileApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/StatusUpdateApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/StatusUpdateApi.php
index 84c99a3..ef24690 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/StatusUpdateApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/StatusUpdateApi.php
@@ -28,6 +28,12 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate;
+use GuzzleHttp\Promise\PromiseInterface;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateListener;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -110,9 +116,9 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate[]
+     * @return StatusUpdate[]
      */
     public function jobsJobIdStatusupdatesGet($authorization)
     {
@@ -128,7 +134,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -229,7 +235,7 @@ class StatusUpdateApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdStatusupdatesGetAsync($authorization, $job_id)
     {
@@ -250,7 +256,7 @@ class StatusUpdateApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdStatusupdatesGetAsyncWithHttpInfo($authorization)
     {
@@ -301,7 +307,7 @@ class StatusUpdateApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdStatusupdatesGetRequest($authorization)
     {
@@ -359,7 +365,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -374,11 +380,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -410,7 +416,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -426,9 +432,9 @@ class StatusUpdateApi
      *
      * @param  string $authorization Oauth2 token (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate[]
+     * @return StatusUpdate[]
      */
     public function statusupdatesGet($authorization)
     {
@@ -443,7 +449,7 @@ class StatusUpdateApi
      *
      * @param  string $authorization Oauth2 token (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -544,7 +550,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesGetAsync($authorization)
     {
@@ -564,7 +570,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesGetAsyncWithHttpInfo($authorization)
     {
@@ -614,7 +620,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function statusupdatesGetRequest($authorization)
     {
@@ -658,7 +664,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -673,11 +679,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -709,7 +715,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -725,9 +731,9 @@ class StatusUpdateApi
      *
      * @param  string $authorization Oauth2 token (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener[]
+     * @return Listener[]
      */
     public function statusupdatesListenersGet($authorization)
     {
@@ -742,7 +748,7 @@ class StatusUpdateApi
      *
      * @param  string $authorization Oauth2 token (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -842,7 +848,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersGetAsync($authorization)
     {
@@ -862,7 +868,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersGetAsyncWithHttpInfo($authorization)
     {
@@ -912,7 +918,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function statusupdatesListenersGetRequest($authorization)
     {
@@ -956,7 +962,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -971,11 +977,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1007,7 +1013,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1024,9 +1030,9 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $listener_id The ID of the specified Listener. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener
+     * @return Listener
      */
     public function statusupdatesListenersListenerIdDelete($authorization, $listener_id)
     {
@@ -1042,7 +1048,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $listener_id The ID of the specified Listener. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener, HTTP status code, HTTP response headers (array of strings)
      */
@@ -1151,7 +1157,7 @@ class StatusUpdateApi
      * @param  string $listener_id The ID of the specified Listener. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersListenerIdDeleteAsync($authorization, $listener_id)
     {
@@ -1172,7 +1178,7 @@ class StatusUpdateApi
      * @param  string $listener_id The ID of the specified Listener. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersListenerIdDeleteAsyncWithHttpInfo($authorization, $listener_id)
     {
@@ -1223,7 +1229,7 @@ class StatusUpdateApi
      * @param  string $listener_id The ID of the specified Listener. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function statusupdatesListenersListenerIdDeleteRequest($authorization, $listener_id)
     {
@@ -1281,7 +1287,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1296,11 +1302,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1332,7 +1338,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'DELETE',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1349,9 +1355,9 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $listener_id The ID of the Listener being queried. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener
+     * @return Listener
      */
     public function statusupdatesListenersListenerIdGet($authorization, $listener_id)
     {
@@ -1367,7 +1373,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $listener_id The ID of the Listener being queried. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener, HTTP status code, HTTP response headers (array of strings)
      */
@@ -1476,7 +1482,7 @@ class StatusUpdateApi
      * @param  string $listener_id The ID of the Listener being queried. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersListenerIdGetAsync($authorization, $listener_id)
     {
@@ -1497,7 +1503,7 @@ class StatusUpdateApi
      * @param  string $listener_id The ID of the Listener being queried. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersListenerIdGetAsyncWithHttpInfo($authorization, $listener_id)
     {
@@ -1548,7 +1554,7 @@ class StatusUpdateApi
      * @param  string $listener_id The ID of the Listener being queried. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function statusupdatesListenersListenerIdGetRequest($authorization, $listener_id)
     {
@@ -1606,7 +1612,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1621,11 +1627,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1651,7 +1657,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1666,11 +1672,11 @@ class StatusUpdateApi
      * Create a new Listener.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateListener $body Created Listener object (required)
+     * @param CreateListener $body Created Listener object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener
+     * @return Listener
      */
     public function statusupdatesListenersPost($authorization, $body)
     {
@@ -1684,9 +1690,9 @@ class StatusUpdateApi
      * Create a new Listener.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateListener $body Created Listener object (required)
+     * @param CreateListener $body Created Listener object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Listener, HTTP status code, HTTP response headers (array of strings)
      */
@@ -1784,10 +1790,10 @@ class StatusUpdateApi
      * Create a new Listener.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateListener $body Created Listener object (required)
+     * @param CreateListener $body Created Listener object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersPostAsync($authorization, $body)
     {
@@ -1805,10 +1811,10 @@ class StatusUpdateApi
      * Create a new Listener.
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateListener $body Created Listener object (required)
+     * @param CreateListener $body Created Listener object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesListenersPostAsyncWithHttpInfo($authorization, $body)
     {
@@ -1856,10 +1862,10 @@ class StatusUpdateApi
      * Create request for operation 'statusupdatesListenersPost'
      *
      * @param  string $authorization Oauth2 token (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateListener $body Created Listener object (required)
+     * @param CreateListener $body Created Listener object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function statusupdatesListenersPostRequest($authorization, $body)
     {
@@ -1912,7 +1918,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1927,11 +1933,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1957,7 +1963,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1974,9 +1980,9 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate
+     * @return StatusUpdate
      */
     public function statusupdatesUpdateIdAcknowledgePut($authorization, $update_id)
     {
@@ -1992,7 +1998,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate, HTTP status code, HTTP response headers (array of strings)
      */
@@ -2101,7 +2107,7 @@ class StatusUpdateApi
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesUpdateIdAcknowledgePutAsync($authorization, $update_id)
     {
@@ -2122,7 +2128,7 @@ class StatusUpdateApi
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesUpdateIdAcknowledgePutAsyncWithHttpInfo($authorization, $update_id)
     {
@@ -2173,7 +2179,7 @@ class StatusUpdateApi
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function statusupdatesUpdateIdAcknowledgePutRequest($authorization, $update_id)
     {
@@ -2231,7 +2237,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2246,11 +2252,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2282,7 +2288,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -2299,9 +2305,9 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate
+     * @return StatusUpdate
      */
     public function statusupdatesUpdateIdAcknowledgePutCtt($authorization, $update_id)
     {
@@ -2317,7 +2323,7 @@ class StatusUpdateApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusUpdate, HTTP status code, HTTP response headers (array of strings)
      */
@@ -2426,7 +2432,7 @@ class StatusUpdateApi
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesUpdateIdAcknowledgePutAsyncCtt($authorization, $update_id)
     {
@@ -2447,7 +2453,7 @@ class StatusUpdateApi
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function statusupdatesUpdateIdAcknowledgePutAsyncWithHttpInfoCtt($authorization, $update_id)
     {
@@ -2498,7 +2504,7 @@ class StatusUpdateApi
      * @param  string $update_id The ID of the status update being acknowledged. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function statusupdatesUpdateIdAcknowledgePutRequestCtt($authorization, $update_id)
     {
@@ -2556,7 +2562,7 @@ class StatusUpdateApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -2571,11 +2577,11 @@ class StatusUpdateApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -2607,7 +2613,7 @@ class StatusUpdateApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'PUT',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/SupportAssetApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/SupportAssetApi.php
index baa9517..65d741e 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/SupportAssetApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/SupportAssetApi.php
@@ -28,6 +28,11 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\SupportAsset;
+use GuzzleHttp\Promise\PromiseInterface;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateSupportAsset;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -110,9 +115,9 @@ class SupportAssetApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\SupportAsset[]
+     * @return SupportAsset[]
      */
     public function jobsJobIdSupportassetsGet($authorization, $job_id)
     {
@@ -128,7 +133,7 @@ class SupportAssetApi
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\SupportAsset[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -237,7 +242,7 @@ class SupportAssetApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsGetAsync($authorization, $job_id)
     {
@@ -258,7 +263,7 @@ class SupportAssetApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsGetAsyncWithHttpInfo($authorization, $job_id)
     {
@@ -309,7 +314,7 @@ class SupportAssetApi
      * @param  string $job_id The ID of the specified job. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdSupportassetsGetRequest($authorization, $job_id)
     {
@@ -367,7 +372,7 @@ class SupportAssetApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -382,11 +387,11 @@ class SupportAssetApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -412,7 +417,7 @@ class SupportAssetApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -428,11 +433,11 @@ class SupportAssetApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateSupportAsset $body Created Support Asset object (required)
+     * @param CreateSupportAsset $body Created Support Asset object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\SupportAsset
+     * @return SupportAsset
      */
     public function jobsJobIdSupportassetsPost($authorization, $job_id, $body)
     {
@@ -447,9 +452,9 @@ class SupportAssetApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateSupportAsset $body Created Support Asset object (required)
+     * @param CreateSupportAsset $body Created Support Asset object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\SupportAsset, HTTP status code, HTTP response headers (array of strings)
      */
@@ -556,10 +561,10 @@ class SupportAssetApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateSupportAsset $body Created Support Asset object (required)
+     * @param CreateSupportAsset $body Created Support Asset object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsPostAsync($authorization, $job_id, $body)
     {
@@ -578,10 +583,10 @@ class SupportAssetApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateSupportAsset $body Created Support Asset object (required)
+     * @param CreateSupportAsset $body Created Support Asset object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsPostAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -630,10 +635,10 @@ class SupportAssetApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id The ID of the specified job. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateSupportAsset $body Created Support Asset object (required)
+     * @param CreateSupportAsset $body Created Support Asset object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdSupportassetsPostRequest($authorization, $job_id, $body)
     {
@@ -700,7 +705,7 @@ class SupportAssetApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -715,11 +720,11 @@ class SupportAssetApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -745,7 +750,7 @@ class SupportAssetApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -763,7 +768,7 @@ class SupportAssetApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return void
      */
@@ -781,7 +786,7 @@ class SupportAssetApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of null, HTTP status code, HTTP response headers (array of strings)
      */
@@ -869,7 +874,7 @@ class SupportAssetApi
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsSupportassetIdDeleteAsync($authorization, $job_id, $supportasset_id)
     {
@@ -891,7 +896,7 @@ class SupportAssetApi
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsSupportassetIdDeleteAsyncWithHttpInfo($authorization, $job_id, $supportasset_id)
     {
@@ -929,7 +934,7 @@ class SupportAssetApi
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdSupportassetsSupportassetIdDeleteRequest($authorization, $job_id, $supportasset_id)
     {
@@ -1001,7 +1006,7 @@ class SupportAssetApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1016,11 +1021,11 @@ class SupportAssetApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1046,7 +1051,7 @@ class SupportAssetApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'DELETE',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
@@ -1064,9 +1069,9 @@ class SupportAssetApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\SupportAsset
+     * @return SupportAsset
      */
     public function jobsJobIdSupportassetsSupportassetIdGet($authorization, $job_id, $supportasset_id)
     {
@@ -1083,7 +1088,7 @@ class SupportAssetApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\SupportAsset, HTTP status code, HTTP response headers (array of strings)
      */
@@ -1193,7 +1198,7 @@ class SupportAssetApi
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsSupportassetIdGetAsync($authorization, $job_id, $supportasset_id)
     {
@@ -1215,7 +1220,7 @@ class SupportAssetApi
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdSupportassetsSupportassetIdGetAsyncWithHttpInfo($authorization, $job_id, $supportasset_id)
     {
@@ -1267,7 +1272,7 @@ class SupportAssetApi
      * @param  string $supportasset_id The ID of the support asset. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdSupportassetsSupportassetIdGetRequest($authorization, $job_id, $supportasset_id)
     {
@@ -1339,7 +1344,7 @@ class SupportAssetApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -1354,11 +1359,11 @@ class SupportAssetApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -1384,7 +1389,7 @@ class SupportAssetApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/TokenApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/TokenApi.php
index 9fde9ec..c71f78a 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/TokenApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/TokenApi.php
@@ -28,6 +28,11 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateToken;
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\Token;
+use GuzzleHttp\Promise\PromiseInterface;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -87,11 +92,11 @@ class TokenApi
      *
      * Get a new token.
      *
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateToken $body Created token object (required)
+     * @param CreateToken $body Created token object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Token
+     * @return Token
      */
     public function oauth2TokenPost($body)
     {
@@ -108,9 +113,9 @@ class TokenApi
      *
      * Get a new token.
      *
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateToken $body Created token object (required)
+     * @param CreateToken $body Created token object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\Token, HTTP status code, HTTP response headers (array of strings)
      */
@@ -199,10 +204,10 @@ class TokenApi
      *
      * Get a new token.
      *
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateToken $body Created token object (required)
+     * @param CreateToken $body Created token object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function oauth2TokenPostAsync($body)
     {
@@ -219,10 +224,10 @@ class TokenApi
      *
      * Get a new token.
      *
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateToken $body Created token object (required)
+     * @param CreateToken $body Created token object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function oauth2TokenPostAsyncWithHttpInfo($body)
     {
@@ -269,10 +274,10 @@ class TokenApi
     /**
      * Create request for operation 'oauth2TokenPost'
      *
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateToken $body Created token object (required)
+     * @param CreateToken $body Created token object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function oauth2TokenPostRequest($body)
     {
@@ -315,7 +320,7 @@ class TokenApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -330,11 +335,11 @@ class TokenApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -350,7 +355,7 @@ class TokenApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost1() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/TranslationContentApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/TranslationContentApi.php
index 672eed6..cd5148b 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/TranslationContentApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/TranslationContentApi.php
@@ -28,6 +28,10 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\TranslationContent;
+use GuzzleHttp\Promise\PromiseInterface;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -111,9 +115,9 @@ class TranslationContentApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\TranslationContent[]
+     * @return TranslationContent[]
      */
     public function jobsJobIdRequestsRequestIdRetrieveGet($authorization, $job_id, $request_id)
     {
@@ -130,7 +134,7 @@ class TranslationContentApi
      * @param  string $job_id The ID of the job. (required)
      * @param  string $request_id The ID of the translation request. (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of \Drupal\tmgmt_contentapi\Swagger\Client\Model\TranslationContent[], HTTP status code, HTTP response headers (array of strings)
      */
@@ -240,7 +244,7 @@ class TranslationContentApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdRetrieveGetAsync($authorization, $job_id, $request_id)
     {
@@ -262,7 +266,7 @@ class TranslationContentApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdRequestsRequestIdRetrieveGetAsyncWithHttpInfo($authorization, $job_id, $request_id)
     {
@@ -314,7 +318,7 @@ class TranslationContentApi
      * @param  string $request_id The ID of the translation request. (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdRequestsRequestIdRetrieveGetRequest($authorization, $job_id, $request_id)
     {
@@ -386,7 +390,7 @@ class TranslationContentApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -401,11 +405,11 @@ class TranslationContentApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -436,7 +440,7 @@ class TranslationContentApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'GET',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Api/TranslationMemoryApi.php b/tmgmt_contentapi/src/Swagger/Client/Api/TranslationMemoryApi.php
index 324e743..d47e340 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Api/TranslationMemoryApi.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Api/TranslationMemoryApi.php
@@ -28,6 +28,10 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client\Api;
 
+use Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestUpdateTM;
+use GuzzleHttp\Promise\PromiseInterface;
+use function GuzzleHttp\json_encode;
+use function GuzzleHttp\Psr7\build_query;
 use GuzzleHttp\Client;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\RequestException;
@@ -109,9 +113,9 @@ class TranslationMemoryApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestUpdateTM $body Request UpdateTM object (required)
+     * @param CreateRequestUpdateTM $body Request UpdateTM object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return void
      */
@@ -128,9 +132,9 @@ class TranslationMemoryApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestUpdateTM $body Request UpdateTM object (required)
+     * @param CreateRequestUpdateTM $body Request UpdateTM object (required)
      *
-     * @throws \Drupal\tmgmt_contentapi\Swagger\Client\ApiException on non-2xx response
+     * @throws ApiException on non-2xx response
      * @throws \InvalidArgumentException
      * @return array of null, HTTP status code, HTTP response headers (array of strings)
      */
@@ -229,10 +233,10 @@ class TranslationMemoryApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestUpdateTM $body Request UpdateTM object (required)
+     * @param CreateRequestUpdateTM $body Request UpdateTM object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdTmUpdatefilePutAsync($authorization, $job_id, $body)
     {
@@ -251,10 +255,10 @@ class TranslationMemoryApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestUpdateTM $body Request UpdateTM object (required)
+     * @param CreateRequestUpdateTM $body Request UpdateTM object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Promise\PromiseInterface
+     * @return PromiseInterface
      */
     public function jobsJobIdTmUpdatefilePutAsyncWithHttpInfo($authorization, $job_id, $body)
     {
@@ -289,10 +293,10 @@ class TranslationMemoryApi
      *
      * @param  string $authorization Oauth2 token (required)
      * @param  string $job_id Job ID. (required)
-     * @param  \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateRequestUpdateTM $body Request UpdateTM object (required)
+     * @param CreateRequestUpdateTM $body Request UpdateTM object (required)
      *
      * @throws \InvalidArgumentException
-     * @return \GuzzleHttp\Psr7\Request
+     * @return Request
      */
     protected function jobsJobIdTmUpdatefilePutRequest($authorization, $job_id, $body)
     {
@@ -359,7 +363,7 @@ class TranslationMemoryApi
             $httpBody = $_tempBody;
             // \stdClass has no __toString(), so we should encode it manually
             if ($httpBody instanceof \stdClass && $headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($httpBody);
+                $httpBody = json_encode($httpBody);
             }
         } elseif (count($formParams) > 0) {
             if ($multipart) {
@@ -374,11 +378,11 @@ class TranslationMemoryApi
                 $httpBody = new MultipartStream($multipartContents);
 
             } elseif ($headers['Content-Type'] === 'application/json') {
-                $httpBody = \GuzzleHttp\json_encode($formParams);
+                $httpBody = json_encode($formParams);
 
             } else {
                 // for HTTP post (form)
-                $httpBody = \GuzzleHttp\Psr7\build_query($formParams);
+                $httpBody = build_query($formParams);
             }
         }
 
@@ -410,7 +414,7 @@ class TranslationMemoryApi
             $headers
         );
 
-        $query = \GuzzleHttp\Psr7\build_query($queryParams);
+        $query = build_query($queryParams);
         return new Request(
             'POST',
             $this->config->getHost() . $resourcePath . ($query ? "?{$query}" : ''),
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/Capabilities.php b/tmgmt_contentapi/src/Swagger/Client/Model/Capabilities.php
index 2a9936c..f6d255c 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/Capabilities.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/Capabilities.php
@@ -267,7 +267,7 @@ class Capabilities implements ModelInterface, ArrayAccess
     /**
      * Gets supported_languages
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\LanguagePairs[]
+     * @return LanguagePairs[]
      */
     public function getSupportedLanguages()
     {
@@ -277,7 +277,7 @@ class Capabilities implements ModelInterface, ArrayAccess
     /**
      * Sets supported_languages
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\LanguagePairs[] $supported_languages A list of supported source/target languages.
+     * @param LanguagePairs[] $supported_languages A list of supported source/target languages.
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/CreateListener.php b/tmgmt_contentapi/src/Swagger/Client/Model/CreateListener.php
index 3a3d837..bea4923 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/CreateListener.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/CreateListener.php
@@ -292,7 +292,7 @@ class CreateListener implements ModelInterface, ArrayAccess
     /**
      * Gets type
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerTypeEnum
+     * @return ListenerTypeEnum
      */
     public function getType()
     {
@@ -302,7 +302,7 @@ class CreateListener implements ModelInterface, ArrayAccess
     /**
      * Sets type
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerTypeEnum $type type
+     * @param ListenerTypeEnum $type type
      *
      * @return $this
      */
@@ -316,7 +316,7 @@ class CreateListener implements ModelInterface, ArrayAccess
     /**
      * Gets status_codes
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum[]
+     * @return StatusCodeEnum[]
      */
     public function getStatusCodes()
     {
@@ -326,7 +326,7 @@ class CreateListener implements ModelInterface, ArrayAccess
     /**
      * Sets status_codes
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum[] $status_codes Status code types that you wish to monitor. If none specified, then all will be monitored.
+     * @param StatusCodeEnum[] $status_codes Status code types that you wish to monitor. If none specified, then all will be monitored.
      *
      * @return $this
      */
@@ -340,7 +340,7 @@ class CreateListener implements ModelInterface, ArrayAccess
     /**
      * Gets auth_type
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerAuthEnum
+     * @return ListenerAuthEnum
      */
     public function getAuthType()
     {
@@ -350,7 +350,7 @@ class CreateListener implements ModelInterface, ArrayAccess
     /**
      * Sets auth_type
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerAuthEnum $auth_type Authentication type for listener, if left empty then CTT_GENERATED_TOKEN will be used.
+     * @param ListenerAuthEnum $auth_type Authentication type for listener, if left empty then CTT_GENERATED_TOKEN will be used.
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/Job.php b/tmgmt_contentapi/src/Swagger/Client/Model/Job.php
index 70ccf3b..c2eebe4 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/Job.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/Job.php
@@ -390,7 +390,7 @@ class Job implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode
+     * @return StatusCode
      */
     public function getStatusCode()
     {
@@ -400,7 +400,7 @@ class Job implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode $status_code status_code
+     * @param StatusCode $status_code status_code
      *
      * @return $this
      */
@@ -654,7 +654,7 @@ class Job implements ModelInterface, ArrayAccess
     /**
      * Gets job_stats
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\JobStats
+     * @return JobStats
      */
     public function getJobStats()
     {
@@ -664,7 +664,7 @@ class Job implements ModelInterface, ArrayAccess
     /**
      * Sets job_stats
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\JobStats $job_stats job_stats
+     * @param JobStats $job_stats job_stats
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/JobCtt.php b/tmgmt_contentapi/src/Swagger/Client/Model/JobCtt.php
index bd0c5df..3ae32a0 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/JobCtt.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/JobCtt.php
@@ -393,7 +393,7 @@ class JobCtt implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode
+     * @return StatusCode
      */
     public function getStatusCode()
     {
@@ -403,7 +403,7 @@ class JobCtt implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode $status_code status_code
+     * @param StatusCode $status_code status_code
      *
      * @return $this
      */
@@ -657,7 +657,7 @@ class JobCtt implements ModelInterface, ArrayAccess
     /**
      * Gets job_stats
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\JobStats
+     * @return JobStats
      */
     public function getJobStats()
     {
@@ -667,7 +667,7 @@ class JobCtt implements ModelInterface, ArrayAccess
     /**
      * Sets job_stats
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\JobStats $job_stats job_stats
+     * @param JobStats $job_stats job_stats
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/Listener.php b/tmgmt_contentapi/src/Swagger/Client/Model/Listener.php
index 71e7750..6dfd728 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/Listener.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/Listener.php
@@ -328,7 +328,7 @@ class Listener implements ModelInterface, ArrayAccess
     /**
      * Gets type
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerTypeEnum
+     * @return ListenerTypeEnum
      */
     public function getType()
     {
@@ -338,7 +338,7 @@ class Listener implements ModelInterface, ArrayAccess
     /**
      * Sets type
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerTypeEnum $type type
+     * @param ListenerTypeEnum $type type
      *
      * @return $this
      */
@@ -352,7 +352,7 @@ class Listener implements ModelInterface, ArrayAccess
     /**
      * Gets status_codes
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum[]
+     * @return StatusCodeEnum[]
      */
     public function getStatusCodes()
     {
@@ -362,7 +362,7 @@ class Listener implements ModelInterface, ArrayAccess
     /**
      * Sets status_codes
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum[] $status_codes Status code types that you wish to monitor. If none specified, then all will be monitored.
+     * @param StatusCodeEnum[] $status_codes Status code types that you wish to monitor. If none specified, then all will be monitored.
      *
      * @return $this
      */
@@ -376,7 +376,7 @@ class Listener implements ModelInterface, ArrayAccess
     /**
      * Gets auth_type
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerAuthEnum
+     * @return ListenerAuthEnum
      */
     public function getAuthType()
     {
@@ -386,7 +386,7 @@ class Listener implements ModelInterface, ArrayAccess
     /**
      * Sets auth_type
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\ListenerAuthEnum $auth_type Authentication type for listener, if left empty then CTT_GENERATED_TOKEN will be used.
+     * @param ListenerAuthEnum $auth_type Authentication type for listener, if left empty then CTT_GENERATED_TOKEN will be used.
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/ListenerRequest.php b/tmgmt_contentapi/src/Swagger/Client/Model/ListenerRequest.php
index cccf488..91e01f5 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/ListenerRequest.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/ListenerRequest.php
@@ -311,7 +311,7 @@ class ListenerRequest implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum
+     * @return StatusCodeEnum
      */
     public function getStatusCode()
     {
@@ -321,7 +321,7 @@ class ListenerRequest implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum $status_code status_code
+     * @param StatusCodeEnum $status_code status_code
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/Provider.php b/tmgmt_contentapi/src/Swagger/Client/Model/Provider.php
index 6f08720..dcf475c 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/Provider.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/Provider.php
@@ -267,7 +267,7 @@ class Provider implements ModelInterface, ArrayAccess
   /**
    * Gets capabilities
    *
-   * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\Capabilities
+   * @return Capabilities
    */
   public function getCapabilities()
   {
@@ -277,7 +277,7 @@ class Provider implements ModelInterface, ArrayAccess
   /**
    * Sets capabilities
    *
-   * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\Capabilities $capabilities capabilities
+   * @param Capabilities $capabilities capabilities
    *
    * @return $this
    */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/Request.php b/tmgmt_contentapi/src/Swagger/Client/Model/Request.php
index 1c5105a..ce3ad6a 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/Request.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/Request.php
@@ -414,7 +414,7 @@ class Request implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode
+     * @return StatusCode
      */
     public function getStatusCode()
     {
@@ -424,7 +424,7 @@ class Request implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode $status_code status_code
+     * @param StatusCode $status_code status_code
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/RequestCtt.php b/tmgmt_contentapi/src/Swagger/Client/Model/RequestCtt.php
index 4376ea1..89bb718 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/RequestCtt.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/RequestCtt.php
@@ -400,7 +400,7 @@ class RequestCtt implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode
+     * @return StatusCode
      */
     public function getStatusCode()
     {
@@ -410,7 +410,7 @@ class RequestCtt implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode $status_code status_code
+     * @param StatusCode $status_code status_code
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/StatusCode.php b/tmgmt_contentapi/src/Swagger/Client/Model/StatusCode.php
index 35be604..47614de 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/StatusCode.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/StatusCode.php
@@ -209,7 +209,7 @@ class StatusCode implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum
+     * @return StatusCodeEnum
      */
     public function getStatusCode()
     {
@@ -219,7 +219,7 @@ class StatusCode implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCodeEnum $status_code status_code
+     * @param StatusCodeEnum $status_code status_code
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdate.php b/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdate.php
index 4344108..0296e9d 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdate.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdate.php
@@ -346,7 +346,7 @@ class StatusUpdate implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode
+     * @return StatusCode
      */
     public function getStatusCode()
     {
@@ -356,7 +356,7 @@ class StatusUpdate implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode $status_code status_code
+     * @param StatusCode $status_code status_code
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdateCtt.php b/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdateCtt.php
index f81dae0..bc7e768 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdateCtt.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/StatusUpdateCtt.php
@@ -346,7 +346,7 @@ class StatusUpdateCtt implements ModelInterface, ArrayAccess
     /**
      * Gets status_code
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode
+     * @return StatusCode
      */
     public function getStatusCode()
     {
@@ -356,7 +356,7 @@ class StatusUpdateCtt implements ModelInterface, ArrayAccess
     /**
      * Sets status_code
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\StatusCode $status_code status_code
+     * @param StatusCode $status_code status_code
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/Model/TranslationContent.php b/tmgmt_contentapi/src/Swagger/Client/Model/TranslationContent.php
index 01b0619..bcf6e83 100644
--- a/tmgmt_contentapi/src/Swagger/Client/Model/TranslationContent.php
+++ b/tmgmt_contentapi/src/Swagger/Client/Model/TranslationContent.php
@@ -364,7 +364,7 @@ class TranslationContent implements ModelInterface, ArrayAccess
     /**
      * Gets structured_content
      *
-     * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\KeyValuePair[]
+     * @return KeyValuePair[]
      */
     public function getStructuredContent()
     {
@@ -374,7 +374,7 @@ class TranslationContent implements ModelInterface, ArrayAccess
     /**
      * Sets structured_content
      *
-     * @param \Drupal\tmgmt_contentapi\Swagger\Client\Model\KeyValuePair[] $structured_content structured_content
+     * @param KeyValuePair[] $structured_content structured_content
      *
      * @return $this
      */
diff --git a/tmgmt_contentapi/src/Swagger/Client/ObjectSerializer.php b/tmgmt_contentapi/src/Swagger/Client/ObjectSerializer.php
index 55a407a..ecb109d 100644
--- a/tmgmt_contentapi/src/Swagger/Client/ObjectSerializer.php
+++ b/tmgmt_contentapi/src/Swagger/Client/ObjectSerializer.php
@@ -29,6 +29,7 @@
 
 namespace Drupal\tmgmt_contentapi\Swagger\Client;
 
+use Psr\Http\Message\StreamInterface;
 /**
  * ObjectSerializer Class Doc Comment
  *
@@ -266,8 +267,7 @@ class ObjectSerializer
             settype($data, $class);
             return $data;
         } elseif ($class === '\SplFileObject') {
-            /** @var \Psr\Http\Message\StreamInterface $data */
-
+            /** @var StreamInterface $data */
             // determine file name
             if (array_key_exists('Content-Disposition', $httpHeaders) &&
                 preg_match('/inline; filename=[\'"]?([^\'"\s]+)[\'"]?$/i', $httpHeaders['Content-Disposition'], $match)) {
diff --git a/tmgmt_contentapi/src/Util/ConentApiHelper.php b/tmgmt_contentapi/src/Util/ConentApiHelper.php
index 8b82c5e..5c3ef4a 100644
--- a/tmgmt_contentapi/src/Util/ConentApiHelper.php
+++ b/tmgmt_contentapi/src/Util/ConentApiHelper.php
@@ -72,7 +72,7 @@ class ConentApiHelper {
    * @param \Drupal\tmgmt\JobInterface $job
    *   Job.
    *
-   * @return \Drupal\tmgmt_contentapi\Swagger\Client\Model\CreateJob
+   * @return CreateJob
    *   Job.
    */
   public static function genrateJobRequst(JobInterface $job) {
diff --git a/tmgmt_contentapi/src/Util/GeneralHelper.php b/tmgmt_contentapi/src/Util/GeneralHelper.php
index 076381a..6ee9622 100644
--- a/tmgmt_contentapi/src/Util/GeneralHelper.php
+++ b/tmgmt_contentapi/src/Util/GeneralHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\tmgmt_contentapi\Util;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\tmgmt\Entity\JobItem;
 use Drupal\file\FileInterface;
 use Drupal\tmgmt\Entity\Job;
 use Drupal\tmgmt\JobInterface;
@@ -107,7 +109,7 @@ class GeneralHelper {
    * @param \Drupal\tmgmt\TranslatorInterface $translator
    *   TranslatorInterface.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   A storage instance.
    */
   public static function getAllJobsByTranslator(TranslatorInterface $translator){
@@ -144,7 +146,7 @@ class GeneralHelper {
    *
    * @param \Drupal\tmgmt\JobInterface $job
    *   TranslatorInterface.
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   TranslatorInterface.
    */
   public static function resetJobandItemsToActive(JobInterface &$job, FileInterface $file){
@@ -161,7 +163,7 @@ class GeneralHelper {
       $groups = $loadedxml->xpath("//xliff:group[@id='" . $tjiid ."']");
       if(count($groups) == 1){
         $item->setState(Job::STATE_ACTIVE);
-        $job->setState(\Drupal\tmgmt\Entity\JobItem::STATE_ACTIVE);
+        $job->setState(JobItem::STATE_ACTIVE);
       }
     }
   }
diff --git a/tmgmt_contentapi/tmgmt_contentapi.module b/tmgmt_contentapi/tmgmt_contentapi.module
index 5a0550b..094e4b3 100644
--- a/tmgmt_contentapi/tmgmt_contentapi.module
+++ b/tmgmt_contentapi/tmgmt_contentapi.module
@@ -1,4 +1,11 @@
-<?php /** @noinspection PhpUnusedParameterInspection */
+<?php use Drupal\Core\Render\Markup;
+use Drupal\tmgmt_contentapi\Swagger\Client\ApiException;
+use Drupal\views\ViewExecutable;
+use Drupal\Core\Link;
+use Drupal\Core\Url;
+use Drupal\tmgmt\TranslatorPluginInterface;
+use Drupal\Core\Entity\EntityInterface;
+/** @noinspection PhpUnusedParameterInspection */
 
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Component\Utility\Xss;
@@ -135,7 +142,7 @@ function tmgmt_contentapi_update_tm_form_submit(array $form, FormStateInterface
           $labelname = $joblabel;
           $name = $labelname . "_" . $job->id() . "_all_"  . $job->getRemoteSourceLanguage() . '_' . $job->getRemoteTargetLanguage() . '.xlf';
           $jobpath = $allfilespath . "/" . $name;
-          $file = file_save_data($exporter->export($job), $jobpath, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+          $file = \Drupal::service('file.repository')->writeData($exporter->export($job), $jobpath, FileSystemInterface::EXISTS_REPLACE);
           $filearraytodelte[] = $file;
           $filearrayexportedfiles['all'] = $file;
         }
@@ -145,7 +152,7 @@ function tmgmt_contentapi_update_tm_form_submit(array $form, FormStateInterface
             $labelname = GeneralHelper::getStringNoSpeChars($item->label());
             $name = $labelname . "_" . $job->id() . "_" . $item->id() . "_" . $job->getRemoteSourceLanguage() . '_' . $job->getRemoteTargetLanguage() . '.xlf';
             $itempath = $allfilespath . "/" . $name;
-            $file = file_save_data($exporter->exportItem($item), $itempath, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+            $file = \Drupal::service('file.repository')->writeData($exporter->exportItem($item), $itempath, FileSystemInterface::EXISTS_REPLACE);
             $filearraytodelte[] = $file;
             $filearrayexportedfiles[$item->id()] = $file;
           }
@@ -217,8 +224,8 @@ function tmgmt_contentapi_update_tm_form_submit(array $form, FormStateInterface
         foreach ($filearraytodelte as $tempfile) {
           \Drupal::service('file_system')->delete($tempfile->getFileUri());
         }
-        $messageTopass .= '<a href="' . file_create_url($zipPath) . '">' . Xss::filter(GeneralHelper::getJobLabelNoSpeChars($job)) . '</a>';
-        \Drupal::messenger()->addMessage(\Drupal\Core\Render\Markup::create($messageTopass));
+        $messageTopass .= '<a href="' . \Drupal::service('file_url_generator')->generateAbsoluteString($zipPath) . '">' . Xss::filter(GeneralHelper::getJobLabelNoSpeChars($job)) . '</a>';
+        \Drupal::messenger()->addMessage(Markup::create($messageTopass));
       }
       else {
         throw new \Exception("Could not create directory for export: " . $allfilespath);
@@ -259,7 +266,7 @@ function tmgmt_contentapi_import(JobInterface $job,$filedatastring,$name){
     $dirname = dirname($path);
     //\Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY);
     if (\Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY)) {
-      $file = file_save_data($filedatastring, $path, \Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($filedatastring, $path, FileSystemInterface::EXISTS_REPLACE);
       $mimetype = $file->getMimeType();//\Drupal::service('file.mime_type.guesser')->guess($path);
       $filearray = null;
       if ($mimetype == 'application/zip') {
@@ -270,7 +277,7 @@ function tmgmt_contentapi_import(JobInterface $job,$filedatastring,$name){
           if ($ziparchive->extractTo(\Drupal::service('file_system')->realpath($pathtoextract))) {
             $ziparchive->close();
             $file->delete();
-            $filearray = CpcreateFileObjectFromStdClass(file_scan_directory($pathtoextract, '/.*\.xlf$/'));
+            $filearray = CpcreateFileObjectFromStdClass(\Drupal::service('file_system')->scanDirectory($pathtoextract, '/.*\.xlf$/'));
           }
 
         }
@@ -591,13 +598,13 @@ function tmgmt_contentapi_fix_older_jobs($cttToken){
       $capijobid = isset($requestobjs[0]) && count($requestobjs) > 0 ? $requestobjs[0]->getJobId() : NULL;
     }
     
-    if($capijobid != NULL && $job->getState() > \Drupal\tmgmt\Entity\Job::STATE_UNPROCESSED) {
+    if($capijobid != NULL && $job->getState() > Job::STATE_UNPROCESSED) {
      $jobapi = new JobApi();  
      $capiVersion = 1;
      $projectInfo = $jobapi->jobsJobIdGetCtt($cttToken, $capijobid, "fullWithStats");
      $provider = $projectInfo->getProviderId();
      $jobstatus = 'IMPORTED';//$projectInfo->getStatusCode()->getStatusCode();
-     \Drupal\tmgmt_contentapi\Util\ConentApiHelper::capiJobSetStoredData($job, ['jobId' => $capijobid ,'jobStatus' => $jobstatus, 'providerId' => $provider, 'jobType' => $capiVersion]);
+     ConentApiHelper::capiJobSetStoredData($job, ['jobId' => $capijobid ,'jobStatus' => $jobstatus, 'providerId' => $provider, 'jobType' => $capiVersion]);
     }
   }
 }
@@ -674,7 +681,7 @@ function tmgmt_contentapi_downlaod_data_from_contentapi_by_job($capiToken, $cttT
   }
   catch (Exception $exception){
     $respbody = $exception->getMessage();
-    if($exception instanceof \Drupal\tmgmt_contentapi\Swagger\Client\ApiException){
+    if($exception instanceof ApiException){
       $respbody = $exception->getResponseBody();
     }
     $respbody = 'An error occured while fetching and importing files: '.$respbody;
@@ -793,7 +800,7 @@ function tmgtm_contentapi_file_download($uri) {
     ->condition('uri', $uri)
     ->execute();
   if ($fids) {
-    $files = \Drupal\file\Entity\File::loadMultiple($fids);
+    $files = File::loadMultiple($fids);
     foreach ($files as $item) {
       // Since some database servers sometimes use a case-insensitive comparison
       // by default, double check that the filename is an exact match.
@@ -908,7 +915,7 @@ function tmgmt_contentapi_tmgmt_job_delete(JobInterface $job) {
 }
 
 
-function tmgmt_contentapi_views_pre_view(Drupal\views\ViewExecutable $view) {
+function tmgmt_contentapi_views_pre_view(ViewExecutable $view) {
 
   if ($view->id() == 'tmgmt_job_overview') {
     $deliveryhtml = '';
@@ -1020,7 +1027,7 @@ function CpprocessHtmlForJoboverview(&$view){
       global $base_url;
       // Using Id here, as job label returns @title@title and @more more.
       $joblable = GeneralHelper::getJobLabel($job);
-      $pass_link = \Drupal::l(t($joblable), \Drupal\Core\Url::fromUri($base_url . '/admin/tmgmt/jobs/' . $jobid['value']));
+      $pass_link = Link::fromTextAndUrl(t($joblable), Url::fromUri($base_url . '/admin/tmgmt/jobs/' . $jobid['value']));
       $currentlink = $pass_link->getGeneratedLink();
 
       $deliveryhtml .= '<li>'.$currentlink .'</li>';
@@ -1050,7 +1057,7 @@ function CpcreateFileObjectFromStdClass($filearray){
 }
 
 
-function tmgmt_contentapi_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
+function tmgmt_contentapi_form_alter(&$form, FormStateInterface $form_state, $form_id){
   /*
   $myForm = $form;
   if($form_id == 'views_exposed_form'){
@@ -1229,7 +1236,7 @@ function setValidator(&$form, FormStateInterface &$form_state){
   }
 }
 
-function canCustomTranslate(TranslatorInterface $translator, JobInterface $job, \Drupal\tmgmt\TranslatorPluginInterface $plugin) {
+function canCustomTranslate(TranslatorInterface $translator, JobInterface $job, TranslatorPluginInterface $plugin) {
   $job_state = $job->getState();
   $capisettings = $translator->getSetting('capi-settings');
   $capi = new TokenApi();
@@ -1317,7 +1324,7 @@ function tmgmt_contentapi_check_empty_file($form,&$form_state){
   }
 }
 
-function tmgmt_contentapi_entity_operation_alter(array &$operations,\Drupal\Core\Entity\EntityInterface  $entity) {
+function tmgmt_contentapi_entity_operation_alter(array &$operations,EntityInterface  $entity) {
   /*
   $newop = $operations['manage'];
   if(!isset($operations['updatestatus'])){
@@ -1471,7 +1478,7 @@ function getProviderCtt($token, $providerId){
             $msg = substr($msg,0,200);
       }
       \Drupal::messenger()->addMessage($msg);
-		
+
       //\Drupal::messenger()->addMessage($e->getMessage());
     }
   }
