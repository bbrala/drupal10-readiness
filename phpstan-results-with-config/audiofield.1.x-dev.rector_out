modules/contrib/audiofield/audiofield.install
modules/contrib/audiofield/audiofield.module
modules/contrib/audiofield/src/Annotation/AudioPlayer.php
modules/contrib/audiofield/src/AudioFieldPlayerManager.php
modules/contrib/audiofield/src/AudioFieldPluginBase.php
modules/contrib/audiofield/src/Commands/AudiofieldCommands.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/AudioJsAudioPlayer.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/DefaultMp3Player.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/JPlayerAudioPlayer.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/MediaElementAudioPlayer.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/ProjekktorAudioPlayer.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/SoundManagerAudioPlayer.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/WavesurferAudioPlayer.php
modules/contrib/audiofield/src/Plugin/AudioPlayer/WordPressAudioPlayer.php
modules/contrib/audiofield/src/Plugin/Field/FieldFormatter/AudioFieldFieldFormatter.php

7 files with changes
====================

1) modules/contrib/audiofield/src/Plugin/Field/FieldFormatter/AudioFieldFieldFormatter.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Audio player management service.
    *
-   * @var \Drupal\audiofield\AudioFieldPlayerManager
+   * @var AudioFieldPlayerManager
    */
   protected $audioPlayerManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/audiofield/src/Plugin/AudioPlayer/WavesurferAudioPlayer.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * Module handler service.
    *
-   * @var Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;

@@ @@

         // If the file exists, add it to the jQuery and template settings.
         if (file_exists($peakData['url'])) {
-          $renderInfo->peakpath = $fileSettings['peakpath'] = file_create_url($peakData['url']);
+          $renderInfo->peakpath = $fileSettings['peakpath'] = \Drupal::service('file_url_generator')->generateAbsoluteString($peakData['url']);
         }
       }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/audiofield/src/Commands/AudiofieldCommands.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Library discovery service.
    *
-   * @var Drupal\audiofield\AudioFieldPlayerManager
+   * @var AudioFieldPlayerManager
    */
   protected $playerManager;

@@ @@
   /**
    * Archive manager service.
    *
-   * @var Drupal\Core\Archiver\ArchiverManager
+   * @var ArchiverManager
    */
   protected $archiverManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/audiofield/src/AudioFieldPluginBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\audiofield;

+use Drupal\file\Plugin\Field\FieldType\FileItem;
+use Drupal\link\Plugin\Field\FieldType\LinkItem;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\file\FileInterface;
@@ @@
   /**
    * Library discovery service.
    *
-   * @var Drupal\Core\Asset\LibraryDiscovery
+   * @var LibraryDiscovery
    */
   protected $libraryDiscovery;

@@ @@
   /**
    * Messenger service.
    *
-   * @var Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * File System service.
    *
-   * @var Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Messenger service.
    *
-   * @var Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
   /**
    * Renders the player.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The uploaded item list.
    * @param string $langcode
    *   The language code.
@@ @@
   /**
    * Validate that a file entity will work with this player.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   A file entity.
    *
    * @return bool
@@ @@
   /**
    * Validate that a link entity will work with this player.
    *
-   * @param \Drupal\Core\Url $link
+   * @param Url $link
    *   Url to the link.
    *
    * @return bool
@@ @@
   /**
    * Get the class type for an entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are determining class type.
    *
    * @return string
@@ @@
   /**
    * Validate that this entity will work with this player.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item which we are validating works with the player.
    *
    * @return bool
@@ @@
   /**
    * Load a file from an audio file entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are loading the file entity.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   FileInterface from the item.
    */
   private function loadFileFromItem($item) {
@@ @@
   /**
    * Get a unique ID for an item.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are generating a unique ID.
    *
    * @return string
@@ @@
   /**
    * Get the filetype for an item.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are determining filetype.
    *
    * @return string
@@ @@
   /**
    * Get source URL from an audiofield entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are determining source.
    *
-   * @return \Drupal\Core\Url|string
+   * @return Url|string
    *   The source URL of an entity.
    */
   private function getAudioSource($item) {
@@ @@
       // Load the associated file.
       $file = $this->loadFileFromItem($item);
       // Get the file URL.
-      return Url::fromUri(file_create_url($file->getFileUri()));
+      return \Drupal::service('file_url_generator')->generate($file->getFileUri());
     }
     // Handle Link entity.
     elseif ($this->getClassType($item) == 'LinkItem') {
@@ @@
   /**
    * Get a title description from an audiofield entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which a title is being generated.
    *
    * @return string
@@ @@
   /**
    * Get required rendering information from an entity.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileItem|\Drupal\link\Plugin\Field\FieldType\LinkItem $item
+   * @param FileItem|LinkItem $item
    *   Item for which we are getting render information.
    *
    * @return object
@@ @@
   /**
    * Used to render a default player (for fallback).
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The uploaded item list.
    * @param array $settings
    *   An array of additional render settings.
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/audiofield/src/AudioFieldPlayerManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/audiofield/src/Annotation/AudioPlayer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\audiofield\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The audio player's title.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * The description of this audio player.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


7) modules/contrib/audiofield/audiofield.module:97

    ---------- begin diff ----------
@@ @@
    * By default, Drupal 8 does not include theme suggestions from inside the
    * module in which they were created, so we must add them manually here.
    */
-  $path = drupal_get_path('module', 'audiofield');
+  $path = \Drupal::service('extension.list.module')->getPath('audiofield');
   $audioplayer_templates = drupal_find_theme_templates($theme_registry, '.html.twig', $path);
   foreach ($audioplayer_templates as &$audioplayer_template) {
     $audioplayer_template['type'] = 'module';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

