modules/contrib/force_password_change/force_password_change.install
modules/contrib/force_password_change/force_password_change.module
modules/contrib/force_password_change/src/Controller/ForcePasswordChangeController.php
modules/contrib/force_password_change/src/Controller/ForcePasswordChangeControllerInterface.php
modules/contrib/force_password_change/src/Entity/User/ForcePasswordChangeRoleListBuilder.php
modules/contrib/force_password_change/src/EventSubscriber/ForcePasswordChangeConfigPostUpdateSubscriber.php
modules/contrib/force_password_change/src/EventSubscriber/ForcePasswordChangeEventSubscriber.php
modules/contrib/force_password_change/src/Form/AdminForm.php
modules/contrib/force_password_change/src/Form/RoleForceForm.php
modules/contrib/force_password_change/src/Mapper/ForcePasswordChangeMapper.php
modules/contrib/force_password_change/src/Mapper/ForcePasswordChangeMapperInterface.php
modules/contrib/force_password_change/src/Service/ForcePasswordChangeRedirectMiddleware.php
modules/contrib/force_password_change/src/Service/ForcePasswordChangeService.php
modules/contrib/force_password_change/src/Service/ForcePasswordChangeServiceInterface.php
modules/contrib/force_password_change/tests/modules/force_password_change_service_test/src/Service/ForcePasswordChangeServiceTest.php
modules/contrib/force_password_change/tests/src/Functional/ForcePasswordChangeAdminUiTest.php
modules/contrib/force_password_change/tests/src/Functional/ForcePasswordChangeBrowserTestBase.php
modules/contrib/force_password_change/tests/src/Unit/Service/ForcePasswordChangeServiceTest.php

10 files with changes
=====================

1) modules/contrib/force_password_change/tests/src/Unit/Service/ForcePasswordChangeServiceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\force_password_change\Unit\Service;

+use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Tests\UnitTestCase;
 use Drupal\force_password_change_service_test\Service\ForcePasswordChangeServiceTest as ForcePasswordChangeService;
@@ @@
   /**
    * The test container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;

@@ @@
     $this->container = new ContainerBuilder();
     \Drupal::setContainer($this->container);

-    $this->mapper = $this->getMockBuilder('\Drupal\force_password_change\Mapper\ForcePasswordChangeMapperInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->mapper = $this->createMock('\Drupal\force_password_change\Mapper\ForcePasswordChangeMapperInterface');
     $this->mapper->expects($this->any())
       ->method('getUserCreatedTime')
       ->willReturn(1000000);

-    $this->currentUser = $this->getMockBuilder('\Drupal\Core\Session\AccountProxyInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->currentUser = $this->createMock('\Drupal\Core\Session\AccountProxyInterface');
     $this->currentUser->expects($this->any())
       ->method('id')
       ->willReturn(1);
@@ @@
       ->method('getRoles')
       ->willReturn(['authenticated']);

-    $this->configFactory = $this->getMockBuilder('\Drupal\Core\Config\ConfigFactoryInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->configFactory = $this->createMock('\Drupal\Core\Config\ConfigFactoryInterface');

-    $this->userData = $this->getMockBuilder('\Drupal\user\UserDataInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->userData = $this->createMock('\Drupal\user\UserDataInterface');

-    $this->time = $this->getMockBuilder('\Drupal\Component\Datetime\TimeInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock('\Drupal\Component\Datetime\TimeInterface');
     $this->time->expects($this->any())
       ->method('getRequestTime')
       ->willReturn(1000101);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/force_password_change/src/Service/ForcePasswordChangeServiceInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\force_password_change\Service;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  *
  */
@@ @@
    * @param int $seconds
    *   The number of seconds to convert.
    *
-   * @return Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The amount of time in years, weeks, days or hours. The returned
    *   values is a translated string.
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/force_password_change/src/Service/ForcePasswordChangeService.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The force password change data mapper.
    *
-   * @var \Drupal\force_password_change\Mapper\ForcePasswordChangeMapperInterface
+   * @var ForcePasswordChangeMapperInterface
    */
   protected $mapper;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The config factory object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The config factory object.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * Constructs a ForcePasswordChangeService object.
    *
-   * @param \Drupal\force_password_change\Mapper\ForcePasswordChangeMapperInterface $mapper
+   * @param ForcePasswordChangeMapperInterface $mapper
    *   The force password change data mapper.
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
-   * @param \Drupal\user\UserDataInterface $userData
+   * @param UserDataInterface $userData
    *   The user data service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(ForcePasswordChangeMapperInterface $mapper, AccountProxyInterface $currentUser, ConfigFactoryInterface $configFactory, UserDataInterface $userData, TimeInterface $time) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/force_password_change/src/Service/ForcePasswordChangeRedirectMiddleware.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The wrapped HTTP kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;

@@ @@
   /**
    * The redirect URL.
    *
-   * @var \Symfony\Component\HttpFoundation\RedirectResponse
+   * @var RedirectResponse
    */
   protected $redirectResponse;

@@ @@
   /**
    * Constructs a RedirectMiddleware object.
    *
-   * @param \Symfony\Component\HttpKernel\HttpKernelInterface $http_kernel
+   * @param HttpKernelInterface $http_kernel
    *   The decorated kernel.
    */
   public function __construct(HttpKernelInterface $http_kernel) {
@@ @@
   /**
    * Stores the requested redirect response.
    *
-   * @param \Symfony\Component\HttpFoundation\RedirectResponse|null $redirectResponse
+   * @param RedirectResponse|null $redirectResponse
    *   Redirect response.
    */
   public function setRedirectResponse(?RedirectResponse $redirectResponse) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/force_password_change/src/Mapper/ForcePasswordChangeMapper.php:10

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * Constructs a ForcePasswordChangeMapper object.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(Connection $connection) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/force_password_change/src/Form/RoleForceForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory object.
    *
-   * @var Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The force password change service.
    *
-   * @var Drupal\force_password_change\Service\ForcePasswordChangeServiceInterface
+   * @var ForcePasswordChangeServiceInterface
    */
   protected $passwordChangeService;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs an AdminForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter service.
-   * @param Drupal\force_password_change\Service\ForcePasswordChangeServiceInterface $passwordChangeService
+   * @param ForcePasswordChangeServiceInterface $passwordChangeService
    *   The force password change service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, DateFormatterInterface $dateFormatter, ForcePasswordChangeServiceInterface $passwordChangeService) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/force_password_change/src/Form/AdminForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\force_password_change\Form;

+use Drupal\Core\Config\ConfigFactory;
+use Drupal\force_password_change\Service\ForcePasswordChangeService;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * The config factory object.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * The force password change service.
    *
-   * @var Drupal\force_password_change\Service\ForcePasswordChangeService
+   * @var ForcePasswordChangeService
    */
   protected $passwordChangeService;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * Constructs an AdminForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
-   * @param \Drupal\force_password_change\Service\ForcePasswordChangeServiceInterface $passwordChangeService
+   * @param ForcePasswordChangeServiceInterface $passwordChangeService
    *   The Force Password Change service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, ForcePasswordChangeServiceInterface $passwordChangeService, TimeInterface $time) {
@@ @@
         '#items' => $items,
       ];

-      $item_list = new FormattableMarkup('@item_list', ['@item_list' => render($list)]);
+      $item_list = new FormattableMarkup('@item_list', ['@item_list' => \Drupal::service('renderer')->render($list)]);
       // Set a message informing the user of the roles
       // that had a forced password change.
       if ($form_state->getValue('login_only')) {
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/force_password_change/src/EventSubscriber/ForcePasswordChangeEventSubscriber.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory object.
    *
-   * @var Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The current user.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The current path.
    *
-   * @var Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;

@@ @@
   /**
    * The force password change service.
    *
-   * @var Drupal\force_password_change\Service\ForcePasswordChangeServiceInterface
+   * @var ForcePasswordChangeServiceInterface
    */
   protected $passwordChangeService;

@@ @@
   /**
    * Creates an instance of the ForcePasswordChangeEventSubscriber class.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
-   * @param \Drupal\Core\Path\CurrentPathStack $currentPath
+   * @param CurrentPathStack $currentPath
    *   The current path.
-   * @param \Drupal\force_password_change\Service\ForcePasswordChangeServiceInterface $passwordChangeService
+   * @param ForcePasswordChangeServiceInterface $passwordChangeService
    *   The force password change service.
    */
   public function __construct(AccountProxyInterface $currentUser, ConfigFactoryInterface $configFactory, CurrentPathStack $currentPath, ForcePasswordChangeServiceInterface $passwordChangeService) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/force_password_change/src/EventSubscriber/ForcePasswordChangeConfigPostUpdateSubscriber.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory object.
    *
-   * @var Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The force password change service.
    *
-   * @var Drupal\force_password_change\Service\ForcePasswordChangeServiceInterface
+   * @var ForcePasswordChangeServiceInterface
    */
   protected $passwordChangeService;

@@ @@
   /**
    * Creates an instance of the ForcePasswordChangeEventSubscriber class.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
-   * @param \Drupal\force_password_change\Service\ForcePasswordChangeServiceInterface $passwordChangeService
+   * @param ForcePasswordChangeServiceInterface $passwordChangeService
    *   The force password change service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, ForcePasswordChangeServiceInterface $passwordChangeService) {
@@ @@
   /**
    * React to a config object being saved.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   Config crud event.
    */
   public function configSave(ConfigCrudEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/force_password_change/src/Controller/ForcePasswordChangeController.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * A form builder object.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * The config factory object.
    *
-   * @var \Drupal\user\UserData
+   * @var UserData
    */
   protected $userData;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\force_password_change\Service\ForcePasswordChangeService
+   * @var ForcePasswordChangeService
    */
   protected $forcePasswordChangeService;

@@ @@
   /**
    * Constructs a FriendController object.
    *
-   * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
+   * @param FormBuilderInterface $formBuilder
    *   The form builder service.
-   * @param \Drupal\Core\Datetime\DateFormatter $dateFormatter
+   * @param DateFormatter $dateFormatter
    *   The date formatter service.
-   * @param \Drupal\Core\Session\AccountProxy $currentUser
+   * @param AccountProxy $currentUser
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactory $configFactory
+   * @param ConfigFactory $configFactory
    *   The configuration factory.
-   * @param \Drupal\user\UserData $userData
+   * @param UserData $userData
    *   The user data service.
-   * @param \Drupal\force_password_change\Service\ForcePasswordChangeService $forcePasswordChangeService
+   * @param ForcePasswordChangeService $forcePasswordChangeService
    *   The force password change service.
    */
   public function __construct(FormBuilderInterface $formBuilder, DateFormatter $dateFormatter, AccountProxy $currentUser, ConfigFactory $configFactory, UserData $userData, ForcePasswordChangeService $forcePasswordChangeService) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 10 files have been changed by Rector                                      

