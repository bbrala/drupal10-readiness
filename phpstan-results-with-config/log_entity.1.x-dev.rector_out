modules/contrib/log_entity/modules/log_entity_login_attempts/log_entity_login_attempts.module
modules/contrib/log_entity/modules/log_entity_login_attempts/src/Event/LoginAttemptEvent.php
modules/contrib/log_entity/modules/log_entity_login_attempts/tests/src/Functional/LoginAttemptEventTest.php
modules/contrib/log_entity/src/Entity/LogEntity.php
modules/contrib/log_entity/src/Entity/LogEntityInterface.php
modules/contrib/log_entity/src/Event/LogEvent.php
modules/contrib/log_entity/src/EventLogger.php
modules/contrib/log_entity/src/EventLoggerInterface.php
modules/contrib/log_entity/src/EventSubscriber/LogEventSubscriber.php
modules/contrib/log_entity/src/LogEntityEvents.php

5 files with changes
====================

1) modules/contrib/log_entity/src/EventSubscriber/LogEventSubscriber.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The event logger.
    *
-   * @var \Drupal\log_entity\EventLoggerInterface
+   * @var EventLoggerInterface
    */
   protected $eventLogger;

@@ @@
   /**
    * LogEventSubscriber constructor.
    *
-   * @param \Drupal\log_entity\EventLoggerInterface $eventLogger
+   * @param EventLoggerInterface $eventLogger
    *   The event logger for saving events.
    */
   public function __construct(EventLoggerInterface $eventLogger) {
@@ @@
   /**
    * Triggered when an log event is dispatched.
    *
-   * @param \Drupal\log_entity\Event\LogEvent $event
+   * @param LogEvent $event
    *   Any kind of event that should be logged.
    */
   public function onEventCreated(LogEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/log_entity/src/EventLoggerInterface.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Persist the event.
    *
-   * @param \Drupal\log_entity\Event\LogEvent $event
+   * @param LogEvent $event
    *   The event itself.
    */
   public function logEvent(LogEvent $event);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/log_entity/src/EventLogger.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\log_entity;

+use Symfony\Component\HttpFoundation\Request;
 use Drupal\log_entity\Entity\LogEntity;
 use Drupal\log_entity\Event\LogEvent;
 use Symfony\Component\HttpFoundation\RequestStack;
@@ @@
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * EventLogger constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
    */
   public function __construct(RequestStack $requestStack) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/log_entity/src/Event/LogEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\log_entity\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * The log event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/log_entity/modules/log_entity_login_attempts/tests/src/Functional/LoginAttemptEventTest.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $storage = $this->container->get('entity_type.manager')->getStorage('log_entity');
     $all = $storage->loadMultiple();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 5 files have been changed by Rector                                       

