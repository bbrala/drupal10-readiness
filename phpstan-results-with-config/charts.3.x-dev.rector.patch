diff --git a/modules/charts_api_example/src/Controller/ChartsApiExample.php b/modules/charts_api_example/src/Controller/ChartsApiExample.php
index b919480..315fadd 100644
--- a/modules/charts_api_example/src/Controller/ChartsApiExample.php
+++ b/modules/charts_api_example/src/Controller/ChartsApiExample.php
@@ -16,30 +16,30 @@ class ChartsApiExample extends ControllerBase {
   /**
    * The charts settings.
    *
-   * @var \Drupal\charts\Services\ChartsSettingsServiceInterface
+   * @var ChartsSettingsServiceInterface
    */
   protected $chartSettings;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The UUID service.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuidService;
 
   /**
    * Construct.
    *
-   * @param \Drupal\charts\Services\ChartsSettingsServiceInterface $chartSettings
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
-   * @param \Drupal\Component\Uuid\UuidInterface $uuidService
+   * @param ChartsSettingsServiceInterface $chartSettings
+   * @param MessengerInterface $messenger
+   * @param UuidInterface $uuidService
    */
   public function __construct(ChartsSettingsServiceInterface $chartSettings, MessengerInterface $messenger, UuidInterface $uuidService) {
     $this->chartSettings = $chartSettings->getChartsSettings();
diff --git a/modules/charts_chartjs/src/Plugin/chart/Chartjs.php b/modules/charts_chartjs/src/Plugin/chart/Chartjs.php
index cf695d8..c32f8fe 100644
--- a/modules/charts_chartjs/src/Plugin/chart/Chartjs.php
+++ b/modules/charts_chartjs/src/Plugin/chart/Chartjs.php
@@ -108,7 +108,7 @@ class Chartjs extends AbstractChart {
    * @param array $options
    *   Options.
    *
-   * @return \Drupal\charts_chartjs\Settings\Chartjs\ChartjsOptions
+   * @return ChartjsOptions
    */
   protected function buildOptions(array $options) {
     $chartjsOptions = new ChartjsOptions();
diff --git a/modules/charts_google/src/Plugin/chart/Google.php b/modules/charts_google/src/Plugin/chart/Google.php
index f0c1e03..743199b 100644
--- a/modules/charts_google/src/Plugin/chart/Google.php
+++ b/modules/charts_google/src/Plugin/chart/Google.php
@@ -192,7 +192,7 @@ class Google extends AbstractChart {
    * @param array $customOptions
    *   Overrides.
    *
-   * @return \Drupal\charts_google\Settings\Google\GoogleOptions
+   * @return GoogleOptions
    *   GoogleOptions object with chart options or settings to be used by google
    *   visualization framework.
    */
@@ -587,7 +587,7 @@ class Google extends AbstractChart {
    * @param array $customOptions
    *   Overrides.
    *
-   * @return \Drupal\charts_google\Settings\Google\ChartType
+   * @return ChartType
    *   ChartType.
    */
   protected function createChartType($options = []) {
diff --git a/modules/charts_highcharts/src/Plugin/chart/Highcharts.php b/modules/charts_highcharts/src/Plugin/chart/Highcharts.php
index cf501e3..63370cc 100644
--- a/modules/charts_highcharts/src/Plugin/chart/Highcharts.php
+++ b/modules/charts_highcharts/src/Plugin/chart/Highcharts.php
@@ -45,7 +45,7 @@ class Highcharts extends AbstractChart {
    * @param array $options
    *   Options
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\ChartLegend
+   * @return ChartLegend
    *   Chart legend.
    */
   protected function buildChartLegend(array $options) {
@@ -111,7 +111,7 @@ class Highcharts extends AbstractChart {
    * @param array $options
    *   Options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\PlotOptions
+   * @return PlotOptions
    *   PlotOptions.
    */
   protected function buildPlotOptions(array $options) {
@@ -175,7 +175,7 @@ class Highcharts extends AbstractChart {
    * @param array $categories
    *   Categories.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\Xaxis
+   * @return Xaxis
    *   X-axis.
    */
   protected function buildXaxis(array $options, array $seriesData, array $categories) {
@@ -243,7 +243,7 @@ class Highcharts extends AbstractChart {
    * @param array $options
    *   Options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\YaxisLabel
+   * @return YaxisLabel
    */
   protected function buildYaxisLabels(array $options) {
     $yaxisLabels = new YaxisLabel();
@@ -263,7 +263,7 @@ class Highcharts extends AbstractChart {
    * @param array $attachmentDisplayOptions
    *   Attachment display options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\Yaxis
+   * @return Yaxis
    */
   protected function buildSecondaryYaxis(array $attachmentDisplayOptions) {
     $chartYaxisSecondary = new Yaxis();
@@ -303,7 +303,7 @@ class Highcharts extends AbstractChart {
    * @param array $categories
    *   Categories.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\Yaxis
+   * @return Yaxis
    */
   protected function buildYaxis($title, $yaxisLabels, array $options, array $seriesData, array $categories) {
 
@@ -401,7 +401,7 @@ class Highcharts extends AbstractChart {
    * @param array $options
    *   Options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\Tooltip
+   * @return Tooltip
    */
   protected function buildToolTip(array $options) {
     $chartTooltip = new Tooltip();
@@ -424,7 +424,7 @@ class Highcharts extends AbstractChart {
    * @param array $options
    *   Options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\ChartCredits
+   * @return ChartCredits
    */
   protected function buildCredits(array $options) {
     $chartCredits = new ChartCredits();
@@ -445,7 +445,7 @@ class Highcharts extends AbstractChart {
    * @param array $options
    *   Options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\ChartTitle
+   * @return ChartTitle
    */
   protected function buildChartTitle(array $options) {
     $chartTitle = new ChartTitle();
@@ -470,7 +470,7 @@ class Highcharts extends AbstractChart {
    * @param array $options
    *   Options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\Chart
+   * @return Chart
    */
   protected function buildChartType(array $options) {
     $chart = new Chart();
diff --git a/modules/charts_highcharts/src/Settings/Highcharts/HighchartsOptions.php b/modules/charts_highcharts/src/Settings/Highcharts/HighchartsOptions.php
index 7826356..f0e8977 100644
--- a/modules/charts_highcharts/src/Settings/Highcharts/HighchartsOptions.php
+++ b/modules/charts_highcharts/src/Settings/Highcharts/HighchartsOptions.php
@@ -236,7 +236,7 @@ class HighchartsOptions implements \JsonSerializable {
   /**
    * Get exporting options.
    *
-   * @return \Drupal\charts_highcharts\Settings\Highcharts\ExportingOptions|null
+   * @return ExportingOptions|null
    *   The exporting options.
    */
   public function getExporting() {
@@ -246,7 +246,7 @@ class HighchartsOptions implements \JsonSerializable {
   /**
    * Set exporting options.
    *
-   * @param \Drupal\charts_highcharts\Settings\Highcharts\ExportingOptions|null $exporting
+   * @param ExportingOptions|null $exporting
    *   The exporting options.
    */
   public function setExporting($exporting = NULL) {
diff --git a/src/Form/ChartsConfigForm.php b/src/Form/ChartsConfigForm.php
index 1a5d159..7de16f9 100644
--- a/src/Form/ChartsConfigForm.php
+++ b/src/Form/ChartsConfigForm.php
@@ -23,7 +23,7 @@ class ChartsConfigForm extends ConfigFormBase {
   /**
    * Construct.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/src/Plugin/chart/ChartManager.php b/src/Plugin/chart/ChartManager.php
index be5b51e..eecf53c 100644
--- a/src/Plugin/chart/ChartManager.php
+++ b/src/Plugin/chart/ChartManager.php
@@ -20,9 +20,9 @@ class ChartManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/override/ChartOverrideManager.php b/src/Plugin/override/ChartOverrideManager.php
index 892023d..db3a6e3 100644
--- a/src/Plugin/override/ChartOverrideManager.php
+++ b/src/Plugin/override/ChartOverrideManager.php
@@ -20,9 +20,9 @@ class ChartOverrideManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/views/style/ChartsPluginStyleChart.php b/src/Plugin/views/style/ChartsPluginStyleChart.php
index ae968e7..71d57a4 100644
--- a/src/Plugin/views/style/ChartsPluginStyleChart.php
+++ b/src/Plugin/views/style/ChartsPluginStyleChart.php
@@ -38,7 +38,7 @@ class ChartsPluginStyleChart extends StylePluginBase implements ContainerFactory
   /**
    * The chart manager service.
    *
-   * @var \Drupal\charts\Plugin\chart\ChartManager
+   * @var ChartManager
    */
   protected $chartManager;
 
@@ -57,11 +57,11 @@ class ChartsPluginStyleChart extends StylePluginBase implements ContainerFactory
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\charts\Services\ChartAttachmentServiceInterface $attachment_service
+   * @param ChartAttachmentServiceInterface $attachment_service
    *   The attachment service.
-   * @param \Drupal\charts\Plugin\chart\ChartManager $chart_manager
+   * @param ChartManager $chart_manager
    *   The chart manager service.
-   * @param \Drupal\charts\Services\ChartsSettingsService $chartsSettings
+   * @param ChartsSettingsService $chartsSettings
    */
   public function __construct(
     array $configuration,
diff --git a/src/Settings/ChartsBaseSettingsForm.php b/src/Settings/ChartsBaseSettingsForm.php
index a910847..e79b7d5 100644
--- a/src/Settings/ChartsBaseSettingsForm.php
+++ b/src/Settings/ChartsBaseSettingsForm.php
@@ -12,12 +12,12 @@ class ChartsBaseSettingsForm {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\charts\Settings\ChartsDefaultSettings
+   * @var ChartsDefaultSettings
    */
   private $defaultSettings;
 
   /**
-   * @var \Drupal\charts\Settings\ChartsTypeInfo
+   * @var ChartsTypeInfo
    */
   private $chartsTypes;
 
diff --git a/src/Util/Util.php b/src/Util/Util.php
index 3d5407e..83bf36c 100644
--- a/src/Util/Util.php
+++ b/src/Util/Util.php
@@ -12,7 +12,7 @@ class Util {
   /**
    * Views Data.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View.
    * @param array $labelValues
    *   Label Values.
diff --git a/tests/src/Unit/Services/ChartAttachmentServiceTest.php b/tests/src/Unit/Services/ChartAttachmentServiceTest.php
index f9a2fc7..651b269 100644
--- a/tests/src/Unit/Services/ChartAttachmentServiceTest.php
+++ b/tests/src/Unit/Services/ChartAttachmentServiceTest.php
@@ -12,14 +12,14 @@ use Drupal\charts\Services\ChartAttachmentService;
 class ChartAttachmentServiceTest extends UnitTestCase {
 
   /**
-   * @var \Drupal\charts\Services\ChartAttachmentService
+   * @var ChartAttachmentService
    */
   private $chartAttachmentService;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->chartAttachmentService = new ChartAttachmentService();
diff --git a/tests/src/Unit/Services/ChartServiceTest.php b/tests/src/Unit/Services/ChartServiceTest.php
index 20f191c..6e06405 100644
--- a/tests/src/Unit/Services/ChartServiceTest.php
+++ b/tests/src/Unit/Services/ChartServiceTest.php
@@ -12,14 +12,14 @@ use Drupal\charts\Services\ChartService;
 class ChartServiceTest extends UnitTestCase {
 
   /**
-   * @var \Drupal\charts\Services\ChartService
+   * @var ChartService
    */
   private $chartService;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->chartService = new ChartService();
diff --git a/tests/src/Unit/Services/ChartsSettingsServiceTest.php b/tests/src/Unit/Services/ChartsSettingsServiceTest.php
index 9740c10..541a650 100644
--- a/tests/src/Unit/Services/ChartsSettingsServiceTest.php
+++ b/tests/src/Unit/Services/ChartsSettingsServiceTest.php
@@ -47,7 +47,7 @@ class ChartsSettingsServiceTest extends UnitTestCase {
    * @param array $config
    *   A default module configuration.
    *
-   * @return \Drupal\charts\Services\ChartsSettingsService
+   * @return ChartsSettingsService
    *   ChartsSettingsService object to be tested.
    */
   private function createChartsSettingsService(array $config) {
diff --git a/tests/src/Unit/Settings/ChartsBaseSettingsFormTest.php b/tests/src/Unit/Settings/ChartsBaseSettingsFormTest.php
index 733f87e..f1f4706 100644
--- a/tests/src/Unit/Settings/ChartsBaseSettingsFormTest.php
+++ b/tests/src/Unit/Settings/ChartsBaseSettingsFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\charts\Unit\Settings;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\charts\Settings\ChartsBaseSettingsForm;
 use Drupal\Tests\UnitTestCase;
 use Drupal\charts\Settings\ChartsDefaultSettings;
@@ -18,15 +19,16 @@ use Drupal\Core\StringTranslation\TranslatableMarkup;
  */
 class ChartsBaseSettingsFormTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
-   * @var \Drupal\charts\Settings\ChartsBaseSettingsForm
+   * @var ChartsBaseSettingsForm
    */
   private $chartsBaseSettingsForm;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $container = new ContainerBuilder();
@@ -50,7 +52,7 @@ class ChartsBaseSettingsFormTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     parent::tearDown();
     $this->chartsBaseSettingsForm = NULL;
   }
diff --git a/tests/src/Unit/Settings/ChartsDefaultColorsTest.php b/tests/src/Unit/Settings/ChartsDefaultColorsTest.php
index e3b9d74..fd9c3d4 100644
--- a/tests/src/Unit/Settings/ChartsDefaultColorsTest.php
+++ b/tests/src/Unit/Settings/ChartsDefaultColorsTest.php
@@ -14,14 +14,14 @@ use Drupal\Tests\UnitTestCase;
 class ChartsDefaultColorsTest extends UnitTestCase {
 
   /**
-   * @var \Drupal\charts\Settings\ChartsDefaultColors
+   * @var ChartsDefaultColors
    */
   private $chartsDefaultColors;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->chartsDefaultColors = new ChartsDefaultColors();
   }
@@ -29,7 +29,7 @@ class ChartsDefaultColorsTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     parent::tearDown();
     $this->chartsDefaultColors = NULL;
   }
diff --git a/tests/src/Unit/Settings/ChartsDefaultSettingsTest.php b/tests/src/Unit/Settings/ChartsDefaultSettingsTest.php
index e83b482..c39b23a 100644
--- a/tests/src/Unit/Settings/ChartsDefaultSettingsTest.php
+++ b/tests/src/Unit/Settings/ChartsDefaultSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\charts\Unit\Settings;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\charts\Settings\ChartsDefaultSettings;
 use Drupal\Tests\UnitTestCase;
 use Drupal\charts\Settings\ChartsDefaultColors;
@@ -12,15 +13,16 @@ use Drupal\charts\Settings\ChartsDefaultColors;
  */
 class ChartsDefaultSettingsTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
-   * @var \Drupal\charts\Settings\ChartsDefaultSettings
+   * @var ChartsDefaultSettings
    */
   private $chartsDefaultSettings;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $chartsDefaultColorsMock = $this->getDefaultColorsMock();
@@ -42,7 +44,7 @@ class ChartsDefaultSettingsTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     parent::tearDown();
     $this->chartsDefaultSettings = NULL;
   }
diff --git a/tests/src/Unit/Settings/ChartsTypeInfoTest.php b/tests/src/Unit/Settings/ChartsTypeInfoTest.php
index b21f2bc..1b723d0 100644
--- a/tests/src/Unit/Settings/ChartsTypeInfoTest.php
+++ b/tests/src/Unit/Settings/ChartsTypeInfoTest.php
@@ -15,14 +15,14 @@ use Drupal\Core\DependencyInjection\ContainerBuilder;
 class ChartsTypeInfoTest extends UnitTestCase {
 
   /**
-   * @var \Drupal\charts\Settings\ChartsTypeInfo
+   * @var ChartsTypeInfo
    */
   private $chartsTypeInfo;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $container = new ContainerBuilder();
@@ -35,7 +35,7 @@ class ChartsTypeInfoTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function tearDown() {
+  public function tearDown(): void {
     parent::tearDown();
     $this->chartsTypeInfo = NULL;
     $container = new ContainerBuilder();
