diff --git a/composer.json b/composer.json
index 69280d0..9034c94 100644
--- a/composer.json
+++ b/composer.json
@@ -15,6 +15,6 @@
     "license": "GPL-2.0+",
     "minimum-stability": "dev",
     "require": {
-        "drupal/core": "^8.0 || ^9.0"
+        "drupal/core": "^9.3 || ^10"
     }
 }
diff --git a/file_version.info.yml b/file_version.info.yml
index 6251c80..8009f05 100644
--- a/file_version.info.yml
+++ b/file_version.info.yml
@@ -1,5 +1,5 @@
 name: File Version
-core_version_requirement: ^8.0 || ^9.0
+core_version_requirement: ^9.3 || ^10
 description: Add simple token in files urls based on file modified time to ease cache files in CDNs.
 type: module
 configure: file_version.admin_settings
diff --git a/src/FileVersion.php b/src/FileVersion.php
index 643c563..d9594fa 100644
--- a/src/FileVersion.php
+++ b/src/FileVersion.php
@@ -19,21 +19,21 @@ class FileVersion implements FileVersionInterface {
   /**
    * PrivateKey Service.
    *
-   * @var \Drupal\Core\PrivateKey
+   * @var PrivateKey
    */
   private $privateKey;
 
   /**
    * ConfigFactory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
 
   /**
    * Module Handler Service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;
 
@@ -42,11 +42,11 @@ class FileVersion implements FileVersionInterface {
   /**
    * Constructor method of FileVersion Service.
    *
-   * @param \Drupal\Core\PrivateKey $private_key
+   * @param PrivateKey $private_key
    *   PrivateKey Service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory Service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   ModuleHandler Service.
    */
   public function __construct(PrivateKey $private_key, ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 4cf5abe..fdd7205 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -17,16 +17,16 @@ class SettingsForm extends ConfigFormBase {
   /**
    * File Version Service.
    *
-   * @var \Drupal\file_version\FileVersionInterface
+   * @var FileVersionInterface
    */
   private $fileVersion;
 
   /**
    * Class constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config Factory Service.
-   * @param \Drupal\file_version\FileVersionInterface $file_version
+   * @param FileVersionInterface $file_version
    *   File Version Service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, FileVersionInterface $file_version) {
diff --git a/tests/src/Kernel/FileTest.php b/tests/src/Kernel/FileTest.php
index 9618a59..67884eb 100644
--- a/tests/src/Kernel/FileTest.php
+++ b/tests/src/Kernel/FileTest.php
@@ -32,7 +32,7 @@ class FileTest extends FileVersionTestBase {
     $token = \Drupal::service('file_version')->getFileVersionToken($uri);
     $uri .= '?fv=' . $token;
 
-    $url = file_create_url($uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
 
     $query = parse_url($url, PHP_URL_QUERY);
     $fv_count = substr_count($query, 'fv=');
@@ -45,7 +45,7 @@ class FileTest extends FileVersionTestBase {
    */
   public function testAbsoluteUrl() {
     $uri = 'http://example.com/myfile.doc';
-    $url = file_create_url($uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
     $this->assertTrue($this->isUrlAbsolute($url), 'Absolute URL keeps absolute.');
     $this->assertTrue($this->urlHasQueryParam($url), 'Absolute URL has File Version');
   }
@@ -55,7 +55,7 @@ class FileTest extends FileVersionTestBase {
    */
   public function testSchemeUri() {
     $scheme_uri = 'public://myfile.doc';
-    $url = file_create_url($scheme_uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($scheme_uri);
     $this->assertTrue($this->isUrlAbsolute($url), 'Scheme URI is converted to absolute URL.');
     $this->assertTrue($this->urlHasQueryParam($url), 'Scheme URI has File Version');
   }
@@ -65,7 +65,7 @@ class FileTest extends FileVersionTestBase {
    */
   public function testRelativeUrl() {
     $relative_uri = 'modules/custom/mymodule/myfile.doc';
-    $url = file_create_url($relative_uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($relative_uri);
     $this->assertTrue($this->isUrlAbsolute($url), 'Relative URL is converted to absolute URL.');
     $this->assertTrue($this->urlHasQueryParam($url), 'Relative URL has File Version');
   }
@@ -75,7 +75,7 @@ class FileTest extends FileVersionTestBase {
    */
   public function testRootRelativeUrl() {
     $root_relative_uri = '/modules/custom/mymodule/myfile.doc';
-    $url = file_create_url($root_relative_uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($root_relative_uri);
     $this->assertTrue(strpos($url, $root_relative_uri) === 0, 'Root relative URL keeps root relative.');
     $this->assertTrue($this->urlHasQueryParam($url), 'Root relative URL has File Version');
   }
@@ -87,7 +87,7 @@ class FileTest extends FileVersionTestBase {
     $custom_query_parameter = 'jv';
     $this->config('file_version.settings')->set('get_parameter_name', $custom_query_parameter)->save();
     $uri = 'http://example.com/myfile.doc';
-    $url = file_create_url($uri);
+    $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
     $this->assertTrue($this->urlHasQueryParam($url, $custom_query_parameter), 'URL works with custom query parameter.');
   }
 
@@ -99,14 +99,14 @@ class FileTest extends FileVersionTestBase {
     $pdf_uri = 'http://example.com/myfile.pdf';
 
     $this->config('file_version.settings')->set('extensions_blacklist', 'doc')->save();
-    $doc_url = file_create_url($doc_uri);
-    $pdf_url = file_create_url($pdf_uri);
+    $doc_url = \Drupal::service('file_url_generator')->generateAbsoluteString($doc_uri);
+    $pdf_url = \Drupal::service('file_url_generator')->generateAbsoluteString($pdf_uri);
     $this->assertFalse($this->urlHasQueryParam($doc_url), "Blacklisted extension doesn't have File Version: single value.");
     $this->assertTrue($this->urlHasQueryParam($pdf_url), 'Other extensions have File Version: single value.');
 
     $this->config('file_version.settings')->set('extensions_blacklist', 'doc, xml')->save();
-    $doc_url = file_create_url($doc_uri);
-    $pdf_url = file_create_url($pdf_uri);
+    $doc_url = \Drupal::service('file_url_generator')->generateAbsoluteString($doc_uri);
+    $pdf_url = \Drupal::service('file_url_generator')->generateAbsoluteString($pdf_uri);
     $this->assertFalse($this->urlHasQueryParam($doc_url), "Blacklisted extension doesn't have File Version: list.");
     $this->assertTrue($this->urlHasQueryParam($pdf_url), 'Other extensions have File Version: list.');
   }
diff --git a/tests/src/Kernel/ImageStyleTest.php b/tests/src/Kernel/ImageStyleTest.php
index 282c6b2..6a2922f 100644
--- a/tests/src/Kernel/ImageStyleTest.php
+++ b/tests/src/Kernel/ImageStyleTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\file_version\Kernel;
 
+use Drupal\image\ImageStyleInterface;
 use Drupal\image\Entity\ImageStyle;
 
 /**
@@ -21,7 +22,7 @@ class ImageStyleTest extends FileVersionTestBase {
   /**
    * Image Style to use in tests.
    *
-   * @var \Drupal\image\ImageStyleInterface
+   * @var ImageStyleInterface
    */
   private $imageStyle;
 
@@ -63,8 +64,8 @@ class ImageStyleTest extends FileVersionTestBase {
 
     $this->config('file_version.settings')->set('extensions_whitelist', 'doc')->save();
     $image_url = $this->imageStyle->buildUrl($image_uri);
-    $doc_url = file_create_url($doc_uri);
-    $pdf_url = file_create_url($pdf_uri);
+    $doc_url = \Drupal::service('file_url_generator')->generateAbsoluteString($doc_uri);
+    $pdf_url = \Drupal::service('file_url_generator')->generateAbsoluteString($pdf_uri);
 
     $this->assertTrue($this->urlHasQueryParam($image_url), 'Image style has File Version when extensions whitelist is set: single value.');
     $this->assertTrue($this->urlHasQueryParam($image_url, 'itok'), 'Image style has itok when extensions whitelist is set: single value.');
@@ -73,8 +74,8 @@ class ImageStyleTest extends FileVersionTestBase {
 
     $this->config('file_version.settings')->set('extensions_whitelist', 'doc, xml')->save();
     $image_url = $this->imageStyle->buildUrl($image_uri);
-    $doc_url = file_create_url($doc_uri);
-    $pdf_url = file_create_url($pdf_uri);
+    $doc_url = \Drupal::service('file_url_generator')->generateAbsoluteString($doc_uri);
+    $pdf_url = \Drupal::service('file_url_generator')->generateAbsoluteString($pdf_uri);
 
     $this->assertTrue($this->urlHasQueryParam($image_url), 'Image style has File Version when extensions whitelist is set: list.');
     $this->assertTrue($this->urlHasQueryParam($image_url, 'itok'), 'Image style has itok when extensions whitelist is set: list.');
