diff --git a/src/ContextProvider/UserProfileRouteContext.php b/src/ContextProvider/UserProfileRouteContext.php
index ba53be0..5758aae 100644
--- a/src/ContextProvider/UserProfileRouteContext.php
+++ b/src/ContextProvider/UserProfileRouteContext.php
@@ -21,14 +21,14 @@ class UserProfileRouteContext implements ContextProviderInterface {
   /**
    * The route match object.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected RouteMatchInterface $routeMatch;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match object.
    */
   public function __construct(RouteMatchInterface $route_match) {
diff --git a/src/Plugin/Condition/UserProfileRole.php b/src/Plugin/Condition/UserProfileRole.php
index ef38c8b..889462f 100644
--- a/src/Plugin/Condition/UserProfileRole.php
+++ b/src/Plugin/Condition/UserProfileRole.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\context_profile_role\Plugin\Condition;
 
+use Drupal\user\UserInterface;
 use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Condition\ConditionPluginBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -28,7 +29,7 @@ class UserProfileRole extends ConditionPluginBase implements ContainerFactoryPlu
   /**
    * The user storage.
    *
-   * @var \Drupal\user\RoleStorageInterface
+   * @var RoleStorageInterface
    */
   protected RoleStorageInterface $roleStorage;
 
@@ -41,7 +42,7 @@ class UserProfileRole extends ConditionPluginBase implements ContainerFactoryPlu
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(
@@ -51,7 +52,7 @@ class UserProfileRole extends ConditionPluginBase implements ContainerFactoryPlu
     EntityTypeManagerInterface $entity_type_manager
   ) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
-    /** @var \Drupal\user\RoleStorageInterface $role_storage */
+    /** @var RoleStorageInterface $role_storage */
     $role_storage = $entity_type_manager->getStorage('user_role');
     $this->roleStorage = $role_storage;
   }
@@ -121,7 +122,7 @@ class UserProfileRole extends ConditionPluginBase implements ContainerFactoryPlu
       return TRUE;
     }
     $user_profile_has_role = FALSE;
-    /** @var \Drupal\user\UserInterface|null $user_profile */
+    /** @var UserInterface|null $user_profile */
     $user_profile = $this->getContextValue('user_profile');
     if ($user_profile) {
       $user_profile_roles = $user_profile->getRoles();
diff --git a/tests/src/Kernel/UserProfileRoleConditionTest.php b/tests/src/Kernel/UserProfileRoleConditionTest.php
index 70d38e6..12a3b96 100644
--- a/tests/src/Kernel/UserProfileRoleConditionTest.php
+++ b/tests/src/Kernel/UserProfileRoleConditionTest.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\context_profile_role\Kernel;
 
+use Drupal\Core\Condition\ConditionManager;
+use Drupal\context_profile_role\Plugin\Condition\UserProfileRole;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\user\Entity\Role;
 use Drupal\user\Entity\User;
@@ -27,7 +29,7 @@ class UserProfileRoleConditionTest extends EntityKernelTestBase {
    * Tests conditions.
    */
   public function testConditions(): void {
-    /** @var \Drupal\Core\Condition\ConditionManager $manager */
+    /** @var ConditionManager $manager */
     $manager = $this->container->get('plugin.manager.condition');
 
     Role::create([
@@ -68,7 +70,7 @@ class UserProfileRoleConditionTest extends EntityKernelTestBase {
 
     // Grab the user profile role condition and configure it to check against
     // role 1 on user 1.
-    /** @var \Drupal\context_profile_role\Plugin\Condition\UserProfileRole $condition */
+    /** @var UserProfileRole $condition */
     $condition = $manager->createInstance('user_profile_role');
     $condition->setConfig('roles', ['role_1' => 'role_1'])
       ->setContextValue('user_profile', $user_1);
