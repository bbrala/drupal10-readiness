diff --git a/handy_cache_tags.module b/handy_cache_tags.module
index 0e1a543..3813eb7 100644
--- a/handy_cache_tags.module
+++ b/handy_cache_tags.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\handy_cache_tags\HandyCacheTagsHandler;
+use Drupal\handy_cache_tags\HandyCacheTagsManager;
 /**
  * @file
  * The module file for handy cache tags.
@@ -37,7 +39,7 @@ function handy_cache_tags_entity_delete(EntityInterface $entity) {
  * Helper to invalidate caches based on an entity.
  */
 function _handy_cache_tags_clear_entity_tags(EntityInterface $entity) {
-  /** @var \Drupal\handy_cache_tags\HandyCacheTagsHandler $handler */
+  /** @var HandyCacheTagsHandler $handler */
   $handler = \Drupal::service('handy_cache_tags.handler');
   $handler->invalidateEntity($entity);
 }
@@ -52,7 +54,7 @@ function _handy_cache_tags_clear_entity_tags(EntityInterface $entity) {
  * @see https://www.drupal.org/project/handy_cache_tags/issues/2939178
  */
 function handy_cache_tags_get_entity_tags(EntityInterface $entity) {
-  /** @var \Drupal\handy_cache_tags\HandyCacheTagsManager $manager */
+  /** @var HandyCacheTagsManager $manager */
   $manager = \Drupal::service('handy_cache_tags.manager');
   return $manager->getEntityTags($entity);
 }
@@ -68,7 +70,7 @@ function handy_cache_tags_get_entity_tags(EntityInterface $entity) {
  * @see https://www.drupal.org/project/handy_cache_tags/issues/2939178
  */
 function handy_cache_tags_get_entity_type_tag_from_entity(EntityInterface $entity) {
-  /** @var \Drupal\handy_cache_tags\HandyCacheTagsManager $manager */
+  /** @var HandyCacheTagsManager $manager */
   $manager = \Drupal::service('handy_cache_tags.manager');
   return $manager->getEntityTypeTagFromEntity($entity);
 }
@@ -86,7 +88,7 @@ function handy_cache_tags_get_entity_type_tag_from_entity(EntityInterface $entit
  * @see https://www.drupal.org/project/handy_cache_tags/issues/2939178
  */
 function handy_cache_tags_get_tag($type) {
-  /** @var \Drupal\handy_cache_tags\HandyCacheTagsManager $manager */
+  /** @var HandyCacheTagsManager $manager */
   $manager = \Drupal::service('handy_cache_tags.manager');
   return $manager->getTag($type);
 }
@@ -102,7 +104,7 @@ function handy_cache_tags_get_tag($type) {
  * @see https://www.drupal.org/project/handy_cache_tags/issues/2939178
  */
 function handy_cache_tags_get_bundle_tag_from_entity(EntityInterface $entity) {
-  /** @var \Drupal\handy_cache_tags\HandyCacheTagsManager $manager */
+  /** @var HandyCacheTagsManager $manager */
   $manager = \Drupal::service('handy_cache_tags.manager');
   return $manager->getBundleTagFromEntity($entity);
 }
@@ -117,7 +119,7 @@ function handy_cache_tags_get_bundle_tag_from_entity(EntityInterface $entity) {
  * @see https://www.drupal.org/project/handy_cache_tags/issues/2939178
  */
 function handy_cache_tags_get_bundle_tag($entity_type, $bundle) {
-  /** @var \Drupal\handy_cache_tags\HandyCacheTagsManager $manager */
+  /** @var HandyCacheTagsManager $manager */
   $manager = \Drupal::service('handy_cache_tags.manager');
   return $manager->getBundleTag($entity_type, $bundle);
 }
diff --git a/src/HandyCacheTagsHandler.php b/src/HandyCacheTagsHandler.php
index 0349d36..e8e1cd3 100644
--- a/src/HandyCacheTagsHandler.php
+++ b/src/HandyCacheTagsHandler.php
@@ -16,7 +16,7 @@ class HandyCacheTagsHandler {
   /**
    * Handy cache tags manager service.
    *
-   * @var \Drupal\handy_cache_tags\HandyCacheTagsManager
+   * @var HandyCacheTagsManager
    */
   protected $manager;
 
@@ -53,7 +53,7 @@ class HandyCacheTagsHandler {
     // If the entity is a field config, we want to clear the cache for the
     // potential entities it affects.
     if ($entity instanceof FieldStorageConfig) {
-      /** @var \Drupal\field\Entity\FieldStorageConfig $field_storage_config */
+      /** @var FieldStorageConfig $field_storage_config */
       $field_storage_config = $entity;
       Cache::invalidateTags(([
         // Clear the cache of the entity type (like node) the field belongs to,
@@ -63,7 +63,7 @@ class HandyCacheTagsHandler {
       ]));
     }
     if ($entity instanceof FieldConfig) {
-      /** @var \Drupal\field\Entity\FieldConfig $field_config */
+      /** @var FieldConfig $field_config */
       $field_config = $entity;
       $entity_type = $field_config->getTargetEntityTypeId();
       Cache::invalidateTags([
diff --git a/src/HandyCacheTagsManager.php b/src/HandyCacheTagsManager.php
index d0da113..ea89782 100644
--- a/src/HandyCacheTagsManager.php
+++ b/src/HandyCacheTagsManager.php
@@ -17,7 +17,7 @@ class HandyCacheTagsManager {
   /**
    * Creates cache tags from entities.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   An entity to use.
    *
    * @return array
