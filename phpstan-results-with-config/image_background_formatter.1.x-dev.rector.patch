diff --git a/src/Plugin/Field/FieldFormatter/ImageBackgroundFormatter.php b/src/Plugin/Field/FieldFormatter/ImageBackgroundFormatter.php
index b0651b6..ad0764e 100644
--- a/src/Plugin/Field/FieldFormatter/ImageBackgroundFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageBackgroundFormatter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\image_background_formatter\Plugin\Field\FieldFormatter;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -27,7 +29,7 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
   /**
    * EntityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   private $entityTypeManager;
 
@@ -38,7 +40,7 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
    *   Plugin id.
    * @param string $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   Field definition.
    * @param array $settings
    *   Settings.
@@ -48,7 +50,7 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
    *   View mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   EntityTypeManager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, EntityTypeManager $entityTypeManager) {
@@ -59,7 +61,7 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
   /**
    * View Elements.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   Items.
    * @param string $langcode
    *   Langcode.
@@ -67,8 +69,8 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
    * @return array
    *   Rendered array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $element = [];
@@ -80,7 +82,7 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
 
       $element[$delta] = [
         '#theme' => 'image_background_formatter',
-        '#img' => isset($style) ? $style->buildUrl($item->entity->getFileUri()) : file_create_url($item->entity->getFileUri()),
+        '#img' => isset($style) ? $style->buildUrl($item->entity->getFileUri()) : \Drupal::service('file_url_generator')->generateAbsoluteString($item->entity->getFileUri()),
         '#attached' => [
           'library' => 'image_background_formatter/image_background_formatter',
         ],
@@ -125,14 +127,14 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
    *
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return array|mixed
    *   Form array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function settingsForm(array $form, FormStateInterface $form_state) {
     $settings = $this->getSettings();
@@ -159,7 +161,7 @@ class ImageBackgroundFormatter extends FormatterBase implements ContainerFactory
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
