diff --git a/src/AccessFilterLegacyMiddleware.php b/src/AccessFilterLegacyMiddleware.php
index 73a1557..9de3050 100644
--- a/src/AccessFilterLegacyMiddleware.php
+++ b/src/AccessFilterLegacyMiddleware.php
@@ -20,23 +20,23 @@ class AccessFilterLegacyMiddleware implements HttpKernelInterface {
   /**
    * The decorated kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new AccessFilterLegacyMiddleware object.
    *
-   * @param \Symfony\Component\HttpKernel\HttpKernelInterface $http_kernel
+   * @param HttpKernelInterface $http_kernel
    *   The decorated kernel.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(HttpKernelInterface $http_kernel, ModuleHandlerInterface $module_handler) {
diff --git a/src/AccessFilterListBuilder.php b/src/AccessFilterListBuilder.php
index fde7c3e..b6ec920 100644
--- a/src/AccessFilterListBuilder.php
+++ b/src/AccessFilterListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\access_filter;
 
+use Drupal\access_filter\Entity\Filter;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Config\Entity\DraggableListBuilder;
 use Drupal\Core\Form\FormStateInterface;
@@ -45,7 +46,7 @@ class AccessFilterListBuilder extends DraggableListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\access_filter\Entity\Filter $entity */
+    /** @var Filter $entity */
     $entity->parse();
 
     if (!$entity->status()) {
diff --git a/src/AccessFilterMiddleware.php b/src/AccessFilterMiddleware.php
index edfdada..a160129 100644
--- a/src/AccessFilterMiddleware.php
+++ b/src/AccessFilterMiddleware.php
@@ -18,23 +18,23 @@ class AccessFilterMiddleware implements HttpKernelInterface {
   /**
    * The decorated kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new AccessFilterMiddleware object.
    *
-   * @param \Symfony\Component\HttpKernel\HttpKernelInterface $http_kernel
+   * @param HttpKernelInterface $http_kernel
    *   The decorated kernel.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(HttpKernelInterface $http_kernel, ModuleHandlerInterface $module_handler) {
diff --git a/src/Annotation/AccessFilterCondition.php b/src/Annotation/AccessFilterCondition.php
index d17dbe0..d048ade 100644
--- a/src/Annotation/AccessFilterCondition.php
+++ b/src/Annotation/AccessFilterCondition.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\access_filter\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -27,7 +28,7 @@ class AccessFilterCondition extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/AccessFilterRule.php b/src/Annotation/AccessFilterRule.php
index 87f992e..0bc3d6d 100644
--- a/src/Annotation/AccessFilterRule.php
+++ b/src/Annotation/AccessFilterRule.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\access_filter\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -27,7 +28,7 @@ class AccessFilterRule extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -36,7 +37,7 @@ class AccessFilterRule extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Entity/Filter.php b/src/Entity/Filter.php
index 828819f..7b3cf85 100644
--- a/src/Entity/Filter.php
+++ b/src/Entity/Filter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\access_filter\Entity;
 
+use Drupal\access_filter\Plugin\ConditionInterface;
+use Drupal\access_filter\Plugin\RuleInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\access_filter\FilterInterface;
 use Symfony\Component\HttpFoundation\Request;
@@ -85,14 +87,14 @@ class Filter extends ConfigEntityBase implements FilterInterface {
   /**
    * Parsed conditions.
    *
-   * @var \Drupal\access_filter\Plugin\ConditionInterface[]
+   * @var ConditionInterface[]
    */
   protected $parsedConditions;
 
   /**
    * Parsed rules.
    *
-   * @var \Drupal\access_filter\Plugin\RuleInterface[]
+   * @var RuleInterface[]
    */
   protected $parsedRules;
 
diff --git a/src/FilterInterface.php b/src/FilterInterface.php
index 0cb1e3e..f881094 100644
--- a/src/FilterInterface.php
+++ b/src/FilterInterface.php
@@ -18,7 +18,7 @@ interface FilterInterface extends ConfigEntityInterface {
   /**
    * Checks the current access is allowed using the filter.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   A request instance.
    *
    * @return bool
diff --git a/src/Form/EditForm.php b/src/Form/EditForm.php
index 1a2c02a..7208b5d 100644
--- a/src/Form/EditForm.php
+++ b/src/Form/EditForm.php
@@ -18,23 +18,23 @@ class EditForm extends EntityForm {
   /**
    * The access filter condition plugin manager.
    *
-   * @var \Drupal\access_filter\Plugin\AccessFilterPluginManagerInterface
+   * @var AccessFilterPluginManagerInterface
    */
   protected $conditionPluginManager;
 
   /**
    * The access filter rule plugin manager.
    *
-   * @var \Drupal\access_filter\Plugin\AccessFilterPluginManagerInterface
+   * @var AccessFilterPluginManagerInterface
    */
   protected $rulePluginManager;
 
   /**
    * Constructs a new EditForm object.
    *
-   * @param \Drupal\access_filter\Plugin\AccessFilterPluginManagerInterface $condition_plugin_manager
+   * @param AccessFilterPluginManagerInterface $condition_plugin_manager
    *   The access filter condition plugin manager.
-   * @param \Drupal\access_filter\Plugin\AccessFilterPluginManagerInterface $rule_plugin_manager
+   * @param AccessFilterPluginManagerInterface $rule_plugin_manager
    *   The access filter rule plugin manager.
    */
   public function __construct(AccessFilterPluginManagerInterface $condition_plugin_manager, AccessFilterPluginManagerInterface $rule_plugin_manager) {
@@ -297,7 +297,7 @@ class EditForm extends EntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\access_filter\Entity\Filter $filter */
+    /** @var Filter $filter */
     $filter = $this->entity;
 
     $dumper = new Dumper();
diff --git a/src/Plugin/AccessFilter/Condition/ChainConditionBase.php b/src/Plugin/AccessFilter/Condition/ChainConditionBase.php
index d1eda16..5e2a809 100644
--- a/src/Plugin/AccessFilter/Condition/ChainConditionBase.php
+++ b/src/Plugin/AccessFilter/Condition/ChainConditionBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\access_filter\Plugin\AccessFilter\Condition;
 
+use Drupal\access_filter\Plugin\ConditionInterface;
 use Drupal\access_filter\Plugin\AccessFilterPluginManagerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
@@ -13,7 +14,7 @@ abstract class ChainConditionBase extends ConditionBase {
   /**
    * The access filter condition plugin manager.
    *
-   * @var \Drupal\access_filter\Plugin\AccessFilterPluginManagerInterface
+   * @var AccessFilterPluginManagerInterface
    */
   protected $conditionPluginManager;
 
@@ -26,7 +27,7 @@ abstract class ChainConditionBase extends ConditionBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\access_filter\Plugin\AccessFilterPluginManagerInterface $condition_plugin_manager
+   * @param AccessFilterPluginManagerInterface $condition_plugin_manager
    *   The access filter condition plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AccessFilterPluginManagerInterface $condition_plugin_manager) {
@@ -87,7 +88,7 @@ abstract class ChainConditionBase extends ConditionBase {
    * @param array $condition
    *   The array containing condition data.
    *
-   * @return \Drupal\access_filter\Plugin\ConditionInterface|bool
+   * @return ConditionInterface|bool
    *   Plugin instance or FALSE if failed.
    */
   protected function createPluginInstance(array $condition) {
diff --git a/src/Plugin/AccessFilter/Condition/PathCondition.php b/src/Plugin/AccessFilter/Condition/PathCondition.php
index 9907567..2248e5d 100644
--- a/src/Plugin/AccessFilter/Condition/PathCondition.php
+++ b/src/Plugin/AccessFilter/Condition/PathCondition.php
@@ -23,7 +23,7 @@ class PathCondition extends ConditionBase {
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
@@ -36,7 +36,7 @@ class PathCondition extends ConditionBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PathMatcherInterface $path_matcher) {
diff --git a/src/Plugin/AccessFilterPluginManager.php b/src/Plugin/AccessFilterPluginManager.php
index 33470ee..bd0eb3f 100644
--- a/src/Plugin/AccessFilterPluginManager.php
+++ b/src/Plugin/AccessFilterPluginManager.php
@@ -25,9 +25,9 @@ class AccessFilterPluginManager extends DefaultPluginManager implements AccessFi
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct($type, \Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/ConditionInterface.php b/src/Plugin/ConditionInterface.php
index 3aefad9..483fd3b 100644
--- a/src/Plugin/ConditionInterface.php
+++ b/src/Plugin/ConditionInterface.php
@@ -31,7 +31,7 @@ interface ConditionInterface {
   /**
    * Checks the current access is matched to the condition.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   A request instance.
    *
    * @return bool
diff --git a/src/Plugin/RuleInterface.php b/src/Plugin/RuleInterface.php
index 41017c3..71af6a2 100644
--- a/src/Plugin/RuleInterface.php
+++ b/src/Plugin/RuleInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\access_filter\Plugin;
 
+use Drupal\Core\Access\AccessResult;
 use Symfony\Component\HttpFoundation\Request;
 
 /**
@@ -31,10 +32,10 @@ interface RuleInterface {
   /**
    * Checks the current access by the rule.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   A request instance.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function check(Request $request);
