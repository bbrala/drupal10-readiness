diff --git a/composer.json b/composer.json
index a59380c..e5ee14f 100644
--- a/composer.json
+++ b/composer.json
@@ -5,9 +5,9 @@
     "homepage": "http://drupal.org/project/layout_builder_awesome_sections",
     "license": "GPL-2.0+",
     "require": {
-        "drupal/core": "^8.9 || ^9",
         "mexitek/phpcolors": "^1.0",
-        "neilime/php-css-lint": "^3.0"
+        "neilime/php-css-lint": "^3.0",
+        "drupal/core": "^9.3 || ^10"
     },
     "require-dev": {},
     "minimum-stability": "dev"
diff --git a/layout_builder_awesome_sections.info.yml b/layout_builder_awesome_sections.info.yml
index 413d523..e30a0f4 100644
--- a/layout_builder_awesome_sections.info.yml
+++ b/layout_builder_awesome_sections.info.yml
@@ -2,6 +2,6 @@ name: Layout builder awesome sections
 type: module
 description: Add some awesome sections which has many useful configuration which let you build site structure with no custom code
 package: Layout Builder
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:layout_builder
diff --git a/layout_builder_awesome_sections.module b/layout_builder_awesome_sections.module
index b4cdeb1..fa96e3d 100644
--- a/layout_builder_awesome_sections.module
+++ b/layout_builder_awesome_sections.module
@@ -1,15 +1,16 @@
 <?php
 
+use Drupal\Core\Layout\LayoutDefinition;
 /**
  * Implements hook_layout_alter().
  */
 function layout_builder_awesome_sections_layout_alter(&$definitions) {
   if (isset($definitions['layout_onecol'])) {
-    /** @var \Drupal\Core\Layout\LayoutDefinition $definition_onecol */
+    /** @var LayoutDefinition $definition_onecol */
     $definition_onecol = &$definitions['layout_onecol'];
     $definition_onecol->setClass("Drupal\layout_builder_awesome_sections\Plugin\Layout\AwesomeLayout");
     $definition_onecol->setLibrary('layout_builder_awesome_sections/layout_builder_awesome_sections');
-    $definition_onecol->setTemplatePath(drupal_get_path('module', 'layout_builder_awesome_sections').'/layouts/awesome_section');
+    $definition_onecol->setTemplatePath(\Drupal::service('extension.list.module')->getPath('layout_builder_awesome_sections').'/layouts/awesome_section');
     $definition_onecol->setTemplate('layout--awesome-section');
   }
 }
diff --git a/src/Plugin/Layout/AwesomeLayout.php b/src/Plugin/Layout/AwesomeLayout.php
index 1c1d5f2..d4141c0 100644
--- a/src/Plugin/Layout/AwesomeLayout.php
+++ b/src/Plugin/Layout/AwesomeLayout.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_builder_awesome_sections\Plugin\Layout;
 
+use Drupal\Core\Layout\LayoutDefinition;
 use CssLint\Linter;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Layout\LayoutDefault;
@@ -20,7 +21,7 @@ class AwesomeLayout extends LayoutDefault implements PluginFormInterface {
    */
   public function defaultConfiguration() {
     $configuration = parent::defaultConfiguration();
-    /** @var \Drupal\Core\Layout\LayoutDefinition $plugin_definition */
+    /** @var LayoutDefinition $plugin_definition */
     $plugin_definition = $this->getPluginDefinition();
     $regions = $plugin_definition->getRegions();
     $region_count = count($regions);
@@ -75,7 +76,7 @@ class AwesomeLayout extends LayoutDefault implements PluginFormInterface {
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $form_state) {
     $values = $form_state->getValues();
-    /** @var \Drupal\Core\Layout\LayoutDefinition $plugin_definition */
+    /** @var LayoutDefinition $plugin_definition */
     $plugin_definition = $this->getPluginDefinition();
     $regions = $plugin_definition->getRegions();
     foreach ($regions as $key => $region) {
@@ -93,7 +94,7 @@ class AwesomeLayout extends LayoutDefault implements PluginFormInterface {
    * {@inheritdoc}
    */
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Layout\LayoutDefinition $plugin_definition */
+    /** @var LayoutDefinition $plugin_definition */
     $plugin_definition = $this->getPluginDefinition();
     $regions = $plugin_definition->getRegions();
     $region_count = count($regions);
@@ -333,7 +334,7 @@ class AwesomeLayout extends LayoutDefault implements PluginFormInterface {
   public function submitConfigurationForm(array &$form, FormStateInterface $form_state) {
     parent::submitConfigurationForm($form, $form_state);
     $values = $form_state->getValues();
-    /** @var \Drupal\Core\Layout\LayoutDefinition $plugin_definition */
+    /** @var LayoutDefinition $plugin_definition */
     $plugin_definition = $this->getPluginDefinition();
     $regions = $plugin_definition->getRegions();
     if (!isset($this->configuration['uuid'])) {
@@ -375,7 +376,7 @@ class AwesomeLayout extends LayoutDefault implements PluginFormInterface {
 
     if (!empty($this->configuration['section_properties']['background_image'])) {
       $imageFileId = implode($this->configuration['section_properties']['background_image']);
-      /** @var \Drupal\file\Entity\File $image */
+      /** @var File $image */
       $image = File::load($imageFileId);
       if ($image != NULL) {
         $image->setPermanent();
@@ -416,7 +417,7 @@ class AwesomeLayout extends LayoutDefault implements PluginFormInterface {
       if (!empty($this->configuration[$key]['display_background_image'])) {
         if (!empty($this->configuration[$key]['background_image'])) {
           $imageFileId = implode($this->configuration[$key]['background_image']);
-          /** @var \Drupal\file\Entity\File $image */
+          /** @var File $image */
           $image = File::load($imageFileId);
           if ($image != NULL) {
             $image->setPermanent();
@@ -458,7 +459,7 @@ class AwesomeLayout extends LayoutDefault implements PluginFormInterface {
   }
 
   public function hexToRgba($hex, $opacity) {
-    /** @var \Mexitek\PHPColors\Color $color */
+    /** @var Color $color */
     $color = new Color($hex);
     $color_rgb_array = $color->getRgb();
     return 'rgba(' . $color_rgb_array['R'] . ',' . $color_rgb_array['G'] . ',' . $color_rgb_array['B'] . ',' . $opacity . ')';
