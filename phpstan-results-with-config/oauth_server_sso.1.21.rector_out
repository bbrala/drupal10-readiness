modules/contrib/oauth_server_sso/includes/handler.php
modules/contrib/oauth_server_sso/oauth_server_sso.install
modules/contrib/oauth_server_sso/oauth_server_sso.module
modules/contrib/oauth_server_sso/src/Controller/oauth_server_ssoController.php
modules/contrib/oauth_server_sso/src/DBQueries.php
modules/contrib/oauth_server_sso/src/Form/MiniorangeAdvancedSettings.php
modules/contrib/oauth_server_sso/src/Form/MiniorangeConfigOAuthClient.php
modules/contrib/oauth_server_sso/src/Form/MiniorangeGeneralSettings.php
modules/contrib/oauth_server_sso/src/Form/MiniorangeLicensing.php
modules/contrib/oauth_server_sso/src/Form/MiniorangeOAuthServerCustomerSetup.php
modules/contrib/oauth_server_sso/src/Form/MiniorangeServerResponseSettings.php
modules/contrib/oauth_server_sso/src/Form/MiniorangeSupport.php
modules/contrib/oauth_server_sso/src/MiniorangeOAuthServerConstants.php
modules/contrib/oauth_server_sso/src/MiniorangeOAuthServerCustomer.php
modules/contrib/oauth_server_sso/src/MiniorangeOAuthServerSupport.php
modules/contrib/oauth_server_sso/src/Utilities.php
modules/contrib/oauth_server_sso/src/feedback.php
modules/contrib/oauth_server_sso/src/handler.php
modules/contrib/oauth_server_sso/src/mo_oauth_server_visualTour.php

8 files with changes
====================

1) modules/contrib/oauth_server_sso/src/Utilities.php:21

    ---------- begin diff ----------
@@ @@
  * along with miniOrange OAuth Server module.  If not, see <http://www.gnu.org/licenses/>.
  */
 namespace Drupal\oauth_server_sso;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\oauth_server_sso\MiniorangeOAuthServerSupport;

 class Utilities {
@@ @@
 	    }
 	}

-    public static function AddsupportTab(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
+    public static function AddsupportTab(array &$form, FormStateInterface $form_state)
     {
         $form['markup_idp_attr_header_top_support'] = array('#markup' => '</div><div class="mo_oauth_server_table_layout_support_1 mo_oauth_container" id="mo_oauth_server_support_query">',);

@@ @@
         );
     }

-    public static function advertiseClient(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
+    public static function advertiseClient(array &$form, FormStateInterface $form_state)
     {
         $form['markup_oauth_server_attr_header_top_support'] = array('#markup' => '</div><div class="mo_oauth_server_table_layout_support_1 mo_oauth_container" id="mo_oauth_server_support_query">',);
         global $base_url;
-        $module_path = drupal_get_path('module', 'oauth_server_sso');
+        $module_path = \Drupal::service('extension.list.module')->getPath('oauth_server_sso');
         $form['miniorange_oauth_server_setup_guide_link'] = array(
             '#markup' => '<div class="mo_oauth_server_table_layout" id="mo_oauth_guide_vt">',
         );
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/oauth_server_sso/src/Form/MiniorangeSupport.php:8

    ---------- begin diff ----------
@@ @@
  */
 namespace Drupal\oauth_server_sso\Form;

+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\oauth_server_sso\Utilities;
 use Drupal\oauth_server_sso\MiniorangeOAuthServerSupport;
@@ @@
         return 'oauth_server_sso_support';
     }

-    public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state) {
+    public function buildForm(array $form, FormStateInterface $form_state) {

         $form['markup_library'] = array(
             '#attached' => array(
@@ @@
     /**
      * Send support query.
      */
-    public function submitForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+    public function submitForm(array &$form, FormStateInterface $form_state) {

         $email = $form['oauth_server_sso_email_address']['#value'];
         $phone = $form['oauth_server_sso_phone_number']['#value'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/oauth_server_sso/src/Form/MiniorangeServerResponseSettings.php:4

    ---------- begin diff ----------
@@ @@
  * Contains \Drupal\oauth_server_sso\Form\MiniorangeServerResponseSettings.
  */
 namespace Drupal\oauth_server_sso\Form;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\oauth_server_sso\Utilities;
 use Drupal\oauth_server_sso\MiniorangeOAuthServerSupport;
@@ @@
           return 'miniorange_general_settings';
       }

-      public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
+      public function buildForm(array $form, FormStateInterface $form_state)
       {
           global $base_url;

@@ @@
     return $form;
     }

-    public function submitForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+    public function submitForm(array &$form, FormStateInterface $form_state) {

     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/oauth_server_sso/src/Form/MiniorangeOAuthServerCustomerSetup.php:5

    ---------- begin diff ----------
@@ @@
  */

 namespace Drupal\oauth_server_sso\Form;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\oauth_server_sso\MiniorangeOAuthServerCustomer;
 use Drupal\Core\Form\FormBase;
 use Drupal\oauth_server_sso\Utilities;
@@ @@
         return 'oauth_server_sso_customer_setup';
     }

-    public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
+    public function buildForm(array $form, FormStateInterface $form_state)
     {
         global $base_url;
         $current_status = \Drupal::config('oauth_server_sso.settings')->get('oauth_server_sso_status');
@@ @@
         return $form;
     }

-    public function submitForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+    public function submitForm(array &$form, FormStateInterface $form_state) {
         $username = $form['oauth_server_sso_customer_setup_username']['#value'];
         $phone = $form['oauth_server_sso_customer_setup_phone']['#value'];
         $password = $form['oauth_server_sso_customer_setup_password']['#value']['pass1'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/oauth_server_sso/src/Form/MiniorangeLicensing.php:7

    ---------- begin diff ----------
@@ @@
  * Showing Licensing form info.
  */
 namespace Drupal\oauth_server_sso\Form;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\oauth_server_sso\MiniorangeOAUthServerSupport;

@@ @@
         return 'oauth_server_sso_licensing';
     }

-    public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
+    public function buildForm(array $form, FormStateInterface $form_state)
     {

         $form['markup_library'] = array(
@@ @@
         return $form;
     }

-    public function submitForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+    public function submitForm(array &$form, FormStateInterface $form_state) {

     }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/oauth_server_sso/src/Form/MiniorangeGeneralSettings.php:4

    ---------- begin diff ----------
@@ @@
  * Contains \Drupal\oauth_server_sso\Form\MiniorangeGeneralSettings.
  */
 namespace Drupal\oauth_server_sso\Form;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\oauth_server_sso\Utilities;
 use Drupal\oauth_server_sso\MiniorangeOAuthServerSupport;
@@ @@
           return 'miniorange_general_settings';
       }

-      public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
+      public function buildForm(array $form, FormStateInterface $form_state)
       {
           global $base_url;

@@ @@
           return $form;
     }

-    public function submitForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+    public function submitForm(array &$form, FormStateInterface $form_state) {

     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/oauth_server_sso/src/Form/MiniorangeConfigOAuthClient.php:5

    ---------- begin diff ----------
@@ @@
  */

 namespace Drupal\oauth_server_sso\Form;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\oauth_server_sso\handler;
 use Drupal\oauth_server_sso\Utilities;
@@ @@
         return 'oauth_server_sso_config_client';
     }

-    public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
+    public function buildForm(array $form, FormStateInterface $form_state)
     {

         $moTour = mo_oauth_server_visualTour::genArray();
@@ @@

         global $base_url;
         $stat = '';
-        $module_path = drupal_get_path('module', 'oauth_server_sso');
+        $module_path = \Drupal::service('extension.list.module')->getPath('oauth_server_sso');
         $finalpath = $base_url;
         $stat = \Drupal::config('oauth_server_sso.settings')->get('oauth_server_sso_add_client_status');

@@ @@
         return $form;
     }

-    function oauth_server_sso_next_1(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
+    function oauth_server_sso_next_1(array &$form, FormStateInterface $form_state)
     {
         $client_name = $form['oauth_server_sso_client_name']['#value'];
         $redirect_url = $form['oauth_server_sso_redirect_url']['#value'];
@@ @@
         \Drupal::messenger()->addMessage($this->t('Configurations saved successfully.'));
     }

-    function oauth_server_sso_next_2(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
+    function oauth_server_sso_next_2(array &$form, FormStateInterface $form_state)
     {
         if($form['oauth_server_sso_client_name']['#value'] != '')
         {
@@ @@
         \Drupal::messenger()->addMessage($this->t('Configurations saved successfully.'));
     }

-    function oauth_server_sso_delete_client(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
+    function oauth_server_sso_delete_client(array &$form, FormStateInterface $form_state)
     {
         \Drupal::configFactory()->getEditable('oauth_server_sso.settings')->clear('oauth_server_sso_client_name')->save();
         \Drupal::configFactory()->getEditable('oauth_server_sso.settings')->clear('oauth_server_sso_client_id')->save();
@@ @@
         \Drupal::configFactory()->getEditable('oauth_server_sso.settings')->clear('oauth_server_sso_add_client_status')->save();
     }

-    function submitForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state){
+    function submitForm(array &$form, FormStateInterface $form_state){

     }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/oauth_server_sso/src/Form/MiniorangeAdvancedSettings.php:4

    ---------- begin diff ----------
@@ @@
  * Contains \Drupal\oauth_server_sso\Form\MiniorangeAdvancedSettings.
  */
 namespace Drupal\oauth_server_sso\Form;
+use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\oauth_server_sso\Utilities;
 use Drupal\oauth_server_sso\MiniorangeOAuthServerSupport;
@@ @@
           return 'miniorange_advanced_settings';
       }

-      public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state)
+      public function buildForm(array $form, FormStateInterface $form_state)
       {
           global $base_url;

@@ @@
           return $form;
     }

-    public function submitForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+    public function submitForm(array &$form, FormStateInterface $form_state) {

     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

