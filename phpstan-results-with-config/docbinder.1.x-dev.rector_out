modules/contrib/docbinder/docbinder.module
modules/contrib/docbinder/src/Ajax/AddFileCommand.php
modules/contrib/docbinder/src/Ajax/RemoveFileCommand.php
modules/contrib/docbinder/src/Ajax/UpdateFileCountCommand.php
modules/contrib/docbinder/src/Controller/DocBinderController.php
modules/contrib/docbinder/src/Form/DocBinderDownloadForm.php
modules/contrib/docbinder/src/Form/DocBinderSettingsForm.php
modules/contrib/docbinder/src/Plugin/Block/DocBinderBlock.php

8 files with changes
====================

1) modules/contrib/docbinder/src/Plugin/Block/DocBinderBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\docbinder\Plugin\Block;

+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Block\BlockBase;

 /**
@@ @@
   /**
    * The tempstore.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/docbinder/src/Form/DocBinderSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\docbinder\Form;

+use Drupal\node\NodeTypeInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\node\Entity\NodeType;
@@ @@
     $node_types = NodeType::loadMultiple();
     $bundle_options = [];
     foreach ($node_types as $node_type_id => $node_type) {
-      /** @var \Drupal\node\NodeTypeInterface $node_type */
+      /** @var NodeTypeInterface $node_type */
       $bundle_options[$node_type_id] = $node_type->label();
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/docbinder/src/Form/DocBinderDownloadForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\docbinder\Form;

+use Drupal\Core\TempStore\SharedTempStore;
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\Archiver\Zip;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\File\Exception\FileException;
 use Drupal\Core\Form\FormBase;
@@ @@
   /**
    * The tempstore.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Constructs a new WebformInvitationDownloadForm instance.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(Connection $database) {
@@ @@
         $zip_filename = 'FileCollection_' . substr($fids_hash, 0, 8) . '.zip';
         $zip_filepath = $docbinder_folder . $zip_filename;
         try {
-          \Drupal::service('file_system')->prepareDirectory($docbinder_folder, FILE_CREATE_DIRECTORY);
+          \Drupal::service('file_system')->prepareDirectory($docbinder_folder, FileSystemInterface::CREATE_DIRECTORY);
         }
         catch (FileException $e) {
           // Log or set message or doing something else.
@@ @@
         $filepath = \Drupal::service('file_system')->realpath($zip_filepath);
         if ($filepath) {
           // Get Zip instance.
-          /** @var \Drupal\Core\Archiver\Zip $zip */
+          /** @var Zip $zip */
           $zip = \Drupal::service('plugin.manager.archiver')
             ->getInstance(array('filepath' => $filepath));

@@ @@
    *   $add = array( 'sites/default/files/README.txt' );
    */
   public function filterCollection($files) {
-    $directory = \Drupal::service('file_system')->realpath(file_default_scheme() . "://");
+    $directory = \Drupal::service('file_system')->realpath(\Drupal::config('system.file')->get('default_scheme') . "://");
     /** @var File $file **/
     foreach ($files as $i => &$file) {
       $uri = $file->getFileUri();
    ----------- end diff -----------

Applied rules:
 * FileCreateDirectoryRector
 * FileDefaultSchemeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/docbinder/src/Controller/DocBinderController.php:4

    ---------- begin diff ----------
@@ @@
  */

 namespace Drupal\docbinder\Controller;
+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\TempStore\PrivateTempStoreFactory;
@@ @@
   /**
    * The tempstore.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;

@@ @@
   /**
    * Constructs a new DocBinder controller.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   The tempstore factory.
    */
   public function __construct(PrivateTempStoreFactory $temp_store_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/docbinder/src/Ajax/UpdateFileCountCommand.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\docbinder\Ajax;

+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Ajax\CommandInterface;


@@ @@
   /**
    * The tempstore.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/docbinder/src/Ajax/RemoveFileCommand.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\docbinder\Ajax;

+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Ajax\CommandInterface;


@@ @@
   /**
    * The tempstore.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/docbinder/src/Ajax/AddFileCommand.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\docbinder\Ajax;

+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Ajax\CommandInterface;
 use Drupal\file\Entity\File;

@@ @@
   /**
    * The tempstore.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/docbinder/docbinder.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\NodeInterface;
 use Drupal\file\Entity\File;
 use Drupal\Core\Template\Attribute;
 use Drupal\Core\Link;
@@ @@
   $rewrite = TRUE;
   $config = \Drupal::config('docbinder.settings');
   $node = \Drupal::routeMatch()->getParameter('node');
-  if ($node instanceof \Drupal\node\NodeInterface) {
+  if ($node instanceof NodeInterface) {
     // You can get nid and anything else you need from the node object.
     $type = $node->getType();
     $bundles = $config->get('collection.bundles');
@@ @@
  * Change File Formatter Template
  */
 function docbinder_theme_registry_alter(&$theme_registry) {
-  $theme_registry['file_link']['path'] = drupal_get_path('module', 'docbinder') . '/templates';
+  $theme_registry['file_link']['path'] = \Drupal::service('extension.list.module')->getPath('docbinder') . '/templates';
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

