modules/contrib/dynamic_menu/dynamic_menu.module
modules/contrib/dynamic_menu/src/EventSubscriber/DynamicMenuBlockKernelViewSubscriber.php
modules/contrib/dynamic_menu/src/Plugin/Block/DynamicMenu.php
modules/contrib/dynamic_menu/src/Plugin/Derivative/DynamicMenu.php

1 file with changes
===================

1) modules/contrib/dynamic_menu/src/EventSubscriber/DynamicMenuBlockKernelViewSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\dynamic_menu\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $currentRouteMatch;

@@ @@
   /**
    * Constructs a new GenericSubnavBlockKernelViewSubscriber.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $current_route_match
+   * @param RouteMatchInterface $current_route_match
    *   The current route match.
    */
   public function __construct(RouteMatchInterface $current_route_match) {
@@ @@
   /**
    * Alters the block library modal.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
-  public function onView(GetResponseEvent $event) {
+  public function onView(RequestEvent $event) {
     switch ($this->currentRouteMatch->getRouteName()) {
       case 'block.admin_library':
       case 'context.reaction.blocks.library':
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 1 file has been changed by Rector                                         

