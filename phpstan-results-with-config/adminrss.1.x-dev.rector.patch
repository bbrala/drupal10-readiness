diff --git a/adminrss.module b/adminrss.module
index 65d2dda..28fe131 100644
--- a/adminrss.module
+++ b/adminrss.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\adminrss\ViewsManager;
 /**
  * @file
  * The AdminRSS module file.
@@ -28,7 +29,7 @@ use Drupal\Core\Routing\RouteMatchInterface;
 function adminrss_help($path, RouteMatchInterface $routeMatch) {
   switch ($path) {
     case 'help.page.adminrss':
-      /** @var \Drupal\adminrss\ViewsManager $viewsManager */
+      /** @var ViewsManager $viewsManager */
       $viewsManager = \Drupal::service('adminrss.views_manager');
 
       $ret = [
diff --git a/src/FeedAccess.php b/src/FeedAccess.php
index 0a670a7..26f06a7 100644
--- a/src/FeedAccess.php
+++ b/src/FeedAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\adminrss;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -21,7 +22,7 @@ class FeedAccess implements AccessInterface {
   /**
    * FeedAccess constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config.factory service.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
@@ -34,7 +35,7 @@ class FeedAccess implements AccessInterface {
    * @param string $adminrss_token
    *   The access token.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result for the feed.
    */
   public function access($adminrss_token) {
diff --git a/src/Form/AdminRssSettingsForm.php b/src/Form/AdminRssSettingsForm.php
index b0c145c..5080749 100644
--- a/src/Form/AdminRssSettingsForm.php
+++ b/src/Form/AdminRssSettingsForm.php
@@ -16,16 +16,16 @@ class AdminRssSettingsForm extends ConfigFormBase {
   /**
    * The adminrss.views_manager service.
    *
-   * @var \Drupal\adminrss\ViewsManager
+   * @var ViewsManager
    */
   protected $viewsManager;
 
   /**
    * AdminRssSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config.factory service.
-   * @param \Drupal\adminrss\ViewsManager $views_manager
+   * @param ViewsManager $views_manager
    *   The adminrss.views_manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ViewsManager $views_manager) {
diff --git a/src/Plugin/views/access/AdminRssAccess.php b/src/Plugin/views/access/AdminRssAccess.php
index 2101cfb..0e021df 100644
--- a/src/Plugin/views/access/AdminRssAccess.php
+++ b/src/Plugin/views/access/AdminRssAccess.php
@@ -23,7 +23,7 @@ class AdminRssAccess extends AccessPluginBase implements ContainerFactoryPluginI
   /**
    * The adminrss.feed_access service.
    *
-   * @var \Drupal\adminrss\FeedAccess
+   * @var FeedAccess
    */
   protected $feedAccess;
 
@@ -38,7 +38,7 @@ class AdminRssAccess extends AccessPluginBase implements ContainerFactoryPluginI
   /**
    * Determine if the current user has access or not.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user who wants to access this view.
    *
    * @return bool
@@ -56,7 +56,7 @@ class AdminRssAccess extends AccessPluginBase implements ContainerFactoryPluginI
    * Likely the access plugin will add new requirements, so its custom access
    * checker can be applied.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route to change.
    */
   public function alterRouteDefinition(Route $route) {
diff --git a/src/ViewsManager.php b/src/ViewsManager.php
index 96f9f52..e939c95 100644
--- a/src/ViewsManager.php
+++ b/src/ViewsManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\adminrss;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Link;
@@ -22,7 +23,7 @@ class ViewsManager {
   /**
    * The router.route_provider service.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
@@ -36,18 +37,18 @@ class ViewsManager {
   /**
    * The view storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $viewStorage;
 
   /**
    * ViewsManager constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config.factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $etm
+   * @param EntityTypeManagerInterface $etm
    *   The entity_type.manager service.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $routeProvider
+   * @param RouteProviderInterface $routeProvider
    *   The router.route_provider service.
    */
   public function __construct(
@@ -73,7 +74,7 @@ class ViewsManager {
    *
    * @param array $carry
    *   A carry (accumulator) for links.
-   * @param \Drupal\views\Entity\View $view
+   * @param View $view
    *   The view from which to fetch links.
    *
    * @return array
