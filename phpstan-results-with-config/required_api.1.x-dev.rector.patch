diff --git a/required_api.module b/required_api.module
index 11807c5..424eed6 100644
--- a/required_api.module
+++ b/required_api.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\field\FieldConfigInterface;
 /**
  * @file
  * Provides an unified API to find out if a field widget should be required.
@@ -114,7 +115,7 @@ function require_api_element_ajax_callback($form, $form_state) {
  * Saves default (Core) required setting back to Field Config entity.
  */
 function required_api_field_config_presave(EntityInterface $entity) {
-  /** @var \Drupal\field\FieldConfigInterface $entity */
+  /** @var FieldConfigInterface $entity */
   $plugin = $entity->getThirdPartySetting('required_api', 'required_plugin');
   $plugin_setting = $entity->getThirdPartySetting('required_api', 'required_plugin_options', FALSE);
   if ($plugin == 'default') {
diff --git a/src/Annotation/Required.php b/src/Annotation/Required.php
index bf7cef6..8dcb6f2 100644
--- a/src/Annotation/Required.php
+++ b/src/Annotation/Required.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\required_api\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class Required extends Plugin {
   /**
    * The human-readable name of the api.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/Required/RequiredBase.php b/src/Plugin/Required/RequiredBase.php
index f64382d..fbc891f 100644
--- a/src/Plugin/Required/RequiredBase.php
+++ b/src/Plugin/Required/RequiredBase.php
@@ -22,7 +22,7 @@ abstract class RequiredBase extends PluginBase implements RequiredPluginInterfac
   /**
    * Return a form element to use in form_field_ui_field_instance_edit_form.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *   A field instance.
    *
    * @return array
diff --git a/src/Plugin/RequiredPluginInterface.php b/src/Plugin/RequiredPluginInterface.php
index 5e25d0a..357b17b 100644
--- a/src/Plugin/RequiredPluginInterface.php
+++ b/src/Plugin/RequiredPluginInterface.php
@@ -16,9 +16,9 @@ interface RequiredPluginInterface extends PluginInspectionInterface, Configurabl
   /**
    * Determines whether a field is required or not.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *   A field instance.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account.
    *
    * @return bool
@@ -29,7 +29,7 @@ interface RequiredPluginInterface extends PluginInspectionInterface, Configurabl
   /**
    * Return a form element to use in form_field_ui_field_instance_edit_form.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *   A field instance.
    *
    * @return array
diff --git a/src/RequiredApiWidgetPluginManager.php b/src/RequiredApiWidgetPluginManager.php
index f700b23..738dd98 100644
--- a/src/RequiredApiWidgetPluginManager.php
+++ b/src/RequiredApiWidgetPluginManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\required_api;
 
+use Drupal\Core\Field\WidgetInterface;
+use Drupal\field\Entity\FieldConfig;
 use Drupal\Core\Field\WidgetPluginManager;
 use Drupal\Core\Field\BaseFieldDefinition;
 
@@ -13,14 +15,14 @@ class RequiredApiWidgetPluginManager extends WidgetPluginManager {
   /**
    * The required plugin manager.
    *
-   * @var \Drupal\required_api\RequiredManager
+   * @var RequiredManager
    */
   protected $requiredManager;
 
   /**
    * Gets the required manager.
    *
-   * @return \Drupal\required_api\RequiredManager
+   * @return RequiredManager
    *   The required manager to set.
    */
   public function getRequiredManager() {
@@ -30,7 +32,7 @@ class RequiredApiWidgetPluginManager extends WidgetPluginManager {
   /**
    * Sets the required manager.
    *
-   * @param \Drupal\required_api\RequiredManager $manager
+   * @param RequiredManager $manager
    *   The required manager to set.
    */
   public function setRequiredManager(RequiredManager $manager) {
@@ -55,7 +57,7 @@ class RequiredApiWidgetPluginManager extends WidgetPluginManager {
    *     - settings: (array) Settings specific to the widget. Each setting
    *       defaults to the default value specified in the widget definition.
    *
-   * @return \Drupal\Core\Field\WidgetInterface
+   * @return WidgetInterface
    *   A Widget object.
    */
   public function getInstance(array $options) {
@@ -76,7 +78,7 @@ class RequiredApiWidgetPluginManager extends WidgetPluginManager {
       // Set the required property.
       $field_definition = $options['field_definition'];
 
-      /** @var \Drupal\field\Entity\FieldConfig $field_definition */
+      /** @var FieldConfig $field_definition */
       $field_definition->setRequired($required);
     }
 
diff --git a/src/RequiredManager.php b/src/RequiredManager.php
index ab86d29..edabac9 100644
--- a/src/RequiredManager.php
+++ b/src/RequiredManager.php
@@ -45,7 +45,7 @@ class RequiredManager extends DefaultPluginManager {
   /**
    * Gets the plugin_id for this field definition, fallback to system default.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *   A field instance.
    *
    * @return string
diff --git a/tests/modules/required_api_test/src/Plugin/Required/RequiredTestTrue.php b/tests/modules/required_api_test/src/Plugin/Required/RequiredTestTrue.php
index 3bc9f3a..2a81c49 100644
--- a/tests/modules/required_api_test/src/Plugin/Required/RequiredTestTrue.php
+++ b/tests/modules/required_api_test/src/Plugin/Required/RequiredTestTrue.php
@@ -20,9 +20,9 @@ class RequiredTestTrue extends RequiredBase {
   /**
    * Determines wether a field is required or not.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *   A field instance object.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account.
    *
    * @return bool
@@ -35,7 +35,7 @@ class RequiredTestTrue extends RequiredBase {
   /**
    * Determines wether a field is required or not.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *   A field instance object.
    *
    * @return bool
diff --git a/tests/modules/required_api_test/tests/src/Plugin/Required/RequiredManagerTest.php b/tests/modules/required_api_test/tests/src/Plugin/Required/RequiredManagerTest.php
index 7c659d6..f5bd9d2 100644
--- a/tests/modules/required_api_test/tests/src/Plugin/Required/RequiredManagerTest.php
+++ b/tests/modules/required_api_test/tests/src/Plugin/Required/RequiredManagerTest.php
@@ -16,22 +16,20 @@ class RequiredManagerTest extends UnitTestCase {
   /**
    * The tested required manager.
    *
-   * @var \Drupal\required_api\RequiredManager
+   * @var RequiredManager
    */
   protected $requiredManager;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
 
     parent::setUp();
 
     $namespaces = new \ArrayObject([]);
 
-    $cache_backend = $this->getMockBuilder('Drupal\Core\Cache\MemoryBackend')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_backend = $this->createMock('Drupal\Core\Cache\MemoryBackend');
 
     $module_handler = $this->createMock('Drupal\Core\Extension\ModuleHandlerInterface');
 
