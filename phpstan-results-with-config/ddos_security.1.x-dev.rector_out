modules/contrib/ddos_security/ddos_security.install
modules/contrib/ddos_security/ddos_security.module
modules/contrib/ddos_security/src/Controller/DdosSecurityCSVReport.php
modules/contrib/ddos_security/src/Controller/DdosSecurityEntryList.php
modules/contrib/ddos_security/src/Controller/DdosSecurityPage.php
modules/contrib/ddos_security/src/EventSubscriber/AttackProtection.php
modules/contrib/ddos_security/src/Form/DdosSecurityConfigSettingsForm.php
modules/contrib/ddos_security/src/Form/DdosSecurityEntryDeleteForm.php
modules/contrib/ddos_security/src/Form/DdosSecurityEntrySearch.php
modules/contrib/ddos_security/src/Services/DdosCrypt.php

8 files with changes
====================

1) modules/contrib/ddos_security/src/Form/DdosSecurityEntrySearch.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Encryption param.
    *
-   * @var \Drupal\ddos_security\Services\DdosCrypt
+   * @var DdosCrypt
    */
   protected $ddosCrypt;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ddos_security/src/Form/DdosSecurityEntryDeleteForm.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Encryption param.
    *
-   * @var \Drupal\ddos_security\Services\DdosCrypt
+   * @var DdosCrypt
    */
   protected $ddosCrypt;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/ddos_security/src/Form/DdosSecurityConfigSettingsForm.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The Config storage.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configfactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/ddos_security/src/EventSubscriber/AttackProtection.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ddos_security\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Drupal\Core\Database\Driver\mysql\Connection;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Session\SessionManagerInterface;
@@ @@
   /**
    * The Config storage.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * The Logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
   /**
    * Drupal\Core\Database\Driver\mysql\Connection definition.
    *
-   * @var \Drupal\Core\Database\Driver\mysql\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;

@@ @@
   /**
    * Current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Call this method whenever the KernelEvents::TERMINATE event is dispatched.
    */
-  public function ddosSecurity(GetResponseEvent $event) {
+  public function ddosSecurity(RequestEvent $event) {
     $ddosConfig = $this->config->get('ddos_security.settings');
     $current_path = $this->currentPath->getPath();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/ddos_security/src/Controller/DdosSecurityPage.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The Config storage.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configfactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/ddos_security/src/Controller/DdosSecurityEntryList.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ddos_security\Controller;

+use Drupal\Core\Form\FormBase;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Form\FormState;
 use Drupal\Core\Url;
@@ @@
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Encryption param.
    *
-   * @var \Drupal\ddos_security\Services\DdosCrypt
+   * @var DdosCrypt
    */
   protected $ddosCrypt;

@@ @@
   /**
    * The request stack object.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;

@@ @@
   /**
    * Db connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * AltrRegisterDiamondDetails construct function.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   EntityTypeManagerInterface definition call.
-   * @param \Drupal\ddos_security\Services\DdosCrypt $ddos_crypt
+   * @param DdosCrypt $ddos_crypt
    *   Encryption service.
-   * @param Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Request service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   DB connection object.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, DdosCrypt $ddos_crypt, RequestStack $request_stack, Connection $connection, DateFormatterInterface $date_formatter) {
@@ @@
   /**
    * Container create.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container create.
    *
-   * @return \Drupal\Core\Form\FormBase|static
+   * @return FormBase|static
    *   returns container.
    */
   public static function create(ContainerInterface $container) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/ddos_security/src/Controller/DdosSecurityCSVReport.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Db connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/ddos_security/ddos_security.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Link;
 /**
  * @file
  * This module provides a managed DDoS protection service for the website.
@@ @@
     if (!empty($config->get('enable_mail_log') && $config->get('enable_mail_log') == 1)) {
       $mailManager = \Drupal::service('plugin.manager.mail');
       $route_url = Url::fromRoute('ddos_security.csv_export', [], ['absolute' => TRUE]);
-      $report_link = \Drupal::l(t('Click here to download'), $route_url);
+      $report_link = Link::fromTextAndUrl(t('Click here to download'), $route_url);
       $module = 'ddos_security';
       $key = 'ddos_security';
       $mailId = \Drupal::config('system.site')->get('mail');
    ----------- end diff -----------

Applied rules:
 * DrupalLRector
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

