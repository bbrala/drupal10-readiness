modules/contrib/content_release/content_release.batch.inc
modules/contrib/content_release/content_release.module
modules/contrib/content_release/src/Access/ScheduleReleaseAccess.php
modules/contrib/content_release/src/Form/ScheduleReleaseForm.php

4 files with changes
====================

1) modules/contrib/content_release/src/Form/ScheduleReleaseForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a new ScheduleReleaseForm.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager service.
    */
   public function __construct(Connection $connection, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/content_release/src/Access/ScheduleReleaseAccess.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\content_release\Access;

+use Drupal\Core\Access\AccessResultInterface;
+use Drupal\taxonomy\VocabularyInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\taxonomy\TermInterface;
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a ScheduleReleaseAccess object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ @@
   /**
    * Schedule release access.
    *
-   * @param \Drupal\taxonomy\TermInterface $taxonomy_term
+   * @param TermInterface $taxonomy_term
    *   The taxonomy term.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(TermInterface $taxonomy_term) {
     $vid = $taxonomy_term->bundle();

-    /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+    /** @var VocabularyInterface $vocabulary */
     $vocabulary = $this->entityTypeManager->getStorage('taxonomy_vocabulary')->load($vid);

     return $vocabulary->getThirdPartySetting('content_release', 'enabled', FALSE) ? AccessResult::allowed() : AccessResult::forbidden();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/content_release/content_release.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\taxonomy\Entity\Term;
 /**
  * @file
  * Schedules content publishing based on release date.
@@ @@
  * Implements hook_form_BASE_FORM_ID_alter() for \Drupal\taxonomy\TermForm.
  */
 function content_release_form_taxonomy_term_form_alter(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\taxonomy\Entity\Term $term */
+  /** @var Term $term */
   $term = $form_state->getFormObject()->getEntity();
-  /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+  /** @var VocabularyInterface $vocabulary */
   $vocabulary = Vocabulary::load($term->bundle());

   if (!$vocabulary->getThirdPartySetting('content_release', 'enabled', FALSE)) {
@@ @@
  * Implements hook_form_FORM_ID_alter() for \Drupal\taxonomy\VocabularyForm.
  */
 function content_release_form_taxonomy_vocabulary_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+  /** @var VocabularyInterface $vocabulary */
   $vocabulary = $form_state->getFormObject()->getEntity();

   $form['content_release'] = [
@@ @@
   $form['terms']['#header'][] = t('Publish date');
   $form['terms']['#header'][] = '';
   foreach (Element::children($form['terms']) as $key) {
-    /** @var \Drupal\taxonomy\Entity\Term $term */
+    /** @var Term $term */
     $term = $form['terms'][$key]['#term'];

     $content_release = $term->get('content_release')->value;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


4) modules/contrib/content_release/content_release.batch.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\ContentEntityBase;
 /**
  * @file
  * Contains the callbacks for the content_release batch process.
@@ @@
  *   An array of entity idex items from the DB query.
  */
 function content_release_batch_process(string $publish_time, object $row) {
-  /** @var Drupal\Core\Entity\ContentEntityBase $entity */
+  /** @var ContentEntityBase $entity */
   // Load the entity from the DB row.
   $entity = \Drupal::entityTypeManager()
     ->getStorage($row->entity_type)
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

