diff --git a/fivestar.module b/fivestar.module
index dbc4e2c..d0c3e72 100644
--- a/fivestar.module
+++ b/fivestar.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\field\FieldStorageConfigInterface;
 /**
  * @file
  * A simple n-star voting widget, usable in other forms.
@@ -147,7 +148,7 @@ function fivestar_form_comment_form_alter(&$form, &$form_state, $form_id) {
  * Implements hook_form_FORM_ID_alter().
  */
 function fivestar_form_field_ui_field_edit_form_alter(&$form, $form_state) {
-  /** @var Drupal\field\FieldStorageConfigInterface $field */
+  /** @var FieldStorageConfigInterface $field */
   $field = $form['#field'];
   if ($field->getType() == 'fivestar') {
     // Multiple values is not supported with Fivestar.
diff --git a/src/Form/FivestarForm.php b/src/Form/FivestarForm.php
index 3ceba8d..aa0fd30 100644
--- a/src/Form/FivestarForm.php
+++ b/src/Form/FivestarForm.php
@@ -16,7 +16,7 @@ class FivestarForm extends FormBase {
   /**
    * The fivestar.vote_result_manager service.
    *
-   * @var \Drupal\fivestar\VoteResultManager
+   * @var VoteResultManager
    */
   protected $resultManager;
 
diff --git a/src/Plugin/Field/FieldFormatter/FivestarFormatterBase.php b/src/Plugin/Field/FieldFormatter/FivestarFormatterBase.php
index b09be86..c333a06 100644
--- a/src/Plugin/Field/FieldFormatter/FivestarFormatterBase.php
+++ b/src/Plugin/Field/FieldFormatter/FivestarFormatterBase.php
@@ -17,14 +17,14 @@ abstract class FivestarFormatterBase extends FormatterBase {
   /**
    * The widget manager.
    *
-   * @var \Drupal\fivestar\WidgetManager
+   * @var WidgetManager
    */
   protected $widgetManager;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -35,7 +35,7 @@ abstract class FivestarFormatterBase extends FormatterBase {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -45,9 +45,9 @@ abstract class FivestarFormatterBase extends FormatterBase {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\fivestar\WidgetManager $widget_manager
+   * @param WidgetManager $widget_manager
    *   The widget manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, WidgetManager $widget_manager, RendererInterface $renderer) {
diff --git a/src/Plugin/Field/FieldFormatter/PercentageFormatter.php b/src/Plugin/Field/FieldFormatter/PercentageFormatter.php
index 191b1cc..57a1f7f 100644
--- a/src/Plugin/Field/FieldFormatter/PercentageFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/PercentageFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fivestar\Plugin\Field\FieldFormatter;
 
+use Drupal\fivestar\Plugin\Field\FieldType\FivestarItem;
 use Drupal\Core\Field\FieldItemListInterface;
 
 /**
@@ -32,7 +33,7 @@ class PercentageFormatter extends FivestarFormatterBase {
 
     $elements = [];
     if (!$items->isEmpty()) {
-      /** @var \Drupal\fivestar\Plugin\Field\FieldType\FivestarItem $item */
+      /** @var FivestarItem $item */
       foreach ($items as $delta => $item) {
         $value = $item->getValue();
         $rating[] = $value['rating'];
diff --git a/src/Plugin/Field/FieldFormatter/RatingFormatter.php b/src/Plugin/Field/FieldFormatter/RatingFormatter.php
index 869fd83..a474574 100644
--- a/src/Plugin/Field/FieldFormatter/RatingFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/RatingFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fivestar\Plugin\Field\FieldFormatter;
 
+use Drupal\fivestar\Plugin\Field\FieldType\FivestarItem;
 use Drupal\Core\Field\FieldItemListInterface;
 
 /**
@@ -32,7 +33,7 @@ class RatingFormatter extends FivestarFormatterBase {
 
     $elements = [];
     if (!$items->isEmpty()) {
-      /** @var \Drupal\fivestar\Plugin\Field\FieldType\FivestarItem $item */
+      /** @var FivestarItem $item */
       foreach ($items as $delta => $item) {
         $value = $item->getValue();
         $rating[] = $value['rating'];
diff --git a/src/Plugin/Field/FieldFormatter/StarsFormatter.php b/src/Plugin/Field/FieldFormatter/StarsFormatter.php
index 9867ae1..3cb6ff8 100644
--- a/src/Plugin/Field/FieldFormatter/StarsFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/StarsFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fivestar\Plugin\Field\FieldFormatter;
 
+use Drupal\fivestar\Plugin\Field\FieldType\FivestarItem;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Security\TrustedCallbackInterface;
@@ -115,7 +116,7 @@ class StarsFormatter extends FivestarFormatterBase implements TrustedCallbackInt
     ] + $this->getSettings();
 
     if (!$items->isEmpty()) {
-      /** @var \Drupal\fivestar\Plugin\Field\FieldType\FivestarItem $item */
+      /** @var FivestarItem $item */
       foreach ($items as $delta => $item) {
         $context = [
           'entity' => $entity,
diff --git a/src/Plugin/Field/FieldType/FivestarItem.php b/src/Plugin/Field/FieldType/FivestarItem.php
index 4245d4f..8a5eded 100644
--- a/src/Plugin/Field/FieldType/FivestarItem.php
+++ b/src/Plugin/Field/FieldType/FivestarItem.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fivestar\Plugin\Field\FieldType;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Field\FieldItemBase;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
@@ -287,10 +288,10 @@ class FivestarItem extends FieldItemBase {
   /**
    * Get target entity.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    * @param array $field_settings
    *
-   * @return \Drupal\Core\Entity\FieldableEntityInterface|null
+   * @return FieldableEntityInterface|null
    */
   public function getTargetEntity(FieldableEntityInterface $entity, array $field_settings) {
     if ($field_settings['enable_voting_target'] !== TRUE) {
@@ -351,12 +352,12 @@ class FivestarItem extends FieldItemBase {
    * current user. For "Rating mode editing" mode - if entity have method
    * "getOwner" use entity owner, otherwise the current user has to be used.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity from which try to get owner.
    * @param string $rating_mode
    *   Determines under what conditions a user can leave a review.
    *
-   * @return \Drupal\Core\Session\AccountInterface
+   * @return AccountInterface
    *   The account of the vote owner.
    */
   protected function getVoteOwner(FieldableEntityInterface $entity, $rating_mode) {
diff --git a/src/Plugin/Field/FieldWidget/FivestarWidgetBase.php b/src/Plugin/Field/FieldWidget/FivestarWidgetBase.php
index 3c0ca53..dd9b4b3 100644
--- a/src/Plugin/Field/FieldWidget/FivestarWidgetBase.php
+++ b/src/Plugin/Field/FieldWidget/FivestarWidgetBase.php
@@ -16,14 +16,14 @@ abstract class FivestarWidgetBase extends WidgetBase {
   /**
    * The Fivestar widget manager.
    *
-   * @var \Drupal\fivestar\WidgetManager
+   * @var WidgetManager
    */
   protected $widgetManager;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -34,15 +34,15 @@ abstract class FivestarWidgetBase extends WidgetBase {
    *   The plugin ID for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\fivestar\WidgetManager $widget_manager
+   * @param WidgetManager $widget_manager
    *   The widget manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, WidgetManager $widget_manager, RendererInterface $renderer) {
diff --git a/src/VoteManager.php b/src/VoteManager.php
index 95c839f..b585b98 100644
--- a/src/VoteManager.php
+++ b/src/VoteManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\fivestar;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\votingapi\Entity\Vote;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Session\AccountProxyInterface;
@@ -14,30 +16,30 @@ class VoteManager {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The vote storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $voteStorage;
 
   /**
    * Constructs a new VoteManager object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, AccountProxyInterface $current_user) {
@@ -67,12 +69,12 @@ class VoteManager {
   /**
    * Add vote.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    * @param int $rating
    * @param string $vote_type
    * @param int|null $uid
    *
-   * @return \Drupal\votingapi\Entity\Vote
+   * @return Vote
    */
   public function addVote(FieldableEntityInterface $entity, $rating, $vote_type = 'vote', $uid = NULL) {
     $uid = is_numeric($uid) ? $uid : $this->currentUser->id();
diff --git a/src/VoteResultManager.php b/src/VoteResultManager.php
index 50bffad..78ee66d 100644
--- a/src/VoteResultManager.php
+++ b/src/VoteResultManager.php
@@ -13,14 +13,14 @@ class VoteResultManager {
   /**
    * The vote result manager.
    *
-   * @var \Drupal\votingapi\VoteResultFunctionManager
+   * @var VoteResultFunctionManager
    */
   protected $voteResultManager;
 
   /**
    * Constructs a new VoteResultManager object.
    *
-   * @param \Drupal\votingapi\VoteResultFunctionManager $vote_result_manager
+   * @param VoteResultFunctionManager $vote_result_manager
    *   The vote result manager.
    */
   public function __construct(VoteResultFunctionManager $vote_result_manager) {
@@ -30,7 +30,7 @@ class VoteResultManager {
   /**
    * Get votes for passed entity based on vote type.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    * @param string $vote_type
    *
    * @return array
@@ -47,7 +47,7 @@ class VoteResultManager {
   /**
    * Get all votes results for passed entity.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *
    * @return array
    */
@@ -82,7 +82,7 @@ class VoteResultManager {
   /**
    * Recalculate votes results.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    */
   public function recalculateResults(FieldableEntityInterface $entity) {
     $this->voteResultManager->recalculateResults(
diff --git a/src/WidgetManager.php b/src/WidgetManager.php
index b311dbf..1d44b49 100644
--- a/src/WidgetManager.php
+++ b/src/WidgetManager.php
@@ -12,14 +12,14 @@ class WidgetManager {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new VoteManager object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(ModuleHandlerInterface $module_handler) {
diff --git a/tests/src/Functional/FivestarTest.php b/tests/src/Functional/FivestarTest.php
index 7f69f0b..1cfc253 100644
--- a/tests/src/Functional/FivestarTest.php
+++ b/tests/src/Functional/FivestarTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\fivestar\Functional;
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\fivestar\Traits\FivestarTestTrait;
@@ -27,28 +29,28 @@ class FivestarTest extends BrowserTestBase {
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $displayRepository;
 
   /**
    * A user with permission to administer Fivestar.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * A user with permission to vote.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $voterUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create content type for testing.
@@ -57,7 +59,7 @@ class FivestarTest extends BrowserTestBase {
       'name' => 'Rated content type',
     ]);
 
-    /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $displayRepository */
+    /** @var EntityDisplayRepositoryInterface $displayRepository */
     $this->displayRepository = \Drupal::service('entity_display.repository');
 
     // Create users with different permissions.
@@ -142,7 +144,7 @@ class FivestarTest extends BrowserTestBase {
     // Rate the test_node_type.
     $this->drupalLogin($this->voterUser);
     $this->drupalGet('node/' . $node->id());
-    $this->assertRaw('No votes yet', 'Fivestar field has no votes.');
+    $this->assertSession()->responseContains('No votes yet');
     $this->assertEmpty($this->xpath("//form[contains(@class, 'fivestar-widget')]"));
 
     // Check if node with attached fivestar field can be save.
diff --git a/tests/src/FunctionalJavascript/FivestarAjaxTestBase.php b/tests/src/FunctionalJavascript/FivestarAjaxTestBase.php
index 82487e4..7182395 100644
--- a/tests/src/FunctionalJavascript/FivestarAjaxTestBase.php
+++ b/tests/src/FunctionalJavascript/FivestarAjaxTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\fivestar\FunctionalJavascript;
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\fivestar\Traits\FivestarTestTrait;
 
@@ -26,28 +28,28 @@ abstract class FivestarAjaxTestBase extends WebDriverTestBase {
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $displayRepository;
 
   /**
    * A user with permission to administer Fivestar.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * A user with permission to vote.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $voterUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create content type for testing.
@@ -56,7 +58,7 @@ abstract class FivestarAjaxTestBase extends WebDriverTestBase {
       'name' => 'Rated content type',
     ]);
 
-    /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $displayRepository */
+    /** @var EntityDisplayRepositoryInterface $displayRepository */
     $this->displayRepository = \Drupal::service('entity_display.repository');
 
     // Create users with different permissions.
diff --git a/tests/src/Kernel/HookFivestarWidgetsAlterTest.php b/tests/src/Kernel/HookFivestarWidgetsAlterTest.php
index 53c0c45..f21b56e 100644
--- a/tests/src/Kernel/HookFivestarWidgetsAlterTest.php
+++ b/tests/src/Kernel/HookFivestarWidgetsAlterTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\fivestar\Kernel;
 
+use Drupal\fivestar\WidgetManager;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -14,7 +15,7 @@ class HookFivestarWidgetsAlterTest extends KernelTestBase {
   /**
    * The Fivestar widget manager.
    *
-   * @var \Drupal\fivestar\WidgetManager
+   * @var WidgetManager
    */
   protected $widgetManager;
 
@@ -30,7 +31,7 @@ class HookFivestarWidgetsAlterTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->widgetManager = $this->container->get('fivestar.widget_manager');
diff --git a/tests/src/Kernel/HookFivestarWidgetsTest.php b/tests/src/Kernel/HookFivestarWidgetsTest.php
index 88bc193..c973bf4 100644
--- a/tests/src/Kernel/HookFivestarWidgetsTest.php
+++ b/tests/src/Kernel/HookFivestarWidgetsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\fivestar\Kernel;
 
+use Drupal\fivestar\WidgetManager;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -14,7 +15,7 @@ class HookFivestarWidgetsTest extends KernelTestBase {
   /**
    * The Fivestar widget manager.
    *
-   * @var \Drupal\fivestar\WidgetManager
+   * @var WidgetManager
    */
   protected $widgetManager;
 
@@ -30,7 +31,7 @@ class HookFivestarWidgetsTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->widgetManager = $this->container->get('fivestar.widget_manager');
