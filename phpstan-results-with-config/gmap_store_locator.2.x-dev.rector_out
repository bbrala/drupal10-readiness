modules/contrib/gmap_store_locator/src/Controller/StoreLocatorPage.php
modules/contrib/gmap_store_locator/src/Entity/StoreLocator.php
modules/contrib/gmap_store_locator/src/Entity/StoreLocatorInterface.php
modules/contrib/gmap_store_locator/src/Form/StoreLocatorConfigurationForm.php
modules/contrib/gmap_store_locator/src/Form/StoreLocatorDeleteForm.php
modules/contrib/gmap_store_locator/src/Form/StoreLocatorForm.php
modules/contrib/gmap_store_locator/src/Form/StoreLocatorSettingsForm.php
modules/contrib/gmap_store_locator/src/Helper/GoogleApiKeyHelper.php
modules/contrib/gmap_store_locator/src/Helper/LocationDataHelper.php
modules/contrib/gmap_store_locator/src/Plugin/Block/StoreLocatorBlock.php
modules/contrib/gmap_store_locator/src/Services/GeocoderConsumerService.php
modules/contrib/gmap_store_locator/src/StoreLocatorAccessControlHandler.php
modules/contrib/gmap_store_locator/src/StoreLocatorHtmlRouteProvider.php
modules/contrib/gmap_store_locator/src/StoreLocatorListBuilder.php
modules/contrib/gmap_store_locator/src/StoreLocatorViewsData.php
modules/contrib/gmap_store_locator/store_locator.module
modules/contrib/gmap_store_locator/store_locator.theme.inc

8 files with changes
====================

1) modules/contrib/gmap_store_locator/store_locator.module:52

    ---------- begin diff ----------
@@ @@
     $icon_url = '';
     if (!is_null($fid)) {
       $file_entity = File::load($fid);
-      $icon_url = file_create_url($file_entity->getFileUri());
+      $icon_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file_entity->getFileUri());
     }
     $lat = $build['name']['#object']->get('latitude')->value;
     $lng = $build['name']['#object']->get('longitude')->value;
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


2) modules/contrib/gmap_store_locator/src/StoreLocatorListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\store_locator;

+use Drupal\store_locator\Entity\StoreLocator;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Link;
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\store_locator\Entity\StoreLocator $entity */
+    /** @var StoreLocator $entity */
     $row['name'] = Link::fromTextAndUrl($entity->label(), new Url('entity.store_locator.canonical', [
       'store_locator' => $entity->id(),
     ]));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/gmap_store_locator/src/StoreLocatorHtmlRouteProvider.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
    * @return route
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
    * @return route
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/gmap_store_locator/src/Services/GeocoderConsumerService.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Language Manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * Service constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The http client.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/gmap_store_locator/src/Helper/LocationDataHelper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\store_locator\Helper;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Url;
 use Drupal\image\Entity\ImageStyle;
 use Drupal\file\Entity\File;
@@ @@
    * @return array
    *   An object containing the field information.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function loadInfowindow($type = NULL) {
     $location_data = $item_list = $filter_array = [];
@@ @@
       if (!empty($fid)) {
         $file = File::load($fid);
         $path = $file->getFileUri();
-        $marker_path = Url::fromUri(file_create_url($path))->toString();
+        $marker_path = \Drupal::service('file_url_generator')->generate($path)->toString();
       }
     }
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/gmap_store_locator/src/Form/StoreLocatorSettingsForm.php:28

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/gmap_store_locator/src/Form/StoreLocatorForm.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The Geocoder service variable.
    *
-   * @var \Drupal\store_locator\Services\GeocoderConsumerService
+   * @var GeocoderConsumerService
    */
   protected $geoCoder;

@@ @@
   /**
    * The country manager.
    *
-   * @var \Drupal\Core\Locale\CountryManagerInterface
+   * @var CountryManagerInterface
    */
   protected $countryManager;

@@ @@
   /**
    * Constructs Storage & prepare data object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_bundle_info
    *   The entity bundle info.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time.
-   * @param \Drupal\store_locator\Services\GeocoderConsumerService $geoCoder
+   * @param GeocoderConsumerService $geoCoder
    *   The Google Geocode Consumer Service.
-   * @param \Drupal\Core\Locale\CountryManagerInterface $country_manager
+   * @param CountryManagerInterface $country_manager
    *   The Country Manager Service.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The Messenger Service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/gmap_store_locator/src/Form/StoreLocatorConfigurationForm.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The file storage service variable.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $fileStorage;

@@ @@
   /**
    * The file usage service variable.
    *
-   * @var \Drupal\file\FileUsage\DatabaseFileUsageBackend
+   * @var DatabaseFileUsageBackend
    */
   protected $dbFileUsage;

@@ @@
   /**
    * The image factory service variable.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The link generator service variable.
    *
-   * @var \Drupal\Core\Utility\LinkGenerator
+   * @var LinkGenerator
    */
   protected $linkGenerator;

@@ @@
   /**
    * The config service variable.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $config;

@@ @@
   /**
    * Constructs DatabaseFileUsageBackend, ImageFactory & LinkGenerator object.
    *
-   * @param \Drupal\file\FileUsage\DatabaseFileUsageBackend $db_file_usage
+   * @param DatabaseFileUsageBackend $db_file_usage
    *   Database file usage service.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   Image Factory Service.
-   * @param \Drupal\Core\Utility\LinkGenerator $link_generator
+   * @param LinkGenerator $link_generator
    *   Link Generator Service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $file_storage
+   * @param EntityStorageInterface $file_storage
    *   File Storage Service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config Factory Service.
    */
   public function __construct(DatabaseFileUsageBackend $db_file_usage, ImageFactory $image_factory, LinkGenerator $link_generator, EntityStorageInterface $file_storage, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

