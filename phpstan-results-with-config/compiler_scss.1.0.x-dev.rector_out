modules/contrib/compiler_scss/src/Backend/ScssPhp.php
modules/contrib/compiler_scss/src/BackendBase.php
modules/contrib/compiler_scss/src/BackendInterface.php
modules/contrib/compiler_scss/src/CompilerScssServiceProvider.php
modules/contrib/compiler_scss/src/Config/Schema/FontFamily.php
modules/contrib/compiler_scss/src/Config/Schema/FontFamilyDataDefinition.php
modules/contrib/compiler_scss/src/Config/Schema/Number.php
modules/contrib/compiler_scss/src/Config/Schema/NumberDataDefinition.php
modules/contrib/compiler_scss/src/Element/ScssColor.php
modules/contrib/compiler_scss/src/Element/ScssFontFamily.php
modules/contrib/compiler_scss/src/Element/ScssNumber.php
modules/contrib/compiler_scss/src/Plugin/Compiler/ScssCompiler.php
modules/contrib/compiler_scss/src/Plugin/DataType/Color.php
modules/contrib/compiler_scss/src/Plugin/DataType/FontFamily.php
modules/contrib/compiler_scss/src/Plugin/DataType/Number.php
modules/contrib/compiler_scss/src/Plugin/DataType/Unit.php
modules/contrib/compiler_scss/src/Type/Color.php
modules/contrib/compiler_scss/src/Type/Number.php

5 files with changes
====================

1) modules/contrib/compiler_scss/src/Plugin/Compiler/ScssCompiler.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The backend impementation for this compiler plugin.
    *
-   * @var \Drupal\compiler_scss\BackendInterface
+   * @var BackendInterface
    */
   protected $backend;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\compiler_scss\BackendInterface $backend
+   * @param BackendInterface $backend
    *   The backend impementation for this compiler plugin.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, BackendInterface $backend) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/compiler_scss/src/Element/ScssNumber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\compiler_scss\Element;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element\FormElement;

@@ @@
    *
    * Each group is an array of unit labels keyed by unit name.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup[string][int]
+   * @var TranslatableMarkup [string][int]
    */
   protected static $units = [];

   /**
-   * Get an associative array of allowed unit options, keyed by unit name.
-   *
-   * @param int|null $type
-   *   The type(s) of unit to retrieve. See the contsants in this class for all
-   *   possible unit types. If null, all types are included (default: NULL).
-   *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[string]
-   *   An associative array of allowed unit options, keyed by unit name.
-   */
+  * Get an associative array of allowed unit options, keyed by unit name.
+  *
+  * @param int|null $type
+  *   The type(s) of unit to retrieve. See the contsants in this class for all
+  *   possible unit types. If null, all types are included (default: NULL).
+  *
+   * @return TranslatableMarkup [string]
+    An associative array of allowed unit options, keyed by unit name.
+  */
   public static function getAllowedUnits($type = NULL) {
     $groups = array_keys(self::$units);
     $type = is_int($type) ? $type : self::UNIT_ALL;
@@ @@
   }

   /**
-   * Get an associative array of unit options for the supplied element.
-   *
-   * The supplied element's "#unit_options" property will determine the result
-   * of this method using the following algorithm:
-   *
-   * 1. If "#unit_options" is an array, it will be intersected with an internal
-   *    list of allowed unit options.
-   * 2. Else, if "#unit_options" is a string, the desired unit will be extracted
-   *    from an internal list of allowed unit options.
-   * 3. Else, if "#unit_options" is equivalent to TRUE, all allowed unit options
-   *    will be produced.
-   * 4. Else, no unit options will be produced.
-   *
-   * @param array $element
-   *   The element for which to get an associative array of unit options.
-   *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[string]
-   *   An associative array of unit option labels keyed by unit name.
-   */
+  * Get an associative array of unit options for the supplied element.
+  *
+  * The supplied element's "#unit_options" property will determine the result
+  * of this method using the following algorithm:
+  *
+  * 1. If "#unit_options" is an array, it will be intersected with an internal
+  *    list of allowed unit options.
+  * 2. Else, if "#unit_options" is a string, the desired unit will be extracted
+  *    from an internal list of allowed unit options.
+  * 3. Else, if "#unit_options" is equivalent to TRUE, all allowed unit options
+  *    will be produced.
+  * 4. Else, no unit options will be produced.
+  *
+  * @param array $element
+  *   The element for which to get an associative array of unit options.
+  *
+   * @return TranslatableMarkup [string]
+    An associative array of unit option labels keyed by unit name.
+  */
   protected static function getUnitOptions(array $element) {
     $allowed = self::getAllowedUnits();
     $desired = $element['#unit_options'];
@@ @@
    *
    * @param array $element
    *   The element to process before being rendered.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ @@
    *
    * @param array $element
    *   The element to which a unit select element should be added.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ @@
    *
    * @param array $element
    *   The element to which a hidden unit input should be added.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ @@
    *
    * @param array $element
    *   The element that should be validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/compiler_scss/src/Element/ScssFontFamily.php:29

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function addMoreAjax(array $form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function addMoreSubmit(array $form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $element
    *   The element to process before being rendered.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ @@
    *
    * @param array $element
    *   The element that should be validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/compiler_scss/src/Element/ScssColor.php:62

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The element to process before being rendered.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
@@ @@
    *
    * @param array $element
    *   The element that should be validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/compiler_scss/src/BackendBase.php:45

    ---------- begin diff ----------
@@ @@
    * If the supplied context is a theme compiler context, then it will be used
    * to resolve theme-relative file paths.
    *
-   * @param \Drupal\compiler\CompilerContextInterface $context
+   * @param CompilerContextInterface $context
    *   A compiler context used to define a compilation.
    * @param string $path
    *   A path, possibly theme-relative.
@@ @@
    * value must be absolute if not passed a theme compiler context; otherwise
    * the path is theme-relative.
    *
-   * @param \Drupal\compiler\CompilerContextInterface $context
+   * @param CompilerContextInterface $context
    *   A compiler context used to define a compilation.
    *
    * @return string|null
@@ @@
   /**
    * Retrieve the source code to pass to the compiler.
    *
-   * @param \Drupal\compiler\CompilerContextInterface $context
+   * @param CompilerContextInterface $context
    *   A compiler context used to define a compilation.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 5 files have been changed by Rector                                       

