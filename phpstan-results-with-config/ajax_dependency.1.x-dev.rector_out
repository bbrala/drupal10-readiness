modules/contrib/ajax_dependency/ajax_dependency.example.php
modules/contrib/ajax_dependency/ajax_dependency_example/ajax_dependency.example.php
modules/contrib/ajax_dependency/ajax_dependency_example/src/AjaxDependencyExampleForm.php
modules/contrib/ajax_dependency/src/AjaxDependency.php
modules/contrib/ajax_dependency/src/AjaxDependencyWorker.php
modules/contrib/ajax_dependency/src/FormTool.php
modules/contrib/ajax_dependency/tests/src/Functional/AdminPageTest.php

4 files with changes
====================

1) modules/contrib/ajax_dependency/tests/src/Functional/AdminPageTest.php:32

    ---------- begin diff ----------
@@ @@
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ajax_dependency/src/FormTool.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ajax_dependency;

+use Drupal\Core\Controller\ControllerResolverInterface;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
 class FormTool {

   /**
-   * @return \Drupal\Core\Controller\ControllerResolverInterface
+   * @return ControllerResolverInterface
    */
   private static function getControllerResolver() {
     return \Drupal::service('controller_resolver');
@@ @@
    *
    * @see \Drupal\Core\Form\FormBuilder::prepareForm
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return string
@@ @@
    *
    * @param array $path
    *   The target element path.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/ajax_dependency/src/AjaxDependencyWorker.php:19

    ---------- begin diff ----------
@@ @@
    *   The source element.
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   public static function setDependency(&$sourceElement, &$targetElement, FormStateInterface $formState) {
@@ @@
    *
    * @param array $sourceElement
    *   The source element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return array
@@ @@
    *
    * @param array $sourceElement
    *   The source element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function addNojsSubmitElement(array &$sourceElement, FormStateInterface $formState) {
@@ @@
    *
    * @param array $sourceElement
    *   The source element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function moveNojsSubmitElement(array &$sourceElement, FormStateInterface $formState) {
@@ @@
    *
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return array
@@ @@
    *
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function replaceWithMockIfNoAccess(array &$targetElement, FormStateInterface $formState) {
@@ @@
    *
    * @param array $targetElement
    *   The target element.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    */
   private static function addSelector(array &$targetElement, FormStateInterface $formState) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/ajax_dependency/ajax_dependency.example.php:0

    ---------- begin diff ----------
@@ @@
 <?php
+use Drupal\Core\TypedData\Exception\MissingDataException;
+use Drupal\Core\Entity\EntityFormInterface;
+use Drupal\Core\Entity\ContentEntityInterface;
+use Drupal\Core\Field\FieldItemInterface;
 /**
  * @file
  *   Ajax Dependency examples..
@@ @@
  *
  * This is an example how to use ajax_dependency in form_alter of a node form.
  *
- * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+ * @throws MissingDataException
  */
 function h4c_organisation_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\Core\Entity\EntityFormInterface $formObject */
+  /** @var EntityFormInterface $formObject */
   $formObject = $form_state->getFormObject();
   $node = $formObject->getEntity();
   if ($node->bundle() === 'organisation') {
@@ @@
       \Drupal::messenger()->addError(t('Missing fields: %fields', ['%fields' => implode(', ', $missingFields)]));
     }
     else {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $updatedNode */
+      /** @var ContentEntityInterface $updatedNode */
       $updatedNode = $formObject->buildEntity($form, $form_state);
       $orgTypes = [];
-      /** @var \Drupal\Core\Field\FieldItemInterface $item */
+      /** @var FieldItemInterface $item */
       foreach ($updatedNode->get('field_h4c_organisation_types') as $item) {
         if ($value = $item->get('value')->getValue()) {
           $orgTypes[$value] = $value;
@@ @@
       AjaxDependency::contentIf($orgTypes['business'] ?? NULL, $orgTypesWidget, $form['field_h4c_sustainability'], $form_state);
     }
   }
-}
+}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

