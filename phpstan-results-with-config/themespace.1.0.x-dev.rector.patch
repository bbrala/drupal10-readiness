diff --git a/src/Plugin/Definition/MergeablePluginDefinitionInterface.php b/src/Plugin/Definition/MergeablePluginDefinitionInterface.php
index 84a2338..7f80ea8 100644
--- a/src/Plugin/Definition/MergeablePluginDefinitionInterface.php
+++ b/src/Plugin/Definition/MergeablePluginDefinitionInterface.php
@@ -21,7 +21,7 @@ interface MergeablePluginDefinitionInterface extends PluginDefinitionInterface {
   /**
    * Merge information from another plugin definition into this one.
    *
-   * @param \Drupal\Component\Plugin\Definition\PluginDefinitionInterface|array $definition
+   * @param PluginDefinitionInterface|array $definition
    *   Other plugin definition to merge into this one. Commonly this is a base
    *   plugin definition being applied to a derived definition.
    */
diff --git a/src/Plugin/Discovery/ProviderTypedYamlDiscovery.php b/src/Plugin/Discovery/ProviderTypedYamlDiscovery.php
index ff2953b..c07ba6d 100644
--- a/src/Plugin/Discovery/ProviderTypedYamlDiscovery.php
+++ b/src/Plugin/Discovery/ProviderTypedYamlDiscovery.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\themespace\Plugin\Discovery;
 
+use Drupal\Component\Plugin\Definition\PluginDefinition;
 use Drupal\Component\Discovery\DiscoverableInterface;
 use Drupal\Component\Plugin\Discovery\DiscoveryTrait;
 use Drupal\Core\Discovery\YamlDiscovery;
@@ -39,7 +40,7 @@ class ProviderTypedYamlDiscovery implements ProviderTypedDiscoveryInterface {
    * instances are keyed by "theme" or "module" and are only created if the
    * relevant directories were provided to the constructor.
    *
-   * @var \Drupal\Component\Discovery\DiscoverableInterface[]
+   * @var DiscoverableInterface[]
    */
   protected $discovery = [];
 
@@ -121,7 +122,7 @@ class ProviderTypedYamlDiscovery implements ProviderTypedDiscoveryInterface {
    * @param array $definition
    *   Plugin definition from the YAML file.
    *
-   * @return \Drupal\Component\Plugin\Definition\PluginDefinition|array
+   * @return PluginDefinition|array
    *   The plugin definition as of the appropriate class, or the original
    *   definition array if no class is set for the plugin definition.
    */
@@ -171,7 +172,7 @@ class ProviderTypedYamlDiscovery implements ProviderTypedDiscoveryInterface {
   /**
    * Find all plugin definition using the providered discovery object.
    *
-   * @param \Drupal\Component\Discovery\DiscoverableInterface $discovery
+   * @param DiscoverableInterface $discovery
    *   The discovery object to use to find definitions.
    * @param string $provider_type
    *   The provider type to apply to each of the plugin definitions. Should be
diff --git a/src/Plugin/Discovery/ProviderTypedYamlDiscoveryDecorator.php b/src/Plugin/Discovery/ProviderTypedYamlDiscoveryDecorator.php
index 26e0178..44c3c29 100644
--- a/src/Plugin/Discovery/ProviderTypedYamlDiscoveryDecorator.php
+++ b/src/Plugin/Discovery/ProviderTypedYamlDiscoveryDecorator.php
@@ -20,14 +20,14 @@ class ProviderTypedYamlDiscoveryDecorator extends ProviderTypedYamlDiscovery {
   /**
    * The discovery object that is being decorated.
    *
-   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface
+   * @var DiscoveryInterface
    */
   protected $decorated;
 
   /**
    * Constructs a new ProviderTypedYamlDiscoveryDecorator object.
    *
-   * @param \Drupal\Component\Plugin\Discovery\DiscoveryInterface $decorated
+   * @param DiscoveryInterface $decorated
    *   The discovery object that is being decorated.
    * @param string $name
    *   The file name suffix to use for discovery; for example, 'test' will
diff --git a/src/Plugin/ProviderTypedPluginManager.php b/src/Plugin/ProviderTypedPluginManager.php
index a42fd91..03a1fa8 100644
--- a/src/Plugin/ProviderTypedPluginManager.php
+++ b/src/Plugin/ProviderTypedPluginManager.php
@@ -33,9 +33,9 @@ class ProviderTypedPluginManager extends DefaultPluginManager implements Provide
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    * @param string|null $plugin_interface
    *   The interface each plugin should implement.
diff --git a/src/Plugin/ProviderTypedPluginManagerTrait.php b/src/Plugin/ProviderTypedPluginManagerTrait.php
index eef2a80..68e26a6 100644
--- a/src/Plugin/ProviderTypedPluginManagerTrait.php
+++ b/src/Plugin/ProviderTypedPluginManagerTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\themespace\Plugin;
 
+use Drupal\Component\Plugin\Discovery\DiscoveryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\themespace\Plugin\Definition\ProviderTypedPluginDefinitionInterface;
@@ -33,14 +34,14 @@ trait ProviderTypedPluginManagerTrait {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -85,7 +86,7 @@ trait ProviderTypedPluginManagerTrait {
   /**
    * Get the theme handler.
    *
-   * @return \Drupal\Core\Extension\ThemeHandlerInterface
+   * @return ThemeHandlerInterface
    *   The theme handler object.
    */
   protected function getThemeHandler(): ThemeHandlerInterface {
@@ -99,7 +100,7 @@ trait ProviderTypedPluginManagerTrait {
   /**
    * Get the module handler.
    *
-   * @return \Drupal\Core\Extension\ModuleHandlerInterface
+   * @return ModuleHandlerInterface
    *   The module handler object.
    */
   protected function getModuleHandler(): ModuleHandlerInterface {
@@ -116,7 +117,7 @@ trait ProviderTypedPluginManagerTrait {
    * Should be implemented by the plugin manager to get a provider typed
    * plugin discovery object.
    *
-   * @return \Drupal\Component\Plugin\Discovery\DiscoveryInterface
+   * @return DiscoveryInterface
    *   The plugin discovery object.
    *
    * @see \Drupal\Core\Plugin\PluginManagerBase::getDiscovery()
diff --git a/tests/modules/themespace_test/src/Plugin/Derivative/ModuleYamlDeriver.php b/tests/modules/themespace_test/src/Plugin/Derivative/ModuleYamlDeriver.php
index 32b1f40..3abc7ad 100644
--- a/tests/modules/themespace_test/src/Plugin/Derivative/ModuleYamlDeriver.php
+++ b/tests/modules/themespace_test/src/Plugin/Derivative/ModuleYamlDeriver.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\themespace_test\Plugin\Derivative;
 
+use Drupal\themespace_test\Plugin\TestPluginDefinition;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Plugin\Discovery\ContainerDeriverInterface;
@@ -22,7 +23,7 @@ class ModuleYamlDeriver extends DeriverBase implements ContainerDeriverInterface
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -31,7 +32,7 @@ class ModuleYamlDeriver extends DeriverBase implements ContainerDeriverInterface
    *
    * @param string $base_plugin_id
    *   The plugin ID of the deriver definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct($base_plugin_id, EntityTypeManagerInterface $entity_type_manager) {
@@ -53,7 +54,7 @@ class ModuleYamlDeriver extends DeriverBase implements ContainerDeriverInterface
    * {@inheritdoc}
    */
   public function getDerivativeDefinitions($base_plugin_definition) {
-    /** @var \Drupal\themespace_test\Plugin\TestPluginDefinition */
+    /** @var TestPluginDefinition */
     $base = $base_plugin_definition;
 
     $this->derivatives = [];
diff --git a/tests/src/Kernel/PluginDiscoveryTest.php b/tests/src/Kernel/PluginDiscoveryTest.php
index a850091..10daae4 100644
--- a/tests/src/Kernel/PluginDiscoveryTest.php
+++ b/tests/src/Kernel/PluginDiscoveryTest.php
@@ -74,7 +74,7 @@ class PluginDiscoveryTest extends KernelTestBase {
   /**
    * Asserts that the discovery found plugin and verifies definitions.
    *
-   * @param \Drupal\themespace\Plugin\Discovery\ProviderTypedDiscoveryInterface $discovery
+   * @param ProviderTypedDiscoveryInterface $discovery
    *   The discovery to use for finding plugin definitions.
    * @param array $types
    *   An array of the discovery types expected from this discovery being used
diff --git a/tests/src/Kernel/ThemeInstallTrait.php b/tests/src/Kernel/ThemeInstallTrait.php
index 5b0bf09..e2266d2 100644
--- a/tests/src/Kernel/ThemeInstallTrait.php
+++ b/tests/src/Kernel/ThemeInstallTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\themespace\Kernel;
 
+use Drupal\Core\Extension\Extension;
 use Drupal\Core\Extension\ModuleExtensionList;
 
 /**
@@ -33,15 +34,13 @@ trait ThemeInstallTrait {
     // "core_version_requirement" that might be purposefully there for
     // deprecation testing (ex: simpletest_deprecation_test.info.yml).
     foreach ($moduleList as $extension) {
-      /** @var \Drupal\Core\Extension\Extension|object $extension */
+      /** @var Extension|object $extension */
       $extension->info = $infoParser->parse($extension->getPathname());
     }
 
     // Create a mock "extension.list.module" service so as not to trigger any
     // the InfoParserException mentioned above, while installing themes.
-    $extensionList = $this->getMockBuilder(ModuleExtensionList::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $extensionList = $this->createMock(ModuleExtensionList::class);
 
     $extensionList->expects($this->any())
       ->method('getList')
diff --git a/tests/src/TestPluginDefinition.php b/tests/src/TestPluginDefinition.php
index 079ad3f..4229899 100644
--- a/tests/src/TestPluginDefinition.php
+++ b/tests/src/TestPluginDefinition.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\themespace;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\themespace\Plugin\Definition\ProviderTypedPluginDefinition;
 
 /**
@@ -23,7 +24,7 @@ class TestPluginDefinition extends ProviderTypedPluginDefinition {
   /**
    * Standard and common property to assignment.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup|string
+   * @var TranslatableMarkup|string
    */
   public $label;
 
