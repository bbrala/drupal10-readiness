diff --git a/composer.json b/composer.json
index 34715e1..e4ce197 100644
--- a/composer.json
+++ b/composer.json
@@ -22,6 +22,6 @@
         "source": "https://git.drupalcode.org/project/gmap_store_locator"
     },
     "require": {
-        "drupal/core": "^8.8 || ^9.0"
+        "drupal/core": "^9.3 || ^10"
     }
 }
diff --git a/src/Form/StoreLocatorConfigurationForm.php b/src/Form/StoreLocatorConfigurationForm.php
index 8a05953..453546f 100755
--- a/src/Form/StoreLocatorConfigurationForm.php
+++ b/src/Form/StoreLocatorConfigurationForm.php
@@ -23,50 +23,50 @@ class StoreLocatorConfigurationForm extends ConfigFormBase {
   /**
    * The file storage service variable.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $fileStorage;
 
   /**
    * The file usage service variable.
    *
-   * @var \Drupal\file\FileUsage\DatabaseFileUsageBackend
+   * @var DatabaseFileUsageBackend
    */
   protected $dbFileUsage;
 
   /**
    * The image factory service variable.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The link generator service variable.
    *
-   * @var \Drupal\Core\Utility\LinkGenerator
+   * @var LinkGenerator
    */
   protected $linkGenerator;
 
   /**
    * The config service variable.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $config;
 
   /**
    * Constructs DatabaseFileUsageBackend, ImageFactory & LinkGenerator object.
    *
-   * @param \Drupal\file\FileUsage\DatabaseFileUsageBackend $db_file_usage
+   * @param DatabaseFileUsageBackend $db_file_usage
    *   Database file usage service.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   Image Factory Service.
-   * @param \Drupal\Core\Utility\LinkGenerator $link_generator
+   * @param LinkGenerator $link_generator
    *   Link Generator Service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $file_storage
+   * @param EntityStorageInterface $file_storage
    *   File Storage Service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config Factory Service.
    */
   public function __construct(DatabaseFileUsageBackend $db_file_usage, ImageFactory $image_factory, LinkGenerator $link_generator, EntityStorageInterface $file_storage, ConfigFactoryInterface $config_factory) {
diff --git a/src/Form/StoreLocatorForm.php b/src/Form/StoreLocatorForm.php
index 66012d1..39526f1 100755
--- a/src/Form/StoreLocatorForm.php
+++ b/src/Form/StoreLocatorForm.php
@@ -26,31 +26,31 @@ class StoreLocatorForm extends ContentEntityForm {
   /**
    * The Geocoder service variable.
    *
-   * @var \Drupal\store_locator\Services\GeocoderConsumerService
+   * @var GeocoderConsumerService
    */
   protected $geoCoder;
 
   /**
    * The country manager.
    *
-   * @var \Drupal\Core\Locale\CountryManagerInterface
+   * @var CountryManagerInterface
    */
   protected $countryManager;
 
   /**
    * Constructs Storage & prepare data object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_bundle_info
    *   The entity bundle info.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time.
-   * @param \Drupal\store_locator\Services\GeocoderConsumerService $geoCoder
+   * @param GeocoderConsumerService $geoCoder
    *   The Google Geocode Consumer Service.
-   * @param \Drupal\Core\Locale\CountryManagerInterface $country_manager
+   * @param CountryManagerInterface $country_manager
    *   The Country Manager Service.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The Messenger Service.
    */
   public function __construct(
diff --git a/src/Form/StoreLocatorSettingsForm.php b/src/Form/StoreLocatorSettingsForm.php
index b762fa5..593b600 100755
--- a/src/Form/StoreLocatorSettingsForm.php
+++ b/src/Form/StoreLocatorSettingsForm.php
@@ -29,7 +29,7 @@ class StoreLocatorSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -41,7 +41,7 @@ class StoreLocatorSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Helper/LocationDataHelper.php b/src/Helper/LocationDataHelper.php
index 695b3ba..557e5c3 100755
--- a/src/Helper/LocationDataHelper.php
+++ b/src/Helper/LocationDataHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\store_locator\Helper;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Url;
 use Drupal\image\Entity\ImageStyle;
 use Drupal\file\Entity\File;
@@ -73,8 +75,8 @@ class LocationDataHelper {
    * @return array
    *   An object containing the field information.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function loadInfowindow($type = NULL) {
     $location_data = $item_list = $filter_array = [];
@@ -135,7 +137,7 @@ class LocationDataHelper {
       if (!empty($fid)) {
         $file = File::load($fid);
         $path = $file->getFileUri();
-        $marker_path = Url::fromUri(file_create_url($path))->toString();
+        $marker_path = \Drupal::service('file_url_generator')->generate($path)->toString();
       }
     }
 
diff --git a/src/Services/GeocoderConsumerService.php b/src/Services/GeocoderConsumerService.php
index 9c30558..d60e6c9 100755
--- a/src/Services/GeocoderConsumerService.php
+++ b/src/Services/GeocoderConsumerService.php
@@ -16,32 +16,32 @@ class GeocoderConsumerService {
   /**
    * Drupal http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * Language Manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
 
   /**
    * Service constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The http client.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(
diff --git a/src/StoreLocatorHtmlRouteProvider.php b/src/StoreLocatorHtmlRouteProvider.php
index 4d39800..9585463 100755
--- a/src/StoreLocatorHtmlRouteProvider.php
+++ b/src/StoreLocatorHtmlRouteProvider.php
@@ -36,7 +36,7 @@ class StoreLocatorHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
    * @return route
@@ -58,7 +58,7 @@ class StoreLocatorHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
    * @return route
diff --git a/src/StoreLocatorListBuilder.php b/src/StoreLocatorListBuilder.php
index 77eeb2d..8fdd492 100755
--- a/src/StoreLocatorListBuilder.php
+++ b/src/StoreLocatorListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\store_locator;
 
+use Drupal\store_locator\Entity\StoreLocator;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Link;
@@ -29,7 +30,7 @@ class StoreLocatorListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\store_locator\Entity\StoreLocator $entity */
+    /** @var StoreLocator $entity */
     $row['name'] = Link::fromTextAndUrl($entity->label(), new Url('entity.store_locator.canonical', [
       'store_locator' => $entity->id(),
     ]));
diff --git a/store_locator.info.yml b/store_locator.info.yml
index 494b38d..06136a7 100755
--- a/store_locator.info.yml
+++ b/store_locator.info.yml
@@ -3,4 +3,4 @@ type: module
 description: 'Store Locator with Google Maps integration.'
 package: 'Location & Map'
 configure: store_locator.settings_form
-core_version_requirement: ^8.8 || ^9.0
+core_version_requirement: ^9.3 || ^10
diff --git a/store_locator.module b/store_locator.module
index fe1f183..67a4afe 100755
--- a/store_locator.module
+++ b/store_locator.module
@@ -53,7 +53,7 @@ function store_locator_entity_view_alter(array &$build, EntityInterface $entity,
     $icon_url = '';
     if (!is_null($fid)) {
       $file_entity = File::load($fid);
-      $icon_url = file_create_url($file_entity->getFileUri());
+      $icon_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file_entity->getFileUri());
     }
     $lat = $build['name']['#object']->get('latitude')->value;
     $lng = $build['name']['#object']->get('longitude')->value;
