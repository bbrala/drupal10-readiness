diff --git a/migrate_file_to_media.drush.inc b/migrate_file_to_media.drush.inc
index bc09528..3ef9065 100644
--- a/migrate_file_to_media.drush.inc
+++ b/migrate_file_to_media.drush.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\migrate_file_to_media\Commands\MediaMigrateCommands;
 /**
  * @file
  * Backports the Drush commands to Drush 8
@@ -49,7 +50,7 @@ function migrate_file_to_media_drush_command() {
  * Call back function migrate-file-media-fields
  */
 function drush_migrate_file_to_media_migrate_file_media_fields($entity_type, $bundle, $source_field_type, $target_media_bundle) {
-  /** @var \Drupal\migrate_file_to_media\Commands\MediaMigrateCommands $migrate_file_to_media */
+  /** @var MediaMigrateCommands $migrate_file_to_media */
   $migrate_file_to_media = \Drupal::service('migrate_file_to_media.commands');
   $migrate_file_to_media->migrateFileFields($entity_type, $bundle, $source_field_type, $target_media_bundle);
 }
@@ -60,7 +61,7 @@ function drush_migrate_file_to_media_migrate_file_media_fields($entity_type, $bu
 function drush_migrate_file_to_media_migrate_duplicate_file_detection($name) {
   $options = ['check-existing-media' => drush_get_option('check-existing-media', FALSE)];
 
-  /** @var \Drupal\migrate_file_to_media\Commands\MediaMigrateCommands $migrate_file_to_media */
+  /** @var MediaMigrateCommands $migrate_file_to_media */
   $migrate_file_to_media = \Drupal::service('migrate_file_to_media.commands');
   $migrate_file_to_media->duplicateImageDetection($name, $options);
 }
@@ -71,7 +72,7 @@ function drush_migrate_file_to_media_migrate_duplicate_file_detection($name) {
 function drush_migrate_file_to_media_migrate_duplicate_media_detection($bundle = 'image', $field = 'field_media_image') {
   $options = ['all' => drush_get_option('all', TRUE)];
 
-  /** @var \Drupal\migrate_file_to_media\Commands\MediaMigrateCommands $migrate_file_to_media */
+  /** @var MediaMigrateCommands $migrate_file_to_media */
   $migrate_file_to_media = \Drupal::service('migrate_file_to_media.commands');
   $migrate_file_to_media->duplicateMediaImageDetection($bundle, $field, $options);
 }
diff --git a/src/Commands/MediaMigrateCommands.php b/src/Commands/MediaMigrateCommands.php
index 2a8855d..1f4d504 100644
--- a/src/Commands/MediaMigrateCommands.php
+++ b/src/Commands/MediaMigrateCommands.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\migrate_file_to_media\Commands;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\migrate\Plugin\Migration;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,46 +23,46 @@ use Drush\Commands\DrushCommands;
 class MediaMigrateCommands extends DrushCommands {
 
   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   private $entityFieldManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $connection;
 
   /**
    * Migration plugin manager service.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManager
+   * @var MigrationPluginManager
    */
   protected $migrationPluginManager;
 
   /**
    * The stream wrapper manager service.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * MediaMigrateCommands constructor.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityFieldManagerInterface $entityFieldManager
+   * @param EntityTypeManagerInterface $entity_type_manager
    */
   public function __construct(
     EntityFieldManagerInterface $entityFieldManager,
@@ -162,11 +165,11 @@ class MediaMigrateCommands extends DrushCommands {
    *
    * @param $entity_type
    * @param $bundle
-   * @param \Drupal\field\Entity\FieldConfig $existing_field
+   * @param FieldConfig $existing_field
    * @param $new_field_name
    * @param $target_media_bundle
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface
+   * @return FieldDefinitionInterface
    */
   private function createMediaField(
     $entity_type,
@@ -209,7 +212,7 @@ class MediaMigrateCommands extends DrushCommands {
 
       // Update Form Widget.
       $type = $entity_type . '.' . $bundle . '.default';
-      /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface $definition */
+      /** @var EntityFormDisplayInterface $definition */
       $definition = $this->entityTypeManager->getStorage('entity_form_display')
         ->load($type);
       $definition->setComponent(
@@ -239,7 +242,7 @@ class MediaMigrateCommands extends DrushCommands {
     $manager = $this->migrationPluginManager;
     $plugins = $manager->createInstances([]);
 
-    /** @var \Drupal\migrate\Plugin\Migration $migration_instance */
+    /** @var Migration $migration_instance */
     $migration_instance = NULL;
     foreach ($plugins as $id => $migration) {
       if (in_array(mb_strtolower($id), [$migration_name])) {
@@ -266,7 +269,7 @@ class MediaMigrateCommands extends DrushCommands {
         ]);
       }
       else {
-        /** @var \Drupal\file\Entity\File $file */
+        /** @var File $file */
         $file = File::load($row->getSourceProperty('target_id'));
       }
 
@@ -395,9 +398,9 @@ class MediaMigrateCommands extends DrushCommands {
 
     else {
       foreach ($medias as $media) {
-        /** @var \Drupal\media\Entity\Media $media */
+        /** @var Media $media */
         try {
-          /** @var \Drupal\file\Entity\File $file */
+          /** @var File $file */
           $file = $media->$field->entity;
 
           if ($file && !empty($binary_hash = $this->calculateBinaryHash($file))) {
diff --git a/src/Plugin/migrate/process/MediaFileCopy.php b/src/Plugin/migrate/process/MediaFileCopy.php
index 43a12c4..5efbc38 100644
--- a/src/Plugin/migrate/process/MediaFileCopy.php
+++ b/src/Plugin/migrate/process/MediaFileCopy.php
@@ -39,7 +39,7 @@ class MediaFileCopy extends FileCopy implements ContainerFactoryPluginInterface
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
@@ -133,7 +133,7 @@ class MediaFileCopy extends FileCopy implements ContainerFactoryPluginInterface
    */
   protected function saveFile($source, $destination, $replace = FileSystemInterface::EXISTS_RENAME) {
     $data = file_get_contents($source);
-    $file = file_save_data($data, $destination, $replace);
+    $file = \Drupal::service('file.repository')->writeData($data, $destination, $replace);
     return $file;
   }
 
diff --git a/src/Plugin/migrate/source/MediaEntityGenerator.php b/src/Plugin/migrate/source/MediaEntityGenerator.php
index 0e49562..0510440 100644
--- a/src/Plugin/migrate/source/MediaEntityGenerator.php
+++ b/src/Plugin/migrate/source/MediaEntityGenerator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_file_to_media\Plugin\migrate\source;
 
+use Drupal\migrate\MigrateException;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -28,17 +29,17 @@ class MediaEntityGenerator extends SourcePluginBase implements ContainerFactoryP
   protected $sourceFields = [];
 
   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   private $entityFieldManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $connection;
 
@@ -53,12 +54,12 @@ class MediaEntityGenerator extends SourcePluginBase implements ContainerFactoryP
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param MigrationInterface $migration
+   * @param EntityFieldManagerInterface $entity_field_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param Connection $connection
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    */
   public function __construct(
     array $configuration,
@@ -107,7 +108,7 @@ class MediaEntityGenerator extends SourcePluginBase implements ContainerFactoryP
   public function prepareRow(Row $row) {
     // Set source file.
     if (!empty($row->getSource()['target_id'])) {
-      /** @var \Drupal\file\Entity\File $file */
+      /** @var File $file */
       $file = File::load($row->getSource()['target_id']);
       if ($file) {
         $row->setSourceProperty('file_path', $file->getFileUri());
diff --git a/src/Plugin/migrate/source/MediaEntityGeneratorD7.php b/src/Plugin/migrate/source/MediaEntityGeneratorD7.php
index 0e12b99..9f923e8 100644
--- a/src/Plugin/migrate/source/MediaEntityGeneratorD7.php
+++ b/src/Plugin/migrate/source/MediaEntityGeneratorD7.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_file_to_media\Plugin\migrate\source;
 
+use Drupal\migrate\MigrateException;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ -29,17 +30,17 @@ class MediaEntityGeneratorD7 extends Node implements ContainerFactoryPluginInter
   protected $sourceFields = [];
 
   /**
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   private $entityFieldManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $connection;
 
@@ -59,12 +60,12 @@ class MediaEntityGeneratorD7 extends Node implements ContainerFactoryPluginInter
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param MigrationInterface $migration
+   * @param EntityFieldManagerInterface $entity_field_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param Connection $connection
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    */
   public function __construct(
     array $configuration,
diff --git a/src/Plugin/migrate/source/MediaEntityGeneratorTaxonomyD7.php b/src/Plugin/migrate/source/MediaEntityGeneratorTaxonomyD7.php
index 667dffe..b0b6564 100644
--- a/src/Plugin/migrate/source/MediaEntityGeneratorTaxonomyD7.php
+++ b/src/Plugin/migrate/source/MediaEntityGeneratorTaxonomyD7.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_file_to_media\Plugin\migrate\source;
 
+use Drupal\migrate\MigrateException;
 use Drupal\Core\Entity\EntityManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -31,10 +32,10 @@ class MediaEntityGeneratorTaxonomyD7 extends Term implements ContainerFactoryPlu
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param MigrationInterface $migration
+   * @param EntityTypeManagerInterface $entity_type_manager
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    */
   public function __construct(
     array $configuration,
