modules/contrib/yoast_seo/drush/yoast_seo.drush.inc
modules/contrib/yoast_seo/src/Controller/YoastSeoController.php
modules/contrib/yoast_seo/src/Form/YoastSeoConfigForm.php
modules/contrib/yoast_seo/src/Plugin/Field/FieldFormatter/YoastSeoFormatter.php
modules/contrib/yoast_seo/src/Plugin/Field/FieldType/YoastSeoItem.php
modules/contrib/yoast_seo/src/Plugin/Field/FieldWidget/YoastSeoWidget.php
modules/contrib/yoast_seo/src/Tests/YoastSeoTest.php
modules/contrib/yoast_seo/src/YoastSeoFieldManager.php
modules/contrib/yoast_seo/src/YoastSeoManager.php
modules/contrib/yoast_seo/yoast_seo.install
modules/contrib/yoast_seo/yoast_seo.module

6 files with changes
====================

1) modules/contrib/yoast_seo/yoast_seo.module:27

    ---------- begin diff ----------
@@ @@
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state array.
  *
  * @return mixed
@@ @@
 /**
  * Alter the settings used for displaying an entity.
  *
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityViewDisplayInterface $display
  *   The entity view display that will be used to display the entity
  *   components.
  * @param array $context
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/yoast_seo/src/YoastSeoManager.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructor for YoastSeoManager.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler service.
    */
   public function __construct(ModuleHandlerInterface $module_handler) {
@@ @@
   public function getConfiguration() {
     $conf = Yaml::parse(
       file_get_contents(
-        drupal_get_path('module', 'yoast_seo') . '/config/yoast_seo.yml'
+        \Drupal::service('extension.list.module')->getPath('yoast_seo') . '/config/yoast_seo.yml'
       )
     );
     return $conf;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/yoast_seo/src/YoastSeoFieldManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yoast_seo;

+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use \Drupal\Component\Utility\NestedArray;

 /**
@@ @@
   /**
    * Metatag logging channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entity_manager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/yoast_seo/src/Tests/YoastSeoTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yoast_seo\Tests;

+use Drupal\Core\Session\AccountInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;

@@ @@
   /**
    * Sets the test up.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser($this->permissions);
     $this->entityManager = \Drupal::service('entity_type.manager');
@@ @@
     // Configure yoast seo for the given bundle.
     $this->drupalGet('admin/config/yoast_seo');
     $edit = [$entity_type . '[' . $bundle . ']' => $bundle];
-    json_decode($this->drupalPostForm(NULL, $edit, t('Save')));
+    json_decode($this->submitForm($edit, t('Save')));
     $this->assertSession()->checkboxChecked('edit-node-page');
   }

@@ @@
     // Configure yoast seo for the given bundle.
     $this->drupalGet('admin/config/yoast_seo');
     $edit = [$entity_type . '[' . $bundle . ']' => FALSE];
-    json_decode($this->drupalPostForm(NULL, $edit, t('Save')));
+    json_decode($this->submitForm($edit, t('Save')));
     $this->assertSession()->checkboxNotChecked('edit-node-page');
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/yoast_seo/src/Plugin/Field/FieldWidget/YoastSeoWidget.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/yoast_seo/src/Controller/YoastSeoController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\yoast_seo\Controller;

+use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Returns a set of tokens' values.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request of the page.
    *   * data The context to use to retrieve the tokens value,
    *     see Drupal\Core\Utility\token::replace()
    *   * tokens An array of tokens to get the values for.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The JSON response.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   In case of AccessDeniedException.
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   In case of NotFoundHttpException.
    */
   public function tokens(Request $request) {
@@ @@
       '#type' => 'details',
       '#title' => 'Configure Real-time SEO by bundles',
       '#description' => 'Select the bundles Real-time SEO will be enabled for',
-      '#markup' => render($config_form),
+      '#markup' => \Drupal::service('renderer')->render($config_form),
       '#open' => TRUE,
     ];
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

