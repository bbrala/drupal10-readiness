diff --git a/rate.api.php b/rate.api.php
index f8b4a72..d2caaf0 100644
--- a/rate.api.php
+++ b/rate.api.php
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\votingapi\Entity\Vote;
+use Drupal\Core\Session\AccountProxy;
 /**
  * @file
  * Provides hook documentation for the Rate module.
@@ -116,14 +118,14 @@ function hook_rate_templates() {
  *
  * @param bool $can_vote
  *   Boolean to determine if user can vote.
- * @param \Drupal\votingapi\Entity\Vote $vote
+ * @param Vote $vote
  *   An array of rate widget options.
  * @param object $entity
  *   The voted entity object.
- * @param \Drupal\Core\Session\AccountProxy $account
+ * @param AccountProxy $account
  *   The current user account.
  */
-function hook_rate_can_vote(&$can_vote, \Drupal\votingapi\Entity\Vote $vote, $entity, \Drupal\Core\Session\AccountProxy $account) {
+function hook_rate_can_vote(&$can_vote, Vote $vote, $entity, AccountProxy $account) {
   // Forbid user to vote on all other entities except for article.
   if ($entity->bundle() != 'article') {
     $can_vote = FALSE;
diff --git a/rate.module b/rate.module
index 379a4c8..eeccf8c 100644
--- a/rate.module
+++ b/rate.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\comment\CommentManagerInterface;
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 /**
  * @file
  * Hook implementation code for the Rate module.
@@ -40,7 +42,7 @@ function rate_entity_extra_field_info() {
   $comment_module_enabled = \Drupal::service('module_handler')->moduleExists('comment');
 
   if ($comment_module_enabled) {
-    /** @var \Drupal\comment\CommentManagerInterface $comment_manager */
+    /** @var CommentManagerInterface $comment_manager */
     $comment_manager = \Drupal::service('comment.manager');
   }
 
@@ -233,7 +235,7 @@ function rate_entity_view(array &$build, EntityInterface $entity, EntityViewDisp
             )->save();
           }
           // Add the rate date field to the form mode of the entity in question.
-          /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
+          /** @var EntityDisplayRepositoryInterface $display_repository */
           $display_repository = \Drupal::service('entity_display.repository');
           // Assign widget settings for the default form mode.
           $display_repository->getFormDisplay($entity_type, $entity_bundle)
diff --git a/src/Controller/WidgetResultsController.php b/src/Controller/WidgetResultsController.php
index 863323c..8e6a6d8 100644
--- a/src/Controller/WidgetResultsController.php
+++ b/src/Controller/WidgetResultsController.php
@@ -17,14 +17,14 @@ class WidgetResultsController extends ControllerBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs an EntityUntranslatableFieldsConstraintValidator object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -43,7 +43,7 @@ class WidgetResultsController extends ControllerBase {
   /**
    * Display rate voting results views on nodes.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node for which to display results.
    *
    * @return array
diff --git a/src/Form/RateSettingsForm.php b/src/Form/RateSettingsForm.php
index 029f699..c07c9bc 100644
--- a/src/Form/RateSettingsForm.php
+++ b/src/Form/RateSettingsForm.php
@@ -33,23 +33,23 @@ class RateSettingsForm extends ConfigFormBase implements ContainerInjectionInter
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Http Client object.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * RateSettingsForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   Http client object.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, Client $http_client) {
diff --git a/src/Form/RateWidgetBaseForm.php b/src/Form/RateWidgetBaseForm.php
index af00b75..62ae34a 100644
--- a/src/Form/RateWidgetBaseForm.php
+++ b/src/Form/RateWidgetBaseForm.php
@@ -26,63 +26,63 @@ class RateWidgetBaseForm extends ContentEntityForm {
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The votingapi result manager.
    *
-   * @var \Drupal\votingapi\VoteResultFunctionManager
+   * @var VoteResultFunctionManager
    */
   protected $votingapiResult;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * The logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The config factory wrapper to fetch settings.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * Constructs a RateWidgetBaseForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\votingapi\VoteResultFunctionManager $votingapi_result
+   * @param VoteResultFunctionManager $votingapi_result
    *   Vote result function service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info, TimeInterface $time, VoteResultFunctionManager $votingapi_result, EntityTypeManagerInterface $entity_type_manager, AccountInterface $account, LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
@@ -589,7 +589,7 @@ class RateWidgetBaseForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\votingapi\Entity\Vote $vote_entity
+   * @param Vote $vote_entity
    *   Vote entity.
    * @param array $radio_options
    *   Form radio options.
diff --git a/src/Plugin/Derivative/RateVoteResultFunction.php b/src/Plugin/Derivative/RateVoteResultFunction.php
index aaa488f..9e49f8b 100644
--- a/src/Plugin/Derivative/RateVoteResultFunction.php
+++ b/src/Plugin/Derivative/RateVoteResultFunction.php
@@ -16,23 +16,23 @@ class RateVoteResultFunction extends DeriverBase implements ContainerDeriverInte
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityField;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityType;
 
   /**
    * Constructs a RateVoteResultFunction instance.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/RateBotDetector.php b/src/Plugin/RateBotDetector.php
index b454010..6b463e9 100644
--- a/src/Plugin/RateBotDetector.php
+++ b/src/Plugin/RateBotDetector.php
@@ -35,50 +35,50 @@ class RateBotDetector {
   /**
    * The config factory wrapper to fetch settings.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * Database connection object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The Http Client object.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * RateBotDetector constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection object.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   Http client object.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Database connection object.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Connection $database, Client $http_client, RequestStack $request_stack, TimeInterface $time) {
diff --git a/src/Plugin/RateWidgetBase.php b/src/Plugin/RateWidgetBase.php
index 0b9d885..3200b86 100644
--- a/src/Plugin/RateWidgetBase.php
+++ b/src/Plugin/RateWidgetBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\rate\Plugin;
 
+use Drupal\Core\Form\FormInterface;
+use Drupal\votingapi\Entity\Vote;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\votingapi\VoteResultFunctionManager;
@@ -21,49 +24,49 @@ class RateWidgetBase extends PluginBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The votingapi result manager.
    *
-   * @var \Drupal\votingapi\VoteResultFunctionManager
+   * @var VoteResultFunctionManager
    */
   protected $votingapiResult;
 
   /**
    * The entity form builder.
    *
-   * @var \Drupal\Core\Entity\EntityFormBuilderInterface
+   * @var EntityFormBuilderInterface
    */
   protected $entityFormBuilder;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -77,19 +80,19 @@ class RateWidgetBase extends PluginBase {
   /**
    * Constructs a new class instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\votingapi\VoteResultFunctionManager $vote_result
+   * @param VoteResultFunctionManager $vote_result
    *   Vote result function service.
-   * @param \Drupal\Core\Entity\EntityFormBuilderInterface $form_builder
+   * @param EntityFormBuilderInterface $form_builder
    *   The form builder service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    * @param \Drupal\rate\RateBotDetector $bot_detector
    *   The bot detector service.
@@ -141,7 +144,7 @@ class RateWidgetBase extends PluginBase {
   /**
    * Gets the widget form as configured for given parameters.
    *
-   * @return \Drupal\Core\Form\FormInterface
+   * @return FormInterface
    *   configured vote form
    */
   public function getForm($entity_type, $entity_bundle, $entity_id, $vote_type, $value_type, $rate_widget, $settings, $user_id = NULL) {
@@ -256,7 +259,7 @@ class RateWidgetBase extends PluginBase {
    * Checks whether a vote was already done and if this vote should be reused
    * instead of adding a new one.
    *
-   * @return \Drupal\votingapi\Entity\Vote
+   * @return Vote
    *   The vote entity.
    */
   public function getEntityForVoting($entity_type, $entity_bundle, $entity_id, $vote_type, $value_type, $rate_widget, $settings, $user_id) {
@@ -351,7 +354,7 @@ class RateWidgetBase extends PluginBase {
 
     $window = $window_field_setting;
     if ($use_site_default) {
-      /** @var \Drupal\Core\Config\ImmutableConfig $voting_configuration */
+      /** @var ImmutableConfig $voting_configuration */
       $voting_configuration = $this->configFactory->get('votingapi.settings');
       $window = $voting_configuration->get($window_type);
     }
diff --git a/src/RatePermissions.php b/src/RatePermissions.php
index 8258f2e..9c94944 100644
--- a/src/RatePermissions.php
+++ b/src/RatePermissions.php
@@ -20,32 +20,32 @@ class RatePermissions implements ContainerInjectionInterface {
   /**
    * The config factory wrapper to fetch settings.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Comment manager service.
    *
-   * @var \Drupal\comment\CommentManagerInterface
+   * @var CommentManagerInterface
    */
   protected $commentManager;
 
   /**
    * Constructs Permissions object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\comment\CommentManagerInterface $comment_manager
+   * @param CommentManagerInterface $comment_manager
    *   The comment manager service, or NULL if not available.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, CommentManagerInterface $comment_manager = NULL) {
diff --git a/src/RateWidgetForm.php b/src/RateWidgetForm.php
index c0d9ddb..4c0ce88 100644
--- a/src/RateWidgetForm.php
+++ b/src/RateWidgetForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rate;
 
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Datetime\DateFormatter;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ -22,50 +23,50 @@ class RateWidgetForm extends EntityForm {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs the VoteTypeForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, EntityFieldManagerInterface $entity_field_manager, ModuleHandlerInterface $module_handler, DateFormatter $date_formatter, MessengerInterface $messenger) {
@@ -533,7 +534,7 @@ class RateWidgetForm extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -590,7 +591,7 @@ class RateWidgetForm extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function templateSelectorNextValidate(array &$form, FormStateInterface $form_state) {
@@ -607,7 +608,7 @@ class RateWidgetForm extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function templateSelectorNextSubmit(array &$form, FormStateInterface $form_state) {
diff --git a/tests/src/Functional/RateWidgetListTest.php b/tests/src/Functional/RateWidgetListTest.php
index ffe8c2d..f6c4d97 100644
--- a/tests/src/Functional/RateWidgetListTest.php
+++ b/tests/src/Functional/RateWidgetListTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\rate\Functional;
 
+use Drupal\user\UserInterface;
 /**
  * Testing the listing functionality for the Rate widget entity.
  *
@@ -12,7 +13,7 @@ class RateWidgetListTest extends RateWidgetTestBase {
   /**
    * The user object.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
diff --git a/tests/src/Functional/RateWidgetSettingsTest.php b/tests/src/Functional/RateWidgetSettingsTest.php
index 9aba448..f6c05a8 100644
--- a/tests/src/Functional/RateWidgetSettingsTest.php
+++ b/tests/src/Functional/RateWidgetSettingsTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\rate\Functional;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Form\FormBuilderInterface;
+use Drupal\rate\RateWidgetInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\Core\Render\AttachmentsTrait;
 use Drupal\rate\Form\RateSettingsForm;
@@ -20,21 +23,21 @@ class RateWidgetSettingsTest extends RateWidgetTestBase {
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Form builder object variable.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * A saved rate widget entity.
    *
-   * @var \Drupal\rate\RateWidgetInterface
+   * @var RateWidgetInterface
    */
   protected $rateWidget;
 
diff --git a/tests/src/Functional/RateWidgetTestBase.php b/tests/src/Functional/RateWidgetTestBase.php
index e3a61ac..98e5f22 100644
--- a/tests/src/Functional/RateWidgetTestBase.php
+++ b/tests/src/Functional/RateWidgetTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\rate\Functional;
 
+use Drupal\Core\Entity\EntityAccessControlHandlerInterface;
+use Drupal\node\NodeInterface;
 use Drupal\node\Entity\NodeType;
 use Drupal\rate\Entity\RateWidget;
 use Drupal\Tests\rate\Traits\RateWidgetCreateTrait;
@@ -34,14 +36,14 @@ abstract class RateWidgetTestBase extends BrowserTestBase {
   /**
    * The node access controller.
    *
-   * @var \Drupal\Core\Entity\EntityAccessControlHandlerInterface
+   * @var EntityAccessControlHandlerInterface
    */
   protected $accessController;
 
   /**
    * An array of nodes.
    *
-   * @var \Drupal\node\NodeInterface[]
+   * @var NodeInterface[]
    */
   protected $nodes;
 
@@ -75,7 +77,7 @@ abstract class RateWidgetTestBase extends BrowserTestBase {
    * @param string $id
    *   The id of the rate widget.
    *
-   * @return \Drupal\rate\Entity\RateWidget
+   * @return RateWidget
    *   The rate widget Object.
    */
   protected function loadRateWidget($id) {
diff --git a/tests/src/Functional/RateWidgetTranslationTest.php b/tests/src/Functional/RateWidgetTranslationTest.php
index 11f5e09..bc1e498 100644
--- a/tests/src/Functional/RateWidgetTranslationTest.php
+++ b/tests/src/Functional/RateWidgetTranslationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\rate\Functional;
 
+use Drupal\Core\Language\LanguageInterface;
 use Drupal\language\Entity\ConfigurableLanguage;
 
 /**
@@ -22,7 +23,7 @@ class RateWidgetTranslationTest extends RateWidgetTestBase {
   /**
    * The NL language entity.
    *
-   * @var \Drupal\Core\Language\LanguageInterface
+   * @var LanguageInterface
    */
   protected $nlLanguage;
 
diff --git a/tests/src/FunctionalJavascript/NodeRateWidgetTestBase.php b/tests/src/FunctionalJavascript/NodeRateWidgetTestBase.php
index dd181c4..e70a0e6 100644
--- a/tests/src/FunctionalJavascript/NodeRateWidgetTestBase.php
+++ b/tests/src/FunctionalJavascript/NodeRateWidgetTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\rate\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\node\Entity\NodeType;
 use Drupal\Tests\rate\Traits\AssertRateWidgetTrait;
@@ -37,14 +39,14 @@ abstract class NodeRateWidgetTestBase extends WebDriverTestBase {
   /**
    * An array of users.
    *
-   * @var \Drupal\user\UserInterface[]
+   * @var UserInterface[]
    */
   protected $users;
 
   /**
    * An array of nodes.
    *
-   * @var \Drupal\node\NodeInterface[]
+   * @var NodeInterface[]
    */
   protected $nodes;
 
diff --git a/tests/src/Kernel/RateTypeAccessTest.php b/tests/src/Kernel/RateTypeAccessTest.php
index 0db4be0..1583682 100644
--- a/tests/src/Kernel/RateTypeAccessTest.php
+++ b/tests/src/Kernel/RateTypeAccessTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\rate\Kernel;
 
+use Drupal\Core\Entity\EntityAccessControlHandlerInterface;
+use Drupal\user\Entity\User;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\user\Traits\UserCreationTrait;
@@ -48,21 +50,21 @@ class RateTypeAccessTest extends KernelTestBase {
   /**
    * Access handler.
    *
-   * @var \Drupal\Core\Entity\EntityAccessControlHandlerInterface
+   * @var EntityAccessControlHandlerInterface
    */
   protected $accessHandler;
 
   /**
    * A simple user with basic node and vote permissions.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $loggedInUser;
 
   /**
    * A simple user vote permission.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $anonymousUser;
 
diff --git a/tests/src/Kernel/migrate/RateWidgetMigrationTest.php b/tests/src/Kernel/migrate/RateWidgetMigrationTest.php
index 0ba791f..83c91ac 100644
--- a/tests/src/Kernel/migrate/RateWidgetMigrationTest.php
+++ b/tests/src/Kernel/migrate/RateWidgetMigrationTest.php
@@ -27,7 +27,7 @@ class RateWidgetMigrationTest extends MigrateDrupal7TestBase {
    */
   protected function getFixtureFilePath() {
     return implode(DIRECTORY_SEPARATOR, [
-      drupal_get_path('module', 'rate'),
+      \Drupal::service('extension.list.module')->getPath('rate'),
       'tests',
       'fixtures',
       'drupal7.php',
diff --git a/tests/src/Kernel/migrate/RateWidgetTest.php b/tests/src/Kernel/migrate/RateWidgetTest.php
index 4614fe7..bd0e8c0 100644
--- a/tests/src/Kernel/migrate/RateWidgetTest.php
+++ b/tests/src/Kernel/migrate/RateWidgetTest.php
@@ -172,7 +172,7 @@ class RateWidgetTest extends MigrateSqlSourceTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $id = $this->randomMachineName(16);
     $this->migration->id()->willReturn($id);
diff --git a/tests/src/Traits/RateWidgetCreateTrait.php b/tests/src/Traits/RateWidgetCreateTrait.php
index 5ca29e8..193f9c7 100644
--- a/tests/src/Traits/RateWidgetCreateTrait.php
+++ b/tests/src/Traits/RateWidgetCreateTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\rate\Traits;
 
+use Drupal\rate\RateWidgetInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\rate\Entity\RateWidget;
 
 /**
@@ -31,10 +33,10 @@ trait RateWidgetCreateTrait {
    * @param array $results
    *   The results settings.
    *
-   * @return \Drupal\rate\RateWidgetInterface
+   * @return RateWidgetInterface
    *   A saved rate widget entity.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function createRateWidget($id = NULL, $label = NULL, $template = NULL, array $options = [], array $entity_types = [], array $comment_types = [], array $voting = [], array $display = [], array $results = []) {
     // Set defaults, if not provided in call.
