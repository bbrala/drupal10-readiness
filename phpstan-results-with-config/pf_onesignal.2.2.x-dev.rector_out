modules/contrib/pf_onesignal/pf_onesignal.module
modules/contrib/pf_onesignal/src/Controller/AppleId.php
modules/contrib/pf_onesignal/src/Controller/Register.php
modules/contrib/pf_onesignal/src/Entity/Device.php
modules/contrib/pf_onesignal/src/Entity/DeviceInterface.php
modules/contrib/pf_onesignal/src/Form/Settings.php
modules/contrib/pf_onesignal/src/Plugin/PushFrameworkChannel/OneSignal.php
modules/contrib/pf_onesignal/src/PrivateStore.php

5 files with changes
====================

1) modules/contrib/pf_onesignal/src/PrivateStore.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs a PrivateStore object.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_service
+   * @param PrivateTempStoreFactory $temp_store_service
    */
   public function __construct(PrivateTempStoreFactory $temp_store_service) {
     $this->store = $temp_store_service->get('onesignal');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/pf_onesignal/src/Plugin/PushFrameworkChannel/OneSignal.php:103

    ---------- begin diff ----------
@@ @@
   }

   /**
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *
    * @return int[]
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/pf_onesignal/src/Controller/Register.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\pf_onesignal\Controller;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
 class Register extends ControllerBase {

   /**
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * Register constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
-   * @param \Drupal\Core\Session\AccountInterface $account
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param EntityTypeManagerInterface $entityTypeManager
+   * @param AccountInterface $account
+   * @param Request $request
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, AccountInterface $account, Request $request) {
     $this->entityTypeManager = $entityTypeManager;
@@ @@
   }

   /**
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    */
   public function title(): TranslatableMarkup {
     return $this->t('System endpoint');
@@ @@
   }

   /**
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    */
   public function access(): AccessResultInterface {
     if ($this->currentUser()->isAuthenticated()) {
@@ @@
   }

   /**
-   * @return \Symfony\Component\HttpFoundation\Response
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @return Response
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function execute(): Response {
     $info = json_decode($this->request->getContent(), TRUE);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/pf_onesignal/src/Controller/AppleId.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\pf_onesignal\Controller;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
 class AppleId extends ControllerBase {

   /**
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * AppleId constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
     $this->config = $config_factory->get('pf_onesignal.settings');
@@ @@
   }

   /**
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    */
   public function execute(): JsonResponse {
     return new JsonResponse([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/pf_onesignal/pf_onesignal.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\pf_onesignal\PrivateStore;
 use Drupal\Core\Url;

 /**
@@ @@
   if (Drupal::currentUser()->isAnonymous()) {
     return;
   }
-  /** @var \Drupal\pf_onesignal\PrivateStore $privateStore */
+  /** @var PrivateStore $privateStore */
   $privateStore= \Drupal::service('onesignal.private_store');
   if ($privateStore->getValue('onsignal_device_registered')) {
     return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

