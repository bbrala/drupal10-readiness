diff --git a/protected_pages.info.yml b/protected_pages.info.yml
index 98ae9f7..b7c95ba 100644
--- a/protected_pages.info.yml
+++ b/protected_pages.info.yml
@@ -3,6 +3,6 @@ type: module
 description: 'Allow you to protect pages, private files by secure password.'
 configure: protected_pages_settings
 package: 'Access'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 dependencies:
   - drupal:path_alias
diff --git a/src/Controller/ProtectedPagesController.php b/src/Controller/ProtectedPagesController.php
index a720ef3..ad49ac3 100644
--- a/src/Controller/ProtectedPagesController.php
+++ b/src/Controller/ProtectedPagesController.php
@@ -17,23 +17,23 @@ class ProtectedPagesController extends ControllerBase {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The protected pages storage service.
    *
-   * @var \Drupal\protected_pages\ProtectedPagesStorage
+   * @var ProtectedPagesStorage
    */
   protected $protectedPagesStorage;
 
   /**
    * Constructs a ProtectedPagesController object.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\protected_pages\ProtectedPagesStorage $protectedPagesStorage
+   * @param ProtectedPagesStorage $protectedPagesStorage
    *   The protected pages storage service.
    */
   public function __construct(RendererInterface $renderer, ProtectedPagesStorage $protectedPagesStorage) {
diff --git a/src/EventSubscriber/ProtectedPagesSubscriber.php b/src/EventSubscriber/ProtectedPagesSubscriber.php
index ef20a19..20f9861 100644
--- a/src/EventSubscriber/ProtectedPagesSubscriber.php
+++ b/src/EventSubscriber/ProtectedPagesSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\protected_pages\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\PageCache\ResponsePolicy\KillSwitch;
 use Drupal\Core\Path\CurrentPathStack;
 use Drupal\Core\Routing\RedirectDestination;
@@ -12,7 +13,6 @@ use Drupal\protected_pages\ProtectedPagesStorage;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -23,68 +23,68 @@ class ProtectedPagesSubscriber implements EventSubscriberInterface {
   /**
    * The path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManager
+   * @var AliasManager
    */
   protected $aliasManager;
 
   /**
    * The account proxy service.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
   /**
    * The current path stack service.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestination
+   * @var RedirectDestination
    */
   protected $destination;
 
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The protected pages storage.
    *
-   * @var \Drupal\protected_pages\ProtectedPagesStorage
+   * @var ProtectedPagesStorage
    */
   protected $protectedPagesStorage;
 
   /**
    * A policy evaluating to static::DENY when the kill switch was triggered.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $pageCacheKillSwitch;
 
   /**
    * Constructs a new ProtectedPagesSubscriber.
    *
-   * @param \Drupal\path_alias\AliasManager $aliasManager
+   * @param AliasManager $aliasManager
    *   The path alias manager.
-   * @param \Drupal\Core\Session\AccountProxy $currentUser
+   * @param AccountProxy $currentUser
    *   The account proxy service.
-   * @param \Drupal\Core\Path\CurrentPathStack $currentPathStack
+   * @param CurrentPathStack $currentPathStack
    *   The current path stack service.
-   * @param \Drupal\Core\Routing\RedirectDestination $destination
+   * @param RedirectDestination $destination
    *   The redirect destination service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack service.
-   * @param \Drupal\protected_pages\ProtectedPagesStorage $protectedPagesStorage
+   * @param ProtectedPagesStorage $protectedPagesStorage
    *   The request stack service.
-   * @param \Drupal\Core\PageCache\ResponsePolicy\KillSwitch $pageCacheKillSwitch
+   * @param KillSwitch $pageCacheKillSwitch
    *   The cache kill switch service.
    */
   public function __construct(AliasManager $aliasManager, AccountProxy $currentUser, CurrentPathStack $currentPathStack, RedirectDestination $destination, RequestStack $requestStack, ProtectedPagesStorage $protectedPagesStorage, KillSwitch $pageCacheKillSwitch) {
@@ -100,10 +100,10 @@ class ProtectedPagesSubscriber implements EventSubscriberInterface {
   /**
    * Redirects user to protected page login screen.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function checkProtectedPage(FilterResponseEvent $event) {
+  public function checkProtectedPage(ResponseEvent $event) {
     if ($this->currentUser->hasPermission('bypass pages password protection')) {
       return;
     }
diff --git a/src/Form/ProtectedPagesAddForm.php b/src/Form/ProtectedPagesAddForm.php
index f98f06a..cb06138 100644
--- a/src/Form/ProtectedPagesAddForm.php
+++ b/src/Form/ProtectedPagesAddForm.php
@@ -20,50 +20,50 @@ class ProtectedPagesAddForm extends FormBase {
   /**
    * The protected pages storage service.
    *
-   * @var \Drupal\protected_pages\ProtectedPagesStorage
+   * @var ProtectedPagesStorage
    */
   protected $protectedPagesStorage;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * Provides the password hashing service object.
    *
-   * @var \Drupal\Core\Password\PasswordInterface
+   * @var PasswordInterface
    */
   protected $password;
 
   /**
    * Provides messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManager
+   * @var AliasManager
    */
   protected $aliasManager;
 
   /**
    * Constructs a new ProtectedPagesAddForm.
    *
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Password\PasswordInterface $password
+   * @param PasswordInterface $password
    *   The password hashing service.
-   * @param \Drupal\protected_pages\ProtectedPagesStorage $protectedPagesStorage
+   * @param ProtectedPagesStorage $protectedPagesStorage
    *   The protected pages storage.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The messenger service.
-   * @param \Drupal\path_alias\AliasManager $aliasManager
+   * @param AliasManager $aliasManager
    *   The path alias manager service.
    */
   public function __construct(PathValidatorInterface $path_validator, PasswordInterface $password, ProtectedPagesStorage $protectedPagesStorage, Messenger $messenger, AliasManager $aliasManager) {
diff --git a/src/Form/ProtectedPagesDeleteConfirmForm.php b/src/Form/ProtectedPagesDeleteConfirmForm.php
index 20fb7ae..6bfc653 100644
--- a/src/Form/ProtectedPagesDeleteConfirmForm.php
+++ b/src/Form/ProtectedPagesDeleteConfirmForm.php
@@ -24,23 +24,23 @@ class ProtectedPagesDeleteConfirmForm extends ConfirmFormBase {
   /**
    * The protected pages storage service.
    *
-   * @var \Drupal\protected_pages\ProtectedPagesStorage
+   * @var ProtectedPagesStorage
    */
   protected $protectedPagesStorage;
 
   /**
    * Provides messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Constructs a ProtectedPagesController object.
    *
-   * @param \Drupal\protected_pages\ProtectedPagesStorage $protectedPagesStorage
+   * @param ProtectedPagesStorage $protectedPagesStorage
    *   The protected pages storage service.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The messenger service.
    */
   public function __construct(ProtectedPagesStorage $protectedPagesStorage, Messenger $messenger) {
@@ -71,7 +71,7 @@ class ProtectedPagesDeleteConfirmForm extends ConfirmFormBase {
   /**
    * Returns the route to go to if the user cancels the action.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   A URL object.
    */
   public function getCancelUrl() {
@@ -108,7 +108,7 @@ class ProtectedPagesDeleteConfirmForm extends ConfirmFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/ProtectedPagesEditForm.php b/src/Form/ProtectedPagesEditForm.php
index 2552e97..3aff5ce 100644
--- a/src/Form/ProtectedPagesEditForm.php
+++ b/src/Form/ProtectedPagesEditForm.php
@@ -20,50 +20,50 @@ class ProtectedPagesEditForm extends FormBase {
   /**
    * The protected pages storage service.
    *
-   * @var \Drupal\protected_pages\ProtectedPagesStorage
+   * @var ProtectedPagesStorage
    */
   protected $protectedPagesStorage;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * Provides the password hashing service object.
    *
-   * @var \Drupal\Core\Password\PasswordInterface
+   * @var PasswordInterface
    */
   protected $password;
 
   /**
    * Provides messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManager
+   * @var AliasManager
    */
   protected $aliasManager;
 
   /**
    * Constructs a new ProtectedPagesAddForm.
    *
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Password\PasswordInterface $password
+   * @param PasswordInterface $password
    *   The password hashing service.
-   * @param \Drupal\protected_pages\ProtectedPagesStorage $protectedPagesStorage
+   * @param ProtectedPagesStorage $protectedPagesStorage
    *   The protected pages storage.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The messenger service.
-   * @param \Drupal\path_alias\AliasManager $aliasManager
+   * @param AliasManager $aliasManager
    *   The path alias manager service.
    */
   public function __construct(PathValidatorInterface $path_validator, PasswordInterface $password, ProtectedPagesStorage $protectedPagesStorage, Messenger $messenger, AliasManager $aliasManager) {
diff --git a/src/Form/ProtectedPagesLoginForm.php b/src/Form/ProtectedPagesLoginForm.php
index 4cdc7df..8daf473 100644
--- a/src/Form/ProtectedPagesLoginForm.php
+++ b/src/Form/ProtectedPagesLoginForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\protected_pages\Form;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Access\AccessResult;
@@ -20,41 +21,41 @@ class ProtectedPagesLoginForm extends FormBase {
   /**
    * The protected pages storage service.
    *
-   * @var \Drupal\protected_pages\ProtectedPagesStorage
+   * @var ProtectedPagesStorage
    */
   protected $protectedPagesStorage;
 
   /**
    * Provides the password hashing service object.
    *
-   * @var \Drupal\Core\Password\PasswordInterface
+   * @var PasswordInterface
    */
   protected $password;
 
   /**
    * Account proxy service.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
   /**
    * A date time instance.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new ProtectedPagesLoginForm.
    *
-   * @param \Drupal\Core\Password\PasswordInterface $password
+   * @param PasswordInterface $password
    *   The password hashing service.
-   * @param \Drupal\protected_pages\ProtectedPagesStorage $protectedPagesStorage
+   * @param ProtectedPagesStorage $protectedPagesStorage
    *   The protected pages storage.
-   * @param \Drupal\Core\Session\AccountProxy $currentUser
+   * @param AccountProxy $currentUser
    *   The current user service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   A date time instance.
    */
   public function __construct(PasswordInterface $password, ProtectedPagesStorage $protectedPagesStorage, AccountProxy $currentUser, TimeInterface $time) {
@@ -86,7 +87,7 @@ class ProtectedPagesLoginForm extends FormBase {
   /**
    * Checks access based permission and protected page id.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function accessProtectedPageLoginScreen() {
diff --git a/src/Form/ProtectedPagesSendEmailForm.php b/src/Form/ProtectedPagesSendEmailForm.php
index 18bc2d2..4e16253 100644
--- a/src/Form/ProtectedPagesSendEmailForm.php
+++ b/src/Form/ProtectedPagesSendEmailForm.php
@@ -22,68 +22,68 @@ class ProtectedPagesSendEmailForm extends FormBase {
   /**
    * The protected pages storage service.
    *
-   * @var \Drupal\protected_pages\ProtectedPagesStorage
+   * @var ProtectedPagesStorage
    */
   protected $protectedPagesStorage;
 
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The email validator.
    *
-   * @var \Egulias\EmailValidator\EmailValidator
+   * @var EmailValidator
    */
   protected $emailValidator;
 
   /**
    * Provides messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Config Factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManager
+   * @var LanguageManager
    */
   protected $languageManager;
 
   /**
    * Logger channel factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * Constructs a new ProtectedPagesSendEmailForm.
    *
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager.
-   * @param \Egulias\EmailValidator\EmailValidator $email_validator
+   * @param EmailValidator $email_validator
    *   The email validator.
-   * @param \Drupal\protected_pages\ProtectedPagesStorage $protectedPagesStorage
+   * @param ProtectedPagesStorage $protectedPagesStorage
    *   The protected pages storage.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service interface.
-   * @param \Drupal\Core\Language\LanguageManager $languageManager
+   * @param LanguageManager $languageManager
    *   The language manager service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   The logger channel factory service.
    */
   public function __construct(MailManagerInterface $mail_manager, EmailValidator $email_validator, ProtectedPagesStorage $protectedPagesStorage, Messenger $messenger, ConfigFactoryInterface $configFactory, LanguageManager $languageManager, LoggerChannelFactoryInterface $loggerFactory) {
diff --git a/src/Form/ProtectedPagesSettingForm.php b/src/Form/ProtectedPagesSettingForm.php
index 67ebed4..2526b66 100644
--- a/src/Form/ProtectedPagesSettingForm.php
+++ b/src/Form/ProtectedPagesSettingForm.php
@@ -26,41 +26,41 @@ class ProtectedPagesSettingForm extends ConfigFormBase {
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The email validator.
    *
-   * @var \Egulias\EmailValidator\EmailValidator
+   * @var EmailValidator
    */
   protected $emailValidator;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Provides the password hashing service object.
    *
-   * @var \Drupal\Core\Password\PasswordInterface
+   * @var PasswordInterface
    */
   protected $password;
 
   /**
    * Constructs a new ProtectedPagesSettingForm.
    *
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager.
-   * @param \Egulias\EmailValidator\EmailValidator $email_validator
+   * @param EmailValidator $email_validator
    *   The email validator.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Password\PasswordInterface $password
+   * @param PasswordInterface $password
    *   The password hashing service.
    */
   public function __construct(MailManagerInterface $mail_manager, EmailValidator $email_validator, RendererInterface $renderer, PasswordInterface $password) {
diff --git a/src/ProtectedPagesStorage.php b/src/ProtectedPagesStorage.php
index 696202e..6a96adc 100644
--- a/src/ProtectedPagesStorage.php
+++ b/src/ProtectedPagesStorage.php
@@ -13,14 +13,14 @@ class ProtectedPagesStorage {
   /**
    * The database connection to use.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructs a new protected page storage service.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection to use.
    */
   public function __construct(Connection $connection) {
