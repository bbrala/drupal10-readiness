diff --git a/entity_reference_integrity.info.yml b/entity_reference_integrity.info.yml
index 76189d2..80ddc55 100644
--- a/entity_reference_integrity.info.yml
+++ b/entity_reference_integrity.info.yml
@@ -1,7 +1,6 @@
 name: Entity Reference Integrity
 description: Protect entities from being deleted if they are the target of an entity reference field.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 type: module
 
 package: Entity Reference Integrity
diff --git a/entity_reference_integrity.module b/entity_reference_integrity.module
index 655f379..483eb92 100644
--- a/entity_reference_integrity.module
+++ b/entity_reference_integrity.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityTypeInterface;
 /**
  * @file
  * Module file.
@@ -11,7 +12,7 @@ use Drupal\entity_reference_integrity\EntityReferenceIntegrityEntityHandler;
  * Implements hook_entity_type_alter().
  */
 function entity_reference_integrity_entity_type_alter(array &$entity_types) {
-  /** @var \Drupal\Core\Entity\EntityTypeInterface $entity_type */
+  /** @var EntityTypeInterface $entity_type */
   foreach ($entity_types as $entity_type) {
     if (!$entity_type->hasHandlerClass('entity_reference_integrity')) {
       $entity_type->setHandlerClass('entity_reference_integrity', EntityReferenceIntegrityEntityHandler::class);
diff --git a/modules/entity_reference_integrity_enforce/entity_reference_integrity_enforce.module b/modules/entity_reference_integrity_enforce/entity_reference_integrity_enforce.module
index 51929f9..d90bbc4 100644
--- a/modules/entity_reference_integrity_enforce/entity_reference_integrity_enforce.module
+++ b/modules/entity_reference_integrity_enforce/entity_reference_integrity_enforce.module
@@ -58,7 +58,7 @@ function entity_reference_integrity_enforce_entity_access(EntityInterface $entit
     return AccessResult::neutral();
   }
 
-  /** @var \Drupal\entity_reference_integrity\EntityReferenceIntegrityEntityHandler $entity_reference_integrity_handler */
+  /** @var EntityReferenceIntegrityEntityHandler $entity_reference_integrity_handler */
   $entity_reference_integrity_handler = \Drupal::entityTypeManager()->getHandler($entity->getEntityTypeId(), 'entity_reference_integrity');
   $enabled_entity_type_ids = \Drupal::configFactory()->get('entity_reference_integrity_enforce.settings')->get('enabled_entity_type_ids');
 
diff --git a/modules/entity_reference_integrity_enforce/src/EntityPredelete.php b/modules/entity_reference_integrity_enforce/src/EntityPredelete.php
index 756efe0..d2e806f 100644
--- a/modules/entity_reference_integrity_enforce/src/EntityPredelete.php
+++ b/modules/entity_reference_integrity_enforce/src/EntityPredelete.php
@@ -16,7 +16,7 @@ class EntityPredelete implements ContainerInjectionInterface {
   /**
    * The dependency manager.
    *
-   * @var \Drupal\entity_reference_integrity\EntityReferenceDependencyManagerInterface
+   * @var EntityReferenceDependencyManagerInterface
    */
   protected $dependencyManager;
 
diff --git a/modules/entity_reference_integrity_enforce/src/Form/SettingsForm.php b/modules/entity_reference_integrity_enforce/src/Form/SettingsForm.php
index 215a2f3..2f1213a 100644
--- a/modules/entity_reference_integrity_enforce/src/Form/SettingsForm.php
+++ b/modules/entity_reference_integrity_enforce/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_reference_integrity_enforce\Form;
 
+use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,7 +16,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * An array of entity type definitions.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface[]
+   * @var EntityTypeInterface[]
    */
   protected $entityTypeDefinitions;
 
diff --git a/modules/entity_reference_integrity_enforce/src/FormAlter.php b/modules/entity_reference_integrity_enforce/src/FormAlter.php
index 430944e..0b11d83 100644
--- a/modules/entity_reference_integrity_enforce/src/FormAlter.php
+++ b/modules/entity_reference_integrity_enforce/src/FormAlter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_reference_integrity_enforce;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityFormInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -19,7 +20,7 @@ class FormAlter implements ContainerInjectionInterface {
   /**
    * The dependency manager.
    *
-   * @var \Drupal\entity_reference_integrity\EntityReferenceDependencyManagerInterface
+   * @var EntityReferenceDependencyManagerInterface
    */
   protected $dependencyManager;
 
@@ -52,7 +53,7 @@ class FormAlter implements ContainerInjectionInterface {
    * Implements hook_form_alter().
    */
   public function formAlter(&$form, FormStateInterface $form_state, $form_id) {
-    /** @var \Drupal\Core\Entity\EntityFormInterface $form_object */
+    /** @var EntityFormInterface $form_object */
     $form_object = $form_state->getFormObject();
     if (!$this->isDeleteForm($form_object)) {
       return;
@@ -90,7 +91,7 @@ class FormAlter implements ContainerInjectionInterface {
    */
   protected function buildReferencingEntitiesList(array $referencing_entities) {
     $build = [];
-    /** @var \Drupal\Core\Entity\EntityInterface[] $entities */
+    /** @var EntityInterface[] $entities */
     foreach ($referencing_entities as $entity_type_id => $entities) {
       $build[$entity_type_id]['label'] = [
         '#type' => 'html_tag',
diff --git a/modules/entity_reference_integrity_enforce/tests/src/Functional/EnforcedIntegrityTest.php b/modules/entity_reference_integrity_enforce/tests/src/Functional/EnforcedIntegrityTest.php
index 02da778..c9c5025 100644
--- a/modules/entity_reference_integrity_enforce/tests/src/Functional/EnforcedIntegrityTest.php
+++ b/modules/entity_reference_integrity_enforce/tests/src/Functional/EnforcedIntegrityTest.php
@@ -37,7 +37,7 @@ class EnforcedIntegrityTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);
   }
@@ -71,9 +71,10 @@ class EnforcedIntegrityTest extends BrowserTestBase {
     // Initially, deleting an entity should be fine if it's not enabled.
     $this->assertSession()->elementsCount('css', '.form-submit', 1);
     $this->assertSession()->elementNotExists('css', '.form-submit[disabled]');
+    $this->drupalGet('admin/config/content/entity-reference-integrity');
 
     // Enable protection of the entity type.
-    $this->drupalPostForm('admin/config/content/entity-reference-integrity', [
+    $this->submitForm([
       sprintf('enabled_entity_type_ids[%s]', $entity->getEntityTypeId()) => TRUE,
     ], 'Save configuration');
 
diff --git a/modules/entity_reference_integrity_enforce/tests/src/Functional/JsonApiTest.php b/modules/entity_reference_integrity_enforce/tests/src/Functional/JsonApiTest.php
index 917ced0..12219c9 100644
--- a/modules/entity_reference_integrity_enforce/tests/src/Functional/JsonApiTest.php
+++ b/modules/entity_reference_integrity_enforce/tests/src/Functional/JsonApiTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\entity_reference_integrity_enforce\Functional;
 
+use Drupal\node\NodeTypeInterface;
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
@@ -41,35 +44,35 @@ class JsonApiTest extends BrowserTestBase {
   /**
    * The entity reference integrity entity handler.
    *
-   * @var \Drupal\entity_reference_integrity\EntityReferenceIntegrityEntityHandler
+   * @var EntityReferenceIntegrityEntityHandler
    */
   protected $referenceIntegrityHandler;
 
   /**
    * Test node type.
    *
-   * @var \Drupal\node\NodeTypeInterface
+   * @var NodeTypeInterface
    */
   protected $nodeType;
 
   /**
    * A test user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
   /**
    * A test node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $testNode;
 
   /**
    * A test node that is referenced.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $referencedNode;
 
@@ -82,7 +85,7 @@ class JsonApiTest extends BrowserTestBase {
     $entity_type_manager = $this->container->get('entity_type.manager');
     $node_storage = $entity_type_manager->getStorage('node');
 
-    /** @var \Drupal\entity_reference_integrity\EntityReferenceIntegrityEntityHandler $entity_reference_integrity_handler */
+    /** @var EntityReferenceIntegrityEntityHandler $entity_reference_integrity_handler */
     $this->referenceIntegrityHandler = $entity_type_manager->getHandler('node', 'entity_reference_integrity');
 
     // Create a new node-type.
diff --git a/modules/entity_reference_integrity_enforce/tests/src/Kernel/DeleteActionTest.php b/modules/entity_reference_integrity_enforce/tests/src/Kernel/DeleteActionTest.php
index c4baa50..77133a2 100644
--- a/modules/entity_reference_integrity_enforce/tests/src/Kernel/DeleteActionTest.php
+++ b/modules/entity_reference_integrity_enforce/tests/src/Kernel/DeleteActionTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\entity_reference_integrity_enforce\Kernel;
 
+use Drupal\Core\Action\ActionManager;
+use Drupal\entity_reference_integrity\EntityReferenceDependencyManagerInterface;
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\entity_reference_integrity_enforce\Plugin\Action\DeleteAction;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\node\Entity\Node;
@@ -36,35 +40,35 @@ class DeleteActionTest extends KernelTestBase {
   /**
    * The action plugin manager.
    *
-   * @var \Drupal\Core\Action\ActionManager
+   * @var ActionManager
    */
   protected $actionManager;
 
   /**
    * The entity dependency manager.
    *
-   * @var \Drupal\entity_reference_integrity\EntityReferenceDependencyManagerInterface
+   * @var EntityReferenceDependencyManagerInterface
    */
   protected $dependencyManager;
 
   /**
    * A test user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
   /**
    * A test node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $testNode;
 
   /**
    * A test node that is referenced.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $referencedNode;
 
diff --git a/src/DependencyFieldMapGenerator.php b/src/DependencyFieldMapGenerator.php
index 19ee82f..fbcf246 100644
--- a/src/DependencyFieldMapGenerator.php
+++ b/src/DependencyFieldMapGenerator.php
@@ -13,7 +13,7 @@ class DependencyFieldMapGenerator implements DependencyFieldMapGeneratorInterfac
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
@@ -21,7 +21,7 @@ class DependencyFieldMapGenerator implements DependencyFieldMapGeneratorInterfac
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
diff --git a/src/EntityReferenceDependencyManager.php b/src/EntityReferenceDependencyManager.php
index f98270c..f8ec0ad 100644
--- a/src/EntityReferenceDependencyManager.php
+++ b/src/EntityReferenceDependencyManager.php
@@ -15,7 +15,7 @@ class EntityReferenceDependencyManager implements EntityReferenceDependencyManag
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/src/EntityReferenceDependencyManagerInterface.php b/src/EntityReferenceDependencyManagerInterface.php
index 532d0f2..8872a38 100644
--- a/src/EntityReferenceDependencyManagerInterface.php
+++ b/src/EntityReferenceDependencyManagerInterface.php
@@ -12,7 +12,7 @@ interface EntityReferenceDependencyManagerInterface {
   /**
    * Check if an entity has dependent entties.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   An entity.
    *
    * @return bool
@@ -23,7 +23,7 @@ interface EntityReferenceDependencyManagerInterface {
   /**
    * List the entities that reference the given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    *
    * @return array
@@ -34,7 +34,7 @@ interface EntityReferenceDependencyManagerInterface {
   /**
    * List the entity IDs that reference the given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    *
    * @return array
@@ -45,7 +45,7 @@ interface EntityReferenceDependencyManagerInterface {
   /**
    * Build an access denied reason string.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity that has dependents.
    * @param bool $translate
    *   Optional boolean to translate the string. Defaults to TRUE.
diff --git a/src/EntityReferenceIntegrityEntityHandler.php b/src/EntityReferenceIntegrityEntityHandler.php
index 4ac01f7..27adbd2 100644
--- a/src/EntityReferenceIntegrityEntityHandler.php
+++ b/src/EntityReferenceIntegrityEntityHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_reference_integrity;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\Core\Entity\EntityHandlerInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -17,14 +18,14 @@ class EntityReferenceIntegrityEntityHandler implements EntityHandlerInterface, E
   /**
    * A referential field map.
    *
-   * @var \Drupal\entity_reference_integrity\DependencyFieldMapGeneratorInterface
+   * @var DependencyFieldMapGeneratorInterface
    */
   protected $fieldMap;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -109,7 +110,7 @@ class EntityReferenceIntegrityEntityHandler implements EntityHandlerInterface, E
    * @param string|int $target_id
    *   The target ID to search for.
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   A query object.
    */
   protected function referentialEntityQuery($entity_type, array $source_fields, $target_id) {
diff --git a/tests/src/Kernel/EntityReferenceDependencyManagerTest.php b/tests/src/Kernel/EntityReferenceDependencyManagerTest.php
index 5beecf4..cd59fb8 100644
--- a/tests/src/Kernel/EntityReferenceDependencyManagerTest.php
+++ b/tests/src/Kernel/EntityReferenceDependencyManagerTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\entity_reference_integrity\Kernel;
 
+use Drupal\entity_reference_integrity\EntityReferenceDependencyManagerInterface;
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\node\Entity\Node;
 use Drupal\user\Entity\User;
@@ -30,28 +33,28 @@ class EntityReferenceDependencyManagerTest extends KernelTestBase {
   /**
    * The entity dependency manager.
    *
-   * @var \Drupal\entity_reference_integrity\EntityReferenceDependencyManagerInterface
+   * @var EntityReferenceDependencyManagerInterface
    */
   protected $dependencyManager;
 
   /**
    * A test user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
   /**
    * A test node.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $testNode;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installEntitySchema('user');
