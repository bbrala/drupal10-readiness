diff --git a/layout_builder_kit.install b/layout_builder_kit.install
index 1ba1302..ca1fd94 100644
--- a/layout_builder_kit.install
+++ b/layout_builder_kit.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 /**
  * @file
  * Contains layout_builder_kit.install.
@@ -15,8 +17,8 @@ use Drupal\Core\Url;
  * @param $phase
  *
  * @return array
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function layout_builder_kit_requirements($phase) {
   $requirements = [];
diff --git a/src/Form/LayoutBuilderKitSettingsForm.php b/src/Form/LayoutBuilderKitSettingsForm.php
index 1aa74f1..6b0d221 100755
--- a/src/Form/LayoutBuilderKitSettingsForm.php
+++ b/src/Form/LayoutBuilderKitSettingsForm.php
@@ -16,7 +16,7 @@ class LayoutBuilderKitSettingsForm extends ConfigFormBase {
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
diff --git a/src/LinkProvider.php b/src/LinkProvider.php
index 8951bcb..a64abc1 100644
--- a/src/LinkProvider.php
+++ b/src/LinkProvider.php
@@ -18,7 +18,7 @@ class LinkProvider implements LinkProviderInterface {
   /**
    * Get a Link object from a given Url object.
    *
-   * @return \Drupal\Core\Link
+   * @return Link
    *   Return a link object.
    */
   public function renderLink($url, $html, $text) {
diff --git a/src/Plugin/Block/LBKBaseComponent.php b/src/Plugin/Block/LBKBaseComponent.php
index 2a64cc3..879564f 100644
--- a/src/Plugin/Block/LBKBaseComponent.php
+++ b/src/Plugin/Block/LBKBaseComponent.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_builder_kit\Plugin\Block;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Transliteration\TransliterationInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Access\AccessResult;
@@ -44,29 +45,29 @@ abstract class LBKBaseComponent extends ContextAwarePluginBase implements BlockP
   /**
    * The transliteration service.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;
 
   /**
    * Drupal\Core\Routing\CurrentRouteMatch class.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   private $currentRouteMatch;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo class.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
   /**
    * {@inheritdoc}
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   The EntityTypeBundleInfo service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CurrentRouteMatch $currentRouteMatch, EntityTypeBundleInfo $entityTypeBundleInfo) {
@@ -162,10 +163,10 @@ abstract class LBKBaseComponent extends ContextAwarePluginBase implements BlockP
    * than access(), in order to avoid repeating the handling of the
    * $return_as_object argument.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user session for which to check access.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    *
    * @see self::access()
@@ -330,7 +331,7 @@ abstract class LBKBaseComponent extends ContextAwarePluginBase implements BlockP
   /**
    * Wraps the transliteration service.
    *
-   * @return \Drupal\Component\Transliteration\TransliterationInterface
+   * @return TransliterationInterface
    *   The transliteration service.
    */
   protected function transliteration() {
@@ -343,7 +344,7 @@ abstract class LBKBaseComponent extends ContextAwarePluginBase implements BlockP
   /**
    * Sets the transliteration service.
    *
-   * @param \Drupal\Component\Transliteration\TransliterationInterface $transliteration
+   * @param TransliterationInterface $transliteration
    *   The transliteration service.
    */
   public function setTransliteration(TransliterationInterface $transliteration) {
@@ -356,7 +357,7 @@ abstract class LBKBaseComponent extends ContextAwarePluginBase implements BlockP
    * @param $currentRouteMatch
    * @return array
    *   Return an array.
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected static function getContextNode($currentRouteMatch) {
     $contentContext = [];
diff --git a/src/Plugin/Block/LBKBookNavigation/LBKBookNavigation.php b/src/Plugin/Block/LBKBookNavigation/LBKBookNavigation.php
index 4bd40e1..14bcf93 100755
--- a/src/Plugin/Block/LBKBookNavigation/LBKBookNavigation.php
+++ b/src/Plugin/Block/LBKBookNavigation/LBKBookNavigation.php
@@ -28,42 +28,42 @@ class LBKBookNavigation extends LBKBaseComponent implements ContainerFactoryPlug
   /**
    * Drupal\Core\Routing\CurrentRouteMatch class.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   private $currentRouteMatch;
 
   /**
    * Drupal\book\BookOutlineStorageInterface definition.
    *
-   * @var \Drupal\book\BookOutlineStorageInterface
+   * @var BookOutlineStorageInterface
    */
   private $bookOutlineStorage;
 
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Drupal\layout_builder_kit\LinkProviderInterface definition.
    *
-   * @var \Drupal\layout_builder_kit\LinkProviderInterface
+   * @var LinkProviderInterface
    */
   private $linkProvider;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo class.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
@@ -93,17 +93,17 @@ class LBKBookNavigation extends LBKBaseComponent implements ContainerFactoryPlug
    *   The plugin_id for the plugin instance.
    * @param mixed $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The EntityTypeManagerInterface service.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The ConfigManagerInterface service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
-   * @param \Drupal\book\BookOutlineStorageInterface $bookOutlineStorage
+   * @param BookOutlineStorageInterface $bookOutlineStorage
    *   The BookOutlineStorageInterface service.
-   * @param \Drupal\layout_builder_kit\LinkProviderInterface $linkProvider
+   * @param LinkProviderInterface $linkProvider
    *   The LinkProviderInterface service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   The EntityTypeBundleInfo service.
    */
   public function __construct(array $configuration,
diff --git a/src/Plugin/Block/LBKBookNavigation/LBKBookNavigationEventSubscriber.php b/src/Plugin/Block/LBKBookNavigation/LBKBookNavigationEventSubscriber.php
index 504f9bb..1dd7395 100644
--- a/src/Plugin/Block/LBKBookNavigation/LBKBookNavigationEventSubscriber.php
+++ b/src/Plugin/Block/LBKBookNavigation/LBKBookNavigationEventSubscriber.php
@@ -17,7 +17,7 @@ class LBKBookNavigationEventSubscriber implements EventSubscriberInterface {
   /**
    * Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -45,7 +45,7 @@ class LBKBookNavigationEventSubscriber implements EventSubscriberInterface {
    *   The event.
    */
   public function themeEvent(ThemeEvent $event) {
-    $modulePath = drupal_get_path('module', 'layout_builder_kit');
+    $modulePath = \Drupal::service('extension.list.module')->getPath('layout_builder_kit');
 
     $newThemes = [
       'LBKBookNavigation' => [
diff --git a/src/Plugin/Block/LBKIconText/LBKIconText.php b/src/Plugin/Block/LBKIconText/LBKIconText.php
index b5d7483..f6e03c8 100755
--- a/src/Plugin/Block/LBKIconText/LBKIconText.php
+++ b/src/Plugin/Block/LBKIconText/LBKIconText.php
@@ -28,35 +28,35 @@ class LBKIconText extends LBKBaseComponent implements ContainerFactoryPluginInte
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Drupal\Core\Routing\CurrentRouteMatch class.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo class.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
@@ -69,15 +69,15 @@ class LBKIconText extends LBKBaseComponent implements ContainerFactoryPluginInte
    *   The pluginId for the plugin instance.
    * @param string $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The EntityTypeManagerInterface service.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The ConfigManagerInterface service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The Database Connection service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   The EntityTypeBundleInfo service.
    */
   public function __construct(
diff --git a/src/Plugin/Block/LBKIconText/LBKIconTextEventSubscriber.php b/src/Plugin/Block/LBKIconText/LBKIconTextEventSubscriber.php
index 9daff1f..b4832ee 100755
--- a/src/Plugin/Block/LBKIconText/LBKIconTextEventSubscriber.php
+++ b/src/Plugin/Block/LBKIconText/LBKIconTextEventSubscriber.php
@@ -17,7 +17,7 @@ class LBKIconTextEventSubscriber implements EventSubscriberInterface {
   /**
    * Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -45,7 +45,7 @@ class LBKIconTextEventSubscriber implements EventSubscriberInterface {
    *   The event.
    */
   public function themeEvent(ThemeEvent $event) {
-    $modulePath = drupal_get_path('module', 'layout_builder_kit');
+    $modulePath = \Drupal::service('extension.list.module')->getPath('layout_builder_kit');
 
     $newThemes = [
       'LBKIconText' => [
diff --git a/src/Plugin/Block/LBKImage/LBKImage.php b/src/Plugin/Block/LBKImage/LBKImage.php
index 6568cf6..24c9467 100755
--- a/src/Plugin/Block/LBKImage/LBKImage.php
+++ b/src/Plugin/Block/LBKImage/LBKImage.php
@@ -26,28 +26,28 @@ class LBKImage extends LBKBaseComponent implements ContainerFactoryPluginInterfa
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo class.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
@@ -60,15 +60,15 @@ class LBKImage extends LBKBaseComponent implements ContainerFactoryPluginInterfa
    *   The pluginId for the plugin instance.
    * @param string $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The EntityTypeManagerInterface service.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The ConfigManagerInterface service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The Database Connection service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   The EntityTypeBundleInfo service.
    */
   public function __construct(
diff --git a/src/Plugin/Block/LBKImage/LBKImageEventSubscriber.php b/src/Plugin/Block/LBKImage/LBKImageEventSubscriber.php
index 6d6f044..8be64bd 100755
--- a/src/Plugin/Block/LBKImage/LBKImageEventSubscriber.php
+++ b/src/Plugin/Block/LBKImage/LBKImageEventSubscriber.php
@@ -17,7 +17,7 @@ class LBKImageEventSubscriber implements EventSubscriberInterface {
   /**
    * Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -45,7 +45,7 @@ class LBKImageEventSubscriber implements EventSubscriberInterface {
    *   The event.
    */
   public function themeEvent(ThemeEvent $event) {
-    $modulePath = drupal_get_path('module', 'layout_builder_kit');
+    $modulePath = \Drupal::service('extension.list.module')->getPath('layout_builder_kit');
 
     $newThemes = [
       'LBKImage' => [
diff --git a/src/Plugin/Block/LBKRender/LBKRender.php b/src/Plugin/Block/LBKRender/LBKRender.php
index cfc888e..d25dd06 100644
--- a/src/Plugin/Block/LBKRender/LBKRender.php
+++ b/src/Plugin/Block/LBKRender/LBKRender.php
@@ -28,35 +28,35 @@ class LBKRender extends LBKBaseComponent implements ContainerFactoryPluginInterf
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $entityTypeBundleInfo;
 
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $entityDisplayRepository;
 
@@ -69,13 +69,13 @@ class LBKRender extends LBKBaseComponent implements ContainerFactoryPluginInterf
    *   The pluginId for the plugin instance.
    * @param string $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The EntityTypeManagerInterface service.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The ConfigManagerInterface service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The Database Connection service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
    */
   public function __construct(
@@ -295,7 +295,7 @@ class LBKRender extends LBKBaseComponent implements ContainerFactoryPluginInterf
         $toRender = ['#markup' => '<span>' . $this->t('Media module is not enabled.') . '</span>'];
       }
     }
-    $output = render($toRender);
+    $output = \Drupal::service('renderer')->render($toRender);
 
     $build['#entity'] = $output;
 
diff --git a/src/Plugin/Block/LBKRender/LBKRenderEventSubscriber.php b/src/Plugin/Block/LBKRender/LBKRenderEventSubscriber.php
index 803f932..14a75aa 100644
--- a/src/Plugin/Block/LBKRender/LBKRenderEventSubscriber.php
+++ b/src/Plugin/Block/LBKRender/LBKRenderEventSubscriber.php
@@ -17,7 +17,7 @@ class LBKRenderEventSubscriber implements EventSubscriberInterface {
   /**
    * Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -45,7 +45,7 @@ class LBKRenderEventSubscriber implements EventSubscriberInterface {
    *   The event.
    */
   public function themeEvent(ThemeEvent $event) {
-    $modulePath = drupal_get_path('module', 'layout_builder_kit');
+    $modulePath = \Drupal::service('extension.list.module')->getPath('layout_builder_kit');
 
     $newThemes = [
       'LBKRender' => [
diff --git a/src/Plugin/Block/LBKRichText/LBKRichText.php b/src/Plugin/Block/LBKRichText/LBKRichText.php
index 3f82b40..97147b5 100755
--- a/src/Plugin/Block/LBKRichText/LBKRichText.php
+++ b/src/Plugin/Block/LBKRichText/LBKRichText.php
@@ -23,14 +23,14 @@ class LBKRichText extends LBKBaseComponent implements ContainerFactoryPluginInte
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo class.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
@@ -43,11 +43,11 @@ class LBKRichText extends LBKBaseComponent implements ContainerFactoryPluginInte
    *   The plugin_id for the plugin instance.
    * @param string $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The EntityTypeManagerInterface service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   The EntityTypeBundleInfo service.
    */
   public function __construct(
diff --git a/src/Plugin/Block/LBKRichText/LBKRichTextEventSubscriber.php b/src/Plugin/Block/LBKRichText/LBKRichTextEventSubscriber.php
index e30d025..86e6f02 100755
--- a/src/Plugin/Block/LBKRichText/LBKRichTextEventSubscriber.php
+++ b/src/Plugin/Block/LBKRichText/LBKRichTextEventSubscriber.php
@@ -17,7 +17,7 @@ class LBKRichTextEventSubscriber implements EventSubscriberInterface {
   /**
    * Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -45,7 +45,7 @@ class LBKRichTextEventSubscriber implements EventSubscriberInterface {
    *   The event.
    */
   public function themeEvent(ThemeEvent $event) {
-    $modulePath = drupal_get_path('module', 'layout_builder_kit');
+    $modulePath = \Drupal::service('extension.list.module')->getPath('layout_builder_kit');
 
     $newThemes = [
       'LBKRichText' => [
diff --git a/src/Plugin/Block/LBKTab/LBKTab.php b/src/Plugin/Block/LBKTab/LBKTab.php
index a552db2..cdda586 100755
--- a/src/Plugin/Block/LBKTab/LBKTab.php
+++ b/src/Plugin/Block/LBKTab/LBKTab.php
@@ -37,42 +37,42 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Drupal\Core\Routing\CurrentRouteMatch class.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;
 
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface class.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Drupal\Core\Entity\EntityFieldManager class.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManager
+   * @var EntityFieldManager
    */
   protected $entityFieldManager;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo class.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
@@ -85,17 +85,17 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
    *   The pluginId for the plugin instance.
    * @param string $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The EntityTypeManagerInterface service.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The ConfigManagerInterface service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The ModuleHandlerInterface service.
-   * @param \Drupal\Core\Entity\EntityFieldManager $entityFieldManager
+   * @param EntityFieldManager $entityFieldManager
    *   The EntityFieldManager service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   The EntityTypeBundleInfo service.
    */
   public function __construct(
@@ -286,7 +286,7 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
    *
    * @param array $form
    *   The array form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The FormStateInterface.
    */
   public function addCustomText(array &$form, FormStateInterface $formState) {
@@ -310,7 +310,7 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
    *
    * @param array $form
    *   The array form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The FormStateInterface.
    *
    * @return mixed
@@ -325,7 +325,7 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
    *
    * @param array $form
    *   The array form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The FormStateInterface.
    */
   public function addBlock(array &$form, FormStateInterface $formState) {
@@ -349,7 +349,7 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
    *
    * @param array $form
    *   The array form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The FormStateInterface.
    *
    * @return mixed
@@ -364,7 +364,7 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
    *
    * @param array $form
    *   The array form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The FormStateInterface.
    */
   public function removeLastBlock(array &$form, FormStateInterface $formState) {
@@ -383,7 +383,7 @@ class LBKTab extends LBKBaseComponent implements ContainerFactoryPluginInterface
    *
    * @param array $form
    *   The array form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The FormStateInterface.
    *
    * @return mixed
diff --git a/src/Plugin/Block/LBKTab/LBKTabEventSubscriber.php b/src/Plugin/Block/LBKTab/LBKTabEventSubscriber.php
index c45f7b1..cf7cc43 100755
--- a/src/Plugin/Block/LBKTab/LBKTabEventSubscriber.php
+++ b/src/Plugin/Block/LBKTab/LBKTabEventSubscriber.php
@@ -17,7 +17,7 @@ class LBKTabEventSubscriber implements EventSubscriberInterface {
   /**
    * Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -45,7 +45,7 @@ class LBKTabEventSubscriber implements EventSubscriberInterface {
    *   The event.
    */
   public function themeEvent(ThemeEvent $event) {
-    $modulePath = drupal_get_path('module', 'layout_builder_kit');
+    $modulePath = \Drupal::service('extension.list.module')->getPath('layout_builder_kit');
 
     $newThemes = [
       'LBKTab' => [
diff --git a/src/Plugin/Block/LBKVideo/LBKVideo.php b/src/Plugin/Block/LBKVideo/LBKVideo.php
index 6f8f849..0f0c457 100644
--- a/src/Plugin/Block/LBKVideo/LBKVideo.php
+++ b/src/Plugin/Block/LBKVideo/LBKVideo.php
@@ -44,35 +44,35 @@ class LBKVideo extends LBKBaseComponent implements ContainerFactoryPluginInterfa
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Drupal\Core\Routing\CurrentRouteMatch class.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;
 
   /**
    * Drupal\Core\Entity\EntityFieldManager definition.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManager
+   * @var EntityFieldManager
    */
   protected $entityFieldManager;
 
   /**
    * Drupal\Core\Entity\EntityTypeBundleInfo class.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfo
+   * @var EntityTypeBundleInfo
    */
   protected $entityTypeBundleInfo;
 
@@ -85,15 +85,15 @@ class LBKVideo extends LBKBaseComponent implements ContainerFactoryPluginInterfa
    *   The plugin_id for the plugin instance.
    * @param string $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The EntityTypeManagerInterface service.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The ConfigManagerInterface service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch
+   * @param CurrentRouteMatch $currentRouteMatch
    *   The CurrentRouteMatch service.
-   * @param \Drupal\Core\Entity\EntityFieldManager $entityFieldManager
+   * @param EntityFieldManager $entityFieldManager
    *   The EntityFieldManager service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfo $entityTypeBundleInfo
+   * @param EntityTypeBundleInfo $entityTypeBundleInfo
    *   The EntityTypeBundleInfo service.
    */
   public function __construct(
@@ -361,7 +361,7 @@ class LBKVideo extends LBKBaseComponent implements ContainerFactoryPluginInterfa
             $filePath = $fieldOutput['value'][0]['#file'];
             if ($filePath) {
               $videoFieldUri = $filePath->getFileUri();
-              $videoFieldPath = file_create_url($videoFieldUri);
+              $videoFieldPath = \Drupal::service('file_url_generator')->generateAbsoluteString($videoFieldUri);
               $build['#video_field']['value'] = $videoFieldPath;
             }
             break;
@@ -399,7 +399,7 @@ class LBKVideo extends LBKBaseComponent implements ContainerFactoryPluginInterfa
               $filePath = $fieldOutput['value'][0]['#file'];
               if ($filePath) {
                 $videoFieldUri = $filePath->getFileUri();
-                $videoFieldPath = file_create_url($videoFieldUri);
+                $videoFieldPath = \Drupal::service('file_url_generator')->generateAbsoluteString($videoFieldUri);
                 $build['#video_field']['value'] = $videoFieldPath;
               }
               break;
diff --git a/src/Plugin/Block/LBKVideo/LBKVideoEventSubscriber.php b/src/Plugin/Block/LBKVideo/LBKVideoEventSubscriber.php
index 59cc565..658a71a 100644
--- a/src/Plugin/Block/LBKVideo/LBKVideoEventSubscriber.php
+++ b/src/Plugin/Block/LBKVideo/LBKVideoEventSubscriber.php
@@ -17,7 +17,7 @@ class LBKVideoEventSubscriber implements EventSubscriberInterface {
   /**
    * Logger Factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -45,7 +45,7 @@ class LBKVideoEventSubscriber implements EventSubscriberInterface {
    *   The event.
    */
   public function themeEvent(ThemeEvent $event) {
-    $modulePath = drupal_get_path('module', 'layout_builder_kit');
+    $modulePath = \Drupal::service('extension.list.module')->getPath('layout_builder_kit');
 
     $newThemes = [
       'LBKVideo' => [
