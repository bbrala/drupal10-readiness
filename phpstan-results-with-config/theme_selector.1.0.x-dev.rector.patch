diff --git a/src/Controller/ThemeSelectorListBuilder.php b/src/Controller/ThemeSelectorListBuilder.php
index 6acfaa9..825703e 100644
--- a/src/Controller/ThemeSelectorListBuilder.php
+++ b/src/Controller/ThemeSelectorListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\theme_selector\Controller;
 
+use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;
@@ -27,10 +28,10 @@ class ThemeSelectorListBuilder extends ConfigEntityListBuilder {
   /**
    * Constructs the table rows.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Webform content creator entity.
    *
-   * @return \Drupal\Core\Entity\EntityListBuilder
+   * @return EntityListBuilder
    *   A render array structure of fields for this entity.
    */
   public function buildRow(EntityInterface $entity) {
diff --git a/src/Form/ThemeSelectorDeleteForm.php b/src/Form/ThemeSelectorDeleteForm.php
index 343cbd1..576eb94 100644
--- a/src/Form/ThemeSelectorDeleteForm.php
+++ b/src/Form/ThemeSelectorDeleteForm.php
@@ -24,7 +24,7 @@ class ThemeSelectorDeleteForm extends EntityConfirmFormBase {
   /**
    * Get url used when canceling an entity deletion.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Cancellation URL.
    */
   public function getCancelUrl() {
@@ -46,7 +46,7 @@ class ThemeSelectorDeleteForm extends EntityConfirmFormBase {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state values.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/ThemeSelectorForm.php b/src/Form/ThemeSelectorForm.php
index 330eae3..22a7efb 100644
--- a/src/Form/ThemeSelectorForm.php
+++ b/src/Form/ThemeSelectorForm.php
@@ -15,7 +15,7 @@ class ThemeSelectorForm extends EntityForm {
   /**
    * Drupal\Core\Plugin\DefaultPluginManager definition.
    *
-   * @var Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
diff --git a/src/Theme/ThemeSelectorNegotiator.php b/src/Theme/ThemeSelectorNegotiator.php
index 970f4f9..da4257f 100644
--- a/src/Theme/ThemeSelectorNegotiator.php
+++ b/src/Theme/ThemeSelectorNegotiator.php
@@ -16,14 +16,14 @@ class ThemeSelectorNegotiator implements ThemeNegotiatorInterface {
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Class construct.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack used to retrieve the current request.
    */
   public function __construct(RequestStack $request_stack) {
@@ -34,7 +34,7 @@ class ThemeSelectorNegotiator implements ThemeNegotiatorInterface {
   /**
    * Validates if it is ok to apply the theme.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The RouteMatch.
    *
    * @return bool
@@ -56,7 +56,7 @@ class ThemeSelectorNegotiator implements ThemeNegotiatorInterface {
   /**
    * This functions returns the name of the theme to be applied.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The RouteMatch.
    *
    * @return string
diff --git a/tests/src/Funtional/ConfigurationFormTest.php b/tests/src/Funtional/ConfigurationFormTest.php
index 0a23532..d03fe14 100644
--- a/tests/src/Funtional/ConfigurationFormTest.php
+++ b/tests/src/Funtional/ConfigurationFormTest.php
@@ -30,7 +30,7 @@ class ConfigurationFormTest extends BrowserTestBase {
   /**
    * Set up the test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $account =
@@ -53,7 +53,10 @@ class ConfigurationFormTest extends BrowserTestBase {
    */
   public function testCanAccessContentMessages() {
     $this->drupalGet('/admin/config/user-interface/theme-selectors');
-    $this->assertText('Theme Selector');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Theme Selector');
   }
 
 }
diff --git a/theme_selector.info.yml b/theme_selector.info.yml
index 1ab36ea..e0e3a58 100644
--- a/theme_selector.info.yml
+++ b/theme_selector.info.yml
@@ -2,6 +2,5 @@ name: Theme Selector
 type: module
 package: ThemeSelector
 description: This module allows to change the page theme with a query string
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: theme_selector.settings
