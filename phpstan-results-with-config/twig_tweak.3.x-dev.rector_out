modules/contrib/twig_tweak/src/CacheMetadataExtractor.php
modules/contrib/twig_tweak/src/Command/DebugCommand.php
modules/contrib/twig_tweak/src/Command/LintCommand.php
modules/contrib/twig_tweak/src/Command/ValidateCommand.php
modules/contrib/twig_tweak/src/TwigTweakExtension.php
modules/contrib/twig_tweak/src/UriExtractor.php
modules/contrib/twig_tweak/src/UrlExtractor.php
modules/contrib/twig_tweak/src/View/BlockViewBuilder.php
modules/contrib/twig_tweak/src/View/EntityFormViewBuilder.php
modules/contrib/twig_tweak/src/View/EntityViewBuilder.php
modules/contrib/twig_tweak/src/View/FieldViewBuilder.php
modules/contrib/twig_tweak/src/View/ImageViewBuilder.php
modules/contrib/twig_tweak/src/View/MenuViewBuilder.php
modules/contrib/twig_tweak/src/View/RegionViewBuilder.php
modules/contrib/twig_tweak/tests/src/Functional/TwigTweakTest.php
modules/contrib/twig_tweak/tests/src/Kernel/AbstractExtractorTestCase.php
modules/contrib/twig_tweak/tests/src/Kernel/AbstractTestCase.php
modules/contrib/twig_tweak/tests/src/Kernel/BlockViewBuilderTest.php
modules/contrib/twig_tweak/tests/src/Kernel/CacheMetadataExtractorTest.php
modules/contrib/twig_tweak/tests/src/Kernel/EntityFormViewBuilderTest.php
modules/contrib/twig_tweak/tests/src/Kernel/EntityViewBuilderTest.php
modules/contrib/twig_tweak/tests/src/Kernel/FieldViewBuilderTest.php
modules/contrib/twig_tweak/tests/src/Kernel/ImageViewBuilderTest.php
modules/contrib/twig_tweak/tests/src/Kernel/MenuViewBuilderTest.php
modules/contrib/twig_tweak/tests/src/Kernel/RegionViewBuilderTest.php
modules/contrib/twig_tweak/tests/src/Kernel/UriExtractorTest.php
modules/contrib/twig_tweak/tests/src/Kernel/UrlExtractorTest.php
modules/contrib/twig_tweak/tests/twig_tweak_test/src/Controller/TwigTweakTestController.php
modules/contrib/twig_tweak/tests/twig_tweak_test/src/Plugin/Block/FooBlock.php
modules/contrib/twig_tweak/tests/twig_tweak_test/twig_tweak_test.module
modules/contrib/twig_tweak/twig_tweak.api.php

17 files with changes
=====================

1) modules/contrib/twig_tweak/twig_tweak.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Twig\TwigFilter;
 /**
  * @file
  * Hooks specific to the Twig Tweak module.
@@ @@
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alters Twig Tweak functions.
  *
- * @param \Twig\TwigFunction[] $functions
+ * @param TwigFunction[] $functions
  *   Twig functions to alter.
  */
 function hook_twig_tweak_functions_alter(array &$functions): void {
@@ @@
 /**
  * Alters Twig Tweak filters.
  *
- * @param \Twig\TwigFilter[] $filters
+ * @param TwigFilter[] $filters
  *   Twig filters to alter.
  */
 function hook_twig_tweak_filters_alter(array &$filters): void {
@@ @@
 /**
  * Alters Twig Tweak tests.
  *
- * @param \Twig\TwigTest[] $tests
+ * @param TwigTest[] $tests
  *   Twig tests to alter.
  */
 function hook_twig_tweak_tests_alter(array &$tests): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/twig_tweak/tests/src/Kernel/ImageViewBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\twig_tweak\Kernel;

+use Drupal\file\FileInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\file\Entity\File;
@@ @@

     $view_builder = $this->container->get('twig_tweak.image_view_builder');

-    /** @var \Drupal\file\FileInterface $public_image */
+    /** @var FileInterface $public_image */
     $public_image = File::create(['uri' => 'public://ocean.jpg']);
     $public_image->save();

-    /** @var \Drupal\file\FileInterface $private_image */
+    /** @var FileInterface $private_image */
     $private_image = File::create(['uri' => 'private://sea.jpg']);
     $private_image->save();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/twig_tweak/tests/src/Kernel/AbstractExtractorTestCase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\twig_tweak\Kernel;

+use Drupal\node\NodeInterface;
 use Drupal\file\Entity\File;
 use Drupal\file\FileInterface;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
   /**
    * A node to test.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/twig_tweak/tests/src/Functional/TwigTweakTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\twig_tweak\Functional;

+use Drupal\user\RoleInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Render\Markup;
 use Drupal\Core\Url;
@@ @@

     // Grant require permissions and test the forms again.
     $permissions = ['create page content', 'edit any page content'];
-    /** @var \Drupal\user\RoleInterface $role */
+    /** @var RoleInterface $role */
     $role = Role::load(Role::ANONYMOUS_ID);
     $this->grantPermissions($role, $permissions);
     $this->drupalGet($this->getUrl());
@@ @@
     $xpath = '//div[@class="tt-contextual-links" and not(div[@data-contextual-id])]';
     $this->assertXpath($xpath);

-    /** @var \Drupal\user\RoleInterface $role */
+    /** @var RoleInterface $role */
     $role = Role::load(Role::ANONYMOUS_ID);
     $this->grantPermissions($role, ['access contextual links']);
     $this->drupalGet($this->getUrl());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/twig_tweak/src/View/RegionViewBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\twig_tweak\View;

+use Drupal\block\BlockInterface;
 use Drupal\Core\Block\TitleBlockPluginInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The title resolver.
    *
-   * @var \Drupal\Core\Controller\TitleResolverInterface
+   * @var TitleResolverInterface
    */
   protected $titleResolver;

@@ @@
       ->addCacheTags($entity_type->getListCacheTags())
       ->addCacheContexts($entity_type->getListCacheContexts());

-    /** @var \Drupal\block\BlockInterface[] $blocks */
+    /** @var BlockInterface[] $blocks */
     foreach ($blocks as $id => $block) {
       $access = $block->access('view', NULL, TRUE);
       $cache_metadata = $cache_metadata->addCacheableDependency($access);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/twig_tweak/src/View/MenuViewBuilder.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/twig_tweak/src/View/ImageViewBuilder.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Builds an image.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file object.
    * @param string $style
    *   (optional) Image style.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


8) modules/contrib/twig_tweak/src/View/FieldViewBuilder.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;

@@ @@
   /**
    * Returns the render array for a single entity field.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    * @param string $field_name
    *   The field name.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/twig_tweak/src/View/EntityViewBuilder.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/twig_tweak/src/View/EntityFormViewBuilder.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The entity form builder service.
    *
-   * @var \Drupal\Core\Entity\EntityFormBuilderInterface
+   * @var EntityFormBuilderInterface
    */
   protected $entityFormBuilder;

@@ @@
   /**
    * Gets the built and processed entity form for the given entity type.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    * @param string $form_mode
    *   (optional) The mode identifying the form variation to be returned.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/twig_tweak/src/View/BlockViewBuilder.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The plugin.manager.block service.
    *
-   * @var \Drupal\Core\Cache\CacheableDependencyInterface
+   * @var CacheableDependencyInterface
    */
   protected $pluginManagerBlock;

@@ @@
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;

@@ @@
   /**
    * The plugin context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * The title resolver.
    *
-   * @var \Drupal\Core\Controller\TitleResolverInterface
+   * @var TitleResolverInterface
    */
   protected $titleResolver;

@@ @@

     $configuration += ['label_display' => BlockPluginInterface::BLOCK_LABEL_VISIBLE];

-    /** @var \Drupal\Core\Block\BlockPluginInterface $block_plugin */
+    /** @var BlockPluginInterface $block_plugin */
     $block_plugin = $this->pluginManagerBlock->createInstance($id, $configuration);

     // Inject runtime contexts.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/twig_tweak/src/UrlExtractor.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The file URL generator.
    *
-   * @var \Drupal\Core\File\FileUrlGeneratorInterface
+   * @var FileUrlGeneratorInterface
    */
   protected $fileUrlGenerator;

@@ @@
   /**
    * Extracts file URL from content entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity object that contains information about the file.
    * @param bool $relative
    *   (optional) Whether the URL should be root-relative, defaults to true.
@@ @@
         return $value;
       }
       else {
-        /** @var \Drupal\file\FileInterface $file */
+        /** @var FileInterface $file */
         $file = $this->entityTypeManager->getStorage('file')->load($value);
         if ($file) {
           return $file->createFileUrl($relative);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


13) modules/contrib/twig_tweak/src/UriExtractor.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Extracts file URI from content entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity object that contains information about the file.
    *
    * @return string|null
@@ @@
       if ($source instanceof OEmbedInterface) {
         return $value;
       }
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = $this->entityTypeManager->getStorage('file')->load($value);
       if ($file) {
         return $file->getFileUri();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


14) modules/contrib/twig_tweak/src/TwigTweakExtension.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\twig_tweak;

+use Drupal\Core\Entity\Plugin\DataType\EntityAdapter;
+use Drupal\Core\Cache\CacheableDependencyInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Component\Uuid\Uuid;
@@ @@
   /**
    * The module handler to invoke alter hooks.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The theme manager to invoke alter hooks.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
    * @param bool $check_access
    *   (optional) Indicates that access check is required.
    *
-   * @return \Drupal\Core\Url|null
+   * @return Url|null
    *   A new Url object or null if the URL is not accessible.
    *
    * @see \Drupal\Core\Url::fromUserInput()
@@ @@
    * @param bool $check_access
    *   (optional) Indicates that access check is required.
    *
-   * @return \Drupal\Core\Link|null
+   * @return Link|null
    *   A new Link object or null of the URL is not accessible.
    *
    * @see \Drupal\Core\Link::fromTextAndUrl()
@@ @@
   /**
    * Emits a breakpoint to the debug client.
    *
-   * @param \Twig\Environment $environment
+   * @param Environment $environment
    *   The Twig environment instance.
    * @param array $context
    *   Variables from the current Twig template.
@@ @@
     $build = [];
     if ($object instanceof FieldItemListInterface || $object instanceof FieldItemInterface) {
       $build = $object->view($view_mode);
-      /** @var \Drupal\Core\Entity\Plugin\DataType\EntityAdapter $parent */
+      /** @var EntityAdapter $parent */
       if ($parent = $object->getParent()) {
         CacheableMetadata::createFromRenderArray($build)
           ->addCacheableDependency($parent->getEntity())
@@ @@
   /**
    * Returns the translation for the given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to get the translation from.
    * @param string $langcode
    *   (optional) For which language the translation should be looked for,
    *   defaults to the current language context.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The appropriate translation for the given language context.
    */
   public static function entityTranslation(EntityInterface $entity, string $langcode = NULL): EntityInterface {
@@ @@
   /**
    * Extracts cache metadata from object or render array.
    *
-   * @param \Drupal\Core\Cache\CacheableDependencyInterface|array $input
+   * @param CacheableDependencyInterface|array $input
    *   The cacheable object or render array.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/twig_tweak/src/Command/LintCommand.php:76

    ---------- begin diff ----------
@@ @@
         ;
     }

-    protected function execute(InputInterface $input, OutputInterface $output)
+    protected function execute(InputInterface $input, OutputInterface $output): int
     {
         $io = new SymfonyStyle($input, $output);
         $filenames = $input->getArgument('filename');
@@ @@
         $showDeprecations = $input->getOption('show-deprecations');

         if (['-'] === $filenames) {
-            return $this->display($input, $output, $io, [$this->validate(file_get_contents('php://stdin'), uniqid('sf_', true))]);
+            return (int) $this->display($input, $output, $io, [$this->validate(file_get_contents('php://stdin'), uniqid('sf_', true))]);
         }

         if (!$filenames) {
@@ @@
             }
         }

-        return $this->display($input, $output, $io, $filesInfo);
+        return (int) $this->display($input, $output, $io, $filesInfo);
     }

     private function getFilesInfo(array $filenames): array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/twig_tweak/src/Command/DebugCommand.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Twig environment.
    *
-   * @var \Twig\Environment
+   * @var Environment
    */
   private $twig;

@@ @@
   /**
    * Returns files system loaders.
    *
-   * @return \Twig\Loader\FilesystemLoader[]
+   * @return FilesystemLoader[]
    *   File system loaders.
    */
   private function getFilesystemLoaders(): array {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/twig_tweak/src/CacheMetadataExtractor.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Extracts cache metadata from object or render array.
    *
-   * @param \Drupal\Core\Cache\CacheableDependencyInterface|array $input
+   * @param CacheableDependencyInterface|array $input
    *   The cacheable object or render array.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 17 files have been changed by Rector                                      

