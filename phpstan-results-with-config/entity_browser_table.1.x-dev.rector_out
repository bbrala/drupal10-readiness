modules/contrib/entity_browser_table/entity_browser_table.module
modules/contrib/entity_browser_table/src/Plugin/Field/FieldWidget/EntityReferenceBrowserTableWidget.php
modules/contrib/entity_browser_table/tests/src/Kernel/EntityReferenceBrowserTableWidgetTests.php

2 files with changes
====================

1) modules/contrib/entity_browser_table/tests/src/Kernel/EntityReferenceBrowserTableWidgetTests.php:40

    ---------- begin diff ----------
@@ @@
     'entity_browser_table',
   ];

-  public function setUp() {
+  public function setUp(): void {
     parent::setUp(); // TODO: Change the autogenerated stub

     $this->installEntitySchema('taxonomy_term');
@@ @@

   public function testBuildTableRows__GivenThreeEntities__ReturnArrayOfThree() {
     $testBuildTableRows = $this->widget->buildTableRows($this->entities,$this->detailsId, $this->fieldParents);
-    $this->assertInternalType('array', $testBuildTableRows);
+    $this->assertIsArray($testBuildTableRows);
     $this->assertCount(3, $testBuildTableRows);
   }

@@ @@
     $this->assertCount(8, $testBuildEditButton);
   }

+  /**
+   * @doesNotPerformAssertions
+   */
   public function testGetEntityTypeLabel() {
     // TODO: Figure out how to mock the entityTypeManager response.
     //    $this->assertEquals('Image', $this->widget->getEntityTypeLable($this->entities[0]));
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * SpecificAssertInternalTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_browser_table/src/Plugin/Field/FieldWidget/EntityReferenceBrowserTableWidget.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_browser_table\Plugin\Field\FieldWidget;

+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Utility\Html;
 use Drupal\content_moderation\ModerationInformation;
@@ @@
    *   The ID for the details element.
    * @param string[] $field_parents
    *   Field parents.
-   * @param \Drupal\Core\Entity\ContentEntityInterface[] $entities
+   * @param ContentEntityInterface[] $entities
    *   Array of referenced entities.
    *
    * @return array
@@ @@
   }

   /**
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getFirstColumn(EntityInterface $entity): array {
     $value = $this->getFieldWidgetDisplay()->view($entity);
@@ @@
   }

   /**
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getAdditionalFieldsColumn(EntityInterface $entity) {
     if (isset($this->getAdditionalFields()['status']) === FALSE) {
@@ @@
   }

   /**
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getFieldWidgetDisplay() {
     return $this->fieldDisplayManager->createInstance(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

