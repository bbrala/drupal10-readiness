diff --git a/modules/preview_graphql_jwt/preview_graphql_jwt.module b/modules/preview_graphql_jwt/preview_graphql_jwt.module
index 8900b62..fc97f17 100644
--- a/modules/preview_graphql_jwt/preview_graphql_jwt.module
+++ b/modules/preview_graphql_jwt/preview_graphql_jwt.module
@@ -28,7 +28,7 @@ function preview_graphql_jwt_help($route_name, RouteMatchInterface $route_match)
         '#value' => $content,
       ];
       $output = '';
-      $output .= render($build);
+      $output .= \Drupal::service('renderer')->render($build);
       return $output;
   }
   return '';
diff --git a/modules/preview_graphql_jwt/src/EventSubscriber/CarrierCallbackOptionSubscriber.php b/modules/preview_graphql_jwt/src/EventSubscriber/CarrierCallbackOptionSubscriber.php
index 37fcc63..4db648e 100644
--- a/modules/preview_graphql_jwt/src/EventSubscriber/CarrierCallbackOptionSubscriber.php
+++ b/modules/preview_graphql_jwt/src/EventSubscriber/CarrierCallbackOptionSubscriber.php
@@ -26,7 +26,7 @@ class CarrierCallbackOptionSubscriber implements EventSubscriberInterface {
   /**
    * Add JWT option to carrier settings.
    *
-   * @param \Drupal\preview_graphql\Event\CarrierCallbackOptionEvent $event
+   * @param CarrierCallbackOptionEvent $event
    *   The carrier callback option event.
    */
   public function getCarrierCallbackOption(CarrierCallbackOptionEvent $event) {
diff --git a/modules/preview_graphql_jwt/src/EventSubscriber/ContextResolverCacheSubscriber.php b/modules/preview_graphql_jwt/src/EventSubscriber/ContextResolverCacheSubscriber.php
index a717b7f..86b3784 100644
--- a/modules/preview_graphql_jwt/src/EventSubscriber/ContextResolverCacheSubscriber.php
+++ b/modules/preview_graphql_jwt/src/EventSubscriber/ContextResolverCacheSubscriber.php
@@ -23,7 +23,7 @@ class ContextResolverCacheSubscriber implements EventSubscriberInterface {
   /**
    * Alter the cache context resolver to add cache context on headers.
    *
-   * @param \Drupal\preview_graphql\Event\ContextResolverCacheEvent $event
+   * @param ContextResolverCacheEvent $event
    *   The carrier callback option event.
    */
   public function alterContext(ContextResolverCacheEvent $event) {
diff --git a/modules/preview_graphql_jwt/src/EventSubscriber/GenerateKeySubscriber.php b/modules/preview_graphql_jwt/src/EventSubscriber/GenerateKeySubscriber.php
index a46d6ae..25ed001 100644
--- a/modules/preview_graphql_jwt/src/EventSubscriber/GenerateKeySubscriber.php
+++ b/modules/preview_graphql_jwt/src/EventSubscriber/GenerateKeySubscriber.php
@@ -16,14 +16,14 @@ class GenerateKeySubscriber implements EventSubscriberInterface {
   /**
    * The preview graphql JWT manager.
    *
-   * @var \Drupal\preview_graphql_jwt\Services\PreviewGraphQlJwtManager
+   * @var PreviewGraphQlJwtManager
    */
   protected $previewGraphQlJwtManager;
 
   /**
    * GenerateKeySubscriber constructor.
    *
-   * @param \Drupal\preview_graphql_jwt\Services\PreviewGraphQlJwtManager $preview_graphql_jwt_manager
+   * @param PreviewGraphQlJwtManager $preview_graphql_jwt_manager
    *   The preview graphql JWT manager.
    */
   public function __construct(PreviewGraphQlJwtManager $preview_graphql_jwt_manager) {
@@ -41,7 +41,7 @@ class GenerateKeySubscriber implements EventSubscriberInterface {
   /**
    * Generate the JWT token value with the cid inside.
    *
-   * @param \Drupal\preview_graphql\Event\GenerateKeyEvent $event
+   * @param GenerateKeyEvent $event
    *   The generate key event.
    */
   public function generateKey(GenerateKeyEvent $event) {
diff --git a/modules/preview_graphql_jwt/src/EventSubscriber/GetCidSubscriber.php b/modules/preview_graphql_jwt/src/EventSubscriber/GetCidSubscriber.php
index 1d76ec5..d73f330 100644
--- a/modules/preview_graphql_jwt/src/EventSubscriber/GetCidSubscriber.php
+++ b/modules/preview_graphql_jwt/src/EventSubscriber/GetCidSubscriber.php
@@ -16,14 +16,14 @@ class GetCidSubscriber implements EventSubscriberInterface {
   /**
    * The preview graphql JWT manager.
    *
-   * @var \Drupal\preview_graphql_jwt\Services\PreviewGraphQlJwtManager
+   * @var PreviewGraphQlJwtManager
    */
   protected $previewGraphQlJwtManager;
 
   /**
    * GetCidSubscriber constructor.
    *
-   * @param \Drupal\preview_graphql_jwt\Services\PreviewGraphQlJwtManager $preview_graphql_jwt_manager
+   * @param PreviewGraphQlJwtManager $preview_graphql_jwt_manager
    *   The preview graphql JWT manager.
    */
   public function __construct(PreviewGraphQlJwtManager $preview_graphql_jwt_manager) {
@@ -41,7 +41,7 @@ class GetCidSubscriber implements EventSubscriberInterface {
   /**
    * Return the cid inside JWT.
    *
-   * @param \Drupal\preview_graphql\Event\GetCidEvent $event
+   * @param GetCidEvent $event
    *   The get cid event.
    */
   public function getCid(GetCidEvent $event) {
diff --git a/modules/preview_graphql_jwt/src/EventSubscriber/RedirectSubscriber.php b/modules/preview_graphql_jwt/src/EventSubscriber/RedirectSubscriber.php
index acd68a8..65891d7 100644
--- a/modules/preview_graphql_jwt/src/EventSubscriber/RedirectSubscriber.php
+++ b/modules/preview_graphql_jwt/src/EventSubscriber/RedirectSubscriber.php
@@ -24,7 +24,7 @@ class RedirectSubscriber implements EventSubscriberInterface {
   /**
    * Alter the redirection to front, to add JWT inside headers.
    *
-   * @param \Drupal\preview_graphql\Event\RedirectEvent $event
+   * @param RedirectEvent $event
    *   The redirect event.
    */
   public function redirect(RedirectEvent $event) {
diff --git a/modules/preview_graphql_jwt/src/Services/PreviewGraphQlJwtManager.php b/modules/preview_graphql_jwt/src/Services/PreviewGraphQlJwtManager.php
index dfde11a..78fa1ed 100644
--- a/modules/preview_graphql_jwt/src/Services/PreviewGraphQlJwtManager.php
+++ b/modules/preview_graphql_jwt/src/Services/PreviewGraphQlJwtManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\preview_graphql_jwt\Services;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -48,21 +50,21 @@ class PreviewGraphQlJwtManager {
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * A messenger instance.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * A entity logger instance.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
@@ -70,7 +72,7 @@ class PreviewGraphQlJwtManager {
   /**
    * The request instance.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $request;
 
@@ -94,7 +96,7 @@ class PreviewGraphQlJwtManager {
   /**
    * Return the request manager.
    *
-   * @return \Symfony\Component\HttpFoundation\Request|null
+   * @return Request|null
    *   An instance of request manager.
    */
   public function getRequest() {
@@ -104,7 +106,7 @@ class PreviewGraphQlJwtManager {
   /**
    * Return the messenger service.
    *
-   * @return \Drupal\Core\Messenger\MessengerInterface
+   * @return MessengerInterface
    *   The messenger service.
    */
   public function getMessenger() {
@@ -114,7 +116,7 @@ class PreviewGraphQlJwtManager {
   /**
    * Return the logger service.
    *
-   * @return \Drupal\Core\Logger\LoggerChannelInterface
+   * @return LoggerChannelInterface
    *   The logger service.
    */
   public function getLogger() {
diff --git a/preview_graphql.module b/preview_graphql.module
index 5a07b59..338adac 100644
--- a/preview_graphql.module
+++ b/preview_graphql.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\TempStore\TempStoreException;
 /**
  * @file
  * Contains preview_graphql.module.
@@ -32,7 +36,7 @@ function preview_graphql_help($route_name, RouteMatchInterface $route_match) {
         '#value' => $content,
       ];
       $output = '';
-      $output .= render($build);
+      $output .= \Drupal::service('renderer')->render($build);
       return $output;
   }
   return '';
@@ -105,16 +109,16 @@ function preview_graphql_entity_prepare_form(EntityInterface $entity, $operation
  *
  * @param array $form
  *   The form of entity.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current data form.
  *
  * @return bool
  *   False if error.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
- * @throws \Drupal\Core\TempStore\TempStoreException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
+ * @throws TempStoreException
  */
 function _preview_graphql_front(array &$form, FormStateInterface $form_state) {
   /* @var  $entity \Drupal\Core\Entity\EntityInterface */
diff --git a/src/Event/CarrierCallbackOptionEvent.php b/src/Event/CarrierCallbackOptionEvent.php
index 2976fe7..cd8a1a9 100644
--- a/src/Event/CarrierCallbackOptionEvent.php
+++ b/src/Event/CarrierCallbackOptionEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\preview_graphql\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Event that is fired when settings of carrier callback element is building.
diff --git a/src/Event/ContextResolverCacheEvent.php b/src/Event/ContextResolverCacheEvent.php
index 2e812b3..3f038b6 100644
--- a/src/Event/ContextResolverCacheEvent.php
+++ b/src/Event/ContextResolverCacheEvent.php
@@ -16,7 +16,7 @@ class ContextResolverCacheEvent extends PreviewGraphQlEventBase {
   /**
    * GraphQL context resolver.
    *
-   * @var \Drupal\graphql\GraphQL\Execution\ResolveContext
+   * @var ResolveContext
    */
   protected $context;
 
@@ -25,7 +25,7 @@ class ContextResolverCacheEvent extends PreviewGraphQlEventBase {
    *
    * @param string $carrier_callback
    *   The type carrier callback key.
-   * @param \Drupal\graphql\GraphQL\Execution\ResolveContext $context
+   * @param ResolveContext $context
    *   The graphQL context resolver.
    */
   public function __construct($carrier_callback, ResolveContext $context) {
@@ -36,7 +36,7 @@ class ContextResolverCacheEvent extends PreviewGraphQlEventBase {
   /**
    * Set the graphQL context resolver.
    *
-   * @param \Drupal\graphql\GraphQL\Execution\ResolveContext $context
+   * @param ResolveContext $context
    *   GraphQL context resolver.
    */
   public function setContext(ResolveContext $context) {
@@ -46,7 +46,7 @@ class ContextResolverCacheEvent extends PreviewGraphQlEventBase {
   /**
    * Get the graphQL context resolver.
    *
-   * @return \Drupal\graphql\GraphQL\Execution\ResolveContext
+   * @return ResolveContext
    *   GraphQL context resolver.
    */
   public function getContext() {
diff --git a/src/Event/PreviewGraphQlEventBase.php b/src/Event/PreviewGraphQlEventBase.php
index e636cd4..0b6d0eb 100644
--- a/src/Event/PreviewGraphQlEventBase.php
+++ b/src/Event/PreviewGraphQlEventBase.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\preview_graphql\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Event preview graphql Base.
diff --git a/src/Event/RedirectEvent.php b/src/Event/RedirectEvent.php
index 8b06642..869e5b4 100644
--- a/src/Event/RedirectEvent.php
+++ b/src/Event/RedirectEvent.php
@@ -23,7 +23,7 @@ class RedirectEvent extends PreviewGraphQlEventBase {
   /**
    * The redirect response.
    *
-   * @var \Drupal\Core\Routing\TrustedRedirectResponse
+   * @var TrustedRedirectResponse
    */
   protected $response;
 
@@ -32,7 +32,7 @@ class RedirectEvent extends PreviewGraphQlEventBase {
    *
    * @param string $carrier_callback
    *   The type carrier callback key.
-   * @param \Drupal\Core\Routing\TrustedRedirectResponse $response
+   * @param TrustedRedirectResponse $response
    *   The redirect response.
    * @param string $url_parameter_value
    *   The front url to redirect.
@@ -47,7 +47,7 @@ class RedirectEvent extends PreviewGraphQlEventBase {
   /**
    * Set the redirect response.
    *
-   * @param \Drupal\Core\Routing\TrustedRedirectResponse $response
+   * @param TrustedRedirectResponse $response
    *   The redirect response.
    */
   public function setResponse(TrustedRedirectResponse $response) {
@@ -57,7 +57,7 @@ class RedirectEvent extends PreviewGraphQlEventBase {
   /**
    * Get the redirect response.
    *
-   * @return \Drupal\Core\Routing\TrustedRedirectResponse
+   * @return TrustedRedirectResponse
    *   The redirect response.
    */
   public function getResponse() {
diff --git a/src/Form/PreviewGraphQLForm.php b/src/Form/PreviewGraphQLForm.php
index 19fecad..17e5127 100644
--- a/src/Form/PreviewGraphQLForm.php
+++ b/src/Form/PreviewGraphQLForm.php
@@ -21,21 +21,21 @@ class PreviewGraphQLForm extends EntityForm {
   /**
    * A entity type manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * A bundle manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityBundleInfo;
 
   /**
    * A preview graphQL manager instance.
    *
-   * @var \Drupal\preview_graphql\Services\PreviewGraphQlManager
+   * @var PreviewGraphQlManager
    */
   protected $previewGraphQlManager;
 
@@ -290,9 +290,9 @@ class PreviewGraphQLForm extends EntityForm {
   /**
    * Return default value for element form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\preview_graphql\Entity\PreviewGraphQL $preview_graphql
+   * @param PreviewGraphQL $preview_graphql
    *   The current preview graphql entity.
    * @param string $key_value
    *   The field key searched.
diff --git a/src/Plugin/Deriver/Fields/PreviewGraphQLDeriver.php b/src/Plugin/Deriver/Fields/PreviewGraphQLDeriver.php
index fd93820..b33ab6b 100644
--- a/src/Plugin/Deriver/Fields/PreviewGraphQLDeriver.php
+++ b/src/Plugin/Deriver/Fields/PreviewGraphQLDeriver.php
@@ -17,7 +17,7 @@ class PreviewGraphQLDeriver extends DeriverBase implements ContainerDeriverInter
   /**
    * An instance of preview graphql manager.
    *
-   * @var \Drupal\preview_graphql\Services\PreviewGraphQlManager
+   * @var PreviewGraphQlManager
    */
   protected $previewGraphQLManager;
 
diff --git a/src/Services/PreviewGraphQlBackend.php b/src/Services/PreviewGraphQlBackend.php
index 90d02c1..9078d2d 100644
--- a/src/Services/PreviewGraphQlBackend.php
+++ b/src/Services/PreviewGraphQlBackend.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\preview_graphql\Services;
 
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\TempStore\TempStoreException;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -31,7 +35,7 @@ class PreviewGraphQlBackend {
   /**
    * The request instance.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $request;
 
@@ -39,14 +43,14 @@ class PreviewGraphQlBackend {
   /**
    * The cache factory instance.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
   /**
    * The private temp store service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStore;
 
@@ -54,21 +58,21 @@ class PreviewGraphQlBackend {
   /**
    * A messenger instance.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * A entity logger instance.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * A cache tag invalidator instance.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagInvalidator;
 
@@ -93,7 +97,7 @@ class PreviewGraphQlBackend {
   /**
    * Return the request manager.
    *
-   * @return \Symfony\Component\HttpFoundation\Request|null
+   * @return Request|null
    *   An instance of request manager.
    */
   public function getRequest() {
@@ -103,7 +107,7 @@ class PreviewGraphQlBackend {
   /**
    * Get service messenger.
    *
-   * @return \Drupal\Core\Messenger\MessengerInterface
+   * @return MessengerInterface
    *   An instance of messenger service.
    */
   public function getMessenger() {
@@ -114,7 +118,7 @@ class PreviewGraphQlBackend {
   /**
    * Get service logger.
    *
-   * @return \Drupal\Core\Logger\LoggerChannelInterface
+   * @return LoggerChannelInterface
    *   An instance of logger service.
    */
   public function getLogger() {
@@ -125,7 +129,7 @@ class PreviewGraphQlBackend {
   /**
    * Get service config preview graphql.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The config preview graphql settings.
    */
   public function getConfig() {
@@ -135,7 +139,7 @@ class PreviewGraphQlBackend {
   /**
    * Get service event dispatcher.
    *
-   * @return \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @return EventDispatcherInterface
    *   An instance of event dispatcher.
    */
   public function getEventDispatcher() {
@@ -145,7 +149,7 @@ class PreviewGraphQlBackend {
   /**
    * Return the cache backend factory.
    *
-   * @return \Drupal\Core\Cache\CacheBackendInterface
+   * @return CacheBackendInterface
    *   An instance of cache backend factory.
    */
   public function getCacheBackend() {
@@ -155,7 +159,7 @@ class PreviewGraphQlBackend {
   /**
    * Get service cache tag invalidator.
    *
-   * @return \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @return CacheTagsInvalidatorInterface
    *   An instance of cache tag invalidator.
    */
   public function getCacheTagInvalidator() {
@@ -167,10 +171,10 @@ class PreviewGraphQlBackend {
    *
    * @param string $temp_id
    *   The id of temp store.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object to saved.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws TempStoreException
    */
   public function saveTempStore($temp_id, FormStateInterface $form_state) {
     $temp_store = $this->privateTempStore->get('preview_graphql');
@@ -183,7 +187,7 @@ class PreviewGraphQlBackend {
    * @param string $temp_id
    *   The id of temp store.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws TempStoreException
    */
   public function deleteTempStore($temp_id) {
     $temp_store = $this->privateTempStore->get('preview_graphql');
diff --git a/src/Services/PreviewGraphQlManager.php b/src/Services/PreviewGraphQlManager.php
index 15788bd..8e96636 100644
--- a/src/Services/PreviewGraphQlManager.php
+++ b/src/Services/PreviewGraphQlManager.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\preview_graphql\Services;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Core\TempStore\TempStoreException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Component\Uuid\UuidInterface;
@@ -32,7 +36,7 @@ class PreviewGraphQlManager {
   /**
    * A entity type manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -40,7 +44,7 @@ class PreviewGraphQlManager {
   /**
    * The preview graphql backend service.
    *
-   * @var \Drupal\preview_graphql\Services\PreviewGraphQlBackend
+   * @var PreviewGraphQlBackend
    */
   protected $previewGraphQlBackend;
 
@@ -55,21 +59,21 @@ class PreviewGraphQlManager {
   /**
    * The date time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $dateTime;
 
   /**
    * The uuid service.
    *
-   * @var Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;
 
   /**
    * The http client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -107,7 +111,7 @@ class PreviewGraphQlManager {
   /**
    * Return the preview graphql backend service.
    *
-   * @return \Drupal\preview_graphql\Services\PreviewGraphQlBackend
+   * @return PreviewGraphQlBackend
    *   The preview graphql backend service.
    */
   public function getPreviewGraphQlBackend() {
@@ -117,7 +121,7 @@ class PreviewGraphQlManager {
   /**
    * Fill the form entity with the value before the preview.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current data form.
    *
    * @return bool
@@ -161,11 +165,11 @@ class PreviewGraphQlManager {
    * @param bool $load
    *   If true, load all preview graphql entity.
    *
-   * @return array|\Drupal\preview_graphql\Entity\PreviewGraphQL[]|int
+   * @return array|PreviewGraphQL[]|int
    *   The ids of preview graph ql entity or loaded entities.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getPreviewGraphQlEntityByTypeBundle($entity_type, $bundle, $load = FALSE) {
     $query = $this->entityTypeManager
@@ -209,8 +213,8 @@ class PreviewGraphQlManager {
    * @return array
    *   The merged of deriver type.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getDeriverType() {
 
@@ -233,14 +237,14 @@ class PreviewGraphQlManager {
   /**
    * Return the preview graphql entity corresponding of an drupal entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity for which we search preview graphql entity.
    *
-   * @return bool|\Drupal\preview_graphql\Entity\PreviewGraphQL
+   * @return bool|PreviewGraphQL
    *   False ifno preview graphql entity found, else the entity.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getPreviewGraphQlEntity(EntityInterface $entity) {
     if (!empty($this->currentPreviewGraphqlEntity['entity']) && !empty($this->currentPreviewGraphqlEntity['preview_entity']) && $this->currentPreviewGraphqlEntity['entity']->uuid() == $entity->uuid()) {
@@ -257,14 +261,14 @@ class PreviewGraphQlManager {
   /**
    * Build the graphql query for entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to build query.
    *
    * @return bool|string
    *   False if error, else the graphql query.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function buildQueryByEntity(EntityInterface $entity) {
     $preview_graphql_entity = $this->getPreviewGraphQlEntity($entity);
@@ -294,16 +298,16 @@ class PreviewGraphQlManager {
   /**
    * Process the entity query into graphQL engine.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to process.
    *
    * @return bool|\Drupal\graphql\GraphQL\Execution\QueryResult
    *   False if error, else the query result of graph ql.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
+   * @throws TempStoreException
    */
   public function processQueryEntity(EntityInterface $entity) {
     // Process the graphql query.
@@ -334,14 +338,14 @@ class PreviewGraphQlManager {
    *
    * @param string $key
    *   The key name config.
-   * @param \Drupal\Core\Entity\EntityInterface|null $entity
+   * @param EntityInterface|null $entity
    *   The entity doing the preview.
    *
    * @return array|mixed|string|null
    *   The value of settings.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getSettingByEntity($key, EntityInterface $entity = NULL) {
     if (empty($entity)) {
@@ -359,7 +363,7 @@ class PreviewGraphQlManager {
    *
    * Also return the default settings if not override.
    *
-   * @param \Drupal\preview_graphql\Entity\PreviewGraphQL $preview_graph_ql
+   * @param PreviewGraphQL $preview_graph_ql
    *   The preview graphql entity.
    * @param string $key
    *   The config name.
@@ -407,13 +411,13 @@ class PreviewGraphQlManager {
    *
    * @param string $cid
    *   The cache id where to save data.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The data form_state of entity form.
    * @param array $graph_ql_resut
    *   The graphql data result.
    * @param string $url_callback
    *   The url of entity form.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The old entity.
    *
    * @return array|bool
@@ -445,7 +449,7 @@ class PreviewGraphQlManager {
   /**
    * Return the preview graphql tag name for an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to build the tag name.
    *
    * @return string
@@ -480,16 +484,16 @@ class PreviewGraphQlManager {
    *
    * @param \Drupal\graphql\GraphQL\Execution\QueryResult $result
    *   The graphQL result of preview.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity doing the preview.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current data in form of preview.
    *
    * @return bool
    *   True if all has been completed.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function sendDataFront(QueryResult $result, EntityInterface $entity, FormStateInterface $form_state) {
 
@@ -517,7 +521,7 @@ class PreviewGraphQlManager {
     // Get the value to transmit (token or cache id).
     $event = new GenerateKeyEvent($carrier_callback, $uuid);
     $this->previewGraphQlBackend->getEventDispatcher()
-      ->dispatch(GenerateKeyEvent::EVENT_NAME, $event);
+      ->dispatch($event, GenerateKeyEvent::EVENT_NAME);
     $url_parameter_value = $event->getValueKey();
     $method = $this->previewGraphQlBackend->getConfig()->get('method');
     // POST data method.
@@ -576,7 +580,7 @@ class PreviewGraphQlManager {
     // Event alter response before redirect.
     $event = new RedirectEvent($carrier_callback, $response, $url_parameter_value);
     $this->previewGraphQlBackend->getEventDispatcher()
-      ->dispatch(RedirectEvent::EVENT_NAME, $event);
+      ->dispatch($event, RedirectEvent::EVENT_NAME);
     $response = $event->getResponse();
     $form_state->disableRedirect();
     $form_state->setResponse($response);
@@ -586,14 +590,14 @@ class PreviewGraphQlManager {
   /**
    * Build the front url by entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity doing the preview.
    *
    * @return bool|string
    *   False if error, elee the front url.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getUrlFrontByEntity(EntityInterface $entity) {
     // Get url front.
