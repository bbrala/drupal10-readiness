diff --git a/src/EventSubscriber/EntityEditRedirectSubscriber.php b/src/EventSubscriber/EntityEditRedirectSubscriber.php
index 35bd23f..0230761 100644
--- a/src/EventSubscriber/EntityEditRedirectSubscriber.php
+++ b/src/EventSubscriber/EntityEditRedirectSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_edit_redirect\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
@@ -11,7 +12,6 @@ use Drupal\Core\Routing\RouteProviderInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Drupal\Core\Url;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\Routing\Route;
@@ -24,21 +24,21 @@ class EntityEditRedirectSubscriber implements EventSubscriberInterface {
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -73,13 +73,13 @@ class EntityEditRedirectSubscriber implements EventSubscriberInterface {
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The module configuration.
    */
   public function __construct(RouteMatchInterface $route_match, RouteProviderInterface $route_provider, EntityTypeManagerInterface $entity_type_manager, ImmutableConfig $config) {
@@ -115,7 +115,7 @@ class EntityEditRedirectSubscriber implements EventSubscriberInterface {
   /**
    * Get entity edit path for given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity.
    *
    * @return bool|string
@@ -166,7 +166,7 @@ class EntityEditRedirectSubscriber implements EventSubscriberInterface {
   /**
    * Get canonical entity url for given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity.
    *
    * @return bool|string
@@ -198,9 +198,9 @@ class EntityEditRedirectSubscriber implements EventSubscriberInterface {
    * a query string is not presented in url we try to use referer, but only if
    * it's internal. Last option is base url of current origin.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity.
    *
    * @return string
@@ -230,10 +230,10 @@ class EntityEditRedirectSubscriber implements EventSubscriberInterface {
   /**
    * Handles the entity edit redirect.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function onRespondEntityEditRedirect(FilterResponseEvent $event) {
+  public function onRespondEntityEditRedirect(ResponseEvent $event) {
     // If no base redirect url is set then no redirect can happen.
     if (!$this->baseRedirectUrl) {
       return;
@@ -244,7 +244,7 @@ class EntityEditRedirectSubscriber implements EventSubscriberInterface {
     }
     // Get entity as it is first route parameter for entity edit routes.
     $route_parameters = $this->routeMatch->getParameters()->all();
-    /** @var \Drupal\Core\Entity\EntityInterface $entity */
+    /** @var EntityInterface $entity */
     $entity = reset($route_parameters);
     if (!$path = $this->getEntityEditPath($entity)) {
       return;
diff --git a/src/Form/ConfigForm.php b/src/Form/ConfigForm.php
index b82f9fa..db314c3 100644
--- a/src/Form/ConfigForm.php
+++ b/src/Form/ConfigForm.php
@@ -16,16 +16,16 @@ class ConfigForm extends ConfigFormBase {
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MessengerInterface $messenger) {
