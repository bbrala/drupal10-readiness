modules/contrib/onesignal/onesignal.install
modules/contrib/onesignal/onesignal.module
modules/contrib/onesignal/src/Config/ConfigManager.php
modules/contrib/onesignal/src/Config/ConfigManagerInterface.php
modules/contrib/onesignal/src/Controller/OneSignalController.php
modules/contrib/onesignal/src/Form/OneSignalConfigForm.php
modules/contrib/onesignal/src/Form/OneSignalNotificationForm.php
modules/contrib/onesignal/src/Form/OneSignalStopNotificationForm.php
modules/contrib/onesignal/src/OneSignalService.php
modules/contrib/onesignal/tests/src/Functional/OneSignalInstallTest.php

7 files with changes
====================

1) modules/contrib/onesignal/src/OneSignalService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\onesignal;

+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Entity\EntityTypeManagerInterface;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config factory object.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * The oneSignal API.
    *
-   * @var \OneSignal\OneSignal
+   * @var OneSignal
    */
   private $oneSignalApi;

@@ @@
   /**
    * Constructs a OneSignal object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Manages entity type plugin definitions.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   Defines the configuration object factory.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConfigFactory $config_factory) {
@@ @@
   /**
    * Get OneSignal API connector.
    *
-   * @return \OneSignal\OneSignal|null
+   * @return OneSignal|null
    *   Returns the API connector.
    */
   public function getApi(): ?OneSignal {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/onesignal/src/Form/OneSignalStopNotificationForm.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The OneSignal Service.
    *
-   * @var \Drupal\onesignal\OneSignalService
+   * @var OneSignalService
    */
   protected $oneSignalService;

@@ @@
   /**
    * Construct a OneSignalStopNotificationForm object.
    *
-   * @param \Drupal\onesignal\OneSignalService $oneSignalService
+   * @param OneSignalService $oneSignalService
    *   The OneSignal Service.
    */
   public function __construct(OneSignalService $oneSignalService) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/onesignal/src/Form/OneSignalNotificationForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The OneSignal Service.
    *
-   * @var \Drupal\onesignal\OneSignalService
+   * @var OneSignalService
    */
   protected $oneSignalService;

@@ @@
   /**
    * Class responsible for providing language support on language-unaware sites.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * Construct a OneSignalNotificationForm object.
    *
-   * @param \Drupal\onesignal\OneSignalService $oneSignalService
+   * @param OneSignalService $oneSignalService
    *   The OneSignal Service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The responsible for providing language support on language-unaware sites.
    */
   public function __construct(OneSignalService $oneSignalService, LanguageManagerInterface $language_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/onesignal/src/Form/OneSignalConfigForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The config manager service.
    *
-   * @var \Drupal\onesignal\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   private $configManager;

@@ @@
   /**
    * OneSignalConfigForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The factory for configuration objects.
-   * @param \Drupal\onesignal\Config\ConfigManagerInterface $configManager
+   * @param ConfigManagerInterface $configManager
    *   The config manager service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, ConfigManagerInterface $configManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/onesignal/src/Controller/OneSignalController.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The OneSignal service.
    *
-   * @var \Drupal\onesignal\OneSignalService
+   * @var OneSignalService
    */
   protected $oneSignalService;

@@ @@
   /**
    * Class responsible for providing language support on language-unaware sites.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * Construct a OneSignalController object.
    *
-   * @param \Drupal\onesignal\OneSignalService $oneSignalService
+   * @param OneSignalService $oneSignalService
    *   The OneSignal service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The responsible for providing language support on language-unaware sites.
    */
   public function __construct(OneSignalService $oneSignalService, LanguageManagerInterface $language_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/onesignal/src/Config/ConfigManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\onesignal\Config;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactory;

 /**
@@ @@
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   private $config;

@@ @@
   /**
    * ConfigManager constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $configFactory
+   * @param ConfigFactory $configFactory
    *   The config factory service.
    */
   public function __construct(ConfigFactory $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/onesignal/onesignal.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\onesignal\Config\ConfigManager;
 /**
  * @file
  * Contains onesignal.module.
@@ @@
  * Implements hook_page_attachments().
  */
 function onesignal_page_attachments(&$attachments) {
-  /** @var \Drupal\onesignal\Config\ConfigManager $config_manager */
+  /** @var ConfigManager $config_manager */
   $config_manager = \Drupal::service('onesignal.config_manager');
   if (!$config_manager->getAppId()) {
     return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

