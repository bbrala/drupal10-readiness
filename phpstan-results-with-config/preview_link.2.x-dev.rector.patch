diff --git a/preview_link.install b/preview_link.install
index 968992a..32c5dfb 100644
--- a/preview_link.install
+++ b/preview_link.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ModuleInstallerInterface;
 /**
  * @file
  * Install file.
@@ -56,7 +57,7 @@ function preview_link_update_8203(): TranslatableMarkup {
   if (\Drupal::moduleHandler()->moduleExists($module)) {
     return \t('Dynamic Entity Reference is already installed!');
   }
-  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $moduleInstaller */
+  /** @var ModuleInstallerInterface $moduleInstaller */
   $moduleInstaller = \Drupal::service('module_installer');
   $installed = $moduleInstaller->install([$module]);
   if ($installed) {
diff --git a/preview_link.module b/preview_link.module
index fdcf762..8ccc678 100644
--- a/preview_link.module
+++ b/preview_link.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityType;
 /**
  * @file
  * Module file.
@@ -22,7 +23,7 @@ use Drupal\preview_link\Routing\PreviewLinkRouteProvider;
 function preview_link_entity_type_alter(array &$entity_types): void {
   $supported_entity_types = array_filter($entity_types, [PreviewLinkUtility::class, 'isEntityTypeSupported']);
 
-  /** @var \Drupal\Core\Entity\ContentEntityType $type */
+  /** @var ContentEntityType $type */
   foreach ($supported_entity_types as $type) {
     $providers = $type->getRouteProviderClasses() ?: [];
     if (empty($providers['preview_link'])) {
diff --git a/src/Access/PreviewEnabledAccessCheck.php b/src/Access/PreviewEnabledAccessCheck.php
index 570fe63..583713d 100644
--- a/src/Access/PreviewEnabledAccessCheck.php
+++ b/src/Access/PreviewEnabledAccessCheck.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\preview_link\Access;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -20,7 +21,7 @@ class PreviewEnabledAccessCheck implements AccessInterface {
   /**
    * The module settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -53,7 +54,7 @@ class PreviewEnabledAccessCheck implements AccessInterface {
   /**
    * Check if the entity type and bundle are enabled.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    *
    * @return bool
diff --git a/src/Access/PreviewLinkAccessCheck.php b/src/Access/PreviewLinkAccessCheck.php
index caeac51..edde848 100644
--- a/src/Access/PreviewLinkAccessCheck.php
+++ b/src/Access/PreviewLinkAccessCheck.php
@@ -18,14 +18,14 @@ class PreviewLinkAccessCheck implements AccessInterface {
   /**
    * Preview link host service.
    *
-   * @var \Drupal\preview_link\PreviewLinkHostInterface
+   * @var PreviewLinkHostInterface
    */
   protected $previewLinkHost;
 
   /**
    * PreviewLinkAccessCheck constructor.
    *
-   * @param \Drupal\preview_link\PreviewLinkHostInterface $previewLinkHost
+   * @param PreviewLinkHostInterface $previewLinkHost
    *   Preview link host service.
    */
   public function __construct(PreviewLinkHostInterface $previewLinkHost) {
@@ -35,12 +35,12 @@ class PreviewLinkAccessCheck implements AccessInterface {
   /**
    * Checks access to the node add page for the node type.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    * @param string $preview_token
    *   The preview token.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   A \Drupal\Core\Access\AccessInterface value.
    */
   public function access(EntityInterface $entity = NULL, string $preview_token = NULL): AccessResultInterface {
diff --git a/src/Access/PreviewLinkCanonicalRerouteAccessCheck.php b/src/Access/PreviewLinkCanonicalRerouteAccessCheck.php
index 3746c39..c3fc369 100644
--- a/src/Access/PreviewLinkCanonicalRerouteAccessCheck.php
+++ b/src/Access/PreviewLinkCanonicalRerouteAccessCheck.php
@@ -26,32 +26,32 @@ class PreviewLinkCanonicalRerouteAccessCheck implements AccessInterface {
   /**
    * Private temp store factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStoreFactory;
 
   /**
    * Preview link host service.
    *
-   * @var \Drupal\preview_link\PreviewLinkHostInterface
+   * @var PreviewLinkHostInterface
    */
   protected $previewLinkHost;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $routeMatch;
 
   /**
    * PreviewLinkCanonicalRerouteAccessCheck constructor.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   Private temp store factory.
-   * @param \Drupal\preview_link\PreviewLinkHostInterface $previewLinkHost
+   * @param PreviewLinkHostInterface $previewLinkHost
    *   Preview link host service.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $routeMatch
+   * @param CurrentRouteMatch $routeMatch
    *   The current route match.
    */
   public function __construct(PrivateTempStoreFactory $privateTempStoreFactory, PreviewLinkHostInterface $previewLinkHost, CurrentRouteMatch $routeMatch) {
@@ -63,13 +63,13 @@ class PreviewLinkCanonicalRerouteAccessCheck implements AccessInterface {
   /**
    * Checks if an activated preview link token is associated with this entity.
    *
-   * @param \Symfony\Component\HttpFoundation\Request|null $request
+   * @param Request|null $request
    *   The request.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   A \Drupal\Core\Access\AccessInterface value.
    *
-   * @throws \Drupal\preview_link\Exception\PreviewLinkRerouteException
+   * @throws PreviewLinkRerouteException
    *   When a claimed token grants access to entity for this route match.
    */
   public function access(Request $request = NULL): AccessResultInterface {
diff --git a/src/Access/PreviewLinkSessionExistsAccessCheck.php b/src/Access/PreviewLinkSessionExistsAccessCheck.php
index c44d123..353d18b 100644
--- a/src/Access/PreviewLinkSessionExistsAccessCheck.php
+++ b/src/Access/PreviewLinkSessionExistsAccessCheck.php
@@ -18,14 +18,14 @@ class PreviewLinkSessionExistsAccessCheck implements AccessInterface {
   /**
    * The session configuration.
    *
-   * @var \Drupal\Core\Session\SessionConfigurationInterface
+   * @var SessionConfigurationInterface
    */
   protected $sessionConfiguration;
 
   /**
    * Constructs a new PreviewLinkSessionExistsAccessCheck.
    *
-   * @param \Drupal\Core\Session\SessionConfigurationInterface $sessionConfiguration
+   * @param SessionConfigurationInterface $sessionConfiguration
    *   The session configuration.
    */
   public function __construct(SessionConfigurationInterface $sessionConfiguration) {
@@ -35,10 +35,10 @@ class PreviewLinkSessionExistsAccessCheck implements AccessInterface {
   /**
    * Checks whether the user has a session.
    *
-   * @param \Symfony\Component\HttpFoundation\Request|null $request
+   * @param Request|null $request
    *   The request, if available.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   Whether the user has a session.
    */
   public function access(Request $request = NULL): AccessResultInterface {
diff --git a/src/Controller/PreviewLinkController.php b/src/Controller/PreviewLinkController.php
index 01b6a6f..f03976c 100644
--- a/src/Controller/PreviewLinkController.php
+++ b/src/Controller/PreviewLinkController.php
@@ -20,16 +20,16 @@ class PreviewLinkController extends ControllerBase {
   /**
    * Private temp store factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStoreFactory;
 
   /**
    * PreviewLinkController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   The tempstore factory.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, PrivateTempStoreFactory $privateTempStoreFactory) {
@@ -50,7 +50,7 @@ class PreviewLinkController extends ControllerBase {
   /**
    * Preview any entity with the default view mode.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   The current route match.
    * @param string $preview_token
    *   A validated Preview Link token.
@@ -74,7 +74,7 @@ class PreviewLinkController extends ControllerBase {
   /**
    * Preview page title.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   The current route match.
    *
    * @return string|null
@@ -87,7 +87,7 @@ class PreviewLinkController extends ControllerBase {
   /**
    * Resolve the entity being previewed.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The entity.
    */
   protected function resolveEntity(RouteMatchInterface $routeMatch): EntityInterface {
diff --git a/src/Controller/PreviewLinkSessionTokenController.php b/src/Controller/PreviewLinkSessionTokenController.php
index f10e335..ce0952c 100644
--- a/src/Controller/PreviewLinkSessionTokenController.php
+++ b/src/Controller/PreviewLinkSessionTokenController.php
@@ -21,18 +21,18 @@ class PreviewLinkSessionTokenController extends ControllerBase {
   /**
    * Private temp store factory.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStoreFactory;
 
   /**
    * PreviewLinkSessionTokenController constructor.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The string translation service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStoreFactory
+   * @param PrivateTempStoreFactory $privateTempStoreFactory
    *   The tempstore factory.
    */
   public function __construct(TranslationInterface $stringTranslation, MessengerInterface $messenger, PrivateTempStoreFactory $privateTempStoreFactory) {
diff --git a/src/Entity/PreviewLinkInterface.php b/src/Entity/PreviewLinkInterface.php
index 0c92278..6c9b09e 100644
--- a/src/Entity/PreviewLinkInterface.php
+++ b/src/Entity/PreviewLinkInterface.php
@@ -16,10 +16,10 @@ interface PreviewLinkInterface extends ContentEntityInterface {
   /**
    * The URL for this preview link for an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   A host entity.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The url object.
    */
   public function getUrl(EntityInterface $entity): Url;
@@ -67,7 +67,7 @@ interface PreviewLinkInterface extends ContentEntityInterface {
    *
    * Ideally preview link access is determined via PreviewLinkHost service.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   Associated entities.
    */
   public function getEntities(): array;
diff --git a/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php b/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php
index ced48f5..124adfa 100644
--- a/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php
+++ b/src/EventSubscriber/PreviewLinkRouteEventSubscriber.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\preview_link\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Routing\RedirectDestinationInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
@@ -14,7 +15,6 @@ use Drupal\Core\Url;
 use Drupal\preview_link\Exception\PreviewLinkRerouteException;
 use Psr\Log\LoggerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -27,43 +27,43 @@ class PreviewLinkRouteEventSubscriber implements EventSubscriberInterface {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Provides helpers for redirect destinations.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * PreviewLinkRouteEventSubscriber constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirectDestination
+   * @param RedirectDestinationInterface $redirectDestination
    *   Provides helpers for redirect destinations.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The string translation service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger channel.
    */
   public function __construct(MessengerInterface $messenger, RedirectDestinationInterface $redirectDestination, TranslationInterface $stringTranslation, AccountInterface $currentUser, LoggerInterface $logger) {
@@ -81,11 +81,11 @@ class PreviewLinkRouteEventSubscriber implements EventSubscriberInterface {
    * ExceptionEvent::getThrowable() since these are in Symfony 4.4, and
    * Drupal 8.9 supports Symfony 3.4.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param ExceptionEvent $event
    *   The exception event.
    */
-  public function onException(GetResponseForExceptionEvent $event): void {
-    $exception = $event->getException();
+  public function onException(ExceptionEvent $event): void {
+    $exception = $event->getThrowable();
     if ($exception instanceof PreviewLinkRerouteException) {
       $entity = $exception->getEntity();
 
diff --git a/src/Exception/PreviewLinkRerouteException.php b/src/Exception/PreviewLinkRerouteException.php
index 61c740c..f1c0c57 100644
--- a/src/Exception/PreviewLinkRerouteException.php
+++ b/src/Exception/PreviewLinkRerouteException.php
@@ -19,14 +19,14 @@ class PreviewLinkRerouteException extends \Exception implements CacheableDepende
   /**
    * The entity redirecting to preview link.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;
 
   /**
    * The preview link redirecting to.
    *
-   * @var \Drupal\preview_link\Entity\PreviewLinkInterface
+   * @var PreviewLinkInterface
    */
   protected $previewLink;
 
@@ -39,9 +39,9 @@ class PreviewLinkRerouteException extends \Exception implements CacheableDepende
    *   The Exception code.
    * @param \Throwable|null $previous
    *   The previous throwable used for the exception chaining.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity redirecting to preview link.
-   * @param \Drupal\preview_link\Entity\PreviewLinkInterface $previewLink
+   * @param PreviewLinkInterface $previewLink
    *   The preview link redirecting to.
    */
   public function __construct($message, $code, ?\Throwable $previous, EntityInterface $entity, PreviewLinkInterface $previewLink) {
@@ -53,7 +53,7 @@ class PreviewLinkRerouteException extends \Exception implements CacheableDepende
   /**
    * Get the entity redirecting to preview link.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The entity redirecting to preview link.
    */
   public function getEntity(): EntityInterface {
@@ -63,7 +63,7 @@ class PreviewLinkRerouteException extends \Exception implements CacheableDepende
   /**
    * Get the preview link redirecting to.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface
+   * @return PreviewLinkInterface
    *   The preview link redirecting to.
    */
   public function getPreviewLink(): PreviewLinkInterface {
diff --git a/src/Form/PreviewLinkForm.php b/src/Form/PreviewLinkForm.php
index 3e20736..038fac7 100644
--- a/src/Form/PreviewLinkForm.php
+++ b/src/Form/PreviewLinkForm.php
@@ -30,40 +30,40 @@ class PreviewLinkForm extends ContentEntityForm {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Calculates link expiry time.
    *
-   * @var \Drupal\preview_link\PreviewLinkExpiry
+   * @var PreviewLinkExpiry
    */
   protected $linkExpiry;
 
   /**
    * Preview link host service.
    *
-   * @var \Drupal\preview_link\PreviewLinkHostInterface
+   * @var PreviewLinkHostInterface
    */
   protected $previewLinkHost;
 
   /**
    * PreviewLinkForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\preview_link\PreviewLinkExpiry $link_expiry
+   * @param PreviewLinkExpiry $link_expiry
    *   Calculates link expiry time.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\preview_link\PreviewLinkHostInterface $previewLinkHost
+   * @param PreviewLinkHostInterface $previewLinkHost
    *   Preview link host service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info, TimeInterface $time, DateFormatterInterface $date_formatter, PreviewLinkExpiry $link_expiry, MessengerInterface $messenger, PreviewLinkHostInterface $previewLinkHost) {
@@ -117,10 +117,10 @@ class PreviewLinkForm extends ContentEntityForm {
   /**
    * Get the entity referencing this Preview Link.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   A route match.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The host entity.
    */
   public function getHostEntity(RouteMatchInterface $routeMatch): EntityInterface {
@@ -191,7 +191,7 @@ class PreviewLinkForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function regenerateToken(array &$form, FormStateInterface $form_state): void {
@@ -204,7 +204,7 @@ class PreviewLinkForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function resetLifetime(array &$form, FormStateInterface $form_state): void {
diff --git a/src/Plugin/Derivative/PreviewLinkTasks.php b/src/Plugin/Derivative/PreviewLinkTasks.php
index dd9b288..d030880 100644
--- a/src/Plugin/Derivative/PreviewLinkTasks.php
+++ b/src/Plugin/Derivative/PreviewLinkTasks.php
@@ -30,7 +30,7 @@ class PreviewLinkTasks extends DeriverBase implements ContainerDeriverInterface
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -39,9 +39,9 @@ class PreviewLinkTasks extends DeriverBase implements ContainerDeriverInterface
    *
    * @param string $base_plugin_id
    *   The base plugin ID.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
    */
   public function __construct(string $base_plugin_id, EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
@@ -85,7 +85,7 @@ class PreviewLinkTasks extends DeriverBase implements ContainerDeriverInterface
   /**
    * Check if the entity type is supported.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   The entity type we're checking.
    *
    * @return bool
diff --git a/src/Plugin/Field/FieldWidget/PreviewLinkEntitiesWidget.php b/src/Plugin/Field/FieldWidget/PreviewLinkEntitiesWidget.php
index ed5aee8..ad68898 100644
--- a/src/Plugin/Field/FieldWidget/PreviewLinkEntitiesWidget.php
+++ b/src/Plugin/Field/FieldWidget/PreviewLinkEntitiesWidget.php
@@ -34,7 +34,7 @@ final class PreviewLinkEntitiesWidget extends DynamicEntityReferenceWidget {
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
diff --git a/src/PreviewLinkCacheContext.php b/src/PreviewLinkCacheContext.php
index b639bfb..154f88c 100644
--- a/src/PreviewLinkCacheContext.php
+++ b/src/PreviewLinkCacheContext.php
@@ -16,14 +16,14 @@ class PreviewLinkCacheContext implements CacheContextInterface {
   /**
    * Route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Constructs a new PreviewLinkCacheContext.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   Route match.
    */
   public function __construct(RouteMatchInterface $routeMatch) {
diff --git a/src/PreviewLinkExpiry.php b/src/PreviewLinkExpiry.php
index e79b26d..99d0fd9 100644
--- a/src/PreviewLinkExpiry.php
+++ b/src/PreviewLinkExpiry.php
@@ -21,14 +21,14 @@ class PreviewLinkExpiry {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * LinkExpiry constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(StateInterface $state) {
diff --git a/src/PreviewLinkHooks.php b/src/PreviewLinkHooks.php
index 97b71e8..9f157ce 100644
--- a/src/PreviewLinkHooks.php
+++ b/src/PreviewLinkHooks.php
@@ -16,32 +16,32 @@ class PreviewLinkHooks implements ContainerInjectionInterface {
   /**
    * Preview link storage.
    *
-   * @var \Drupal\preview_link\PreviewLinkStorageInterface
+   * @var PreviewLinkStorageInterface
    */
   protected $previewLinkStorage;
 
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Calculates link expiry time.
    *
-   * @var \Drupal\preview_link\PreviewLinkExpiry
+   * @var PreviewLinkExpiry
    */
   protected $linkExpiry;
 
   /**
    * PreviewLinkHooks constructor.
    *
-   * @param \Drupal\preview_link\PreviewLinkStorageInterface $previewLinkStorage
+   * @param PreviewLinkStorageInterface $previewLinkStorage
    *   Preview link storage.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
-   * @param \Drupal\preview_link\PreviewLinkExpiry $linkExpiry
+   * @param PreviewLinkExpiry $linkExpiry
    *   Calculates link expiry time.
    */
   public function __construct(PreviewLinkStorageInterface $previewLinkStorage, TimeInterface $time, PreviewLinkExpiry $linkExpiry) {
diff --git a/src/PreviewLinkHost.php b/src/PreviewLinkHost.php
index d41ab36..b38a7de 100644
--- a/src/PreviewLinkHost.php
+++ b/src/PreviewLinkHost.php
@@ -15,14 +15,14 @@ class PreviewLinkHost implements PreviewLinkHostInterface {
   /**
    * Preview link storage.
    *
-   * @var \Drupal\preview_link\PreviewLinkStorageInterface
+   * @var PreviewLinkStorageInterface
    */
   protected $previewLinkStorage;
 
   /**
    * PreviewLinkHost constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
diff --git a/src/PreviewLinkHostInterface.php b/src/PreviewLinkHostInterface.php
index c1f4f8e..649fc66 100644
--- a/src/PreviewLinkHostInterface.php
+++ b/src/PreviewLinkHostInterface.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\preview_link;
 
+use Drupal\preview_link\Entity\PreviewLinkInterface;
 use Drupal\Core\Entity\EntityInterface;
 
 /**
@@ -14,10 +15,10 @@ interface PreviewLinkHostInterface {
   /**
    * Get preview links for an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   An entity.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface[]
+   * @return PreviewLinkInterface[]
    *   Preview links associated with an entity.
    */
   public function getPreviewLinks(EntityInterface $entity): array;
@@ -25,7 +26,7 @@ interface PreviewLinkHostInterface {
   /**
    * Determines if a token unlocks an entity entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   An entity.
    * @param string[] $tokens
    *   An array of Preview Link tokens.
@@ -38,7 +39,7 @@ interface PreviewLinkHostInterface {
   /**
    * Determines if an entity has any active preview links.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   An entity.
    *
    * @return bool
diff --git a/src/PreviewLinkStorage.php b/src/PreviewLinkStorage.php
index b200e40..7ae5528 100644
--- a/src/PreviewLinkStorage.php
+++ b/src/PreviewLinkStorage.php
@@ -27,32 +27,32 @@ class PreviewLinkStorage extends SqlContentEntityStorage implements PreviewLinkS
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new PreviewLinkStorage.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection to be used.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend to be used.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Cache\MemoryCache\MemoryCacheInterface|null $memory_cache
+   * @param MemoryCacheInterface|null $memory_cache
    *   The memory cache backend to be used.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   The UUID service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
    */
   public function __construct(EntityTypeInterface $entity_type, Connection $database, EntityFieldManagerInterface $entity_field_manager, CacheBackendInterface $cache, LanguageManagerInterface $language_manager, MemoryCacheInterface $memory_cache, EntityTypeBundleInfoInterface $entity_type_bundle_info, EntityTypeManagerInterface $entity_type_manager, UuidInterface $uuid, TimeInterface $time) {
diff --git a/src/PreviewLinkUtility.php b/src/PreviewLinkUtility.php
index 9f15660..141ec64 100644
--- a/src/PreviewLinkUtility.php
+++ b/src/PreviewLinkUtility.php
@@ -14,7 +14,7 @@ class PreviewLinkUtility {
   /**
    * Determines if an entity type is supported by Preview Link.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   An entity type.
    *
    * @return bool
diff --git a/src/Routing/PreviewLinkRouteProvider.php b/src/Routing/PreviewLinkRouteProvider.php
index 3c6c8b6..be50528 100644
--- a/src/Routing/PreviewLinkRouteProvider.php
+++ b/src/Routing/PreviewLinkRouteProvider.php
@@ -36,10 +36,10 @@ class PreviewLinkRouteProvider implements EntityRouteProviderInterface {
   /**
    * Gets the route for generating and viewing preview links for this entity.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getGeneratePreviewLinkRoute(EntityTypeInterface $entity_type): ?Route {
@@ -64,10 +64,10 @@ class PreviewLinkRouteProvider implements EntityRouteProviderInterface {
   /**
    * Gets the preview link route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getPreviewLinkRoute(EntityTypeInterface $entity_type): ?Route {
diff --git a/src/Routing/PreviewLinkRoutes.php b/src/Routing/PreviewLinkRoutes.php
index a47c09f..e93c0eb 100644
--- a/src/Routing/PreviewLinkRoutes.php
+++ b/src/Routing/PreviewLinkRoutes.php
@@ -20,14 +20,14 @@ class PreviewLinkRoutes extends RouteSubscriberBase {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * PreviewLinkRoutes constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
@@ -70,12 +70,12 @@ class PreviewLinkRoutes extends RouteSubscriberBase {
   /**
    * Determines the route for a path.
    *
-   * @param \Symfony\Component\Routing\RouteCollection $collection
+   * @param RouteCollection $collection
    *   The route collection.
    * @param string $path
    *   A route path.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The route, or NULL if no route found with this path in the collection.
    */
   protected function getRouteForPath(RouteCollection $collection, string $path): ?Route {
diff --git a/tests/modules/preview_link_test/preview_link_test.module b/tests/modules/preview_link_test/preview_link_test.module
index 2b06c27..ca0f058 100644
--- a/tests/modules/preview_link_test/preview_link_test.module
+++ b/tests/modules/preview_link_test/preview_link_test.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityTypeInterface;
 /**
  * @file
  * Hooks for Preview Link Test.
@@ -11,7 +12,7 @@ use Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider;
  * Implements hook_entity_type_alter().
  */
 function preview_link_test_entity_type_alter(array &$entity_types): void {
-  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
+  /** @var EntityTypeInterface[] $entity_types */
   // Remove this key since it breaks the update path test. Can be removed after
   // https://www.drupal.org/project/drupal/issues/3158184.
   if (isset($entity_types['entity_test_no_bundle'])) {
diff --git a/tests/modules/preview_link_test/src/StateLogger.php b/tests/modules/preview_link_test/src/StateLogger.php
index 9e78af1..f67d285 100644
--- a/tests/modules/preview_link_test/src/StateLogger.php
+++ b/tests/modules/preview_link_test/src/StateLogger.php
@@ -19,7 +19,7 @@ final class StateLogger implements LoggerInterface {
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
diff --git a/tests/modules/preview_link_test_time/src/TimeMachine.php b/tests/modules/preview_link_test_time/src/TimeMachine.php
index f9be435..4f63fd7 100644
--- a/tests/modules/preview_link_test_time/src/TimeMachine.php
+++ b/tests/modules/preview_link_test_time/src/TimeMachine.php
@@ -15,14 +15,14 @@ class TimeMachine implements TimeInterface {
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * TimeMachine constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State.
    */
   public function __construct(StateInterface $state) {
diff --git a/tests/src/Functional/PreviewLinkAccessTest.php b/tests/src/Functional/PreviewLinkAccessTest.php
index a56cd6d..abc3113 100644
--- a/tests/src/Functional/PreviewLinkAccessTest.php
+++ b/tests/src/Functional/PreviewLinkAccessTest.php
@@ -160,10 +160,10 @@ class PreviewLinkAccessTest extends BrowserTestBase {
   /**
    * Get a saved preview link for an entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   A content entity.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface|null
+   * @return PreviewLinkInterface|null
    *   The preview link, or null if no preview link generated.
    */
   protected function getNewPreviewLinkForEntity(ContentEntityInterface $entity): ?PreviewLinkInterface {
diff --git a/tests/src/Functional/PreviewLinkForwardRevisionTest.php b/tests/src/Functional/PreviewLinkForwardRevisionTest.php
index 4a30322..5f1490e 100644
--- a/tests/src/Functional/PreviewLinkForwardRevisionTest.php
+++ b/tests/src/Functional/PreviewLinkForwardRevisionTest.php
@@ -43,7 +43,7 @@ class PreviewLinkForwardRevisionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->createEditorialWorkflow();
     $this->createContentType(['type' => 'page']);
diff --git a/tests/src/Functional/PreviewLinkNodeTest.php b/tests/src/Functional/PreviewLinkNodeTest.php
index 246adb3..0bdd798 100644
--- a/tests/src/Functional/PreviewLinkNodeTest.php
+++ b/tests/src/Functional/PreviewLinkNodeTest.php
@@ -56,7 +56,7 @@ class PreviewLinkNodeTest extends BrowserTestBase {
     $edit = [
       'entities[1][target_id]' => 'node2 (' . $node2->id() . ')',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     // This would fail if unpublished wasnt referencable:
     $this->assertSession()->pageTextContains('Preview Link saved.');
   }
diff --git a/tests/src/Functional/PreviewLinkSessionTokenTest.php b/tests/src/Functional/PreviewLinkSessionTokenTest.php
index e456a22..1390613 100644
--- a/tests/src/Functional/PreviewLinkSessionTokenTest.php
+++ b/tests/src/Functional/PreviewLinkSessionTokenTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\preview_link\Functional;
 
+use Drupal\preview_link_test\StateLogger;
 use Drupal\Core\Logger\LogMessageParser;
 use Drupal\Core\Url;
 use Drupal\entity_test\Entity\EntityTestMulRevPub;
@@ -43,14 +44,14 @@ class PreviewLinkSessionTokenTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $timeMachine = \Drupal::service('datetime.time');
     assert($timeMachine instanceof TimeMachine);
     $currentTime = new \DateTime('14 May 2014 14:00:00');
     $timeMachine->setTime($currentTime);
 
-    /** @var \Drupal\preview_link_test\StateLogger $logger */
+    /** @var StateLogger $logger */
     $logger = \Drupal::service('logger.preview_link_test');
     $logger->cleanLogs();
   }
@@ -110,7 +111,7 @@ class PreviewLinkSessionTokenTest extends BrowserTestBase {
     $this->drupalGet($entity2->toUrl());
     $this->assertSession()->statusCodeEquals(403);
 
-    /** @var \Drupal\preview_link_test\StateLogger $logger */
+    /** @var StateLogger $logger */
     $logger = \Drupal::service('logger.preview_link_test');
     $messages = array_map(function ($log): string {
       [1 => $message, 2 => $messagePlaceholders, 3 => $context] = $log;
