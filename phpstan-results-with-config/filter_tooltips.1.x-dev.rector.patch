diff --git a/filter_tooltips.module b/filter_tooltips.module
index 7efa298..fec8694 100644
--- a/filter_tooltips.module
+++ b/filter_tooltips.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\filter_tooltips\Plugin\Filter\FilterTooltips;
+use Drupal\filter\Entity\FilterFormat;
 /**
  * @file
  * Filter Tooltips module functions.
@@ -72,7 +74,7 @@ function filter_tooltips_taxonomy_term_delete(EntityInterface $term) {
 /**
  * Clear the cache.
  *
- * @param \Drupal\Core\Entity\EntityInterface $term
+ * @param EntityInterface $term
  *   The term object.
  */
 function filter_tooltips_clear_cache(EntityInterface $term) {
@@ -93,7 +95,7 @@ function filter_tooltips_clear_cache(EntityInterface $term) {
 /**
  * Check if the cache should be cleared.
  *
- * @param \Drupal\Core\Entity\EntityInterface $term
+ * @param EntityInterface $term
  *   The term object.
  *
  * @return bool
@@ -110,7 +112,7 @@ function filter_tooltips_should_clear_cache(EntityInterface $term) {
 /**
  * Get the vocabulary defined by the term's filter configuration.
  *
- * @param \Drupal\Core\Entity\EntityInterface $term
+ * @param EntityInterface $term
  *   The term object.
  *
  * @return string
@@ -128,7 +130,7 @@ function filter_tooltips_get_tooltip_vocabulary(EntityInterface $term) {
 /**
  * Get the filter configuration defined by the term.
  *
- * @param \Drupal\Core\Entity\EntityInterface $term
+ * @param EntityInterface $term
  *   The term object.
  *
  * @return array
@@ -146,10 +148,10 @@ function filter_tooltips_get_filter_configuration(EntityInterface $term) {
 /**
  * Get the filter for the current term.
  *
- * @param \Drupal\Core\Entity\EntityInterface $term
+ * @param EntityInterface $term
  *   The term object.
  *
- * @return \Drupal\filter_tooltips\Plugin\Filter\FilterTooltips
+ * @return FilterTooltips
  *   The filter object.
  */
 function filter_tooltips_get_filter(EntityInterface $term) {
@@ -225,7 +227,7 @@ function filter_tooltips_filter_format_edit_form_validate($form, FormStateInterf
 
   if ($filter_html_enabled && $allowed_html = $form_state->getValue($allowed_html_path)) {
 
-    /** @var \Drupal\filter\Entity\FilterFormat $filter_format */
+    /** @var FilterFormat $filter_format */
     $filter_format = $form_state->getFormObject()->getEntity();
 
     $filter_html = clone $filter_format->filters()->get('filter_html');
diff --git a/src/Controller/AutocompleteController.php b/src/Controller/AutocompleteController.php
index 4abfd9d..4118194 100644
--- a/src/Controller/AutocompleteController.php
+++ b/src/Controller/AutocompleteController.php
@@ -17,23 +17,23 @@ class AutocompleteController implements ContainerInjectionInterface {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The entity_type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a AutocompleteController object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity_type manager service.
    */
   public function __construct(Connection $database, EntityTypeManagerInterface $entity_type_manager) {
@@ -57,12 +57,12 @@ class AutocompleteController implements ContainerInjectionInterface {
    * Like other autocomplete functions, this function inspects the 'q' query
    * parameter for the string to use to search for suggestions.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    * @param string $filter_id
    *   The filter id.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing the autocomplete suggestions.
    */
   public function autocomplete(Request $request, $filter_id) {
diff --git a/src/Element/FilterTooltips.php b/src/Element/FilterTooltips.php
index 651c478..c76c897 100644
--- a/src/Element/FilterTooltips.php
+++ b/src/Element/FilterTooltips.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\filter_tooltips\Element;
 
+use Drupal\Core\Access\AccessManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\BubbleableMetadata;
 use Drupal\Core\Render\Element;
@@ -60,7 +61,7 @@ class FilterTooltips extends FormElement {
     if (!empty($element['#autocomplete_route_name'])) {
       $parameters = isset($element['#autocomplete_route_parameters']) ? $element['#autocomplete_route_parameters'] : [];
       $url = Url::fromRoute($element['#autocomplete_route_name'], $parameters)->toString(TRUE);
-      /** @var \Drupal\Core\Access\AccessManagerInterface $access_manager */
+      /** @var AccessManagerInterface $access_manager */
       $access_manager = \Drupal::service('access_manager');
       $access = $access_manager->checkNamedRoute($element['#autocomplete_route_name'], $parameters, \Drupal::currentUser(), TRUE);
     }
diff --git a/src/Form/FilterTooltipsEditorDialog.php b/src/Form/FilterTooltipsEditorDialog.php
index 037dcbe..36ba930 100644
--- a/src/Form/FilterTooltipsEditorDialog.php
+++ b/src/Form/FilterTooltipsEditorDialog.php
@@ -20,14 +20,14 @@ class FilterTooltipsEditorDialog extends FormBase {
   /**
    * The editor storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $editorStorage;
 
   /**
    * Constructs a form object for filter_tooltips dialog.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $editor_storage
+   * @param EntityStorageInterface $editor_storage
    *   The editor storage service.
    */
   public function __construct(EntityStorageInterface $editor_storage) {
@@ -130,7 +130,7 @@ class FilterTooltipsEditorDialog extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $input
    *   An array with the attribute values from the editor.
diff --git a/src/Plugin/CKEditorPlugin/CKEditorTooltips.php b/src/Plugin/CKEditorPlugin/CKEditorTooltips.php
index 7a462c6..6db4513 100644
--- a/src/Plugin/CKEditorPlugin/CKEditorTooltips.php
+++ b/src/Plugin/CKEditorPlugin/CKEditorTooltips.php
@@ -20,7 +20,7 @@ class CKEditorTooltips extends CKEditorPluginBase {
    * {@inheritdoc}
    */
   public function getFile() {
-    if ($library_path = drupal_get_path('module', 'filter_tooltips')) {
+    if ($library_path = \Drupal::service('extension.list.module')->getPath('filter_tooltips')) {
       return $library_path . '/js/plugin.js';
     }
   }
@@ -32,7 +32,7 @@ class CKEditorTooltips extends CKEditorPluginBase {
     return [
       'filter_tooltips' => [
         'label' => t('Filter Tooltips'),
-        'image' => drupal_get_path('module', 'filter_tooltips') . '/js/icons/filter_tooltips.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('filter_tooltips') . '/js/icons/filter_tooltips.png',
       ],
     ];
   }
diff --git a/src/Plugin/Filter/FilterTooltips.php b/src/Plugin/Filter/FilterTooltips.php
index 7379f17..88565d5 100644
--- a/src/Plugin/Filter/FilterTooltips.php
+++ b/src/Plugin/Filter/FilterTooltips.php
@@ -34,14 +34,14 @@ class FilterTooltips extends FilterBase implements ContainerFactoryPluginInterfa
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
@@ -72,9 +72,9 @@ class FilterTooltips extends FilterBase implements ContainerFactoryPluginInterfa
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager to pull out the entity data.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
    */
   public function __construct(
