diff --git a/src/CshsOptionsFromHelper.php b/src/CshsOptionsFromHelper.php
index fe8bc19..46fbc41 100644
--- a/src/CshsOptionsFromHelper.php
+++ b/src/CshsOptionsFromHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cshs;
 
+use Drupal\taxonomy\VocabularyInterface;
 use Drupal\Core\Entity\FieldableEntityStorageInterface;
 use Drupal\Core\Field\WidgetBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -88,7 +89,7 @@ trait CshsOptionsFromHelper {
   /**
    * Returns the taxonomy vocabularies to work with.
    *
-   * @return \Drupal\taxonomy\VocabularyInterface[]
+   * @return VocabularyInterface[]
    *   The taxonomy vocabularies.
    */
   public function getVocabularies(): array {
@@ -147,7 +148,7 @@ trait CshsOptionsFromHelper {
    *
    * @param array $form
    *   The form where the settings form is being included in.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -254,7 +255,7 @@ trait CshsOptionsFromHelper {
    *
    * @param array $element
    *   The element's form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validateSettingsForm(array &$element, FormStateInterface $form_state): void {
@@ -319,7 +320,7 @@ trait CshsOptionsFromHelper {
    * @param int|null $max_depth
    *   The number of levels of the tree to return.
    *
-   * @return \Drupal\cshs\Component\CshsOption[]
+   * @return CshsOption[]
    *   Widget options.
    */
   private function getOptions(int $parent = 0, int $max_depth = NULL): array {
diff --git a/src/Element/CshsElement.php b/src/Element/CshsElement.php
index 2232b24..76913c7 100644
--- a/src/Element/CshsElement.php
+++ b/src/Element/CshsElement.php
@@ -153,7 +153,7 @@ class CshsElement extends Select {
   /**
    * Returns the "taxonomy_term" entities storage.
    *
-   * @return \Drupal\taxonomy\TermStorageInterface
+   * @return TermStorageInterface
    *   The storage.
    */
   protected static function getTermStorage(): TermStorageInterface {
diff --git a/src/Plugin/Field/FieldFormatter/CshsFlexibleHierarchyFormatter.php b/src/Plugin/Field/FieldFormatter/CshsFlexibleHierarchyFormatter.php
index 8f3ae64..e07b007 100644
--- a/src/Plugin/Field/FieldFormatter/CshsFlexibleHierarchyFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/CshsFlexibleHierarchyFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cshs\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Utility\Token;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -23,7 +24,7 @@ class CshsFlexibleHierarchyFormatter extends CshsFormatterBase {
   /**
    * An instance of the `token` service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
diff --git a/src/Plugin/Field/FieldFormatter/CshsFormatterBase.php b/src/Plugin/Field/FieldFormatter/CshsFormatterBase.php
index 37463ee..d84a3cf 100644
--- a/src/Plugin/Field/FieldFormatter/CshsFormatterBase.php
+++ b/src/Plugin/Field/FieldFormatter/CshsFormatterBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cshs\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Field\Plugin\Field\FieldFormatter\EntityReferenceFormatterBase;
 use Drupal\cshs\IsApplicable;
@@ -68,12 +69,12 @@ abstract class CshsFormatterBase extends EntityReferenceFormatterBase {
   /**
    * Returns the list of terms labels.
    *
-   * @param \Drupal\taxonomy\TermInterface[] $list
+   * @param TermInterface[] $list
    *   The list of terms.
    * @param bool $linked
    *   The state of whether to create a linked label.
    *
-   * @return string[]|\Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return string[]|TranslatableMarkup[]
    *   The list of labels.
    */
   protected function getTermsLabels(array $list, bool $linked): array {
@@ -91,13 +92,13 @@ abstract class CshsFormatterBase extends EntityReferenceFormatterBase {
   /**
    * Returns an array of all parents for a given term.
    *
-   * @param \Drupal\taxonomy\TermInterface $term
+   * @param TermInterface $term
    *   The taxonomy term.
    * @param bool $start_from_root
    *   The state of whether to return the hierarchy starting from the root
    *   or vice versa.
    *
-   * @return \Drupal\taxonomy\TermInterface[]
+   * @return TermInterface[]
    *   The parent terms of a given term.
    */
   protected function getTermParents(TermInterface $term, bool $start_from_root = TRUE): array {
diff --git a/src/TaxonomyStorages.php b/src/TaxonomyStorages.php
index 001d835..663c421 100644
--- a/src/TaxonomyStorages.php
+++ b/src/TaxonomyStorages.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\cshs;
 
+use Drupal\Core\Entity\EntityRepositoryInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Language\LanguageInterface;
@@ -16,14 +18,14 @@ trait TaxonomyStorages {
   /**
    * An instance of the "entity.repository" service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * An instance of the "entity_type.manager" service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -37,7 +39,7 @@ trait TaxonomyStorages {
   /**
    * Returns storage of the "taxonomy_term" entities.
    *
-   * @return \Drupal\taxonomy\TermStorageInterface
+   * @return TermStorageInterface
    *   The storage of the "taxonomy_term" entities.
    */
   protected function getTermStorage(): TermStorageInterface {
@@ -47,7 +49,7 @@ trait TaxonomyStorages {
   /**
    * Returns storage of the "taxonomy_vocabulary" entities.
    *
-   * @return \Drupal\taxonomy\VocabularyStorageInterface
+   * @return VocabularyStorageInterface
    *   The storage of the "taxonomy_vocabulary" entities.
    */
   protected function getVocabularyStorage(): VocabularyStorageInterface {
@@ -57,10 +59,10 @@ trait TaxonomyStorages {
   /**
    * Returns the entity translation to be used in the given context.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity whose translation will be returned.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The translated entity.
    */
   protected function getTranslationFromContext(EntityInterface $entity): EntityInterface {
@@ -95,7 +97,7 @@ trait TaxonomyStorages {
    * @param string $entity_type
    *   The entity type ID.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   The entity storage.
    */
   private function getStorage($entity_type): EntityStorageInterface {
diff --git a/tests/src/Unit/CshsGroupByRootFormatterUnitTest.php b/tests/src/Unit/CshsGroupByRootFormatterUnitTest.php
index 08f9bf9..a81b40c 100644
--- a/tests/src/Unit/CshsGroupByRootFormatterUnitTest.php
+++ b/tests/src/Unit/CshsGroupByRootFormatterUnitTest.php
@@ -351,7 +351,7 @@ class CshsGroupByRootFormatterUnitTest extends UnitTestCase {
    * @param string $name
    *   The term name.
    *
-   * @return \Drupal\Core\GeneratedLink
+   * @return GeneratedLink
    *   The mocked link.
    */
   protected static function getGeneratedLink(string $name): GeneratedLink {
