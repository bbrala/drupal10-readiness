diff --git a/src/Controller/ImageStylesMappingController.php b/src/Controller/ImageStylesMappingController.php
index 02c0e9b..e0f2911 100644
--- a/src/Controller/ImageStylesMappingController.php
+++ b/src/Controller/ImageStylesMappingController.php
@@ -20,42 +20,42 @@ class ImageStylesMappingController extends ControllerBase {
   /**
    * Fields report title.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @var TranslatableMarkup
    */
   protected TranslatableMarkup $fieldsReportTitle;
 
   /**
    * Fields report empty value.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @var TranslatableMarkup
    */
   protected TranslatableMarkup $fieldsReportEmptyValue;
 
   /**
    * Views fields report title.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @var TranslatableMarkup
    */
   protected TranslatableMarkup $viewsFieldsReportTitle;
 
   /**
    * Views fields report empty value.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @var TranslatableMarkup
    */
   protected TranslatableMarkup $viewsFieldsReportEmptyValue;
 
   /**
    * Image styles mapping service Interface.
    *
-   * @var \Drupal\image_styles_mapping\Service\ImageStylesMappingServiceInterface
+   * @var ImageStylesMappingServiceInterface
    */
   protected ImageStylesMappingServiceInterface $imageStylesMappingService;
 
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected Request $currentRequest;
 
@@ -72,9 +72,9 @@ class ImageStylesMappingController extends ControllerBase {
   /**
    * Constructs a new ImageStylesMappingController.
    *
-   * @param \Drupal\image_styles_mapping\Service\ImageStylesMappingServiceInterface $image_styles_mapping_service
+   * @param ImageStylesMappingServiceInterface $image_styles_mapping_service
    *   An instance of imageStylesMappingService.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
    */
   public function __construct(
diff --git a/src/Plugin/ImageStylesMapping/Image.php b/src/Plugin/ImageStylesMapping/Image.php
index 189ae1d..55a7eff 100644
--- a/src/Plugin/ImageStylesMapping/Image.php
+++ b/src/Plugin/ImageStylesMapping/Image.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\image_styles_mapping\Plugin\ImageStylesMapping;
 
+use Drupal\image\Entity\ImageStyle;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Link;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -72,7 +74,7 @@ class Image extends ImageStylesMappingPluginBase implements ContainerFactoryPlug
     $image_styles = &\drupal_static(__FUNCTION__);
 
     if (!isset($image_styles)) {
-      /** @var \Drupal\image\Entity\ImageStyle[] $image_styles_entities */
+      /** @var ImageStyle[] $image_styles_entities */
       $image_styles_entities = $this->entityTypeManager->getStorage('image_style')->loadMultiple();
 
       $image_styles = [];
@@ -95,7 +97,7 @@ class Image extends ImageStylesMappingPluginBase implements ContainerFactoryPlug
    * @param string $image_style_name
    *   The name of the image style.
    *
-   * @return string|\Drupal\Component\Render\MarkupInterface
+   * @return string|MarkupInterface
    *   A link to the image style if user has access.
    *   The image style's label otherwise.
    */
diff --git a/src/Plugin/ImageStylesMapping/ResponsiveImageStyles.php b/src/Plugin/ImageStylesMapping/ResponsiveImageStyles.php
index 2a56f91..b969f94 100644
--- a/src/Plugin/ImageStylesMapping/ResponsiveImageStyles.php
+++ b/src/Plugin/ImageStylesMapping/ResponsiveImageStyles.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\image_styles_mapping\Plugin\ImageStylesMapping;
 
+use Drupal\responsive_image\Entity\ResponsiveImageStyle;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Link;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -72,7 +74,7 @@ class ResponsiveImageStyles extends ImageStylesMappingPluginBase implements Cont
     $responsive_image_styles = &\drupal_static(__FUNCTION__);
 
     if (!isset($responsive_image_styles)) {
-      /** @var \Drupal\responsive_image\Entity\ResponsiveImageStyle[] $responsive_image_style_entities */
+      /** @var ResponsiveImageStyle[] $responsive_image_style_entities */
       $responsive_image_style_entities = $this->entityTypeManager->getStorage('responsive_image_style')->loadMultiple();
 
       $responsive_image_styles = [];
@@ -99,7 +101,7 @@ class ResponsiveImageStyles extends ImageStylesMappingPluginBase implements Cont
    * @param string $responsive_image_style_id
    *   The ID of the responsive image style.
    *
-   * @return string|\Drupal\Component\Render\MarkupInterface
+   * @return string|MarkupInterface
    *   A link to the responsive image style if user has access.
    *   The responsive image style's label otherwise.
    */
diff --git a/src/Plugin/ImageStylesMappingPluginBase.php b/src/Plugin/ImageStylesMappingPluginBase.php
index 52b4721..5958758 100644
--- a/src/Plugin/ImageStylesMappingPluginBase.php
+++ b/src/Plugin/ImageStylesMappingPluginBase.php
@@ -21,14 +21,14 @@ abstract class ImageStylesMappingPluginBase extends PluginBase implements Contai
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
 
   /**
    * Renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;
 
diff --git a/src/Plugin/ImageStylesMappingPluginInterface.php b/src/Plugin/ImageStylesMappingPluginInterface.php
index f39a041..cdc5db1 100644
--- a/src/Plugin/ImageStylesMappingPluginInterface.php
+++ b/src/Plugin/ImageStylesMappingPluginInterface.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\image_styles_mapping\Plugin;
 
+use Drupal\Component\Render\MarkupInterface;
+use Drupal\Component\Render\FormattableMarkup;
 /**
  * Interface for a plugin that add columns on image styles mapping reports.
  *
@@ -22,7 +24,7 @@ interface ImageStylesMappingPluginInterface {
   /**
    * Get the header for the column added by the plugin.
    *
-   * @return string|\Drupal\Component\Render\MarkupInterface
+   * @return string|MarkupInterface
    *   The header for the column added by the plugin.
    */
   public function getHeader();
@@ -33,7 +35,7 @@ interface ImageStylesMappingPluginInterface {
    * @param array $field_settings
    *   The field display of the row.
    *
-   * @return \Drupal\Component\Render\FormattableMarkup
+   * @return FormattableMarkup
    *   The row content for the plugin for this field.
    */
   public function getRowData(array $field_settings);
diff --git a/src/Plugin/ImageStylesMappingPluginManager.php b/src/Plugin/ImageStylesMappingPluginManager.php
index 19e8e6b..93d2221 100644
--- a/src/Plugin/ImageStylesMappingPluginManager.php
+++ b/src/Plugin/ImageStylesMappingPluginManager.php
@@ -27,7 +27,7 @@ class ImageStylesMappingPluginManager extends DefaultPluginManager {
   /**
    * Get the image styles mapping plugin which dependencies are enabled.
    *
-   * @return \Drupal\image_styles_mapping\Plugin\ImageStylesMappingPluginInterface[]
+   * @return ImageStylesMappingPluginInterface[]
    *   The active plugins list.
    */
   public function getActiveImageStylesMappingPlugins(): array {
@@ -38,7 +38,7 @@ class ImageStylesMappingPluginManager extends DefaultPluginManager {
     foreach (\array_keys($image_styles_mapping_plugins_definitions) as $plugin_id) {
       $dependencies = TRUE;
       // Instantiate the plugin.
-      /** @var \Drupal\image_styles_mapping\Plugin\ImageStylesMappingPluginInterface $plugin */
+      /** @var ImageStylesMappingPluginInterface $plugin */
       $plugin = $this->createInstance($plugin_id, []);
       // Check dependencies.
       foreach ($plugin->getDependencies() as $module_name) {
diff --git a/src/Service/ImageStylesMappingService.php b/src/Service/ImageStylesMappingService.php
index f4a8a8a..6e4e832 100644
--- a/src/Service/ImageStylesMappingService.php
+++ b/src/Service/ImageStylesMappingService.php
@@ -4,6 +4,10 @@ declare(strict_types = 1);
 
 namespace Drupal\image_styles_mapping\Service;
 
+use Drupal\Core\Entity\Entity\EntityViewDisplay;
+use Drupal\views\Entity\View;
+use Drupal\field\Entity\FieldConfig;
+use Drupal\Core\GeneratedLink;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -22,21 +26,21 @@ class ImageStylesMappingService implements ImageStylesMappingServiceInterface {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected ModuleHandlerInterface $moduleHandler;
 
   /**
    * The plugin manager for our text extractor.
    *
-   * @var \Drupal\image_styles_mapping\Plugin\ImageStylesMappingPluginManager
+   * @var ImageStylesMappingPluginManager
    */
   protected ImageStylesMappingPluginManager $imageStylesMappingPluginManager;
 
   /**
    * Drupal\Core\Entity\EntityTypeManager definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
 
@@ -50,13 +54,13 @@ class ImageStylesMappingService implements ImageStylesMappingServiceInterface {
   /**
    * Constructs an ImageStylesMappingService object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\image_styles_mapping\Plugin\ImageStylesMappingPluginManager $image_styles_mapping_plugin_manager
+   * @param ImageStylesMappingPluginManager $image_styles_mapping_plugin_manager
    *   The image styles mapping plugin manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity bundle info service.
    */
   public function __construct(
@@ -91,7 +95,7 @@ class ImageStylesMappingService implements ImageStylesMappingServiceInterface {
       $header[] = $plugin->getHeader();
     }
 
-    /** @var \Drupal\Core\Entity\Entity\EntityViewDisplay[] $entity_view_display_entities */
+    /** @var EntityViewDisplay[] $entity_view_display_entities */
     $entity_view_display_entities = $this->entityTypeManager->getStorage('entity_view_display')->loadMultiple();
 
     $rows = [];
@@ -138,7 +142,7 @@ class ImageStylesMappingService implements ImageStylesMappingServiceInterface {
     $active_image_styles_mapping_plugins = $this->imageStylesMappingPluginManager->getActiveImageStylesMappingPlugins();
 
     // Get the views.
-    /** @var \Drupal\views\Entity\View[] $views */
+    /** @var View[] $views */
     $views = $this->entityTypeManager->getStorage('view')->loadMultiple();
 
     $header = [
@@ -198,7 +202,7 @@ class ImageStylesMappingService implements ImageStylesMappingServiceInterface {
     $image_fields = &\drupal_static(__FUNCTION__);
 
     if (!isset($image_fields)) {
-      /** @var \Drupal\field\Entity\FieldConfig[] $field_instance_config_entities */
+      /** @var FieldConfig[] $field_instance_config_entities */
       $field_instance_config_entities = $this->entityTypeManager->getStorage('field_config')->loadMultiple();
 
       $image_fields = [];
@@ -257,7 +261,7 @@ class ImageStylesMappingService implements ImageStylesMappingServiceInterface {
    * @param string $view_mode
    *   A view mode.
    *
-   * @return string|\Drupal\Core\GeneratedLink
+   * @return string|GeneratedLink
    *   A link to the view mode of the bundle if user has access.
    *   The view mode otherwise.
    */
@@ -303,7 +307,7 @@ class ImageStylesMappingService implements ImageStylesMappingServiceInterface {
    * @param string $display_title
    *   The title of the view display.
    *
-   * @return string|\Drupal\Core\GeneratedLink
+   * @return string|GeneratedLink
    *   A link to the view display if user has access.
    *   The display title otherwise.
    */
diff --git a/tests/src/Kernel/ImageStylesMappingServiceTest.php b/tests/src/Kernel/ImageStylesMappingServiceTest.php
index d5bcc48..906d11b 100644
--- a/tests/src/Kernel/ImageStylesMappingServiceTest.php
+++ b/tests/src/Kernel/ImageStylesMappingServiceTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\image_styles_mapping\Kernel;
 
+use Drupal\image_styles_mapping\Plugin\ImageStylesMappingPluginManager;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -16,7 +17,7 @@ class ImageStylesMappingServiceTest extends KernelTestBase {
   /**
    * The image styles mapping service.
    *
-   * @var \Drupal\image_styles_mapping\Plugin\ImageStylesMappingPluginManager
+   * @var ImageStylesMappingPluginManager
    */
   protected $imageStylesMappingPluginManager;
 
