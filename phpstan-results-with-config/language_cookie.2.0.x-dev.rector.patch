diff --git a/language_cookie.api.php b/language_cookie.api.php
index 1e7378f..2ff517b 100644
--- a/language_cookie.api.php
+++ b/language_cookie.api.php
@@ -30,14 +30,14 @@ function hook_language_cookie_condition_info_alter(array &$plugins) {
 /**
  * Modify the langage cookie that is set by this module.
  *
- * @param \Symfony\Component\HttpFoundation\Cookie &$cookie
+ * @param Cookie $cookie
  *   The actual cookie, passed by reference.
  *
  * @see \Drupal\language_cookie\EventSubscriber\LanguageCookieSubscriber::setLanguageCookie()
  */
 function hook_language_cookie_alter(Cookie &$cookie) {
   $default_langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
-  $cookie = new Cookie('my_altered_language_cookie', $default_langcode);
+  $cookie = Cookie::create('my_altered_language_cookie', $default_langcode);
 }
 
 /**
diff --git a/src/Annotation/LanguageCookieCondition.php b/src/Annotation/LanguageCookieCondition.php
index d176e9c..c5300b4 100644
--- a/src/Annotation/LanguageCookieCondition.php
+++ b/src/Annotation/LanguageCookieCondition.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\language_cookie\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Core\Condition\Annotation\Condition;
 
 /**
@@ -32,7 +33,7 @@ class LanguageCookieCondition extends Condition {
   /**
    * The human-readable name of the language cookie condition plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -41,7 +42,7 @@ class LanguageCookieCondition extends Condition {
   /**
    * The description of the language cookie condition plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/EventSubscriber/LanguageCookieSubscriber.php b/src/EventSubscriber/LanguageCookieSubscriber.php
index d0d5af9..20b959a 100644
--- a/src/EventSubscriber/LanguageCookieSubscriber.php
+++ b/src/EventSubscriber/LanguageCookieSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\language_cookie\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Drupal\language_cookie\LanguageCookieConditionInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Executable\ExecutableManagerInterface;
@@ -13,7 +15,6 @@ use Drupal\language\Plugin\LanguageNegotiation\LanguageNegotiationSelected;
 use Drupal\language_cookie\Plugin\LanguageNegotiation\LanguageNegotiationCookie;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Cookie;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -24,66 +25,66 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
   /**
    * The event.
    *
-   * @var \Symfony\Component\HttpKernel\Event\FilterResponseEvent
+   * @var ResponseEvent
    */
   protected $event;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The language negotiator.
    *
-   * @var \Drupal\language\LanguageNegotiatorInterface
+   * @var LanguageNegotiatorInterface
    */
   protected $languageNegotiator;
 
   /**
    * The Language Cookie condition plugin manager.
    *
-   * @var \Drupal\Core\Executable\ExecutableManagerInterface
+   * @var ExecutableManagerInterface
    */
   protected $languageCookieConditionManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new class object.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\language\LanguageNegotiatorInterface $language_negotiator
+   * @param LanguageNegotiatorInterface $language_negotiator
    *   The language negotiator.
-   * @param \Drupal\Core\Executable\ExecutableManagerInterface $plugin_manager
+   * @param ExecutableManagerInterface $plugin_manager
    *   The language cookie condition plugin manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(LanguageManagerInterface $language_manager, ConfigFactoryInterface $config_factory, LanguageNegotiatorInterface $language_negotiator, ExecutableManagerInterface $plugin_manager, ModuleHandlerInterface $module_handler, TimeInterface $time) {
@@ -103,7 +104,7 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
    *
    * @see \Drupal\language_cookie\LanguageCookieSubscriber::setLanguageCookie()
    *
-   * @return \Drupal\Core\Language\LanguageInterface|null
+   * @return LanguageInterface|null
    *   An string with the language code or FALSE.
    */
   protected function getLanguage() {
@@ -145,7 +146,7 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
   /**
    * Event callback for setting the language cookie.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The response event.
    *
    * @return bool
@@ -153,7 +154,7 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
    *   - TRUE if all conditions pass. If a language is available, the cookie
    *     will have been set.
    */
-  public function setLanguageCookie(FilterResponseEvent $event) {
+  public function setLanguageCookie(ResponseEvent $event) {
     $this->event = $event;
     $config = $this->configFactory->get('language_cookie.negotiation');
 
@@ -170,7 +171,7 @@ class LanguageCookieSubscriber implements EventSubscriberInterface {
     // Run through the condition plugins that may prevent a cookie from being
     // set.
     foreach ($manager->getDefinitions() as $def) {
-      /** @var \Drupal\language_cookie\LanguageCookieConditionInterface $condition_plugin */
+      /** @var LanguageCookieConditionInterface $condition_plugin */
       $condition_plugin = $manager->createInstance($def['id'], $config->get());
       $condition_plugin->setCurrentLanguage($language);
       if (!$manager->execute($condition_plugin)) {
diff --git a/src/Form/NegotiationLanguageCookieForm.php b/src/Form/NegotiationLanguageCookieForm.php
index 6407a68..8f77d9e 100644
--- a/src/Form/NegotiationLanguageCookieForm.php
+++ b/src/Form/NegotiationLanguageCookieForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\language_cookie\Form;
 
+use Drupal\Core\Config\Config;
+use Drupal\language_cookie\LanguageCookieConditionInterface;
 use Drupal\Core\Executable\ExecutableManagerInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,21 +17,21 @@ class NegotiationLanguageCookieForm extends ConfigFormBase {
   /**
    * The configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The Language Cookie condition plugin manager.
    *
-   * @var \Drupal\Core\Executable\ExecutableManagerInterface
+   * @var ExecutableManagerInterface
    */
   protected $languageCookieConditionManager;
 
   /**
    * NegotiationLanguageCookieForm constructor.
    *
-   * @param \Drupal\Core\Executable\ExecutableManagerInterface $plugin_manager
+   * @param ExecutableManagerInterface $plugin_manager
    *   The plugin manager.
    */
   public function __construct(ExecutableManagerInterface $plugin_manager) {
@@ -145,7 +147,7 @@ class NegotiationLanguageCookieForm extends ConfigFormBase {
   public function validateForm(array &$form, FormStateInterface $form_state) {
     parent::validateForm($form, $form_state);
 
-    /** @var \Drupal\language_cookie\LanguageCookieConditionInterface $condition */
+    /** @var LanguageCookieConditionInterface $condition */
     foreach ($form_state->get(['conditions']) as $condition) {
       $condition->validateConfigurationForm($form, $form_state);
     }
@@ -166,7 +168,7 @@ class NegotiationLanguageCookieForm extends ConfigFormBase {
       ->set('http_only', $form_state->getValue('http_only'))
       ->set('set_on_every_pageload', $form_state->getValue('set_on_every_pageload'));
 
-    /** @var \Drupal\language_cookie\LanguageCookieConditionInterface $condition */
+    /** @var LanguageCookieConditionInterface $condition */
     foreach ($form_state->get(['conditions']) as $condition) {
       $condition->postConfigSave($this->config, $form, $form_state);
     }
diff --git a/src/LanguageCookieConditionBase.php b/src/LanguageCookieConditionBase.php
index b18db56..1fc2900 100644
--- a/src/LanguageCookieConditionBase.php
+++ b/src/LanguageCookieConditionBase.php
@@ -24,7 +24,7 @@ abstract class LanguageCookieConditionBase extends ConditionPluginBase implement
   /**
    * The current language.
    *
-   * @var \Drupal\Core\Language\LanguageInterface
+   * @var LanguageInterface
    */
   protected $currentLanguage;
 
diff --git a/src/LanguageCookieConditionInterface.php b/src/LanguageCookieConditionInterface.php
index 27cf68a..68dcd3f 100644
--- a/src/LanguageCookieConditionInterface.php
+++ b/src/LanguageCookieConditionInterface.php
@@ -75,11 +75,11 @@ interface LanguageCookieConditionInterface extends ConditionInterface {
    * Method that gets triggered when the configuration of the form
    * has been saved.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The config object.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The FormState object.
    */
   public function postConfigSave(Config $config, array &$form, FormStateInterface $form_state);
@@ -87,7 +87,7 @@ interface LanguageCookieConditionInterface extends ConditionInterface {
   /**
    * Set the current language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The current language object.
    *
    * @return $this
@@ -98,7 +98,7 @@ interface LanguageCookieConditionInterface extends ConditionInterface {
   /**
    * Get the current language.
    *
-   * @return \Drupal\Core\Language\LanguageInterface|null
+   * @return LanguageInterface|null
    *   The current language when available, else NULL.
    */
   public function getCurrentLanguage();
diff --git a/src/LanguageCookieConditionManager.php b/src/LanguageCookieConditionManager.php
index 8cf5468..6874979 100644
--- a/src/LanguageCookieConditionManager.php
+++ b/src/LanguageCookieConditionManager.php
@@ -20,9 +20,9 @@ class LanguageCookieConditionManager extends DefaultPluginManager implements Exe
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   An object that implements CacheBackendInterface.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   An object that implements ModuleHandlerInterface.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionBlacklistedPaths.php b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionBlacklistedPaths.php
index 0453f7e..419f0d3 100644
--- a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionBlacklistedPaths.php
+++ b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionBlacklistedPaths.php
@@ -26,41 +26,41 @@ class LanguageCookieConditionBlacklistedPaths extends LanguageCookieConditionBas
   /**
    * An alias manager to find the alias for the current system path.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * Constructs a RequestPath condition plugin.
    *
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   An alias manager to find the alias for the current system path.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path
+   * @param CurrentPathStack $current_path
    *   The current path.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionHardcodedBlacklistedPaths.php b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionHardcodedBlacklistedPaths.php
index 96b8256..d8ffff3 100644
--- a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionHardcodedBlacklistedPaths.php
+++ b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionHardcodedBlacklistedPaths.php
@@ -26,50 +26,50 @@ class LanguageCookieConditionHardcodedBlacklistedPaths extends LanguageCookieCon
   /**
    * An alias manager to find the alias for the current system path.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a RequestPath condition plugin.
    *
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   An alias manager to find the alias for the current system path.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path
+   * @param CurrentPathStack $current_path
    *   The current path.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionLanguageAccess.php b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionLanguageAccess.php
index ef4dc1a..45c47c0 100644
--- a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionLanguageAccess.php
+++ b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionLanguageAccess.php
@@ -26,23 +26,23 @@ class LanguageCookieConditionLanguageAccess extends LanguageCookieConditionBase
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a LanguageCookieConditionPath plugin.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionMethodIsValid.php b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionMethodIsValid.php
index 6ed9c1a..199901d 100644
--- a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionMethodIsValid.php
+++ b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionMethodIsValid.php
@@ -24,23 +24,23 @@ class LanguageCookieConditionMethodIsValid extends LanguageCookieConditionBase {
   /**
    * The current path.
    *
-   * @var \Drupal\language\LanguageNegotiatorInterface
+   * @var LanguageNegotiatorInterface
    */
   protected $languageNegotiator;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a LanguageCookieConditionPath plugin.
    *
-   * @param \Drupal\language\LanguageNegotiatorInterface $language_negotiator
+   * @param LanguageNegotiatorInterface $language_negotiator
    *   The language negotiator.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionPathIsValid.php b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionPathIsValid.php
index dacd593..688e8f8 100644
--- a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionPathIsValid.php
+++ b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionPathIsValid.php
@@ -23,32 +23,32 @@ class LanguageCookieConditionPathIsValid extends LanguageCookieConditionBase {
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * Constructs a LanguageCookieConditionPath plugin.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path
+   * @param CurrentPathStack $current_path
    *   The current path.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionXMLHTTPRequest.php b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionXMLHTTPRequest.php
index b7747a1..f3afd0b 100644
--- a/src/Plugin/LanguageCookieCondition/LanguageCookieConditionXMLHTTPRequest.php
+++ b/src/Plugin/LanguageCookieCondition/LanguageCookieConditionXMLHTTPRequest.php
@@ -21,14 +21,14 @@ class LanguageCookieConditionXMLHTTPRequest extends LanguageCookieConditionBase
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Constructs a LanguageCookieConditionPath plugin.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/LanguageNegotiation/LanguageNegotiationCookie.php b/src/Plugin/LanguageNegotiation/LanguageNegotiationCookie.php
index 28d7f06..aeedcb4 100644
--- a/src/Plugin/LanguageNegotiation/LanguageNegotiationCookie.php
+++ b/src/Plugin/LanguageNegotiation/LanguageNegotiationCookie.php
@@ -35,23 +35,23 @@ class LanguageNegotiationCookie extends LanguageNegotiationMethodBase implements
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The page cache kill switch.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $pageCacheKillSwitch;
 
   /**
    * Constructs a new LanguageNegotiationCookie instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\PageCache\ResponsePolicy\KillSwitch $page_cache_kill_switch
+   * @param KillSwitch $page_cache_kill_switch
    *   The page cache kill switch.
    */
   public function __construct(ConfigFactoryInterface $config_factory, KillSwitch $page_cache_kill_switch) {
diff --git a/tests/src/Functional/LanguageCookieNegotiationConfigTest.php b/tests/src/Functional/LanguageCookieNegotiationConfigTest.php
index 73c18b9..b55f07e 100644
--- a/tests/src/Functional/LanguageCookieNegotiationConfigTest.php
+++ b/tests/src/Functional/LanguageCookieNegotiationConfigTest.php
@@ -118,7 +118,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/max-age=86/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
+    $this->assertMatchesRegularExpression('/max-age=86/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
 
     $config->set('time', 60 * 60 * 24 * 2);
     $config->save();
@@ -126,7 +126,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('en/node/' . $node->id());
 
-    $this->assertRegExp('/max-age=172/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
+    $this->assertMatchesRegularExpression('/max-age=172/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains expires option.');
   }
 
   /**
@@ -139,7 +139,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
 
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/path=\/drupal;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains path option.');
+    $this->assertMatchesRegularExpression('/path=\/drupal;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains path option.');
   }
 
   /**
@@ -153,7 +153,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/domain=example\.org;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains domain option.');
+    $this->assertMatchesRegularExpression('/domain=example\.org;/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains domain option.');
   }
 
   /**
@@ -167,7 +167,7 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/secure/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains secure option.');
+    $this->assertMatchesRegularExpression('/secure/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie contains secure option.');
   }
 
   /**
@@ -181,13 +181,13 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
 
-    $this->assertRegExp('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
+    $this->assertMatchesRegularExpression('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
 
     $config->set('http_only', FALSE);
     $config->save();
 
     $this->drupalGet('en/node/' . $node->id());
-    $this->assertNotRegExp('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
+    $this->assertDoesNotMatchRegularExpression('/httponly/i', $this->getSession()->getResponseHeader('Set-Cookie'), 'Cookie contains httpOnly option.');
   }
 
   /**
@@ -196,13 +196,13 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
   public function testLanguageCookieSetOnEveryPageLoadOption() {
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $this->drupalGet('fr/node/' . $node->id());
     $this->assertEmpty($this->drupalGetHeader('Set-Cookie'));
 
     $this->drupalGet('en/node/' . $node->id());
-    $this->assertRegExp('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $config = $this->config('language_cookie.negotiation');
     $config->set('set_on_every_pageload', TRUE);
@@ -210,13 +210,13 @@ class LanguageCookieNegotiationConfigTest extends LanguageCookieTestBase {
 
     $node = $this->drupalCreateNode();
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $this->drupalGet('fr/node/' . $node->id());
-    $this->assertRegExp('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=fr/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
 
     $this->drupalGet('en/node/' . $node->id());
-    $this->assertRegExp('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
+    $this->assertMatchesRegularExpression('/language=en/i', $this->drupalGetHeader('Set-Cookie'), 'Cookie is set.');
   }
 
 }
