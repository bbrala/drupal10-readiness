diff --git a/generated_content.api.php b/generated_content.api.php
index 1b6b52e..f661483 100644
--- a/generated_content.api.php
+++ b/generated_content.api.php
@@ -51,7 +51,7 @@ function hook_generated_content_create_ENTITY_TYPE_BUNDLE() {
   $total_terms_count = 50;
 
   // Generated content helper to get access to logging.
-  /** @var \Drupal\generated_content\Helpers\GeneratedContentHelper $helper */
+  /** @var GeneratedContentHelper $helper */
   $helper = GeneratedContentHelper::getInstance();
 
   $terms = [];
diff --git a/modules/generated_content_example1/generated_content/media/image.inc b/modules/generated_content_example1/generated_content/media/image.inc
index ccef888..734d2db 100644
--- a/modules/generated_content_example1/generated_content/media/image.inc
+++ b/modules/generated_content_example1/generated_content/media/image.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\file\Entity\File;
 /**
  * @file
  * Create generated images.
@@ -27,7 +28,7 @@ function generated_content_example1_generated_content_create_media_image_trackin
  * Implements hook_generated_content_create_ENTITY_TYPE_BUNDLE().
  */
 function generated_content_example1_generated_content_create_media_image() {
-  /** @var \Drupal\generated_content\Helpers\GeneratedContentHelper $helper */
+  /** @var GeneratedContentHelper $helper */
   $helper = GeneratedContentHelper::getInstance();
 
   $total_files_count = 10;
@@ -35,7 +36,7 @@ function generated_content_example1_generated_content_create_media_image() {
   $entities = [];
   for ($i = 0; $i < $total_files_count; $i++) {
     $filename = sprintf('Demo Image media %s %s', $i + 1, $helper::randomSentence());
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = $helper->createImage([
       'filename' => $filename,
       'width' => 2000,
diff --git a/modules/generated_content_example1/generated_content/user/user.inc b/modules/generated_content_example1/generated_content/user/user.inc
index f3043da..4b02cd1 100644
--- a/modules/generated_content_example1/generated_content/user/user.inc
+++ b/modules/generated_content_example1/generated_content/user/user.inc
@@ -26,7 +26,7 @@ function generated_content_example1_generated_content_create_user_user_tracking(
 function generated_content_example1_generated_content_create_user_user() {
   $total_users_per_role = 3;
 
-  /** @var \Drupal\generated_content\Helpers\GeneratedContentHelper $helper */
+  /** @var GeneratedContentHelper $helper */
   $helper = GeneratedContentHelper::getInstance();
 
   $users = [];
diff --git a/modules/generated_content_example2/generated_content/node/article.inc b/modules/generated_content_example2/generated_content/node/article.inc
index d66f764..1f61f6b 100644
--- a/modules/generated_content_example2/generated_content/node/article.inc
+++ b/modules/generated_content_example2/generated_content/node/article.inc
@@ -29,7 +29,7 @@ function generated_content_example2_generated_content_create_node_article_tracki
 function generated_content_example2_generated_content_create_node_article() {
   $total_nodes_count = 10;
 
-  /** @var \Drupal\generated_content_example2\GeneratedContentExample2Helper $helper */
+  /** @var GeneratedContentExample2Helper $helper */
   $helper = GeneratedContentExample2Helper::getInstance();
 
   $nodes = [];
diff --git a/modules/generated_content_example2/generated_content/node/page.inc b/modules/generated_content_example2/generated_content/node/page.inc
index ac42f26..873693e 100644
--- a/modules/generated_content_example2/generated_content/node/page.inc
+++ b/modules/generated_content_example2/generated_content/node/page.inc
@@ -29,7 +29,7 @@ function generated_content_example2_generated_content_create_node_page_tracking(
 function generated_content_example2_generated_content_create_node_page() {
   $total_nodes_count = 10;
 
-  /** @var \Drupal\generated_content\Helpers\GeneratedContentHelper $helper */
+  /** @var GeneratedContentHelper $helper */
   $helper = GeneratedContentHelper::getInstance();
 
   $nodes = [];
diff --git a/modules/generated_content_example2/generated_content/taxonomy_term/tags.inc b/modules/generated_content_example2/generated_content/taxonomy_term/tags.inc
index 61eb573..9c4bf02 100644
--- a/modules/generated_content_example2/generated_content/taxonomy_term/tags.inc
+++ b/modules/generated_content_example2/generated_content/taxonomy_term/tags.inc
@@ -30,7 +30,7 @@ function generated_content_example2_generated_content_create_taxonomy_term_tags(
   // Total number of terms to create.
   $total_terms_count = 10;
 
-  /** @var \Drupal\generated_content\Helpers\GeneratedContentHelper $helper */
+  /** @var GeneratedContentHelper $helper */
   $helper = GeneratedContentHelper::getInstance();
 
   $terms = [];
diff --git a/src/Commands/GeneratedContentCommands.php b/src/Commands/GeneratedContentCommands.php
index 3fa1b8e..27c487c 100644
--- a/src/Commands/GeneratedContentCommands.php
+++ b/src/Commands/GeneratedContentCommands.php
@@ -18,23 +18,23 @@ class GeneratedContentCommands extends DrushCommands {
   /**
    * Entity type service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
    * Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $loggerChannelFactory;
 
   /**
    * Constructs a new UpdateVideosStatsController object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
    *   Logger service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, LoggerChannelFactoryInterface $loggerChannelFactory) {
diff --git a/src/Form/GeneratedContentForm.php b/src/Form/GeneratedContentForm.php
index 5164e58..873254b 100644
--- a/src/Form/GeneratedContentForm.php
+++ b/src/Form/GeneratedContentForm.php
@@ -20,7 +20,7 @@ class GeneratedContentForm extends FormBase implements ContainerInjectionInterfa
   /**
    * The generated content repository instance.
    *
-   * @var \Drupal\generated_content\GeneratedContentRepository
+   * @var GeneratedContentRepository
    */
   protected $repository;
 
diff --git a/src/GeneratedContentBatchService.php b/src/GeneratedContentBatchService.php
index d45f664..f067d4b 100644
--- a/src/GeneratedContentBatchService.php
+++ b/src/GeneratedContentBatchService.php
@@ -17,14 +17,14 @@ class GeneratedContentBatchService implements ContainerInjectionInterface {
   /**
    * Drupal\Core\Messenger\MessengerInterface definition.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The core messenger service.
    */
   public function __construct(MessengerInterface $messenger) {
diff --git a/src/GeneratedContentRepository.php b/src/GeneratedContentRepository.php
index 576f5b5..4e05d26 100644
--- a/src/GeneratedContentRepository.php
+++ b/src/GeneratedContentRepository.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\generated_content;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Component\Utility\SortArray;
 use Drupal\Core\Database\Database;
 use Drupal\Core\Entity\EntityInterface;
@@ -319,7 +320,7 @@ class GeneratedContentRepository {
   protected function collectImplementationPaths() {
     $paths = [];
 
-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
+    /** @var ModuleHandlerInterface $module_handler */
     $module_handler = \Drupal::getContainer()->get('module_handler');
     foreach ($module_handler->getModuleDirectories() as $name => $directory) {
       $candidate_dir = $directory . DIRECTORY_SEPARATOR . self::CONTENT_DIRECTORY;
@@ -370,7 +371,7 @@ class GeneratedContentRepository {
   /**
    * Add a generated content entity to the repository.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    * @param string $entity_type
    *   Override entity type with a custom value.
@@ -398,7 +399,7 @@ class GeneratedContentRepository {
    *   Whether to track the entities.
    */
   protected function addEntities(array $entities, $tracking = TRUE) {
-    /** @var \Drupal\Core\Entity\EntityInterface $entity */
+    /** @var EntityInterface $entity */
     foreach ($entities as $entity) {
       $this->addEntity($entity, NULL, NULL, $tracking);
     }
@@ -413,7 +414,7 @@ class GeneratedContentRepository {
    *   The array of entities.
    */
   public function addEntitiesNoTracking(array $entities) {
-    /** @var \Drupal\Core\Entity\EntityInterface $entity */
+    /** @var EntityInterface $entity */
     foreach ($entities as $entity) {
       $this->addEntity($entity, NULL, NULL, FALSE);
     }
@@ -457,7 +458,7 @@ class GeneratedContentRepository {
   /**
    * Track the entity permanently in the generated content table.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    */
   protected function trackEntity(EntityInterface $entity) {
diff --git a/src/Helpers/GeneratedContentAbstractHelper.php b/src/Helpers/GeneratedContentAbstractHelper.php
index d6c2782..86d3bf7 100644
--- a/src/Helpers/GeneratedContentAbstractHelper.php
+++ b/src/Helpers/GeneratedContentAbstractHelper.php
@@ -32,28 +32,28 @@ abstract class GeneratedContentAbstractHelper implements ContainerInjectionInter
   /**
    * The repository singleton.
    *
-   * @var \Drupal\generated_content\GeneratedContentRepository
+   * @var GeneratedContentRepository
    */
   protected static $repository = NULL;
 
   /**
    * Asset generator.
    *
-   * @var \Drupal\generated_content\Helpers\GeneratedContentAssetGenerator
+   * @var GeneratedContentAssetGenerator
    */
   protected static $assetGenerator = NULL;
 
   /**
    * Asset generator.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected static $messenger = NULL;
 
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected static $entityTypeManager = NULL;
 
diff --git a/src/Helpers/GeneratedContentAssetGenerator.php b/src/Helpers/GeneratedContentAssetGenerator.php
index 66a05d6..8b8db08 100644
--- a/src/Helpers/GeneratedContentAssetGenerator.php
+++ b/src/Helpers/GeneratedContentAssetGenerator.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\generated_content\Helpers;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\file\Entity\File;
 use Drupal\Component\Utility\Random;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\File\FileSystemInterface;
@@ -24,21 +26,21 @@ class GeneratedContentAssetGenerator {
   /**
    * The utility class for creating random data.
    *
-   * @var \Drupal\Component\Utility\Random
+   * @var Random
    */
   protected $random;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -139,7 +141,7 @@ class GeneratedContentAssetGenerator {
     $save_function = 'image' . ($extension == 'jpg' ? 'jpeg' : $extension);
     $save_function($im, $this->fileSystem->realpath($destination));
 
-    $file = file_save_data(file_get_contents($destination), $uri);
+    $file = \Drupal::service('file.repository')->writeData(file_get_contents($destination), $uri);
 
     return $file;
   }
@@ -187,7 +189,7 @@ class GeneratedContentAssetGenerator {
     $uri = $dir . $filename;
     // Make sure that there is an extension.
     $uri = empty(pathinfo($uri, PATHINFO_EXTENSION)) ? $uri . $options['extension'] : $uri;
-    $file = file_save_data($options['content'], $uri);
+    $file = \Drupal::service('file.repository')->writeData($options['content'], $uri);
 
     return $file;
   }
@@ -239,7 +241,7 @@ class GeneratedContentAssetGenerator {
     $uri = $dir . $filename;
     // Make sure that there is an extension.
     $uri = empty(pathinfo($uri, PATHINFO_EXTENSION)) ? $uri . '.' . $options['extension'] : $uri;
-    $file = file_save_data(file_get_contents($asset_path), $uri);
+    $file = \Drupal::service('file.repository')->writeData(file_get_contents($asset_path), $uri);
 
     return $file;
   }
@@ -250,7 +252,7 @@ class GeneratedContentAssetGenerator {
    * @param string $filename
    *   Filename to search for.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|\Drupal\file\Entity\File|null
+   * @return EntityInterface|File|null
    *   File object or NULL if not found.
    */
   protected function findFileByName($filename) {
@@ -292,7 +294,7 @@ class GeneratedContentAssetGenerator {
       'svg',
     ];
 
-    $module_path = drupal_get_path('module', 'generated_content');
+    $module_path = \Drupal::service('extension.list.module')->getPath('generated_content');
     foreach ($extensions as $extension) {
       $dummy_file = $module_path . DIRECTORY_SEPARATOR . rtrim(static::ASSETS_DIRECTORY, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . 'dummy.' . $extension;
       if (file_exists($dummy_file)) {
diff --git a/src/Helpers/GeneratedContentHelper.php b/src/Helpers/GeneratedContentHelper.php
index 5f759f3..3f0e7c6 100644
--- a/src/Helpers/GeneratedContentHelper.php
+++ b/src/Helpers/GeneratedContentHelper.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\generated_content\Helpers;
 
+use Drupal\user\Entity\User;
+use Drupal\node\Entity\Node;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;
 use Drupal\menu_link_content\Entity\MenuLinkContent;
 use Drupal\taxonomy\Entity\Term;
@@ -18,7 +21,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
   /**
    * Select a random user.
    *
-   * @return \Drupal\user\Entity\User
+   * @return User
    *   The user object.
    */
   public static function randomUser() {
@@ -35,7 +38,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    *   The type of the node to return. If not provided - random type will be
    *   returned.
    *
-   * @return \Drupal\node\Entity\Node
+   * @return Node
    *   Node entity.
    */
   public static function randomNode($type = NULL) {
@@ -58,7 +61,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    *   (optional) Array of types to filter. Defaults to FALSE, meaning that
    *   returned nodes will not be filtered.
    *
-   * @return \Drupal\node\Entity\Node[]
+   * @return Node[]
    *   Array of media entities.
    */
   public static function randomNodes($count = 20, array $types = []) {
@@ -88,7 +91,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    *   Optional term count to return. If NULL - all terms will be returned.
    *   If specified - this count of already randomised terms will be returned.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   Array of terms.
    */
   public static function randomRealTerms($vid, $count = NULL) {
@@ -105,7 +108,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    * @param string $vid
    *   Vocabulary machine name.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]|false
+   * @return EntityInterface[]|false
    *   The term.
    */
   public static function randomRealTerm($vid) {
@@ -123,7 +126,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    *   Optional term count to return. If NULL - all terms will be returned.
    *   If specified - this count of already randomised terms will be returned.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   Array of terms.
    */
   public static function randomTerms($vid, $count = NULL) {
@@ -138,7 +141,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    * @param string $vid
    *   Vocabulary machine name.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]|false
+   * @return EntityInterface[]|false
    *   The term.
    */
   public static function randomTerm($vid) {
@@ -270,7 +273,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    *   table to save execution time and memory consumption when listing large
    *   numbers of terms. Defaults to FALSE.
    *
-   * @return \Drupal\taxonomy\Entity\Term[]
+   * @return Term[]
    *   Array of terms at depth.
    */
   public static function getTermsAtDepth($vid, $depth, $load_entities = FALSE) {
@@ -278,7 +281,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
 
     // Note that we are asking for an item 1 level deeper because this is
     // how loadTree() calculates max depth.
-    /** @var \Drupal\taxonomy\Entity\Term[] $tree */
+    /** @var Term[] $tree */
     $tree = static::$entityTypeManager->getStorage('taxonomy_term')->loadTree($vid, 0, $depth + 1, $load_entities);
 
     foreach ($tree as $k => $leaf) {
@@ -301,7 +304,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    * @param bool|int $parent_tid
    *   Internal parameter used for recursive calls.
    *
-   * @return \Drupal\taxonomy\Entity\Term[]
+   * @return Term[]
    *   Array of saved terms, keyed by term id.
    */
   public static function saveTermTree($vid, array $tree, $parent_tid = FALSE) {
@@ -351,7 +354,7 @@ class GeneratedContentHelper extends GeneratedContentAbstractHelper {
    *   Array of links with keys as titles and values as paths or full link
    *   item array definitions. 'children' key is used to specify children menu
    *   levels.
-   * @param \Drupal\menu_link_content\Entity\MenuLinkContent $parent_menu_link
+   * @param MenuLinkContent $parent_menu_link
    *   Internal. Parent menu link item.
    *
    * @return array
