diff --git a/modules/project_browser_devel/src/Plugin/ProjectBrowserSource/RandomDataPlugin.php b/modules/project_browser_devel/src/Plugin/ProjectBrowserSource/RandomDataPlugin.php
index 1ce28af..b1d990a 100644
--- a/modules/project_browser_devel/src/Plugin/ProjectBrowserSource/RandomDataPlugin.php
+++ b/modules/project_browser_devel/src/Plugin/ProjectBrowserSource/RandomDataPlugin.php
@@ -26,7 +26,7 @@ class RandomDataPlugin extends ProjectBrowserSourceBase implements ContainerFact
   /**
    * Utility to create random data.
    *
-   * @var \Drupal\Component\Utility\Random
+   * @var Random
    */
   protected $randomGenerator;
 
diff --git a/src/Annotation/ProjectBrowserSource.php b/src/Annotation/ProjectBrowserSource.php
index e5852f6..8ad18d9 100644
--- a/src/Annotation/ProjectBrowserSource.php
+++ b/src/Annotation/ProjectBrowserSource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\project_browser\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -35,7 +36,7 @@ class ProjectBrowserSource extends Plugin {
   /**
    * The human-readable name of the source.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    * @ingroup plugin_translatable
    */
   public $label;
@@ -43,7 +44,7 @@ class ProjectBrowserSource extends Plugin {
   /**
    * A short description of the source.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    * @ingroup plugin_translatable
    */
   public $description;
diff --git a/src/Commands/UpdateFixtureCommands.php b/src/Commands/UpdateFixtureCommands.php
index 0842aa2..7d603fe 100644
--- a/src/Commands/UpdateFixtureCommands.php
+++ b/src/Commands/UpdateFixtureCommands.php
@@ -28,32 +28,32 @@ class UpdateFixtureCommands extends DrushCommands {
   /**
    * Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $loggerChannelFactory;
 
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   protected $enabledSource;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new UpdateFixtureCommands object.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
    *   Logger service.
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   Event dispatcher service.
    */
   public function __construct(LoggerChannelFactoryInterface $loggerChannelFactory, EnabledSourceHandler $enabled_source, EventDispatcherInterface $event_dispatcher) {
@@ -78,7 +78,7 @@ class UpdateFixtureCommands extends DrushCommands {
 
     // Dispatch the event so that event listeners of other source can update their fixture.
     $event = new UpdateFixtureEvent($this->enabledSource);
-    $this->eventDispatcher->dispatch(ProjectBrowserEvents::UPDATE_FIXTURE, $event);
+    $this->eventDispatcher->dispatch($event, ProjectBrowserEvents::UPDATE_FIXTURE);
 
     $this->logger()->notice($this->t('Completed.'));
   }
diff --git a/src/Controller/BrowserController.php b/src/Controller/BrowserController.php
index c7d7200..59adaca 100644
--- a/src/Controller/BrowserController.php
+++ b/src/Controller/BrowserController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\project_browser\Controller;
 
+use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Extension\InfoParserException;
 use Drupal\Core\Extension\ModuleExtensionList;
@@ -23,50 +24,50 @@ class BrowserController extends ControllerBase {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleList;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   protected $enabledSource;
 
   /**
    * ProjectBrowser cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBin;
 
   /**
    * Build the project browser controller.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $module_list
+   * @param ModuleExtensionList $module_list
    *   The module extension list.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ModuleExtensionList $module_list, RequestStack $request_stack, EnabledSourceHandler $enabled_source, MessengerInterface $messenger) {
diff --git a/src/Controller/ProjectBrowserEndpointController.php b/src/Controller/ProjectBrowserEndpointController.php
index 445549e..feadf96 100644
--- a/src/Controller/ProjectBrowserEndpointController.php
+++ b/src/Controller/ProjectBrowserEndpointController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\project_browser\Controller;
 
+use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\project_browser\EnabledSourceHandler;
@@ -18,21 +19,21 @@ class ProjectBrowserEndpointController extends ControllerBase {
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   protected $enabledSource;
 
   /**
    * ProjectBrowser cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBin;
 
   /**
    * ProjectBrowserEndpointController constructor.
    *
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
    */
   public function __construct(EnabledSourceHandler $enabled_source) {
@@ -62,10 +63,10 @@ class ProjectBrowserEndpointController extends ControllerBase {
    *
    * Returns a list of bundles for specified entity.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Typically a project listing.
    */
   public function getAllProjects(Request $request) {
@@ -126,7 +127,7 @@ class ProjectBrowserEndpointController extends ControllerBase {
   /**
    * Returns a list of categories.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllCategories(Request $request) {
@@ -150,7 +151,7 @@ class ProjectBrowserEndpointController extends ControllerBase {
   /**
    * Returns a list of development status values.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllDevelopmentStatus(Request $request) {
@@ -174,7 +175,7 @@ class ProjectBrowserEndpointController extends ControllerBase {
   /**
    * Returns a list of maintenance status values.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllMaintenanceStatus(Request $request) {
@@ -198,7 +199,7 @@ class ProjectBrowserEndpointController extends ControllerBase {
   /**
    * Returns a list of security coverage values.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllSecurityCoverage(Request $request) {
diff --git a/src/EnabledSourceHandler.php b/src/EnabledSourceHandler.php
index fe95551..8ed002a 100644
--- a/src/EnabledSourceHandler.php
+++ b/src/EnabledSourceHandler.php
@@ -15,14 +15,14 @@ class EnabledSourceHandler {
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -36,9 +36,9 @@ class EnabledSourceHandler {
   /**
    * EnabledSourceHandler constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    * @param \Drupal\project_browser\plugin\ProjectBrowserSourceManager $plugin_manager
    *   The plugin manager.
@@ -52,7 +52,7 @@ class EnabledSourceHandler {
   /**
    * Returns a plugin instance corresponding to the enabled_source config.
    *
-   * @return \Drupal\project_browser\Plugin\ProjectBrowserSourceInterface|null
+   * @return ProjectBrowserSourceInterface|null
    *   The Project Browser source plugin, or NULL.
    */
   public function getCurrentSource(): ?ProjectBrowserSourceInterface {
diff --git a/src/Event/UpdateFixtureEvent.php b/src/Event/UpdateFixtureEvent.php
index f4eb0cd..c8957c3 100644
--- a/src/Event/UpdateFixtureEvent.php
+++ b/src/Event/UpdateFixtureEvent.php
@@ -10,14 +10,14 @@ class UpdateFixtureEvent extends Event {
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   public $enabledSource;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
    */
   public function __construct(EnabledSourceHandler $enabled_source) {
diff --git a/src/EventSubscriber/UpdateFixtureSubscriber.php b/src/EventSubscriber/UpdateFixtureSubscriber.php
index a4f6cd4..c907bdb 100644
--- a/src/EventSubscriber/UpdateFixtureSubscriber.php
+++ b/src/EventSubscriber/UpdateFixtureSubscriber.php
@@ -23,7 +23,7 @@ class UpdateFixtureSubscriber implements EventSubscriberInterface {
   /**
    * Update fixture only if plugin id is 'drupalorg_mockapi'.
    *
-   * @param \Drupal\project_browser\Event\UpdateFixtureEvent $event
+   * @param UpdateFixtureEvent $event
    *   The event.
    */
   public function onFixtureUpdate(UpdateFixtureEvent $event) {
diff --git a/src/Plugin/ProjectBrowserSource/MockDrupalDotOrg.php b/src/Plugin/ProjectBrowserSource/MockDrupalDotOrg.php
index f0bb418..a13fc30 100644
--- a/src/Plugin/ProjectBrowserSource/MockDrupalDotOrg.php
+++ b/src/Plugin/ProjectBrowserSource/MockDrupalDotOrg.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\project_browser\Plugin\ProjectBrowserSource;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Composer\Semver\Semver;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Database\Connection;
@@ -54,28 +55,28 @@ class MockDrupalDotOrg extends ProjectBrowserSourceBase implements ContainerFact
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * The state object.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -88,13 +89,13 @@ class MockDrupalDotOrg extends ProjectBrowserSourceBase implements ContainerFact
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection to be used.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   A Guzzle client object.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, LoggerInterface $logger, Connection $database, ClientInterface $http_client, StateInterface $state) {
@@ -498,7 +499,7 @@ class MockDrupalDotOrg extends ProjectBrowserSourceBase implements ContainerFact
    * @return array
    *   The response object.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Thrown if request is unsuccessful.
    *
    * @see https://www.drupal.org/drupalorg/docs/apis/rest-and-other-apis#s-releases
@@ -529,7 +530,7 @@ class MockDrupalDotOrg extends ProjectBrowserSourceBase implements ContainerFact
    * @return array
    *   An array of project data.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    * @throws \JsonException
    *
    * @see https://www.drupal.org/drupalorg/docs/apis/rest-and-other-apis
@@ -602,7 +603,7 @@ class MockDrupalDotOrg extends ProjectBrowserSourceBase implements ContainerFact
   /**
    * Update the database with any projects updated since the last update.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *
    * @throws \JsonException
    */
@@ -730,7 +731,7 @@ class MockDrupalDotOrg extends ProjectBrowserSourceBase implements ContainerFact
    * @return array
    *   An array releases.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Thrown if request is unsuccessful.
    */
   public function getProjectReleasesFromSource(string $project) {
diff --git a/src/Plugin/ProjectBrowserSourceInterface.php b/src/Plugin/ProjectBrowserSourceInterface.php
index 70ec902..4db4371 100644
--- a/src/Plugin/ProjectBrowserSourceInterface.php
+++ b/src/Plugin/ProjectBrowserSourceInterface.php
@@ -30,7 +30,7 @@ interface ProjectBrowserSourceInterface {
    *   - development_status: Comma separated list of IDs.
    *   - security_advisory_coverage: Comma separated list of IDs.
    *
-   * @return \Drupal\project_browser\ProjectBrowser\ProjectsResultsPage
+   * @return ProjectsResultsPage
    *   Returns a \Drupal\project_browser\ProjectBrowser\ProjectsResultsPage.
    */
   public function getProjects(array $query = []): ProjectsResultsPage;
diff --git a/src/Plugin/ProjectBrowserSourceManager.php b/src/Plugin/ProjectBrowserSourceManager.php
index 7e913bb..7dc7c01 100644
--- a/src/Plugin/ProjectBrowserSourceManager.php
+++ b/src/Plugin/ProjectBrowserSourceManager.php
@@ -21,9 +21,9 @@ class ProjectBrowserSourceManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/tests/src/Kernel/DatabaseTablesTest.php b/tests/src/Kernel/DatabaseTablesTest.php
index a7832d7..a58b6a9 100644
--- a/tests/src/Kernel/DatabaseTablesTest.php
+++ b/tests/src/Kernel/DatabaseTablesTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\project_browser\Kernel;
 
+use Drupal\Core\Extension\ModuleInstallerInterface;
+use Drupal\Core\Database\Schema;
+use Drupal\Core\Database\Connection;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -15,11 +18,11 @@ class DatabaseTablesTest extends KernelTestBase {
    * Tests that Project Browser's DB tables are created and destroyed correctly.
    */
   public function testDatabaseSchemaCreationAndDestruction(): void {
-    /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
+    /** @var ModuleInstallerInterface $module_installer */
     $module_installer = $this->container->get('module_installer');
-    /** @var \Drupal\Core\Database\Schema $database */
+    /** @var Schema $database */
     $schema = $this->container->get('database')->schema();
-    /** @var \Drupal\Core\Database\Connection $database */
+    /** @var Connection $database */
     $database = $this->container->get('database');
 
     $module_installer->install(['project_browser']);
