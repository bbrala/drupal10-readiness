modules/contrib/user_redirect/src/Form/UserRedirectSettingsForm.php
modules/contrib/user_redirect/src/UserRedirect.php
modules/contrib/user_redirect/src/UserRedirectInterface.php
modules/contrib/user_redirect/user_redirect.module

3 files with changes
====================

1) modules/contrib/user_redirect/src/UserRedirectInterface.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Set Login destination parameter to do redirect.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   User account to set destination for.
    */
   public function setLoginRedirection(AccountInterface $account = NULL);
@@ @@
   /**
    * Set Logout destination parameter to do redirect.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   User account to set destination for.
    */
   public function setLogoutRedirection(AccountInterface $account = NULL);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/user_redirect/src/UserRedirect.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_redirect;

+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Config\Config;
 use Drupal\Component\Utility\SortArray;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
   /**
    * The currently active request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;

@@ @@
   /**
    * The users_target.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Constructs a new Login And Logout Redirect Per Role service object.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
    */
   public function __construct(RequestStack $request_stack, ConfigFactoryInterface $config_factory, AccountProxyInterface $current_user) {
@@ @@
    *
    * @param string $key
    *   Configuration key (login or logout).
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   User account to set destination for.
    */
   protected function prepareDestination($key, AccountInterface $account = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/user_redirect/src/Form/UserRedirectSettingsForm.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;

@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a new UserRedirectSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

