modules/contrib/entity_rest/entity_rest.module
modules/contrib/entity_rest/src/Form/EntityRestApiConfigForm.php
modules/contrib/entity_rest/src/Form/EntityRestApiContextForm.php
modules/contrib/entity_rest/src/Form/EntityRestApiForm.php
modules/contrib/entity_rest/src/Plugin/Derivative/EntityRestLocalTasks.php
modules/contrib/entity_rest/src/Plugin/rest/resource/EntityRestEntitiesResource.php
modules/contrib/entity_rest/src/Plugin/rest/resource/EntityRestEntityResource.php
modules/contrib/entity_rest/src/Routing/EntityRestRouteSubscriber.php
modules/contrib/entity_rest/src/Service/EntityRestService.php

6 files with changes
====================

1) modules/contrib/entity_rest/src/Service/EntityRestService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_rest\Service;

+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The Configuration Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

   /**
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;

@@ @@
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * EntityRestService constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The current request.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
    */
   public function __construct(
@@ @@
    *
    * @param $entity_api_name
    *
-   * @return \Drupal\Core\Config\ImmutableConfig|null
+   * @return ImmutableConfig|null
    */
   public function getEntityApiConfig($entity_api_name): ?ImmutableConfig {
     $prefix = 'entity_rest.api.';
@@ @@
    *
    * @return array|int
    *   The query executed.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getEntities($entity_type_id) {
     $storage = $this->entityTypeManager->getStorage($entity_type_id);
@@ @@
   /**
    * Take query parameters from URL and use them in a database query.
    *
-   * @param \Drupal\Core\Entity\Query\QueryInterface $query
+   * @param QueryInterface $query
    *   The Query.
    */
   public function handleQueryParameters(QueryInterface &$query) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/entity_rest/src/Routing/EntityRestRouteSubscriber.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The configuration factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * The entity rest service.
    *
-   * @var \Drupal\entity_rest\Service\EntityRestService
+   * @var EntityRestService
    */
   protected $entityRestService;

@@ @@
   /**
    * Constructs a ContentTranslationRouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The configuration factory service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\entity_rest\Service\EntityRestService $entity_rest_service
+   * @param EntityRestService $entity_rest_service
    *   The entity rest service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_rest/src/Plugin/rest/resource/EntityRestEntityResource.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

   /**
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;

@@ @@
   /**
    * The entity rest service.
    *
-   * @var \Drupal\entity_rest\Service\EntityRestService
+   * @var EntityRestService
    */
   protected $entityRestService;

@@ @@
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Symfony\Component\HttpFoundation\Request $current_request
+   * @param Request $current_request
    *   The current request.
-   * @param \Drupal\entity_rest\Service\EntityRestService $entity_rest_service
+   * @param EntityRestService $entity_rest_service
    *   The entity rest service.
    */
   public function __construct(
@@ @@
    * @param null $api_identifier
    *   The API identifier of a specific entity.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The HTTP response object.
-   *
    */
   public function get($entity_api_name = NULL, $api_identifier = NULL): ResourceResponse {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_rest/src/Plugin/rest/resource/EntityRestEntitiesResource.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_rest\Plugin\rest\resource;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\entity_rest\Service\EntityRestService;
 use Drupal\rest\Annotation\RestResource;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

   /**
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;

@@ @@
   /**
    * The entity rest service.
    *
-   * @var \Drupal\entity_rest\Service\EntityRestService
+   * @var EntityRestService
    */
   protected $entityRestService;

@@ @@
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Symfony\Component\HttpFoundation\Request $current_request
+   * @param Request $current_request
    *   The current request.
-   * @param \Drupal\entity_rest\Service\EntityRestService $entity_rest_service
+   * @param EntityRestService $entity_rest_service
    *   The entity rest service.
    */
   public function __construct(
@@ @@
    * @param null $entity_api_name
    *   The custom API name for this entity bundle.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The HTTP response object.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function get($entity_api_name = NULL): ResourceResponse {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/entity_rest/src/Plugin/Derivative/EntityRestLocalTasks.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity rest service.
    *
-   * @var \Drupal\entity_rest\Service\EntityRestService
+   * @var EntityRestService
    */
   protected $entityRestService;

@@ @@
    *
    * @param string $base_plugin_id
    *   The base plugin ID.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
-   * @param \Drupal\entity_rest\Service\EntityRestService $entity_rest_service
+   * @param EntityRestService $entity_rest_service
    *   The entity rest service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/entity_rest/src/Form/EntityRestApiForm.php:15

    ---------- begin diff ----------
@@ @@

   /**
    * The route match service.
-   * @var \Drupal\Core\Routing\CurrentRouteMatch $route_match
+   * @var CurrentRouteMatch $route_match
    */
   protected $routeMatch;

@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The entity rest service.
    *
-   * @var \Drupal\entity_rest\Service\EntityRestService
+   * @var EntityRestService
    */
   protected $entityRestService;

@@ @@
   /**
    * Constructs a new EntityDisplayFormBase.
    *
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $route_match
+   * @param CurrentRouteMatch $route_match
    *   The route match service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface|null $entity_field_manager
+   * @param EntityFieldManagerInterface|null $entity_field_manager
    *   (optional) The entity field manager.
-   * @param \Drupal\entity_rest\Service\EntityRestService $entity_rest_service
+   * @param EntityRestService $entity_rest_service
    *   The entity rest service.
    */
   public function __construct(CurrentRouteMatch $route_match, EntityFieldManagerInterface $entity_field_manager, EntityRestService $entity_rest_service) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

