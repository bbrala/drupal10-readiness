modules/contrib/media_attribution/media_attribution.module
modules/contrib/media_attribution/src/Commands/MediaAttributionCommands.php
modules/contrib/media_attribution/src/LicenseLoader.php

2 files with changes
====================

1) modules/contrib/media_attribution/src/LicenseLoader.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_attribution;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\taxonomy\Entity\Term;
 use Drupal\file\Entity\File;
@@ @@
    *   URL for the license home page.
    * @return int
    *   The new term id.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function createOrUpdateLicenseTerm($term_title, $term_short_label, $icon_file_path, $license_url) {
     $tids = array_values(\Drupal::entityQuery('taxonomy_term')
@@ @@
    * @param $icon_file_path
    * @param $license_url
    * @return int
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function createLicenseTerm($term_title, $term_short_label, $icon_file_path, $license_url) {
     if ($icon_file_path) {
@@ @@
    * @param $term_short_label
    * @param $icon_file_path
    * @param $license_url
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function updateLicenseTerm($tid, $term_title, $term_short_label, $icon_file_path, $license_url) {
     $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
@@ @@
    *
    * @param $icon_file_path
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function updateLicenseIcon($icon_file_path) {
 // Just in case the file has already been created.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/media_attribution/media_attribution.module:151

    ---------- begin diff ----------
@@ @@
   $variables['children'] = [
     'first' => [
       '#type' => 'markup',
-      '#markup' => render($variables['children'])
+      '#markup' => \Drupal::service('renderer')->render($variables['children'])
     ],
     $attribution_text
   ];
@@ @@
  * Read the list of pre-defined Creative Commons media_attribution_licenses and create corresponding taxonomy terms.
  */
 function media_attribution_load_default_licenses() {
-  $file_path = drupal_get_path('module', 'media_attribution') . '/media_attribution.default.licenses.yml';
+  $file_path = \Drupal::service('extension.list.module')->getPath('media_attribution') . '/media_attribution.default.licenses.yml';
   $file_contents = file_get_contents($file_path);
   $license_data = Yaml::decode($file_contents);

   foreach ($license_data as $license_item) {
-    $icon_file_path = drupal_get_path('module', 'media_attribution') . "/" . $license_item['icon_file'];
+    $icon_file_path = \Drupal::service('extension.list.module')->getPath('media_attribution') . "/" . $license_item['icon_file'];
     LicenseLoader::createLicenseTerm($license_item['title'],$license_item['short_label'], $icon_file_path, $license_item['url']);
   }
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * RenderRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

