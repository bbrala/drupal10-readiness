modules/contrib/ipless/ipless.api.php
modules/contrib/ipless/ipless.install
modules/contrib/ipless/ipless.module
modules/contrib/ipless/src/Asset/AssetRenderer.php
modules/contrib/ipless/src/Asset/AssetRendererInterface.php
modules/contrib/ipless/src/Asset/AssetResolver.php
modules/contrib/ipless/src/Asset/AssetResolverInterface.php
modules/contrib/ipless/src/Commands/IplessCommands.php
modules/contrib/ipless/src/Controller/IplessController.php
modules/contrib/ipless/src/Event/IplessCompilationEvent.php
modules/contrib/ipless/src/Event/IplessEvents.php
modules/contrib/ipless/src/EventSubscriber/HtmlResponseIplessSubscriber.php
modules/contrib/ipless/src/Form/IpLessSettingForm.php
modules/contrib/ipless/src/Ipless.php
modules/contrib/ipless/src/IplessInterface.php

12 files with changes
=====================

1) modules/contrib/ipless/src/Ipless.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ipless;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Asset\AttachedAssets;
 use Drupal\Core\Asset\LibraryDiscoveryInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   use MessengerTrait;

   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

   /**
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

   /**
-   * @var \Drupal\ipless\Asset\AssetRendererInterface
+   * @var AssetRendererInterface
    */
   protected $assetRenderer;

   /**
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;

   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

   /**
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

   /**
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

   /**
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * Ipless constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
-   * @param \Drupal\ipless\Asset\AssetRendererInterface $assetRenderer
+   * @param ConfigFactoryInterface $configFactory
+   * @param MessengerInterface $messenger
+   * @param AssetRendererInterface $assetRenderer
    */
   public function __construct(ConfigFactoryInterface $configFactory, MessengerInterface $messenger, AssetRendererInterface $assetRenderer, LibraryDiscoveryInterface $libraryDiscovery, ModuleHandlerInterface $moduleHandler, ThemeHandlerInterface $themeHandler, FileSystemInterface $fileSystem, StateInterface $state) {
     $this->configFactory    = $configFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/ipless/src/Form/IpLessSettingForm.php:18

    ---------- begin diff ----------
@@ @@
    * Form Callback : Check settings.
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public static function checkSettings(array &$form, FormStateInterface $form_state) {
     $config = \Drupal::service('config.factory')
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/ipless/src/EventSubscriber/HtmlResponseIplessSubscriber.php:2

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ipless\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\ipless\Asset\AssetResolverInterface;
 use Drupal\ipless\IplessInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

@@ @@
 class HtmlResponseIplessSubscriber implements EventSubscriberInterface {

   /**
-   * @var \Drupal\ipless\IplessInterface
+   * @var IplessInterface
    */
   protected $ipless;

   /**
-   * @var \Drupal\ipless\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;

@@ @@
   /**
    * HtmlResponseIplessSubscriber constructor.
    *
-   * @param \Drupal\ipless\IplessInterface $ipless
+   * @param IplessInterface $ipless
    */
   public function __construct(IplessInterface $ipless, AssetResolverInterface $assetResolver) {
     $this->ipless        = $ipless;
@@ @@
   /**
    * Generate Less files.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     $response = $event->getResponse();

     if (!$response instanceof HtmlResponse || !$this->ipless->isEnabled()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/ipless/src/Event/IplessEvents.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ipless\Event;

-use Symfony\Component\EventDispatcher\Event;
-
 /**
  * Class event IplessEvent
  *
  * @author Damien LAGUERRE
  */
-final class IplessEvents extends Event {
+final class IplessEvents extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Name of the event fired when a less file is compiled.
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector


5) modules/contrib/ipless/src/Event/IplessCompilationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ipless\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\ipless\Asset\AssetRenderer;

 /**
@@ @@
   /**
    * Less AssetRenderer.
    *
-   * @var \Drupal\ipless\Asset\AssetRenderer
+   * @var AssetRenderer
    */
   protected $assetRender;

@@ @@
   /**
    * The constructor.
    *
-   * @param \Drupal\ipless\Asset\AssetRenderer $asset_renderer
+   * @param AssetRenderer $asset_renderer
    *   Less AssetRenderer.
    */
   public function __construct(AssetRenderer $asset_renderer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/ipless/src/Controller/IplessController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ipless\Controller;

+use Drupal\ipless\Ipless;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
 class IplessController extends ControllerBase {

   /**
-   * @var \Drupal\ipless\Ipless
+   * @var Ipless
    */
   protected $ipless;

@@ @@
   /**
    * IplessController constructor.
    *
-   * @param \Drupal\ipless\IplessInterface $ipless
+   * @param IplessInterface $ipless
    */
   public function __construct(IplessInterface $ipless) {
     $this->ipless = $ipless;
@@ @@
   /**
    * Route callback. This route is used by the watch mode script.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    */
   public function watching(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/ipless/src/Commands/IplessCommands.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Ipless service.
    *
-   * @var \Drupal\ipless\Ipless
+   * @var Ipless
    */
   protected $ipless;

@@ @@
   /**
    * IplessCommands constructor.
    *
-   * @param \Drupal\ipless\Ipless $ipless
+   * @param Ipless $ipless
    *   Ipless service.
    */
   public function __construct(Ipless $ipless) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/ipless/src/Asset/AssetResolverInterface.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Returns the CSS assets for the current response's libraries.
    *
-   * @param \Drupal\Core\Asset\AttachedAssetsInterface $assets
+   * @param AttachedAssetsInterface $assets
    *   The assets containing less declaration.
    */
   public function getLessAssets(AttachedAssetsInterface $assets);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/ipless/src/Asset/AssetResolver.php:54

    ---------- begin diff ----------
@@ @@
             $extension_type = 'theme';
           }

-          $path = drupal_get_path($extension_type, $extension);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+          $path = \Drupal::service('extension.path.resolver')->getPath($extension_type, $extension);
           $pathinfo = pathinfo($file);

           $options['data'] = $path . '/' . $file;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/ipless/src/Asset/AssetRenderer.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * Theme Handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Library Discovery
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;

@@ @@
   /**
    * Theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Less Asset Resolver.
    *
-   * @var \Drupal\ipless\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;

@@ @@
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * The current User.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * AssetRenderer constructor.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   Theme Handler service.
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $library_discovery
+   * @param LibraryDiscoveryInterface $library_discovery
    *   Library discover service.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   Theme manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\ipless\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   Asset resolver service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   Event dispatcher.
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The file system service.
    */
   public function __construct(ThemeHandlerInterface $theme_handler, LibraryDiscoveryInterface $library_discovery, ThemeManagerInterface $theme_manager, ConfigFactoryInterface $config_factory, AssetResolverInterface $asset_resolver, EventDispatcherInterface $event_dispatcher, AccountProxyInterface $currentUser, FileSystemInterface $fileSystem) {
@@ @@
       $less->parseFile($file, $path);

       $event = new IplessCompilationEvent($this);
-      $this->eventDispatcher->dispatch(IplessEvents::LESS_FILE_COMPILED, $event);
+      $this->eventDispatcher->dispatch($event, IplessEvents::LESS_FILE_COMPILED);

       $this->preparePath($output);
       file_put_contents($output, $less->getCss());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


11) modules/contrib/ipless/ipless.module:73

    ---------- begin diff ----------
@@ @@
  * Implements hook_page_attachments().
  */
 function ipless_page_attachments(array &$attachments) {
-  /** @var \Drupal\ipless\Ipless $ipless */
+  /** @var Ipless $ipless */
   $ipless = \Drupal::service('ipless.base');
   if ($ipless->isWatchModeEnable()) {
     $attachments['#attached']['library'][] = 'ipless/ipless.watching';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


12) modules/contrib/ipless/ipless.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Asset\AttachedAssetsInterface;
 /**
  * @file
  * Hooks for the ipless module.
@@ @@
  * @param array $less
  *   Less information.
  */
-function hook_less_alter(array $less, \Drupal\Core\Asset\AttachedAssetsInterface $assets){
+function hook_less_alter(array $less, AttachedAssetsInterface $assets){

 }
    ----------- end diff -----------

 [WARNING] 2 nodes were removed                                                 

 [OK] 12 files have been changed by Rector                                      

