diff --git a/misc.inc b/misc.inc
index ef6e00d..009d065 100755
--- a/misc.inc
+++ b/misc.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\block\Entity\Block;
 /**
  * @file
  * Miscellaneous MM functions
@@ -300,7 +301,7 @@ function mm_redirect_to_mmtid($mmtid, $hash = NULL) {
 /**
  * Redirect form processing to a particular MM page or unset redirection.
  *
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Form state object
  * @param null $mmtid
  *   If NULL, disable redirection. Otherwise, the MM Tree ID of the page to
@@ -1472,13 +1473,13 @@ function mm_get_args($path = NULL) {
  *
  * @param mixed[] $filters
  *   Optional list of filters to apply
- * @return Drupal\block\Entity\Block[]
+ * @return Block[]
  */
 function mm_get_mm_blocks($filters = []) {
   $list = \Drupal::entityTypeManager()->getStorage('block')->loadByProperties($filters + ['status' => TRUE, 'settings.provider' => 'monster_menus']);
   // Translate the keys using the delta set during creation.
   $result = [];
-  /** @var Drupal\block\Entity\Block $block */
+  /** @var Block $block */
   foreach ($list as $key => $block) {
     $result[$block->get('settings')['delta']] = $block;
   }
diff --git a/mm_content.inc b/mm_content.inc
index 2a17376..292cb38 100755
--- a/mm_content.inc
+++ b/mm_content.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\monster_menus\GetTreeIterator\ContentTestShowpageIter;
 /**
  * @file
  * Functions related to the retrieval of data for monster menus
@@ -3027,7 +3028,7 @@ function mm_content_is_recycle_bin($mmtid) {
  *
  * @param bool $allowed
  *   If set, only return the blocks the current user can apply to a page
- * @return Drupal\block\Entity\Block[]
+ * @return Block[]
  *   An array, indexed on block ID, containing Drupal\block\Entity\Block
  *   elements
  */
@@ -5894,7 +5895,7 @@ function mm_content_test_showpage_mmtid($mmtid) {
   $options = array();
   mm_module_invoke_all_array('url_outbound_alter', array(&$path, &$options, $path));
 
-  $iter = new \Drupal\monster_menus\GetTreeIterator\ContentTestShowpageIter(explode('/', $path));
+  $iter = new ContentTestShowpageIter(explode('/', $path));
   mm_content_get_tree($mmtid, array(Constants::MM_GET_TREE_ITERATOR => $iter));
   return $iter->match;
 }
diff --git a/mm_ui.inc b/mm_ui.inc
index fdcd7d9..b23cd98 100755
--- a/mm_ui.inc
+++ b/mm_ui.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\Config;
 /**
  * @file
  * User interface routines for monster_menus
@@ -73,7 +74,7 @@ function monster_menus_form_node_type_form_alter(&$form) {
     '#weight' => -1,
   );
   $form['#submit'][] = function($form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = \Drupal::service('config.factory')->getEditable('monster_menus.settings');
     $defaults = $config->get('nodes.default_region');
     $defaults[$form_state->getValue('type')] = $form_state->getValue('mm_default_region');
@@ -678,7 +679,7 @@ function monster_menus_form_node_preview_form_select_alter(array &$form) {
  *   The node updated with the submitted values.
  * @param array $form
  *   The complete form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  *
  * @see \Drupal\node\NodeForm::form()
diff --git a/modules/mm_fields/mm_fields_perms/mm_fields_perms.module b/modules/mm_fields/mm_fields_perms/mm_fields_perms.module
index 4d18f77..3bce183 100755
--- a/modules/mm_fields/mm_fields_perms/mm_fields_perms.module
+++ b/modules/mm_fields/mm_fields_perms/mm_fields_perms.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\webform\Entity\Webform;
 /**
  * @file
  * Apply Monster Menus permissions to entity fields.
@@ -43,7 +44,7 @@ function mm_fields_perms_form_alter(array &$form, FormStateInterface $form_state
   if ($entity instanceof FieldConfigInterface) {
     _mm_fields_perms_alter_field_config_form($form, $form_state, $entity);
   }
-  else if ($entity instanceof ConfigEntityBundleBase && !$entity instanceof Drupal\webform\Entity\Webform) {
+  else if ($entity instanceof ConfigEntityBundleBase && !$entity instanceof Webform) {
     _mm_fields_perms_alter_entity_config_form($form, $form_state, $entity);
   }
 }
diff --git a/modules/mm_fields/mm_fields_perms/src/FieldConfigListBuilder.php b/modules/mm_fields/mm_fields_perms/src/FieldConfigListBuilder.php
index d0d8811..4936ba4 100644
--- a/modules/mm_fields/mm_fields_perms/src/FieldConfigListBuilder.php
+++ b/modules/mm_fields/mm_fields_perms/src/FieldConfigListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mm_fields_perms;
 
+use Drupal\field\FieldConfigInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\monster_menus\Constants;
 
@@ -26,7 +27,7 @@ class FieldConfigListBuilder extends \Drupal\field_ui\FieldConfigListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $field_config) {
-    /** @var \Drupal\field\FieldConfigInterface $field_config */
+    /** @var FieldConfigInterface $field_config */
     $row = parent::buildRow($field_config);
 
     $settings = $field_config->getThirdPartySettings('mm_fields_perms');
diff --git a/modules/mm_media/tests/src/Kernel/DownloadTest.php b/modules/mm_media/tests/src/Kernel/DownloadTest.php
index 0ce1d72..b5a146f 100644
--- a/modules/mm_media/tests/src/Kernel/DownloadTest.php
+++ b/modules/mm_media/tests/src/Kernel/DownloadTest.php
@@ -81,7 +81,7 @@ class DownloadTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setInstallProfile('standard');
@@ -141,7 +141,7 @@ class DownloadTest extends KernelTestBase {
   /**
    * @inheritDoc
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     $privatePath = Settings::get('file_private_path');
     foreach ($this->cleanupFilenames as $fn) {
       unlink($privatePath . '/' . $fn);
@@ -424,7 +424,7 @@ class DownloadTest extends KernelTestBase {
    * @param string $media_source_name
    *   The name of the media source.
    *
-   * @return \Drupal\media\MediaTypeInterface
+   * @return MediaTypeInterface
    *   A media type.
    */
   protected function createMediaType($media_source_name) {
diff --git a/modules/mm_webform/src/RouteProcessor/OutboundRouteProcessor.php b/modules/mm_webform/src/RouteProcessor/OutboundRouteProcessor.php
index f73fc1b..0cd82c2 100644
--- a/modules/mm_webform/src/RouteProcessor/OutboundRouteProcessor.php
+++ b/modules/mm_webform/src/RouteProcessor/OutboundRouteProcessor.php
@@ -15,14 +15,14 @@ class OutboundRouteProcessor implements OutboundRouteProcessorInterface {
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
   /**
    * Constructs a OutboundRouteProcessor object.
    *
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
    */
   public function __construct(RouteProviderInterface $route_provider) {
diff --git a/modules/mm_workflow_access/src/Access/WorkflowHistoryAccess.php b/modules/mm_workflow_access/src/Access/WorkflowHistoryAccess.php
index 7193f7c..a8b291c 100644
--- a/modules/mm_workflow_access/src/Access/WorkflowHistoryAccess.php
+++ b/modules/mm_workflow_access/src/Access/WorkflowHistoryAccess.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\mm_workflow_access\Access;
 
+use Drupal\Core\Access\AccessResultAllowed;
+use Drupal\Core\Access\AccessResultForbidden;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -18,14 +20,14 @@ class WorkflowHistoryAccess implements AccessInterface {
   /**
    * Check if the user has permissions to view the Workflow tab.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Current user account.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   Current routeMatch.
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   Current route.
    *
-   * @return \Drupal\Core\Access\AccessResultAllowed|\Drupal\Core\Access\AccessResultForbidden
+   * @return AccessResultAllowed|AccessResultForbidden
    *   If the user can access this workflow.
    */
   public function access(AccountInterface $account, RouteMatchInterface $routeMatch, Route $route) {
diff --git a/monster_menus.module b/monster_menus.module
index 6fdef18..2de7314 100755
--- a/monster_menus.module
+++ b/monster_menus.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Component\Utility\Html;
+use Drupal\Core\Block\BlockPluginInterface;
 /**
  * @file
  * Menus, menus, menus
@@ -437,7 +439,7 @@ function monster_menus_preprocess_page(&$variables) {
         _mm_render_nodes($nids[$region], $scheduled, $item->previews ? 'teaser' : 'full', FALSE, $output, $rss_link);
         if ($output) {
           $page[$region]['wrapper'] = array(
-            '#prefix' => '<div id="' . \Drupal\Component\Utility\Html::getId("block-monster-menus-$region") . '" class="block block-monster-menus">',
+            '#prefix' => '<div id="' . Html::getId("block-monster-menus-$region") . '" class="block block-monster-menus">',
             $output,
             '#suffix' => '</div>',
           );
@@ -1083,7 +1085,7 @@ function monster_menus_mail($key, &$message, $params) {
 /**
  * Implements hook_block_view_BASE_BLOCK_ID_alter() for 'mm_tree_block'.
  */
-function monster_menus_block_view_mm_tree_block_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
+function monster_menus_block_view_mm_tree_block_alter(array &$build, BlockPluginInterface $block) {
   $build['#pre_render'][] = function($build) use($block) {
     // Set the user-facing label based on whatever was generated by the build()
     // method.
diff --git a/src/Annotation/MMTreeBrowserDisplay.php b/src/Annotation/MMTreeBrowserDisplay.php
index c8e403e..205a27e 100644
--- a/src/Annotation/MMTreeBrowserDisplay.php
+++ b/src/Annotation/MMTreeBrowserDisplay.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\monster_menus\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -29,7 +30,7 @@ class MMTreeBrowserDisplay extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
diff --git a/src/Element/MMCatlist.php b/src/Element/MMCatlist.php
index 0d7e4d8..d273311 100644
--- a/src/Element/MMCatlist.php
+++ b/src/Element/MMCatlist.php
@@ -329,7 +329,7 @@ class MMCatlist extends FormElement {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @return array
    *   The form element.
diff --git a/src/Form/ConfigForm.php b/src/Form/ConfigForm.php
index 8a7d9d9..22dd946 100755
--- a/src/Form/ConfigForm.php
+++ b/src/Form/ConfigForm.php
@@ -21,7 +21,7 @@ class ConfigForm extends ConfigFormBase {
   /**
    * The permission handler.
    *
-   * @var \Drupal\user\PermissionHandlerInterface
+   * @var PermissionHandlerInterface
    */
   protected $permissionHandler;
 
diff --git a/src/Form/CopyMoveContentForm.php b/src/Form/CopyMoveContentForm.php
index a315d86..cb9b1ac 100755
--- a/src/Form/CopyMoveContentForm.php
+++ b/src/Form/CopyMoveContentForm.php
@@ -14,7 +14,7 @@ class CopyMoveContentForm extends FormBase {
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/Form/DeleteContentConfirmForm.php b/src/Form/DeleteContentConfirmForm.php
index 0ddd9de..28faca0 100755
--- a/src/Form/DeleteContentConfirmForm.php
+++ b/src/Form/DeleteContentConfirmForm.php
@@ -24,7 +24,7 @@ class DeleteContentConfirmForm extends ConfirmFormBase {
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/Form/EditContentForm.php b/src/Form/EditContentForm.php
index 6bf2442..81ff4ab 100755
--- a/src/Form/EditContentForm.php
+++ b/src/Form/EditContentForm.php
@@ -25,7 +25,7 @@ class EditContentForm extends FormBase {
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/Form/ImportTreeForm.php b/src/Form/ImportTreeForm.php
index 063e7e5..47175c1 100755
--- a/src/Form/ImportTreeForm.php
+++ b/src/Form/ImportTreeForm.php
@@ -15,7 +15,7 @@ class ImportTreeForm extends FormBase {
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/Form/ListSitesForm.php b/src/Form/ListSitesForm.php
index 2b23bb5..35e6f7f 100644
--- a/src/Form/ListSitesForm.php
+++ b/src/Form/ListSitesForm.php
@@ -21,7 +21,7 @@ class ListSitesForm extends FormBase {
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/GetTreeIterator/ContentMoveIter.php b/src/GetTreeIterator/ContentMoveIter.php
index ee4044a..a60ecd8 100755
--- a/src/GetTreeIterator/ContentMoveIter.php
+++ b/src/GetTreeIterator/ContentMoveIter.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\monster_menus\GetTreeIterator;
 
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Database;
 use Drupal\monster_menus\Constants;
 use Drupal\monster_menus\GetTreeIterator;
@@ -10,7 +11,7 @@ class ContentMoveIter extends GetTreeIterator{
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/GetTreeIterator/MMExportIter.php b/src/GetTreeIterator/MMExportIter.php
index 45cdc0c..4c02ce3 100644
--- a/src/GetTreeIterator/MMExportIter.php
+++ b/src/GetTreeIterator/MMExportIter.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\monster_menus\GetTreeIterator;
 
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Database;
 use Drupal\monster_menus\Constants;
 use Drupal\monster_menus\GetTreeIterator;
@@ -17,7 +18,7 @@ class MMExportIter extends GetTreeIterator {
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
   protected $contentExporter;
diff --git a/src/MMTreeAccessControlHandler.php b/src/MMTreeAccessControlHandler.php
index 87328ec..fdce8dc 100644
--- a/src/MMTreeAccessControlHandler.php
+++ b/src/MMTreeAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\monster_menus;
 
+use Drupal\monster_menus\Entity\MMTree;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -19,7 +20,7 @@ class MMTreeAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\monster_menus\Entity\MMTree $entity */
+    /** @var MMTree $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIf(mm_content_user_can($entity->id(), Constants::MM_PERMS_READ, $account));
diff --git a/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayInterface.php b/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayInterface.php
index b391db3..c274947 100644
--- a/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayInterface.php
+++ b/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\monster_menus\MMTreeBrowserDisplay;
 
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\HttpFoundation\ParameterBag;
 
@@ -75,7 +76,7 @@ interface MMTreeBrowserDisplayInterface extends ContainerFactoryPluginInterface
    *   The page's permissions.
    * @param $item
    *   Object describing the tree entry.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    * @return string HTML code.
    *   HTML code.
diff --git a/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayManager.php b/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayManager.php
index 92c12ce..04f85bc 100644
--- a/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayManager.php
+++ b/src/MMTreeBrowserDisplay/MMTreeBrowserDisplayManager.php
@@ -21,9 +21,9 @@ class MMTreeBrowserDisplayManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Block/MMTreeBlock.php b/src/Plugin/Block/MMTreeBlock.php
index f26ff9f..637b44c 100644
--- a/src/Plugin/Block/MMTreeBlock.php
+++ b/src/Plugin/Block/MMTreeBlock.php
@@ -29,7 +29,7 @@ class MMTreeBlock extends BlockBase implements ContainerFactoryPluginInterface {
   /**
    * The route match.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
diff --git a/src/Plugin/migrate/destination/Role2Group.php b/src/Plugin/migrate/destination/Role2Group.php
index c6dfe52..e4e8534 100644
--- a/src/Plugin/migrate/destination/Role2Group.php
+++ b/src/Plugin/migrate/destination/Role2Group.php
@@ -32,7 +32,7 @@ class Role2Group extends DestinationBase implements ContainerFactoryPluginInterf
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration.
    * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
diff --git a/src/Plugin/migrate/destination/TreeBookmarks.php b/src/Plugin/migrate/destination/TreeBookmarks.php
index de6b791..89a1e35 100644
--- a/src/Plugin/migrate/destination/TreeBookmarks.php
+++ b/src/Plugin/migrate/destination/TreeBookmarks.php
@@ -32,7 +32,7 @@ class TreeBookmarks extends DestinationBase implements ContainerFactoryPluginInt
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration.
    * @param Connection $database
    *   The database interface.
diff --git a/src/Plugin/views/relationship/SequentialJoin.php b/src/Plugin/views/relationship/SequentialJoin.php
index a7836dd..f93144d 100644
--- a/src/Plugin/views/relationship/SequentialJoin.php
+++ b/src/Plugin/views/relationship/SequentialJoin.php
@@ -24,7 +24,7 @@ class SequentialJoin extends RelationshipPluginBase {
   /**
    * Constructs a SequentialJoin object.
    *
-   * @param \Drupal\views\Plugin\ViewsHandlerManager $join_manager
+   * @param ViewsHandlerManager $join_manager
    *   The views plugin join manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ViewsHandlerManager $join_manager) {
diff --git a/src/Theme/PageThemeNegotiator.php b/src/Theme/PageThemeNegotiator.php
index c8a9776..d6a2b6d 100644
--- a/src/Theme/PageThemeNegotiator.php
+++ b/src/Theme/PageThemeNegotiator.php
@@ -19,14 +19,14 @@ class PageThemeNegotiator implements ThemeNegotiatorInterface {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Constructs a PageThemeNegotiator object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(Connection $database) {
diff --git a/tests/src/Functional/Permissions/PermissionsTest.php b/tests/src/Functional/Permissions/PermissionsTest.php
index 85b38c3..5734a3a 100755
--- a/tests/src/Functional/Permissions/PermissionsTest.php
+++ b/tests/src/Functional/Permissions/PermissionsTest.php
@@ -47,7 +47,7 @@ class PermissionsTest extends BrowserTestBase {
   /**
    * @inheritDoc
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Prevent mm_content_delete() from printing deletion stats.
diff --git a/tests/src/Kernel/migrate/MonsterMenusMigrationTestBase.php b/tests/src/Kernel/migrate/MonsterMenusMigrationTestBase.php
index 252f93b..2bbf9c9 100644
--- a/tests/src/Kernel/migrate/MonsterMenusMigrationTestBase.php
+++ b/tests/src/Kernel/migrate/MonsterMenusMigrationTestBase.php
@@ -14,7 +14,7 @@ abstract class MonsterMenusMigrationTestBase extends MigrateDrupalTestBase
     /**
      * {@inheritdoc}
      */
-    public function setUp()
+    public function setUp(): void
     {
         parent::setUp();
         //$this->loadFixture(__DIR__ . '/../../../fixtures/migrate/drupal7.php');
diff --git a/tests/src/Unit/Controller/DefaultControllerTest.php b/tests/src/Unit/Controller/DefaultControllerTest.php
index b48b055..0cecd6d 100755
--- a/tests/src/Unit/Controller/DefaultControllerTest.php
+++ b/tests/src/Unit/Controller/DefaultControllerTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\monster_menus\Unit\Controller;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Database\Connection;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Session\AccountInterface;
@@ -15,28 +18,27 @@ use Drupal\user\Entity\User;
  */
 class DefaultControllerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The mocked database connection.
    *
-   * @var \Drupal\Core\Database\Connection|\PHPUnit_Framework_MockObject_MockObject
+   * @var Connection|MockObject
    */
   protected $database;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
-    $this->database = $this->getMockBuilder('\Drupal\Core\Database\Connection')
-                            ->disableOriginalConstructor()
-                            ->getMock();
+    $this->database = $this->createMock('\Drupal\Core\Database\Connection');
   }
 
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     parent::tearDown();
     $container = new ContainerBuilder();
     \Drupal::setContainer($container);
diff --git a/tests/src/Unit/Controller/MMTreeBrowserControllerTest.php b/tests/src/Unit/Controller/MMTreeBrowserControllerTest.php
index e107898..44e9036 100755
--- a/tests/src/Unit/Controller/MMTreeBrowserControllerTest.php
+++ b/tests/src/Unit/Controller/MMTreeBrowserControllerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\monster_menus\Unit\Controller;
 
+use Drupal\Core\Database\Connection;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Drupal\monster_menus\Controller\MMTreeBrowserController;
 
@@ -14,19 +16,17 @@ class MMTreeBrowserControllerTest extends UnitTestCase {
   /**
    * The mocked database connection.
    *
-   * @var \Drupal\Core\Database\Connection|\PHPUnit_Framework_MockObject_MockObject
+   * @var Connection|MockObject
    */
   protected $database;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
-    $this->database = $this->getMockBuilder('\Drupal\Core\Database\Connection')
-                            ->disableOriginalConstructor()
-                            ->getMock();
+    $this->database = $this->createMock('\Drupal\Core\Database\Connection');
   }
 
   /**
@@ -40,9 +40,7 @@ class MMTreeBrowserControllerTest extends UnitTestCase {
       ->method('getCurrentRequest')
       ->willReturn($this->createMock('Symfony\Component\HttpFoundation\Request'));
 
-    $renderer = $this->getMockBuilder('Drupal\Core\Render\Renderer')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $renderer = $this->createMock('Drupal\Core\Render\Renderer');
 
     $plugin_manager = $this->createMock('Drupal\Component\Plugin\PluginManagerInterface');
 
diff --git a/tests/src/Unit/Controller/MMTreeViewControllerTest.php b/tests/src/Unit/Controller/MMTreeViewControllerTest.php
index 1481ebb..e06af46 100755
--- a/tests/src/Unit/Controller/MMTreeViewControllerTest.php
+++ b/tests/src/Unit/Controller/MMTreeViewControllerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\monster_menus\Unit\Controller;
 
+use Drupal\Core\Database\Connection;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Drupal\monster_menus\Controller\MMTreeViewController;
 
@@ -14,19 +16,17 @@ class MMTreeViewControllerTest extends UnitTestCase {
   /**
    * The mocked database connection.
    *
-   * @var \Drupal\Core\Database\Connection|\PHPUnit_Framework_MockObject_MockObject
+   * @var Connection|MockObject
    */
   protected $database;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
-    $this->database = $this->getMockBuilder('\Drupal\Core\Database\Connection')
-                            ->disableOriginalConstructor()
-                            ->getMock();
+    $this->database = $this->createMock('\Drupal\Core\Database\Connection');
   }
 
   /**
diff --git a/tests/src/Unit/MMTreeAccessControlHandlerTest.php b/tests/src/Unit/MMTreeAccessControlHandlerTest.php
index d69ef66..9813d43 100755
--- a/tests/src/Unit/MMTreeAccessControlHandlerTest.php
+++ b/tests/src/Unit/MMTreeAccessControlHandlerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\monster_menus\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ -16,17 +18,18 @@ use Drupal\monster_menus\MMTreeAccessControlHandler;
  */
 class MMTreeAccessControlHandlerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The mocked class instance.
    *
-   * @var \Drupal\monster_menus\MMTreeAccessControlHandler|\PHPUnit_Framework_MockObject_MockObject
+   * @var MMTreeAccessControlHandler|MockObject
    */
   protected $MMTreeAccessControlHandler;
 
   /**
    * The mocked entity type.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var EntityTypeInterface|MockObject
    */
   protected $entityType;
 
@@ -40,7 +43,7 @@ class MMTreeAccessControlHandlerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->entityType = $this->createMock('Drupal\Core\Entity\EntityTypeInterface');
@@ -58,7 +61,7 @@ class MMTreeAccessControlHandlerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     parent::tearDown();
     $container = new ContainerBuilder();
     \Drupal::setContainer($container);
diff --git a/tests/src/Unit/Menu/LocalTask/MMLocalTasksTest.php b/tests/src/Unit/Menu/LocalTask/MMLocalTasksTest.php
index 031e686..29ff323 100755
--- a/tests/src/Unit/Menu/LocalTask/MMLocalTasksTest.php
+++ b/tests/src/Unit/Menu/LocalTask/MMLocalTasksTest.php
@@ -11,7 +11,7 @@ use Drupal\Tests\Core\Menu\LocalTaskIntegrationTestBase;
  */
 class MMLocalTasksTest extends LocalTaskIntegrationTestBase {
 
-  protected function setUp() {
+  protected function setUp(): void {
     $this->directoryList = array('monster_menus' => 'modules/contrib/monster_menus');
     parent::setUp();
   }
