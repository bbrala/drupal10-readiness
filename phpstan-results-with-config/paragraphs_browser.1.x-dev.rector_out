modules/contrib/paragraphs_browser/paragraphs_browser.install
modules/contrib/paragraphs_browser/paragraphs_browser.module
modules/contrib/paragraphs_browser/src/Ajax/AddParagraphTypeCommand.php
modules/contrib/paragraphs_browser/src/BrowserGroupItem.php
modules/contrib/paragraphs_browser/src/BrowserGroupList.php
modules/contrib/paragraphs_browser/src/BrowserTypeInterface.php
modules/contrib/paragraphs_browser/src/Controller/BrowserListBuilder.php
modules/contrib/paragraphs_browser/src/Controller/ParagraphsBrowserController.php
modules/contrib/paragraphs_browser/src/Entity/BrowserType.php
modules/contrib/paragraphs_browser/src/Form/BrowserGroupsForm.php
modules/contrib/paragraphs_browser/src/Form/BrowserTypeDeleteConfirm.php
modules/contrib/paragraphs_browser/src/Form/BrowserTypeForm.php
modules/contrib/paragraphs_browser/src/Form/GroupAddForm.php
modules/contrib/paragraphs_browser/src/Form/GroupDeleteConfirm.php
modules/contrib/paragraphs_browser/src/Form/GroupEditForm.php
modules/contrib/paragraphs_browser/src/Form/ParagraphTypeGroupsForm.php
modules/contrib/paragraphs_browser/src/Form/ParagraphsBrowserForm.php
modules/contrib/paragraphs_browser/src/ParagraphsBrowserManager.php
modules/contrib/paragraphs_browser/src/Plugin/Field/FieldWidget/InlineParagraphsBrowserWidget.php
modules/contrib/paragraphs_browser/src/Plugin/Field/FieldWidget/InlineParagraphsBrowserWidgetTrait.php
modules/contrib/paragraphs_browser/src/Plugin/Field/FieldWidget/ParagraphsBrowserWidget.php
modules/contrib/paragraphs_browser/src/Plugin/Field/FieldWidget/ParagraphsBrowserWidgetTrait.php

11 files with changes
=====================

1) modules/contrib/paragraphs_browser/src/ParagraphsBrowserManager.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface;
+   * @var EntityTypeManagerInterface ;
    */
   protected $entityTypeManager;
   /**
    * Constructs a BrowserManager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/paragraphs_browser/src/Form/ParagraphsBrowserForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\paragraphs_browser\Form;

+use Drupal\paragraphs\ParagraphsTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\CloseModalDialogCommand;
@@ @@
   protected $entity;

   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

   /**
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Constructs a new ParagraphsTypeDeleteConfirm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, ModuleHandlerInterface $module_handler, AccountInterface $current_user) {
@@ @@
         '#markup' => '<h2>' . $groups[$group_machine_name]->getLabel() . '</h2>',
       ];
       foreach($items as $paragraph_type) {
-        /** @var \Drupal\paragraphs\ParagraphsTypeInterface $paragraph_type */
-
+        /** @var ParagraphsTypeInterface $paragraph_type */
         $element = [
           '#theme' => 'paragraphs_browser_paragraph_type'
         ];
@@ @@

         if($image_path = $paragraph_type->getThirdPartySetting('paragraphs_browser', 'image_path', $default = NULL)) {
           // If there is a paragraphs browser image, use it
-          $src = file_create_url($image_path);
+          $src = \Drupal::service('file_url_generator')->generateAbsoluteString($image_path);
         } else {
           // Otherwise, default to paragraphs icon
           $src = $paragraph_type->getIconUrl();
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/paragraphs_browser/src/Form/ParagraphTypeGroupsForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\paragraphs_browser\Form;

+use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\paragraphs\ParagraphsTypeInterface;
@@ @@
   /**
    * Drupal entityTypeManager
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Provides messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a new ParagraphsTypeDeleteConfirm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, MessengerInterface $messenger) {
@@ @@
    * Secondary submit handler
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function save(array $form, FormStateInterface $form_state) {
     $build_info = $form_state->getBuildInfo();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/paragraphs_browser/src/Form/GroupEditForm.php:82

    ---------- begin diff ----------
@@ @@
    * Secondary submit handler to save entity after group has been updated
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function save(array $form, FormStateInterface $form_state) {
     $this->entity->save();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/paragraphs_browser/src/Form/GroupDeleteConfirm.php:56

    ---------- begin diff ----------
@@ @@
    * Secondary submit handler, saves entity after group has been removed
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function save(array $form, FormStateInterface $form_state) {
     $this->entity->save();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/paragraphs_browser/src/Form/GroupAddForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\paragraphs_browser\Form;

+use Drupal\paragraphs_browser\Entity\BrowserType;
+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The index for which the fields are configured.
    *
-   * @var \Drupal\paragraphs_browser\Entity\BrowserType
+   * @var BrowserType
    */
   protected $entity;

@@ @@
   /**
    * The shared temporary storage for unsaved search indexes.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a CropWidgetForm object.
    *
-   * @param \Drupal\Core\TempStore\SharedTempStoreFactory $temp_store_factory
+   * @param SharedTempStoreFactory $temp_store_factory
    *   The factory for shared temporary storages.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(SharedTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/paragraphs_browser/src/Form/BrowserGroupsForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\paragraphs_browser\Form;

+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The shared temporary storage for unsaved search indexes.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a CropWidgetForm object.
    *
-   * @param \Drupal\Core\TempStore\SharedTempStoreFactory $temp_store_factory
+   * @param SharedTempStoreFactory $temp_store_factory
    *   The factory for shared temporary storages.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(SharedTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancel(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/paragraphs_browser/src/Entity/BrowserType.php:70

    ---------- begin diff ----------
@@ @@
    *
    * On presave, items here are saved back to $groups;
    *
-   * @var \Drupal\paragraphs_browser\BrowserGroupList|null
+   * @var BrowserGroupList|null
    */
   protected $groupList;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/paragraphs_browser/src/Controller/BrowserListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\paragraphs_browser\Controller;

+use Drupal\field\FieldConfigInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;

@@ @@
    * {@inheritdoc}
    */
   public function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\field\FieldConfigInterface $entity */
+    /** @var FieldConfigInterface $entity */
     $operations = parent::getDefaultOperations($entity);

     if (isset($operations['edit'])) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/paragraphs_browser/src/BrowserGroupList.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * @param integer $id
    *
-   * @return \Drupal\paragraphs_browser\BrowserGroupItem
+   * @return BrowserGroupItem
    */
   public function getGroup($id) {
     return isset($this->groups[$id]) ? $this->groups[$id] : null;
@@ @@
   }

   /**
-   * @param \Drupal\paragraphs_browser\BrowserGroupItem $group
+   * @param BrowserGroupItem $group
    */
   public function setGroup(BrowserGroupItem $group) {
     $this->groups[$group->getId()] = $group;
@@ @@
    * @param string $label
    * @param integer $weight
    *
-   * @return \Drupal\paragraphs_browser\BrowserGroupItem
+   * @return BrowserGroupItem
    */
   public function addGroup($machine_name, $label, $weight = null) {
     if(is_null($weight)) {
@@ @@
   /**
    * Gets the last group in the list
    *
-   * @return \Drupal\paragraphs_browser\BrowserGroupItem
+   * @return BrowserGroupItem
    */
   public function getLastGroup() {
     foreach($this->getGroups() as $group) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/paragraphs_browser/paragraphs_browser.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\paragraphs\Entity\ParagraphsType;
 /**
@@ @@
  *
  * @param $name
  *
- * @return \Drupal\Core\Entity\EntityInterface|null|static
+ * @return EntityInterface|null|static
  */
 function paragraphs_browser_type_load($name) {
   return BrowserType::load($name);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 11 files have been changed by Rector                                      

