modules/contrib/contribute/contribute.install
modules/contrib/contribute/contribute.module
modules/contrib/contribute/src/ContributeManager.php
modules/contrib/contribute/src/ContributeManagerInterface.php
modules/contrib/contribute/src/Controller/ContributeAutocompleteController.php
modules/contrib/contribute/src/Form/ContributeSettingsForm.php
modules/contrib/contribute/src/Plugin/Block/CommunityInformationBlock.php
modules/contrib/contribute/tests/src/Functional/ContributeFunctionalTest.php

6 files with changes
====================

1) modules/contrib/contribute/tests/src/Functional/ContributeFunctionalTest.php:39

    ---------- begin diff ----------
@@ @@
       'account_type' => 'user',
       'user_id' => 'jrockowitz',
     ];
-    $this->drupalPostForm('/admin/reports/status/contribute/configure', $edit, $this->t('Save'));
+    $this->drupalGet('/admin/reports/status/contribute/configure');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->responseContains('Community information has been saved.');
     $this->assertSession()->responseContains('Community information');
     $this->assertSession()->responseNotContains('When you <a href="https://register.drupal.org/user/register">create a Drupal.org account</a>, you gain access to a whole ecosystem of Drupal.org sites and services.');
     $this->assertSession()->responseContains('<strong><a href="https://www.drupal.org/u/jrockowitz">Jacob Rockowitz</a></strong>');
+    $this->drupalGet('/admin/reports/status/contribute/configure');

     // Check that 'Community information' can be cleared.
-    $this->drupalPostForm('/admin/reports/status/contribute/configure', [], $this->t('Clear'));
+    $this->submitForm([], $this->t('Clear'));
     $this->assertSession()->responseContains('Community information has been cleared.');
     $this->assertSession()->responseNotContains('<strong><a href="https://www.drupal.org/u/jrockowitz">Jacob Rockowitz</a></strong>');

     // Check that 'Community information' can be disabled.
     $edit = ['disable' => TRUE];
-    $this->drupalPostForm('/admin/reports/status/contribute/configure', $edit, $this->t('Save'));
+    $this->drupalGet('/admin/reports/status/contribute/configure');
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->responseContains('Community information has been disabled.');

     // Check that 'Community information' can be remove.
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/contribute/src/Plugin/Block/CommunityInformationBlock.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The contribute manager.
    *
-   * @var \Drupal\contribute\ContributeManagerInterface
+   * @var ContributeManagerInterface
    */
   protected $contributeManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\contribute\ContributeManagerInterface $contribute_manager
+   * @param ContributeManagerInterface $contribute_manager
    *   The contribute manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ContributeManagerInterface $contribute_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/contribute/src/Form/ContributeSettingsForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The contribute manager.
    *
-   * @var \Drupal\contribute\ContributeManagerInterface
+   * @var ContributeManagerInterface
    */
   protected $contributeManager;

@@ @@
   /**
    * Constructs a ContributeSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\contribute\ContributeManagerInterface $contribute_manager
+   * @param ContributeManagerInterface $contribute_manager
    *   The contribute manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ContributeManagerInterface $contribute_manager) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An Ajax response that display validation error messages or redirects
    *   to a URL
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/contribute/src/Controller/ContributeAutocompleteController.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Constructs a ContributeAutocompleteController object.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The Guzzle HTTP client.
    */
   public function __construct(ClientInterface $http_client) {
@@ @@
   /**
    * Returns account type autocomplete matches.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param string $account_type
    *   The account type to autocomplete.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The JSON response.
    */
   public function autocomplete(Request $request, $account_type = 'user') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/contribute/src/ContributeManager.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * The default cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * The Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new ContributeManager object.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The default cache bin.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The Guzzle HTTP client.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(CacheBackendInterface $cache, ClientInterface $http_client, DateFormatterInterface $date_formatter, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/contribute/contribute.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\contribute\ContributeManagerInterface;
 /**
  * @file
  * Encourages people to join and contribute to the Drupal community.
@@ @@
     return;
   }

-  /** @var \Drupal\contribute\ContributeManagerInterface $contribute_manager */
+  /** @var ContributeManagerInterface $contribute_manager */
   $contribute_manager = \Drupal::service('contribute.manager');

   $value = '';
@@ @@

   $contribution = $contribute_manager->getContribution();
   if ($contribution  && !empty($contribution['status'])) {
-    $url = base_path() . drupal_get_path('module', 'contribute') . '/images/icons/drupal.svg';
+    $url = base_path() . \Drupal::service('extension.list.module')->getPath('contribute') . '/images/icons/drupal.svg';
     $value .= '#contribute-info-contribution:before {background-image: url(' . $url . ')}';
   }
   $page['#attached']['html_head'][] = [
@@ @@
  * @see system/templates/status-report-page.html.twig
  */
 function contribute_preprocess_status_report_page(&$variables) {
-  /** @var \Drupal\contribute\ContributeManagerInterface $contribute_manager */
+  /** @var ContributeManagerInterface $contribute_manager */
   $contribute_manager = \Drupal::service('contribute.manager');

   if ($contribute_manager->getStatus()) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

