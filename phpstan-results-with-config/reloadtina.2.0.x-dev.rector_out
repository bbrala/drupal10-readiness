modules/contrib/reloadtina/reloadtina.module
modules/contrib/reloadtina/src/Controller/ImageStyleDownloadController.php
modules/contrib/reloadtina/src/Form/SettingsForm.php
modules/contrib/reloadtina/src/ParamConverter/ReloadTinaParamConverter.php
modules/contrib/reloadtina/src/Routing/RouteSubscriber.php

2 files with changes
====================

1) modules/contrib/reloadtina/src/Controller/ImageStyleDownloadController.php:20

    ---------- begin diff ----------
@@ @@
    *
    * After generating an image, transfer it to the requesting agent.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    * @param string $scheme
    *   The file scheme, defaults to 'private'.
-   * @param \Drupal\image\ImageStyleInterface $image_style
+   * @param ImageStyleInterface $image_style
    *   The image style to deliver.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse|\Symfony\Component\HttpFoundation\Response
+   * @return BinaryFileResponse|Response
    *   The transferred file as response or some error response.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Thrown when the user does not have access to the file.
-   * @throws \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException
+   * @throws ServiceUnavailableHttpException
    *   Thrown when the file is still being generated.
    */
   public function deliver(Request $request, $scheme, ImageStyleInterface $image_style) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/reloadtina/reloadtina.module:0

    ---------- begin diff ----------
@@ @@
 <?php
+use Drupal\image\ImageStyleInterface;
+use Drupal\image\ImageEffectInterface;
 /**
  * @file
  * ReloadTina!
@@ @@
 /**
  * Build derivative uri for retina image style.
  *
- * @param \Drupal\image\ImageStyleInterface $image_style
+ * @param ImageStyleInterface $image_style
  *   The image style.
  * @param $image_uri
  *   The image URI.
@@ @@
     return Url::fromUri('base:' . $directory_path . '/' . \Drupal::service('stream_wrapper_manager')->getTarget($uri), array('absolute' => TRUE, 'query' => $token_query))->toString();
   }

-  $file_url = file_create_url($uri);
+  $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
   // Append the query string with the token, if necessary.
   if ($token_query) {
     $file_url .= (strpos($file_url, '?') !== FALSE ? '&' : '?') . UrlHelper::buildQuery($token_query);
@@ @@
 /**
  * Apply multiplication to image_style effects.
  *
- * @param \Drupal\image\ImageStyleInterface $image_style
+ * @param ImageStyleInterface $image_style
  *   The image style.
  * @param float $multiplier
  *   The multiplier.
@@ @@
 /**
  * Apply multiplication to effect.
  *
- * @param \Drupal\image\ImageEffectInterface $effect
+ * @param ImageEffectInterface $effect
  *   The effect.
  * @param $multiplier
  *   The multiplier
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

