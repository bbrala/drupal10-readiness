diff --git a/src/Controller/SeckitExportController.php b/src/Controller/SeckitExportController.php
index 271afc9..2b315cb 100644
--- a/src/Controller/SeckitExportController.php
+++ b/src/Controller/SeckitExportController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\seckit\Controller;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Psr\Log\LoggerInterface;
@@ -17,14 +18,14 @@ class SeckitExportController extends ControllerBase implements ContainerInjectio
   /**
    * Logger instance.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Constructs an SeckitExportController object.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   LoggerInterface.
    */
   public function __construct(LoggerInterface $logger) {
diff --git a/src/EventSubscriber/SecKitEventSubscriber.php b/src/EventSubscriber/SecKitEventSubscriber.php
index 42b1f87..cb40df3 100644
--- a/src/EventSubscriber/SecKitEventSubscriber.php
+++ b/src/EventSubscriber/SecKitEventSubscriber.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\seckit\EventSubscriber;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Utility\Xss;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -9,8 +12,6 @@ use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\seckit\SeckitInterface;
 use Psr\Log\LoggerInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
 
@@ -24,7 +25,7 @@ class SecKitEventSubscriber implements EventSubscriberInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
@@ -38,23 +39,23 @@ class SecKitEventSubscriber implements EventSubscriberInterface {
   /**
    * Response object.
    *
-   * @var \Symfony\Component\HttpFoundation\Response
+   * @var Response
    */
   protected $response;
 
   /**
    * Logger instance.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Constructs an SecKitEventSubscriber object.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The Seckit logger channel.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
@@ -65,10 +66,10 @@ class SecKitEventSubscriber implements EventSubscriberInterface {
   /**
    * Executes actions on the request event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   Event Response Object.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $this->request = $event->getRequest();
 
     // Execute necessary functions.
@@ -80,10 +81,10 @@ class SecKitEventSubscriber implements EventSubscriberInterface {
   /**
    * Executes actions on the response event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   Filter Response Event object.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $this->response = $event->getResponse();
 
     // Execute necessary functions.
@@ -409,7 +410,7 @@ class SecKitEventSubscriber implements EventSubscriberInterface {
         $this->config->get('seckit_clickjacking.noscript_message');
 
     $message = Xss::filter($noscript_message);
-    $path = base_path() . drupal_get_path('module', 'seckit');
+    $path = base_path() . \Drupal::service('extension.list.module')->getPath('seckit');
     return <<< EOT
         <script type="text/javascript" src="$path/js/seckit.document_write.js"></script>
         <link type="text/css" rel="stylesheet" id="seckit-clickjacking-no-body" media="all" href="$path/css/seckit.no_body.css" />
diff --git a/src/Form/SecKitSettingsForm.php b/src/Form/SecKitSettingsForm.php
index f908077..387377e 100644
--- a/src/Form/SecKitSettingsForm.php
+++ b/src/Form/SecKitSettingsForm.php
@@ -19,25 +19,25 @@ class SecKitSettingsForm extends ConfigFormBase {
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * Constructs a SecKitSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator, RendererInterface $renderer) {
