modules/contrib/webtexttool/src/Controller/WebtexttoolController.php
modules/contrib/webtexttool/src/Form/WebtexttoolSettingsForm.php
modules/contrib/webtexttool/vendor/autoload.php
modules/contrib/webtexttool/vendor/composer/ClassLoader.php
modules/contrib/webtexttool/vendor/composer/autoload_classmap.php
modules/contrib/webtexttool/vendor/composer/autoload_namespaces.php
modules/contrib/webtexttool/vendor/composer/autoload_psr4.php
modules/contrib/webtexttool/vendor/composer/autoload_real.php
modules/contrib/webtexttool/vendor/composer/autoload_static.php
modules/contrib/webtexttool/webtexttool.install
modules/contrib/webtexttool/webtexttool.module

4 files with changes
====================

1) modules/contrib/webtexttool/webtexttool.module:53

    ---------- begin diff ----------
@@ @@
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state object.
  */
 function webtexttool_node_type_form_submit(array &$form, FormStateInterface $form_state) {
@@ @@
     ];

     $form['webtexttool']['logo'] = [
-      '#markup' => '<a href="https://textmetrics.com" rel="external noopener" class="logo" target="_blank"><img src="' . base_path() . drupal_get_path('module', 'webtexttool') . '/img/tm_logo.png"></a>',
+      '#markup' => '<a href="https://textmetrics.com" rel="external noopener" class="logo" target="_blank"><img src="' . base_path() . \Drupal::service('extension.list.module')->getPath('webtexttool') . '/img/tm_logo.png"></a>',
     ];

     $can_login = FALSE;
@@ @@
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state object.
  *
  * @return mixed
@@ @@
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state object.
  *
  * @return mixed
@@ @@
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state object.
  *
- * @return \Drupal\Core\Ajax\AjaxResponse
+ * @return AjaxResponse
  *   The changed form element.
  */
 function webtexttool_suggestion_form_node_callback(array &$form, FormStateInterface $form_state): AjaxResponse {
@@ @@
     $variables['html_id'] = 'wtt-' . $suggestion['Tag'] . '-suggestion';

     $variables['rules'] = $suggestion['Rules'];
-    $variables['lightbulb_icon'] = file_get_contents(drupal_get_path('module', 'webtexttool') . '/svg/lightbulb.svg');
+    $variables['lightbulb_icon'] = file_get_contents(\Drupal::service('extension.list.module')->getPath('webtexttool') . '/svg/lightbulb.svg');
     $variables['heading'] = Drupal::service('webtexttool.webtexttool_controller')->webtexttoolHeading($suggestion["Tag"] . 'Label') ?? $suggestion["Tag"];
   }
   elseif (isset($variables['suggestion']) && !is_array($variables['suggestion'])) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/webtexttool/vendor/composer/autoload_real.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Composer\Autoload\ClassLoader;
+use Composer\Autoload\ComposerStaticInit197a20211bc3e3c2f193ee69cdb8c7ee;
 // autoload_real.php @generated by Composer
-
 class ComposerAutoloaderInit197a20211bc3e3c2f193ee69cdb8c7ee
 {
     private static $loader;
@@ @@
         }

         spl_autoload_register(array('ComposerAutoloaderInit197a20211bc3e3c2f193ee69cdb8c7ee', 'loadClassLoader'), true, true);
-        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
+        self::$loader = $loader = new ClassLoader();
         spl_autoload_unregister(array('ComposerAutoloaderInit197a20211bc3e3c2f193ee69cdb8c7ee', 'loadClassLoader'));

         $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
@@ @@
         if ($useStaticLoader) {
             require_once __DIR__ . '/autoload_static.php';

-            call_user_func(\Composer\Autoload\ComposerStaticInit197a20211bc3e3c2f193ee69cdb8c7ee::getInitializer($loader));
+            call_user_func(ComposerStaticInit197a20211bc3e3c2f193ee69cdb8c7ee::getInitializer($loader));
         } else {
             $map = require __DIR__ . '/autoload_namespaces.php';
             foreach ($map as $namespace => $path) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * WrapReturnRector


3) modules/contrib/webtexttool/src/Form/WebtexttoolSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webtexttool\Form;

+use Drupal\Core\State\StateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\webtexttool\Controller\WebtexttoolController;
@@ @@
   /**
    * The state interface.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The Webtexttool Controller.
    *
-   * @var \Drupal\webtexttool\Controller\WebtexttoolController
+   * @var WebtexttoolController
    */
   protected $webtexttoolController;

@@ @@
   /**
    * Constructs the Webtexttool settings form.
    *
-   * @param \Drupal\Core\State\State $state
+   * @param State $state
    *   The state interface.
-   * @param \Drupal\webtexttool\Controller\WebtexttoolController $webtexttoolController
+   * @param WebtexttoolController $webtexttoolController
    *   The webtexttool controller.
    */
   public function __construct(State $state, WebtexttoolController $webtexttoolController) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/webtexttool/src/Controller/WebtexttoolController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webtexttool\Controller;

+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The private tempstore.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStore;

@@ @@
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\token\Token
+   * @var Token
    */
   protected $token;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs the WebtexttoolController.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger interface.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state interface.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $privateTempStore
+   * @param PrivateTempStoreFactory $privateTempStore
    *   The private tempstore.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   The cache backend interface.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The databse service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager service.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
-   * @param \Drupal\token\Token $token
+   * @param Token $token
    *   The token service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
    */
   public function __construct(MessengerInterface $messenger, StateInterface $state, PrivateTempStoreFactory $privateTempStore, CacheBackendInterface $cacheBackend, Connection $database, EntityTypeManagerInterface $entityTypeManager, Renderer $renderer, Token $token, ModuleHandlerInterface $moduleHandler) {
@@ @@
    * response, or a dummy response to build the form structure of the content
    * quality tab.
    *
-   * @param \Drupal\Core\Entity\EntityInterface|null $node
+   * @param EntityInterface|null $node
    *   The node to get the response preset for.
    *
    * @return array|mixed
@@ @@
   /**
    * Returns a unified content quality settings structure.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    *
    * @return array
@@ @@
   /**
    * Encodes and saves the content quality response of the node.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node
+   * @param EntityInterface $node
    *   The node to save the response on.
    * @param array $response
    *   The response to save.
@@ @@
   /**
    * Save the content quality settings on the node.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node
+   * @param EntityInterface $node
    *   The node to save the response on.
    * @param array $response
    *   The response to save.
@@ @@
   /**
    * Saves the initial settings.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node
+   * @param EntityInterface $node
    *   The node to save the settings on.
    * @param array $settings
    *   The settings to save.
@@ @@
    *
    * Respecting metatags and path, with head and body tags.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node
+   * @param EntityInterface $node
    *   The node whose markup needs to be generated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    *
    * @return string
    *   The complete markup of the page.
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function constructCompleteMarkupOfPageWithNodeMarkup(EntityInterface $node, FormStateInterface $form_state): string {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

