modules/contrib/adminrss/adminrss.install
modules/contrib/adminrss/adminrss.module
modules/contrib/adminrss/src/AdminRss.php
modules/contrib/adminrss/src/FeedAccess.php
modules/contrib/adminrss/src/Form/AdminRssSettingsForm.php
modules/contrib/adminrss/src/Plugin/views/access/AdminRssAccess.php
modules/contrib/adminrss/src/ViewsManager.php

5 files with changes
====================

1) modules/contrib/adminrss/src/ViewsManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\adminrss;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Link;
@@ @@
   /**
    * The router.route_provider service.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;

@@ @@
   /**
    * The view storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $viewStorage;

@@ @@
   /**
    * ViewsManager constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config.factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $etm
+   * @param EntityTypeManagerInterface $etm
    *   The entity_type.manager service.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $routeProvider
+   * @param RouteProviderInterface $routeProvider
    *   The router.route_provider service.
    */
   public function __construct(
@@ @@
    *
    * @param array $carry
    *   A carry (accumulator) for links.
-   * @param \Drupal\views\Entity\View $view
+   * @param View $view
    *   The view from which to fetch links.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/adminrss/src/Plugin/views/access/AdminRssAccess.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The adminrss.feed_access service.
    *
-   * @var \Drupal\adminrss\FeedAccess
+   * @var FeedAccess
    */
   protected $feedAccess;

@@ @@
   /**
    * Determine if the current user has access or not.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user who wants to access this view.
    *
    * @return bool
@@ @@
    * Likely the access plugin will add new requirements, so its custom access
    * checker can be applied.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route to change.
    */
   public function alterRouteDefinition(Route $route) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/adminrss/src/Form/AdminRssSettingsForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The adminrss.views_manager service.
    *
-   * @var \Drupal\adminrss\ViewsManager
+   * @var ViewsManager
    */
   protected $viewsManager;

@@ @@
   /**
    * AdminRssSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config.factory service.
-   * @param \Drupal\adminrss\ViewsManager $views_manager
+   * @param ViewsManager $views_manager
    *   The adminrss.views_manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ViewsManager $views_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/adminrss/src/FeedAccess.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\adminrss;

+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ @@
   /**
    * FeedAccess constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config.factory service.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
@@ @@
    * @param string $adminrss_token
    *   The access token.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result for the feed.
    */
   public function access($adminrss_token) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/adminrss/adminrss.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\adminrss\ViewsManager;
 /**
  * @file
  * The AdminRSS module file.
@@ @@
 function adminrss_help($path, RouteMatchInterface $routeMatch) {
   switch ($path) {
     case 'help.page.adminrss':
-      /** @var \Drupal\adminrss\ViewsManager $viewsManager */
+      /** @var ViewsManager $viewsManager */
       $viewsManager = \Drupal::service('adminrss.views_manager');

       $ret = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

