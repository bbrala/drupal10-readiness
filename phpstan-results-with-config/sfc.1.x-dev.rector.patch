diff --git a/modules/sfc_dev/src/Ajax/RefreshComponentAssetsCommand.php b/modules/sfc_dev/src/Ajax/RefreshComponentAssetsCommand.php
index aae0baf..8ede234 100644
--- a/modules/sfc_dev/src/Ajax/RefreshComponentAssetsCommand.php
+++ b/modules/sfc_dev/src/Ajax/RefreshComponentAssetsCommand.php
@@ -16,23 +16,23 @@ class RefreshComponentAssetsCommand implements CommandInterface {
   /**
    * The component.
    *
-   * @var \Drupal\sfc\ComponentInterface
+   * @var ComponentInterface
    */
   protected $component;
 
   /**
    * The asset resolver.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;
 
   /**
    * Constructs a RefreshComponentAssetsCommand object.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   The component.
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   The asset resolver.
    */
   public function __construct(ComponentInterface $component, AssetResolverInterface $asset_resolver) {
diff --git a/modules/sfc_dev/src/Controller/ComponentDevController.php b/modules/sfc_dev/src/Controller/ComponentDevController.php
index 8545af2..3f792fd 100644
--- a/modules/sfc_dev/src/Controller/ComponentDevController.php
+++ b/modules/sfc_dev/src/Controller/ComponentDevController.php
@@ -21,23 +21,23 @@ class ComponentDevController extends ControllerBase {
   /**
    * The component plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $manager;
 
   /**
    * The asset resolver.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;
 
   /**
    * ComponentDevController constructor.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The component plugin manager.
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   The asset resolver.
    */
   public function __construct(PluginManagerInterface $manager, AssetResolverInterface $asset_resolver) {
@@ -91,7 +91,7 @@ class ComponentDevController extends ControllerBase {
    * @param string $plugin_id
    *   The plugin ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response.
    */
   public function libraryPreview($plugin_id) {
@@ -129,7 +129,7 @@ class ComponentDevController extends ControllerBase {
    * @param string $plugin_id
    *   The plugin ID.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response.
    */
   public function shouldWriteAssets($plugin_id) {
diff --git a/modules/sfc_dev/src/Form/ComponentPreviewForm.php b/modules/sfc_dev/src/Form/ComponentPreviewForm.php
index be6d850..30b2b5c 100644
--- a/modules/sfc_dev/src/Form/ComponentPreviewForm.php
+++ b/modules/sfc_dev/src/Form/ComponentPreviewForm.php
@@ -26,14 +26,14 @@ class ComponentPreviewForm extends FormBase {
   /**
    * The asset resolver.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;
 
   /**
    * ComponentPreviewForm constructor.
    *
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   The asset resolver.
    */
   public function __construct(AssetResolverInterface $asset_resolver) {
@@ -151,10 +151,10 @@ class ComponentPreviewForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   A response.
    */
   public function ajaxReload(array &$form, FormStateInterface $form_state) {
diff --git a/modules/sfc_dev/src/Plugin/SingleFileComponent/ComponentPreview.php b/modules/sfc_dev/src/Plugin/SingleFileComponent/ComponentPreview.php
index e0c459a..4a12c19 100644
--- a/modules/sfc_dev/src/Plugin/SingleFileComponent/ComponentPreview.php
+++ b/modules/sfc_dev/src/Plugin/SingleFileComponent/ComponentPreview.php
@@ -226,7 +226,7 @@ JS;
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
@@ -243,9 +243,9 @@ JS;
    *   If debug markup should be added to templates.
    * @param string $app_root
    *   The app root.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, $debug, $app_root, FileSystemInterface $file_system, FormBuilderInterface $form_builder) {
diff --git a/modules/sfc_dev/tests/src/Kernel/ComponentDevControllerTest.php b/modules/sfc_dev/tests/src/Kernel/ComponentDevControllerTest.php
index c69d15a..9b8b315 100644
--- a/modules/sfc_dev/tests/src/Kernel/ComponentDevControllerTest.php
+++ b/modules/sfc_dev/tests/src/Kernel/ComponentDevControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sfc_dev\Kernel;
 
+use Drupal\Core\Template\TwigEnvironment;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Asset\AssetResolverInterface;
@@ -103,7 +104,7 @@ class ComponentDevControllerTest extends KernelTestBase {
    * Tests the ::libraryPreview method.
    */
   public function testLibraryPreview() {
-    /** @var \Drupal\Core\Template\TwigEnvironment $twig */
+    /** @var TwigEnvironment $twig */
     $twig = \Drupal::service('twig');
     $twig->setCache(FALSE);
 
@@ -117,7 +118,7 @@ class ComponentDevControllerTest extends KernelTestBase {
    * Tests the ::shouldWriteAssets method.
    */
   public function testShouldWriteAssets() {
-    /** @var \Drupal\Core\Template\TwigEnvironment $twig */
+    /** @var TwigEnvironment $twig */
     $twig = \Drupal::service('twig');
     $twig->setCache(FALSE);
 
@@ -130,7 +131,7 @@ class ComponentDevControllerTest extends KernelTestBase {
    * Tests the ::viewTemplate method.
    */
   public function testViewTemplate() {
-    /** @var \Drupal\Core\Template\TwigEnvironment $twig */
+    /** @var TwigEnvironment $twig */
     $twig = \Drupal::service('twig');
     $twig->setCache(FALSE);
 
@@ -142,7 +143,7 @@ class ComponentDevControllerTest extends KernelTestBase {
    * Tests the ::viewTemplateTitle method.
    */
   public function testViewTemplateTitle() {
-    /** @var \Drupal\Core\Template\TwigEnvironment $twig */
+    /** @var TwigEnvironment $twig */
     $twig = \Drupal::service('twig');
     $twig->setCache(FALSE);
 
diff --git a/modules/sfc_example/sfc_example.module b/modules/sfc_example/sfc_example.module
index e568a8d..6aa404b 100644
--- a/modules/sfc_example/sfc_example.module
+++ b/modules/sfc_example/sfc_example.module
@@ -120,9 +120,9 @@ function _sfc_example_get_cat_breeds() {
 /**
  * Helper function for components to read from the todo list state.
  *
- * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value
+ * @param KeyValueFactoryInterface $key_value
  *   The key value factory.
- * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+ * @param AccountProxyInterface $current_user
  *   The current user.
  *
  * @return array
@@ -137,9 +137,9 @@ function todo_get_state(KeyValueFactoryInterface $key_value, AccountProxyInterfa
 /**
  * Helper function for components to write to the todo list state.
  *
- * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value
+ * @param KeyValueFactoryInterface $key_value
  *   The key value factory.
- * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+ * @param AccountProxyInterface $current_user
  *   The current user.
  * @param array $items
  *   An array of todo list items.
diff --git a/modules/sfc_example/src/Controller/ExampleController.php b/modules/sfc_example/src/Controller/ExampleController.php
index 5844ffe..cb20eb7 100644
--- a/modules/sfc_example/src/Controller/ExampleController.php
+++ b/modules/sfc_example/src/Controller/ExampleController.php
@@ -13,7 +13,7 @@ class ExampleController extends ControllerBase {
   /**
    * Returns a random cat breed.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response.
    */
   public function randomCatBreed() {
diff --git a/modules/sfc_example/src/Plugin/SingleFileComponent/ExampleClass.php b/modules/sfc_example/src/Plugin/SingleFileComponent/ExampleClass.php
index b33d1f6..0a25b4f 100644
--- a/modules/sfc_example/src/Plugin/SingleFileComponent/ExampleClass.php
+++ b/modules/sfc_example/src/Plugin/SingleFileComponent/ExampleClass.php
@@ -33,7 +33,7 @@ CSS;
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -50,9 +50,9 @@ CSS;
    *   If debug markup should be added to templates.
    * @param string $app_root
    *   The app root.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, $debug, $app_root, FileSystemInterface $file_system, AccountProxyInterface $current_user) {
diff --git a/sfc.module b/sfc.module
index c9a8745..070ef7d 100644
--- a/sfc.module
+++ b/sfc.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Component\Plugin\PluginManagerInterface;
+use Drupal\sfc\ComponentInterface;
+use Drupal\Core\File\FileUrlGenerator;
 /**
  * @file
  * Contains hooks for the Single File Components module.
@@ -17,10 +20,10 @@ use Drupal\sfc\ComponentNameHelper;
  */
 function sfc_library_info_build() {
   $libraries = [];
-  /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+  /** @var PluginManagerInterface $manager */
   $manager = \Drupal::service('plugin.manager.single_file_component');
   foreach ($manager->getDefinitions() as $id => $definition) {
-    /** @var \Drupal\sfc\ComponentInterface $component */
+    /** @var ComponentInterface $component */
     $component = $manager->createInstance($id);
     $library = $component->getLibrary();
     if (empty($library)) {
@@ -44,9 +47,9 @@ function sfc_css_alter(&$css, AttachedAssetsInterface $assets) {
       if (isset($written[$id])) {
         continue;
       }
-      /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+      /** @var PluginManagerInterface $manager */
       $manager = \Drupal::service('plugin.manager.single_file_component');
-      /** @var \Drupal\sfc\ComponentInterface $component */
+      /** @var ComponentInterface $component */
       $component = $manager->createInstance($id);
       if ($component->shouldWriteAssets()) {
         $component->writeAssets();
@@ -68,10 +71,10 @@ function sfc_js_alter(&$js, AttachedAssetsInterface $assets) {
  */
 function sfc_theme() {
   $implementations = [];
-  /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+  /** @var PluginManagerInterface $manager */
   $manager = \Drupal::service('plugin.manager.single_file_component');
   foreach ($manager->getDefinitions() as $id => $definition) {
-    /** @var \Drupal\sfc\ComponentInterface $component */
+    /** @var ComponentInterface $component */
     $component = $manager->createInstance($id);
     $id = $component->getId();
     // This allows themes to override templates provided by components.
@@ -152,7 +155,7 @@ function sfc_require($filename) {
  */
 function sfc_page_attachments_alter(array &$attachments) {
   if (Settings::get('sfc_watch_refresh', FALSE)) {
-    /** @var \Drupal\Core\File\FileUrlGenerator $url_generator */
+    /** @var FileUrlGenerator $url_generator */
     $url_generator = \Drupal::service('file_url_generator');
     $attachments['#attached']['library'][] = 'sfc/watch_refresh';
     $attachments['#attached']['drupalSettings']['sfc_watch_file'] = $url_generator->generate('public://sfc_watch_file.txt')->setAbsolute()->toString();
diff --git a/src/Commands/ComponentCommands.php b/src/Commands/ComponentCommands.php
index e553dc3..d11850e 100644
--- a/src/Commands/ComponentCommands.php
+++ b/src/Commands/ComponentCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sfc\Commands;
 
+use Drupal\sfc\ComponentInterface;
 use Consolidation\SiteAlias\SiteAliasManagerAwareTrait;
 use Drupal\Component\Plugin\Discovery\CachedDiscoveryInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
@@ -19,7 +20,7 @@ class ComponentCommands extends DrushCommands implements SiteAliasManagerAwareIn
   /**
    * The plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $manager;
 
@@ -33,7 +34,7 @@ class ComponentCommands extends DrushCommands implements SiteAliasManagerAwareIn
   /**
    * ComponentCommands constructor.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The plugin manager.
    * @param string $watch_file_path
    *   The watch file path.
@@ -52,7 +53,7 @@ class ComponentCommands extends DrushCommands implements SiteAliasManagerAwareIn
    * @command sfc:write
    */
   public function write($id) {
-    /** @var \Drupal\sfc\ComponentInterface $component */
+    /** @var ComponentInterface $component */
     $component = $this->manager->createInstance($id);
     $component->writeAssets();
   }
@@ -78,7 +79,7 @@ class ComponentCommands extends DrushCommands implements SiteAliasManagerAwareIn
     $this->io()->writeln('Watching for changes...');
     $component_mtimes = [];
     foreach (array_keys($definitions) as $id) {
-      /** @var \Drupal\sfc\ComponentInterface $component */
+      /** @var ComponentInterface $component */
       $component = $this->manager->createInstance($id);
       if ($component instanceof ComponentFilenameInterface) {
         $component_mtimes[$id] = filemtime($component->getComponentFileName());
@@ -89,7 +90,7 @@ class ComponentCommands extends DrushCommands implements SiteAliasManagerAwareIn
       $clear_cache = FALSE;
       $clear_definitions = FALSE;
       foreach (array_keys($definitions) as $id) {
-        /** @var \Drupal\sfc\ComponentInterface $component */
+        /** @var ComponentInterface $component */
         $component = $this->manager->createInstance($id);
         if ($component->shouldWriteAssets()) {
           $this->io()->writeln("Writing assets for $id");
diff --git a/src/ComponentActionsInterface.php b/src/ComponentActionsInterface.php
index 79b9789..17b1456 100644
--- a/src/ComponentActionsInterface.php
+++ b/src/ComponentActionsInterface.php
@@ -18,7 +18,7 @@ interface ComponentActionsInterface {
    *
    * @param string $name
    *   The action name.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
    * @return mixed
diff --git a/src/ComponentBase.php b/src/ComponentBase.php
index 516216d..e1e0f48 100644
--- a/src/ComponentBase.php
+++ b/src/ComponentBase.php
@@ -79,7 +79,7 @@ class ComponentBase extends PluginBase implements ComponentInterface, ContainerF
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -96,7 +96,7 @@ class ComponentBase extends PluginBase implements ComponentInterface, ContainerF
    *   If debug markup should be added to templates.
    * @param string $app_root
    *   The app root.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, $debug, $app_root, FileSystemInterface $file_system) {
@@ -123,7 +123,7 @@ class ComponentBase extends PluginBase implements ComponentInterface, ContainerF
   /**
    * Gets the debug parameter from the container.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container.
    *
    * @return bool
diff --git a/src/ComponentConsumerTrait.php b/src/ComponentConsumerTrait.php
index e9982c7..22760d6 100644
--- a/src/ComponentConsumerTrait.php
+++ b/src/ComponentConsumerTrait.php
@@ -16,7 +16,7 @@ trait ComponentConsumerTrait {
   /**
    * Builds a component for display.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A component.
    * @param array $component_context
    *   The component context.
@@ -51,7 +51,7 @@ trait ComponentConsumerTrait {
   /**
    * Builds a component's form.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A component.
    * @param array $component_context
    *   The component context, for setting default values.
@@ -77,7 +77,7 @@ trait ComponentConsumerTrait {
    *
    * @param array $element
    *   The containing element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $form
    *   The form.
@@ -101,11 +101,11 @@ trait ComponentConsumerTrait {
   /**
    * Validates a component form.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A component.
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function componentValidateForm(ComponentInterface $component, array $form, FormStateInterface $form_state) {
@@ -120,11 +120,11 @@ trait ComponentConsumerTrait {
   /**
    * Submits a component form.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A component.
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
diff --git a/src/ComponentFormInterface.php b/src/ComponentFormInterface.php
index ccf2ce3..bf1eb4c 100644
--- a/src/ComponentFormInterface.php
+++ b/src/ComponentFormInterface.php
@@ -22,7 +22,7 @@ interface ComponentFormInterface {
    *
    * @param array $form
    *   An associative array containing the initial structure of the plugin form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $default_values
    *   An array of default values for the form.
@@ -40,7 +40,7 @@ interface ComponentFormInterface {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function validateContextForm(array &$form, FormStateInterface $form_state);
@@ -54,7 +54,7 @@ interface ComponentFormInterface {
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitContextForm(array &$form, FormStateInterface $form_state);
diff --git a/src/ComponentNameHelper.php b/src/ComponentNameHelper.php
index 52376cd..1cd56e6 100644
--- a/src/ComponentNameHelper.php
+++ b/src/ComponentNameHelper.php
@@ -12,7 +12,7 @@ class ComponentNameHelper {
   /**
    * Gets the library name for a component.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   The component.
    *
    * @return string
@@ -64,7 +64,7 @@ class ComponentNameHelper {
   /**
    * Gets the template name for a component.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   The component.
    *
    * @return string
diff --git a/src/ComponentPluginManager.php b/src/ComponentPluginManager.php
index 7cee0fe..23bfbf7 100644
--- a/src/ComponentPluginManager.php
+++ b/src/ComponentPluginManager.php
@@ -15,7 +15,7 @@ class ComponentPluginManager extends DefaultPluginManager {
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -25,11 +25,11 @@ class ComponentPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler) {
diff --git a/src/Controller/ActionController.php b/src/Controller/ActionController.php
index 34d36a4..2a45dc1 100644
--- a/src/Controller/ActionController.php
+++ b/src/Controller/ActionController.php
@@ -17,14 +17,14 @@ class ActionController extends ControllerBase {
   /**
    * The plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $manager;
 
   /**
    * ActionController constructor.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The plugin manager.
    */
   public function __construct(PluginManagerInterface $manager) {
@@ -47,11 +47,11 @@ class ActionController extends ControllerBase {
    *   The ID (name) of the component.
    * @param string $action
    *   The name of the action.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function perform($component_id, $action, Request $request) {
-    /** @var \Drupal\sfc\ComponentActionsInterface $instance */
+    /** @var ComponentActionsInterface $instance */
     $component = $this->manager->createInstance($component_id);
     if (!($component instanceof ComponentActionsInterface)) {
       throw new NotFoundHttpException('Component does not support actions');
diff --git a/src/Controller/ComponentController.php b/src/Controller/ComponentController.php
index 4bf6605..1742ed0 100644
--- a/src/Controller/ComponentController.php
+++ b/src/Controller/ComponentController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sfc\Controller;
 
+use Drupal\Core\Render\HtmlResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Render\RendererInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -15,14 +16,14 @@ class ComponentController extends ControllerBase {
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a ComponentController instance.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(RendererInterface $renderer) {
@@ -56,12 +57,12 @@ class ComponentController extends ControllerBase {
    *
    * @param string $component_id
    *   The component ID.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param bool $anon_session
    *   (optional) Force an anonymous session to be created.
    *
-   * @return array|\Drupal\Core\Render\HtmlResponse
+   * @return array|HtmlResponse
    *   The render array.
    */
   public function build($component_id, Request $request, $anon_session = FALSE) {
diff --git a/src/Plugin/Block/ComponentBlock.php b/src/Plugin/Block/ComponentBlock.php
index 48e9a8b..2c47c88 100644
--- a/src/Plugin/Block/ComponentBlock.php
+++ b/src/Plugin/Block/ComponentBlock.php
@@ -26,7 +26,7 @@ class ComponentBlock extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * A single file component instance.
    *
-   * @var \Drupal\sfc\ComponentInterface
+   * @var ComponentInterface
    */
   protected $component;
 
@@ -39,7 +39,7 @@ class ComponentBlock extends BlockBase implements ContainerFactoryPluginInterfac
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A single file component instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ComponentInterface $component) {
diff --git a/src/Plugin/Derivative/ComponentDeriver.php b/src/Plugin/Derivative/ComponentDeriver.php
index 910b153..bdc3452 100644
--- a/src/Plugin/Derivative/ComponentDeriver.php
+++ b/src/Plugin/Derivative/ComponentDeriver.php
@@ -23,14 +23,14 @@ class ComponentDeriver extends DeriverBase implements ContainerDeriverInterface
   /**
    * The plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $manager;
 
   /**
    * ComponentDeriver constructor.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The plugin manager.
    */
   public function __construct(PluginManagerInterface $manager) {
diff --git a/src/Plugin/Derivative/SimpleComponentDeriver.php b/src/Plugin/Derivative/SimpleComponentDeriver.php
index 7058626..55e493c 100644
--- a/src/Plugin/Derivative/SimpleComponentDeriver.php
+++ b/src/Plugin/Derivative/SimpleComponentDeriver.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sfc\Plugin\Derivative;
 
+use Drupal\Component\DependencyInjection\Container;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
@@ -26,28 +27,28 @@ class SimpleComponentDeriver extends DeriverBase implements ContainerDeriverInte
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The container.
    *
-   * @var \Drupal\Component\DependencyInjection\Container
+   * @var Container
    */
   protected $container;
 
@@ -61,13 +62,13 @@ class SimpleComponentDeriver extends DeriverBase implements ContainerDeriverInte
   /**
    * SimpleComponentDeriver constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler, FileSystemInterface $file_system, ContainerInterface $container = NULL) {
diff --git a/src/Plugin/Field/FieldFormatter/ComponentFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ComponentFieldFormatter.php
index db4c42c..07cbf55 100644
--- a/src/Plugin/Field/FieldFormatter/ComponentFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ComponentFieldFormatter.php
@@ -27,7 +27,7 @@ class ComponentFieldFormatter extends FormatterBase implements ContainerFactoryP
   /**
    * A single file component instance.
    *
-   * @var \Drupal\sfc\ComponentInterface
+   * @var ComponentInterface
    */
   protected $component;
 
@@ -38,7 +38,7 @@ class ComponentFieldFormatter extends FormatterBase implements ContainerFactoryP
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -48,7 +48,7 @@ class ComponentFieldFormatter extends FormatterBase implements ContainerFactoryP
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A single file component instance.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, ComponentInterface $component) {
diff --git a/src/Plugin/Layout/ComponentLayout.php b/src/Plugin/Layout/ComponentLayout.php
index 4026e43..567e388 100644
--- a/src/Plugin/Layout/ComponentLayout.php
+++ b/src/Plugin/Layout/ComponentLayout.php
@@ -29,7 +29,7 @@ class ComponentLayout extends LayoutDefault implements ContainerFactoryPluginInt
   /**
    * A single file component instance.
    *
-   * @var \Drupal\sfc\ComponentInterface
+   * @var ComponentInterface
    */
   protected $component;
 
@@ -42,7 +42,7 @@ class ComponentLayout extends LayoutDefault implements ContainerFactoryPluginInt
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A single file component instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ComponentInterface $component) {
diff --git a/src/TwigComponentLoader.php b/src/TwigComponentLoader.php
index 2f0e2bb..e9ac2d0 100644
--- a/src/TwigComponentLoader.php
+++ b/src/TwigComponentLoader.php
@@ -17,14 +17,14 @@ class TwigComponentLoader implements LoaderInterface, ExistsLoaderInterface, Sou
   /**
    * The plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $manager;
 
   /**
    * TwigComponentLoader constructor.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The plugin manager.
    */
   public function __construct(PluginManagerInterface $manager) {
diff --git a/src/TwigExtension.php b/src/TwigExtension.php
index 0774631..2317d5d 100644
--- a/src/TwigExtension.php
+++ b/src/TwigExtension.php
@@ -16,23 +16,23 @@ class TwigExtension extends \Twig_Extension {
   /**
    * The plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $manager;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * TwigExtension constructor.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The plugin manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(PluginManagerInterface $manager, RendererInterface $renderer) {
@@ -59,7 +59,7 @@ class TwigExtension extends \Twig_Extension {
    *   The plugin ID.
    */
   public function prepareContext(array &$context, $id) {
-    /** @var \Drupal\sfc\ComponentInterface $component */
+    /** @var ComponentInterface $component */
     $component = $this->manager->createInstance($id);
     $component->prepareContext($context);
   }
diff --git a/tests/modules/sfc_test/src/Controller/TestController.php b/tests/modules/sfc_test/src/Controller/TestController.php
index 43c351e..0664158 100644
--- a/tests/modules/sfc_test/src/Controller/TestController.php
+++ b/tests/modules/sfc_test/src/Controller/TestController.php
@@ -43,7 +43,7 @@ class TestController extends ControllerBase {
    *
    * @param string $plugin_id
    *   The plugin ID.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    *
    * @return array
diff --git a/tests/modules/sfc_test/src/Plugin/Block/InvalidBlock.php b/tests/modules/sfc_test/src/Plugin/Block/InvalidBlock.php
index dcdeddc..248f5e0 100644
--- a/tests/modules/sfc_test/src/Plugin/Block/InvalidBlock.php
+++ b/tests/modules/sfc_test/src/Plugin/Block/InvalidBlock.php
@@ -26,7 +26,7 @@ class InvalidBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * A single file component instance.
    *
-   * @var \Drupal\sfc\ComponentInterface
+   * @var ComponentInterface
    */
   protected $component;
 
@@ -39,7 +39,7 @@ class InvalidBlock extends BlockBase implements ContainerFactoryPluginInterface
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   A single file component instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ComponentInterface $component) {
diff --git a/tests/src/Functional/ComponentControllerTest.php b/tests/src/Functional/ComponentControllerTest.php
index 19c4068..215796b 100644
--- a/tests/src/Functional/ComponentControllerTest.php
+++ b/tests/src/Functional/ComponentControllerTest.php
@@ -32,9 +32,15 @@ class ComponentControllerTest extends BrowserTestBase {
    */
   public function testBuild() {
     $this->drupalGet('/homepage');
-    $this->assertText('Welcome to the homepage!');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Welcome to the homepage!');
     $this->drupalGet('/hello/Sam');
-    $this->assertText('Hello Sam!');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Hello Sam!');
     $this->assertSession()->responseContains('<html');
     $this->drupalGet('/no_anon_session');
     $this->assertSession()->responseContains('no session');
diff --git a/tests/src/Kernel/ComponentAliasesTest.php b/tests/src/Kernel/ComponentAliasesTest.php
index 7c08fac..466c65f 100644
--- a/tests/src/Kernel/ComponentAliasesTest.php
+++ b/tests/src/Kernel/ComponentAliasesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\Core\Render\RendererInterface;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -23,7 +24,7 @@ class ComponentAliasesTest extends KernelTestBase {
    * Tests that aliases work.
    */
   public function testAliases() {
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $element = [
       '#type' => 'inline_template',
diff --git a/tests/src/Kernel/ComponentBlockTest.php b/tests/src/Kernel/ComponentBlockTest.php
index d9c9c65..95e14e0 100644
--- a/tests/src/Kernel/ComponentBlockTest.php
+++ b/tests/src/Kernel/ComponentBlockTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\sfc\Plugin\Block\ComponentBlock;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -25,7 +26,7 @@ class ComponentBlockTest extends KernelTestBase {
    * Tests the ::build method.
    */
   public function testBuild() {
-    /** @var \Drupal\sfc\Plugin\Block\ComponentBlock $block */
+    /** @var ComponentBlock $block */
     $block = \Drupal::service('plugin.manager.block')->createInstance('single_file_component_block:say_hello');
     $renderer = \Drupal::service('renderer');
     $build = $block->build();
diff --git a/tests/src/Kernel/ComponentCachingTest.php b/tests/src/Kernel/ComponentCachingTest.php
index 1838550..59a837e 100644
--- a/tests/src/Kernel/ComponentCachingTest.php
+++ b/tests/src/Kernel/ComponentCachingTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\Core\Render\RendererInterface;
+use Drupal\Core\Render\BubbleableMetadata;
 use Drupal\Core\Render\RenderContext;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\node\Entity\Node;
@@ -30,7 +32,7 @@ class ComponentCachingTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
@@ -49,7 +51,7 @@ class ComponentCachingTest extends KernelTestBase {
    * Tests that caching works.
    */
   public function testCache() {
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $element = [
       '#type' => 'inline_template',
@@ -60,7 +62,7 @@ class ComponentCachingTest extends KernelTestBase {
       return $renderer->render($element);
     });
     $this->assertStringContainsString("I'm cached!", $output);
-    /** @var \Drupal\Core\Render\BubbleableMetadata $metadata */
+    /** @var BubbleableMetadata $metadata */
     $metadata = $context->pop();
     $expected = [
       'my_tag',
diff --git a/tests/src/Kernel/ComponentFieldFormatterTest.php b/tests/src/Kernel/ComponentFieldFormatterTest.php
index 5f5ee23..c4af430 100644
--- a/tests/src/Kernel/ComponentFieldFormatterTest.php
+++ b/tests/src/Kernel/ComponentFieldFormatterTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\Core\Field\FormatterBase;
 use Drupal\Core\Form\FormState;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -34,7 +35,7 @@ class ComponentFieldFormatterTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('node');
     $this->installEntitySchema('user');
@@ -66,7 +67,7 @@ class ComponentFieldFormatterTest extends KernelTestBase {
         'second',
       ],
     ]);
-    /** @var \Drupal\Core\Field\FormatterBase $formatter */
+    /** @var FormatterBase $formatter */
     $formatter = \Drupal::service('plugin.manager.field.formatter')->createInstance('single_file_component_field_formatter:bold_formatter', [
       'field_definition' => $node->get('title')->getFieldDefinition(),
       'settings' => [],
@@ -89,7 +90,7 @@ class ComponentFieldFormatterTest extends KernelTestBase {
     $render = $renderer->renderPlain($build);
     $this->assertEquals('<div class="bold-formatter">Test</div>', $render);
     // Test multiple.
-    /** @var \Drupal\Core\Field\FormatterBase $formatter */
+    /** @var FormatterBase $formatter */
     $formatter = \Drupal::service('plugin.manager.field.formatter')->createInstance('single_file_component_field_formatter:multiple_formatter', [
       'field_definition' => $node->get('multiple_text')->getFieldDefinition(),
       'settings' => [],
@@ -114,7 +115,7 @@ class ComponentFieldFormatterTest extends KernelTestBase {
       'type' => 'page',
       'title' => 'Test',
     ]);
-    /** @var \Drupal\Core\Field\FormatterBase $formatter */
+    /** @var FormatterBase $formatter */
     $formatter = \Drupal::service('plugin.manager.field.formatter')->createInstance('single_file_component_field_formatter:bold_formatter', [
       'field_definition' => $node->get('title')->getFieldDefinition(),
       'settings' => [],
diff --git a/tests/src/Kernel/ComponentLayoutTest.php b/tests/src/Kernel/ComponentLayoutTest.php
index c95c7ce..00ddcff 100644
--- a/tests/src/Kernel/ComponentLayoutTest.php
+++ b/tests/src/Kernel/ComponentLayoutTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\sfc\Plugin\Layout\ComponentLayout;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -28,7 +29,7 @@ class ComponentLayoutTest extends KernelTestBase {
    * Tests the ::build method.
    */
   public function testBuild() {
-    /** @var \Drupal\sfc\Plugin\Layout\ComponentLayout $layout */
+    /** @var ComponentLayout $layout */
     $layout = \Drupal::service('plugin.manager.core.layout')->createInstance('single_file_component_layout:two_column_flexible');
     $renderer = \Drupal::service('renderer');
     $build = $layout->build([]);
diff --git a/tests/src/Kernel/ComponentOverridesTest.php b/tests/src/Kernel/ComponentOverridesTest.php
index 1f4f80d..c34f7c1 100644
--- a/tests/src/Kernel/ComponentOverridesTest.php
+++ b/tests/src/Kernel/ComponentOverridesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Datetime\Entity\DateFormat;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\node\Entity\Node;
@@ -30,7 +31,7 @@ class ComponentOverridesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
@@ -53,7 +54,7 @@ class ComponentOverridesTest extends KernelTestBase {
    * Tests that overrides work.
    */
   public function testOverrides() {
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $builder = \Drupal::entityTypeManager()->getViewBuilder('node');
 
diff --git a/tests/src/Kernel/ComponentPluginManagerTest.php b/tests/src/Kernel/ComponentPluginManagerTest.php
index e08e08a..aa8f0f8 100644
--- a/tests/src/Kernel/ComponentPluginManagerTest.php
+++ b/tests/src/Kernel/ComponentPluginManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\sfc\Plugin\SingleFileComponent\SimpleComponent;
 
@@ -26,7 +27,7 @@ class ComponentPluginManagerTest extends KernelTestBase {
    * Tests the ::createInstance method.
    */
   public function testCreateInstance() {
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+    /** @var PluginManagerInterface $manager */
     $manager = \Drupal::service('plugin.manager.single_file_component');
     // The "simple_test" plugin doesn't actually exist - this tests that
     // derived plugins which define an alt_id can be created using that alt_id.
diff --git a/tests/src/Kernel/ComponentTestTrait.php b/tests/src/Kernel/ComponentTestTrait.php
index baf0bb6..fccecc5 100644
--- a/tests/src/Kernel/ComponentTestTrait.php
+++ b/tests/src/Kernel/ComponentTestTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\Core\Template\TwigEnvironment;
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Render\RenderContext;
 use Drupal\sfc\ComponentInterface;
 
@@ -25,12 +27,12 @@ trait ComponentTestTrait {
    *   The rendered HTML.
    */
   protected function renderComponent($plugin_id, array $context) {
-    /** @var \Drupal\Core\Template\TwigEnvironment $environment */
+    /** @var TwigEnvironment $environment */
     $environment = \Drupal::service('twig');
     $cache = $environment->getCache();
     $environment->setCache(FALSE);
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $element = [
       '#type' => 'inline_template',
@@ -49,7 +51,7 @@ trait ComponentTestTrait {
    * but that could also mean that the HTML isn't exactly the same as it would
    * be when normally included.
    *
-   * @param \Drupal\sfc\ComponentInterface $component
+   * @param ComponentInterface $component
    *   The component.
    * @param array $context
    *   The template context.
@@ -58,12 +60,12 @@ trait ComponentTestTrait {
    *   The rendered HTML.
    */
   protected function renderComponentObject(ComponentInterface $component, array $context) {
-    /** @var \Drupal\Core\Template\TwigEnvironment $environment */
+    /** @var TwigEnvironment $environment */
     $environment = \Drupal::service('twig');
     $cache = $environment->getCache();
     $environment->setCache(FALSE);
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $component->prepareContext($context);
     $render_context = new RenderContext();
diff --git a/tests/src/Kernel/SimpleComponentTest.php b/tests/src/Kernel/SimpleComponentTest.php
index 0e93a2c..d1276da 100644
--- a/tests/src/Kernel/SimpleComponentTest.php
+++ b/tests/src/Kernel/SimpleComponentTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\sfc\Kernel;
 
+use Drupal\Component\Plugin\PluginManagerInterface;
+use Drupal\sfc\Plugin\Block\ComponentBlock;
+use Drupal\sfc\ComponentPluginManager;
+use Drupal\sfc\Plugin\SingleFileComponent\SimpleComponent;
 use Drupal\Core\Form\FormState;
 use Drupal\KernelTests\KernelTestBase;
 use Symfony\Component\HttpFoundation\Request;
@@ -35,7 +39,7 @@ class SimpleComponentTest extends KernelTestBase {
       'message' => 'Click me',
     ]));
     // Test the output CSS/JS.
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+    /** @var PluginManagerInterface $manager */
     $manager = \Drupal::service('plugin.manager.single_file_component');
     $component = $manager->createInstance('simple_assets');
     $this->assertTrue($component->shouldWriteAssets());
@@ -45,7 +49,7 @@ class SimpleComponentTest extends KernelTestBase {
     $this->assertFileExists('public://sfc/components/simple_assets/simple_assets.js');
     $css = file_get_contents('public://sfc/components/simple_assets/simple_assets.css');
     $this->assertStringContainsString('.foo {', $css);
-    $this->assertStringContainsString('background: url(/' . drupal_get_path('module', 'sfc_test') . '/assets/image.jpg)', $css);
+    $this->assertStringContainsString('background: url(/' . \Drupal::service('extension.list.module')->getPath('sfc_test') . '/assets/image.jpg)', $css);
     $js = file_get_contents('public://sfc/components/simple_assets/simple_assets.js');
     $this->assertStringContainsString("alert('foo');", $js);
     $this->assertStringContainsString("alert('bar');", $js);
@@ -72,7 +76,7 @@ class SimpleComponentTest extends KernelTestBase {
    * Tests that form methods work as expected.
    */
   public function testForm() {
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+    /** @var PluginManagerInterface $manager */
     $manager = \Drupal::service('plugin.manager.single_file_component');
     $component = $manager->createInstance('simple_block');
     $form = [];
@@ -92,7 +96,7 @@ class SimpleComponentTest extends KernelTestBase {
    * Tests that definition additions work as expected.
    */
   public function testDefinitionAdditions() {
-    /** @var \Drupal\sfc\Plugin\Block\ComponentBlock $block */
+    /** @var ComponentBlock $block */
     $block = \Drupal::service('plugin.manager.block')->createInstance('single_file_component_block:simple_block');
     $renderer = \Drupal::service('renderer');
     $build = $block->build();
@@ -104,7 +108,7 @@ class SimpleComponentTest extends KernelTestBase {
    * Tests that parsing complex templates works as expected.
    */
   public function testComplexTemplate() {
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+    /** @var PluginManagerInterface $manager */
     $manager = \Drupal::service('plugin.manager.single_file_component');
     $component = $manager->createInstance('simple_complex_template');
     $this->assertStringContainsString("<div{{ attributes.addClass('two-column') }}>
@@ -123,7 +127,7 @@ class SimpleComponentTest extends KernelTestBase {
   public function testThemeComponents() {
     // Themes can provide components.
     \Drupal::service('theme_installer')->install(['sfc_test_theme']);
-    /** @var \Drupal\sfc\ComponentPluginManager $manager */
+    /** @var ComponentPluginManager $manager */
     $manager = \Drupal::service('plugin.manager.single_file_component');
     $component = $manager->createInstance('theme_component');
     $this->assertStringContainsString("I'm from a theme!", $component->getTemplate());
@@ -146,7 +150,7 @@ class SimpleComponentTest extends KernelTestBase {
    * Tests that a simple component with vanilla JS works as expected.
    */
   public function testVanillaJs() {
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+    /** @var PluginManagerInterface $manager */
     $manager = \Drupal::service('plugin.manager.single_file_component');
     $component = $manager->createInstance('simple_vanilla_js');
     $this->assertTrue($component->shouldWriteAssets());
@@ -162,9 +166,9 @@ class SimpleComponentTest extends KernelTestBase {
    * Tests that actions work as expected.
    */
   public function testActions() {
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $manager */
+    /** @var PluginManagerInterface $manager */
     $manager = \Drupal::service('plugin.manager.single_file_component');
-    /** @var \Drupal\sfc\Plugin\SingleFileComponent\SimpleComponent $component */
+    /** @var SimpleComponent $component */
     $component = $manager->createInstance('simple_actions');
     $request = new Request(['hello' => 'world']);
     $result = $component->performAction('return_query', $request);
diff --git a/tests/src/Unit/ComponentBaseTest.php b/tests/src/Unit/ComponentBaseTest.php
index 30b99d4..e65d722 100644
--- a/tests/src/Unit/ComponentBaseTest.php
+++ b/tests/src/Unit/ComponentBaseTest.php
@@ -120,8 +120,8 @@ class ComponentBaseTest extends UnitTestCase {
       'provider' => 'sfc',
     ], FALSE, 'vfs:/', $file_system);
     $component->writeAssets();
-    $this->assertFileNotExists($js_file);
-    $this->assertFileNotExists($css_file);
+    $this->assertFileDoesNotExist($js_file);
+    $this->assertFileDoesNotExist($css_file);
     $component->setData('CSS', '.foo { color: pink; } .bar { background-image: url(../foo); } .baz { background-image: url(/foo); } .quz { background-image: url(http://google.com); .bar { background-image: url(foo); }');
     $component->writeAssets();
     $this->assertFileExists($css_file);
@@ -252,7 +252,7 @@ class ComponentBaseTest extends UnitTestCase {
    *
    * @codeCoverageIgnore
    */
-  protected function tearDown() {
+  protected function tearDown(): void {
     vfsStream::setup('sfc');
     if (is_file('vfs://sfc/components/test_component/test_component.js')) {
       unlink('vfs://sfc/components/test_component/test_component.js');
diff --git a/tests/src/Unit/TwigComponentLoaderTest.php b/tests/src/Unit/TwigComponentLoaderTest.php
index 28c0d70..1e29e84 100644
--- a/tests/src/Unit/TwigComponentLoaderTest.php
+++ b/tests/src/Unit/TwigComponentLoaderTest.php
@@ -20,14 +20,14 @@ class TwigComponentLoaderTest extends UnitTestCase {
   /**
    * The loader.
    *
-   * @var \Drupal\sfc\TwigComponentLoader
+   * @var TwigComponentLoader
    */
   protected $loader;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $manager = $this->createMock(ComponentPluginManager::class);
     $component = $this->createMock(ComponentBase::class);
