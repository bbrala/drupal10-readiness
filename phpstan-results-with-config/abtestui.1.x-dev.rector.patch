diff --git a/abtestui.install b/abtestui.install
index 4b83458..acf8b75 100644
--- a/abtestui.install
+++ b/abtestui.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ModuleInstallerInterface;
 /**
  * @file
  * Install file for the module.
@@ -155,7 +156,7 @@ function abtestui_update_8001() {
     return;
   }
 
-  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $installer */
+  /** @var ModuleInstallerInterface $installer */
   $installer = Drupal::service('module_installer');
   $installer->install(['abtestui_google_analytics']);
 }
diff --git a/abtestui.module b/abtestui.module
index 99318df..275ceb2 100644
--- a/abtestui.module
+++ b/abtestui.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\abtestui\Service\RequestParser;
 /**
  * @file
  * Module file for abtestui.
@@ -16,7 +17,7 @@ use Drupal\Core\Render\Markup;
 function abtestui_page_attachments(array &$attachments) {
   $attachments['#attached']['library'][] = 'abtestui/admin_design_always';
 
-  /** @var \Drupal\abtestui\Service\RequestParser $requestParser */
+  /** @var RequestParser $requestParser */
   $requestParser = Drupal::service('abtestui.request_parser');
   $cookieGathererScript = $requestParser->generateGathererScript();
 
@@ -53,7 +54,7 @@ function abtestui_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   // @todo: Clean up.
   if ($form_id === 'abjs_test' && isset($form['tid'])) {
     $id = $form['tid']['#value'];
-    /** @var \Drupal\abtestui\Service\TestStorage $storage */
+    /** @var TestStorage $storage */
     $storage = Drupal::service('abtestui.test_storage');
     $test = $storage->load($id);
 
diff --git a/modules/abtestui_google_analytics/abtestui_google_analytics.install b/modules/abtestui_google_analytics/abtestui_google_analytics.install
index 3207c42..e1d76cf 100644
--- a/modules/abtestui_google_analytics/abtestui_google_analytics.install
+++ b/modules/abtestui_google_analytics/abtestui_google_analytics.install
@@ -1,16 +1,16 @@
 <?php
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 /**
  * @file
  * Module install file.
  */
-
 /**
  * Implements hook_install().
  */
 function abtestui_google_analytics_install() {
   // Add custom dimension and the gatherer function to GA 'before' snippets.
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $configFactory */
+  /** @var ConfigFactoryInterface $configFactory */
   $configFactory = Drupal::configFactory();
 
   $analyticsConfigs = $configFactory->listAll('google_analytics');
diff --git a/modules/abtestui_google_analytics/abtestui_google_analytics.module b/modules/abtestui_google_analytics/abtestui_google_analytics.module
index 287ddc4..fcbe0be 100644
--- a/modules/abtestui_google_analytics/abtestui_google_analytics.module
+++ b/modules/abtestui_google_analytics/abtestui_google_analytics.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\abtestui\Service\TestStorage;
 /**
  * @file
  * Module files.
@@ -12,7 +13,7 @@ use Drupal\Core\Url;
  * Implements hook_form_FORM_ID_alter().
  */
 function abtestui_google_analytics_form_abtestui_test_alter(&$form, FormStateInterface $form_state, $form_id) {
-  $modulePath = drupal_get_path('module', 'abtestui_google_analytics');
+  $modulePath = \Drupal::service('extension.list.module')->getPath('abtestui_google_analytics');
 
   // Header.
   $configFactory = Drupal::configFactory();
@@ -53,7 +54,7 @@ function abtestui_google_analytics_form_abtestui_test_alter(&$form, FormStateInt
 
   $analyticsUrl = NULL;
   if (!empty($form['tid']['#value'])) {
-    /** @var \Drupal\abtestui\Service\TestStorage $testStorage */
+    /** @var TestStorage $testStorage */
     $testStorage = Drupal::service('abtestui.test_storage');
     $test = $testStorage->load($form['tid']['#value']);
     $analyticsUrl = empty($test['analytics_url']) ? NULL : $test['analytics_url'];
diff --git a/src/AbAjaxFormHelperTrait.php b/src/AbAjaxFormHelperTrait.php
index c31025b..33a8c03 100644
--- a/src/AbAjaxFormHelperTrait.php
+++ b/src/AbAjaxFormHelperTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\abtestui;
 
+use Drupal\Component\Datetime\TimeInterface;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal;
 
 /**
@@ -16,21 +18,21 @@ trait AbAjaxFormHelperTrait {
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Returns the time service.
    *
-   * @return \Drupal\Component\Datetime\TimeInterface
+   * @return TimeInterface
    *   The service.
    */
   public function time() {
@@ -44,7 +46,7 @@ trait AbAjaxFormHelperTrait {
   /**
    * Returns the current user.
    *
-   * @return \Drupal\Core\Session\AccountProxyInterface
+   * @return AccountProxyInterface
    *   The user.
    */
   public function currentUser() {
diff --git a/src/AbStorageTrait.php b/src/AbStorageTrait.php
index 01277ea..bbbcde0 100644
--- a/src/AbStorageTrait.php
+++ b/src/AbStorageTrait.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\abtestui;
 
+use Drupal\abtestui\Service\AbjsTestStorage;
+use Drupal\abtestui\Service\AbjsConditionStorage;
+use Drupal\abtestui\Service\AbjsExperienceStorage;
+use Drupal\abtestui\Service\VariationStorage;
+use Drupal\abtestui\Service\TestStorage;
 use Drupal;
 
 /**
@@ -16,42 +21,42 @@ trait AbStorageTrait {
   /**
    * A/B JS Test storage.
    *
-   * @var \Drupal\abtestui\Service\AbjsTestStorage
+   * @var AbjsTestStorage
    */
   protected $abjsTestStorage;
 
   /**
    * A/B JS Condition storage.
    *
-   * @var \Drupal\abtestui\Service\AbjsConditionStorage
+   * @var AbjsConditionStorage
    */
   protected $abjsConditionStorage;
 
   /**
    * A/B JS Experience storage.
    *
-   * @var \Drupal\abtestui\Service\AbjsExperienceStorage
+   * @var AbjsExperienceStorage
    */
   protected $abjsExperienceStorage;
 
   /**
    * Variation storage.
    *
-   * @var \Drupal\abtestui\Service\VariationStorage
+   * @var VariationStorage
    */
   protected $variationStorage;
 
   /**
    * Test storage.
    *
-   * @var \Drupal\abtestui\Service\TestStorage
+   * @var TestStorage
    */
   protected $testStorage;
 
   /**
    * A/B JS Test storage.
    *
-   * @return \Drupal\abtestui\Service\AbjsTestStorage
+   * @return AbjsTestStorage
    *   The storage service.
    */
   public function abjsTestStorage() {
@@ -65,7 +70,7 @@ trait AbStorageTrait {
   /**
    * A/B JS Condition storage.
    *
-   * @return \Drupal\abtestui\Service\AbjsConditionStorage
+   * @return AbjsConditionStorage
    *   The storage service.
    */
   public function abjsConditionStorage() {
@@ -79,7 +84,7 @@ trait AbStorageTrait {
   /**
    * A/B JS Experience storage.
    *
-   * @return \Drupal\abtestui\Service\AbjsExperienceStorage
+   * @return AbjsExperienceStorage
    *   The storage service.
    */
   public function abjsExperienceStorage() {
@@ -93,7 +98,7 @@ trait AbStorageTrait {
   /**
    * Variation storage.
    *
-   * @return \Drupal\abtestui\Service\VariationStorage
+   * @return VariationStorage
    *   The storage service.
    */
   public function variationStorage() {
@@ -107,7 +112,7 @@ trait AbStorageTrait {
   /**
    * Test storage.
    *
-   * @return \Drupal\abtestui\Service\TestStorage
+   * @return TestStorage
    *   The storage service.
    */
   public function testStorage() {
diff --git a/src/Controller/ListController.php b/src/Controller/ListController.php
index 063d6e5..67179a0 100644
--- a/src/Controller/ListController.php
+++ b/src/Controller/ListController.php
@@ -21,21 +21,21 @@ class ListController extends ControllerBase {
   /**
    * THe custom abtestui test storage.
    *
-   * @var \Drupal\abtestui\Service\TestStorage
+   * @var TestStorage
    */
   protected $testStorage;
 
   /**
    * Renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -60,11 +60,11 @@ class ListController extends ControllerBase {
   /**
    * ListController constructor.
    *
-   * @param \Drupal\abtestui\Service\TestStorage $testStorage
+   * @param TestStorage $testStorage
    *   Test storage.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   Renderer.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   Date formatter.
    */
   public function __construct(
@@ -75,7 +75,7 @@ class ListController extends ControllerBase {
     $this->testStorage = $testStorage;
     $this->renderer = $renderer;
     $this->dateFormatter = $dateFormatter;
-    $this->abtestuiPath = drupal_get_path('module', 'abtestui');
+    $this->abtestuiPath = \Drupal::service('extension.list.module')->getPath('abtestui');
   }
 
   /**
diff --git a/src/Form/ABTestDeleteForm.php b/src/Form/ABTestDeleteForm.php
index ca4b6f8..92e24de 100644
--- a/src/Form/ABTestDeleteForm.php
+++ b/src/Form/ABTestDeleteForm.php
@@ -18,7 +18,7 @@ class ABTestDeleteForm extends ConfirmFormBase {
   /**
    * A/B Test storage.
    *
-   * @var \Drupal\abtestui\Service\TestStorage
+   * @var TestStorage
    */
   private $testStorage;
 
@@ -34,7 +34,7 @@ class ABTestDeleteForm extends ConfirmFormBase {
   /**
    * ABTestDeleteForm constructor.
    *
-   * @param \Drupal\abtestui\Service\TestStorage $testStorage
+   * @param TestStorage $testStorage
    *   A/B Test storage.
    */
   public function __construct(
@@ -95,7 +95,7 @@ class ABTestDeleteForm extends ConfirmFormBase {
    *
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    * @param string|int|null $ab_test_id
    *   The test ID.
diff --git a/src/Form/ABTestForm.php b/src/Form/ABTestForm.php
index 50557a6..bc646ae 100644
--- a/src/Form/ABTestForm.php
+++ b/src/Form/ABTestForm.php
@@ -43,7 +43,7 @@ class ABTestForm extends FormBase {
    *
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    * @param string|int|null $ab_test_id
    *   The test ID.
@@ -51,7 +51,7 @@ class ABTestForm extends FormBase {
    * @return array
    *   The built form.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    */
   public function buildForm(array $form, FormStateInterface $form_state, $ab_test_id = NULL) {
     $test = $this->testStorage()->load($ab_test_id);
@@ -84,7 +84,7 @@ class ABTestForm extends FormBase {
         'link' => [
           '#title' => $this->t('How does this tool work?'),
           '#type' => 'link',
-          '#url' => Url::fromUri('base:/' . drupal_get_path('module', 'abtestui') . '/help/ab-test-tool-help.html'),
+          '#url' => Url::fromUri('base:/' . \Drupal::service('extension.list.module')->getPath('abtestui') . '/help/ab-test-tool-help.html'),
           '#options' => [
             'attributes' => [
               'class' => [
@@ -179,7 +179,7 @@ class ABTestForm extends FormBase {
     ];
     $form['variations_fieldgroup']['variations']['base']['name'] = [
       '#type' => 'item',
-      '#markup' => $this->t('Base URL') . ' <a href="/' . drupal_get_path('module', 'abtestui') . '/help/base-url.html" class="help-modal"><img width="20" height="20" src="/' . drupal_get_path('module', 'abtestui') . '/img/help.svg" alt="Help about the base URL"></a>',
+      '#markup' => $this->t('Base URL') . ' <a href="/' . \Drupal::service('extension.list.module')->getPath('abtestui') . '/help/base-url.html" class="help-modal"><img width="20" height="20" src="/' . \Drupal::service('extension.list.module')->getPath('abtestui') . '/img/help.svg" alt="Help about the base URL"></a>',
     ];
     $form['variations_fieldgroup']['variations']['base']['url'] = [
       '#type' => 'url',
@@ -381,7 +381,7 @@ class ABTestForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -396,7 +396,7 @@ class ABTestForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function ajaxRemoveVariation(array $form, FormStateInterface $form_state) {
@@ -435,7 +435,7 @@ class ABTestForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function ajaxAddVariation(array $form, FormStateInterface $form_state) {
@@ -508,7 +508,7 @@ class ABTestForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function cancelCallback(array &$form, FormStateInterface $form_state) {
@@ -520,7 +520,7 @@ class ABTestForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function deleteCallback(array &$form, FormStateInterface $form_state) {
diff --git a/src/Service/AbjsConditionStorage.php b/src/Service/AbjsConditionStorage.php
index 7757bbd..8ac821b 100644
--- a/src/Service/AbjsConditionStorage.php
+++ b/src/Service/AbjsConditionStorage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\abtestui\Service;
 
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Database\Connection;
 use PDO;
 use function array_keys;
@@ -18,14 +19,14 @@ class AbjsConditionStorage {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $db;
 
   /**
    * AbjsConditionStorage constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
    */
   public function __construct(Connection $database) {
@@ -38,7 +39,7 @@ class AbjsConditionStorage {
    * @param array $values
    *   Condition data.
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|mixed|string|null
+   * @return StatementInterface|int|mixed|string|null
    *   The ID of the saved condition.
    *
    * @throws \Exception
diff --git a/src/Service/AbjsExperienceStorage.php b/src/Service/AbjsExperienceStorage.php
index a5bac37..43b7fb8 100644
--- a/src/Service/AbjsExperienceStorage.php
+++ b/src/Service/AbjsExperienceStorage.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\abtestui\Service;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ -25,50 +27,50 @@ class AbjsExperienceStorage {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $db;
 
   /**
    * Logger channel for abtestui.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   private $logger;
 
   /**
    * Drupal state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   private $state;
 
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   private $time;
 
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   private $currentUser;
 
   /**
    * AbjsExperienceStorage constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   DB connection.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
    *   Logger channel factory.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user.
    */
   public function __construct(
@@ -88,7 +90,7 @@ class AbjsExperienceStorage {
   /**
    * Creates the control experience, or loads it.
    *
-   * @return bool|\Drupal\Core\Database\StatementInterface|int|string|null
+   * @return bool|StatementInterface|int|string|null
    *   The ID of the control experience.
    *
    * @throws \Exception
@@ -142,7 +144,7 @@ class AbjsExperienceStorage {
   /**
    * Creates the control experience.
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|string|null
+   * @return StatementInterface|int|string|null
    *   The ID of the control.
    *
    * @throws \Exception
@@ -173,7 +175,7 @@ class AbjsExperienceStorage {
    * @param array $values
    *   An associative array of values.
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|mixed|string|null
+   * @return StatementInterface|int|mixed|string|null
    *   The ID of the saved experience.
    *
    * @throws \Exception
diff --git a/src/Service/AbjsTestStorage.php b/src/Service/AbjsTestStorage.php
index bcc435a..60981f4 100644
--- a/src/Service/AbjsTestStorage.php
+++ b/src/Service/AbjsTestStorage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\abtestui\Service;
 
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Database\Connection;
 
 /**
@@ -20,14 +21,14 @@ class AbjsTestStorage {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $db;
 
   /**
    * AbjsTestStorage constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(Connection $database) {
@@ -40,7 +41,7 @@ class AbjsTestStorage {
    * @param array $values
    *   Test data.
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|mixed|string|null
+   * @return StatementInterface|int|mixed|string|null
    *   The saved test ID.
    *
    * @throws \Exception
diff --git a/src/Service/RequestParser.php b/src/Service/RequestParser.php
index 18f2c73..cff5725 100644
--- a/src/Service/RequestParser.php
+++ b/src/Service/RequestParser.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\abtestui\Service;
 
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
 use PDO;
@@ -22,32 +24,32 @@ class RequestParser {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $database;
 
   /**
    * The current request.
    *
-   * @var null|\Symfony\Component\HttpFoundation\Request
+   * @var null|Request
    */
   private $request;
 
   /**
    * The abjs config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   private $abjsConfig;
 
   /**
    * RequestParser constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request stack.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
    */
   public function __construct(
@@ -166,7 +168,7 @@ class RequestParser {
     $mapValues = json_encode($mapValues);
 
     // Get the gatherer JS code.
-    $cookieGathererScript = file_get_contents(drupal_get_path('module', 'abtestui') . '/js/gatherCookieData.js');
+    $cookieGathererScript = file_get_contents(\Drupal::service('extension.list.module')->getPath('abtestui') . '/js/gatherCookieData.js');
     // Replace the placeholders as needed.
     $cookieGathererScript = str_replace(
       ['{{ cookie_prefix }}', "'{{ test_replace_map_content }}'"],
diff --git a/src/Service/TestStorage.php b/src/Service/TestStorage.php
index 8f93ebf..f424339 100644
--- a/src/Service/TestStorage.php
+++ b/src/Service/TestStorage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\abtestui\Service;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 
@@ -17,59 +18,59 @@ class TestStorage {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $db;
 
   /**
    * Logger channel fo abtestui.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   private $logger;
 
   /**
    * Variation storage.
    *
-   * @var \Drupal\abtestui\Service\VariationStorage
+   * @var VariationStorage
    */
   private $variationStorage;
 
   /**
    * A/B JS test storage.
    *
-   * @var \Drupal\abtestui\Service\AbjsTestStorage
+   * @var AbjsTestStorage
    */
   private $abjsTestStorage;
 
   /**
    * A/B JS condition storage.
    *
-   * @var \Drupal\abtestui\Service\AbjsConditionStorage
+   * @var AbjsConditionStorage
    */
   private $abjsConditionStorage;
 
   /**
    * A/B JS experience storage.
    *
-   * @var \Drupal\abtestui\Service\AbjsExperienceStorage
+   * @var AbjsExperienceStorage
    */
   private $abjsExperienceStorage;
 
   /**
    * TestStorage constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   DB Connection.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
    *   Logger channel factory.
-   * @param \Drupal\abtestui\Service\VariationStorage $variationStorage
+   * @param VariationStorage $variationStorage
    *   Variation storage.
-   * @param \Drupal\abtestui\Service\AbjsTestStorage $abjsTestStorage
+   * @param AbjsTestStorage $abjsTestStorage
    *   A/B JS test storage.
-   * @param \Drupal\abtestui\Service\AbjsConditionStorage $abjsConditionStorage
+   * @param AbjsConditionStorage $abjsConditionStorage
    *   A/B JS condition storage.
-   * @param \Drupal\abtestui\Service\AbjsExperienceStorage $abjsExperienceStorage
+   * @param AbjsExperienceStorage $abjsExperienceStorage
    *   A/B JS experience storage.
    */
   public function __construct(
diff --git a/src/Service/VariationStorage.php b/src/Service/VariationStorage.php
index 0c2c277..ace040c 100644
--- a/src/Service/VariationStorage.php
+++ b/src/Service/VariationStorage.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\abtestui\Service;
 
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Database\Connection;
 
 /**
@@ -16,14 +17,14 @@ class VariationStorage {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $db;
 
   /**
    * VariationStorage constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
    */
   public function __construct(Connection $database) {
@@ -36,7 +37,7 @@ class VariationStorage {
    * @param array $values
    *   Variation data.
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|mixed|string|null
+   * @return StatementInterface|int|mixed|string|null
    *   The variation ID.
    *
    * @throws \Exception
