diff --git a/composer.json b/composer.json
index 27af96d..5cb1670 100755
--- a/composer.json
+++ b/composer.json
@@ -18,6 +18,6 @@
     "license": "GPL-2.0+",
     "minimum-stability": "dev",
     "require": {
-        "drupal/core": "^8 || ^9"
+        "drupal/core": "^9.1 || ^10"
     }
 }
diff --git a/cyrillic_to_latin.info.yml b/cyrillic_to_latin.info.yml
index 31a008a..ccbe0be 100644
--- a/cyrillic_to_latin.info.yml
+++ b/cyrillic_to_latin.info.yml
@@ -1,8 +1,7 @@
 name: 'Cyrillic to Latin'
 description: 'Converts cyrillic to latin letters on the fly for the Serbian language.'
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: 'Multilingual'
 configure: cyrillic_to_latin.admin_settings
 dependencies:
diff --git a/cyrillic_to_latin.module b/cyrillic_to_latin.module
index e646cc4..8e5aedb 100644
--- a/cyrillic_to_latin.module
+++ b/cyrillic_to_latin.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\ConfigFactory;
 /**
  * @file
  * This is the primary module file.
@@ -92,7 +93,7 @@ function cyrillic_to_latin_preprocess_views_view_field(&$variables) {
  *   TRUE if the module is enabled, FALSE otherwise.
  */
 function cyrillic_to_latin_is_module_enabled() {
-  /** @var \Drupal\Core\Config\ConfigFactory $config */
+  /** @var ConfigFactory $config */
   $config = \Drupal::configFactory()->get('cyrillic_to_latin.settings');
   if (!$config->get('enabled')) {
     return FALSE;
diff --git a/src/EventSubscriber/LocaleSubscriber.php b/src/EventSubscriber/LocaleSubscriber.php
index d03ba38..eac206a 100644
--- a/src/EventSubscriber/LocaleSubscriber.php
+++ b/src/EventSubscriber/LocaleSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cyrillic_to_latin\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\cyrillic_to_latin\CyrillicToLatinManager;
 use Drupal\locale\LocaleEvent;
@@ -16,23 +17,23 @@ class LocaleSubscriber implements EventSubscriberInterface {
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The locale storage.
    *
-   * @var \Drupal\locale\StringStorageInterface
+   * @var StringStorageInterface
    */
   protected $localeStorage;
 
   /**
    * Constructs a new FormAjaxSubscriber.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\locale\StringStorageInterface $locale_storage
+   * @param StringStorageInterface $locale_storage
    *   The locale storage.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StringStorageInterface $locale_storage) {
@@ -51,7 +52,7 @@ class LocaleSubscriber implements EventSubscriberInterface {
   /**
    * This method is called when the locale.save_translation is dispatched.
    *
-   * @param \Drupal\locale\LocaleEvent $event
+   * @param LocaleEvent $event
    *   The dispatched event.
    */
   public function localeSaveTranslation(LocaleEvent $event) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 2570f08..5aed72d 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -16,7 +16,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
diff --git a/tests/src/Functional/CyrillicToLatinConversionTest.php b/tests/src/Functional/CyrillicToLatinConversionTest.php
index fbc2e3f..e88d572 100644
--- a/tests/src/Functional/CyrillicToLatinConversionTest.php
+++ b/tests/src/Functional/CyrillicToLatinConversionTest.php
@@ -35,7 +35,7 @@ class CyrillicToLatinConversionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $language = ConfigurableLanguage::createFromLangcode('sr');
@@ -75,16 +75,34 @@ class CyrillicToLatinConversionTest extends BrowserTestBase {
     $node_sr->save();
 
     $this->drupalGet('node/1');
-    $this->assertResponse(200);
-    $this->assertText('Ово је само тест');
-    $this->assertText('Ово је бодy');
-    $this->assertText('Ово је из Тwига');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Ово је само тест');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Ово је бодy');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Ово је из Тwига');
 
     $this->drupalGet('sr/node/1');
-    $this->assertResponse(200);
-    $this->assertText('Ovo je samo test');
-    $this->assertText('Ovo je body');
-    $this->assertText('Ovo je iz Twiga');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Ovo je samo test');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Ovo je body');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Ovo je iz Twiga');
   }
 
 }
diff --git a/tests/src/Functional/CyrillicToLatinUITest.php b/tests/src/Functional/CyrillicToLatinUITest.php
index 9eb917b..78967d0 100644
--- a/tests/src/Functional/CyrillicToLatinUITest.php
+++ b/tests/src/Functional/CyrillicToLatinUITest.php
@@ -35,7 +35,7 @@ class CyrillicToLatinUITest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalLogin($this->drupalCreateUser(['administer site configuration']));
@@ -71,8 +71,9 @@ class CyrillicToLatinUITest extends BrowserTestBase {
       'languages[en]' => TRUE,
       'languages[sr]' => FALSE,
     ];
+    $this->drupalGet('admin/config/regional/cyrillic-to-latin');
 
-    $this->drupalPostForm('admin/config/regional/cyrillic-to-latin', $form_values, 'Save configuration');
+    $this->submitForm($form_values, 'Save configuration');
     $this->assertSession()->pageTextContains($this->t('The configuration options have been saved. You must clear the cache for the change to take effect.'));
     $this->assertSession()->fieldValueEquals('enabled', '1');
     $this->assertSession()->fieldValueEquals('transliterate_on_po_import', '');
