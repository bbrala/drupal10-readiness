diff --git a/modules/layout_options_ui/src/Form/Settings.php b/modules/layout_options_ui/src/Form/Settings.php
index 1b201e5..28cbc9c 100644
--- a/modules/layout_options_ui/src/Form/Settings.php
+++ b/modules/layout_options_ui/src/Form/Settings.php
@@ -17,14 +17,14 @@ class Settings extends ConfigFormBase {
   /**
    * The layout plugin manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManager
+   * @var LayoutPluginManager
    */
   protected $layoutPluginManager;
 
   /**
    * The plugin cache clear object.
    *
-   * @var \Drupal\Core\ProxyClass\Plugin\CachedDiscoveryClearer
+   * @var CachedDiscoveryClearer
    */
   protected $pluginCacheClearer;
 
diff --git a/src/Annotation/LayoutOption.php b/src/Annotation/LayoutOption.php
index cc77aa6..da962c8 100644
--- a/src/Annotation/LayoutOption.php
+++ b/src/Annotation/LayoutOption.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_options\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class LayoutOption extends Plugin {
   /**
    * The human-readable name of the option type.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +31,7 @@ class LayoutOption extends Plugin {
   /**
    * A short description of the option.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/LayoutOptionPluginManager.php b/src/LayoutOptionPluginManager.php
index 7c7c816..653eed6 100644
--- a/src/LayoutOptionPluginManager.php
+++ b/src/LayoutOptionPluginManager.php
@@ -17,9 +17,9 @@ class LayoutOptionPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(
diff --git a/src/OptionBase.php b/src/OptionBase.php
index 01f7d06..435886a 100644
--- a/src/OptionBase.php
+++ b/src/OptionBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_options;
 
+use Drupal\Core\Layout\LayoutDefinition;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\NestedArray;
@@ -159,7 +160,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
    *   The region being processed.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    * @param mixed $default
    *   The default value to use.
@@ -276,7 +277,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
    *   The region to create this form.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    * @param mixed $default
    *   The default value to use.
@@ -324,7 +325,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
    *   The region to create this form.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    * @param mixed $default
    *   The default value to use.
@@ -378,7 +379,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
    *   The region to create this form.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    * @param mixed $default
    *   The default value to use.
@@ -430,7 +431,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
    *   The region to create this form.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    * @param mixed $default
    *   The default value to use.
@@ -533,7 +534,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
   /**
    * Get the Layout plugin using this option plug's definition.
    *
-   * @return \Drupal\Core\Layout\LayoutDefinition
+   * @return LayoutDefinition
    *   Layout definition object.
    */
   public function getLayoutDefinition() {
@@ -574,7 +575,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
    *
    * @param array $form
    *   The form Array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    * @param bool $multi
    *   Flag to indicate that multiple space separated values can be specified.
@@ -640,7 +641,7 @@ abstract class OptionBase extends PluginBase implements OptionInterface {
   /**
    * Handle getting config value from either a ERL form or Layout Builder form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    * @param string $region
    *   The region to use.
diff --git a/src/OptionInterface.php b/src/OptionInterface.php
index 04e7369..44a1514 100644
--- a/src/OptionInterface.php
+++ b/src/OptionInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_options;
 
+use Drupal\Core\Layout\LayoutDefault;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -46,7 +47,7 @@ interface OptionInterface extends PluginInspectionInterface, ConfigurableInterfa
   /**
    * Return the Layout Plugin using this Option.
    *
-   * @return \Drupal\Core\Layout\LayoutDefault
+   * @return LayoutDefault
    *   The layout plugin or NULL if it has not been set.
    */
   public function getLayoutPlugin();
@@ -82,7 +83,7 @@ interface OptionInterface extends PluginInspectionInterface, ConfigurableInterfa
    *   The regions being configured (layout = overall)
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    *
    * @return array
@@ -95,7 +96,7 @@ interface OptionInterface extends PluginInspectionInterface, ConfigurableInterfa
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    */
   public function validateFormOption(array &$form, FormStateInterface $formState);
@@ -107,7 +108,7 @@ interface OptionInterface extends PluginInspectionInterface, ConfigurableInterfa
    *   The layout plugin configuration.
    * @param array $form
    *   The configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state object.
    *
    * @return string[]
diff --git a/src/Plugin/Layout/LayoutOptions.php b/src/Plugin/Layout/LayoutOptions.php
index 3f9c716..6ecd827 100644
--- a/src/Plugin/Layout/LayoutOptions.php
+++ b/src/Plugin/Layout/LayoutOptions.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_options\Plugin\Layout;
 
+use Drupal\layout_options\OptionInterface;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Discovery\YamlDiscovery;
@@ -30,28 +31,28 @@ class LayoutOptions extends LayoutDefault implements PluginFormInterface, Contai
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The LayoutOptionPlugin service.
    *
-   * @var \Drupal\layout_options\LayoutOptionPluginManager
+   * @var LayoutOptionPluginManager
    */
   protected $layoutOptionManager;
 
   /**
    * The YAML discovery class to find all .layout_options.yml files.
    *
-   * @var \Drupal\Core\Discovery\YamlDiscovery
+   * @var YamlDiscovery
    */
   protected $yamlDiscovery;
 
@@ -65,7 +66,7 @@ class LayoutOptions extends LayoutDefault implements PluginFormInterface, Contai
   /**
    * The option plug local cache.
    *
-   * @var \Drupal\layout_options\OptionInterface[]
+   * @var OptionInterface[]
    */
   protected $optionPlugins = [];
 
@@ -78,11 +79,11 @@ class LayoutOptions extends LayoutDefault implements PluginFormInterface, Contai
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler object.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler
+   * @param ThemeHandlerInterface $themeHandler
    *   The theme handler object.
-   * @param \Drupal\layout_options\LayoutOptionPluginManager $layoutOptionManager
+   * @param LayoutOptionPluginManager $layoutOptionManager
    *   The theme handler object.
    */
   public function __construct(
@@ -102,7 +103,7 @@ class LayoutOptions extends LayoutDefault implements PluginFormInterface, Contai
   /**
    * Handle plugin injection.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container.
    * @param array $configuration
    *   The configuration array.
@@ -188,7 +189,7 @@ class LayoutOptions extends LayoutDefault implements PluginFormInterface, Contai
    *
    * @param array $form
    *   The Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current state of the form.
    */
   public function processConfigurationForm(array $form, FormStateInterface $form_state) {
@@ -427,7 +428,7 @@ class LayoutOptions extends LayoutDefault implements PluginFormInterface, Contai
   /**
    * Gets the YAML discovery object used to load the layout_options yaml files..
    *
-   * @return \Drupal\Core\Discovery\YamlDiscovery
+   * @return YamlDiscovery
    *   The YAML discovery object.
    */
   public function getYamlDiscovery() {
@@ -454,7 +455,7 @@ class LayoutOptions extends LayoutDefault implements PluginFormInterface, Contai
    * @param bool $bypassCache
    *   Option to allow bypassing cached plugin info.
    *
-   * @return \Drupal\layout_options\OptionInterface|null
+   * @return OptionInterface|null
    *   The plugin or NULL in not found.
    */
   public function getOptionPlugin(string $optionId, array $optionDefinition, bool $bypassCache = FALSE) {
diff --git a/tests/src/Kernel/LayoutOptionsTest.php b/tests/src/Kernel/LayoutOptionsTest.php
index 50933a0..d88a351 100644
--- a/tests/src/Kernel/LayoutOptionsTest.php
+++ b/tests/src/Kernel/LayoutOptionsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\layout_options\Kernel;
 
+use Drupal\Core\Layout\LayoutPluginManagerInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\Core\Layout\LayoutDefinition;
 use Drupal\KernelTests\KernelTestBase;
@@ -27,7 +28,7 @@ class LayoutOptionsTest extends KernelTestBase {
   /**
    * The layout plugin manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutPluginManager;
 
@@ -112,7 +113,7 @@ class LayoutOptionsTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->layoutPluginManager = $this->container->get('plugin.manager.core.layout');
@@ -132,10 +133,10 @@ class LayoutOptionsTest extends KernelTestBase {
    *   The layout id to use.
    * @param array $configuration
    *   The configuration used by the plugin.
-   * @param \Drupal\Core\Layout\LayoutDefinition $definition
+   * @param LayoutDefinition $definition
    *   The layout Definition.
    *
-   * @return \Drupal\layout_options\Plugin\Layout\LayoutOptions
+   * @return LayoutOptions
    *   A new initialized LayoutOptions object.
    */
   protected function getLayoutOptionsPlugin(string $layoutId = "test_50_50", array $configuration = [], LayoutDefinition $definition = NULL) {
@@ -198,7 +199,7 @@ class LayoutOptionsTest extends KernelTestBase {
     $this->assertArrayHasKey('layout_id_theme', $results, "Has theme defined option");
     $this->assertArrayHasKey('layout_id', $results, "Has module defined option");
     $this->assertArrayHasKey('layout_bg_color', $results, "Has layout bg color option");
-    $this->assertEqual($results['layout_bg_color']['title'], 'Theme Background color', "Theme override worked");
+    $this->assertEquals($results['layout_bg_color']['title'], 'Theme Background color', "Theme override worked");
   }
 
   /**
