modules/contrib/gender/gender.install
modules/contrib/gender/gender.module
modules/contrib/gender/src/Plugin/Field/FieldType/Gender.php
modules/contrib/gender/src/Plugin/Field/FieldWidget/GenderDefaultWidget.php
modules/contrib/gender/tests/src/Functional/GenderDefaultWidgetTest.php
modules/contrib/gender/tests/src/Functional/GenderFormatterTest.php
modules/contrib/gender/tests/src/Functional/GenderInstallTest.php
modules/contrib/gender/tests/src/Functional/GenderTestBase.php
modules/contrib/gender/tests/src/Functional/HelpFieldTest.php

6 files with changes
====================

1) modules/contrib/gender/tests/src/Functional/HelpFieldTest.php:67

    ---------- begin diff ----------
@@ @@
     $description_text = $this->getTextFromElement(self::DESCRIPTION_ELEMENT_SELECTOR);
     // Assert that the description text has been modified by adding the new
     // text.
-    $this->assertContains(self::NEW_HELP_TEXT, $description_text);
+    $this->assertStringContainsString(self::NEW_HELP_TEXT, $description_text);
     // Find the help text field itself.
     $help_text_field = $this->assertSession()->elementExists('css', self::HELP_FIELD_ELEMENT_SELECTOR);
     // Assert that the field is required.
@@ @@
     // Get the text from the description element.
     $description_text = $this->getTextFromElement(self::DESCRIPTION_ELEMENT_SELECTOR);
     // Assert that the description text has not been modified.
-    $this->assertNotContains(self::NEW_HELP_TEXT, $description_text);
+    $this->assertStringNotContainsString(self::NEW_HELP_TEXT, $description_text);
     // Find the help text field itself.
     $help_text_field = $this->assertSession()->elementExists('css', self::HELP_FIELD_ELEMENT_SELECTOR);
     // Assert that the field is required.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/gender/tests/src/Functional/GenderTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\gender\Functional;

+use Drupal\node\NodeInterface;
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * The node object to use in testing.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;

@@ @@
   /**
    * The user object to use in testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Create and log in the user.
     $this->user = $this->createUser([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/gender/tests/src/Functional/GenderInstallTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\gender\Functional;

+use Drupal\user\UserInterface;
+use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * The user object to use in testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in the user.
     $this->user = $this->drupalCreateUser([
@@ @@
     $this->getSession()->getPage()->checkField('edit-modules-gender-enable');
     $this->getSession()->getPage()->findButton('Install')->click();
     // Verify that the install message appears.
-    $this->assertPattern('/consult the .{0,100}help page/');
-    $this->assertLinkByHref(\Drupal::url('help.page', ['name' => 'gender']));
+    $this->assertSession()->responseMatches('/consult the .{0,100}help page/');
+    $this->assertSession()->linkByHrefExists(Url::fromRoute('help.page', ['name' => 'gender'])->toString());
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertLinkByHrefRector
 * AssertPatternRector
 * DrupalURLRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/gender/tests/src/Functional/GenderDefaultWidgetTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\gender\Functional;

+use Behat\Mink\Element\NodeElement;
 use Drupal\Core\Url;

 /**
@@ @@
     $checkbox_list = $page->findAll('css', 'input[name^=field_gender]');
     // Assert that the correct number of checkboxes are present.
     $this->assertEquals(count($gender_options), count($checkbox_list));
-    /** @var \Behat\Mink\Element\NodeElement $checkbox */
+    /** @var NodeElement $checkbox */
     foreach ($checkbox_list as $checkbox) {
       // Assert that each checkbox has a value from the options list.
       $value = $checkbox->getAttribute('value');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/gender/src/Plugin/Field/FieldType/Gender.php:85

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   protected static function validateAllowedValue($option) {
-    if (Unicode::strlen($option) > 255) {
+    if (mb_strlen($option) > 255) {
       return t('Allowed values list: each key must be a string at most 255 characters long.');
     }
   }
    ----------- end diff -----------

Applied rules:
 * UnicodeStrlenRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/gender/gender.module:201

    ---------- begin diff ----------
@@ @@
     $messenger->addMessage(
       t(
         'Please read the <a href="@url">help page</a> for the Gender module.',
-        ['@url' => \Drupal::url('help.page', ['name' => 'gender'])]
+        ['@url' => Url::fromRoute('help.page', ['name' => 'gender'])->toString()]
       )
     );
   }
    ----------- end diff -----------

Applied rules:
 * DrupalURLRector
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

