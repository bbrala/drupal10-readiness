diff --git a/tests/src/Functional/Plugin/StyleJumpMenuTest.php b/tests/src/Functional/Plugin/StyleJumpMenuTest.php
index f27fa6b..4d5eda2 100644
--- a/tests/src/Functional/Plugin/StyleJumpMenuTest.php
+++ b/tests/src/Functional/Plugin/StyleJumpMenuTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\views_jump_menu\Functional\Plugin;
 
+use Drupal\Core\GeneratedUrl;
 use Drupal\Tests\views\Functional\ViewTestBase;
 
 /**
@@ -40,14 +41,14 @@ class StyleJumpMenuTest extends ViewTestBase {
   /**
    * The canonical URL for a test user, as a string.
    *
-   * @var \Drupal\Core\GeneratedUrl|string
+   * @var GeneratedUrl|string
    */
   protected $viewsJumpMenuTestUserUrlString;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);
 
     $this->enableViewsTestModule();
@@ -68,13 +69,13 @@ class StyleJumpMenuTest extends ViewTestBase {
    * Tests jump menu JavaScript library.
    */
   public function testJumpMenuLibrary() {
-    $viewsJumpMenuModulePath = drupal_get_path('module', 'views_jump_menu');
+    $viewsJumpMenuModulePath = \Drupal::service('extension.list.module')->getPath('views_jump_menu');
 
     // Navigate to the test view.
     $this->drupalGet('test-style-jump-menu');
 
     // Check that the library was output onto the page.
-    $this->assertRaw($viewsJumpMenuModulePath . '/js/views-jump-menu.js');
+    $this->assertSession()->responseContains($viewsJumpMenuModulePath . '/js/views-jump-menu.js');
   }
 
   /**
@@ -119,7 +120,7 @@ class StyleJumpMenuTest extends ViewTestBase {
 
     // Assert that there is a drupalSetting for this particular select list, and
     // by default, it is not set to open in a new window.
-    $this->assertRaw('viewsJumpMenu":{"test-style-jump-menu-page-test-jump-menu-jump-menu":{"new_window":false}}');
+    $this->assertSession()->responseContains('viewsJumpMenu":{"test-style-jump-menu-page-test-jump-menu-jump-menu":{"new_window":false}}');
 
     // Check that the jump menu has a prompt option.
     $testUserOption = $this->xpath('//option[. = "-- Select --"]');
@@ -134,7 +135,7 @@ class StyleJumpMenuTest extends ViewTestBase {
     // URL.
     $testUserOption = $this->xpath('//option[@data-url]');
     $this->assertGreaterThan(0, count($testUserOption), 'Ensure there options with the data-url attribute');
-    $this->assertEqual($testUserOption[1]->getAttribute('data-url'), $this->viewsJumpMenuTestUserUrlString, 'Ensure there is an option with the data-url ' . $this->viewsJumpMenuTestUserUrlString);
+    $this->assertEquals($testUserOption[1]->getAttribute('data-url'), $this->viewsJumpMenuTestUserUrlString, 'Ensure there is an option with the data-url ' . $this->viewsJumpMenuTestUserUrlString);
   }
 
   /**
@@ -153,7 +154,7 @@ class StyleJumpMenuTest extends ViewTestBase {
 
     // Assert that there is a drupalSetting for this particular select list, and
     // by default, it is set to open in a new window.
-    $this->assertRaw('viewsJumpMenu":{"test-style-jump-menu-page-test-jump-menu-jump-menu":{"new_window":true}}');
+    $this->assertSession()->responseContains('viewsJumpMenu":{"test-style-jump-menu-page-test-jump-menu-jump-menu":{"new_window":true}}');
   }
 
 }
diff --git a/views_jump_menu.info.yml b/views_jump_menu.info.yml
index c9845bb..dc95336 100644
--- a/views_jump_menu.info.yml
+++ b/views_jump_menu.info.yml
@@ -1,8 +1,7 @@
 name: Views Jump Menu
 type: module
 description: 'Displays Views results as a Select list that links to an entity when clicked.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Views
 dependencies:
   - drupal:views
diff --git a/views_jump_menu.module b/views_jump_menu.module
index 42429e9..1302298 100644
--- a/views_jump_menu.module
+++ b/views_jump_menu.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\views\ViewExecutable;
+use Drupal\views\ResultRow;
+use Drupal\views\Plugin\views\field\FieldHandlerInterface;
 /**
  * @file
  * Contains views_jump_menu.module.
@@ -55,9 +58,9 @@ function _views_jump_menu_get_select_classes(array $options) {
  * Implements template_preprocess_views_jump_menu().
  */
 function views_jump_menu_preprocess_views_jump_menu(&$variables) {
-  /** @var Drupal\views\ViewExecutable $view */
+  /** @var ViewExecutable $view */
   $view = $variables['view'];
-  /** @var Drupal\views\ResultRow[] $rows */
+  /** @var ResultRow[] $rows */
   $rows = $variables['rows'];
   $options = $view->style_plugin->options;
 
@@ -88,7 +91,7 @@ function views_jump_menu_preprocess_views_jump_menu(&$variables) {
 
     /**
      * @var string $id
-     * @var Drupal\views\ResultRow $row
+     * @var ResultRow $row
      */
     foreach ($rows as $id => $row) {
       $view->row_index = $row->index;
@@ -96,7 +99,7 @@ function views_jump_menu_preprocess_views_jump_menu(&$variables) {
       // Make sure each field handler has cached the right contents before
       // rendering them in the select field.
       foreach (['label_field', 'url_field'] as $fieldType) {
-        /** @var \Drupal\views\Plugin\views\field\FieldHandlerInterface $handler */
+        /** @var FieldHandlerInterface $handler */
         foreach ($view->field[$options[$fieldType]]->displayHandler->getHandlers('field') as $handler) {
           $handler->advancedRender($row);
         }
