modules/contrib/csv_importer/csv_importer.module
modules/contrib/csv_importer/src/Annotation/Importer.php
modules/contrib/csv_importer/src/Form/ImporterForm.php
modules/contrib/csv_importer/src/Parser.php
modules/contrib/csv_importer/src/ParserInterface.php
modules/contrib/csv_importer/src/Plugin/Importer/CommentImporter.php
modules/contrib/csv_importer/src/Plugin/Importer/MenuLinkImporter.php
modules/contrib/csv_importer/src/Plugin/Importer/NodeImporter.php
modules/contrib/csv_importer/src/Plugin/Importer/TaxonomyImporter.php
modules/contrib/csv_importer/src/Plugin/Importer/UserImporter.php
modules/contrib/csv_importer/src/Plugin/ImporterBase.php
modules/contrib/csv_importer/src/Plugin/ImporterInterface.php
modules/contrib/csv_importer/src/Plugin/ImporterManager.php
modules/contrib/csv_importer/tests/src/FunctionalJavascript/ImporterTest.php

6 files with changes
====================

1) modules/contrib/csv_importer/tests/src/FunctionalJavascript/ImporterTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $account = $this->drupalCreateUser([
@@ @@
       $page->selectFieldOption('entity_type_bundle', $entity_type_bundle);
     }

-    $page->attachFileToField('files[csv]', drupal_get_path('module', 'csv_importer_test') . "/content/csv_example_{$entity_type}_test.csv");
+    $page->attachFileToField('files[csv]', \Drupal::service('extension.list.module')->getPath('csv_importer_test') . "/content/csv_example_{$entity_type}_test.csv");
     $assert->assertWaitOnAjaxRequest();

     $page->pressButton('Import');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/csv_importer/src/Plugin/ImporterManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/csv_importer/src/Plugin/ImporterBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\csv_importer\Plugin;

+use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Plugin\PluginBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The config service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config) {
@@ @@

     foreach ($content as $key => $item) {
       if (is_string($item) && file_exists($item)) {
-        $created = file_save_data(file_get_contents($item), $this->config->get('system.file')->get('default_scheme') . '://' . basename($item), FileSystemInterface::EXISTS_REPLACE);
+        $created = \Drupal::service('file.repository')->writeData(file_get_contents($item), $this->config->get('system.file')->get('default_scheme') . '://' . basename($item), FileSystemInterface::EXISTS_REPLACE);
         $content[$key] = $created->id();
       }
     }

-    /** @var \Drupal\Core\Entity\Sql\SqlContentEntityStorage $entity_storage  */
+    /** @var SqlContentEntityStorage $entity_storage  */
     $entity_storage = $this->entityTypeManager->getStorage($this->configuration['entity_type']);

     try {
       if (isset($content[$entity_definition->getKeys()['id']]) && $entity = $entity_storage->load($content[$entity_definition->getKeys()['id']])) {
-        /** @var \Drupal\Core\Entity\ContentEntityInterface $entity  */
+        /** @var ContentEntityInterface $entity  */
         foreach ($content as $id => $set) {
           $entity->set($id, $set);
         }
@@ @@
         }
       }
       else {
-        /** @var \Drupal\Core\Entity\ContentEntityInterface $entity  */
+        /** @var ContentEntityInterface $entity  */
         $entity = $this->entityTypeManager->getStorage($this->configuration['entity_type'])->create($content);

         if ($entity->save()) {
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/csv_importer/src/ParserInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\csv_importer;

+use Drupal\file\Entity\File;
 /**
  * Csv parser manager interface.
  */
@@ @@
    * @param int $id
    *   CSV id.
    *
-   * @return \Drupal\file\Entity\File|null
+   * @return File|null
    *   Entity object.
    */
   public function getCsvEntity(int $id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/csv_importer/src/Parser.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs Parser object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/csv_importer/src/Form/ImporterForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The entity bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityBundleInfo;

@@ @@
   /**
    * The parser service.
    *
-   * @var \Drupal\csv_importer\ParserInterface
+   * @var ParserInterface
    */
   protected $parser;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The importer plugin manager service.
    *
-   * @var \Drupal\csv_importer\Plugin\ImporterManager
+   * @var ImporterManager
    */
   protected $importer;

@@ @@
   /**
    * ImporterForm class constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_bundle_info
    *   The entity bundle info service.
-   * @param \Drupal\csv_importer\ParserInterface $parser
+   * @param ParserInterface $parser
    *   The parser service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\csv_importer\Plugin\ImporterManager $importer
+   * @param ImporterManager $importer
    *   The importer plugin manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, EntityTypeBundleInfoInterface $entity_bundle_info, ParserInterface $parser, RendererInterface $renderer, ImporterManager $importer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

