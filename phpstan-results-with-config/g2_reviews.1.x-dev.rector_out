modules/contrib/g2_reviews/g2_reviews.module
modules/contrib/g2_reviews/modules/g2_review_form/src/Controller/ReviewFormIframeController.php
modules/contrib/g2_reviews/modules/g2_review_form/src/Form/ReviewForm.php
modules/contrib/g2_reviews/modules/g2_review_form/src/Plugin/Block/ProductReviewIframeBlock.php
modules/contrib/g2_reviews/modules/g2_review_form/src/Services/G2FormFieldGuesser.php
modules/contrib/g2_reviews/modules/g2_review_form/src/Services/G2FormProcessingService.php
modules/contrib/g2_reviews/modules/g2_reviews_block/src/Plugin/Block/ProductReviewsListBlock.php
modules/contrib/g2_reviews/modules/g2_reviews_field/g2_reviews_field.module
modules/contrib/g2_reviews/modules/g2_reviews_field/src/Plugin/Field/FieldFormatter/G2ReviewsWidgetFormatter.php
modules/contrib/g2_reviews/modules/g2_reviews_field/src/Plugin/Field/FieldType/G2ReviewsWidget.php
modules/contrib/g2_reviews/modules/g2_reviews_field/src/Plugin/Field/FieldWidget/G2ReviewsFieldWidget.php
modules/contrib/g2_reviews/src/Controller/G2ReviewsWidgetAjaxController.php
modules/contrib/g2_reviews/src/Exception/InsufficientUserDataException.php
modules/contrib/g2_reviews/src/Form/G2ConfigForm.php
modules/contrib/g2_reviews/src/Interfaces/G2ReviewInterface.php
modules/contrib/g2_reviews/src/Services/G2.php
modules/contrib/g2_reviews/src/Services/G2Common.php
modules/contrib/g2_reviews/src/Services/G2ReviewIframe.php
modules/contrib/g2_reviews/tests/src/Unit/G2ApiTest.php

11 files with changes
=====================

1) modules/contrib/g2_reviews/tests/src/Unit/G2ApiTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\g2\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\CacheBackendInterface;
 use GuzzleHttp\Client;
 use Drupal\Tests\UnitTestCase;
@@ @@
  */
 class G2ApiTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * The entity bundle info service.
    *
-   * @var \Drupal\g2_reviews\Services\G2
+   * @var G2
    */
   protected $g2Api;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/g2_reviews/src/Services/G2ReviewIframe.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * Returns the default http client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected Client $httpClient;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected ConfigFactoryInterface $configFactory;

@@ @@
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected LoggerChannelFactory $loggerFactory;

@@ @@
   /**
    * Gets the current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected AccountProxyInterface $currentUser;

@@ @@
   /**
    * The G2 Common service.
    *
-   * @var \Drupal\g2_reviews\Services\G2Common
+   * @var G2Common
    */
   protected G2Common $g2Common;

@@ @@
   /**
    * Constructs a new G2Api object.
    *
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The guzzle http client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   The logger factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Current account.
-   * @param \Drupal\g2_reviews\Services\G2Common $g2common
+   * @param G2Common $g2common
    *   The G2 Common service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/g2_reviews/src/Services/G2Common.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\g2_reviews\Services;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ConfigValueException;
 use Drupal\Core\Session\AccountInterface;
@@ @@
   /**
    * The G2 API service.
    *
-   * @var \Drupal\g2_reviews\Services\G2
+   * @var G2
    */
   protected G2 $g2;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;

@@ @@
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   private AccountInterface $account;

@@ @@
   /**
    * Token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   private Token $tokenService;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private ConfigFactoryInterface $configFactory;

@@ @@
   /**
    * Constructs a new G2Common object.
    *
-   * @param \Drupal\g2_reviews\Services\G2 $g2
+   * @param G2 $g2
    *   The G2 API service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account interface.
-   * @param \Drupal\Core\Utility\Token $tokenService
+   * @param Token $tokenService
    *   Token service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
    */
   public function __construct(
@@ @@
    * @param array $config
    *   The widget config data.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function buildProductReviewsWidget(array $config): array {
     $product_id = $config['product_id'];
@@ @@
    * @return array
    *   User email, first name and last name.
    *
-   * @throws \Drupal\g2_reviews\Exception\InsufficientUserDataException
+   * @throws InsufficientUserDataException
    *   Throw if user not logged in or doesn't have first or last name.
    */
   public function getUserData(): array {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/g2_reviews/src/Services/G2.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\g2_reviews\Services;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected CacheBackendInterface $cache;

@@ @@
   /**
    * Returns the default http client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected Client $httpClient;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected ConfigFactoryInterface $configFactory;

@@ @@
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected LoggerChannelFactoryInterface $loggerFactory;

@@ @@
   /**
    * Gets the current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected AccountProxyInterface $currentUser;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * Constructs a new G2Api object.
    *
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The guzzle http client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Current account.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(
@@ @@
    * @return array
    *   Returns the list of products from G2 platform.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Guzzle Exception.
    */
   public function getProducts(array $data = []): array {
@@ @@
    * @return array
    *   Returns the list of syndicate reviews from G2.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Guzzle Exception.
    */
   public function getProductReviews(string $productId, array $data = []): array {
@@ @@
    * @return array
    *   Returns the list of syndicate snippets from G2.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Guzzle Exception.
    */
   public function getProductSnippets(string $productId, array $data = []): array {
@@ @@
    * @return array
    *   Returns the list of syndicate reviews comments from G2.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Guzzle Exception.
    */
   public function getProductReviewsComments(string $productId, array $data = []): array {
@@ @@
    * @return array
    *   Returns the review form G2.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Guzzle Exception.
    */
   public function getProductEmbeddedtReviewForm(string $productId, string $email): array {
@@ @@
    * @return array
    *   Returns the product form G2.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Guzzle Exception.
    */
   public function submitProductReview(array $data): array {
@@ @@
    * @return array
    *   The resource response from G2.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Guzzle Exception.
    */
   protected function processResponse(string $url, array $config, string $method = 'GET'): array {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/g2_reviews/src/Controller/G2ReviewsWidgetAjaxController.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The G2 Common service.
    *
-   * @var \Drupal\g2_reviews\Services\G2Common
+   * @var G2Common
    */
   protected G2Common $g2Common;

@@ @@
   /**
    * The Plugin Block Manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected BlockManagerInterface $blockManager;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;

@@ @@
   /**
    * The request stack used to determine current time.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected RequestStack $requestStack;

@@ @@
   /**
    * Constructs a new G2ReviewsWidgetAjaxController object.
    *
-   * @param \Drupal\g2_reviews\Services\G2Common $g2common
+   * @param G2Common $g2common
    *   The G2 Common service.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The Plugin Block Manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack used to determine the current time.
    */
   public function __construct(
@@ @@
    * @param string $product_id
    *   The G2 product UUID string.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an ajax response.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/g2_reviews/modules/g2_reviews_field/src/Plugin/Field/FieldFormatter/G2ReviewsWidgetFormatter.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The G2 Common service.
    *
-   * @var \Drupal\g2_reviews\Services\G2Common
+   * @var G2Common
    */
   protected G2Common $g2Common;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\g2_reviews\Services\G2Common $g2common
+   * @param G2Common $g2common
    *   The G2 Common service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/g2_reviews/modules/g2_reviews_block/src/Plugin/Block/ProductReviewsListBlock.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The G2 API service.
    *
-   * @var \Drupal\g2_reviews\Services\G2
+   * @var G2
    */
   protected G2 $g2;

@@ @@
   /**
    * The G2 Common service.
    *
-   * @var \Drupal\g2_reviews\Services\G2Common
+   * @var G2Common
    */
   protected G2Common $g2Common;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\g2_reviews\Services\G2 $g2
+   * @param G2 $g2
    *   The G2 API service.
-   * @param \Drupal\g2_reviews\Services\G2Common $g2common
+   * @param G2Common $g2common
    *   The G2 Common service.
    */
   public function __construct(
@@ @@
    *
    * @param array $form
    *   The form object.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state data.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Return the G2 filters form as ajax response.
    */
   public function getForm(array &$form, FormStateInterface $form_state): AjaxResponse {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/g2_reviews/modules/g2_review_form/src/Services/G2FormProcessingService.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\g2_review_form\Services;

+use Drupal\g2_reviews\Exception\InsufficientUserDataException;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\g2_reviews\Services\G2Common;
 use Drupal\g2_reviews\Services\G2;
@@ @@
   /**
    * The G2 API service.
    *
-   * @var \Drupal\g2_reviews\Services\G2
+   * @var G2
    */
   private G2 $g2;

@@ @@
   /**
    * The Form field guesser.
    *
-   * @var \Drupal\g2_review_form\Services\G2FormFieldGuesser
+   * @var G2FormFieldGuesser
    */
   private G2FormFieldGuesser $formFieldGuesser;

@@ @@
   /**
    * G2 Common service.
    *
-   * @var \Drupal\g2_reviews\Services\G2Common
+   * @var G2Common
    */
   private G2Common $g2CommonService;

@@ @@
   /**
    * G2FormBuilderService constructor.
    *
-   * @param \Drupal\g2_reviews\Services\G2 $g2
+   * @param G2 $g2
    *   G2 API service.
-   * @param \Drupal\g2_review_form\Services\G2FormFieldGuesser $formFieldGuesser
+   * @param G2FormFieldGuesser $formFieldGuesser
    *   G2 field guesser service.
-   * @param \Drupal\g2_reviews\Services\G2Common $g2CommonService
+   * @param G2Common $g2CommonService
    *   G2 common service.
    */
   public function __construct(G2 $g2, G2FormFieldGuesser $formFieldGuesser, G2Common $g2CommonService) {
@@ @@
    * @param string $productId
    *   Product ID for which G2 form should be loaded.
    *
-   * @throws \Drupal\g2_reviews\Exception\InsufficientUserDataException
+   * @throws InsufficientUserDataException
    *    Throw if user not logged in or doesn't have first or last name.
    */
   public function populateDrupalFormWithG2Fields(array &$form, string $productId): void {
@@ @@
    * @return bool
    *   Status of the form submission.
    *
-   * @throws \Drupal\g2_reviews\Exception\InsufficientUserDataException
+   * @throws InsufficientUserDataException
    *   Exception.
    */
   public function submitReviewFormToG2(array $submittedValues): bool {
@@ @@
    * @return array
    *   Data prepared for API submission.
    *
-   * @throws \Drupal\g2_reviews\Exception\InsufficientUserDataException
+   * @throws InsufficientUserDataException
    *   Throw if user not logged in or doesn't have first or last name.
    */
   private function prepareFormValuesForSubmit(array $submittedValues): array {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/g2_reviews/modules/g2_review_form/src/Plugin/Block/ProductReviewIframeBlock.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The G2 Iframe service.
    *
-   * @var \Drupal\g2_reviews\Services\G2ReviewIframe
+   * @var G2ReviewIframe
    */
   protected G2ReviewIframe $g2ReviewIframe;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\g2_reviews\Services\G2ReviewIframe $g2ReviewIframe
+   * @param G2ReviewIframe $g2ReviewIframe
    *   The G2 Iframe service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, G2ReviewIframe $g2ReviewIframe) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/g2_reviews/modules/g2_review_form/src/Form/ReviewForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Form build service.
    *
-   * @var \Drupal\g2_review_form\Services\G2FormProcessingService
+   * @var G2FormProcessingService
    */
   private G2FormProcessingService $g2FormBuilderService;

@@ @@
   /**
    * ReviewForm constructor.
    *
-   * @param \Drupal\g2_review_form\Services\G2FormProcessingService $g2FormBuilderService
+   * @param G2FormProcessingService $g2FormBuilderService
    *   G2 Form builder service.
    */
   public function __construct(G2FormProcessingService $g2FormBuilderService) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/g2_reviews/modules/g2_review_form/src/Controller/ReviewFormIframeController.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The G2 Iframe service.
    *
-   * @var \Drupal\g2_reviews\Services\G2ReviewIframe
+   * @var G2ReviewIframe
    */
   protected G2ReviewIframe $g2ReviewIframe;

@@ @@
   /**
    * ReviewFormIframeController constructor.
    *
-   * @param \Drupal\g2_reviews\Services\G2ReviewIframe $g2ReviewIframe
+   * @param G2ReviewIframe $g2ReviewIframe
    *   The G2 Iframe service.
    */
   public function __construct(G2ReviewIframe $g2ReviewIframe) {
@@ @@
   /**
    * Build response object.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Response object.
    */
   public function iframeResponse(Request $request): Response {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 11 files have been changed by Rector                                      

