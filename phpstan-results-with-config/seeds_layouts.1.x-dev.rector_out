modules/contrib/seeds_layouts/seeds_layouts.install
modules/contrib/seeds_layouts/seeds_layouts.module
modules/contrib/seeds_layouts/src/Annotation/LayoutField.php
modules/contrib/seeds_layouts/src/Element/BlocksWrapper.php
modules/contrib/seeds_layouts/src/Exception/FrameworkImportException.php
modules/contrib/seeds_layouts/src/Form/ColumnsForm.php
modules/contrib/seeds_layouts/src/Form/FrameworkImportForm.php
modules/contrib/seeds_layouts/src/Form/SeedsLayoutsConfigForm.php
modules/contrib/seeds_layouts/src/Plugin/LayoutField/BackgroundImageField.php
modules/contrib/seeds_layouts/src/Plugin/LayoutField/CheckboxField.php
modules/contrib/seeds_layouts/src/Plugin/LayoutField/HideField.php
modules/contrib/seeds_layouts/src/Plugin/LayoutField/SelectField.php
modules/contrib/seeds_layouts/src/Plugin/LayoutField/WrapBlocksField.php
modules/contrib/seeds_layouts/src/Plugin/LayoutField/WrapField.php
modules/contrib/seeds_layouts/src/Plugin/LayoutFieldBase.php
modules/contrib/seeds_layouts/src/Plugin/LayoutFieldInterface.php
modules/contrib/seeds_layouts/src/Plugin/LayoutFieldManager.php
modules/contrib/seeds_layouts/src/Plugin/SeedsLayout.php
modules/contrib/seeds_layouts/src/SeedsLayoutsManager.php

13 files with changes
=====================

1) modules/contrib/seeds_layouts/src/SeedsLayoutsManager.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManager definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Drupal\Core\Config\FileStorage definition.
    *
-   * @var \Drupal\Core\Config\FileStorage
+   * @var FileStorage
    */
   protected $source;

@@ @@
   /**
    * Uuid instance.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;

@@ @@
   public function __construct(EntityTypeManager $entity_type_manager, ConfigFactoryInterface $config_factory, UuidInterface $uuid) {
     $this->entityTypeManager = $entity_type_manager;
     $this->configFactory = $config_factory;
-    $frameworks_config_path = drupal_get_path('module', 'seeds_layouts') . '/config/framework';
+    $frameworks_config_path = \Drupal::service('extension.list.module')->getPath('seeds_layouts') . '/config/framework';
     $this->source = new FileStorage($frameworks_config_path);
     $this->uuid = $uuid;
   }
@@ @@

         // Replace $module_path.
         foreach ($columns as &$column) {
-          $column['image_url'] = str_replace('{$module_path}', '/' . drupal_get_path('module', 'seeds_layouts'), $column['image_url']);
+          $column['image_url'] = str_replace('{$module_path}', '/' . \Drupal::service('extension.list.module')->getPath('seeds_layouts'), $column['image_url']);
         }

         unset($framework_config['columns']);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/seeds_layouts/src/Plugin/SeedsLayout.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\seeds_layouts\Plugin;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * Configuration of seeds layouts.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $seedsLayoutConfig;

@@ @@
   /**
    * Configuration of seeds layouts styles.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $seedsColumnsConfig;

@@ @@
   /**
    * Seeds layouts manager.
    *
-   * @var \Drupal\seeds_layouts\SeedsLayoutsManager
+   * @var SeedsLayoutsManager
    */
   protected $seedsLayoutsManager;

@@ @@
       }
       // Create custom fields instances and build their forms.
       $default_values = @$configuration['layout_fields'][$key];
-      /** @var \Drupal\seeds_layouts\Plugin\LayoutFieldInterface $field_instance */
+      /** @var LayoutFieldInterface $field_instance */
       $field_instance = $this->layoutFieldManager->createInstance($description['type']);
       // Set the uuid and the layout
       $field_instance->setUuid($key);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/seeds_layouts/src/Plugin/LayoutFieldManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/seeds_layouts/src/Plugin/LayoutFieldInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\seeds_layouts\Plugin;

+use Drupal\Core\Layout\LayoutDefinition;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The layout.
    *
-   * @param \Drupal\Core\Layout\LayoutDefinition $layout
+   * @param LayoutDefinition $layout
    *   The layout.
    *
    * @return this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/seeds_layouts/src/Plugin/LayoutFieldBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\seeds_layouts\Plugin;

+use Drupal\Core\Layout\LayoutDefinition;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * The layout
    *
-   * @var \Drupal\Core\Layout\LayoutDefinition
+   * @var LayoutDefinition
    */
   protected $layout;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/seeds_layouts/src/Plugin/LayoutField/SelectField.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Seeds layout manager.
    *
-   * @var \Drupal\seeds_layouts\SeedsLayoutsManager
+   * @var SeedsLayoutsManager
    */
   protected $seedsLayoutManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/seeds_layouts/src/Plugin/LayoutField/BackgroundImageField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\seeds_layouts\Plugin\LayoutField;

+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManagar;

@@ @@
    *   The plugin id
    * @param $plugin_definition
    *   The plugin definition
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
    * @return \Drupal\seeds_layouts\Plugin\LayoutField\BackgroundImageField
@@ @@
    */
   public function getAttributes() {
     $attributes = [];
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file_value = !empty($this->getConfiguration('file')) ? $this->getConfiguration('file') : [];
     $file = $this->entityTypeManagar->getStorage('file')->load(reset($file_value));
     $uri = "";
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/seeds_layouts/src/Form/SeedsLayoutsConfigForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManager definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Layout field manager.
    *
-   * @var \Drupal\seeds_layouts\Plugin\LayoutFieldManager
+   * @var LayoutFieldManager
    */
   protected $layoutFieldManager;

@@ @@
   /**
    * Seeds layouts manager.
    *
-   * @var \Drupal\seeds_layouts\SeedsLayoutsManager
+   * @var SeedsLayoutsManager
    */
   protected $seedsLayoutsManager;

@@ @@
   /**
    * Form Builder instance.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * Uuid instance.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;

@@ @@
   /**
    * Constructs a new SeedsLayoutsSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\seeds_layouts\Plugin\LayoutFieldManager $layout_field_manager
+   * @param LayoutFieldManager $layout_field_manager
    *   Layout field plugin manager.
-   * @param \Drupal\seeds_layouts\SeedsLayoutsManager $seeds_layouts_manager
+   * @param SeedsLayoutsManager $seeds_layouts_manager
    *   Seeds layouts manager.
    */
   public function __construct(
@@ @@
   /**
    * Returns the current layout fields in the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ @@
   /**
    * Checks if the form was built the first time. And set it to be initialized.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function updateLayoutFields(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addLayoutField(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function removeLayoutField(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/seeds_layouts/src/Form/FrameworkImportForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\seeds_layouts\SeedsLayoutsManager definition.
    *
-   * @var \Drupal\seeds_layouts\SeedsLayoutsManager
+   * @var SeedsLayoutsManager
    */
   protected $seedsLayoutsManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/seeds_layouts/src/Form/ColumnsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManager definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Seeds layouts manager.
    *
-   * @var \Drupal\seeds_layouts\SeedsLayoutsManager
+   * @var SeedsLayoutsManager
    */
   protected $seedsLayoutsManager;

@@ @@
   /**
    * Form Builder instance.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * Uuid instance.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;

@@ @@
   /**
    * Constructs a new ColumnsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   Entity type manager.
    * @param \Drupal\seeds_layouts\Plugin\ColumnFieldManager $column_field_manager
    *   Column field plugin manager.
-   * @param \Drupal\seeds_layouts\SeedsLayoutsManager $seeds_layouts_manager
+   * @param SeedsLayoutsManager $seeds_layouts_manager
    *   Seeds layouts manager.
    */
   public function __construct(
@@ @@
   /**
    * Returns the current column fields in the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ @@
   /**
    * Checks if the form was built the first time. And set it to be initialized.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function updateColumnFields(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addColumnField(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function removeColumnField(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/seeds_layouts/src/Annotation/LayoutField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\seeds_layouts\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


12) modules/contrib/seeds_layouts/seeds_layouts.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\seeds_layouts\SeedsLayoutsManager;
+use Drupal\seeds_layouts\Plugin\LayoutFieldManager;
+use Drupal\seeds_layouts\Plugin\LayoutFieldInterface;
 /**
  * @file
  * Contains seeds_layouts.module.
@@ @@
   $hook = $variables["theme_hook_original"];
   // Check if this layout belongs to seeds layouts.
   if (preg_match('/seeds_\dcol/', $hook)) {
-    /** @var \Drupal\seeds_layouts\SeedsLayoutsManager $seeds_layouts_manager */
+    /** @var SeedsLayoutsManager $seeds_layouts_manager */
     // Initializing settings and variables.
     $seeds_layouts_manager = \Drupal::service('seeds_layouts.manager');
     $attached_libraries = [];
@@ @@
     $custom_attributes = $layout_settings['layout_fields_attributes'];

     // Load all custom attached libraries and preprocess.
-    /** @var \Drupal\seeds_layouts\Plugin\LayoutFieldManager $layout_field_manager */
+    /** @var LayoutFieldManager $layout_field_manager */
     $layout_field_manager = \Drupal::service('plugin.manager.layout_field');
     $custom_fields = isset($layout_settings["layout_fields"]) ? $layout_settings["layout_fields"] : [];
     foreach ($custom_fields as $uuid => $custom_field) {
@@ @@
       // Try to load.
       $layout_field_id = $custom_field['type'];
       if ($layout_field_manager->hasDefinition($layout_field_id)) {
-        /** @var \Drupal\seeds_layouts\Plugin\LayoutFieldInterface $instance */
+        /** @var LayoutFieldInterface $instance */
         $instance = $layout_field_manager->createInstance($layout_field_id, $custom_field);
         $instance->setLayout($variables['layout']);
         $instance->setUuid($uuid);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


13) modules/contrib/seeds_layouts/seeds_layouts.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Extension\ThemeHandlerInterface;
 /**
  * @file
  * Contains seeds_layouts.install.
@@ @@
   // Set the weight to be after layout_discovery module.
   module_set_weight('seeds_layouts', 2);

-  /** @var \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler */
+  /** @var ThemeHandlerInterface $theme_handler */
   $theme_handler = \Drupal::service('theme_handler');
   $themes = array_keys($theme_handler->listInfo());

   // File source.
-  $frameworks_config_path = drupal_get_path('module', 'seeds_layouts') . '/config/framework';
+  $frameworks_config_path = \Drupal::service('extension.list.module')->getPath('seeds_layouts') . '/config/framework';
   $framework_source = new FileStorage($frameworks_config_path);

   // Get all framworks in '/config/framework' folder.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 13 files have been changed by Rector                                      

