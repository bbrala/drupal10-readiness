diff --git a/one_time_password.info.yml b/one_time_password.info.yml
index 1a3ebd5..2eeca30 100644
--- a/one_time_password.info.yml
+++ b/one_time_password.info.yml
@@ -1,7 +1,6 @@
 name: One Time Password
 description: An integration for one time passwords according to RFC 4226 (HOTP) and the RFC 6238 (TOTP).
-core: 8.x
 type: module
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 dependencies:
   - drupal:user
diff --git a/src/Plugin/Field/FieldType/ProvisioningUriItem.php b/src/Plugin/Field/FieldType/ProvisioningUriItem.php
index 6de4129..e81b7b1 100644
--- a/src/Plugin/Field/FieldType/ProvisioningUriItem.php
+++ b/src/Plugin/Field/FieldType/ProvisioningUriItem.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\one_time_password\Plugin\Field\FieldType;
 
+use OTPHP\TOTPInterface;
 use Drupal\Core\Field\FieldItemBase;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\TypedData\DataDefinition;
@@ -50,10 +51,10 @@ class ProvisioningUriItem extends FieldItemBase {
   /**
    * Get the one time password object.
    *
-   * @return \OTPHP\TOTPInterface
+   * @return TOTPInterface
    *   The one time password object.
    *
-   * @throws \Drupal\one_time_password\Exception\MissingProvisioningUriException
+   * @throws MissingProvisioningUriException
    *   If the field URI property is empty, an exception is thrown.
    */
   public function getOneTimePassword() {
diff --git a/src/Plugin/Field/FieldType/ProvisioningUriItemList.php b/src/Plugin/Field/FieldType/ProvisioningUriItemList.php
index f7f6662..a3971df 100644
--- a/src/Plugin/Field/FieldType/ProvisioningUriItemList.php
+++ b/src/Plugin/Field/FieldType/ProvisioningUriItemList.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\one_time_password\Plugin\Field\FieldType;
 
+use OTPHP\OTPInterface;
 use Drupal\Core\Field\FieldItemList;
 use Drupal\one_time_password\Exception\MissingProvisioningUriException;
 use OTPHP\TOTP;
@@ -16,7 +17,7 @@ class ProvisioningUriItemList extends FieldItemList {
   /**
    * Numerically indexed array of field items.
    *
-   * @var \Drupal\one_time_password\Plugin\Field\FieldType\ProvisioningUriItem[]
+   * @var ProvisioningUriItem[]
    */
   protected $list = [];
 
@@ -36,10 +37,10 @@ class ProvisioningUriItemList extends FieldItemList {
   /**
    * Get the one time password object for the field item list.
    *
-   * @return \OTPHP\OTPInterface
+   * @return OTPInterface
    *   The one time password object.
    *
-   * @throws \Drupal\one_time_password\Exception\MissingProvisioningUriException
+   * @throws MissingProvisioningUriException
    *   Throws an exception if there is no items to build the password object.
    */
   public function getOneTimePassword() {
diff --git a/src/UserFieldAttach.php b/src/UserFieldAttach.php
index d9e3120..98b16c8 100644
--- a/src/UserFieldAttach.php
+++ b/src/UserFieldAttach.php
@@ -24,7 +24,7 @@ class UserFieldAttach implements ContainerInjectionInterface {
   /**
    * The entity definition update manager.
    *
-   * @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface
+   * @var EntityDefinitionUpdateManagerInterface
    */
   protected $entityDefinitionUpdateManager;
 
@@ -47,7 +47,7 @@ class UserFieldAttach implements ContainerInjectionInterface {
   /**
    * Get the base field definition for the one time password field.
    *
-   * @return \Drupal\Core\Field\BaseFieldDefinition
+   * @return BaseFieldDefinition
    *   A base field definition for the one time password field.
    */
   protected function getBaseFieldDefinition() {
diff --git a/src/UserLoginEnforce.php b/src/UserLoginEnforce.php
index df8f464..ce58a31 100644
--- a/src/UserLoginEnforce.php
+++ b/src/UserLoginEnforce.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\one_time_password;
 
+use Drupal\Core\Flood\FloodInterface;
+use OTPHP\TOTP;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\user\Entity\User;
@@ -66,7 +68,7 @@ class UserLoginEnforce {
       return;
     }
 
-    /** @var \Drupal\Core\Flood\FloodInterface $flood */
+    /** @var FloodInterface $flood */
     $flood = \Drupal::service('flood');
     $ip_address = \Drupal::requestStack()->getCurrentRequest()->getClientIp();
 
@@ -85,7 +87,7 @@ class UserLoginEnforce {
     // before this validation, so this is not a bruteforce vector. We only see
     // this message if the user has successfully validated their password and
     // have not tripped a flood threshold.
-    /** @var \OTPHP\TOTP $one_time_pass */
+    /** @var TOTP $one_time_pass */
     $one_time_pass = $user->one_time_password->getOneTimePassword();
     $user_provided_code = $form_state->getValue('one_time_password');
     if (empty($user_provided_code) || !$one_time_pass->verify($user_provided_code, NULL, 10)) {
diff --git a/tests/src/Functional/UserLoginEnforceTest.php b/tests/src/Functional/UserLoginEnforceTest.php
index 94123aa..8961514 100644
--- a/tests/src/Functional/UserLoginEnforceTest.php
+++ b/tests/src/Functional/UserLoginEnforceTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\one_time_password\Functional;
 
+use OTPHP\TOTP;
 use Drupal\Tests\user\Traits\UserCreationTrait;
 use Drupal\Tests\BrowserTestBase;
 
@@ -79,7 +80,7 @@ class UserLoginEnforceTest extends BrowserTestBase {
   public function testLoginWindow() {
     $test_user_with_tfa = $this->createUser();
     $test_user_with_tfa->one_time_password->regenerateOneTimePassword();
-    /** @var \OTPHP\TOTP $otp_object */
+    /** @var TOTP $otp_object */
     $otp_object = $test_user_with_tfa->one_time_password->getOneTimePassword();
     $test_user_with_tfa->save();
 
@@ -111,7 +112,8 @@ class UserLoginEnforceTest extends BrowserTestBase {
     // Login 6 times incorrectly to trigger a flood warning from core as well
     // as the OTP threshold.
     foreach (range(0, 5) as $i) {
-      $this->drupalPostForm('user/login', [
+      $this->drupalGet('user/login');
+      $this->submitForm([
         'name' => $tfa_user->getAccountName(),
         'pass' => 'incorrect password',
       ], 'Log in');
diff --git a/tests/src/Kernel/ProvisioningUriItemTest.php b/tests/src/Kernel/ProvisioningUriItemTest.php
index 96cd8ed..b4d75d7 100644
--- a/tests/src/Kernel/ProvisioningUriItemTest.php
+++ b/tests/src/Kernel/ProvisioningUriItemTest.php
@@ -32,7 +32,7 @@ class ProvisioningUriItemTest extends KernelTestBase {
   /**
    * A test entity.
    *
-   * @var \Drupal\entity_test\Entity\EntityTest
+   * @var EntityTest
    */
   protected $entity;
 
diff --git a/tests/src/Kernel/UserFieldAttachTest.php b/tests/src/Kernel/UserFieldAttachTest.php
index 0d1aac4..21e58f1 100644
--- a/tests/src/Kernel/UserFieldAttachTest.php
+++ b/tests/src/Kernel/UserFieldAttachTest.php
@@ -30,14 +30,14 @@ class UserFieldAttachTest extends KernelTestBase {
   /**
    * A test user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installSchema('system', 'sequences');
