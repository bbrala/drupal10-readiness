modules/contrib/shorthand/shorthand.install
modules/contrib/shorthand/shorthand.module
modules/contrib/shorthand/shorthand.page.inc
modules/contrib/shorthand/src/Controller/RemoteCollectionController.php
modules/contrib/shorthand/src/Controller/ShorthandStoryController.php
modules/contrib/shorthand/src/Entity/ShorthandStory.php
modules/contrib/shorthand/src/Entity/ShorthandStoryInterface.php
modules/contrib/shorthand/src/Entity/ShorthandStoryViewsData.php
modules/contrib/shorthand/src/Form/ShorthandSettingsForm.php
modules/contrib/shorthand/src/Form/ShorthandStorySettingsForm.php
modules/contrib/shorthand/src/Plugin/Field/FieldFormatter/LocalShorthandFieldFormatter.php
modules/contrib/shorthand/src/Plugin/Field/FieldType/LocalShorthandFieldType.php
modules/contrib/shorthand/src/Plugin/Field/FieldType/StoryIdFieldType.php
modules/contrib/shorthand/src/Plugin/Field/FieldWidget/LocalShorthandStorySelectFieldWidget.php
modules/contrib/shorthand/src/Plugin/Field/FieldWidget/PublishConfigurationSelectFieldWidget.php
modules/contrib/shorthand/src/Plugin/Field/FieldWidget/StorySelectFieldWidget.php
modules/contrib/shorthand/src/ProxyClass/ShorthandUninstallValidator.php
modules/contrib/shorthand/src/ShorthandApi.php
modules/contrib/shorthand/src/ShorthandApiInterface.php
modules/contrib/shorthand/src/ShorthandApiV2.php
modules/contrib/shorthand/src/ShorthandStoryAccessControlHandler.php
modules/contrib/shorthand/src/ShorthandStoryHtmlRouteProvider.php
modules/contrib/shorthand/src/ShorthandStoryListBuilder.php
modules/contrib/shorthand/src/ShorthandStoryStorage.php
modules/contrib/shorthand/src/ShorthandStoryStorageInterface.php
modules/contrib/shorthand/src/ShorthandStoryTranslationHandler.php
modules/contrib/shorthand/src/ShorthandUninstallValidator.php

17 files with changes
=====================

1) modules/contrib/shorthand/src/ShorthandUninstallValidator.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new ForumUninstallValidator.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory, TranslationInterface $string_translation) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/shorthand/src/ShorthandStoryStorageInterface.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Gets a list of Shorthand story revision IDs for a specific Shorthand story.
    *
-   * @param \Drupal\shorthand\Entity\ShorthandStoryInterface $entity
+   * @param ShorthandStoryInterface $entity
    *   The Shorthand story entity.
    *
    * @return int[]
@@ @@
   /**
    * Gets a list of revision IDs having a given user as Shorthand story author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ @@
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\shorthand\Entity\ShorthandStoryInterface $entity
+   * @param ShorthandStoryInterface $entity
    *   The Shorthand story entity.
    *
    * @return int
@@ @@
   /**
    * Unsets the language for all Shorthand story with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/shorthand/src/ShorthandStoryListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shorthand;

+use Drupal\shorthand\Entity\ShorthandStory;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Link;
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\shorthand\Entity\ShorthandStory $entity */
+    /** @var ShorthandStory $entity */
     $row['id'] = $entity->id();
     $row['name'] = Link::createFromRoute(
       $entity->label(),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/shorthand/src/ShorthandStoryHtmlRouteProvider.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ @@
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/shorthand/src/ShorthandStoryAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shorthand;

+use Drupal\shorthand\Entity\ShorthandStoryInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\shorthand\Entity\ShorthandStoryInterface $entity */
+    /** @var ShorthandStoryInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/shorthand/src/ShorthandApiV2.php:68

    ---------- begin diff ----------
@@ @@
    *   The messenger interface.
    * @param LoggerInterface $logger
    *   The logger instance.
-   * @param Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory instance.
    *
    * @deprecated in shorthand:4.0.0 and is removed from shorthand:5.0.0. Use
    *   ShorthandApi class.
-   *
    */
   public function __construct(Client $http_client, FileSystemInterface $file_system, MessengerInterface $messenger, LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
     $this->config = $config_factory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/shorthand/src/ShorthandApi.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * GuzzleHttp\Client definition.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * Constructs a new ShorthandApi object.
    *
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   Http client service instance.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger interface.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger instance.
-   * @param Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory instance.
    */
   public function __construct(Client $http_client, FileSystemInterface $file_system, MessengerInterface $messenger, LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
@@ @@
    * @return array
    *   Headers parameters array.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    */
   protected function buildHeaders($token = NULL) {
     $config = $this->config->getEditable('shorthand.settings');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/shorthand/src/ProxyClass/ShorthandUninstallValidator.php:7

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shorthand\ProxyClass {

+  use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+  use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+  use Symfony\Component\DependencyInjection\ContainerInterface;
+  use Drupal\Core\StringTranslation\TranslationInterface;
   /**
    * Provides a proxy class for \Drupal\shorthand\ShorthandUninstallValidator.
    *
    * @see \Drupal\Component\ProxyBuilder
    */
-  class ShorthandUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface {
+  class ShorthandUninstallValidator implements ModuleUninstallValidatorInterface {

-    use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use DependencySerializationTrait;

     /**
      * The id of the original proxied service.
@@ @@
     /**
      * The service container.
      *
-     * @var \Symfony\Component\DependencyInjection\ContainerInterface
+     * @var ContainerInterface
      */
     protected $container;

@@ @@
     /**
      * Constructs a ProxyClass Drupal proxy object.
      *
-     * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+     * @param ContainerInterface $container
      *   The container.
      * @param string $drupal_proxy_original_service_id
      *   The service ID of the original service.
      */
-    public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id) {
+    public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id) {
       $this->container = $container;
       $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
     }
@@ @@
     /**
      * {@inheritdoc}
      */
-    public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation) {
+    public function setStringTranslation(TranslationInterface $translation) {
       return $this->lazyLoadItself()
         ->setStringTranslation($translation);
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/shorthand/src/Plugin/Field/FieldWidget/StorySelectFieldWidget.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/shorthand/src/Plugin/Field/FieldWidget/PublishConfigurationSelectFieldWidget.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/shorthand/src/Plugin/Field/FieldWidget/LocalShorthandStorySelectFieldWidget.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\shorthand\ShorthandApiInterface $shorthandApi
+   * @param ShorthandApiInterface $shorthandApi
    *   The shorthand api connector.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, ShorthandApiInterface $shorthandApi, FileSystemInterface $file_system) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/shorthand/src/Form/ShorthandStorySettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The manages modules.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;

@@ @@
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The manages modules.
-   * @param \Drupal\shorthand\ShorthandApiInterface $shorthandApi
+   * @param ShorthandApiInterface $shorthandApi
    *   The shorthand api connector.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/shorthand/src/Form/ShorthandSettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The manages modules.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;

@@ @@
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The manages modules.
-   * @param \Drupal\shorthand\ShorthandApiInterface $shorthandApi
+   * @param ShorthandApiInterface $shorthandApi
    *   The shorthand api connector.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/shorthand/src/Entity/ShorthandStoryInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shorthand\Entity;

+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\RevisionableInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ @@
   /**
    * Gets the Shorthand story revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


15) modules/contrib/shorthand/src/Entity/ShorthandStory.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shorthand\Entity;

+use Drupal\Core\Archiver\ArchiverInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
@@ @@
       $input_format = filter_default_format();
     }

-    /** @var \Drupal\Core\Archiver\ArchiverInterface $archiver */
+    /** @var ArchiverInterface $archiver */
     $file_system = \Drupal::service('file_system');
     $filepath = $file_system->realpath($file);
     $archiver = \Drupal::service('plugin.manager.archiver')->getInstance(['filepath' => $filepath]);
@@ @@
     // tag with the new local path
     $thumb = $this->thumbnail->value;
     if(empty($thumb) || strpos($thumb, '{Shorthand Local}/') !== false){
-      $assets_path = file_create_url($this->getShorthandStoryFilesStorageUri());
+      $assets_path = \Drupal::service('file_url_generator')->generateAbsoluteString($this->getShorthandStoryFilesStorageUri());
       $thumb = str_replace('{Shorthand Local}/', $assets_path.'/assets/', $thumb);
       $this->thumbnail->value = $thumb;
     }
@@ @@
    *   storage path.
    */
   protected function fixStoryContentPaths($content, $external_assets) {
-    $absolute_assets_path = file_create_url($this->getShorthandStoryFilesStorageUri());
-    $assets_path = file_url_transform_relative($absolute_assets_path);
+    $absolute_assets_path = \Drupal::service('file_url_generator')->generateAbsoluteString($this->getShorthandStoryFilesStorageUri());
+    $assets_path = \Drupal::service('file_url_generator')->transformRelative($absolute_assets_path);
     if (!$external_assets) {
       $content = str_replace('./assets/', $assets_path . '/assets/', $content);
     }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/shorthand/src/Controller/ShorthandStoryController.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The mocked entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The Shorthand story controller.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
   /**
    * Generates an overview table of older revisions of a Shorthand story .
    *
-   * @param \Drupal\shorthand\Entity\ShorthandStoryInterface $shorthand_story
+   * @param ShorthandStoryInterface $shorthand_story
    *   A Shorthand story  object.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/shorthand/src/Controller/RemoteCollectionController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shorthand\Controller;

+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\File\FileSystemInterface;
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Shorthand Api service.
    *
-   * @var \Drupal\shorthand\ShorthandApiInterface
+   * @var ShorthandApiInterface
    */
   protected $shorthandApi;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\shorthand\ShorthandApiInterface $shorthand_api
+   * @param ShorthandApiInterface $shorthand_api
    *   The shorthand api connector.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(AccountInterface $current_user, ShorthandApiInterface $shorthand_api, FileSystemInterface $file_system, RendererInterface $renderer) {
@@ @@
    * @param string $storyid
    *   Shorthand story ID.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    */
   public function downloadStory($storyid = NULL) {
     if (empty($storyid)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 17 files have been changed by Rector                                      

