modules/contrib/libraries_provider/includes/update.php
modules/contrib/libraries_provider/libraries_provider.install
modules/contrib/libraries_provider/libraries_provider.tokens.inc
modules/contrib/libraries_provider/modules/libraries_provider_ui/libraries_provider_ui.module
modules/contrib/libraries_provider/modules/libraries_provider_ui/src/Controller/LibraryController.php
modules/contrib/libraries_provider/modules/libraries_provider_ui/src/EventSubscriber/EntityBuild.php
modules/contrib/libraries_provider/modules/libraries_provider_ui/src/Form/LibraryDeleteForm.php
modules/contrib/libraries_provider/modules/libraries_provider_ui/src/Form/LibraryForm.php
modules/contrib/libraries_provider/modules/libraries_provider_ui/src/LibraryListBuilder.php
modules/contrib/libraries_provider/src/Annotation/LibrarySource.php
modules/contrib/libraries_provider/src/AutoEventSubscriber/LibrariesReplacements.php
modules/contrib/libraries_provider/src/AutoPluginManager/LibrarySourcePluginManager.php
modules/contrib/libraries_provider/src/Autoservice/LibrariesProviderManager.php
modules/contrib/libraries_provider/src/Entity/Library.php
modules/contrib/libraries_provider/src/Plugin/LibrarySource/CdnJsdelivrNet.php
modules/contrib/libraries_provider/src/Plugin/LibrarySource/LibrarySourceBase.php
modules/contrib/libraries_provider/src/Plugin/LibrarySource/LibrarySourceInterface.php
modules/contrib/libraries_provider/src/Plugin/LibrarySource/Local.php
modules/contrib/libraries_provider/tests/src/Kernel/LibrariesProviderKernelTest.php

8 files with changes
====================

1) modules/contrib/libraries_provider/tests/src/Kernel/LibrariesProviderKernelTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setup();

     $this->installEntitySchema('library');
@@ @@

     $library = \Drupal::service(LibraryDiscoveryInterface::class)->getLibraryByName('lp_library_test', 'fontawesome');
     $this->assertEmpty($library['css']);
-    $this->assertEqual($library['version'], $libraryEntity->get('version'));
+    $this->assertEquals($library['version'], $libraryEntity->get('version'));
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/libraries_provider/src/Plugin/LibrarySource/LibrarySourceBase.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The Library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/libraries_provider/src/Plugin/LibrarySource/CdnJsdelivrNet.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\libraries_provider\Plugin\LibrarySource;

+use Upstreamable\JsdelivrApiClient\JsdelivrApiClientInterface;
 use Upstreamable\JsdelivrApiClient\JsdelivrApiClientBuilder;
 use Upstreamable\JsdelivrApiClient\Exception\NotFoundHttpException;

@@ @@
   /**
    * The http client to request info from the online service.
    *
-   * @var \Upstreamable\JsdelivrApiClient\JsdelivrApiClientInterface
+   * @var JsdelivrApiClientInterface
    */
   protected $client;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/libraries_provider/src/Autoservice/LibrariesProviderManager.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a new LibrariesProviderManager instance.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
    * @param \Drupal\Core\Theme\ThemeHandlerInterface $themeHandler
    *   The theme manager.
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The library discovery service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/libraries_provider/src/AutoEventSubscriber/LibrariesReplacements.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/libraries_provider/modules/libraries_provider_ui/src/Form/LibraryForm.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * The library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;

@@ @@
   /**
    * The module list service.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;

@@ @@
   /**
    * The theme list service.
    *
-   * @var \Drupal\Core\Extension\ThemeExtensionList
+   * @var ThemeExtensionList
    */
   protected $themeExtensionList;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
     LibrariesProviderManager $librariesProviderManager,
     ModuleExtensionList $moduleExtensionList,
     ThemeExtensionList $themeExtensionList,
-    Token $token
+    Token $token,
+    private LibrarySourcePluginManager $librarySourcePluginManager,
+    private LibrariesProviderManager $librariesProviderManager2
   ) {
     $this->sourcePluginManager = $sourcePluginManager;
     $this->libraryDiscovery = $libraryDiscovery;
@@ @@
    */
   public static function create(ContainerInterface $container) {
     return new static(
-      $container->get(LibrarySourcePluginManager::class),
+      $this->librarySourcePluginManager,
       $container->get('library.discovery'),
-      $container->get(LibrariesProviderManager::class),
+      $this->librariesProviderManager2,
       $container->get('extension.list.module'),
       $container->get('extension.list.theme'),
       $container->get('token')
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * ContainerGetToConstructorInjectionRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/libraries_provider/modules/libraries_provider_ui/src/Controller/LibraryController.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Route title callback.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $library
+   * @param EntityInterface $library
    *   The library entity.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/libraries_provider/libraries_provider.tokens.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\libraries_provider\Entity\Library;
 /**
  * @file
  * Builds placeholder replacement tokens for library-related data.
@@ @@
   $replacements = [];

   if ($type == 'library' && !empty($data['library'])) {
-    /** @var \Drupal\libraries_provider\Entity\Library $library */
+    /** @var Library $library */
     $library = $data['library'];

     foreach ($tokens as $name => $original) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

