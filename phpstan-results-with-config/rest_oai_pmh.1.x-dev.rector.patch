diff --git a/rest_oai_pmh.info.yml b/rest_oai_pmh.info.yml
index 54a9074..af0adbb 100644
--- a/rest_oai_pmh.info.yml
+++ b/rest_oai_pmh.info.yml
@@ -1,8 +1,7 @@
 name: 'REST OAI-PMH'
 type: module
 description: 'Exposes entities as Dublin Core in an OAI-PMH endpoint using Views, REST, and a metadata mapping module of your choice'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: rest_oai_pmh.rest_oai_pmh_settings_form
 package: 'Web services'
 dependencies:
diff --git a/src/Annotation/OaiCache.php b/src/Annotation/OaiCache.php
index fcd2922..f81368f 100644
--- a/src/Annotation/OaiCache.php
+++ b/src/Annotation/OaiCache.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_oai_pmh\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -26,7 +27,7 @@ class OaiCache extends Plugin
     /**
      * The label of the plugin.
      *
-     * @var \Drupal\Core\Annotation\Translation
+     * @var Translation
      *
      * @ingroup plugin_translatable
      */
diff --git a/src/Annotation/OaiMetadataMap.php b/src/Annotation/OaiMetadataMap.php
index bdc3ff0..1db278f 100644
--- a/src/Annotation/OaiMetadataMap.php
+++ b/src/Annotation/OaiMetadataMap.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_oai_pmh\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class OaiMetadataMap extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/EventSubscriber/OaiDcMimeType.php b/src/EventSubscriber/OaiDcMimeType.php
index d83ea07..0e1b648 100644
--- a/src/EventSubscriber/OaiDcMimeType.php
+++ b/src/EventSubscriber/OaiDcMimeType.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_oai_pmh\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -13,7 +14,7 @@ class OaiDcMimeType implements EventSubscriberInterface {
   /**
    * Register content type formats on the request object.
    *
-   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent $event
    *   The Event to process.
    */
   public function onKernelRequest($event) {
diff --git a/src/Form/RestOaiPmhSettingsForm.php b/src/Form/RestOaiPmhSettingsForm.php
index 51116d9..52289b8 100644
--- a/src/Form/RestOaiPmhSettingsForm.php
+++ b/src/Form/RestOaiPmhSettingsForm.php
@@ -23,21 +23,21 @@ class RestOaiPmhSettingsForm extends ConfigFormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The path validator service.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
@@ -45,21 +45,21 @@ class RestOaiPmhSettingsForm extends ConfigFormBase {
   /**
    * The cache discovery service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheDiscovery;
 
   /**
    * The router builder service.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routerBuilder;
 
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, PathValidatorInterface $path_validator, CacheBackendInterface $cache_discovery, RouteBuilder $router_builder) {
diff --git a/src/Plugin/OaiCacheManager.php b/src/Plugin/OaiCacheManager.php
index c666592..919951f 100644
--- a/src/Plugin/OaiCacheManager.php
+++ b/src/Plugin/OaiCacheManager.php
@@ -18,9 +18,9 @@ class OaiCacheManager extends DefaultPluginManager
      * @param \Traversable                                  $namespaces
      *   An object that implements \Traversable which contains the root paths
      *   keyed by the corresponding namespace to look for plugin implementations.
-     * @param \Drupal\Core\Cache\CacheBackendInterface      $cache_backend
+     * @param CacheBackendInterface $cache_backend
      *   Cache backend instance to use.
-     * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+     * @param ModuleHandlerInterface $module_handler
      *   The module handler to invoke the alter hook with.
      */
     public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler)
diff --git a/src/Plugin/OaiMetadataMap/DefaultMap.php b/src/Plugin/OaiMetadataMap/DefaultMap.php
index d7ce069..7a7dab6 100644
--- a/src/Plugin/OaiMetadataMap/DefaultMap.php
+++ b/src/Plugin/OaiMetadataMap/DefaultMap.php
@@ -41,7 +41,7 @@ class DefaultMap extends OaiMetadataMapBase {
   /**
    * Method to transform the provided entity into the desired metadata record.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   the entity to transform.
    *
    * @return string
diff --git a/src/Plugin/OaiMetadataMap/DublinCoreMetatag.php b/src/Plugin/OaiMetadataMap/DublinCoreMetatag.php
index 95b8ef1..a851b5a 100644
--- a/src/Plugin/OaiMetadataMap/DublinCoreMetatag.php
+++ b/src/Plugin/OaiMetadataMap/DublinCoreMetatag.php
@@ -24,7 +24,7 @@ class DublinCoreMetatag extends DublinCoreRdf {
   /**
    * Method to transform the provided entity into the desired metadata record.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   the entity to transform.
    *
    * @return string
diff --git a/src/Plugin/OaiMetadataMap/DublinCoreRdf.php b/src/Plugin/OaiMetadataMap/DublinCoreRdf.php
index 0e361c4..982829f 100644
--- a/src/Plugin/OaiMetadataMap/DublinCoreRdf.php
+++ b/src/Plugin/OaiMetadataMap/DublinCoreRdf.php
@@ -44,7 +44,7 @@ class DublinCoreRdf extends OaiMetadataMapBase {
   /**
    * Method to transform the provided entity into the desired metadata record.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   the entity to transform.
    *
    * @return string
diff --git a/src/Plugin/OaiMetadataMap/Mods.php b/src/Plugin/OaiMetadataMap/Mods.php
index b54d08d..7b0d1dd 100644
--- a/src/Plugin/OaiMetadataMap/Mods.php
+++ b/src/Plugin/OaiMetadataMap/Mods.php
@@ -56,7 +56,7 @@ class Mods extends OaiMetadataMapBase {
   /**
    * Method to transform the provided entity into the desired metadata record.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to transform.
    *
    * @return string
diff --git a/src/Plugin/OaiMetadataMapBase.php b/src/Plugin/OaiMetadataMapBase.php
index 6aa876f..dc51ef9 100644
--- a/src/Plugin/OaiMetadataMapBase.php
+++ b/src/Plugin/OaiMetadataMapBase.php
@@ -32,10 +32,9 @@ abstract class OaiMetadataMapBase extends PluginBase implements OaiMetadataMapIn
     protected function getTemplatePath()
     {
         $template = $this->getPluginDefinition()['template'];
-        return drupal_get_path(
-            $template['type'],
-            $template['name']
-        ) . '/' . $template['directory'] . '/' . $template['file'] . '.html.twig';
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+        return \Drupal::service('extension.path.resolver')->getPath($template['type'], $template['name']) . '/' . $template['directory'] . '/' . $template['file'] . '.html.twig';
     }
 
 }
diff --git a/src/Plugin/OaiMetadataMapManager.php b/src/Plugin/OaiMetadataMapManager.php
index 6aeb9d4..285f2a4 100644
--- a/src/Plugin/OaiMetadataMapManager.php
+++ b/src/Plugin/OaiMetadataMapManager.php
@@ -18,9 +18,9 @@ class OaiMetadataMapManager extends DefaultPluginManager
      * @param \Traversable                                  $namespaces
      *   An object that implements \Traversable which contains the root paths
      *   keyed by the corresponding namespace to look for plugin implementations.
-     * @param \Drupal\Core\Cache\CacheBackendInterface      $cache_backend
+     * @param CacheBackendInterface $cache_backend
      *   Cache backend instance to use.
-     * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+     * @param ModuleHandlerInterface $module_handler
      *   The module handler to invoke the alter hook with.
      */
     public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler)
diff --git a/src/Plugin/rest/resource/OaiPmh.php b/src/Plugin/rest/resource/OaiPmh.php
index 2284e27..d187acb 100644
--- a/src/Plugin/rest/resource/OaiPmh.php
+++ b/src/Plugin/rest/resource/OaiPmh.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_oai_pmh\Plugin\rest\resource;
 
+use Symfony\Component\HttpKernel\Exception\HttpException;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ -32,7 +33,7 @@ class OaiPmh extends ResourceBase {
   /**
    * A current user instance.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -41,7 +42,7 @@ class OaiPmh extends ResourceBase {
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -72,9 +73,9 @@ class OaiPmh extends ResourceBase {
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   A current user instance.
    */
   public function __construct(
@@ -146,10 +147,10 @@ class OaiPmh extends ResourceBase {
   /**
    * Responds to POST requests.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The HTTP response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
+   * @throws HttpException
    *   Throws exception expected.
    */
   public function post() {
@@ -159,10 +160,10 @@ class OaiPmh extends ResourceBase {
   /**
    * Responds to GET requests.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The HTTP response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
+   * @throws HttpException
    *   Throws exception expected.
    */
   public function get() {
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 987ca76..98ef67f 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\rest_oai_pmh\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
