diff --git a/ckeditor_uploadimage.install b/ckeditor_uploadimage.install
index 452dee7..f4f02ee 100644
--- a/ckeditor_uploadimage.install
+++ b/ckeditor_uploadimage.install
@@ -1,4 +1,5 @@
 <?php
+use Drupal\Core\File\FileSystem;
 /**
  * @file
  * Install file for the CKEditor Upload Image module.
@@ -20,7 +21,7 @@ function ckeditor_uploadimage_requirements($phase) {
       'notification' => t('CKEditor Notification plugin'),
       'notificationaggregator' => t('CKEditor Notification Aggregator plugin'),
     ];
-    /** @var \Drupal\Core\File\FileSystem $filesystem */
+    /** @var FileSystem $filesystem */
     $filesystem = \Drupal::service('file_system');
     $dir = $filesystem->realpath('');
     foreach ($plugins as $plugin => $label) {
diff --git a/src/Controller/CKEditorUploadImageController.php b/src/Controller/CKEditorUploadImageController.php
index fb8a61a..bd5dc46 100644
--- a/src/Controller/CKEditorUploadImageController.php
+++ b/src/Controller/CKEditorUploadImageController.php
@@ -6,6 +6,9 @@
 
 namespace Drupal\ckeditor_uploadimage\Controller;
 
+use Drupal\Core\Render\Markup;
+use Drupal\media\Entity\Media;
+use Drupal\node\NodeInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Component\Utility\Bytes;
 use Symfony\Component\HttpFoundation\Request;
@@ -33,7 +36,7 @@ class CKEditorUploadImageController extends ControllerBase {
     }
     $maxFilesize = min(Bytes::toInt($imageUpload['max_size']), Environment::getUploadMaxSize());
     $destination = $imageUpload['scheme'] . '://' . $imageUpload['directory'];
-    /** @var \Drupal\Core\File\FileSystemInterface $fileSystem */
+    /** @var FileSystemInterface $fileSystem */
     $fileSystem = \Drupal::service('file_system');
     if (isset($destination) && !$fileSystem->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY)) {
       \Drupal::logger('ckeditor_uploadimage')->notice(
@@ -60,19 +63,19 @@ class CKEditorUploadImageController extends ControllerBase {
       $file = file_save_upload('fid', $validators, $destination);
       $messages = \Drupal::messenger()->all();
       if (isset($messages['error'])) {
-        /** @var \Drupal\Core\Render\Markup $message */
+        /** @var Markup $message */
         foreach ($messages['error'] as $message) {
           $errorMsg = '<div>' . $message->jsonSerialize() . '</div>';
         }
       }
       if (isset($messages['warning'])) {
-        /** @var \Drupal\Core\Render\Markup $message */
+        /** @var Markup $message */
         foreach ($messages['warning'] as $message) {
           $errorMsg .= '<div>' . $message->jsonSerialize() . '</div>';
         }
       }
       if (isset($messages['status'])) {
-        /** @var \Drupal\Core\Render\Markup $message */
+        /** @var Markup $message */
         foreach ($messages['status'] as $message) {
           $errorMsg .= '<div>' . $message->jsonSerialize() . '</div>';
         }
@@ -87,7 +90,7 @@ class CKEditorUploadImageController extends ControllerBase {
         $uri  = $file[0]->getFileUri();
         $uuid = $file[0]->uuid();
         $fileName = $fileSystem->basename($uri);
-        $url = file_url_transform_relative(file_create_url($uri));
+        $url = \Drupal::service('file_url_generator')->generateString($uri);
         $entityType = $file[0]->getEntityTypeId();
         $moduleHandler = \Drupal::service('module_handler');
         if ($moduleHandler->moduleExists('inline_responsive_images')){
@@ -106,12 +109,12 @@ class CKEditorUploadImageController extends ControllerBase {
           $mediaImageFields = \Drupal::service('entity_field.manager')->getFieldDefinitions('media', 'image');
           if (isset($mediaImageFields['field_media_image']) && $imageUpload['media_entity_image']) {
             // Create media entity with saved file.
-            $imageMedia = \Drupal\media\Entity\Media::create([
+            $imageMedia = Media::create([
               'bundle' => 'image',
               'name' => $alt,
               'uid' => \Drupal::currentUser()->id(),
               'langcode' => \Drupal::languageManager()->getDefaultLanguage()->getId(),
-              'status' => \Drupal\node\NodeInterface::PUBLISHED,
+              'status' => NodeInterface::PUBLISHED,
               'thumbnail' => [
                 'target_id' => $file[0]->id(),
               ],
diff --git a/src/Plugin/CKEditorPlugin/DrupalUploadImage.php b/src/Plugin/CKEditorPlugin/DrupalUploadImage.php
index 77cd72f..05de855 100644
--- a/src/Plugin/CKEditorPlugin/DrupalUploadImage.php
+++ b/src/Plugin/CKEditorPlugin/DrupalUploadImage.php
@@ -41,7 +41,7 @@ class DrupalUploadImage extends PluginBase implements CKEditorPluginInterface, C
    * {@inheritdoc}
    */
   function getFile() {
-    return drupal_get_path('module', 'ckeditor_uploadimage') . '/js/plugins/' . $this->getPluginId() . '/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('ckeditor_uploadimage') . '/js/plugins/' . $this->getPluginId() . '/plugin.js';
   }
 
   /**
diff --git a/src/Plugin/CKEditorPlugin/DrupalUploadImageImce.php b/src/Plugin/CKEditorPlugin/DrupalUploadImageImce.php
index fe2cccd..8c29810 100644
--- a/src/Plugin/CKEditorPlugin/DrupalUploadImageImce.php
+++ b/src/Plugin/CKEditorPlugin/DrupalUploadImageImce.php
@@ -41,7 +41,7 @@ class DrupalUploadImageImce extends PluginBase implements CKEditorPluginInterfac
    * {@inheritdoc}
    */
   function getFile() {
-    return drupal_get_path('module', 'ckeditor_uploadimage') . '/js/plugins/drupaluploadimage/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('ckeditor_uploadimage') . '/js/plugins/drupaluploadimage/plugin.js';
   }
 
   /**
