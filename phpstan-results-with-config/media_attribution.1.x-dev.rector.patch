diff --git a/media_attribution.info.yml b/media_attribution.info.yml
index d57dac6..6ebecbf 100644
--- a/media_attribution.info.yml
+++ b/media_attribution.info.yml
@@ -1,7 +1,7 @@
 name: 'Media Attribution'
 type: module
 description: 'Attach attribution and license info to media entities.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'media'
 dependencies:
   - drupal:media
diff --git a/media_attribution.module b/media_attribution.module
index be9e37b..8abf5e4 100644
--- a/media_attribution.module
+++ b/media_attribution.module
@@ -152,7 +152,7 @@ function media_attribution_preprocess_entity_embed_container(&$variables) {
   $variables['children'] = [
     'first' => [
       '#type' => 'markup',
-      '#markup' => render($variables['children'])
+      '#markup' => \Drupal::service('renderer')->render($variables['children'])
     ],
     $attribution_text
   ];
@@ -162,12 +162,12 @@ function media_attribution_preprocess_entity_embed_container(&$variables) {
  * Read the list of pre-defined Creative Commons media_attribution_licenses and create corresponding taxonomy terms.
  */
 function media_attribution_load_default_licenses() {
-  $file_path = drupal_get_path('module', 'media_attribution') . '/media_attribution.default.licenses.yml';
+  $file_path = \Drupal::service('extension.list.module')->getPath('media_attribution') . '/media_attribution.default.licenses.yml';
   $file_contents = file_get_contents($file_path);
   $license_data = Yaml::decode($file_contents);
 
   foreach ($license_data as $license_item) {
-    $icon_file_path = drupal_get_path('module', 'media_attribution') . "/" . $license_item['icon_file'];
+    $icon_file_path = \Drupal::service('extension.list.module')->getPath('media_attribution') . "/" . $license_item['icon_file'];
     LicenseLoader::createLicenseTerm($license_item['title'],$license_item['short_label'], $icon_file_path, $license_item['url']);
   }
 }
diff --git a/src/LicenseLoader.php b/src/LicenseLoader.php
index 5aa500c..f215606 100644
--- a/src/LicenseLoader.php
+++ b/src/LicenseLoader.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\media_attribution;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\taxonomy\Entity\Term;
 use Drupal\file\Entity\File;
@@ -22,9 +25,9 @@ class LicenseLoader {
    *   URL for the license home page.
    * @return int
    *   The new term id.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function createOrUpdateLicenseTerm($term_title, $term_short_label, $icon_file_path, $license_url) {
     $tids = array_values(\Drupal::entityQuery('taxonomy_term')
@@ -48,9 +51,9 @@ class LicenseLoader {
    * @param $icon_file_path
    * @param $license_url
    * @return int
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function createLicenseTerm($term_title, $term_short_label, $icon_file_path, $license_url) {
     if ($icon_file_path) {
@@ -85,9 +88,9 @@ class LicenseLoader {
    * @param $term_short_label
    * @param $icon_file_path
    * @param $license_url
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function updateLicenseTerm($tid, $term_title, $term_short_label, $icon_file_path, $license_url) {
     $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
@@ -110,9 +113,9 @@ class LicenseLoader {
    *
    * @param $icon_file_path
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public static function updateLicenseIcon($icon_file_path) {
 // Just in case the file has already been created.
