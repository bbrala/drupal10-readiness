diff --git a/src/EventSubscriber/ContentModerationEventSubscriber.php b/src/EventSubscriber/ContentModerationEventSubscriber.php
index 63ed7a8..64eb94c 100644
--- a/src/EventSubscriber/ContentModerationEventSubscriber.php
+++ b/src/EventSubscriber/ContentModerationEventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\danse_content_moderation\EventSubscriber;
 
+use Drupal\danse_content_moderation\Plugin\Danse\ContentModeration;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\core_event_dispatcher\Event\Entity\EntityUpdateEvent;
 use Drupal\danse_content_moderation\Payload;
@@ -17,7 +18,7 @@ class ContentModerationEventSubscriber implements EventSubscriberInterface {
   /**
    * The DANSE Content Moderation plugin.
    *
-   * @var \Drupal\danse_content_moderation\Plugin\Danse\ContentModeration
+   * @var ContentModeration
    */
   protected $plugin;
 
@@ -31,7 +32,7 @@ class ContentModerationEventSubscriber implements EventSubscriberInterface {
   /**
    * React to entity updates.
    *
-   * @param \Drupal\core_event_dispatcher\Event\Entity\EntityUpdateEvent $event
+   * @param EntityUpdateEvent $event
    *   The event.
    */
   public function onEntityUpdate(EntityUpdateEvent $event) {
diff --git a/src/Payload.php b/src/Payload.php
index c4ea95d..63ed463 100644
--- a/src/Payload.php
+++ b/src/Payload.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\danse_content_moderation;
 
+use Drupal\user\UserInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -26,14 +27,14 @@ final class Payload extends PayloadBase {
   /**
    * The moderated entity.
    *
-   * @var \Drupal\Core\Entity\ContentEntityInterface
+   * @var ContentEntityInterface
    */
   protected $entity;
 
   /**
    * Content constructor.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The moderated entity.
    */
   public function __construct(ContentEntityInterface $entity) {
@@ -116,7 +117,7 @@ final class Payload extends PayloadBase {
       ]);
     }
     else {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       $entity = $storage->load($payload['entity']['id']);
 
       if (empty($entity)) {
@@ -142,7 +143,7 @@ final class Payload extends PayloadBase {
    * {@inheritdoc}
    */
   public function hasAccess($uid): bool {
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = User::load($uid);
     return $this->getEntity()->access('view', $user);
   }
@@ -150,10 +151,10 @@ final class Payload extends PayloadBase {
   /**
    * Create entity class from entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The moderated entity.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *   The moderated entity.
    */
   public static function createFromEntity(ContentEntityInterface $entity) {
diff --git a/src/Plugin/Danse/ContentModeration.php b/src/Plugin/Danse/ContentModeration.php
index 874c8d9..68b836e 100644
--- a/src/Plugin/Danse/ContentModeration.php
+++ b/src/Plugin/Danse/ContentModeration.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\danse_content_moderation\Plugin\Danse;
 
+use Drupal\content_moderation\Entity\ContentModerationState;
 use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -46,7 +47,7 @@ class ContentModeration extends PluginBase {
    * {@inheritdoc}
    */
   public function getRedirectUrl(EventInterface $event): Url {
-    /** @var \Drupal\danse_content_moderation\Payload $payload */
+    /** @var Payload $payload */
     $payload = $event->getPayload();
     try {
       return $payload->getEntity()->toUrl();
@@ -59,14 +60,14 @@ class ContentModeration extends PluginBase {
   /**
    * Create Content Moderation DANSE event.
    *
-   * @param \Drupal\danse_content_moderation\Payload $payload
+   * @param Payload $payload
    *   The payload.
    *
-   * @return \Drupal\danse\Entity\EventInterface
+   * @return EventInterface
    *   The DANSE event.
    */
   public function createContentModerationEvent(Payload $payload) {
-    /** @var \Drupal\content_moderation\Entity\ContentModerationState $entity */
+    /** @var ContentModerationState $entity */
     $entity = $payload->getEntity();
     $topic = $entity->moderation_state->value;
     $parent_rev_id = $entity->content_entity_revision_id->value;
