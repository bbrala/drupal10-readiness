modules/contrib/basket/basket.install
modules/contrib/basket/basket.module
modules/contrib/basket/basket.post_update.php
modules/contrib/basket/basket.views.inc
modules/contrib/basket/src/Admin/BasketDeleteConfirm.php
modules/contrib/basket/src/Admin/Form/AppearanceSettingsForm.php
modules/contrib/basket/src/Admin/Form/ConfirmDeleteForm.php
modules/contrib/basket/src/Admin/Form/DiscountSystemForm.php
modules/contrib/basket/src/Admin/Form/EmptyTrashSettingsForm.php
modules/contrib/basket/src/Admin/Form/Order/ItemsForm.php
modules/contrib/basket/src/Admin/Form/OrdersTabsSettingsForm.php
modules/contrib/basket/src/Admin/Form/PopupPluginForm.php
modules/contrib/basket/src/Admin/Form/SettingsExportOrdersForm.php
modules/contrib/basket/src/Admin/Form/SettingsNotificationsForm.php
modules/contrib/basket/src/Admin/Form/SettingsOrderForm.php
modules/contrib/basket/src/Admin/Form/SettingsOrderPage.php
modules/contrib/basket/src/Admin/Form/TermSettingsForm.php
modules/contrib/basket/src/Admin/Form/TextSettingsForm.php
modules/contrib/basket/src/Admin/Form/UserPermissionsForm.php
modules/contrib/basket/src/Admin/ManagerHeader.php
modules/contrib/basket/src/Admin/ManagerMenu.php
modules/contrib/basket/src/Admin/Operations.php
modules/contrib/basket/src/Admin/OrdersViewsAlters.php
modules/contrib/basket/src/Admin/Page/Blocks.php
modules/contrib/basket/src/Admin/Page/CurrencyPage.php
modules/contrib/basket/src/Admin/Page/DeliveryPage.php
modules/contrib/basket/src/Admin/Page/FreeAdditional.php
modules/contrib/basket/src/Admin/Page/NodeEdit.php
modules/contrib/basket/src/Admin/Page/NodeTypes.php
modules/contrib/basket/src/Admin/Page/Order.php
modules/contrib/basket/src/Admin/Page/Orders.php
modules/contrib/basket/src/Admin/Page/PaymentPage.php
modules/contrib/basket/src/Admin/Page/StatisticsBuyers.php
modules/contrib/basket/src/Admin/Page/StatusPage.php
modules/contrib/basket/src/Admin/Page/StockProduct.php
modules/contrib/basket/src/Admin/Page/SubPages.php
modules/contrib/basket/src/Admin/Page/Templates.php
modules/contrib/basket/src/Admin/Page/Trash.php
modules/contrib/basket/src/Admin/Pages.php
modules/contrib/basket/src/Ajax/BasketReplaceCommand.php
modules/contrib/basket/src/Basket.php
modules/contrib/basket/src/BasketAccess.php
modules/contrib/basket/src/BasketCart.php
modules/contrib/basket/src/BasketCron.php
modules/contrib/basket/src/BasketCurrency.php
modules/contrib/basket/src/BasketExport.php
modules/contrib/basket/src/BasketExtraFields.php
modules/contrib/basket/src/BasketInstall.php
modules/contrib/basket/src/BasketMailCenter.php
modules/contrib/basket/src/BasketNumberFormat.php
modules/contrib/basket/src/BasketOrderForm.php
modules/contrib/basket/src/BasketOrderItems.php
modules/contrib/basket/src/BasketOrders.php
modules/contrib/basket/src/BasketTerm.php
modules/contrib/basket/src/BasketTokens.php
modules/contrib/basket/src/BasketTranslatableMarkup.php
modules/contrib/basket/src/BasketTranslate.php
modules/contrib/basket/src/BasketUninstall.php
modules/contrib/basket/src/BasketUpdateManager.php
modules/contrib/basket/src/BasketWaybill.php
modules/contrib/basket/src/Cache/BasketCurrencyCacheContext.php
modules/contrib/basket/src/Commands/BasketCommands.php
modules/contrib/basket/src/Controller/Pages.php
modules/contrib/basket/src/Entity.php
modules/contrib/basket/src/Event/EventSubscriber.php
modules/contrib/basket/src/Plugin/Basket/Delivery/DeliveryAddressField.php
modules/contrib/basket/src/Plugin/Basket/Delivery/DeliveryOptionsField.php
modules/contrib/basket/src/Plugin/Basket/DeliverySettings/DeliveryAddressFieldSettings.php
modules/contrib/basket/src/Plugin/Basket/DeliverySettings/DeliveryOptionsFieldSettings.php
modules/contrib/basket/src/Plugin/Basket/Discount/DiscountRange.php
modules/contrib/basket/src/Plugin/Basket/Discount/DiscountUserPercent.php
modules/contrib/basket/src/Plugin/Basket/Discount/Form/DiscountRangeForm.php
modules/contrib/basket/src/Plugin/Basket/Extra/BasketAdd.php
modules/contrib/basket/src/Plugin/Basket/Popup/BasketPopupBase.php
modules/contrib/basket/src/Plugin/Block/BasketCountBlock.php
modules/contrib/basket/src/Plugin/Block/BasketCurrencyBlock.php
modules/contrib/basket/src/Plugin/Block/BasketCurrencyRateBlock.php
modules/contrib/basket/src/Plugin/Block/BasketUserDiscountBlock.php
modules/contrib/basket/src/Plugin/Field/FieldFormatter/BasketPriceFieldFormatter.php
modules/contrib/basket/src/Plugin/Field/FieldType/BasketPriceField.php
modules/contrib/basket/src/Plugin/Field/FieldWidget/BasketPriceFieldWidget.php
modules/contrib/basket/src/Plugin/IMEX/field/BasketCurrencyFieldIMEX.php
modules/contrib/basket/src/Plugin/IMEX/field/BasketNumberFieldIMEX.php
modules/contrib/basket/src/Plugin/views/area/BasketBuyersButtons.php
modules/contrib/basket/src/Plugin/views/area/BasketCartClarAll.php
modules/contrib/basket/src/Plugin/views/area/BasketCartResult.php
modules/contrib/basket/src/Plugin/views/area/BasketOperationsButtons.php
modules/contrib/basket/src/Plugin/views/cache/BasketCache.php
modules/contrib/basket/src/Plugin/views/exposed_form/BasketExposedForm.php
modules/contrib/basket/src/Plugin/views/field/BasketAddField.php
modules/contrib/basket/src/Plugin/views/field/BasketCartAllParams.php
modules/contrib/basket/src/Plugin/views/field/BasketCartDelete.php
modules/contrib/basket/src/Plugin/views/field/BasketCartImg.php
modules/contrib/basket/src/Plugin/views/field/BasketCartPrice.php
modules/contrib/basket/src/Plugin/views/field/BasketCartQuantity.php
modules/contrib/basket/src/Plugin/views/field/BasketCartSum.php
modules/contrib/basket/src/Plugin/views/field/BasketGetPriceField.php
modules/contrib/basket/src/Plugin/views/field/BasketGoodsTableField.php
modules/contrib/basket/src/Plugin/views/field/BasketOrderCurrency.php
modules/contrib/basket/src/Plugin/views/field/BasketOrderGoods.php
modules/contrib/basket/src/Plugin/views/field/BasketOrderID.php
modules/contrib/basket/src/Plugin/views/field/BasketOrderPrice.php
modules/contrib/basket/src/Plugin/views/field/BasketOrderTerm.php
modules/contrib/basket/src/Plugin/views/field/BasketPriceField.php
modules/contrib/basket/src/Plugin/views/field/BasketProductCheckedField.php
modules/contrib/basket/src/Plugin/views/field/BasketProductCountsField.php
modules/contrib/basket/src/Plugin/views/field/BasketProductImgField.php
modules/contrib/basket/src/Plugin/views/field/BasketProductStatusField.php
modules/contrib/basket/src/Plugin/views/field/BasketUserPercentField.php
modules/contrib/basket/src/Plugin/views/field/BasketUserSumField.php
modules/contrib/basket/src/Plugin/views/filter/BasketCartSid.php
modules/contrib/basket/src/Plugin/views/filter/BasketFilterTitleField.php
modules/contrib/basket/src/Plugin/views/filter/BasketGetPriceField.php
modules/contrib/basket/src/Plugin/views/filter/BasketGoodsFilterBlock2.php
modules/contrib/basket/src/Plugin/views/filter/BasketIsAddCart.php
modules/contrib/basket/src/Plugin/views/filter/BasketOrderFilter.php
modules/contrib/basket/src/Plugin/views/filter/BasketProductCountsField.php
modules/contrib/basket/src/Plugin/views/filter/BasketProductStatusField.php
modules/contrib/basket/src/Plugin/views/filter/BasketUserSumField.php
modules/contrib/basket/src/Plugin/views/sort/BasketAddTime.php
modules/contrib/basket/src/Plugin/views/sort/BasketGetPriceField.php
modules/contrib/basket/src/Plugin/views/sort/BasketProductCountsField.php
modules/contrib/basket/src/Plugin/views/sort/BasketProductInStock.php
modules/contrib/basket/src/Plugin/views/style/TableLkOrders.php
modules/contrib/basket/src/Plugin/views/wizard/Basket.php
modules/contrib/basket/src/Plugins/Delivery/Annotation/BasketDelivery.php
modules/contrib/basket/src/Plugins/Delivery/BasketDeliveryInterface.php
modules/contrib/basket/src/Plugins/Delivery/BasketDeliveryManager.php
modules/contrib/basket/src/Plugins/DeliverySettings/Annotation/BasketDeliverySettings.php
modules/contrib/basket/src/Plugins/DeliverySettings/BasketDeliverySettingsInterface.php
modules/contrib/basket/src/Plugins/DeliverySettings/BasketDeliverySettingsManager.php
modules/contrib/basket/src/Plugins/Discount/Annotation/BasketDiscount.php
modules/contrib/basket/src/Plugins/Discount/BasketDiscountInterface.php
modules/contrib/basket/src/Plugins/Discount/BasketDiscountManager.php
modules/contrib/basket/src/Plugins/Extra/Annotation/BasketExtraSettings.php
modules/contrib/basket/src/Plugins/Extra/BasketExtraSettingsInterface.php
modules/contrib/basket/src/Plugins/Extra/BasketExtraSettingsManager.php
modules/contrib/basket/src/Plugins/Params/Annotation/BasketParams.php
modules/contrib/basket/src/Plugins/Params/BasketParamsBaseForm.php
modules/contrib/basket/src/Plugins/Params/BasketParamsInterface.php
modules/contrib/basket/src/Plugins/Params/BasketParamsManager.php
modules/contrib/basket/src/Plugins/Params/BasketParamstInterface.php
modules/contrib/basket/src/Plugins/Payment/Annotation/BasketPayment.php
modules/contrib/basket/src/Plugins/Payment/BasketPaymentInterface.php
modules/contrib/basket/src/Plugins/Payment/BasketPaymentManager.php
modules/contrib/basket/src/Plugins/Popup/Annotation/BasketPopupSystem.php
modules/contrib/basket/src/Plugins/Popup/BasketPopupManager.php
modules/contrib/basket/src/Plugins/Popup/BasketPopupSystemInterface.php
modules/contrib/basket/src/Plugins/Stock/Annotation/BasketStockBulk.php
modules/contrib/basket/src/Plugins/Stock/BasketStockBulkBaseForm.php
modules/contrib/basket/src/Plugins/Stock/BasketStockBulkInterface.php
modules/contrib/basket/src/Plugins/Stock/BasketStockBulkManager.php
modules/contrib/basket/src/Plugins/Twig/BasketTwigExtension.php
modules/contrib/basket/src/Query/BasketGetNodeCountsQuery.php
modules/contrib/basket/src/Query/BasketGetNodeImgQuery.php
modules/contrib/basket/src/Query/BasketGetNodePriceQuery.php
modules/contrib/basket/src/Query/BasketGetUserSumQuery.php
modules/contrib/basket/src/Query/BasketQuery.php
modules/contrib/basket/src/Requirements.php
modules/contrib/basket/src/Theme/BasketThemeNegotiator.php
modules/contrib/basket/src/ToolbarHandler.php
modules/contrib/basket/src/UserAdminPermissions.php
modules/contrib/basket/src/ViewsAlters.php
modules/contrib/basket/src/ViewsCartAlters.php
modules/contrib/basket/src/ViewsUiAddHandler.php
modules/contrib/basket/views.theme.inc

101 files with changes
======================

1) modules/contrib/basket/src/UserAdminPermissions.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/basket/src/ToolbarHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket;

+use Drupal\Core\Menu\MenuTreeParameters;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Menu\MenuLinkTreeInterface;
@@ @@
         'title'       => t('Shop', [], ['context' => 'basket'])
       ])
     ];
-    $tree = \Drupal::menuTree()->load('basket', new \Drupal\Core\Menu\MenuTreeParameters());
+    $tree = \Drupal::menuTree()->load('basket', new MenuTreeParameters());
     if(!empty($tree['basket.info']->subtree)) {
       foreach ($tree['basket.info']->subtree as $key => $subtree) {
         $links['basket']['below'][$key] = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/basket/src/Theme/BasketThemeNegotiator.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;

@@ @@
   /**
    * Creates a new AdminNegotiator instance.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The current user.
    */
   public function __construct(AccountInterface $user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/basket/src/Query/BasketQuery.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Query;

+use Drupal\Core\Database\Query\SelectInterface;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Database\Connection;
 use Drupal\basket\Basket;
 use Drupal\views\Views;
@@ @@
 class BasketQuery {

   /**
-   * Drupal\Core\Database\Connection definition.
-   *
-   * @var \Drupal\Core\Database\Connection
-   */
-  protected $db;
+		 * Drupal\Core\Database\Connection definition.
+		 *
+		 * @var Connection
+		 */
+		protected $db;

   /**
-   * Drupal\basket\Basket definition.
-   *
-   * @var \Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Drupal\basket\Basket definition.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;
   
   /**
    * @var array
@@ @@
   }
   
   /**
-   * @param null $entityId
-   *
-   * @return \Drupal\Core\Database\Query\SelectInterface
-   */
-  public function getQtyQuery($entityId = NULL) {
+		 * @param null $entityId
+		 *
+		 * @return SelectInterface
+		 */
+		public function getQtyQuery($entityId = NULL) {
     $cKey = 'qty_' . ($entityId ?? 'all');
     if (!isset($this->getQuery[$cKey])) {
       $this->getQuery[$cKey] = NULL;
@@ @@
   }
   
   /**
-   * @param $view
-   *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   */
-  public function qtyViewsJoin(&$view) {
+		 * @param $view
+		 *
+		 * @throws PluginException
+		 */
+		public function qtyViewsJoin(&$view) {
     if (empty($view->query->relationships[$view->field . '_getCountsQuery'])) {
       if (!empty($subQueryCount = $this->getQtyQuery())) {
         // ---
@@ @@
   }
   
   /**
-   * @param $view
-   * @param $order
-   *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   */
-  public function qtyViewsJoinSort(&$view, $order) {
+		 * @param $view
+		 * @param $order
+		 *
+		 * @throws PluginException
+		 */
+		public function qtyViewsJoinSort(&$view, $order) {
     $this->qtyViewsJoin($view);
     if (!empty($view->query->relationships[$view->field . '_getCountsQuery'])) {
       $view->query->addOrderBy(NULL, $view->field . '_getCountsQuery.count', $order, '_getCountsSort');
@@ @@
   }
   
   /**
-   * @param $view
-   * @param string $keyPriceField
-   * @param array $filter
-   *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   */
-  public function priceViewsJoin(&$view, $keyPriceField = 'MIN', $filter = []) {
+		 * @param $view
+		 * @param string $keyPriceField
+		 * @param array $filter
+		 *
+		 * @throws PluginException
+		 */
+		public function priceViewsJoin(&$view, $keyPriceField = 'MIN', $filter = []) {
 		if (empty($view->query->relationships[$view->field . '_getPriceQuery_' . $keyPriceField])) {
 			if (!empty($getPriceQuery = $this->getPriceQuery($keyPriceField))) {
         // ---
@@ @@
   }
   
   /**
-   * @param $view
-   * @param $order
-   * @param string $keyPriceField
-   * @param array $filter
-   *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   */
-  public function priceViewsJoinSort(&$view, $order, $keyPriceField = 'MIN', $filter = []) {
+		 * @param $view
+		 * @param $order
+		 * @param string $keyPriceField
+		 * @param array $filter
+		 *
+		 * @throws PluginException
+		 */
+		public function priceViewsJoinSort(&$view, $order, $keyPriceField = 'MIN', $filter = []) {
     $this->priceViewsJoin($view, $keyPriceField);
     if (!empty($view->query->relationships[$view->field . '_getPriceQuery_' . $keyPriceField])) {
       $view->query->addOrderBy(NULL, $view->field . '_getPriceQuery_' . $keyPriceField . '.priceConvert', $order, '_getPriceSort');
@@ @@
   }
   
   /**
-   * @return \Drupal\Core\Database\Query\SelectInterface
-   */
-  public function getUserSumQuery() {
+		 * @return SelectInterface
+		 */
+		public function getUserSumQuery() {
     $cKey = 'userSum';
     if (!isset($this->getQuery[$cKey])) {
       $this->getQuery[$cKey] = $this->db->select('node_field_data', 'n');
@@ @@
   }
   
   /**
-   * @param $view
-   *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   */
-  public function userSumViewsJoin(&$view) {
+		 * @param $view
+		 *
+		 * @throws PluginException
+		 */
+		public function userSumViewsJoin(&$view) {
     if (empty($view->query->relationships[$view->field . '_getUserSumQuery'])) {
       if (!empty($subQuery = $this->getUserSumQuery())) {
         $join = Views::pluginManager('join')->createInstance('standard', [
@@ @@
   }
   
   /**
-   * @param $view
-   * @param $order
-   *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   */
-  public function userSumViewsJoinSort(&$view, $order) {
+		 * @param $view
+		 * @param $order
+		 *
+		 * @throws PluginException
+		 */
+		public function userSumViewsJoinSort(&$view, $order) {
     $this->userSumViewsJoin($view);
     if (!empty($view->query->relationships[$view->field . '_getUserSumQuery'])) {
       $view->query->addOrderBy($view->field . '_getUserSumQuery', 'total_sum', $order);
@@ @@
   }
   
   /**
-   * @param null $entityId
-   *
-   * @return \Drupal\Core\Database\Query\SelectInterface|mixed|null
-   */
-  public function getImgQuery($entityId = NULL) {
+		 * @param null $entityId
+		 *
+		 * @return SelectInterface|mixed|null
+		 */
+		public function getImgQuery($entityId = NULL) {
     $cKey = 'img_' . ($entityId ?? 'all');
     if (!isset($this->getQuery[$cKey])) {
       $this->getQuery[$cKey] = NULL;
@@ @@
   }
   
   /**
-   * @param $view
-   *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   */
-  public function ImgViewsJoin(&$view) {
+		 * @param $view
+		 *
+		 * @throws PluginException
+		 */
+		public function ImgViewsJoin(&$view) {
     if (empty($view->query->relationships[$view->field . '_getFirstImgQuery'])) {
       if (!empty($subQuery = $this->getImgQuery())) {
         $join = Views::pluginManager('join')->createInstance('standard', [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/basket/src/Plugins/Stock/BasketStockBulkManager.php:20

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/basket/src/Plugins/Stock/BasketStockBulkBaseForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugins\Stock;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * Set Basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/basket/src/Plugins/Popup/BasketPopupManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugins\Popup;

+use Drupal\basket\Basket;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/basket/src/Plugins/Payment/BasketPaymentManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugins\Payment;

+use Drupal\basket\Basket;
 use Drupal\basket\Ajax\BasketReplaceCommand;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
 class BasketPaymentManager extends DefaultPluginManager {

   /**
-   * Set Basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set Basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
-   * Constructs a PaymentManager object.
-   *
-   * @param \Traversable $namespaces
-   *   An object that implements \Traversable which contains the root paths
-   *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
-   *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
-   *   The module handler to invoke the alter hook with.
-   */
-  public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
+		 * Constructs a PaymentManager object.
+		 *
+		 * @param \Traversable $namespaces
+		 *   An object that implements \Traversable which contains the root paths
+		 *   keyed by the corresponding namespace to look for plugin implementations.
+		 * @param CacheBackendInterface $cache_backend
+		 *   Cache backend instance to use.
+		 * @param ModuleHandlerInterface $module_handler
+		 *   The module handler to invoke the alter hook with.
+		 */
+		public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
     parent::__construct(
       'Plugin/Basket/Payment',
       $namespaces,
@@ @@
   protected $paySystem;

   /**
-   * Set Basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set Basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * {@inheritdoc}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/basket/src/Plugins/Params/BasketParamsManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugins\Params;

+use Drupal\basket\Basket;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
@@ @@
   /**
    * Set Basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/basket/src/Plugins/Extra/BasketExtraSettingsManager.php:20

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/basket/src/Plugins/Discount/BasketDiscountManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugins\Discount;

+use Drupal\basket\Basket;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
@@ @@
   /**
    * Set Basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/basket/src/Plugins/DeliverySettings/BasketDeliverySettingsManager.php:20

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/basket/src/Plugins/Delivery/BasketDeliveryManager.php:17

    ---------- begin diff ----------
@@ @@
 class BasketDeliveryManager extends DefaultPluginManager {

   /**
-   * Constructs a DeliveryManager object.
-   *
-   * @param \Traversable $namespaces
-   *   An object that implements \Traversable which contains the root paths
-   *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
-   *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
-   *   The module handler to invoke the alter hook with.
-   */
-  public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
+		 * Constructs a DeliveryManager object.
+		 *
+		 * @param \Traversable $namespaces
+		 *   An object that implements \Traversable which contains the root paths
+		 *   keyed by the corresponding namespace to look for plugin implementations.
+		 * @param CacheBackendInterface $cache_backend
+		 *   Cache backend instance to use.
+		 * @param ModuleHandlerInterface $module_handler
+		 *   The module handler to invoke the alter hook with.
+		 */
+		public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
     parent::__construct(
       'Plugin/Basket/Delivery',
       $namespaces,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/basket/src/Plugin/views/filter/BasketUserSumField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\filter;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/basket/src/Plugin/views/filter/BasketProductStatusField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\filter;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/basket/src/Plugin/views/filter/BasketProductCountsField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\filter;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/basket/src/Plugin/views/filter/BasketOrderFilter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\filter;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/basket/src/Plugin/views/filter/BasketGoodsFilterBlock2.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\filter;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\ViewExecutable;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/basket/src/Plugin/views/filter/BasketGetPriceField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\filter;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/basket/src/Plugin/views/field/BasketUserSumField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/basket/src/Plugin/views/field/BasketProductStatusField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
 use Drupal\views\ViewExecutable;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/basket/src/Plugin/views/field/BasketOrderTerm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
 use Drupal\views\ViewExecutable;
@@ @@
 class BasketOrderTerm extends FieldPluginBase {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * {@inheritdoc}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/basket/src/Plugin/views/field/BasketOrderID.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/basket/src/Plugin/views/field/BasketOrderCurrency.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/basket/src/Plugin/views/field/BasketGoodsTableField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
 use Drupal\Core\Render\Element;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/basket/src/Plugin/views/field/BasketGetPriceField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/basket/src/Plugin/views/field/BasketCartSum.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/basket/src/Plugin/views/field/BasketCartQuantity.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
@@ @@
 class BasketCartQuantity extends FieldPluginBase {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * {@inheritdoc}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/basket/src/Plugin/views/field/BasketCartPrice.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/basket/src/Plugin/views/field/BasketCartImg.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
@@ @@
 class BasketCartImg extends FieldPluginBase {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * {@inheritdoc}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/basket/src/Plugin/views/field/BasketAddField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\field;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\field\FieldPluginBase;
 use Drupal\views\ResultRow;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


32) modules/contrib/basket/src/Plugin/views/exposed_form/BasketExposedForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\exposed_form;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\exposed_form\ExposedFormPluginBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


33) modules/contrib/basket/src/Plugin/views/area/BasketOperationsButtons.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\area;

+use Drupal\basket\Basket;
+use Drupal\basket\Plugins\Stock\BasketStockBulkManager;
 use Drupal\views\Plugin\views\area\AreaPluginBase;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basketStockBulk.
    *
-   * @var Drupal\basket\Plugins\Stock\BasketStockBulkManager
+   * @var BasketStockBulkManager
    */
   protected $basketStockBulk;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


34) modules/contrib/basket/src/Plugin/views/area/BasketCartResult.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\area;

+use Drupal\basket\Basket;
+use Drupal\basket\Plugins\Delivery\BasketDeliveryManager;
 use Drupal\views\Plugin\views\area\AreaPluginBase;

 /**
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Plugins\Delivery\BasketDeliveryManager
+   * @var BasketDeliveryManager
    */
   protected $basketDelivery;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


35) modules/contrib/basket/src/Plugin/views/area/BasketCartClarAll.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\area;

+use Drupal\basket\Basket;
 use Drupal\views\Plugin\views\area\AreaPluginBase;
 use Drupal\Core\Template\Attribute;
 use Drupal\Core\Url;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


36) modules/contrib/basket/src/Plugin/views/area/BasketBuyersButtons.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\views\area;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\area\AreaPluginBase;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


37) modules/contrib/basket/src/Plugin/Block/BasketUserDiscountBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Block;

+use Drupal\basket\Basket;
+use Drupal\basket\Plugins\Discount\BasketDiscountManager;
 use Drupal\Core\Block\BlockBase;

 /**
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basketDiscount.
    *
-   * @var Drupal\basket\Plugins\Discount\BasketDiscountManager
+   * @var BasketDiscountManager
    */
   protected $basketDiscount;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


38) modules/contrib/basket/src/Plugin/Block/BasketCurrencyRateBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Block;

+use Drupal\basket\Basket;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


39) modules/contrib/basket/src/Plugin/Block/BasketCurrencyBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Block;

+use Drupal\basket\Basket;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Url;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


40) modules/contrib/basket/src/Plugin/Block/BasketCountBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Block;

+use Drupal\basket\Basket;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Template\Attribute;
 use Drupal\Component\Utility\Html;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


41) modules/contrib/basket/src/Plugin/Basket/Extra/BasketAdd.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\Extra;

+use Drupal\basket\Basket;
+use Drupal\basket\BasketTranslate;
 use Drupal\basket\Plugins\Extra\BasketExtraSettingsInterface;
 use Drupal\basket\Plugins\Extra\Annotation\BasketExtraSettings;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set trans.
    *
-   * @var Drupal\basket\BasketTranslate
+   * @var BasketTranslate
    */
   protected $trans;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


42) modules/contrib/basket/src/Plugin/Basket/Discount/Form/DiscountRangeForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\Discount\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


43) modules/contrib/basket/src/Plugin/Basket/Discount/DiscountUserPercent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\Discount;

+use Drupal\basket\Basket;
 use Drupal\basket\Plugins\Discount\BasketDiscountInterface;
 use Drupal\Core\Url;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


44) modules/contrib/basket/src/Plugin/Basket/Discount/DiscountRange.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\Discount;

+use Drupal\basket\Basket;
 use Drupal\basket\Plugins\Discount\BasketDiscountInterface;
 use Drupal\Core\Url;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


45) modules/contrib/basket/src/Plugin/Basket/DeliverySettings/DeliveryOptionsFieldSettings.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\DeliverySettings;

+use Drupal\basket\Basket;
 use Drupal\basket\Plugins\DeliverySettings\BasketDeliverySettingsInterface;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


46) modules/contrib/basket/src/Plugin/Basket/DeliverySettings/DeliveryAddressFieldSettings.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\DeliverySettings;

+use Drupal\basket\Basket;
 use Drupal\basket\Plugins\DeliverySettings\BasketDeliverySettingsInterface;

 /**
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


47) modules/contrib/basket/src/Plugin/Basket/Delivery/DeliveryOptionsField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\Delivery;

+use Drupal\basket\Basket;
 use Drupal\basket\Plugins\Delivery\BasketDeliveryInterface;

 /**
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


48) modules/contrib/basket/src/Plugin/Basket/Delivery/DeliveryAddressField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Plugin\Basket\Delivery;

+use Drupal\basket\Basket;
 use Drupal\basket\Plugins\Delivery\BasketDeliveryInterface;

 /**
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


49) modules/contrib/basket/src/Event/EventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Event;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Drupal\views\Ajax\ViewAjaxResponse;

 /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     if ($response instanceof ViewAjaxResponse) {
       $view = $response->getView();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


50) modules/contrib/basket/src/Entity.php:7

    ---------- begin diff ----------
@@ @@
 class Entity {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * Set db.
@@ @@
       'basket_delivery',
       'value',
     ]);
-    
+
     // Not Discount
     $_SESSION['payment_tid'] = $form_state->getValue('basket_payment');
     $GLOBALS['cartNotDiscount'] = $this->basket->getSettings('payment_not_discounts', $_SESSION['payment_tid']);
     $this->cart->reset();
-    
+
     // ---
     $cartItems = $this->cart->getItemsInBasket();
-    
+
     // ---
     $countGoods = 0;
     $bd_nids = [0];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


51) modules/contrib/basket/src/Controller/Pages.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Controller;

+use Drupal\basket\Basket;
+use Drupal\basket\BasketCart;
+use Drupal\basket\Plugins\Params\BasketParamsManager;
+use Drupal\basket\Plugins\Popup\BasketPopupManager;
+use Drupal\basket\Plugins\Payment\BasketPaymentManager;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\InvokeCommand;
 use Drupal\basket\Ajax\BasketReplaceCommand;
@@ @@
 class Pages {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
-   * Set cart.
-   *
-   * @var Drupal\basket\BasketCart
-   */
-  protected $cart;
+		 * Set cart.
+		 *
+		 * @var BasketCart
+		 */
+		protected $cart;

   /**
-   * Set basketParams.
-   *
-   * @var Drupal\basket\Plugins\Params\BasketParamsManager
-   */
-  protected $basketParams;
+		 * Set basketParams.
+		 *
+		 * @var BasketParamsManager
+		 */
+		protected $basketParams;

   /**
-   * Set basketParams.
-   *
-   * @var Drupal\basket\Plugins\Popup\BasketPopupManager
-   */
-  protected $popup;
+		 * Set basketParams.
+		 *
+		 * @var BasketPopupManager
+		 */
+		protected $popup;

   /**
    * Set pluginBlock.
@@ @@
   protected $pluginBlock;

   /**
-   * Set basketParams.
-   *
-   * @var Drupal\basket\Plugins\Payment\BasketPaymentManager
-   */
-  protected $basketPayment;
+		 * Set basketParams.
+		 *
+		 * @var BasketPaymentManager
+		 */
+		protected $basketPayment;

   /**
    * {@inheritdoc}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


52) modules/contrib/basket/src/Commands/BasketCommands.php:28

    ---------- begin diff ----------
@@ @@
         \Drupal::logger('basket:po')->error($moduleName . '.info.yml not "project" info');
       }
       if (!empty($moduleInfo['project'])) {
-        $dir = realpath(drupal_get_path('module', $moduleName)) . '/translations/';
+        $dir = realpath(\Drupal::service('extension.list.module')->getPath($moduleName)) . '/translations/';
         if (is_dir($dir)) {
           \Drupal::service('file_system')->deleteRecursive($dir);
         }
@@ @@
         \Drupal::logger('basket:po')->error($moduleName . '.info.yml not "project" info');
       }
       if (!empty($moduleInfo['project'])) {
-        $dir = drupal_get_path('module', $moduleName) . '/translations/';
+        $dir = \Drupal::service('extension.list.module')->getPath($moduleName) . '/translations/';
         if (is_dir($dir)) {
           \Drupal::moduleHandler()->loadInclude('locale', 'translation.inc');
           \Drupal::moduleHandler()->loadInclude('locale', 'bulk.inc');
@@ @@
     }
     $items = [];
     // ---
-    $hooksFile = drupal_get_path('module', $moduleName) . '/config/basket_install/HOOKs.yml';
+    $hooksFile = \Drupal::service('extension.list.module')->getPath($moduleName) . '/config/basket_install/HOOKs.yml';
     if (file_exists($hooksFile)) {
       $ymldata = Yaml::decode(file_get_contents($hooksFile));
       foreach ($ymldata as $groupKey => $groupInfo) {
@@ @@
       }
     }
     // ---
-    file_put_contents(drupal_get_path('module', $moduleName) . '/README.md', trim(implode(PHP_EOL, $items)));
+    file_put_contents(\Drupal::service('extension.list.module')->getPath($moduleName) . '/README.md', trim(implode(PHP_EOL, $items)));
   }

 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


53) modules/contrib/basket/src/BasketWaybill.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
       'tempDir'               => \Drupal::service('file_system')->realpath('temporary://'),
     ]);
     $mpdf->fontdata['Arial'] = [
-      'R'                     => drupal_get_path('module', 'basket') . '/misc/fonts/Arial.ttf',
+      'R'                     => \Drupal::service('extension.list.module')->getPath('basket') . '/misc/fonts/Arial.ttf',
     ];
     $mpdf->SetDefaultFont('Arial');
     // Set header.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


54) modules/contrib/basket/src/BasketUpdateManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket;

+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Render\Markup;
 use Drupal\Core\Render\Element;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


55) modules/contrib/basket/src/BasketTokens.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
           break;

         case'theme_path':
-          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . drupal_get_path('theme', \Drupal::config('system.theme')->get('default'));
+          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . \Drupal::service('extension.list.theme')->getPath(\Drupal::config('system.theme')->get('default'));
           break;

         case'basket_imgs':
-          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . drupal_get_path('module', 'basket') . '/misc/images/mail';
+          $this->getToken[$tokenName_] = $GLOBALS['base_url'] . '/' . \Drupal::service('extension.list.module')->getPath('basket') . '/misc/images/mail';
           break;

         case'appearance_color':
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


56) modules/contrib/basket/src/BasketTerm.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


57) modules/contrib/basket/src/BasketOrders.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


58) modules/contrib/basket/src/BasketOrderItems.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


59) modules/contrib/basket/src/BasketOrderForm.php:15

    ---------- begin diff ----------
@@ @@
 class BasketOrderForm {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * Set phoneMaskSettings.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


60) modules/contrib/basket/src/BasketMailCenter.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


61) modules/contrib/basket/src/BasketInstall.php:24

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   private function createList($file_name, $type) {
-    $file_path = drupal_get_path('module', 'basket') . '/config/basket_install/' . $file_name;
+    $file_path = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/' . $file_name;
     if (file_exists($file_path)) {
       $yml = file_get_contents($file_path);
       if (!empty($yml)) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


62) modules/contrib/basket/src/BasketExtraFields.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket;

+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Template\Attribute;
 use Drupal\Core\Url;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
     $bundle = $form['#bundle'];
     $viewMode = \Drupal::routeMatch()->getParameter('view_mode_name');

-    /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $view_display */
+    /** @var EntityViewDisplayInterface $view_display */
     $viewDisplay = \Drupal::entityTypeManager()
       ->getStorage('entity_view_display')
       ->load($entityType . '.' . $bundle . '.' . $viewMode);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


63) modules/contrib/basket/src/BasketExport.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
    * {@inheritdoc}
    */
   public function getTokenInfo() {
-    $info = drupal_get_path('module', 'basket') . '/config/basket_install/TwigExcelTokens.yml';
+    $info = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/TwigExcelTokens.yml';
     $tokens = Yaml::decode(file_get_contents($info));
     // Alter.
     $templateType = 'orders_export';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


64) modules/contrib/basket/src/BasketCurrency.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


65) modules/contrib/basket/src/BasketCron.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


66) modules/contrib/basket/src/BasketCart.php:11

    ---------- begin diff ----------
@@ @@
 class BasketCart {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * Set $basketQuery.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


67) modules/contrib/basket/src/BasketAccess.php:9

    ---------- begin diff ----------
@@ @@
 class BasketAccess {

   /**
-   * Drupal\basket\Basket definition.
-   *
-   * @var \Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Drupal\basket\Basket definition.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;
 	
 	/**
-   * The current user.
-   *
-   * @var \Drupal\Core\Session\AccountInterface
-   */
-  protected $user;
+		 * The current user.
+		 *
+		 * @var AccountInterface
+		 */
+		protected $user;

   /**
    * Constructs a new BasketAccess object.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


68) modules/contrib/basket/src/Basket.php:13

    ---------- begin diff ----------
@@ @@
   use DependencySerializationTrait;

   /**
-   * Set database.
-   *
-   * @var \Drupal\Core\Database\Connection
-   */
-  protected $database;
+		 * Set database.
+		 *
+		 * @var Connection
+		 */
+		protected $database;

   /**
    * Set fileSystem.
@@ @@
     }
     if ($isUseBase) {
       if (!isset($this->getIco[$icoName])) {
-        $ico_url = drupal_get_path('module', $moduleName) . '/misc/images/' . $icoName;
+        $ico_url = \Drupal::service('extension.list.module')->getPath($moduleName) . '/misc/images/' . $icoName;
         $this->getIco[$icoName] = file_exists($ico_url) ? file_get_contents($ico_url) : NULL;
       }
       return $this->getIco[$icoName];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


69) modules/contrib/basket/src/Admin/Pages.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin;

+use Drupal\basket\Basket;
+use Drupal\basket\BasketAccess;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\InvokeCommand;
@@ @@
   protected static $createLink;

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;
   
 	/**
-   * Set basketAccess.
-   *
-   * @var Drupal\basket\BasketAccess
-   */
+	 * Set basketAccess.
+	 *
+	 * @var BasketAccess
+	 */
 	protected $basketAccess;

   /**
@@ @@
                         'class'     => ['status_' . $term->type . '_' . $_POST['orderID']],
                       ]
                     );
-                    $response->addCommand(new InvokeCommand('.status_' . $_POST['status_type'] . '_' . $_POST['orderID'], 'replaceWith', [render($new_html)]));
+                    $response->addCommand(new InvokeCommand('.status_' . $_POST['status_type'] . '_' . $_POST['orderID'], 'replaceWith', [\Drupal::service('renderer')->render($new_html)]));
                   }
                 }
                 if ($_POST['status_type'] == 'status') {
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


70) modules/contrib/basket/src/Admin/Page/Trash.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\views\Views;
 use Drupal\Core\Url;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


71) modules/contrib/basket/src/Admin/Page/Templates.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Component\Serialization\Yaml;
 use Drupal\Core\Url;
 use Drupal\Core\Form\FormBase;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   public function getTemplateYamls() {
     if (!isset($this->getTemplateYamls)) {
       $ymldata = [];
-      $templates_file = drupal_get_path('module', 'basket') . '/config/basket_install/Templates.yml';
+      $templates_file = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/Templates.yml';
       if (file_exists($templates_file)) {
         $ymldata = Yaml::decode(file_get_contents($templates_file));
         // subModules.
@@ @@
         \Drupal::moduleHandler()->alter('basket_translate_context', $subModules);
         if (!empty($subModules)) {
           foreach ($subModules as $subModule) {
-            $templatesSubFile = drupal_get_path('module', $subModule) . '/config/basket_install/Templates.yml';
+            $templatesSubFile = \Drupal::service('extension.list.module')->getPath($subModule) . '/config/basket_install/Templates.yml';
             if (file_exists($templatesSubFile)) {
               $ymlSubData = Yaml::decode(file_get_contents($templatesSubFile));
               if (!empty($ymlSubData)) {
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


72) modules/contrib/basket/src/Admin/Page/SubPages.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Core\Url;
 use Drupal\Core\Render\Markup;
 use Drupal\Core\Menu\MenuTreeParameters;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


73) modules/contrib/basket/src/Admin/Page/StockProduct.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 /**
  * {@inheritdoc}
  */
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


74) modules/contrib/basket/src/Admin/Page/StatusPage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\basket\Admin\BasketDeleteConfirm;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\InvokeCommand;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
   /**
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


75) modules/contrib/basket/src/Admin/Page/StatisticsBuyers.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 /**
  * {@inheritdoc}
  */
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


76) modules/contrib/basket/src/Admin/Page/PaymentPage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


77) modules/contrib/basket/src/Admin/Page/Orders.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\InvokeCommand;
 use Drupal\Core\Form\FormBase;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $asket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $asket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


78) modules/contrib/basket/src/Admin/Page/Order.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
+use Drupal\basket\BasketAccess;
 use Drupal\basket\Admin\BasketDeleteConfirm;
 use Drupal\basket\Admin\Form\Order\ItemsForm;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
 class Order {

   /**
-   * Set basket.
-   *
-   * @var Drupal\basket\Basket
-   */
-  protected $basket;
+		 * Set basket.
+		 *
+		 * @var Basket
+		 */
+		protected $basket;

   /**
    * Set orderClass.
@@ @@
   protected $viewType;
   
   /**
-   * Set basketAccess.
-   *
-   * @var Drupal\basket\BasketAccess
-   */
-  protected $basketAccess;
+		 * Set basketAccess.
+		 *
+		 * @var BasketAccess
+		 */
+		protected $basketAccess;

   /**
    * {@inheritdoc}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


79) modules/contrib/basket/src/Admin/Page/NodeTypes.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
+use Drupal\basket\BasketTranslate;
 use Drupal\basket\Admin\BasketDeleteConfirm;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\InvokeCommand;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set trans.
    *
-   * @var Drupal\basket\BasketTranslate
+   * @var BasketTranslate
    */
   protected $trans;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set trans.
    *
-   * @var Drupal\basket\BasketTranslate
+   * @var BasketTranslate
    */
   protected $trans;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


80) modules/contrib/basket/src/Admin/Page/NodeEdit.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Core\Url;
 use Drupal\Core\Template\Attribute;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


81) modules/contrib/basket/src/Admin/Page/FreeAdditional.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Component\Serialization\Yaml;
 use Drupal\Core\Render\Markup;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
    */
   public function view() {
     $config = [];
-    $path = drupal_get_path('module', 'basket') . '/config/basket_install/additional.free.yml';
+    $path = \Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/additional.free.yml';
     if( file_exists($path) ) {
       $yml = file_get_contents($path);
       if (!empty($yml)) {
@@ @@
       'content'       => [
         '#theme'        => 'basket_admin_additional_free',
         '#info'         => $config + [
-          'image_path'  => drupal_get_path('module', 'basket') . '/misc/images/free/',
+          'image_path'  => \Drupal::service('extension.list.module')->getPath('basket') . '/misc/images/free/',
           'ico'         => $this->basket->getIco('help.svg', 'base'),
           'mail'        => Markup::create('<a href="mailto:'.$mail.'">'.$mail.'</a>'),
           'youtubeLink' => Markup::create('<a href="'.$config['youtube']['url'].'" target="_blank">'.$config['youtube']['name'].'</a>'),
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


82) modules/contrib/basket/src/Admin/Page/DeliveryPage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\InvokeCommand;
 use Drupal\Core\Form\FormBase;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


83) modules/contrib/basket/src/Admin/Page/CurrencyPage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\basket\Admin\BasketDeleteConfirm;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


84) modules/contrib/basket/src/Admin/Page/Blocks.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Page;

+use Drupal\basket\Basket;
 use Drupal\Component\Serialization\Yaml;
 use Drupal\Core\Url;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
    */
   public function deliverys() {
     $items = [];
-    $deliveryServices = Yaml::decode(file_get_contents(drupal_get_path('module', 'basket') . '/config/basket_install/deliverys.yml'));
+    $deliveryServices = Yaml::decode(file_get_contents(\Drupal::service('extension.list.module')->getPath('basket') . '/config/basket_install/deliverys.yml'));
     $deliverySystems = \Drupal::service('BasketDelivery')->getDefinitions();
     if (!empty($deliveryServices)) {
       $onclick = 'basket_admin_ajax_link(this, \'' . Url::fromRoute('basket.admin.pages', ['page_type' => 'api-help'])->toString() . '\')';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


85) modules/contrib/basket/src/Admin/Operations.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


86) modules/contrib/basket/src/Admin/ManagerHeader.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin;

+use Drupal\basket\Basket;
 use Drupal\Core\Url;

 /**
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


87) modules/contrib/basket/src/Admin/Form/UserPermissionsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


88) modules/contrib/basket/src/Admin/Form/TextSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\basket\Admin\BasketDeleteConfirm;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


89) modules/contrib/basket/src/Admin/Form/TermSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


90) modules/contrib/basket/src/Admin/Form/SettingsOrderPage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


91) modules/contrib/basket/src/Admin/Form/SettingsOrderForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


92) modules/contrib/basket/src/Admin/Form/SettingsNotificationsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


93) modules/contrib/basket/src/Admin/Form/SettingsExportOrdersForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


94) modules/contrib/basket/src/Admin/Form/PopupPluginForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


95) modules/contrib/basket/src/Admin/Form/OrdersTabsSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


96) modules/contrib/basket/src/Admin/Form/Order/ItemsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form\Order;

+use Drupal\basket\Basket;
 use Drupal\file\Entity\File;
 use Drupal\basket\Admin\Page\Order;
 use Drupal\Core\Form\FormBase;
@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


97) modules/contrib/basket/src/Admin/Form/EmptyTrashSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


98) modules/contrib/basket/src/Admin/Form/DiscountSystemForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


99) modules/contrib/basket/src/Admin/Form/AppearanceSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\basket\Admin\Form;

+use Drupal\basket\Basket;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * Set basket.
    *
-   * @var Drupal\basket\Basket
+   * @var Basket
    */
   protected $basket;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


100) modules/contrib/basket/basket.module:70

    ---------- begin diff ----------
@@ @@
           'variables' => [
             'info'      => NULL,
           ],
-          'path'      => drupal_get_path('module', 'basket') . '/templates/' . $tplKey,
+          'path'      => \Drupal::service('extension.list.module')->getPath('basket') . '/templates/' . $tplKey,
         ];
       }
     }
@@ @@
  */
 function basket_scss_compiler_import_paths_alter(array &$additional_import_paths) {
   if (!isset($additional_import_paths['basket_colors'])) {
-    $additional_import_paths['basket_colors'] = drupal_get_path('module', 'basket') . '/misc/scss';
+    $additional_import_paths['basket_colors'] = \Drupal::service('extension.list.module')->getPath('basket') . '/misc/scss';
   }
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


101) modules/contrib/basket/basket.install:644

    ---------- begin diff ----------
@@ @@
  */
 function basket_update_8009() {
   if (empty(\Drupal::service('Basket')->getSettings('templates', 'order_view_info'))) {
-    $ymlFile = drupal_get_path('module', 'basket') . '/config/install/basket.setting.templates.yml';
+    $ymlFile = \Drupal::service('extension.list.module')->getPath('basket') . '/config/install/basket.setting.templates.yml';
     if (file_exists($ymlFile)) {
       $ymlFile = Yaml::decode(file_get_contents($ymlFile));
       if (!empty($ymlFile['order_view_info'])) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/basket/src/Plugin/IMEX/field/BasketNumberFieldIMEX.php"
         file, due to:                                                          
         "Analyze error: "Class                                                 
         Drupal\basket_imex\Plugins\IMEXfield\BasketIMEXfieldInterface not      
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/basket/src/Plugin/IMEX/field/BasketCurrencyFieldIMEX.php
         " file, due to:                                                        
         "Analyze error: "Class                                                 
         Drupal\basket_imex\Plugins\IMEXfield\BasketIMEXfieldInterface not      
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

