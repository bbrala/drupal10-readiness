modules/contrib/github_connect/github_connect.install
modules/contrib/github_connect/github_connect.module
modules/contrib/github_connect/src/Controller/GithubConnectController.php
modules/contrib/github_connect/src/Form/AdminSettingForm.php
modules/contrib/github_connect/src/Form/UsernameChooseForm.php
modules/contrib/github_connect/src/Form/VerifyEmailForm.php
modules/contrib/github_connect/src/GithubConnectService.php
modules/contrib/github_connect/src/Plugin/Block/GithubConnectBlock.php

6 files with changes
====================

1) modules/contrib/github_connect/src/Plugin/Block/GithubConnectBlock.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Stores the configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected ConfigFactoryInterface $configFactory;

@@ @@
   /**
    * GithubConnectBlock constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/github_connect/src/GithubConnectService.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected Connection $database;

@@ @@
   /**
    * The HTTP client to fetch the feed data with.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected ClientInterface $httpClient;

@@ @@
   /**
    * The password generator service.
    *
-   * @var \Drupal\Core\Password\PasswordGeneratorInterface
+   * @var PasswordGeneratorInterface
    */
   protected PasswordGeneratorInterface $passwordGenerator;

@@ @@
   /**
    * The user storage service.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected UserStorageInterface $userStorage;

@@ @@
   /**
    * Saves the new GitHub user in github_connect_users.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The user to be saved.
    * @param string $token
    *   The user's auth token.
@@ @@
    * @param string $token
    *   Github's access token for this user.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|null
+   * @return RedirectResponse|null
    */
   public function githubConnectRegister(array $github_user, string $token): ?RedirectResponse {
     $username = $github_user['login'];
@@ @@
     if (empty(user_load_by_mail($github_user['email'])) && !empty($github_user['avatar_url'])) {
       // Download profile image from Github.
       $avatar_url = file_get_contents($github_user['avatar_url']);
-      $file = file_save_data($avatar_url, 'public://' . time() . '_avatars.png', NULL);
+      $file = \Drupal::service('file.repository')->writeData($avatar_url, 'public://' . time() . '_avatars.png', NULL);
       $userinfo['user_picture'] = $file->id();
     }
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/github_connect/src/Form/VerifyEmailForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The password hashing service.
    *
-   * @var \Drupal\Core\Password\PasswordInterface
+   * @var PasswordInterface
    */
   protected PasswordInterface $passwordChecker;

@@ @@
   /**
    * The current account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected AccountInterface $account;

@@ @@
   /**
    * The GithubConnect Service.
    *
-   * @var \Drupal\github_connect\GithubConnectService
+   * @var GithubConnectService
    */
   protected GithubConnectService $githubConnectService;

@@ @@
   /**
    * VerifyEmailForm constructor.
    *
-   * @param \Drupal\Core\Password\PasswordInterface $passwordChecker
+   * @param PasswordInterface $passwordChecker
    *   The password hashing service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current account.
-   * @param \Drupal\github_connect\GithubConnectService $githubConnectService
+   * @param GithubConnectService $githubConnectService
    *   The GithubConnect Service.
    */
   public function __construct(PasswordInterface $passwordChecker, AccountInterface $account, GithubConnectService $githubConnectService, UserStorageInterface $userStorage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/github_connect/src/Form/UsernameChooseForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The current account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected AccountInterface $account;

@@ @@
   /**
    * GithubController Class Service.
    *
-   * @var \Drupal\github_connect\GithubConnectService
+   * @var GithubConnectService
    */
   protected GithubConnectService $githubConnectService;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/github_connect/src/Controller/GithubConnectController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\github_connect\Controller;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected AccountInterface $account;

@@ @@
   /**
    * The URL of the link.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected UrlGeneratorInterface $url;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected Connection $connection;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected Config $config;

@@ @@
   /**
    * The HTTP client to fetch the feed data with.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected ClientInterface $httpClient;

@@ @@
   /**
    * GithubController Class Service.
    *
-   * @var \Drupal\github_connect\GithubConnectService
+   * @var GithubConnectService
    */
   protected GithubConnectService $githubConnectService;

@@ @@
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected Request $request;

@@ @@
   /**
    * Process an Github authentication.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|null
+   * @return RedirectResponse|null
    *   A redirect response, or NULL if authentication failed.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function githubConnectGetAccessToken(): ?RedirectResponse {
     // Get current user data.
@@ @@
    * @param string $token
    *   Access token from GitHub.
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    *   The Drupal user, or NULL if not found.
    */
   public function githubConnectGetTokenUser(string $token): ?UserInterface {
@@ @@
    * @param string $authname
    *   The authname to match.
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    *   The Drupal user, or NULL if not found.
    */
   public function githubConnectUserExternalLoad(string $authname): ?UserInterface {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/github_connect/github_connect.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Block\BlockManager;
 /**
  * @file
  * Gives site visitors the ability to log in with GitHub (http://github.com).
@@ @@
  *
  * @param array $form
  *   The form being altered.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   State of the form being altered.
  */
 function _github_connect_user_login_form_alter(array &$form, FormStateInterface $form_state): void {
-  /** @var \Drupal\Core\Block\BlockManager $block_manager */
+  /** @var BlockManager $block_manager */
   $block_manager = \Drupal::service('plugin.manager.block');
   $form['github_links'] = $block_manager->createInstance('github_connect_block', [])->build();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

