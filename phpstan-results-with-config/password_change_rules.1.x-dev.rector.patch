diff --git a/src/EventSubscriber/EnforcePasswordChange.php b/src/EventSubscriber/EnforcePasswordChange.php
index 895d712..2e99a79 100644
--- a/src/EventSubscriber/EnforcePasswordChange.php
+++ b/src/EventSubscriber/EnforcePasswordChange.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\password_change_rules\EventSubscriber;
 
+use Drupal\user\UserStorageInterface;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\Core\Routing\LocalRedirectResponse;
@@ -9,7 +11,6 @@ use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -20,23 +21,23 @@ class EnforcePasswordChange implements EventSubscriberInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The user storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $storage;
 
   /**
    * EnforceBasicInfoSubscriber constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(AccountInterface $account, EntityTypeManagerInterface $entityTypeManager) {
@@ -47,7 +48,7 @@ class EnforcePasswordChange implements EventSubscriberInterface {
   /**
    * Force the user to change their password.
    */
-  public function enforcePasswordChange(FilterResponseEvent $event) {
+  public function enforcePasswordChange(ResponseEvent $event) {
     $request = $event->getRequest();
 
     // If they're not logged in or already or the correct page do nothing.
diff --git a/src/PasswordEnforcer.php b/src/PasswordEnforcer.php
index 33ac1ca..d8f2bd5 100644
--- a/src/PasswordEnforcer.php
+++ b/src/PasswordEnforcer.php
@@ -17,23 +17,23 @@ class PasswordEnforcer implements ContainerInjectionInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The password change rules config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Profile form password enforcer constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The config.
    */
   public function __construct(AccountInterface $currentUser, ImmutableConfig $config) {
diff --git a/tests/src/Functional/PasswordChangeAdminUi.php b/tests/src/Functional/PasswordChangeAdminUi.php
index de58143..1bfd0c3 100644
--- a/tests/src/Functional/PasswordChangeAdminUi.php
+++ b/tests/src/Functional/PasswordChangeAdminUi.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\password_change_rules\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -20,14 +21,14 @@ class PasswordChangeAdminUi extends BrowserTestBase {
   /**
    * The admin user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $admin;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->admin = $this->createUser([
       'administer password change rules',
@@ -50,7 +51,7 @@ class PasswordChangeAdminUi extends BrowserTestBase {
     $session->checkboxNotChecked('admin_change_password');
 
     // Change settings and ensure they're saved.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'change_password_message' => 'Test message',
       'admin_registered_account' => '1',
       'admin_change_password' => '1',
