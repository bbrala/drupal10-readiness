diff --git a/config_update_ui/src/Commands/ConfigUpdateUiCommands.php b/config_update_ui/src/Commands/ConfigUpdateUiCommands.php
index dd25c25..ac19b56 100644
--- a/config_update_ui/src/Commands/ConfigUpdateUiCommands.php
+++ b/config_update_ui/src/Commands/ConfigUpdateUiCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_update_ui\Commands;
 
+use Drush\Log\Logger;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
 use Drupal\Component\Diff\DiffFormatter;
 use Drupal\config_update\ConfigDiffer;
@@ -19,48 +20,48 @@ class ConfigUpdateUiCommands extends DrushCommands {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityManager;
 
   /**
    * The config differ.
    *
-   * @var \Drupal\config_update\ConfigDiffer
+   * @var ConfigDiffer
    */
   protected ConfigDiffer $configDiff;
 
   /**
    * The config lister.
    *
-   * @var \Drupal\config_update\ConfigListerWithProviders
+   * @var ConfigListerWithProviders
    */
   protected ConfigListerWithProviders $configList;
 
   /**
    * The config reverter.
    *
-   * @var \Drupal\config_update\ConfigReverter
+   * @var ConfigReverter
    */
   protected ConfigReverter $configUpdate;
 
   /**
    * The logger class.
    *
-   * @var \Drush\Log\Logger
+   * @var Logger
    */
   protected $logger;
 
   /**
    * Constructs a ConfigUpdateUiCommands object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityManager
+   * @param EntityTypeManagerInterface $entityManager
    *   The entity type manager.
-   * @param \Drupal\config_update\ConfigDiffer $configDiff
+   * @param ConfigDiffer $configDiff
    *   The config differ.
-   * @param \Drupal\config_update\ConfigListerWithProviders $configList
+   * @param ConfigListerWithProviders $configList
    *   The config lister.
-   * @param \Drupal\config_update\ConfigReverter $configUpdate
+   * @param ConfigReverter $configUpdate
    *   The config reverter.
    */
   public function __construct(EntityTypeManagerInterface $entityManager, ConfigDiffer $configDiff, ConfigListerWithProviders $configList, ConfigReverter $configUpdate) {
@@ -75,7 +76,7 @@ class ConfigUpdateUiCommands extends DrushCommands {
   /**
    * Lists config types.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   A structured data object of rows of configuration types.
    *
    * @command config:list-types
@@ -99,7 +100,7 @@ class ConfigUpdateUiCommands extends DrushCommands {
    *   You can also use system.all for all types, or system.simple for simple
    *   config.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   A structured data object of rows of added configuration items.
    *
    * @usage drush config-added-report action
@@ -133,7 +134,7 @@ class ConfigUpdateUiCommands extends DrushCommands {
    *   config-list-types to list types for config entities; you can also use
    *   system.all for all types, or system.simple for simple config.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   A structured data object of rows of missing configuration items.
    *
    * @usage drush config-missing-report type action
@@ -167,7 +168,7 @@ class ConfigUpdateUiCommands extends DrushCommands {
    *   config-list-types to list types for config entities; you can also use
    *   system.all for all types, or system.simple for simple config.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   A structured data object of rows of inactive configuration items.
    *
    * @usage drush config-inactive-report type action
@@ -202,7 +203,7 @@ class ConfigUpdateUiCommands extends DrushCommands {
    *   config-list-types to list types for config entities; you can also use
    *   system.all for all types, or system.simple for simple config.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   A structured data object of rows of differing configuration items.
    *
    * @usage drush config-different-report type action
diff --git a/config_update_ui/src/Controller/ConfigUpdateController.php b/config_update_ui/src/Controller/ConfigUpdateController.php
index 338fab8..f33f1e0 100644
--- a/config_update_ui/src/Controller/ConfigUpdateController.php
+++ b/config_update_ui/src/Controller/ConfigUpdateController.php
@@ -22,42 +22,42 @@ class ConfigUpdateController extends ControllerBase {
   /**
    * The config differ.
    *
-   * @var \Drupal\config_update\ConfigDiffInterface
+   * @var ConfigDiffInterface
    */
   protected $configDiff;
 
   /**
    * The config lister.
    *
-   * @var \Drupal\config_update\ConfigListByProviderInterface
+   * @var ConfigListByProviderInterface
    */
   protected $configList;
 
   /**
    * The config reverter.
    *
-   * @var \Drupal\config_update\ConfigRevertInterface
+   * @var ConfigRevertInterface
    */
   protected $configRevert;
 
   /**
    * The diff formatter.
    *
-   * @var \Drupal\Core\Diff\DiffFormatter
+   * @var DiffFormatter
    */
   protected $diffFormatter;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -71,17 +71,17 @@ class ConfigUpdateController extends ControllerBase {
   /**
    * Constructs a ConfigUpdateController object.
    *
-   * @param \Drupal\config_update\ConfigDiffInterface $config_diff
+   * @param ConfigDiffInterface $config_diff
    *   The config differ.
-   * @param \Drupal\config_update\ConfigListByProviderInterface $config_list
+   * @param ConfigListByProviderInterface $config_list
    *   The config lister.
-   * @param \Drupal\config_update\ConfigRevertInterface $config_update
+   * @param ConfigRevertInterface $config_update
    *   The config reverter.
-   * @param \Drupal\Core\Diff\DiffFormatter $diff_formatter
+   * @param DiffFormatter $diff_formatter
    *   The diff formatter to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    * @param \drupal\Core\Config\ConfigFactoryInterface $config_factory
    *   The config factory.
diff --git a/config_update_ui/src/Form/ConfigDeleteConfirmForm.php b/config_update_ui/src/Form/ConfigDeleteConfirmForm.php
index c11e9ba..7a74ad4 100644
--- a/config_update_ui/src/Form/ConfigDeleteConfirmForm.php
+++ b/config_update_ui/src/Form/ConfigDeleteConfirmForm.php
@@ -32,23 +32,23 @@ class ConfigDeleteConfirmForm extends ConfirmFormBase {
   /**
    * The config lister.
    *
-   * @var \Drupal\config_update\ConfigListInterface
+   * @var ConfigListInterface
    */
   protected $configList;
 
   /**
    * The config reverter.
    *
-   * @var \Drupal\config_update\ConfigRevertInterface
+   * @var ConfigRevertInterface
    */
   protected $configRevert;
 
   /**
    * Constructs a ConfigDeleteConfirmForm object.
    *
-   * @param \Drupal\config_update\ConfigListInterface $config_list
+   * @param ConfigListInterface $config_list
    *   The config lister.
-   * @param \Drupal\config_update\ConfigRevertInterface $config_update
+   * @param ConfigRevertInterface $config_update
    *   The config reverter.
    */
   public function __construct(ConfigListInterface $config_list, ConfigRevertInterface $config_update) {
diff --git a/config_update_ui/src/Form/ConfigImportConfirmForm.php b/config_update_ui/src/Form/ConfigImportConfirmForm.php
index 2d064f6..e94c84b 100644
--- a/config_update_ui/src/Form/ConfigImportConfirmForm.php
+++ b/config_update_ui/src/Form/ConfigImportConfirmForm.php
@@ -32,23 +32,23 @@ class ConfigImportConfirmForm extends ConfirmFormBase {
   /**
    * The config lister.
    *
-   * @var \Drupal\config_update\ConfigListInterface
+   * @var ConfigListInterface
    */
   protected $configList;
 
   /**
    * The config reverter.
    *
-   * @var \Drupal\config_update\ConfigRevertInterface
+   * @var ConfigRevertInterface
    */
   protected $configRevert;
 
   /**
    * Constructs a ConfigImportConfirmForm object.
    *
-   * @param \Drupal\config_update\ConfigListInterface $config_list
+   * @param ConfigListInterface $config_list
    *   The config lister.
-   * @param \Drupal\config_update\ConfigRevertInterface $config_update
+   * @param ConfigRevertInterface $config_update
    *   The config reverter.
    */
   public function __construct(ConfigListInterface $config_list, ConfigRevertInterface $config_update) {
diff --git a/config_update_ui/src/Form/ConfigRevertConfirmForm.php b/config_update_ui/src/Form/ConfigRevertConfirmForm.php
index 8785d0f..0cc77b5 100644
--- a/config_update_ui/src/Form/ConfigRevertConfirmForm.php
+++ b/config_update_ui/src/Form/ConfigRevertConfirmForm.php
@@ -32,23 +32,23 @@ class ConfigRevertConfirmForm extends ConfirmFormBase {
   /**
    * The config lister.
    *
-   * @var \Drupal\config_update\ConfigListInterface
+   * @var ConfigListInterface
    */
   protected $configList;
 
   /**
    * The config reverter.
    *
-   * @var \Drupal\config_update\ConfigRevertInterface
+   * @var ConfigRevertInterface
    */
   protected $configRevert;
 
   /**
    * Constructs a ConfigRevertConfirmForm object.
    *
-   * @param \Drupal\config_update\ConfigListInterface $config_list
+   * @param ConfigListInterface $config_list
    *   The config lister.
-   * @param \Drupal\config_update\ConfigRevertInterface $config_update
+   * @param ConfigRevertInterface $config_update
    *   The config reverter.
    */
   public function __construct(ConfigListInterface $config_list, ConfigRevertInterface $config_update) {
diff --git a/config_update_ui/src/Logger/ConfigUpdateUiDrush8Logger.php b/config_update_ui/src/Logger/ConfigUpdateUiDrush8Logger.php
index 4412eb7..83a51dc 100644
--- a/config_update_ui/src/Logger/ConfigUpdateUiDrush8Logger.php
+++ b/config_update_ui/src/Logger/ConfigUpdateUiDrush8Logger.php
@@ -18,14 +18,14 @@ class ConfigUpdateUiDrush8Logger implements LoggerInterface {
   /**
    * The message placeholder parser.
    *
-   * @var \Drupal\Core\Logger\LogMessageParserInterface
+   * @var LogMessageParserInterface
    */
   protected $parser;
 
   /**
    * Constructs a ConfigUpdateUiDrush8Logger object.
    *
-   * @param \Drupal\Core\Logger\LogMessageParserInterface $parser
+   * @param LogMessageParserInterface $parser
    *   The parser to use when extracting message variables. The service
    *   logger.log_message_parser is a good choice.
    */
diff --git a/src/ConfigDiffInterface.php b/src/ConfigDiffInterface.php
index ec90f2a..1126053 100644
--- a/src/ConfigDiffInterface.php
+++ b/src/ConfigDiffInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_update;
 
+use Drupal\Component\Diff\Diff;
 /**
  * Defines an interface for config differences.
  */
@@ -37,7 +38,7 @@ interface ConfigDiffInterface {
    * @param array|null $target
    *   Target config.
    *
-   * @return \Drupal\Component\Diff\Diff
+   * @return Diff
    *   Diff object for displaying line-by-line differences between source and
    *   target config.
    */
diff --git a/src/ConfigDiffer.php b/src/ConfigDiffer.php
index ce161ba..2438e9d 100644
--- a/src/ConfigDiffer.php
+++ b/src/ConfigDiffer.php
@@ -44,7 +44,7 @@ class ConfigDiffer implements ConfigDiffInterface {
   /**
    * Constructs a ConfigDiffer.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   String translation service.
    * @param string[] $ignore
    *   Config components to ignore at the top level.
diff --git a/src/ConfigListInterface.php b/src/ConfigListInterface.php
index a65b34c..aacd5ad 100644
--- a/src/ConfigListInterface.php
+++ b/src/ConfigListInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_update;
 
+use Drupal\Core\Entity\EntityTypeInterface;
 /**
  * Defines an interface for config listings.
  */
@@ -10,7 +11,7 @@ interface ConfigListInterface {
   /**
    * Lists the types of configuration available on the system.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface[]
+   * @return EntityTypeInterface[]
    *   Array of entity type definitions, keyed by machine name of the type.
    */
   public function listTypes();
@@ -21,7 +22,7 @@ interface ConfigListInterface {
    * @param string $name
    *   Config entity type machine name.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface
+   * @return EntityTypeInterface
    *   Entity type object with machine name $name.
    */
   public function getType($name);
@@ -32,7 +33,7 @@ interface ConfigListInterface {
    * @param string $prefix
    *   Config prefix.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface
+   * @return EntityTypeInterface
    *   Entity type object corresponding to $prefix.
    */
   public function getTypeByPrefix($prefix);
diff --git a/src/ConfigLister.php b/src/ConfigLister.php
index d11e28a..392e974 100644
--- a/src/ConfigLister.php
+++ b/src/ConfigLister.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_update;
 
+use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Config\ExtensionInstallStorage;
 use Drupal\Core\Config\StorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,7 +28,7 @@ class ConfigLister implements ConfigListInterface {
    *
    * This is not set up until ConfigLister::listTypes() has been called.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface[]
+   * @var EntityTypeInterface[]
    */
   protected $definitions = [];
 
@@ -41,34 +42,34 @@ class ConfigLister implements ConfigListInterface {
   /**
    * The active config storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $activeConfigStorage;
 
   /**
    * The extension config storage.
    *
-   * @var \Drupal\Core\Config\ExtensionInstallStorage
+   * @var ExtensionInstallStorage
    */
   protected $extensionConfigStorage;
 
   /**
    * The extension config storage for optional config.
    *
-   * @var \Drupal\Core\Config\ExtensionInstallStorage
+   * @var ExtensionInstallStorage
    */
   protected $extensionOptionalConfigStorage;
 
   /**
    * Constructs a ConfigLister.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\StorageInterface $active_config_storage
+   * @param StorageInterface $active_config_storage
    *   The active config storage.
-   * @param \Drupal\Core\Config\ExtensionInstallStorage $extension_config_storage
+   * @param ExtensionInstallStorage $extension_config_storage
    *   The extension config storage.
-   * @param \Drupal\Core\Config\ExtensionInstallStorage $extension_optional_config_storage
+   * @param ExtensionInstallStorage $extension_optional_config_storage
    *   The extension config storage for optional config items.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, StorageInterface $active_config_storage, ExtensionInstallStorage $extension_config_storage, ExtensionInstallStorage $extension_optional_config_storage) {
diff --git a/src/ConfigListerWithProviders.php b/src/ConfigListerWithProviders.php
index cc0f635..5797a96 100644
--- a/src/ConfigListerWithProviders.php
+++ b/src/ConfigListerWithProviders.php
@@ -40,31 +40,31 @@ class ConfigListerWithProviders extends ConfigLister implements ConfigListByProv
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * Constructs a ConfigListerWithProviders.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\StorageInterface $active_config_storage
+   * @param StorageInterface $active_config_storage
    *   The active config storage.
-   * @param \Drupal\Core\Config\ExtensionInstallStorage $extension_config_storage
+   * @param ExtensionInstallStorage $extension_config_storage
    *   The extension config storage.
-   * @param \Drupal\Core\Config\ExtensionInstallStorage $extension_optional_config_storage
+   * @param ExtensionInstallStorage $extension_optional_config_storage
    *   The extension config storage for optional config items.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, StorageInterface $active_config_storage, ExtensionInstallStorage $extension_config_storage, ExtensionInstallStorage $extension_optional_config_storage, ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler) {
diff --git a/src/ConfigReverter.php b/src/ConfigReverter.php
index 6027b09..9c9bd74 100644
--- a/src/ConfigReverter.php
+++ b/src/ConfigReverter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_update;
 
+use Drupal\Core\Config\ExtensionInstallStorage;
 use Drupal\Core\Config\StorageInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,59 +20,59 @@ class ConfigReverter implements ConfigRevertInterface, ConfigDeleteInterface {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * The active config storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $activeConfigStorage;
 
   /**
    * The extension config storage for config/install config items.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $extensionConfigStorage;
 
   /**
    * The extension config storage for config/optional config items.
    *
-   * @var \Drupal\Core\Config\ExtensionInstallStorage
+   * @var ExtensionInstallStorage
    */
   protected $extensionOptionalConfigStorage;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $dispatcher;
 
   /**
    * Constructs a ConfigReverter.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\StorageInterface $active_config_storage
+   * @param StorageInterface $active_config_storage
    *   The active config storage.
-   * @param \Drupal\Core\Config\StorageInterface $extension_config_storage
+   * @param StorageInterface $extension_config_storage
    *   The extension config storage.
-   * @param \Drupal\Core\Config\StorageInterface $extension_optional_config_storage
+   * @param StorageInterface $extension_optional_config_storage
    *   The extension config storage for optional config items.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The event dispatcher.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, StorageInterface $active_config_storage, StorageInterface $extension_config_storage, StorageInterface $extension_optional_config_storage, ConfigFactoryInterface $config_factory, EventDispatcherInterface $dispatcher) {
diff --git a/tests/src/Unit/ConfigDifferTest.php b/tests/src/Unit/ConfigDifferTest.php
index bf64f13..fb854a5 100644
--- a/tests/src/Unit/ConfigDifferTest.php
+++ b/tests/src/Unit/ConfigDifferTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\config_update\Unit;
 
+use Drupal\Component\Diff\Engine\DiffOp;
 use Drupal\config_update\ConfigDiffer;
 
 /**
@@ -16,7 +17,7 @@ class ConfigDifferTest extends ConfigUpdateUnitTestBase {
   /**
    * The config differ to test.
    *
-   * @var \Drupal\config_update\ConfigDiffer
+   * @var ConfigDiffer
    */
   protected $configDiffer;
 
@@ -352,7 +353,7 @@ class ConfigDifferTest extends ConfigUpdateUnitTestBase {
 
     $this->assertEquals(count($expectedEdits), count($edits));
 
-    /** @var \Drupal\Component\Diff\Engine\DiffOp $diffOp */
+    /** @var DiffOp $diffOp */
     foreach ($edits as $index => $diffOp) {
       $this->assertEquals($expectedEdits[$index][$diffOp->type]['orig'], $diffOp->orig);
       $this->assertEquals($expectedEdits[$index][$diffOp->type]['closing'], $diffOp->closing);
diff --git a/tests/src/Unit/ConfigListerTest.php b/tests/src/Unit/ConfigListerTest.php
index c9ac27e..dd97928 100644
--- a/tests/src/Unit/ConfigListerTest.php
+++ b/tests/src/Unit/ConfigListerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\config_update\Unit;
 
+use Drupal\config_update\ConfigListerWithProviders;
 /**
  * Tests the \Drupal\config_update\ConfigListerWithProviders class.
  *
@@ -16,7 +17,7 @@ class ConfigListerTest extends ConfigUpdateUnitTestBase {
   /**
    * The config lister to test.
    *
-   * @var \Drupal\config_update\ConfigListerWithProviders
+   * @var ConfigListerWithProviders
    */
   protected $configLister;
 
diff --git a/tests/src/Unit/ConfigReverterTest.php b/tests/src/Unit/ConfigReverterTest.php
index 0da702f..7e44696 100644
--- a/tests/src/Unit/ConfigReverterTest.php
+++ b/tests/src/Unit/ConfigReverterTest.php
@@ -18,7 +18,7 @@ class ConfigReverterTest extends ConfigUpdateUnitTestBase {
   /**
    * The config reverter to test.
    *
-   * @var \Drupal\config_update\ConfigReverter
+   * @var ConfigReverter
    */
   protected $configReverter;
 
diff --git a/tests/src/Unit/ConfigUpdateUnitTestBase.php b/tests/src/Unit/ConfigUpdateUnitTestBase.php
index 6071cc7..b314d45 100644
--- a/tests/src/Unit/ConfigUpdateUnitTestBase.php
+++ b/tests/src/Unit/ConfigUpdateUnitTestBase.php
@@ -38,7 +38,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
     $definitions = [];
     $map = [];
     foreach ($this->entityDefinitionInformation as $info) {
-      $def = $this->getMockBuilder('Drupal\Core\Config\Entity\ConfigEntityTypeInterface')->getMock();
+      $def = $this->createMock('Drupal\Core\Config\Entity\ConfigEntityTypeInterface');
       $def
         ->expects($this->any())
         ->method('getConfigPrefix')
@@ -61,14 +61,14 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
 
     // Add in a content entity definition, which shouldn't be recognized by the
     // config lister class.
-    $def = $this->getMockBuilder('Drupal\Core\Entity\ContentEntityTypeInterface')->getMock();
+    $def = $this->createMock('Drupal\Core\Entity\ContentEntityTypeInterface');
     $def
       ->expects($this->any())
       ->method('entityClassImplements')
       ->willReturn(FALSE);
     $definitions['content_entity'] = $def;
 
-    $manager = $this->getMockBuilder('Drupal\Core\Entity\EntityTypeManagerInterface')->getMock();
+    $manager = $this->createMock('Drupal\Core\Entity\EntityTypeManagerInterface');
     $manager
       ->method('getDefinitions')
       ->willReturn($definitions);
@@ -190,7 +190,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
    */
   protected function getConfigStorageMock($type) {
     if ($type == 'active') {
-      $storage = $this->getMockBuilder('Drupal\Core\Config\StorageInterface')->getMock();
+      $storage = $this->createMock('Drupal\Core\Config\StorageInterface');
 
       // Various tests assume various values of configuration that need to be
       // read from active storage.
@@ -213,7 +213,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
         ->will($this->returnValueMap($this->configStorageActiveInfo));
     }
     elseif ($type == 'extension') {
-      $storage = $this->getMockBuilder('Drupal\Core\Config\ExtensionInstallStorage')->disableOriginalConstructor()->getMock();
+      $storage = $this->createMock('Drupal\Core\Config\ExtensionInstallStorage');
 
       $value = [];
       foreach ($this->configStorageExtensionInfo[2][1] as $item) {
@@ -240,7 +240,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
 
     }
     else {
-      $storage = $this->getMockBuilder('Drupal\Core\Config\ExtensionInstallStorage')->disableOriginalConstructor()->getMock();
+      $storage = $this->createMock('Drupal\Core\Config\ExtensionInstallStorage');
 
       $value = [];
       foreach ($this->configStorageOptionalInfo[2][1] as $item) {
@@ -271,7 +271,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
    * Creates a mock module handler for the test.
    */
   protected function getModuleHandlerMock() {
-    $manager = $this->getMockBuilder('Drupal\Core\Extension\ModuleHandlerInterface')->getMock();
+    $manager = $this->createMock('Drupal\Core\Extension\ModuleHandlerInterface');
     $manager->method('getModuleList')
       ->willReturn(['foo_module' => '', 'standard' => '']);
 
@@ -282,7 +282,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
    * Creates a mock theme handler for the test.
    */
   protected function getThemeHandlerMock() {
-    $manager = $this->getMockBuilder('Drupal\Core\Extension\ThemeHandlerInterface')->getMock();
+    $manager = $this->createMock('Drupal\Core\Extension\ThemeHandlerInterface');
     $manager->method('listInfo')
       ->willReturn(['foo_theme' => '']);
     return $manager;
@@ -292,7 +292,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
    * Creates a mock string translation class for the test.
    */
   protected function getTranslationMock() {
-    $translation = $this->getMockBuilder('Drupal\Core\StringTranslation\TranslationInterface')->getMock();
+    $translation = $this->createMock('Drupal\Core\StringTranslation\TranslationInterface');
     $translation
       ->method('translateString')
       ->will($this->returnCallback([$this, 'mockTranslate']));
@@ -302,7 +302,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
   /**
    * Mocks the translateString() method for the string translation mock object.
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $input
+   * @param TranslatableMarkup $input
    *   Object to translate.
    *
    * @return string
@@ -330,7 +330,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
    * Stores dispatched events in ConfigUpdateUnitTestBase::dispatchedEvents.
    */
   protected function getEventDispatcherMock() {
-    $event = $this->getMockBuilder('Symfony\Component\EventDispatcher\EventDispatcherInterface')->getMock();
+    $event = $this->createMock('Symfony\Component\EventDispatcher\EventDispatcherInterface');
     $event
       ->method('dispatch')
       ->will($this->returnCallback([$this, 'mockDispatch']));
@@ -375,7 +375,7 @@ abstract class ConfigUpdateUnitTestBase extends UnitTestCase {
    * Creates a mock config factory class for the test.
    */
   protected function getConfigFactoryMock() {
-    $config = $this->getMockBuilder('Drupal\Core\Config\ConfigFactoryInterface')->getMock();
+    $config = $this->createMock('Drupal\Core\Config\ConfigFactoryInterface');
     $config
       ->method('getEditable')
       ->will($this->returnCallback([$this, 'mockGetEditable']));
