modules/contrib/jsonlog/jsonlog.inc
modules/contrib/jsonlog/jsonlog.install
modules/contrib/jsonlog/jsonlog.module
modules/contrib/jsonlog/src/Logger/JsonLog.php
modules/contrib/jsonlog/src/Logger/JsonLogData.php
modules/contrib/jsonlog/tests/src/Functional/JsonLogConfigFormTest.php
modules/contrib/jsonlog/tests/src/Unit/JsonLogDataTest.php
modules/contrib/jsonlog/tests/src/Unit/JsonLogTest.php

7 files with changes
====================

1) modules/contrib/jsonlog/tests/src/Unit/JsonLogTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\jsonlog\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
+use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LogMessageParserInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   private $requestStackMock;

   /**
-   * @var \Drupal\jsonlog\Logger\JsonLog
+   * @var JsonLog
    */
   private $jsonLogger;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $config_stub['jsonlog.settings'] = [
       'jsonlog_severity_threshold' => self::DEFAULT_THRESHOLD,
@@ @@
   }

   /**
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    */
   private function getEmptyMessageParserMock() {
     $messageParserMock = $this->createMock('Drupal\Core\Logger\LogMessageParserInterface');
@@ @@
   }

   /**
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    */
   private function setupContainerCurrentRequest(Request $request) {
     $this->requestStackMock->expects($this->any())
@@ @@
       ->with('request_stack')
       ->willReturn($this->requestStackMock);

-    /** @var \Symfony\Component\DependencyInjection\ContainerInterface $containerMock */
+    /** @var ContainerInterface $containerMock */
     \Drupal::setContainer($containerMock);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/jsonlog/tests/src/Unit/JsonLogDataTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\jsonlog\Unit;

+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\jsonlog\Logger\JsonLogData;
 use Drupal\Tests\UnitTestCase;
@@ @@
    */
   private $data;

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $config_stub['jsonlog.settings'] = [
       'jsonlog_severity_threshold' => self::DEFAULT_THRESHOLD,
@@ @@

     $this->data = new JsonLogData('test_site_id', 'test_canonical');

-    /** @var \Drupal\Core\Session\AccountProxyInterface $accountMock */
+    /** @var AccountProxyInterface $accountMock */
     $this->data->setAccount($accountMock);
     $this->assertEquals('dummy', $this->data->getUsername(), 'Username set.');
     $this->assertEquals(1234, $this->data->getUid(), 'UID set.');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/jsonlog/tests/src/Functional/JsonLogConfigFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\jsonlog\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
   }
@@ @@
     $this->drupalGet(Url::fromRoute('system.logging_settings'));
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->pageTextContains(t('JSON LOG'));
+    $this->drupalGet('admin/config/development/logging');

-    $this->drupalPostForm('admin/config/development/logging',
-      [self::JSONLOG_SITEID_FIELD_NAME => self::JSONLOG_SITEID_FIELD_VALUE], t('Save configuration'));
+    $this->submitForm([self::JSONLOG_SITEID_FIELD_NAME => self::JSONLOG_SITEID_FIELD_VALUE], t('Save configuration'));

     $this->assertSession()
       ->pageTextContains(t('The configuration options have been saved.'));
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/jsonlog/src/Logger/JsonLogData.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\jsonlog\Logger;

+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Logger\RfcLogLevel;
@@ @@
   }

   /**
-   * @param \Drupal\Core\Session\AccountProxyInterface|NULL $account
+   * @param AccountProxyInterface|NULL $account
    *
    * @deprecated in 8.x-1.4 and removed from 2.0. Users of this class should
    *   use JsonLogData::setUid() instead.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/jsonlog/src/Logger/JsonLog.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\jsonlog\Logger;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LogMessageParserInterface;
 use Drupal\Core\Logger\RfcLoggerTrait;
@@ @@
   /**
    * A configuration object containing jsonlog settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   private $config;

@@ @@
   /**
    * The message's placeholders parser.
    *
-   * @var \Drupal\Core\Logger\LogMessageParserInterface
+   * @var LogMessageParserInterface
    */
   private $parser;

   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;

@@ @@
    * @param string $message
    * @param array $context
    *
-   * @return \Drupal\jsonlog\Logger\JsonLogData | bool FALSE
+   * @return JsonLogData|bool FALSE
    */
   public function prepareLog($level, $message, array $context = []) {
     // Severity is upside down; less is more. Do not log below configured
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/jsonlog/jsonlog.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\jsonlog\Logger\JsonLog;
 /**
  * @file
  * Contains jsonlog.module.
@@ @@

   // Write a test-entry via our logger service with data from the example table
   if($values['test_entry'] === 1) {
-    /** @var \Drupal\jsonlog\Logger\JsonLog $jsonlogger */
+    /** @var JsonLog $jsonlogger */
     $jsonlogger = \Drupal::service('logger.jsonlog');
     $context = [
       'uid' => \Drupal::currentUser()->id(),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


7) modules/contrib/jsonlog/jsonlog.inc:463

    ---------- begin diff ----------
@@ @@
 /**
  * Helper function to gather data as an example in admin screen
  *
- * @param \Drupal\jsonlog\Logger\JsonLogData $entry
+ * @param JsonLogData $entry
  * @return array with table #header and #rows
  */
 function jsonlog_example_entry($entry) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

