diff --git a/src/Form/HttpPurgerFormBase.php b/src/Form/HttpPurgerFormBase.php
index 9aa5571..5081f37 100644
--- a/src/Form/HttpPurgerFormBase.php
+++ b/src/Form/HttpPurgerFormBase.php
@@ -17,7 +17,7 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
   /**
    * The service that generates invalidation objects on-demand.
    *
-   * @var \Drupal\purge\Plugin\Purge\Invalidation\InvalidationsServiceInterface
+   * @var InvalidationsServiceInterface
    */
   protected $purgeInvalidationFactory;
 
@@ -87,9 +87,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
   /**
    * Constructs a \Drupal\purge_purger_http\Form\ConfigurationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\purge\Plugin\Purge\Invalidation\InvalidationsServiceInterface $purge_invalidation_factory
+   * @param InvalidationsServiceInterface $purge_invalidation_factory
    *   The invalidation objects factory service.
    */
   final public function __construct(ConfigFactoryInterface $config_factory, InvalidationsServiceInterface $purge_invalidation_factory) {
@@ -142,9 +142,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\purge_purger_http\Entity\HttpPurgerSettings $settings
+   * @param HttpPurgerSettings $settings
    *   Configuration entity for the purger being configured.
    */
   public function buildFormMetadata(array &$form, FormStateInterface $form_state, HttpPurgerSettings $settings) {
@@ -174,9 +174,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\purge_purger_http\Entity\HttpPurgerSettings $settings
+   * @param HttpPurgerSettings $settings
    *   Configuration entity for the purger being configured.
    */
   public function buildFormRequest(array &$form, FormStateInterface $form_state, HttpPurgerSettings $settings) {
@@ -231,9 +231,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\purge_purger_http\Entity\HttpPurgerSettings $settings
+   * @param HttpPurgerSettings $settings
    *   Configuration entity for the purger being configured.
    */
   public function buildFormHeaders(array &$form, FormStateInterface $form_state, HttpPurgerSettings $settings) {
@@ -288,9 +288,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\purge_purger_http\Entity\HttpPurgerSettings $settings
+   * @param HttpPurgerSettings $settings
    *   Configuration entity for the purger being configured.
    */
   public function buildFormBody(array &$form, FormStateInterface $form_state, HttpPurgerSettings $settings) {
@@ -330,7 +330,7 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function buildFormHeadersRebuild(array &$form, FormStateInterface $form_state) {
@@ -342,7 +342,7 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function buildFormHeadersAdd(array &$form, FormStateInterface $form_state) {
@@ -357,9 +357,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\purge_purger_http\Entity\HttpPurgerSettings $settings
+   * @param HttpPurgerSettings $settings
    *   Configuration entity for the purger being configured.
    */
   public function buildFormPerformance(array &$form, FormStateInterface $form_state, HttpPurgerSettings $settings) {
@@ -444,9 +444,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\purge_purger_http\Entity\HttpPurgerSettings $settings
+   * @param HttpPurgerSettings $settings
    *   Configuration entity for the purger being configured.
    */
   public function buildFormTokensHelp(array &$form, FormStateInterface $form_state, HttpPurgerSettings $settings) {
@@ -494,9 +494,9 @@ abstract class HttpPurgerFormBase extends PurgerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\purge_purger_http\Entity\HttpPurgerSettings $settings
+   * @param HttpPurgerSettings $settings
    *   Configuration entity for the purger being configured.
    */
   public function buildFormSuccessResolution(array &$form, FormStateInterface $form_state, HttpPurgerSettings $settings) {
diff --git a/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php b/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php
index 7eae8d5..7b8206c 100644
--- a/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php
+++ b/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php
@@ -24,7 +24,7 @@ class ConfigurationCheck extends DiagnosticCheckBase implements DiagnosticCheckI
   /**
    * The purgers service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface
+   * @var PurgersServiceInterface
    */
   protected $purgePurgers;
 
@@ -37,7 +37,7 @@ class ConfigurationCheck extends DiagnosticCheckBase implements DiagnosticCheckI
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface $purge_purgers
+   * @param PurgersServiceInterface $purge_purgers
    *   The purge executive service, which wipes content from external caches.
    */
   final public function __construct(array $configuration, $plugin_id, $plugin_definition, PurgersServiceInterface $purge_purgers) {
diff --git a/src/Plugin/Purge/Purger/HttpPurgerBase.php b/src/Plugin/Purge/Purger/HttpPurgerBase.php
index d9186bf..aca2d05 100644
--- a/src/Plugin/Purge/Purger/HttpPurgerBase.php
+++ b/src/Plugin/Purge/Purger/HttpPurgerBase.php
@@ -17,21 +17,21 @@ abstract class HttpPurgerBase extends PurgerBase implements PurgerInterface {
   /**
    * The Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
   /**
    * The settings entity holding all configuration.
    *
-   * @var \Drupal\purge_purger_http\Entity\HttpPurgerSettings
+   * @var HttpPurgerSettings
    */
   protected $settings;
 
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
@@ -44,9 +44,9 @@ abstract class HttpPurgerBase extends PurgerBase implements PurgerInterface {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   An HTTP client that can perform remote requests.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
    */
   final public function __construct(array $configuration, $plugin_id, $plugin_definition, ClientInterface $http_client, Token $token) {
