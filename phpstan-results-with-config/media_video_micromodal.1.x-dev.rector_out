modules/contrib/media_video_micromodal/media_video_micromodal.module
modules/contrib/media_video_micromodal/src/Plugin/Field/FieldFormatter/MicromodalFieldFormatter.php

2 files with changes
====================

1) modules/contrib/media_video_micromodal/src/Plugin/Field/FieldFormatter/MicromodalFieldFormatter.php:38

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private EntityTypeManagerInterface $entityTypeManager;

@@ @@
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\State
+   * @var State
    */
   private State $state;

@@ @@
   /**
    * Token utility.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected Token $token;

@@ @@
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected ModuleHandlerInterface $moduleHandler;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
-   * @param \Drupal\Core\State\State $state
+   * @param State $state
    *   State.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, Token $token, State $state) {
@@ @@
               }

               // Render out the thumbnail - this is the linked item.
-              $linked_item = render($render_thumbnail);
+              $linked_item = \Drupal::service('renderer')->render($render_thumbnail);

             }

@@ @@
               $linked_item_render = [
                 '#markup' => '<span class="' . implode(' ', $additional_classes) . '">' . $label . '</span>',
               ];
-              $linked_item = render($linked_item_render);
+              $linked_item = \Drupal::service('renderer')->render($linked_item_render);
             }
             else {
               $linked_item = $label;
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_video_micromodal/media_video_micromodal.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\media\Entity\Media;
 /**
  * @file
  * Contains media_video_micromodal.module.
@@ @@
   $suggestions = [];
   $hook_original = $variables['theme_hook_original'];

-  /** @var \Drupal\media\Entity\Media $media */
+  /** @var Media $media */
   if ($media = $variables['media'] ?? NULL) {
     $bundle = $media->bundle();
     $view_mode = $variables['view_mode'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

