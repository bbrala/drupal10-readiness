modules/contrib/file_details/file_details.module
modules/contrib/file_details/src/Plugin/Field/FieldFormatter/FileDetails.php

1 file with changes
===================

1) modules/contrib/file_details/src/Plugin/Field/FieldFormatter/FileDetails.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\file_details\Plugin\Field\FieldFormatter;

+use Drupal\file\Entity\File;
+use Drupal\file\FileStorage;
+use Drupal\media\Entity\Media;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Url;
 use Drupal\Core\Link;
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

   /**
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
         return [];
       }

-      /** @var \Drupal\file\Entity\File $referenced_file */
+      /** @var File $referenced_file */
       $referenced_file = $items->referencedEntities()[0];

       // Retrieve file id from referenced entity.
       $fid = $referenced_file->id();

-      /** @var \Drupal\file\FileStorage $file_storage */
+      /** @var FileStorage $file_storage */
       $file_storage = $this->entityTypeManager->getStorage('file');

-      /** @var \Drupal\file\Entity\File $file */
+      /** @var File $file */
       $file = $file_storage->load($fid);

       // Returns information about a file path.
@@ @@
       $file_name = $this->cleanString($file_path_info['filename']);

       // Return file url.
-      /** @var \Drupal\Core\Url $file_url */
-      $file_url = Url::fromUri(file_create_url($file->getFileUri()));
+      /** @var Url $file_url */
+      $file_url = \Drupal::service('file_url_generator')->generate($file->getFileUri());

       // Return file extension.
       $file_extension = isset($file_path_info['extension']) ? $file_path_info['extension'] : '';
@@ @@

       // Evaluate if use media name option is selected.
       if (isset($general_settings['use_media_name']) && !empty($general_settings['use_media_name'])) {
-        /** @var \Drupal\media\Entity\Media $media */
+        /** @var Media $media */
         $media = $items->getEntity();

         if ($media != NULL) {
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

