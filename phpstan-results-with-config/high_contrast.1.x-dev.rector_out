modules/contrib/high_contrast/high_contrast.install
modules/contrib/high_contrast/high_contrast.module
modules/contrib/high_contrast/src/Cache/Context/HighContrastCacheContext.php
modules/contrib/high_contrast/src/EventSubscriber/ConfigEventSubscriber.php
modules/contrib/high_contrast/src/Form/HighContrastConfigurationForm.php
modules/contrib/high_contrast/src/Form/HighContrastSwitchForm.php
modules/contrib/high_contrast/src/HighContrastBlockView.php
modules/contrib/high_contrast/src/HighContrastConfigOverride.php
modules/contrib/high_contrast/src/HighContrastController.php
modules/contrib/high_contrast/src/HighContrastTrait.php
modules/contrib/high_contrast/src/Plugin/Block/HighContrastBlock.php
modules/contrib/high_contrast/tests/src/FunctionalJavascript/HighContrastStyleSheetTest.php

5 files with changes
====================

1) modules/contrib/high_contrast/tests/src/FunctionalJavascript/HighContrastStyleSheetTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Store the values for later comparison.
@@ @@
     // Assert all defined colors are present in the file.
     $css_file = file_get_contents($file_path);
     foreach ($this->values as $definition => $color) {
-      $this->assertContains($color, $css_file, "Color $color has been applied for $definition.");
+      $this->assertStringContainsString($color, $css_file, "Color $color has been applied for $definition.");
     }

     // Generate some new values.
@@ @@
     // Assert all previous colors are gone.
     $css_file = file_get_contents($file_path);
     foreach ($this->values as $definition => $color) {
-      $this->assertNotContains($color, $css_file, "Color $color has not been applied for $definition.");
+      $this->assertStringNotContainsString($color, $css_file, "Color $color has not been applied for $definition.");
     }
     // Assert all new colors are present.
     foreach ($new_values as $definition => $color) {
-      $this->assertContains($color, $css_file, "Color $color has been applied for $definition.");
+      $this->assertStringContainsString($color, $css_file, "Color $color has been applied for $definition.");
     }
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/high_contrast/src/HighContrastController.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * Enable high contrast.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   RedirectResponse object.
    */
   public function enable() {
@@ @@
   /**
    * Disable high contrast.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   RedirectResponse object.
    */
   public function disable() {
@@ @@
   /**
    * Perform the redirect to the set path.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   RedirectResponse object.
    */
   protected function goBack() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/high_contrast/src/HighContrastConfigOverride.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * The file system interface.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   private $fileSystem;

@@ @@
   /**
    * Construct a new HighContrastConfigOverride object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
@@ @@
       // If the default logo is desired, scan the theme dir for a logo-hg file.
       // Not using dependency injection to prevent circular references.
       $theme = \Drupal::theme()->getActiveTheme()->getName();
-      $theme_path = drupal_get_path('theme', $theme);
+      $theme_path = \Drupal::service('extension.list.theme')->getPath($theme);

       $candidates = [];
       try {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/high_contrast/src/Form/HighContrastConfigurationForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs a HighContrastConfigurationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler instance to use.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, FileSystemInterface $file_system) {
@@ @@
     // it in place of the default theme-provided file.
     if (!empty($form_state->getValue('logo_upload'))) {
       $source = $form_state->getValue('logo_upload')->getFileUri();
-      $destination = file_build_uri($this->fileSystem->basename($source));
+      $destination = \Drupal::service('stream_wrapper_manager')->normalizeUri(\Drupal::config('system.file')->get('default_scheme') . ('://' . $this->fileSystem->basename($source)));
       $filename = $this->fileSystem->copy($source, $destination);
       $config->set('default_logo', 0);
       $config->set('logo_path', $filename);
    ----------- end diff -----------

Applied rules:
 * FileBuildUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/high_contrast/src/EventSubscriber/ConfigEventSubscriber.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * Constructs a ConfigEventSubscriber  object.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(FileSystemInterface $file_system, ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Regenerate the stylesheet.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The Event to process.
    */
   public function updateStylesheet(ConfigCrudEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 5 files have been changed by Rector                                       

