diff --git a/compose.module b/compose.module
index 49aca0d..b18ec6f 100644
--- a/compose.module
+++ b/compose.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityTypeInterface;
 /**
  * @file
  * Contains Drupal\compose\compose.module.
@@ -37,7 +38,7 @@ function compose_theme() {
  * Implements hook_entity_type_build().
  */
 function compose_entity_type_build(array &$entity_types) {
-  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
+  /** @var EntityTypeInterface[] $entity_types */
   foreach ($entity_types as &$entity_type) {
     if (!$entity_type->hasHandlerClass('compose_widget')) {
       $entity_type->setHandlerClass('compose_widget', '\Drupal\compose\EntityComposeWidget');
@@ -128,7 +129,7 @@ function compose_preprocess_compose_entity_widget(&$variables) {
  * Implements hook_theme_registry_alter().
  */
 function compose_theme_registry_alter(&$registry) {
-  $registry['node_edit_form']['path'] = drupal_get_path('module', 'compose') . '/templates';
+  $registry['node_edit_form']['path'] = \Drupal::service('extension.list.module')->getPath('compose') . '/templates';
   $registry['node_edit_form']['template'] = 'node-edit-compose-form';
 }
 
diff --git a/src/Access/EntityPreviewAccessCheck.php b/src/Access/EntityPreviewAccessCheck.php
index 5bb1c42..9461b0d 100644
--- a/src/Access/EntityPreviewAccessCheck.php
+++ b/src/Access/EntityPreviewAccessCheck.php
@@ -15,14 +15,14 @@ class EntityPreviewAccessCheck implements AccessInterface {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\compose\EntityPreviewLoader
+   * @var EntityPreviewLoader
    */
   private $entityPreviewLoader;
 
   /**
    * Constructs an EntityCreateAccessCheck object.
    *
-   * @param \Drupal\compose\EntityPreviewLoader $entity_preview_loader
+   * @param EntityPreviewLoader $entity_preview_loader
    *   The entity preview loader service.
    */
   public function __construct(EntityPreviewLoader $entity_preview_loader) {
@@ -32,7 +32,7 @@ class EntityPreviewAccessCheck implements AccessInterface {
   /**
    * Checks access to the entity preview page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
    * @param string $form_build_id
    *   The build ID of the form.
diff --git a/src/ComposePreviewResponse.php b/src/ComposePreviewResponse.php
index 0143039..709b945 100644
--- a/src/ComposePreviewResponse.php
+++ b/src/ComposePreviewResponse.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\compose;
 
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Render\BubbleableMetadata;
 use Drupal\Core\Render\AttachmentsInterface;
 use Drupal\Core\Render\AttachmentsTrait;
@@ -25,7 +26,7 @@ class ComposePreviewResponse extends JsonResponse implements AttachmentsInterfac
   /**
    * Sets the HTML content for the response.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $markup
+   * @param string|MarkupInterface $markup
    *   The markup as a string or renderable array.
    */
   public function setMarkup($markup) {
@@ -35,7 +36,7 @@ class ComposePreviewResponse extends JsonResponse implements AttachmentsInterfac
   /**
    * Returns the markup.
    *
-   * @return string|\Drupal\Component\Render\MarkupInterface
+   * @return string|MarkupInterface
    *   The markup.
    */
   public function getMarkup() {
diff --git a/src/ComposePreviewResponseAttachmentsProcessor.php b/src/ComposePreviewResponseAttachmentsProcessor.php
index 1a49b8c..ae23636 100644
--- a/src/ComposePreviewResponseAttachmentsProcessor.php
+++ b/src/ComposePreviewResponseAttachmentsProcessor.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\compose;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Asset\AssetCollectionRendererInterface;
 use Drupal\Core\Asset\AssetResolverInterface;
 use Drupal\Core\Asset\AttachedAssets;
@@ -22,66 +24,66 @@ class ComposePreviewResponseAttachmentsProcessor {
   /**
    * The asset resolver service.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;
 
   /**
    * A config object for the system performance configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The CSS asset collection renderer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionRendererInterface
+   * @var AssetCollectionRendererInterface
    */
   protected $cssCollectionRenderer;
 
   /**
    * The JS asset collection renderer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionRendererInterface
+   * @var AssetCollectionRendererInterface
    */
   protected $jsCollectionRenderer;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a AjaxResponseAttachmentsProcessor object.
    *
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   An asset resolver.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\Asset\AssetCollectionRendererInterface $css_collection_renderer
+   * @param AssetCollectionRendererInterface $css_collection_renderer
    *   The CSS asset collection renderer.
-   * @param \Drupal\Core\Asset\AssetCollectionRendererInterface $js_collection_renderer
+   * @param AssetCollectionRendererInterface $js_collection_renderer
    *   The JS asset collection renderer.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(AssetResolverInterface $asset_resolver, ConfigFactoryInterface $config_factory, AssetCollectionRendererInterface $css_collection_renderer, AssetCollectionRendererInterface $js_collection_renderer, RequestStack $request_stack, ModuleHandlerInterface $module_handler) {
@@ -114,9 +116,9 @@ class ComposePreviewResponseAttachmentsProcessor {
   /**
    * Prepares the AJAX commands to attach assets.
    *
-   * @param \Symfony\Component\HttpFoundation\JsonResponse $response
+   * @param JsonResponse $response
    *   The AJAX response to update.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object that the AJAX is responding to.
    *
    * @return array
diff --git a/src/ComposeWidgetInterface.php b/src/ComposeWidgetInterface.php
index 4f74669..b84586b 100644
--- a/src/ComposeWidgetInterface.php
+++ b/src/ComposeWidgetInterface.php
@@ -35,7 +35,7 @@ interface ComposeWidgetInterface extends EntityHandlerInterface {
   /**
    * Get render array for form/table for adding an existing entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The array of parent elements.
    *
    * @return array
@@ -62,10 +62,10 @@ interface ComposeWidgetInterface extends EntityHandlerInterface {
   /**
    * Sort the Add Existing table.
    *
-   * @param \Drupal\Core\Entity\Query\QueryInterface $query
+   * @param QueryInterface $query
    *   Drupal EntityQuery
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   The query object that can query the given entity type.
    */
   public function getAddExistingSort(QueryInterface $query);
diff --git a/src/EntityComposeWidget.php b/src/EntityComposeWidget.php
index 2f52e1e..b3bbe37 100644
--- a/src/EntityComposeWidget.php
+++ b/src/EntityComposeWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\compose;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -23,13 +24,13 @@ class EntityComposeWidget implements ComposeWidgetInterface {
   /**
    * Constructs the compose widget controller.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    */
   public function __construct(
diff --git a/src/EntityPreviewLoader.php b/src/EntityPreviewLoader.php
index 89a9f8c..a5cd977 100644
--- a/src/EntityPreviewLoader.php
+++ b/src/EntityPreviewLoader.php
@@ -16,21 +16,21 @@ class EntityPreviewLoader extends ControllerBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Defines the key/value store factory.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueExpirableFactory
+   * @var KeyValueExpirableFactory
    */
   protected $keyValueExpirableFactory;
 
   /**
    * Provides form building and processing.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;
 
diff --git a/src/Plugin/Field/FieldWidget/ComposeWidget.php b/src/Plugin/Field/FieldWidget/ComposeWidget.php
index 8a7d99f..a11c58c 100644
--- a/src/Plugin/Field/FieldWidget/ComposeWidget.php
+++ b/src/Plugin/Field/FieldWidget/ComposeWidget.php
@@ -224,7 +224,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The full form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addNewEntityValidate($form, FormStateInterface $form_state) {
@@ -241,7 +241,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The full form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addNewEntitySubmit($form, FormStateInterface $form_state) {
@@ -277,7 +277,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The full form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function composeCancelSubmit($form, FormStateInterface $form_state) {
@@ -292,7 +292,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The full form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function addNewEntityRowSubmit($form, FormStateInterface $form_state) {
@@ -312,10 +312,10 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The full form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An ajax-renderable response.
    */
   public static function addNewEntityDialogCallback($form, FormStateInterface $form_state) {
@@ -341,10 +341,10 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An ajax-renderable response.
    */
   public static function closeAddExistingDialogCallback(array $form, FormStateInterface $form_state) {
@@ -365,7 +365,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @returns \Drupal\Core\Ajax\AjaxResponse
@@ -391,7 +391,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @returns \Drupal\Core\Ajax\AjaxResponse
@@ -436,7 +436,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *   The IEF element as a renderable array.
    * @param string $ief_id
    *   The IEF ID
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -469,7 +469,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function closeDialogCallback($form, FormStateInterface $form_state) {
@@ -492,7 +492,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @returns \Drupal\Core\Ajax\AjaxResponse
@@ -534,7 +534,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @returns \Drupal\Core\Ajax\AjaxResponse
@@ -662,7 +662,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
   /**
    * Creates the content for the Add Existing Entity form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the parent form.
    * @param array $parents
    *   The array parents of this IEF for convenience.
@@ -859,7 +859,7 @@ class ComposeWidget extends InlineEntityFormComplex implements ContainerFactoryP
    *
    * @param array &$element
    *   The element being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the parent form.
    */
   public static function addExistingValidate(&$form, FormStateInterface $form_state) {
diff --git a/src/Theme/ThemeNegotiator.php b/src/Theme/ThemeNegotiator.php
index 46b65aa..1096de7 100644
--- a/src/Theme/ThemeNegotiator.php
+++ b/src/Theme/ThemeNegotiator.php
@@ -10,14 +10,14 @@ class ThemeNegotiator implements ThemeNegotiatorInterface {
   /**
    * ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactoryInterface;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory_interface
+   * @param ConfigFactoryInterface $config_factory_interface
    *   ThemeManager.
    */
   public function __construct(ConfigFactoryInterface $config_factory_interface) {
