diff --git a/modules/ingredient/ingredient.module b/modules/ingredient/ingredient.module
index 45e1e7a..631d098 100644
--- a/modules/ingredient/ingredient.module
+++ b/modules/ingredient/ingredient.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ingredient\IngredientInterface;
 /**
  * @file
  * Contains basic functions for the Ingredient module.
@@ -48,7 +49,7 @@ function ingredient_theme($existing, $type, $theme, $path) {
 function template_preprocess_ingredient(array &$variables) {
   $variables['view_mode'] = $variables['elements']['#view_mode'];
   $variables['ingredient'] = $variables['elements']['#ingredient'];
-  /** @var \Drupal\ingredient\IngredientInterface $ingredient */
+  /** @var IngredientInterface $ingredient */
   $ingredient = $variables['ingredient'];
 
   $variables['url'] = $ingredient->toUrl()->toString();
@@ -67,7 +68,7 @@ function template_preprocess_ingredient(array &$variables) {
 /**
  * Returns whether the current page is the page of the passed-in ingredient.
  *
- * @param \Drupal\ingredient\Entity\Ingredient $ingredient
+ * @param Ingredient $ingredient
  *   A ingredient entity.
  *
  * @return int|false
diff --git a/modules/ingredient/ingredient.views.inc b/modules/ingredient/ingredient.views.inc
index 8419c72..9846ed2 100644
--- a/modules/ingredient/ingredient.views.inc
+++ b/modules/ingredient/ingredient.views.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\Sql\DefaultTableMapping;
 /**
  * @file
  * Provides views data for ingredient.module.
@@ -20,7 +21,7 @@ function ingredient_field_views_data(FieldStorageConfigInterface $field_storage)
 
   $entity_type_manager = \Drupal::entityTypeManager();
   $entity_type_id = $field_storage->getTargetEntityTypeId();
-  /** @var \Drupal\Core\Entity\Sql\DefaultTableMapping $table_mapping */
+  /** @var DefaultTableMapping $table_mapping */
   $table_mapping = $entity_type_manager->getStorage($entity_type_id)->getTableMapping();
 
   foreach ($data as $table_name => $table_data) {
diff --git a/modules/ingredient/src/Form/IngredientDeleteForm.php b/modules/ingredient/src/Form/IngredientDeleteForm.php
index 2692170..6bbce99 100644
--- a/modules/ingredient/src/Form/IngredientDeleteForm.php
+++ b/modules/ingredient/src/Form/IngredientDeleteForm.php
@@ -19,20 +19,20 @@ class IngredientDeleteForm extends ContentEntityConfirmFormBase {
   /**
    * The ingredient logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $loggerChannel;
 
   /**
    * Constructs a new IngredientDeleteForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger_channel
+   * @param LoggerChannelInterface $logger_channel
    *   The logger service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info, TimeInterface $time, LoggerChannelInterface $logger_channel) {
diff --git a/modules/ingredient/src/Form/IngredientSettingsForm.php b/modules/ingredient/src/Form/IngredientSettingsForm.php
index fe62517..df1bb63 100644
--- a/modules/ingredient/src/Form/IngredientSettingsForm.php
+++ b/modules/ingredient/src/Form/IngredientSettingsForm.php
@@ -17,16 +17,16 @@ class IngredientSettingsForm extends ConfigFormBase {
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new IngredientSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler) {
diff --git a/modules/ingredient/src/IngredientListBuilder.php b/modules/ingredient/src/IngredientListBuilder.php
index da2fde0..e69a825 100644
--- a/modules/ingredient/src/IngredientListBuilder.php
+++ b/modules/ingredient/src/IngredientListBuilder.php
@@ -18,27 +18,27 @@ class IngredientListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Constructs a new NodeListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, LanguageManagerInterface $language_manager) {
diff --git a/modules/ingredient/src/Plugin/Field/FieldFormatter/IngredientFormatter.php b/modules/ingredient/src/Plugin/Field/FieldFormatter/IngredientFormatter.php
index 12cd462..9bce79e 100644
--- a/modules/ingredient/src/Plugin/Field/FieldFormatter/IngredientFormatter.php
+++ b/modules/ingredient/src/Plugin/Field/FieldFormatter/IngredientFormatter.php
@@ -28,14 +28,14 @@ class IngredientFormatter extends EntityReferenceFormatterBase {
   /**
    * The ingredient.unit service.
    *
-   * @var \Drupal\ingredient\Utility\IngredientUnitUtility
+   * @var IngredientUnitUtility
    */
   protected $ingredientUnitUtility;
 
   /**
    * The ingredient.quantity service.
    *
-   * @var \Drupal\ingredient\Utility\IngredientQuantityUtility
+   * @var IngredientQuantityUtility
    */
   protected $ingredientQuantityUtility;
 
@@ -46,7 +46,7 @@ class IngredientFormatter extends EntityReferenceFormatterBase {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -56,9 +56,9 @@ class IngredientFormatter extends EntityReferenceFormatterBase {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\ingredient\Utility\IngredientUnitUtility $ingredient_unit_utility
+   * @param IngredientUnitUtility $ingredient_unit_utility
    *   The ingredient.unit service.
-   * @param \Drupal\ingredient\Utility\IngredientQuantityUtility $ingredient_quantity_utility
+   * @param IngredientQuantityUtility $ingredient_quantity_utility
    *   The ingredient.quantity service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, IngredientUnitUtility $ingredient_unit_utility, IngredientQuantityUtility $ingredient_quantity_utility) {
diff --git a/modules/ingredient/src/Plugin/Field/FieldWidget/IngredientWidget.php b/modules/ingredient/src/Plugin/Field/FieldWidget/IngredientWidget.php
index 62a726e..c83a5f0 100644
--- a/modules/ingredient/src/Plugin/Field/FieldWidget/IngredientWidget.php
+++ b/modules/ingredient/src/Plugin/Field/FieldWidget/IngredientWidget.php
@@ -27,14 +27,14 @@ class IngredientWidget extends WidgetBase {
   /**
    * The ingredient.unit service.
    *
-   * @var \Drupal\ingredient\Utility\IngredientUnitUtility
+   * @var IngredientUnitUtility
    */
   protected $ingredientUnitUtility;
 
   /**
    * The ingredient.quantity service.
    *
-   * @var \Drupal\ingredient\Utility\IngredientQuantityUtility
+   * @var IngredientQuantityUtility
    */
   protected $ingredientQuantityUtility;
 
@@ -45,15 +45,15 @@ class IngredientWidget extends WidgetBase {
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\ingredient\Utility\IngredientUnitUtility $ingredient_unit_utility
+   * @param IngredientUnitUtility $ingredient_unit_utility
    *   The ingredient.unit service.
-   * @param \Drupal\ingredient\Utility\IngredientQuantityUtility $ingredient_quantity_utility
+   * @param IngredientQuantityUtility $ingredient_quantity_utility
    *   The ingredient.quantity service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, IngredientUnitUtility $ingredient_unit_utility, IngredientQuantityUtility $ingredient_quantity_utility) {
@@ -138,7 +138,7 @@ class IngredientWidget extends WidgetBase {
    *
    * @param array $element
    *   The ingredient field's form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function validate(array $element, FormStateInterface $form_state) {
diff --git a/modules/ingredient/src/Utility/IngredientUnitFuzzymatch.php b/modules/ingredient/src/Utility/IngredientUnitFuzzymatch.php
index 261d9cb..77ee007 100644
--- a/modules/ingredient/src/Utility/IngredientUnitFuzzymatch.php
+++ b/modules/ingredient/src/Utility/IngredientUnitFuzzymatch.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ingredient\Utility;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactory;
 
 /**
@@ -12,14 +13,14 @@ class IngredientUnitFuzzymatch {
   /**
    * The ingredient.units configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $ingredientUnitConfig;
 
   /**
    * Constructs a new IngredientUnitUtility object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config.factory service.
    */
   public function __construct(ConfigFactory $config_factory) {
diff --git a/modules/ingredient/src/Utility/IngredientUnitUtility.php b/modules/ingredient/src/Utility/IngredientUnitUtility.php
index 2a8f7a7..62bea5a 100644
--- a/modules/ingredient/src/Utility/IngredientUnitUtility.php
+++ b/modules/ingredient/src/Utility/IngredientUnitUtility.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ingredient\Utility;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactory;
 
 /**
@@ -12,14 +13,14 @@ class IngredientUnitUtility {
   /**
    * The ingredient.units configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $ingredientUnitConfig;
 
   /**
    * Constructs a new IngredientUnitUtility object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config.factory service.
    */
   public function __construct(ConfigFactory $config_factory) {
diff --git a/modules/ingredient/tests/src/Functional/IngredientFieldTest.php b/modules/ingredient/tests/src/Functional/IngredientFieldTest.php
index 244ff99..7ea5989 100644
--- a/modules/ingredient/tests/src/Functional/IngredientFieldTest.php
+++ b/modules/ingredient/tests/src/Functional/IngredientFieldTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\ingredient\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Tests\BrowserTestBase;
 
@@ -27,7 +28,7 @@ class IngredientFieldTest extends BrowserTestBase {
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -125,7 +126,8 @@ class IngredientFieldTest extends BrowserTestBase {
         'field_ingredient[0][target_id]' => $ingredient['name'],
         'field_ingredient[0][note]' => $ingredient['note'],
       ];
-      $this->drupalPostForm('node/add/test_bundle', $edit, 'Save');
+      $this->drupalGet('node/add/test_bundle');
+      $this->submitForm($edit, 'Save');
 
       // Check for the node title to verify redirection to the node view.
       $this->assertSession()->pageTextContains($title);
@@ -244,7 +246,7 @@ class IngredientFieldTest extends BrowserTestBase {
 
     $this->drupalGet('node/add/test_bundle');
     // Post the values to the node form.
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     // Verify that the ingredient name is not linked to its entity.
     $this->assertSession()->pageTextContains('4 T');
diff --git a/modules/ingredient/tests/src/Functional/IngredientTest.php b/modules/ingredient/tests/src/Functional/IngredientTest.php
index 2c9c170..0c9c959 100644
--- a/modules/ingredient/tests/src/Functional/IngredientTest.php
+++ b/modules/ingredient/tests/src/Functional/IngredientTest.php
@@ -78,7 +78,7 @@ class IngredientTest extends BrowserTestBase {
     $edit = [
       'name[0][value]' => 'test name',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save');
+    $this->submitForm($edit, 'Save');
 
     // Entity listed.
     $this->assertSession()->linkExists('Edit');
@@ -111,7 +111,7 @@ class IngredientTest extends BrowserTestBase {
 
     // Confirm deletion.
     $this->assertSession()->linkExists('Cancel');
-    $this->drupalPostForm(NULL, [], 'Delete');
+    $this->submitForm([], 'Delete');
 
     // Back to list, must be empty.
     $this->assertSession()->pageTextNotContains('test name');
diff --git a/modules/ingredient/tests/src/Functional/IngredientTestTrait.php b/modules/ingredient/tests/src/Functional/IngredientTestTrait.php
index d637acb..9240200 100644
--- a/modules/ingredient/tests/src/Functional/IngredientTestTrait.php
+++ b/modules/ingredient/tests/src/Functional/IngredientTestTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\ingredient\Functional;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
 
@@ -17,14 +19,14 @@ trait IngredientTestTrait {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Gets the entity type manager service.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity type manager service.
    */
   protected function getEntityTypeManager() {
@@ -54,7 +56,7 @@ trait IngredientTestTrait {
    * @param array $display_settings
    *   A list of display settings that will be added to the display defaults.
    *
-   * @return \Drupal\Core\Field\FieldStorageDefinitionInterface
+   * @return FieldStorageDefinitionInterface
    *   The ingredient field's storage definition.
    */
   protected function createIngredientField(array $storage_settings = [], array $field_settings = [], array $widget_settings = [], array $display_settings = []) {
diff --git a/modules/ingredient/tests/src/Functional/IngredientTranslationTest.php b/modules/ingredient/tests/src/Functional/IngredientTranslationTest.php
index aa3f412..b8228f5 100644
--- a/modules/ingredient/tests/src/Functional/IngredientTranslationTest.php
+++ b/modules/ingredient/tests/src/Functional/IngredientTranslationTest.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\Tests\ingredient\Functional;
 
+use Drupal\content_translation\ContentTranslationManagerInterface;
+use Drupal\Core\Routing\RouteBuilderInterface;
+use Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface;
+use Drupal\node\NodeInterface;
+use Drupal\ingredient\IngredientInterface;
+use Drupal\user\UserInterface;
 use Drupal\ingredient\Entity\Ingredient;
 use Drupal\language\Entity\ConfigurableLanguage;
 use Drupal\node\Entity\Node;
@@ -24,21 +30,21 @@ class IngredientTranslationTest extends BrowserTestBase {
   /**
    * The content translation manager service.
    *
-   * @var \Drupal\content_translation\ContentTranslationManagerInterface
+   * @var ContentTranslationManagerInterface
    */
   protected $contentTranslationManager;
 
   /**
    * The router builder service.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routerBuilder;
 
   /**
    * The entity definition update manager service.
    *
-   * @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface
+   * @var EntityDefinitionUpdateManagerInterface
    */
   protected $entityDefinitionUpdateManager;
 
@@ -58,14 +64,14 @@ class IngredientTranslationTest extends BrowserTestBase {
   /**
    * The node to check the translated value on.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
   /**
    * The ingredient that should be translated.
    *
-   * @var \Drupal\ingredient\IngredientInterface
+   * @var IngredientInterface
    */
   protected $ingredient;
 
@@ -91,7 +97,7 @@ class IngredientTranslationTest extends BrowserTestBase {
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -200,7 +206,7 @@ class IngredientTranslationTest extends BrowserTestBase {
   /**
    * Gets the content translation manager service.
    *
-   * @return \Drupal\content_translation\ContentTranslationManagerInterface
+   * @return ContentTranslationManagerInterface
    *   The content translation manager service.
    */
   protected function getContentTranslationManager() {
@@ -214,7 +220,7 @@ class IngredientTranslationTest extends BrowserTestBase {
   /**
    * Gets the router builder service.
    *
-   * @return \Drupal\Core\Routing\RouteBuilderInterface
+   * @return RouteBuilderInterface
    *   The router builder service.
    */
   protected function getRouterBuilder() {
@@ -228,7 +234,7 @@ class IngredientTranslationTest extends BrowserTestBase {
   /**
    * Gets the entity definition update manager service.
    *
-   * @return \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface
+   * @return EntityDefinitionUpdateManagerInterface
    *   The entity definition update manager service.
    */
   protected function getEntityDefinitionUpdateManager() {
diff --git a/modules/ingredient/tests/src/Kernel/IngredientAccessTest.php b/modules/ingredient/tests/src/Kernel/IngredientAccessTest.php
index cfdce8e..5c89bcb 100644
--- a/modules/ingredient/tests/src/Kernel/IngredientAccessTest.php
+++ b/modules/ingredient/tests/src/Kernel/IngredientAccessTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\ingredient\Kernel;
 
+use Drupal\Core\Entity\EntityAccessControlHandlerInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\ingredient\Entity\Ingredient;
@@ -35,7 +36,7 @@ class IngredientAccessTest extends KernelTestBase {
   /**
    * Access handler.
    *
-   * @var \Drupal\Core\Entity\EntityAccessControlHandlerInterface
+   * @var EntityAccessControlHandlerInterface
    */
   protected $accessHandler;
 
@@ -100,9 +101,9 @@ class IngredientAccessTest extends KernelTestBase {
    *   ingredient and account, with each key as the name of an operation (e.g.
    *   'view', 'delete') and each value a Boolean indicating whether access to
    *   that operation should be granted.
-   * @param \Drupal\ingredient\IngredientInterface $ingredient
+   * @param IngredientInterface $ingredient
    *   The ingredient object to check.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account for which to check access.
    */
   public function assertIngredientAccess(array $ops, IngredientInterface $ingredient, AccountInterface $account) {
@@ -117,7 +118,7 @@ class IngredientAccessTest extends KernelTestBase {
    *
    * @param bool $result
    *   Whether access should be granted or not.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account for which to check access.
    * @param string|null $langcode
    *   (optional) The language code indicating which translation of the
diff --git a/modules/ingredient/tests/src/Kernel/IngredientSettingsTest.php b/modules/ingredient/tests/src/Kernel/IngredientSettingsTest.php
index 71ddcf1..cc29661 100644
--- a/modules/ingredient/tests/src/Kernel/IngredientSettingsTest.php
+++ b/modules/ingredient/tests/src/Kernel/IngredientSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\ingredient\Kernel;
 
+use Drupal\Core\Config\Config;
 use Drupal\ingredient\Entity\Ingredient;
 use Drupal\KernelTests\KernelTestBase;
 
@@ -30,7 +31,7 @@ class IngredientSettingsTest extends KernelTestBase {
    * Tests the ingredient name normalization setting.
    */
   public function testIngredientNormalization() {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->container->get('config.factory')->getEditable('ingredient.settings');
 
     // Verify that ingredient normalization is off by default.
diff --git a/modules/ingredient/tests/src/Kernel/Migrate/recipe61/MigrateIngredient61Test.php b/modules/ingredient/tests/src/Kernel/Migrate/recipe61/MigrateIngredient61Test.php
index 41c2152..f0795a6 100644
--- a/modules/ingredient/tests/src/Kernel/Migrate/recipe61/MigrateIngredient61Test.php
+++ b/modules/ingredient/tests/src/Kernel/Migrate/recipe61/MigrateIngredient61Test.php
@@ -36,7 +36,7 @@ class MigrateIngredient61Test extends MigrateIngredient61TestBase {
    *   The ingredient name.
    */
   protected function assertEntity($id, $label) {
-    /** @var \Drupal\ingredient\IngredientInterface $ingredient */
+    /** @var IngredientInterface $ingredient */
     $ingredient = Ingredient::load($id);
     $this->assertTrue($ingredient instanceof IngredientInterface);
     $this->assertSame($label, $ingredient->label());
diff --git a/modules/ingredient/tests/src/Kernel/Migrate/recipe71/MigrateIngredient71Test.php b/modules/ingredient/tests/src/Kernel/Migrate/recipe71/MigrateIngredient71Test.php
index 649890f..c38f139 100644
--- a/modules/ingredient/tests/src/Kernel/Migrate/recipe71/MigrateIngredient71Test.php
+++ b/modules/ingredient/tests/src/Kernel/Migrate/recipe71/MigrateIngredient71Test.php
@@ -36,7 +36,7 @@ class MigrateIngredient71Test extends MigrateIngredient71TestBase {
    *   The ingredient name.
    */
   protected function assertEntity($id, $label) {
-    /** @var \Drupal\ingredient\IngredientInterface $ingredient */
+    /** @var IngredientInterface $ingredient */
     $ingredient = Ingredient::load($id);
     $this->assertTrue($ingredient instanceof IngredientInterface);
     $this->assertSame($label, $ingredient->label());
diff --git a/src/Plugin/migrate/source/Recipe72.php b/src/Plugin/migrate/source/Recipe72.php
index 396a53a..89715c9 100644
--- a/src/Plugin/migrate/source/Recipe72.php
+++ b/src/Plugin/migrate/source/Recipe72.php
@@ -69,7 +69,7 @@ class Recipe72 extends DrupalSqlBase {
   /**
    * Adapt our query for translations.
    *
-   * @param \Drupal\Core\Database\Query\SelectInterface $query
+   * @param SelectInterface $query
    *   The generated query.
    */
   protected function handleTranslations(SelectInterface $query) {
diff --git a/src/Plugin/migrate/source/recipe61/Recipe61.php b/src/Plugin/migrate/source/recipe61/Recipe61.php
index 27a2826..8107d21 100644
--- a/src/Plugin/migrate/source/recipe61/Recipe61.php
+++ b/src/Plugin/migrate/source/recipe61/Recipe61.php
@@ -107,7 +107,7 @@ class Recipe61 extends DrupalSqlBase {
   /**
    * Adapt our query for translations.
    *
-   * @param \Drupal\Core\Database\Query\SelectInterface $query
+   * @param SelectInterface $query
    *   The generated query.
    */
   protected function handleTranslations(SelectInterface $query) {
diff --git a/src/Plugin/migrate/source/recipe71/Recipe71.php b/src/Plugin/migrate/source/recipe71/Recipe71.php
index b383e12..349fca2 100644
--- a/src/Plugin/migrate/source/recipe71/Recipe71.php
+++ b/src/Plugin/migrate/source/recipe71/Recipe71.php
@@ -93,7 +93,7 @@ class Recipe71 extends DrupalSqlBase {
   /**
    * Adapt our query for translations.
    *
-   * @param \Drupal\Core\Database\Query\SelectInterface $query
+   * @param SelectInterface $query
    *   The generated query.
    */
   protected function handleTranslations(SelectInterface $query) {
diff --git a/src/Plugin/views/display/Recipe.php b/src/Plugin/views/display/Recipe.php
index c4b5921..b115fd9 100644
--- a/src/Plugin/views/display/Recipe.php
+++ b/src/Plugin/views/display/Recipe.php
@@ -33,7 +33,7 @@ class Recipe extends PathPluginBase implements ResponseDisplayPluginInterface {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -46,11 +46,11 @@ class Recipe extends PathPluginBase implements ResponseDisplayPluginInterface {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key value store.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RouteProviderInterface $route_provider, StateInterface $state, RendererInterface $renderer) {
diff --git a/tests/src/Functional/PlainTextStyleTest.php b/tests/src/Functional/PlainTextStyleTest.php
index 37a26fa..82c2e50 100644
--- a/tests/src/Functional/PlainTextStyleTest.php
+++ b/tests/src/Functional/PlainTextStyleTest.php
@@ -47,9 +47,10 @@ class PlainTextStyleTest extends RecipeTestBase {
       'recipe_ingredient[0][target_id]' => $ing_0_name,
       'recipe_ingredient[0][note]' => $ing_0_note,
     ];
+    $this->drupalGet('node/add/recipe');
 
     // Post the values to the node form.
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(new FormattableMarkup('Recipe @title has been created.', ['@title' => $title]));
 
     // Enable the plain text view.
diff --git a/tests/src/Functional/RecipeMlTest.php b/tests/src/Functional/RecipeMlTest.php
index 212665f..e53f0fc 100644
--- a/tests/src/Functional/RecipeMlTest.php
+++ b/tests/src/Functional/RecipeMlTest.php
@@ -48,9 +48,10 @@ class RecipeMlTest extends RecipeTestBase {
       'recipe_ingredient[0][target_id]' => $ing_0_name,
       'recipe_ingredient[0][note]' => $ing_0_note,
     ];
+    $this->drupalGet('node/add/recipe');
 
     // Post the values to the node form.
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(new FormattableMarkup('Recipe @title has been created.', ['@title' => $title]));
 
     // Enable the RecipeML view.
diff --git a/tests/src/Functional/RecipeNodeTest.php b/tests/src/Functional/RecipeNodeTest.php
index 2c85a1b..529cf5c 100644
--- a/tests/src/Functional/RecipeNodeTest.php
+++ b/tests/src/Functional/RecipeNodeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\recipe\Functional;
 
+use Drupal\Core\Entity\EntityDisplayRepository;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Url;
 
@@ -48,9 +49,10 @@ class RecipeNodeTest extends RecipeTestBase {
       'recipe_ingredient[0][target_id]' => $ing_0_name,
       'recipe_ingredient[0][note]' => $ing_0_note,
     ];
+    $this->drupalGet('node/add/recipe');
 
     // Post the values to the node form.
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(new FormattableMarkup('Recipe @title has been created.', ['@title' => $title]));
 
     // Check the page for the recipe content.
@@ -120,7 +122,8 @@ class RecipeNodeTest extends RecipeTestBase {
       'recipe_prep_time[0][value]' => 1,
       'recipe_cook_time[0][value]' => 1,
     ];
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->drupalGet('node/add/recipe');
+    $this->submitForm($edit, 'Save');
 
     // Verify that the pseudo-fields are shown on the node view.
     $this->assertSession()->pageTextContains('Yield');
@@ -133,7 +136,8 @@ class RecipeNodeTest extends RecipeTestBase {
       'recipe_yield_unit[0][value]' => $this->randomMachineName(16),
       'recipe_cook_time[0][value]' => 1,
     ];
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->drupalGet('node/add/recipe');
+    $this->submitForm($edit, 'Save');
 
     // Verify that the pseudo-fields are not shown on the node view.
     $this->assertSession()->pageTextNotContains('Yield');
@@ -143,7 +147,8 @@ class RecipeNodeTest extends RecipeTestBase {
     $edit = [
       'title[0][value]' => $this->randomMachineName(16),
     ];
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->drupalGet('node/add/recipe');
+    $this->submitForm($edit, 'Save');
 
     // Verify that the pseudo-fields are not shown on the node view.
     $this->assertSession()->pageTextNotContains('Yield');
@@ -152,7 +157,7 @@ class RecipeNodeTest extends RecipeTestBase {
     // Hide the pseudo-fields.  Verify that they can't be found on the first
     // node that we created, on which it was already verified that they
     // appeared.
-    /** @var \Drupal\Core\Entity\EntityDisplayRepository $repository */
+    /** @var EntityDisplayRepository $repository */
     $repository = \Drupal::service('entity_display.repository');
     $repository->getViewDisplay('node', 'recipe', 'default')
       ->removeComponent('recipe_yield')
diff --git a/tests/src/Functional/RecipeSettingsTest.php b/tests/src/Functional/RecipeSettingsTest.php
index 3f9bc8d..a2f7c4b 100644
--- a/tests/src/Functional/RecipeSettingsTest.php
+++ b/tests/src/Functional/RecipeSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\recipe\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Tests\BrowserTestBase;
 
@@ -24,7 +25,7 @@ class RecipeSettingsTest extends BrowserTestBase {
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -62,9 +63,10 @@ class RecipeSettingsTest extends BrowserTestBase {
       'recipe_prep_time[0][value]' => $preptime,
       'recipe_cook_time[0][value]' => $cooktime,
     ];
+    $this->drupalGet('node/add/recipe');
 
     // Post the values to the node form.
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(new FormattableMarkup('Recipe @title has been created.', ['@title' => $title]));
 
     // Check for the default pseudo-field labels.
@@ -78,9 +80,10 @@ class RecipeSettingsTest extends BrowserTestBase {
       'recipe_total_time_label' => $total_time_label,
       'recipe_yield_label' => $yield_label,
     ];
+    $this->drupalGet('admin/structure/types/manage/recipe');
 
     // Post the values to the settings form.
-    $this->drupalPostForm('admin/structure/types/manage/recipe', $edit, 'Save content type');
+    $this->submitForm($edit, 'Save content type');
     $this->assertSession()->pageTextContains('The content type Recipe has been updated.');
 
     // Check the node display for the new labels.
@@ -93,9 +96,10 @@ class RecipeSettingsTest extends BrowserTestBase {
       'recipe_total_time_label_display' => 'hidden',
       'recipe_yield_label_display' => 'hidden',
     ];
+    $this->drupalGet('admin/structure/types/manage/recipe');
 
     // Post the values to the settings form.
-    $this->drupalPostForm('admin/structure/types/manage/recipe', $edit, 'Save content type');
+    $this->submitForm($edit, 'Save content type');
     $this->assertSession()->pageTextContains('The content type Recipe has been updated.');
 
     // Check the node display for the new labels.
diff --git a/tests/src/Functional/RecipeTestBase.php b/tests/src/Functional/RecipeTestBase.php
index 0d0e720..82bd996 100644
--- a/tests/src/Functional/RecipeTestBase.php
+++ b/tests/src/Functional/RecipeTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\recipe\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -22,7 +23,7 @@ abstract class RecipeTestBase extends BrowserTestBase {
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/RecipeTotalTimeConfigTest.php b/tests/src/Functional/RecipeTotalTimeConfigTest.php
index c7a9f13..82ff2c4 100644
--- a/tests/src/Functional/RecipeTotalTimeConfigTest.php
+++ b/tests/src/Functional/RecipeTotalTimeConfigTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\recipe\Functional;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\user\UserInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\BrowserTestBase;
@@ -26,14 +28,14 @@ class RecipeTotalTimeConfigTest extends BrowserTestBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * A test user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -68,9 +70,10 @@ class RecipeTotalTimeConfigTest extends BrowserTestBase {
       'recipe_prep_time[0][value]' => $preptime,
       'recipe_cook_time[0][value]' => $cooktime,
     ];
+    $this->drupalGet('node/add/recipe');
 
     // Post the values to the node form.
-    $this->drupalPostForm('node/add/recipe', $edit, 'Save');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(new FormattableMarkup('Recipe @title has been created.', ['@title' => $title]));
 
     // Check for the total time.
@@ -87,7 +90,8 @@ class RecipeTotalTimeConfigTest extends BrowserTestBase {
     $edit = [
       $field_name . '[0][value]' => $new_field_value,
     ];
-    $this->drupalPostForm('node/1/edit', $edit, 'Save');
+    $this->drupalGet('node/1/edit');
+    $this->submitForm($edit, 'Save');
 
     // Check for the new field's value.
     $this->drupalGet('node/1');
diff --git a/tests/src/Kernel/Migrate/recipe61/MigrateRecipe61Test.php b/tests/src/Kernel/Migrate/recipe61/MigrateRecipe61Test.php
index 7007c75..c899677 100644
--- a/tests/src/Kernel/Migrate/recipe61/MigrateRecipe61Test.php
+++ b/tests/src/Kernel/Migrate/recipe61/MigrateRecipe61Test.php
@@ -54,7 +54,7 @@ class MigrateRecipe61Test extends MigrateRecipe61TestBase {
   /**
    * Asserts various aspects of a recipe.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The imported recipe node.
    * @param \stdClass $recipe
    *   A stdClass object with the following properties:
diff --git a/tests/src/Kernel/Migrate/recipe71/MigrateRecipe71Test.php b/tests/src/Kernel/Migrate/recipe71/MigrateRecipe71Test.php
index 14f577f..37476b2 100644
--- a/tests/src/Kernel/Migrate/recipe71/MigrateRecipe71Test.php
+++ b/tests/src/Kernel/Migrate/recipe71/MigrateRecipe71Test.php
@@ -51,7 +51,7 @@ class MigrateRecipe71Test extends MigrateRecipe71TestBase {
   /**
    * Asserts various aspects of a recipe.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The imported recipe node.
    * @param \stdClass $recipe
    *   A stdClass object with the following properties:
