modules/contrib/atomic_block_content_type/atomic_block_content_type.module
modules/contrib/atomic_block_content_type/src/Plugin/Field/FieldFormatter/PaddingFormatter.php
modules/contrib/atomic_block_content_type/src/Plugin/Field/FieldType/GradientColor.php
modules/contrib/atomic_block_content_type/src/Plugin/Field/FieldType/Padding.php
modules/contrib/atomic_block_content_type/src/Plugin/Field/FieldWidget/PaddingWidget.php

1 file with changes
===================

1) modules/contrib/atomic_block_content_type/atomic_block_content_type.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Field\FieldItemList;
 use Mexitek\PHPColors\Color;

 /**
@@ @@
 function atomic_block_content_type_preprocess_block(&$variables) {
   if ($variables['elements']['#base_plugin_id'] == "inline_block" &&
     in_array($variables['elements']['#derivative_plugin_id'],['abct_list', 'abct_text', 'abct_title', 'abct_button'])) {
-    /** @var \Drupal\Core\Field\FieldItemList $text_color_field_list_item */
+    /** @var FieldItemList $text_color_field_list_item */
     $text_color_field_list_item = $variables['elements']['content']['field_abct_text_color']['#items'];
     if (isset($text_color_field_list_item)) {
       $color = $text_color_field_list_item->getValue()[0]['color'];
@@ @@
       $variables['elements']['bg_color_opacity'] = $ba_color_opacity;
     }

-    /** @var \Drupal\Core\Field\FieldItemList $vertical_align_field_list_item */
+    /** @var FieldItemList $vertical_align_field_list_item */
     $vertical_align_field_list_item = $variables['elements']['content']['field_abct_vertical_align']['#items'];
     if (isset($vertical_align_field_list_item)) {
       $variables['elements']['vertical_align_class'] = 'atomic-vertical-' . $vertical_align_field_list_item->getString();
     }

-    /** @var \Drupal\Core\Field\FieldItemList $padding_field_list_item */
+    /** @var FieldItemList $padding_field_list_item */
     $padding_field_list_item = $variables['elements']['content']['field_abct_padding']['#items'];

     if (isset($padding_field_list_item)) {
@@ @@
       $variables['elements']['padding'] = $paddings['top'] . 'px ' . $paddings['right'] . 'px ' . $paddings['bottom'] . 'px ' . $paddings['left'] . 'px ';
     }

-    /** @var \Drupal\Core\Field\FieldItemList $padding_field_list_item */
+    /** @var FieldItemList $padding_field_list_item */
     $content_padding_field_list_item = $variables['elements']['content']['field_abct_content_padding']['#items'];

     if (isset($content_padding_field_list_item)) {
@@ @@
       $variables['elements']['content_padding'] = $content_paddings['top'] . 'px ' . $content_paddings['right'] . 'px ' . $content_paddings['bottom'] . 'px ' . $content_paddings['left'] . 'px ';
     }

-    /** @var \Drupal\Core\Field\FieldItemList $hover_display_field_list_item */
+    /** @var FieldItemList $hover_display_field_list_item */
     $hover_display_field_list_item = $variables['elements']['content']['field_abct_hover_display']['#items'];

     if (isset($hover_display_field_list_item) && $hover_display_field_list_item->getString() == '1') {
@@ @@
 }

 function hexToRgba($hex, $opacity) {
-  /** @var \Mexitek\PHPColors\Color $color */
+  /** @var Color $color */
   $color = new Color($hex);
   $color_rgb_array = $color->getRgb();
   return 'rgba(' . $color_rgb_array['R'] . ',' . $color_rgb_array['G'] . ',' . $color_rgb_array['B'] . ',' . $opacity . ')';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 1 file has been changed by Rector                                         

