modules/contrib/mailsystem/mailsystem.module
modules/contrib/mailsystem/src/Adapter.php
modules/contrib/mailsystem/src/Form/AdminForm.php
modules/contrib/mailsystem/src/MailsystemManager.php
modules/contrib/mailsystem/src/MailsystemServiceProvider.php
modules/contrib/mailsystem/tests/modules/mailsystem_test/mailsystem_test.module
modules/contrib/mailsystem/tests/modules/mailsystem_test/src/Controller/MailsystemTestController.php
modules/contrib/mailsystem/tests/modules/mailsystem_test/src/Plugin/Mail/Dummy.php
modules/contrib/mailsystem/tests/modules/mailsystem_test/src/Plugin/Mail/DummyFormatter.php
modules/contrib/mailsystem/tests/modules/mailsystem_test/src/Plugin/Mail/DummySender.php
modules/contrib/mailsystem/tests/src/Functional/AdminFormSettingsTest.php
modules/contrib/mailsystem/tests/src/Functional/MailsystemTestThemeTest.php
modules/contrib/mailsystem/tests/src/Unit/AdapterTest.php

7 files with changes
====================

1) modules/contrib/mailsystem/tests/src/Unit/AdapterTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The Adapter we need to test.
    *
-   * @var \Drupal\mailsystem\Adapter
+   * @var Adapter
    */
   protected $adapter;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->formatter = new Test();
     $this->sender = new Test();
     $this->adapter = new Adapter($this->formatter, $this->sender);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/mailsystem/tests/src/Functional/MailsystemTestThemeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\mailsystem\Functional;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Test\AssertMailTrait;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * The Mailsystem settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->config = $this->config('mailsystem.settings');
   }
@@ @@
     $mails = $this->getMails();

     // Check the configuration and if the correct theme was used in mails.
-    $this->assertEqual($this->config->get('theme'), 'current');
+    $this->assertEquals($this->config->get('theme'), 'current');
     $this->assertTrue(strpos($mails[0]['body'], 'Anonymous (not verified)') !== FALSE);

     // Install the test theme and set it as the mail theme.
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/mailsystem/tests/src/Functional/AdminFormSettingsTest.php:27

    ---------- begin diff ----------
@@ @@
     $assert_session = $this->assertSession();
     // Unauthorized user should not have access.
     $this->drupalGet('admin/config/system/mailsystem');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);

     // Check the overview.
     $user = $this->createUser(['administer_mailsystem']);
@@ @@
     $assert_session->optionExists('edit-custom-custom-module', 'User');

     // Configure the default Mail System.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'mailsystem[default_formatter]' => 'test_mail_collector',
       'mailsystem[default_sender]' => 'test_mail_collector',
       'mailsystem[default_theme]' => 'current',
@@ @@
     ], 'Save configuration');

     // Configure a specific module configuration.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module]' => 'system',
       'custom[custom_module_key]' => 'aaa',
       'custom[custom_formatter]' => 'test_mail_collector',
@@ @@

     // Add additional custom module settings, one with test_mail_collector and
     // one with php_mail.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module]' => 'system',
       'custom[custom_module_key]' => 'bbb',
       'custom[custom_formatter]' => 'test_mail_collector',
@@ @@
     $this->drupalGet('admin/config/system/mailsystem');
     $assert_session->pageTextContains('bbb');

-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module]' => 'system',
       'custom[custom_module_key]' => 'ccc',
       'custom[custom_formatter]' => 'php_mail',
@@ @@
     $assert_session->pageTextContains('ccc');

     // Add a custom module settings, without specifying any key.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module]' => 'system',
       'custom[custom_formatter]' => 'test_mail_collector',
       'custom[custom_sender]' => 'test_mail_collector',
@@ @@

     // Try to add a custom module, first without setting the module, then
     // without formatter nor sender, then just specifying a key.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module_key]' => 'ddd',
       'custom[custom_formatter]' => 'test_mail_collector',
       'custom[custom_sender]' => 'test_mail_collector',
@@ @@
     $assert_session->pageTextContains('The module is required.');
     $this->drupalGet('admin/config/system/mailsystem');

-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module]' => 'system',
       'custom[custom_module_key]' => 'ddd',
     ], 'Add');
@@ @@
     $assert_session->pageTextContains('At least a formatter or sender is required.');
     $this->drupalGet('admin/config/system/mailsystem');

-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module_key]' => 'ddd',
     ], 'Add');
     $assert_session->pageTextNotContains('ddd');
@@ @@
     $this->assertNull($config->get('modules.system.ddd'));

     // Try to update the formatter of the module keyed as 'ccc' from the form.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module_key]' => 'ccc',
       'custom[custom_formatter]' => 'test_mail_collector',
     ], 'Add');
@@ @@
     $this->drupalGet('admin/config/system/mailsystem');

     // Try to update 'modules.system.ccc' formatter and sender from the form.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module]' => 'system',
       'custom[custom_module_key]' => 'ccc',
       'custom[custom_formatter]' => 'test_mail_collector',
@@ @@

     // Try to add a custom module with the same settings of an existing one,
     // without formatter and sender.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[custom_module]' => 'system',
       'custom[custom_module_key]' => 'ccc',
     ], 'Add');
@@ @@
     $this->drupalGet('admin/config/system/mailsystem');

     // Edit the second and third custom module formatter from the table.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[modules][system.bbb][formatter]' => 'php_mail',
       'custom[modules][system.ccc][formatter]' => 'test_mail_collector',
     ], 'Save configuration');
@@ @@
     $this->assertEquals($config->get('modules.system.none.formatter'), 'test_mail_collector');

     // Remove the first custom module.
-    $this->drupalPostForm(NULL, [
+    $this->submitForm([
       'custom[modules][system.aaa][remove]' => TRUE,
     ], 'Save configuration');
     $config->clear('modules.system.aaa')->save();
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/mailsystem/tests/modules/mailsystem_test/src/Controller/MailsystemTestController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mailsystem_test\Controller;

+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Response;

 /**
@@ @@
   /**
    * Composes and optionally sends an email message.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect response object.
    */
   public function sendMail() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/mailsystem/src/MailsystemManager.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * The theme initialization.
    *
-   * @var \Drupal\Core\Theme\ThemeInitializationInterface
+   * @var ThemeInitializationInterface
    */
   protected $themeInitialization;

@@ @@
   /**
    * Sets the theme manager for mailsystem.
    *
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
    */
   public function setThemeManager(ThemeManagerInterface $theme_manager) {
@@ @@
   /**
    * Sets the theme initialization for mailsystem.
    *
-   * @param \Drupal\Core\Theme\ThemeInitializationInterface $theme_initialization
+   * @param ThemeInitializationInterface $theme_initialization
    *   The theme initialization.
    */
   public function setThemeInitialization(ThemeInitializationInterface $theme_initialization) {
@@ @@
    *   Use \Drupal\mailsystem\MailsystemManager\MAILSYSTEM_TYPE_SENDING and
    *   \Drupal\mailsystem\MailsystemManager\MAILSYSTEM_TYPE_FORMATTING.
    *
-   * @return \Drupal\Core\Mail\MailInterface
+   * @return MailInterface
    *   A mail plugin instance.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   protected function getPluginInstance($module, $key = '', $type = '') {
     $plugin_id = NULL;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/mailsystem/src/Form/AdminForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MailManagerInterface $mail_manager, ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/mailsystem/src/Adapter.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * The mail plugin.
    *
-   * @var \Drupal\Core\Mail\MailInterface
+   * @var MailInterface
    */
   protected $instanceFormatter;

@@ @@
   /**
    * The mail plugin.
    *
-   * @var \Drupal\Core\Mail\MailInterface
+   * @var MailInterface
    */
   protected $instanceSender;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Mail\MailInterface $formatter
+   * @param MailInterface $formatter
    *   The MailPlugin for formatting the email before sending.
-   * @param \Drupal\Core\Mail\MailInterface $sender
+   * @param MailInterface $sender
    *   The MailPlugin for sending the email.
    */
   public function __construct(MailInterface $formatter, MailInterface $sender) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 7 files have been changed by Rector                                       

