diff --git a/modules/simple_analytics_event/src/SimpleAnalyticsTracker.php b/modules/simple_analytics_event/src/SimpleAnalyticsTracker.php
index a6ee123..fd76f92 100644
--- a/modules/simple_analytics_event/src/SimpleAnalyticsTracker.php
+++ b/modules/simple_analytics_event/src/SimpleAnalyticsTracker.php
@@ -13,13 +13,13 @@ class SimpleAnalyticsTracker implements EventSubscriberInterface {
   /**
    * Action on tracking event.
    *
-   * @param Drupal\simple_analytics\SimpleAnalyticsEvents $event
+   * @param SimpleAnalyticsEvents $event
    *   The Event to process.
    */
   public function saTrack(SimpleAnalyticsEvents $event) {
     $data = $event->getData();
     $text = $this->t("Tracking event from SimpleAnalytics. Signature : :sig", [':sig' => $data['SIGNATURE']]);
-    drupal_set_message($text);
+    \Drupal::messenger()->addStatus($text);
   }
 
   /**
diff --git a/src/Plugin/Block/SimpleAnalyticsLive.php b/src/Plugin/Block/SimpleAnalyticsLive.php
index 59f35ff..a223550 100644
--- a/src/Plugin/Block/SimpleAnalyticsLive.php
+++ b/src/Plugin/Block/SimpleAnalyticsLive.php
@@ -41,7 +41,7 @@ class SimpleAnalyticsLive extends BlockBase {
    */
   public function blockForm($form, FormStateInterface $form_state) {
     $form = parent::blockForm($form, $form_state);
-    drupal_set_message($this->t("The block is not visible if user hasn't permissions 'View Live'"));
+    $this->messenger()->addStatus($this->t("The block is not visible if user hasn't permissions 'View Live'"));
 
     $list = SimpleAnalyticsLive::getFieldsList();
     foreach ($list as $item => $item_name) {
diff --git a/src/SimpleAnalyticsEvents.php b/src/SimpleAnalyticsEvents.php
index 32947c5..cfccaf2 100644
--- a/src/SimpleAnalyticsEvents.php
+++ b/src/SimpleAnalyticsEvents.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\simple_analytics;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Simple Analytics Events.
diff --git a/src/SimpleAnalyticsEventsListener.php b/src/SimpleAnalyticsEventsListener.php
index 06d287a..cdc6750 100644
--- a/src/SimpleAnalyticsEventsListener.php
+++ b/src/SimpleAnalyticsEventsListener.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\simple_analytics;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -14,12 +14,12 @@ class SimpleAnalyticsEventsListener implements EventSubscriberInterface {
   /**
    * Track event on request call.
    *
-   * @param Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The Event to process.
    *
    * @see Symfony\Component\HttpKernel\KernelEvents
    */
-  public function simpleAnalyticsTrack(GetResponseEvent $event) {
+  public function simpleAnalyticsTrack(RequestEvent $event) {
 
     $config = SimpleAnalyticsHelper::getConfig();
     // Check S.A tracker and server side tracking.
diff --git a/src/SimpleAnalyticsHelper.php b/src/SimpleAnalyticsHelper.php
index 5480f97..6211405 100755
--- a/src/SimpleAnalyticsHelper.php
+++ b/src/SimpleAnalyticsHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\simple_analytics;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 /**
  * Simple Analytics Helper functions.
  */
@@ -17,7 +19,7 @@ class SimpleAnalyticsHelper {
   /**
    * Get Configuration Object.
    *
-   * @return \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @return Config|ImmutableConfig
    *   The configuration object.
    */
   public static function getConfig($editable = FALSE) {
diff --git a/src/Tests/SATData.php b/src/Tests/SATData.php
index 6933d6a..941ec99 100644
--- a/src/Tests/SATData.php
+++ b/src/Tests/SATData.php
@@ -15,7 +15,7 @@ class SATData {
    */
   public static function initData() {
 
-    $file = drupal_get_path('module', 'simple_analytics') . "/src/Tests/sadata.json";
+    $file = \Drupal::service('extension.list.module')->getPath('simple_analytics') . "/src/Tests/sadata.json";
     $datas = Json::decode(file_get_contents($file));
 
     $con = Database::getConnection();
