diff --git a/social_tour.module b/social_tour.module
index 846101f..17b4dca 100644
--- a/social_tour.module
+++ b/social_tour.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\user\Entity\User;
+use Drupal\social_tour\SocialTourController;
 /**
  * @file
  * The Social Tour module.
@@ -47,7 +49,7 @@ function social_tour_form_user_form_alter(&$form, FormStateInterface $form_state
  *
  * @param array $form
  *   Commnent on a post form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Form state interface.
  */
 function _social_tour_form_user_form_submit(array $form, FormStateInterface $form_state) {
@@ -160,7 +162,7 @@ function social_tour_page_bottom(array &$page_bottom) {
       // So it must be removed from the array, but not marked as seen before,
       // when you visit the profile of others.
       if ($id === 'social_profile' && isset($page_bottom['tour'][$id])) {
-        /** @var \Drupal\user\Entity\User $profile */
+        /** @var User $profile */
         $profile = $route_match->getParameter('user');
         if ($profile->id() !== \Drupal::currentUser()->id()) {
           // If it's not your own profile, we don't show this tour.
@@ -229,7 +231,7 @@ function _social_tour_init() {
  * Check some stuff before doing anything with these tours.
  */
 function _social_tour_check() {
-  /** @var \Drupal\social_tour\SocialTourController $onboarding */
+  /** @var SocialTourController $onboarding */
   $onboarding = \Drupal::service('social_tour.onboarding');
   return $onboarding->onboardingEnabled();
 }
diff --git a/src/SocialTourController.php b/src/SocialTourController.php
index 75160d7..a058dea 100644
--- a/src/SocialTourController.php
+++ b/src/SocialTourController.php
@@ -26,38 +26,38 @@ class SocialTourController extends ControllerBase {
   /**
    * The user data.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * The redirect destination helper.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * SocialTourController constructor.
    *
-   * @param \Drupal\user\UserDataInterface $user_data
+   * @param UserDataInterface $user_data
    *   The user data.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user service.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination helper.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(
