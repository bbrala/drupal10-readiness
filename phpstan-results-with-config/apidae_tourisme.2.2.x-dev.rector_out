modules/contrib/apidae_tourisme/apidae_tourisme.install
modules/contrib/apidae_tourisme/apidae_tourisme.module
modules/contrib/apidae_tourisme/apidae_tourisme_criteres/src/EventSubscriber/ApidaeCritereNodePresaveSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_criteres/src/EventSubscriber/ApidaeCritereQueryBuilderSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_dates/apidae_tourisme_dates.module
modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/EventSubscriber/ApidaeDatePresaveSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/EventSubscriber/ApidaeDateQueryBuilderSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/Plugin/Field/FieldFormatter/ApidaeDate.php
modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/Plugin/Field/FieldType/ApidaeDate.php
modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/Plugin/Field/FieldWidget/ApidaeDate.php
modules/contrib/apidae_tourisme/apidae_tourisme_examples/apidae_tourisme_examples.module
modules/contrib/apidae_tourisme/apidae_tourisme_examples/src/EventSubscriber/ApidaeNodePresaveSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_examples/src/EventSubscriber/ApidaeQueryBuilderSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_periode/src/EventSubscriber/ApidaePeriodePresaveSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_periode/src/EventSubscriber/ApidaePeriodeQueryBuilderSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_tarifs/src/EventSubscriber/ApidaeTarifsNodePresaveSubscriber.php
modules/contrib/apidae_tourisme/apidae_tourisme_tarifs/src/EventSubscriber/ApidaeTarifsQueryBuilderSubscriber.php
modules/contrib/apidae_tourisme/src/ApidaeSync.php
modules/contrib/apidae_tourisme/src/Commands/Apidae.php
modules/contrib/apidae_tourisme/src/Controller/ApidaeController.php
modules/contrib/apidae_tourisme/src/Event/ApidaeNodePresaveEvent.php
modules/contrib/apidae_tourisme/src/Event/ApidaeQueryBuilderEvent.php
modules/contrib/apidae_tourisme/src/Form/ApidaeConfigForm.php

18 files with changes
=====================

1) modules/contrib/apidae_tourisme/src/Form/ApidaeConfigForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Apidae sync service.
    *
-   * @var \Drupal\apidae_tourisme\ApidaeSync
+   * @var ApidaeSync
    */
   protected $apidaeSync;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/apidae_tourisme/src/Event/ApidaeQueryBuilderEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\apidae_tourisme\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Event dispatched when the query is built, before it's execution.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/apidae_tourisme/src/Event/ApidaeNodePresaveEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\apidae_tourisme\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\node\Entity\Node;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event dispatched before the saving of a node.
@@ @@
   /**
    * The Node object.
    *
-   * @var \Drupal\node\Entity\Node
+   * @var Node
    */
   protected $node;

@@ @@
   /**
    * ApidaeNodePresaveEvent constructor.
    *
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    *   The node object.
    * @param array $apidaeObject
    *   The Apidae object.
@@ @@
   /**
    * Return the implicated node.
    *
-   * @return \Drupal\node\Entity\Node
+   * @return Node
    *   The Node object.
    */
   public function getNode() : Node {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/apidae_tourisme/src/Controller/ApidaeController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\apidae_tourisme\ApidaeSync definition.
    *
-   * @var \Drupal\apidae_tourisme\ApidaeSync
+   * @var ApidaeSync
    */
   protected $apidaeTourismeSync;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/apidae_tourisme/src/Commands/Apidae.php:7

    ---------- begin diff ----------
@@ @@
 class Apidae extends DrushCommands {

   /**
-   * @var \Drupal\apidae_tourisme\ApidaeSync
+   * @var ApidaeSync
    */
   protected $apidaeSync;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/apidae_tourisme/src/ApidaeSync.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\apidae_tourisme;

+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent;
 use Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent;
 use Drupal\Component\Serialization\Json;
@@ @@
   /**
    * GuzzleHttp\ClientInterface definition.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;

@@ @@
   /**
    * Module Handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Event Dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * State service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   private $state;

@@ @@
   /**
    * Logger chanel service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   private $logger;

@@ @@
   /**
    * Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private $messenger;

@@ @@
   /**
    * Entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * File System Service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   private $fileSystem;

@@ @@
   /**
    * Constructs a new ApidaeSync object.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   Guzzle client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler to check if i18n is enabled.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   Event dispatcher (@see ApidaeNodePresaveEvent, ApidaeQueryBuilderEvent).
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   Logger service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Messenger service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity Type Manager service.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system service.
    */
   public function __construct(ClientInterface $http_client, ConfigFactoryInterface $config_factory, CacheBackendInterface $cacheBackend, ModuleHandlerInterface $module_handler, EventDispatcherInterface $eventDispatcher, StateInterface $state, LoggerChannelFactoryInterface $loggerFactory, MessengerInterface $messenger, EntityTypeManagerInterface $entityTypeManager, FileSystemInterface $fileSystem) {
@@ @@
    * @return bool
    *   Sync result.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function sync($forceUpdate = FALSE, array $ids = []) {
     $this->state->set('apidae.last_sync', date('U'));
@@ @@
   /**
    * @param array $objetsTouristiquesQueryIds
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function deleteDeprecatedObjects(array $objetsTouristiquesQueryIds): void {
     $objetsTouristiquesWebsiteIds = \Drupal::database()
@@ @@
    * @param bool $forceUpdate
    *   If true, the update is forced, even if the content update is after.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function parseOject(array $apidaeObject, array &$results, $forceUpdate = FALSE) {
     $modificationDate = \DateTime::createFromFormat("Y-m-d\TH:i:s.uP", $apidaeObject['gestion']['dateModification']);
@@ @@
       $locales = [];
     }
     if (!$objet = $this->entityTypeManager->getStorage('node')->loadByProperties(['type' => 'objet_touristique', 'field_id_ws' => $apidaeObject['id']])) {
-      /** @var \Drupal\node\Entity\Node $objet */
+      /** @var Node $objet */
       $objet = Node::create([
         'field_id_ws' => $apidaeObject['id'],
         'langcode' => $this->langcode,
@@ @@
     else {
       $is_new = FALSE;
       $objet = array_pop($objet);
-      /** @var \Drupal\node\Entity\Node $objet */
+      /** @var Node $objet */
       if (!$forceUpdate && $objet->getChangedTime() > $modificationDate->format('U')) {
         $results['not_updated']++;
         return;
@@ @@
         }
         if ($data = file_get_contents($url)) {
           if ($this->mediaImageStyle !== NULL) {
-            $file = file_save_data($data, $temporarydDestination, FileSystemInterface::EXISTS_REPLACE);
+            $file = \Drupal::service('file.repository')->writeData($data, $temporarydDestination, FileSystemInterface::EXISTS_REPLACE);
             $style->createDerivative($temporarydDestination, $destination);
             unlink($temporarydDestination);
             $file->setFileUri($destination);
           }
           else {
-            $file = file_save_data($data, $destination, FileSystemInterface::EXISTS_REPLACE);
+            $file = \Drupal::service('file.repository')->writeData($data, $destination, FileSystemInterface::EXISTS_REPLACE);
           }
           $file->save();
           $files[] = [
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/apidae_tourisme/apidae_tourisme_tarifs/src/EventSubscriber/ApidaeTarifsQueryBuilderSubscriber.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the query.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent $event
+   * @param ApidaeQueryBuilderEvent $event
    *   The Event object.
    */
   public function alterQuery(ApidaeQueryBuilderEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/apidae_tourisme/apidae_tourisme_tarifs/src/EventSubscriber/ApidaeTarifsNodePresaveSubscriber.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * The main function to alter the node.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent $event
+   * @param ApidaeNodePresaveEvent $event
    *   The Event object.
    */
   public function nodeUpdate(ApidaeNodePresaveEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/apidae_tourisme/apidae_tourisme_periode/src/EventSubscriber/ApidaePeriodeQueryBuilderSubscriber.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the query.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent $event
+   * @param ApidaeQueryBuilderEvent $event
    *   The Event object.
    */
   public function alterQuery(ApidaeQueryBuilderEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/apidae_tourisme/apidae_tourisme_periode/src/EventSubscriber/ApidaePeriodePresaveSubscriber.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the node.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent $event
+   * @param ApidaeNodePresaveEvent $event
    *   The Event object.
    */
   public function nodeUpdate(ApidaeNodePresaveEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


11) modules/contrib/apidae_tourisme/apidae_tourisme_examples/src/EventSubscriber/ApidaeQueryBuilderSubscriber.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the query.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent $event
+   * @param ApidaeQueryBuilderEvent $event
    *   The Event object.
    */
   public function alterQuery(ApidaeQueryBuilderEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


12) modules/contrib/apidae_tourisme/apidae_tourisme_examples/src/EventSubscriber/ApidaeNodePresaveSubscriber.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the node.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent $event
+   * @param ApidaeNodePresaveEvent $event
    *   The Event object.
    */
   public function nodeUpdate(ApidaeNodePresaveEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


13) modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/Plugin/Field/FieldFormatter/ApidaeDate.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/EventSubscriber/ApidaeDateQueryBuilderSubscriber.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the query.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent $event
+   * @param ApidaeQueryBuilderEvent $event
    *   The Event object.
    */
   public function alterQuery(ApidaeQueryBuilderEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


15) modules/contrib/apidae_tourisme/apidae_tourisme_dates/src/EventSubscriber/ApidaeDatePresaveSubscriber.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the node.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent $event
+   * @param ApidaeNodePresaveEvent $event
    *   The Event object.
    */
   public function nodeUpdate(ApidaeNodePresaveEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


16) modules/contrib/apidae_tourisme/apidae_tourisme_criteres/src/EventSubscriber/ApidaeCritereQueryBuilderSubscriber.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The main function to alter the query.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeQueryBuilderEvent $event
+   * @param ApidaeQueryBuilderEvent $event
    *   The Event object.
    */
   public function alterQuery(ApidaeQueryBuilderEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


17) modules/contrib/apidae_tourisme/apidae_tourisme_criteres/src/EventSubscriber/ApidaeCritereNodePresaveSubscriber.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * The main function to alter the node.
    *
-   * @param \Drupal\apidae_tourisme\Event\ApidaeNodePresaveEvent $event
+   * @param ApidaeNodePresaveEvent $event
    *   The Event object.
    */
   public function nodeUpdate(ApidaeNodePresaveEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


18) modules/contrib/apidae_tourisme/apidae_tourisme.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\apidae_tourisme\ApidaeSync;
 /**
  * @file
  * Contains hooks for module apidae_tourisme.
  */
-
 /**
  * Implements hook_cron().
  *
@@ @@
  */
 function apidae_tourisme_cron() {
   if (\Drupal::config('apidae_tourisme.config')->get('enabled')) {
-    /** @var \Drupal\apidae_tourisme\ApidaeSync $apidaeService */
+    /** @var ApidaeSync $apidaeService */
     $apidaeService = \Drupal::service('apidae_tourisme.sync');
     $apidaeService->sync(FALSE);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [WARNING] 2 nodes were removed                                                 

 [OK] 18 files have been changed by Rector                                      

