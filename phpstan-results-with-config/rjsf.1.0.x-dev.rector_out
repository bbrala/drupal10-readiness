modules/contrib/rjsf/modules/rjsf_entity_autocomplete/rjsf_entity_autocomplete.module
modules/contrib/rjsf/modules/rjsf_entity_autocomplete/src/Plugin/Rjsf/Filter/EntityAutocomplete.php
modules/contrib/rjsf/modules/rjsf_entity_browser/rjsf_entity_browser.module
modules/contrib/rjsf/modules/rjsf_entity_browser/src/Plugin/EntityBrowser/Display/RjsfModal.php
modules/contrib/rjsf/modules/rjsf_example_widget/YOUR_MODULE.module
modules/contrib/rjsf/modules/rjsf_link/rjsf_link.module
modules/contrib/rjsf/modules/rjsf_link/src/Plugin/Rjsf/Filter/Link.php
modules/contrib/rjsf/modules/rjsf_rich_text/rjsf_rich_text.module
modules/contrib/rjsf/modules/rjsf_rich_text/src/Controller/RichTextController.php
modules/contrib/rjsf/modules/rjsf_rich_text/src/Plugin/jsonrpc/Method/RichTextFormats.php
modules/contrib/rjsf/rjsf.module
modules/contrib/rjsf/src/Annotation/RjsfFilter.php
modules/contrib/rjsf/src/Annotation/RjsfFormat.php
modules/contrib/rjsf/src/Annotation/RjsfRenderPreprocess.php
modules/contrib/rjsf/src/Element/RjsfEditor.php
modules/contrib/rjsf/src/Entity/RjsfEditorWidget.php
modules/contrib/rjsf/src/Entity/RjsfEditorWidgetInterface.php
modules/contrib/rjsf/src/Event/AddDefinitionsEvent.php
modules/contrib/rjsf/src/Event/EditorAttachEvent.php
modules/contrib/rjsf/src/Event/RjsfEvents.php
modules/contrib/rjsf/src/EventSubscriber/AddDefinitionSubscriber.php
modules/contrib/rjsf/src/Form/RjsfEditorWidgetDeleteForm.php
modules/contrib/rjsf/src/Form/RjsfEditorWidgetForm.php
modules/contrib/rjsf/src/Plugin/Field/FieldFormatter/RjsfEditorFormatter.php
modules/contrib/rjsf/src/Plugin/Field/FieldType/RjsfDataFieldItemList.php
modules/contrib/rjsf/src/Plugin/Field/FieldType/RjsfDataItem.php
modules/contrib/rjsf/src/Plugin/Field/FieldWidget/RjsfEditorWidget.php
modules/contrib/rjsf/src/Plugin/FilterPluginBase.php
modules/contrib/rjsf/src/Plugin/FilterPluginInterface.php
modules/contrib/rjsf/src/Plugin/FilterPluginManager.php
modules/contrib/rjsf/src/Plugin/FormatPluginBase.php
modules/contrib/rjsf/src/Plugin/FormatPluginInterface.php
modules/contrib/rjsf/src/Plugin/FormatPluginManager.php
modules/contrib/rjsf/src/Plugin/RenderPreprocessPluginBase.php
modules/contrib/rjsf/src/Plugin/RenderPreprocessPluginInterface.php
modules/contrib/rjsf/src/Plugin/RenderPreprocessPluginManager.php
modules/contrib/rjsf/src/Plugin/Rjsf/Filter/EntityType.php
modules/contrib/rjsf/src/Plugin/Rjsf/Filter/RichText.php
modules/contrib/rjsf/src/Plugin/Rjsf/Format/EntityReference.php
modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/EntityLoad.php
modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/EntityRender.php
modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/Link.php
modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/RichText.php
modules/contrib/rjsf/src/RenderPreprocessor.php
modules/contrib/rjsf/src/RjsfEditorWidgetAccessControlHandler.php
modules/contrib/rjsf/src/RjsfEditorWidgetHtmlRouteProvider.php
modules/contrib/rjsf/src/RjsfEditorWidgetListBuilder.php
modules/contrib/rjsf/src/RjsfValidator.php
modules/contrib/rjsf/src/Routing/RouteSubscriber.php

25 files with changes
=====================

1) modules/contrib/rjsf/src/RjsfValidator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf;

+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\rjsf\Plugin\FormatPluginInterface;
+use Drupal\rjsf\Plugin\FilterPluginInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Opis\JsonSchema\Schema;
 use Opis\JsonSchema\Uri;
@@ @@
   /**
    * The plugin manager for RJSF format plugins.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected PluginManagerInterface $formatManager;

@@ @@
   /**
    * The plugin manager for RJSF filter plugins.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected PluginManagerInterface $filterManager;

@@ @@
   /**
    * The JSON Schema validator service.
    *
-   * @var \Opis\JsonSchema\Validator
+   * @var Validator
    */
   protected Validator $validator;

@@ @@
   /**
    * Add the defined format and filter validation functions to the validator.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected function addValidationCallbacks() {
     $formatResolver = $this->validator->parser()->getFormatResolver();
     $filterResolver = $this->validator->parser()->getFilterResolver();

-    /** @var \Drupal\rjsf\Plugin\FormatPluginInterface[] $formats */
+    /** @var FormatPluginInterface[] $formats */
     $formats = $this->formatManager->getDefinitions();
     foreach ($formats as $plugin) {
       $instance = $this->formatManager->createInstance($plugin['id']);
@@ @@
       }
     }

-    /** @var \Drupal\rjsf\Plugin\FilterPluginInterface $filters */
+    /** @var FilterPluginInterface $filters */
     $filters = $this->filterManager->getDefinitions();
     foreach ($filters as $plugin) {
       $instance = $this->filterManager->createInstance($plugin['id']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/rjsf/src/RjsfEditorWidgetAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf;

+use Drupal\block\BlockInterface;
 use Drupal\Component\Plugin\Exception\ContextException;
 use Drupal\Component\Plugin\Exception\MissingValueContextException;
 use Drupal\Core\Access\AccessResult;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\block\BlockInterface $entity */
+    /** @var BlockInterface $entity */
     if ($operation != 'view') {
       return parent::checkAccess($entity, $operation, $account);
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/rjsf/src/RenderPreprocessor.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf;

+use Drupal\Core\Render\BubbleableMetadata;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\rjsf\Plugin\RenderPreprocessPluginInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Cache\CacheableMetadata;
@@ @@
   /**
    * The preprocess plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected PluginManagerInterface $pluginManager;

   /**
-   * @var \Drupal\Core\Cache\CacheableMetadata
+   * @var CacheableMetadata
    */
   protected CacheableMetadata $cacheableMetadata;

   /**
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;

@@ @@
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected LoggerInterface $logger;

@@ @@
     });

     if (!$context->isEmpty()) {
-      /** @var \Drupal\Core\Render\BubbleableMetadata $metadata */
+      /** @var BubbleableMetadata $metadata */
       $metadata = $context->pop();
       $cacheable = new CacheableMetadata();
       $cacheable->setCacheMaxAge($metadata->getCacheMaxAge());
@@ @@
    * @return array
    *   The processed value matching the original structure that was passed.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function doPreprocess(array $value, array $renderPreprocess, array $schema = [], array $uiSchema = []) {
     $processed = $value;
@@ @@
    * @return mixed
    *   The fully processed value.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected function applyPlugins($value, array $plugins, array $schema, array $uiSchema) {
     foreach ($plugins as $preprocessor) {
-      /** @var \Drupal\rjsf\Plugin\RenderPreprocessPluginInterface $plugin */
+      /** @var RenderPreprocessPluginInterface $plugin */
       $plugin = $this->pluginManager->createInstance($preprocessor['$plugin'], $preprocessor['$vars'] ?? []);
       // Pass the processed value so plugins can be chained.
       $value = $plugin->preprocess($value, $preprocessor['$vars'] ?? [], $schema, $uiSchema);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/RichText.php:16

    ---------- begin diff ----------
@@ @@
 class RichText extends RenderPreprocessPluginBase implements ContainerFactoryPluginInterface {

   /**
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/Link.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf\Plugin\Rjsf\RenderPreprocess;

+use Psr\Log\LoggerInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Logger\LoggerChannelTrait;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;

@@ @@
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/EntityRender.php:19

    ---------- begin diff ----------
@@ @@
   use LoggerChannelTrait;

   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;

   /**
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;

   /**
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected LoggerInterface $logger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/rjsf/src/Plugin/Rjsf/RenderPreprocess/EntityLoad.php:18

    ---------- begin diff ----------
@@ @@
   use LoggerChannelTrait;

   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/rjsf/src/Plugin/Rjsf/Format/EntityReference.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf\Plugin\Rjsf\Format;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * The selection plugin manager.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected SelectionPluginManagerInterface $selectionManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;

@@ @@
    *
    * @return bool
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    *
    * @see \Drupal\Core\Entity\Plugin\Validation\Constraint\ValidReferenceConstraintValidator
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/rjsf/src/Plugin/Rjsf/Filter/RichText.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf\Plugin\Rjsf\Filter;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\rjsf\Plugin\FilterPluginBase;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;

@@ @@
    * @param array $args
    *
    * @return bool
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    * @see \Drupal\Core\Entity\Plugin\Validation\Constraint\ValidReferenceConstraintValidator
    */
   public function validate($value, array $args = []): bool {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/rjsf/src/Plugin/Rjsf/Filter/EntityType.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The selection plugin manager.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected SelectionPluginManagerInterface $selectionManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/rjsf/src/Plugin/RenderPreprocessPluginInterface.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Get the cacheable metadata resulting from this preprocess.
    *
-   * @return \Drupal\Core\Cache\CacheableMetadata
+   * @return CacheableMetadata
    */
   public function getCacheableMetadata(): CacheableMetadata;

@@ @@
   /**
    * Set the cacheable metadata resulting from this preprocess.
    *
-   * @param \Drupal\Core\Cache\CacheableMetadata $cacheableMetadata
+   * @param CacheableMetadata $cacheableMetadata
    */
   public function setCacheableMetadata(CacheableMetadata $cacheableMetadata): void;

@@ @@
   /**
    * Merge cacheable metadata into the existing cacheable metadata.
    *
-   * @param \Drupal\Core\Cache\CacheableMetadata $cacheableMetadata
+   * @param CacheableMetadata $cacheableMetadata
    */
   public function mergeCacheableMetadata(CacheableMetadata $cacheableMetadata): void;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


12) modules/contrib/rjsf/src/Plugin/RenderPreprocessPluginBase.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The JSON Schema type that the plugin is valid for.
    *
-   * @var \Drupal\Core\Cache\CacheableMetadata
+   * @var CacheableMetadata
    */
   protected CacheableMetadata $cacheableMetadata;

@@ @@
   }

   /**
-   * @return \Drupal\Core\Cache\CacheableMetadata
+   * @return CacheableMetadata
    */
   public function getCacheableMetadata(): CacheableMetadata {
     return $this->cacheableMetadata;
@@ @@
   }

   /**
-   * @param \Drupal\Core\Cache\CacheableMetadata $cacheableMetadata
+   * @param CacheableMetadata $cacheableMetadata
    */
   public function setCacheableMetadata(CacheableMetadata $cacheableMetadata): void {
     $this->cacheableMetadata = $cacheableMetadata;
@@ @@
   }

   /**
-   * @param \Drupal\Core\Cache\CacheableMetadata $cacheableMetadata
+   * @param CacheableMetadata $cacheableMetadata
    */
   public function mergeCacheableMetadata(CacheableMetadata $cacheableMetadata): void {
     $this->cacheableMetadata = $this->cacheableMetadata->merge($cacheableMetadata);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/rjsf/src/Plugin/Field/FieldWidget/RjsfEditorWidget.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * Returns whether the widget used for default value form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/rjsf/src/EventSubscriber/AddDefinitionSubscriber.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Attach the various editor libraries and settings to the rjsf editor.
    *
-   * @param \Drupal\rjsf\Event\AddDefinitionsEvent $event
+   * @param AddDefinitionsEvent $event
    */
   public function rjsfDefinitions(AddDefinitionsEvent $event) {
     // @TODO populate the entity_reference definition.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


15) modules/contrib/rjsf/src/Event/EditorAttachEvent.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * The form state of the form the editor is being attached to.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected FormStateInterface $form_state;

@@ @@
    *   The RJSF form element.
    * @param array $form
    *    The form the editor is being attached to.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *    The form state of the form the editor is being attached to.
    */
   public function __construct(array $schema, array $ui_schema, array $element, array $form, FormStateInterface $form_state) {
@@ @@
   /**
    * Get the form state.
    *
-   * @return \Drupal\Core\Form\FormStateInterface
+   * @return FormStateInterface
    */
   public function getFormState() {
     return $this->form_state;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/rjsf/src/Event/AddDefinitionsEvent.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * The form state of the form the editor is being attached to.
    *
-   * @var \Drupal\Core\Form\FormStateInterface
+   * @var FormStateInterface
    */
   protected FormStateInterface $form_state;

@@ @@
    *   The RJSF form element.
    * @param array $form
    *    The form the editor is being attached to.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *    The form state of the form the editor is being attached to.
    */
   public function __construct(array $schema, array $ui_schema, array $element, array $form, FormStateInterface $form_state) {
@@ @@
   /**
    * Get the form state.
    *
-   * @return \Drupal\Core\Form\FormStateInterface
+   * @return FormStateInterface
    */
   public function getFormState() {
     return $this->form_state;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/rjsf/src/Element/RjsfEditor.php:119

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/rjsf/src/Annotation/RjsfRenderPreprocess.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


19) modules/contrib/rjsf/src/Annotation/RjsfFormat.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


20) modules/contrib/rjsf/src/Annotation/RjsfFilter.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


21) modules/contrib/rjsf/modules/rjsf_rich_text/src/Plugin/jsonrpc/Method/RichTextFormats.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The entity matcher.
    *
-   * @var \Drupal\Core\Entity\EntityAutocompleteMatcherInterface
+   * @var EntityAutocompleteMatcherInterface
    */
   protected EntityAutocompleteMatcherInterface $matcher;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected AccountProxyInterface $currentUser;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/rjsf/modules/rjsf_rich_text/src/Controller/RichTextController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The Editor plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $editorPluginManager;

@@ @@
   /**
    * Constructs a new QuickEditController.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $editor_plugin_manager
+   * @param PluginManagerInterface $editor_plugin_manager
    *   The editor plugin manager.
    */
   public function __construct(PluginManagerInterface $editor_plugin_manager) {
@@ @@
    * Given a list of in-place editor IDs as POST parameters, render AJAX
    * commands to load those in-place editors.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The Ajax response.
    */
   public function attachments(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/rjsf/modules/rjsf_link/src/Plugin/Rjsf/Filter/Link.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf_link\Plugin\Rjsf\Filter;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The selection plugin manager.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected SelectionPluginManagerInterface $selectionManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;

@@ @@
    * @return bool
    *   If the value is valid or not.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function validate($value, array $args = []): bool {
     $arrEntity = (array)($value->entity);
@@ @@
    * @TODO consolidate this with the same logic in EntityAutocomplete.
    * @see \Drupal\rjsf_entity_autocomplete\Plugin\Rjsf\Filter\EntityAutocomplete::validate()
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function checkEntity(object $value, array $handlerSettings) {
     $target_uuids[$value->type] ?? $target_uuids[$value->type] = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/rjsf/modules/rjsf_entity_browser/src/Plugin/EntityBrowser/Display/RjsfModal.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf_entity_browser\Plugin\EntityBrowser\Display;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\entity_browser\Plugin\EntityBrowser\Display\IFrame;
 use Drupal\image\Entity\ImageStyle;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;

 /**
  * Presents entity browser in a React Dialog Modal.
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function propagateSelection(FilterResponseEvent $event) {
+  public function propagateSelection(ResponseEvent $event) {
     $render = [
       '#attached' => [
         'library' => ['rjsf_entity_browser/' . $this->pluginDefinition['id'] . '_selection'],
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/rjsf/modules/rjsf_entity_autocomplete/src/Plugin/Rjsf/Filter/EntityAutocomplete.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rjsf_entity_autocomplete\Plugin\Rjsf\Filter;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * The selection plugin manager.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected SelectionPluginManagerInterface $selectionManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;

@@ @@
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface $selection_manager
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param SelectionPluginManagerInterface $selection_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition,SelectionPluginManagerInterface $selection_manager, EntityTypeManagerInterface $entity_type_manager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
@@ @@
    * @param array $args
    *
    * @return bool
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    * @see \Drupal\Core\Entity\Plugin\Validation\Constraint\ValidReferenceConstraintValidator
    */
   public function validate($value, array $args = []): bool {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 25 files have been changed by Rector                                      

