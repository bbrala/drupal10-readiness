modules/contrib/skins/skins.module
modules/contrib/skins/skins.post_update.php
modules/contrib/skins/src/Cache/Context/SkinCacheContext.php
modules/contrib/skins/src/Event/SkinsEvents.php
modules/contrib/skins/src/Event/SkinsTransformEvent.php
modules/contrib/skins/src/Form/ThemeSettings.php
modules/contrib/skins/src/Plugin/Condition/CurrentSkin.php
modules/contrib/skins/src/SkinHandler.php
modules/contrib/skins/src/SkinHandlerInterface.php
modules/contrib/skins/src/SkinManager.php
modules/contrib/skins/src/SkinManagerInterface.php
modules/contrib/skins/src/SkinTemplateSuggester.php
modules/contrib/skins/src/SkinTemplateSuggesterInterface.php

8 files with changes
====================

1) modules/contrib/skins/src/SkinTemplateSuggester.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The skins handler.
    *
-   * @var \Drupal\skins\SkinHandlerInterface
+   * @var SkinHandlerInterface
    */
   protected $skinsHandler;

@@ @@
   /**
    * Constructs a new SkinTemplateSuggester service.
    *
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\skins\SkinHandlerInterface $skins_handler
+   * @param SkinHandlerInterface $skins_handler
    *   The skins handler.
    */
   public function __construct(ThemeManagerInterface $theme_manager, ConfigFactoryInterface $config_factory, SkinHandlerInterface $skins_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/skins/src/SkinManager.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new SkinManager service.
    *
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(ThemeManagerInterface $theme_manager, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/skins/src/SkinHandler.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * The YAML discovery classes to find all .skins.yml files.
    *
-   * @var \Drupal\Core\Discovery\YamlDiscovery[]
+   * @var YamlDiscovery[]
    */
   protected $yamlDiscovery = [];

@@ @@
   /**
    * Constructs a new SkinHandler.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler, EventDispatcherInterface $event_dispatcher, TranslationInterface $string_translation) {
@@ @@
    * @param string $extension_type
    *   The extension type, either 'module' or 'theme'.
    *
-   * @return \Drupal\Core\Discovery\YamlDiscovery
+   * @return YamlDiscovery
    *   The YAML discovery.
    */
   protected function getYamlDiscovery($extension_type) {
@@ @@
       }
     }

-    $this->eventDispatcher->dispatch(SkinsEvents::TRANSFORM_BUILD, new SkinsTransformEvent($all_skins));
+    $this->eventDispatcher->dispatch(new SkinsTransformEvent($all_skins), SkinsEvents::TRANSFORM_BUILD);

     return $all_skins;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/skins/src/Plugin/Condition/CurrentSkin.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * The skin manager.
    *
-   * @var \Drupal\skins\SkinManagerInterface
+   * @var SkinManagerInterface
    */
   protected $skinManager;

@@ @@
   /**
    * The skin handler.
    *
-   * @var \Drupal\skins\SkinHandlerInterface
+   * @var SkinHandlerInterface
    */
   protected $skinHandler;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\skins\SkinManagerInterface $skin_manager
+   * @param SkinManagerInterface $skin_manager
    *   The skin manager.
-   * @param \Drupal\skins\SkinHandlerInterface $skin_handler
+   * @param SkinHandlerInterface $skin_handler
    *   The skin handler.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ThemeHandlerInterface $theme_handler, SkinManagerInterface $skin_manager, SkinHandlerInterface $skin_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/skins/src/Form/ThemeSettings.php:43

    ---------- begin diff ----------
@@ @@
       if ($skin_id === $element['#default_value']) {
         $wrapper_classes[] = 'theme-default';
       }
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
       $screenshot = [
         '#theme' => 'image',
-        '#uri' => drupal_get_path($skin['provider_type'], $skin['provider']) . '/' . $skin['screenshot'],
+        '#uri' => \Drupal::service('extension.path.resolver')->getPath($skin['provider_type'], $skin['provider']) . '/' . $skin['screenshot'],
         '#alt' => t('Skin preview: @skin_id', ['@skin_id' => $skin['name']]),
         '#title' => t('Skin preview: @skin_id', ['@skin_id' => $skin['name']]),
         '#attributes' => new Attribute(['class' => ['screenshot']]),
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/skins/src/Event/SkinsTransformEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\skins\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class SkinsTransformEvent.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/skins/src/Cache/Context/SkinCacheContext.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The theme manager.
    *
-   * @var \Drupal\skins\SkinManagerInterface
+   * @var SkinManagerInterface
    */
   protected $skinManager;

@@ @@
   /**
    * Constructs a new SkinCacheContext service.
    *
-   * @param \Drupal\skins\SkinManagerInterface $skin_manager
+   * @param SkinManagerInterface $skin_manager
    *   The theme manager.
    */
   public function __construct(SkinManagerInterface $skin_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/skins/skins.module:63

    ---------- begin diff ----------
@@ @@
       $theme_screenshot_uri = $info['screenshot'];
     }
     else {
-      $theme_screenshot_uri = drupal_get_path('module', 'system') . '/images/no_screenshot.png';
+      $theme_screenshot_uri = \Drupal::service('extension.list.module')->getPath('system') . '/images/no_screenshot.png';
     }

     $form['#submit'][] = [ThemeSettings::class, 'submit'];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 8 files have been changed by Rector                                       

