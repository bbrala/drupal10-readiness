diff --git a/smartwaiver.info.yml b/smartwaiver.info.yml
index 7910129..6cd139e 100644
--- a/smartwaiver.info.yml
+++ b/smartwaiver.info.yml
@@ -1,8 +1,7 @@
 name: Smartwaiver
 type: module
 description: Smartwaiver integration for Drupal
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: Custom
 
 dependencies:
diff --git a/src/Controller/DefaultController.php b/src/Controller/DefaultController.php
index a6ba810..1fb8dcf 100644
--- a/src/Controller/DefaultController.php
+++ b/src/Controller/DefaultController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\smartwaiver\Controller;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Symfony\Component\HttpFoundation\Request;
@@ -17,21 +18,21 @@ class DefaultController extends ControllerBase {
   /**
    * The smartwaiver client api service.
    *
-   * @var \Drupal\smartwaiver\ClientInterface;
+   * @var ClientInterface ;
    */
   protected $client;
 
   /**
    * The immutable smartwaiver config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The immutable smartwaiver config object.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -83,7 +84,7 @@ class DefaultController extends ControllerBase {
 
     if ($waiver && $this->isActiveWaiver($waiver)) {
       $event = $this->newEvent($waiver);
-      $this->eventDispatcher->dispatch(SmartwaiverEvent::NEW_WAIVER, $event);
+      $this->eventDispatcher->dispatch($event, SmartwaiverEvent::NEW_WAIVER);
     }
   }
 
diff --git a/src/Event/SmartwaiverEvent.php b/src/Event/SmartwaiverEvent.php
index a213891..8eb7897 100644
--- a/src/Event/SmartwaiverEvent.php
+++ b/src/Event/SmartwaiverEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\smartwaiver\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 class SmartwaiverEvent extends Event {
 
diff --git a/src/Form/ListConfigForm.php b/src/Form/ListConfigForm.php
index ba75852..2d870be 100644
--- a/src/Form/ListConfigForm.php
+++ b/src/Form/ListConfigForm.php
@@ -14,7 +14,7 @@ class ListConfigForm extends ConfigFormBase {
   /**
    * The smartwaiver client.
    *
-   * @var \Drupal\smartwaiver\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
diff --git a/src/Service/AuthenticWebhook.php b/src/Service/AuthenticWebhook.php
index 594affb..5d9a126 100644
--- a/src/Service/AuthenticWebhook.php
+++ b/src/Service/AuthenticWebhook.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\smartwaiver\Service;
 
+use Drupal\Core\Config\Config;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Access\AccessResult;
@@ -18,21 +20,21 @@ class AuthenticWebhook implements AccessInterface {
   /**
    * The key repository service.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;
 
   /**
    * The smartwaiver config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * A logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -59,7 +61,7 @@ class AuthenticWebhook implements AccessInterface {
   /**
    * Whether a given smartwaiver webhook request is authentic.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return bool
diff --git a/src/Service/Client.php b/src/Service/Client.php
index 25290dc..6b18e85 100644
--- a/src/Service/Client.php
+++ b/src/Service/Client.php
@@ -27,21 +27,21 @@ class Client implements ClientInterface {
   /**
    * A config factory instance.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * The immutable smartwaiver config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * An array of options to send with the http request.
    *
-   * @var \Symfony\Component\HttpFoundation\ParameterBag
+   * @var ParameterBag
    */
   protected $options;
 
