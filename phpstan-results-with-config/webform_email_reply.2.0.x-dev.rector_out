modules/contrib/webform_email_reply/src/Controller/DefaultController.php
modules/contrib/webform_email_reply/src/Form/WebformEmailReplyForm.php
modules/contrib/webform_email_reply/webform_email_reply.install
modules/contrib/webform_email_reply/webform_email_reply.module

2 files with changes
====================

1) modules/contrib/webform_email_reply/src/Form/WebformEmailReplyForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_email_reply\Form;

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element;
@@ @@
   /**
    * The source entity.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;

@@ @@
   /**
    * Current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $current_user;

@@ @@
    *
    * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
    *   A webform submission.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public static function checkReplyAccess(WebformSubmissionInterface $webform_submission, AccountInterface $account) {
@@ @@
     return $form;
   }

-  public function validateForm(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
+  public function validateForm(array &$form, FormStateInterface $form_state) {
     $from_email = $form_state->getValue(['details', 'from_address']);
     if (!\Drupal::service('email.validator')->isValid($from_email)) {
       $form_state->setErrorByName('details][from_address', $this->t('The from email address, @email, is not valid. Please enter a valid email address.', [
@@ @@
         'filename' => $file->getFilename(),
         'filemime' => $file->getMimeType(),
         'filepath' => \Drupal::service('file_system')->realpath($file->getFileUri()),
-        '_uri' => file_create_url($file->getFileUri()),
+        '_uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()),
       ];
       $params['headers'] = [
         'MIME-Version' => '1.0',
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/webform_email_reply/src/Controller/DefaultController.php:4

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_email_reply\Controller;

+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\WebformRequestInterface;
@@ @@
   /**
    * Current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $current_user;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
    *
    * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
    *   A webform submission.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public static function checkReplyAccess(AccountInterface $account) {
@@ @@
       $file_display = 'none';
       if ($reply->fid) {
         $file = File::load($reply->fid);
-        $uri = file_create_url($file->getFileUri());
+        $uri = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
         // $file_display = [
         //   '#type' => 'link',
         //   '#title' => $this->t('View'),
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

