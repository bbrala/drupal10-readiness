diff --git a/social_post_twitter.module b/social_post_twitter.module
index 95d5b04..0a86e3d 100644
--- a/social_post_twitter.module
+++ b/social_post_twitter.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\social_post\Entity\SocialPost;
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Contains social_post_twitter.module.
@@ -48,7 +52,7 @@ function social_post_twitter_form_user_form_alter(&$form, FormStateInterface $fo
 /**
  * Check if the user is allowed to grant permission for autoposting.
  *
- * @param \Drupal\Core\Session\AccountInterface $current_user
+ * @param AccountInterface $current_user
  *   The current user.
  *
  * @return bool
@@ -70,17 +74,17 @@ function _social_post_twitter_can_grant_permission(AccountInterface $current_use
 /**
  * Creates elements to the user edit form.
  *
- * @param \Drupal\Core\Session\AccountInterface $current_user
+ * @param AccountInterface $current_user
  *   The current user.
  *
  * @return array
  *   The elements to add to the user edit form.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function _social_post_twitter_user_edit_form(AccountInterface $current_user): array {
-  /** @var \Drupal\social_post\Entity\SocialPost[] $accounts */
+  /** @var SocialPost[] $accounts */
   $accounts = _social_post_twitter_get_accounts_by_uid($current_user->id());
 
   $form['social_post_twitter'] = [
@@ -135,11 +139,11 @@ function _social_post_twitter_user_edit_form(AccountInterface $current_user): ar
  * @param int $user_id
  *   The user id.
  *
- * @return \Drupal\Core\Entity\EntityInterface[]
+ * @return EntityInterface[]
  *   Accounts associated to the user id.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function _social_post_twitter_get_accounts_by_uid(int $user_id): array {
   return Drupal::entityTypeManager()->getStorage('social_post')->loadByProperties([
diff --git a/src/Controller/TwitterPostController.php b/src/Controller/TwitterPostController.php
index 9a21be9..d67a89c 100644
--- a/src/Controller/TwitterPostController.php
+++ b/src/Controller/TwitterPostController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\social_post_twitter\Controller;
 
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\social_post_twitter\Plugin\Network\TwitterPost;
+use Abraham\TwitterOAuth\TwitterOAuth;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -21,61 +24,61 @@ class TwitterPostController extends ControllerBase {
   /**
    * The network plugin manager.
    *
-   * @var \Drupal\social_api\Plugin\NetworkManager
+   * @var NetworkManager
    */
   private $networkManager;
 
   /**
    * The Social Auth Data Handler.
    *
-   * @var \Drupal\social_post\DataHandler
+   * @var DataHandler
    */
   private $dataHandler;
 
   /**
    * Used to access GET parameters.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   private $request;
 
   /**
    * The logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * The social post manager.
    *
-   * @var \Drupal\social_post\User\UserManager
+   * @var UserManager
    */
   protected $userManager;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * TwitterAuthController constructor.
    *
-   * @param \Drupal\social_api\Plugin\NetworkManager $network_manager
+   * @param NetworkManager $network_manager
    *   Used to get an instance of social_post_twitter network plugin.
-   * @param \Drupal\social_post\User\UserManager $user_manager
+   * @param UserManager $user_manager
    *   Manages user login/registration.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Used to access GET parameters.
-   * @param \Drupal\social_post\DataHandler $data_handler
+   * @param DataHandler $data_handler
    *   The Social Post data handler.
-   * @param \Drupal\social_post\Entity\Controller\SocialPostListBuilder $list_builder
+   * @param SocialPostListBuilder $list_builder
    *   The Social Post entity list builder.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   Used for logging errors.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(NetworkManager $network_manager,
@@ -120,10 +123,10 @@ public static function create(ContainerInterface $container) {
    */
   public function redirectToProvider() {
     try {
-      /** @var \Drupal\social_post_twitter\Plugin\Network\TwitterPost $network_plugin */
+      /** @var TwitterPost $network_plugin */
       $network_plugin = $this->networkManager->createInstance('social_post_twitter');
 
-      /** @var \Abraham\TwitterOAuth\TwitterOAuth $client */
+      /** @var TwitterOAuth $client */
       $client = $network_plugin->getSdk();
 
       $request_token = $client->oauth('oauth/request_token', ['oauth_callback' => $network_plugin->getOauthCallback()]);
@@ -167,7 +170,7 @@ public function callback() {
       $oauth_token = $this->dataHandler->get('oauth_token');
       $oauth_token_secret = $this->dataHandler->get('oauth_token_secret');
 
-      /** @var \Abraham\TwitterOAuth\TwitterOAuth $client */
+      /** @var TwitterOAuth $client */
       $client = $this->networkManager->createInstance('social_post_twitter')->getSdk();
       $client->setOauthToken($oauth_token, $oauth_token_secret);
 
diff --git a/src/Plugin/Network/TwitterPost.php b/src/Plugin/Network/TwitterPost.php
index a59ae45..38c6519 100644
--- a/src/Plugin/Network/TwitterPost.php
+++ b/src/Plugin/Network/TwitterPost.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\social_post_twitter\Plugin\Network;
 
+use Drupal\social_post_twitter\Settings\TwitterPostSettings;
 use Abraham\TwitterOAuth\TwitterOAuth;
 use Drupal\Core\Url;
 use Drupal\social_api\SocialApiException;
@@ -33,7 +34,7 @@ protected function initSdk() {
       throw new SocialApiException(sprintf('The PHP SDK for Twitter could not be found. Class: %s.', $class_name));
     }
 
-    /** @var \Drupal\social_post_twitter\Settings\TwitterPostSettings $settings */
+    /** @var TwitterPostSettings $settings */
     $settings = $this->settings;
 
     return new TwitterOAuth($settings->getConsumerKey(), $settings->getConsumerSecret());
diff --git a/src/TwitterPostManager.php b/src/TwitterPostManager.php
index bc62fe5..b7e47e0 100644
--- a/src/TwitterPostManager.php
+++ b/src/TwitterPostManager.php
@@ -15,7 +15,7 @@ class TwitterPostManager implements TwitterPostManagerInterface {
   /**
    * The Twitter client.
    *
-   * @var \Abraham\TwitterOAuth\TwitterOAuth
+   * @var TwitterOAuth
    */
   protected $client;
 
diff --git a/src/TwitterPostManagerInterface.php b/src/TwitterPostManagerInterface.php
index ad2a07e..f186a1f 100644
--- a/src/TwitterPostManagerInterface.php
+++ b/src/TwitterPostManagerInterface.php
@@ -22,7 +22,7 @@ public function setOauthToken($oauth_token, $oauth_token_secret);
   /**
    * Sets the Twitter client.
    *
-   * @param \Abraham\TwitterOAuth\TwitterOAuth $client
+   * @param TwitterOAuth $client
    *   The API client.
    */
   public function setClient(TwitterOAuth $client);
diff --git a/tests/src/Functional/SocialPostTwitterSettingsFormTest.php b/tests/src/Functional/SocialPostTwitterSettingsFormTest.php
index 420e034..6a08909 100644
--- a/tests/src/Functional/SocialPostTwitterSettingsFormTest.php
+++ b/tests/src/Functional/SocialPostTwitterSettingsFormTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\social_post_twitter\Functional;
 
+use Behat\Mink\Exception\ElementNotFoundException;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\social_post\Functional\SocialPostTestBase;
 
 /**
@@ -41,8 +43,8 @@ public function testIsAvailableInIntegrationList() {
   /**
    * Test if permissions are set correctly for settings page.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ElementNotFoundException
+   * @throws ExpectationException
    */
   public function testPermissionForSettingsPage() {
     $this->checkPermissionForSettingsPage();
@@ -50,6 +52,7 @@ public function testPermissionForSettingsPage() {
 
   /**
    * Test settings form submission.
+   * @doesNotPerformAssertions
    */
   public function testSettingsFormSubmission() {
     $this->edit = [
