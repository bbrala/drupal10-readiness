diff --git a/entity_normalization_normalizers/src/Normalizer/DateTimeToEpochNormalizer.php b/entity_normalization_normalizers/src/Normalizer/DateTimeToEpochNormalizer.php
index d514b39..d83bd15 100644
--- a/entity_normalization_normalizers/src/Normalizer/DateTimeToEpochNormalizer.php
+++ b/entity_normalization_normalizers/src/Normalizer/DateTimeToEpochNormalizer.php
@@ -15,7 +15,7 @@ class DateTimeToEpochNormalizer implements NormalizerInterface {
    * {@inheritdoc}
    */
   public function normalize($data, $format = NULL, array $context = []) {
-    /** @var \Drupal\datetime\Plugin\Field\FieldType\DateTimeItem $data */
+    /** @var DateTimeItem $data */
     $date = new DateTime($data->getValue()['value']);
     return (int) $date->format('U');
   }
diff --git a/entity_normalization_normalizers/src/Normalizer/EntityUrlNormalizer.php b/entity_normalization_normalizers/src/Normalizer/EntityUrlNormalizer.php
index c5daa17..f0bbaa9 100644
--- a/entity_normalization_normalizers/src/Normalizer/EntityUrlNormalizer.php
+++ b/entity_normalization_normalizers/src/Normalizer/EntityUrlNormalizer.php
@@ -14,8 +14,7 @@ class EntityUrlNormalizer implements NormalizerInterface {
    * {@inheritdoc}
    */
   public function normalize($object, $format = NULL, array $context = []) {
-    /** @var \Drupal\Core\Entity\EntityInterface $object */
-
+    /** @var EntityInterface $object */
     return $object->toUrl()->toString(TRUE)->getGeneratedUrl();
   }
 
diff --git a/entity_normalization_normalizers/src/Normalizer/NodeTypeNormalizer.php b/entity_normalization_normalizers/src/Normalizer/NodeTypeNormalizer.php
index dc935b8..9dc8f05 100644
--- a/entity_normalization_normalizers/src/Normalizer/NodeTypeNormalizer.php
+++ b/entity_normalization_normalizers/src/Normalizer/NodeTypeNormalizer.php
@@ -14,7 +14,7 @@ class NodeTypeNormalizer implements NormalizerInterface {
    * {@inheritdoc}
    */
   public function normalize($object, $format = NULL, array $context = []) {
-    /** @var \Drupal\node\NodeTypeInterface $object */
+    /** @var NodeTypeInterface $object */
     return $object->id();
   }
 
diff --git a/entity_normalization_normalizers/src/Normalizer/RichTextNormalizer.php b/entity_normalization_normalizers/src/Normalizer/RichTextNormalizer.php
index db8ed89..044f492 100644
--- a/entity_normalization_normalizers/src/Normalizer/RichTextNormalizer.php
+++ b/entity_normalization_normalizers/src/Normalizer/RichTextNormalizer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_normalization_normalizers\Normalizer;
 
+use Drupal\text\Plugin\Field\FieldType\TextItemBase;
 use Drupal\text\Plugin\Field\FieldType\TextLongItem;
 use Drupal\text\Plugin\Field\FieldType\TextWithSummaryItem;
 use Symfony\Component\Serializer\Normalizer\NormalizerInterface;
@@ -15,7 +16,7 @@ class RichTextNormalizer implements NormalizerInterface {
    * {@inheritdoc}
    */
   public function normalize($object, $format = NULL, array $context = []) {
-    /** @var \Drupal\text\Plugin\Field\FieldType\TextItemBase $object */
+    /** @var TextItemBase $object */
     return $object->getValue()['value'];
   }
 
diff --git a/entity_normalization_normalizers/src/Normalizer/TermParentIdNormalizer.php b/entity_normalization_normalizers/src/Normalizer/TermParentIdNormalizer.php
index 1cd6619..3e581e6 100644
--- a/entity_normalization_normalizers/src/Normalizer/TermParentIdNormalizer.php
+++ b/entity_normalization_normalizers/src/Normalizer/TermParentIdNormalizer.php
@@ -14,8 +14,7 @@ class TermParentIdNormalizer implements NormalizerInterface {
    * {@inheritdoc}
    */
   public function normalize($object, $format = NULL, array $context = []) {
-    /** @var \Drupal\taxonomy\TermInterface $object */
-
+    /** @var TermInterface $object */
     $result = 0;
     if (!empty($object->parents)) {
       $result = (int) $object->parents[0];
diff --git a/entity_normalization_normalizers/tests/src/Unit/Normalizer/DateTimeToEpochNormalizerTest.php b/entity_normalization_normalizers/tests/src/Unit/Normalizer/DateTimeToEpochNormalizerTest.php
index 7e35d72..178415e 100644
--- a/entity_normalization_normalizers/tests/src/Unit/Normalizer/DateTimeToEpochNormalizerTest.php
+++ b/entity_normalization_normalizers/tests/src/Unit/Normalizer/DateTimeToEpochNormalizerTest.php
@@ -15,14 +15,14 @@ class DateTimeToEpochNormalizerTest extends UnitTestCase {
   /**
    * The normalizer to test.
    *
-   * @var \Drupal\entity_normalization_normalizers\Normalizer\DateTimeToEpochNormalizer
+   * @var DateTimeToEpochNormalizer
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->normalizer = new DateTimeToEpochNormalizer();
   }
 
diff --git a/entity_normalization_normalizers/tests/src/Unit/Normalizer/EntityUrlNormalizerTest.php b/entity_normalization_normalizers/tests/src/Unit/Normalizer/EntityUrlNormalizerTest.php
index 959b3bf..39ead11 100644
--- a/entity_normalization_normalizers/tests/src/Unit/Normalizer/EntityUrlNormalizerTest.php
+++ b/entity_normalization_normalizers/tests/src/Unit/Normalizer/EntityUrlNormalizerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_normalization_normalizers\Unit\Normalizer;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\GeneratedUrl;
 use Drupal\Core\Url;
@@ -14,17 +15,18 @@ use Drupal\Tests\UnitTestCase;
  */
 class EntityUrlNormalizerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The normalizer to test.
    *
-   * @var \Drupal\entity_normalization_normalizers\Normalizer\EntityUrlNormalizer
+   * @var EntityUrlNormalizer
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->normalizer = new EntityUrlNormalizer();
   }
 
diff --git a/entity_normalization_normalizers/tests/src/Unit/Normalizer/NodeTypeNormalizerTest.php b/entity_normalization_normalizers/tests/src/Unit/Normalizer/NodeTypeNormalizerTest.php
index 49ed2b9..f65b5ad 100644
--- a/entity_normalization_normalizers/tests/src/Unit/Normalizer/NodeTypeNormalizerTest.php
+++ b/entity_normalization_normalizers/tests/src/Unit/Normalizer/NodeTypeNormalizerTest.php
@@ -15,14 +15,14 @@ class NodeTypeNormalizerTest extends UnitTestCase {
   /**
    * The normalizer to test.
    *
-   * @var \Drupal\entity_normalization_normalizers\Normalizer\NodeTypeNormalizer
+   * @var NodeTypeNormalizer
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->normalizer = new NodeTypeNormalizer();
   }
 
diff --git a/entity_normalization_normalizers/tests/src/Unit/Normalizer/NullNormalizerTest.php b/entity_normalization_normalizers/tests/src/Unit/Normalizer/NullNormalizerTest.php
index 34bc0c5..4c97818 100644
--- a/entity_normalization_normalizers/tests/src/Unit/Normalizer/NullNormalizerTest.php
+++ b/entity_normalization_normalizers/tests/src/Unit/Normalizer/NullNormalizerTest.php
@@ -14,14 +14,14 @@ class NullNormalizerTest extends UnitTestCase {
   /**
    * The normalizer to test.
    *
-   * @var \Drupal\entity_normalization_normalizers\Normalizer\NullNormalizer
+   * @var NullNormalizer
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->normalizer = new NullNormalizer();
   }
 
diff --git a/entity_normalization_normalizers/tests/src/Unit/Normalizer/RichTextNormalizerTest.php b/entity_normalization_normalizers/tests/src/Unit/Normalizer/RichTextNormalizerTest.php
index 1234e3d..73f6484 100644
--- a/entity_normalization_normalizers/tests/src/Unit/Normalizer/RichTextNormalizerTest.php
+++ b/entity_normalization_normalizers/tests/src/Unit/Normalizer/RichTextNormalizerTest.php
@@ -17,14 +17,14 @@ class RichTextNormalizerTest extends UnitTestCase {
   /**
    * The normalizer to test.
    *
-   * @var \Drupal\entity_normalization_normalizers\Normalizer\RichTextNormalizer
+   * @var RichTextNormalizer
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->normalizer = new RichTextNormalizer();
   }
 
diff --git a/entity_normalization_normalizers/tests/src/Unit/Normalizer/TermParentIdNormalizerTest.php b/entity_normalization_normalizers/tests/src/Unit/Normalizer/TermParentIdNormalizerTest.php
index 1564816..5656519 100644
--- a/entity_normalization_normalizers/tests/src/Unit/Normalizer/TermParentIdNormalizerTest.php
+++ b/entity_normalization_normalizers/tests/src/Unit/Normalizer/TermParentIdNormalizerTest.php
@@ -15,14 +15,14 @@ class TermParentIdNormalizerTest extends UnitTestCase {
   /**
    * The normalizer to test.
    *
-   * @var \Drupal\entity_normalization_normalizers\Normalizer\TermParentIdNormalizer
+   * @var TermParentIdNormalizer
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->normalizer = new TermParentIdNormalizer();
   }
 
diff --git a/src/EntityConfig.php b/src/EntityConfig.php
index 763020f..ee3b2e1 100644
--- a/src/EntityConfig.php
+++ b/src/EntityConfig.php
@@ -12,7 +12,7 @@ class EntityConfig extends PluginBase implements EntityConfigInterface {
   /**
    * A list of field configurations.
    *
-   * @var \Drupal\entity_normalization\FieldConfigInterface[]
+   * @var FieldConfigInterface[]
    */
   protected $fields;
 
diff --git a/src/EntityConfigInterface.php b/src/EntityConfigInterface.php
index ad87945..338798d 100644
--- a/src/EntityConfigInterface.php
+++ b/src/EntityConfigInterface.php
@@ -35,7 +35,7 @@ interface EntityConfigInterface {
   /**
    * Gets a list of field definitions.
    *
-   * @return \Drupal\entity_normalization\FieldConfigInterface[]
+   * @return FieldConfigInterface[]
    *   List of field definitions.
    */
   public function getFields();
diff --git a/src/EntityNormalizationManager.php b/src/EntityNormalizationManager.php
index b8e1eaf..6f71b8e 100644
--- a/src/EntityNormalizationManager.php
+++ b/src/EntityNormalizationManager.php
@@ -29,9 +29,9 @@ class EntityNormalizationManager extends DefaultPluginManager implements EntityN
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend.
    */
   public function __construct(ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
diff --git a/src/EntityNormalizationManagerInterface.php b/src/EntityNormalizationManagerInterface.php
index e982a7b..7951f54 100644
--- a/src/EntityNormalizationManagerInterface.php
+++ b/src/EntityNormalizationManagerInterface.php
@@ -12,7 +12,7 @@ interface EntityNormalizationManagerInterface {
   /**
    * Is there is a configuration for the given entity and normalization format.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    * @param string|null $format
    *   Format the normalization result will be encoded as.
@@ -25,12 +25,12 @@ interface EntityNormalizationManagerInterface {
   /**
    * Gets the configuration for a given entity and normalization format.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity.
    * @param string|null $format
    *   Format the normalization result will be encoded as.
    *
-   * @return \Drupal\entity_normalization\EntityConfigInterface|null
+   * @return EntityConfigInterface|null
    *   The configuration or NULL when not found.
    */
   public function getEntityConfig(FieldableEntityInterface $entity, $format = NULL);
diff --git a/src/Normalizer/EntityConfigNormalizer.php b/src/Normalizer/EntityConfigNormalizer.php
index dd56986..92b4ee8 100644
--- a/src/Normalizer/EntityConfigNormalizer.php
+++ b/src/Normalizer/EntityConfigNormalizer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_normalization\Normalizer;
 
+use Symfony\Component\Serializer\Normalizer\NormalizerInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\entity_normalization\EntityNormalizationManagerInterface;
 use Drupal\serialization\Normalizer\NormalizerBase;
@@ -24,23 +25,23 @@ class EntityConfigNormalizer extends NormalizerBase implements NormalizerAwareIn
   /**
    * The service container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;
 
   /**
    * The plugin manager for entity normalization definitions.
    *
-   * @var \Drupal\entity_normalization\EntityNormalizationManagerInterface
+   * @var EntityNormalizationManagerInterface
    */
   protected $normalizationManager;
 
   /**
    * Constructor.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The current service container.
-   * @param \Drupal\entity_normalization\EntityNormalizationManagerInterface $normalizationManager
+   * @param EntityNormalizationManagerInterface $normalizationManager
    *   The plugin manager for entity normalization definitions.
    */
   public function __construct(ContainerInterface $container, EntityNormalizationManagerInterface $normalizationManager) {
@@ -52,8 +53,7 @@ class EntityConfigNormalizer extends NormalizerBase implements NormalizerAwareIn
    * {@inheritdoc}
    */
   public function normalize($object, $format = NULL, array $context = []) {
-    /** @var \Drupal\Core\Entity\FieldableEntityInterface $object */
-
+    /** @var FieldableEntityInterface $object */
     $config = $this->normalizationManager->getEntityConfig($object, $format);
 
     $result = [];
@@ -92,7 +92,7 @@ class EntityConfigNormalizer extends NormalizerBase implements NormalizerAwareIn
     }
 
     foreach ($config->getNormalizers() as $normalizer) {
-      /** @var \Symfony\Component\Serializer\Normalizer\NormalizerInterface $n */
+      /** @var NormalizerInterface $n */
       $n = $this->container->get($normalizer);
       if ($n->supportsNormalization($object, $format)) {
         $result = array_merge($result, $n->normalize($object, $format, $context));
diff --git a/src/Normalizer/FieldItemListNormalizer.php b/src/Normalizer/FieldItemListNormalizer.php
index 16c5952..5013572 100644
--- a/src/Normalizer/FieldItemListNormalizer.php
+++ b/src/Normalizer/FieldItemListNormalizer.php
@@ -28,14 +28,14 @@ class FieldItemListNormalizer extends NormalizerBase implements ContextAwareNorm
   /**
    * The service container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;
 
   /**
    * Constructor.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The current service container.
    */
   public function __construct(ContainerInterface $container) {
@@ -46,8 +46,7 @@ class FieldItemListNormalizer extends NormalizerBase implements ContextAwareNorm
    * {@inheritdoc}
    */
   public function normalize($object, $format = NULL, array $context = []) {
-    /** @var \Drupal\Core\Field\FieldItemListInterface $object */
-
+    /** @var FieldItemListInterface $object */
     $fieldDefinition = $object->getFieldDefinition();
 
     $nName = $context['field_config']->getNormalizerName();
diff --git a/src/Normalizer/FieldItemNormalizer.php b/src/Normalizer/FieldItemNormalizer.php
index 557625c..a9cee98 100644
--- a/src/Normalizer/FieldItemNormalizer.php
+++ b/src/Normalizer/FieldItemNormalizer.php
@@ -29,8 +29,7 @@ class FieldItemNormalizer extends DefaultFieldItemNormalizer implements ContextA
    * {@inheritdoc}
    */
   public function normalize($object, $format = NULL, array $context = []) {
-    /** @var \Drupal\Core\Field\FieldItemInterface $object */
-
+    /** @var FieldItemInterface $object */
     if ($object instanceof StringItem
       || $object instanceof ListStringItem
       || $object instanceof DateTimeItem
@@ -54,7 +53,7 @@ class FieldItemNormalizer extends DefaultFieldItemNormalizer implements ContextA
         'alt' => $object->get('alt')->getValue(),
         'title' => $object->get('title')->getValue(),
         // @todo find a way to speed up the url generation, this takes more than 30% of the time.
-        'url' => file_create_url($object->entity->getFileUri()),
+        'url' => \Drupal::service('file_url_generator')->generateAbsoluteString($object->entity->getFileUri()),
       ];
       return $normalizedValue;
     }
diff --git a/tests/src/Unit/EntityNormalizationManagerTest.php b/tests/src/Unit/EntityNormalizationManagerTest.php
index 0d7cf31..7c65535 100644
--- a/tests/src/Unit/EntityNormalizationManagerTest.php
+++ b/tests/src/Unit/EntityNormalizationManagerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\entity_normalization\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Prophecy\Prophecy\ObjectProphecy;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\entity_normalization\EntityNormalizationManager;
@@ -18,24 +20,25 @@ use ReflectionClass;
  */
 class EntityNormalizationManagerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\Prophecy\Prophecy\ObjectProphecy
+   * @var ModuleHandlerInterface|ObjectProphecy
    */
   protected $moduleHandler;
 
   /**
    * Cache backend instance.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface|\Prophecy\Prophecy\ObjectProphecy
+   * @var CacheBackendInterface|ObjectProphecy
    */
   protected $cacheBackend;
 
   /**
    * The entity normalization manager.
    *
-   * @var \Drupal\entity_normalization\EntityNormalizationManager
+   * @var EntityNormalizationManager
    */
   protected $entityNormalizationManager;
 
@@ -93,7 +96,7 @@ class EntityNormalizationManagerTest extends UnitTestCase {
    * @param string $bundle
    *   Entity bundle.
    *
-   * @return \Drupal\node\NodeInterface
+   * @return NodeInterface
    *   The mocked entity.
    */
   private function getMockedEntity($type, $bundle) {
diff --git a/tests/src/Unit/FieldItemNormalizerTest.php b/tests/src/Unit/FieldItemNormalizerTest.php
index e0e3e21..2215e18 100644
--- a/tests/src/Unit/FieldItemNormalizerTest.php
+++ b/tests/src/Unit/FieldItemNormalizerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\entity_normalization\Unit\Normalizer;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Field\FieldItemInterface;
 use Drupal\entity_normalization\FieldConfigInterface;
 use Drupal\entity_normalization\Normalizer\FieldItemNormalizer;
@@ -13,17 +14,18 @@ use Drupal\Tests\UnitTestCase;
  */
 class FieldItemNormalizerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The normalizer to test.
    *
-   * @var \Drupal\entity_normalization\Normalizer\FieldItemNormalizer
+   * @var FieldItemNormalizer
    */
   protected $normalizer;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->normalizer = new FieldItemNormalizer();
   }
 
