diff --git a/src/Access/CustomAccessCheck.php b/src/Access/CustomAccessCheck.php
index 9481b61..ed7008a 100644
--- a/src/Access/CustomAccessCheck.php
+++ b/src/Access/CustomAccessCheck.php
@@ -21,11 +21,10 @@ class CustomAccessCheck implements AccessInterface {
    * consumer' permission.
    *
    * @param \Drupal\Core\User\UserInterface
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    * @return bool
    */
-
   public function access(UserInterface $user, AccountInterface $account) {
     return AccessResult::allowedIfHasPermission($account, 'administer consumers')
       ->orIf(
diff --git a/src/Authentication/Provider/OAuthDrupalProvider.php b/src/Authentication/Provider/OAuthDrupalProvider.php
index 09d93ea..99e589a 100644
--- a/src/Authentication/Provider/OAuthDrupalProvider.php
+++ b/src/Authentication/Provider/OAuthDrupalProvider.php
@@ -7,12 +7,12 @@
 
 namespace Drupal\oauth\Authentication\Provider;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
 use Drupal\user\Entity\User;
 use Drupal\user\UserDataInterface;
 use Psr\Log\LoggerInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use \OauthProvider;
 use \OauthException;
 /**
@@ -23,14 +23,14 @@ class OAuthDrupalProvider implements AuthenticationProviderInterface {
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $user_data;
 
   /**
    * The logger service for OAuth.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -46,7 +46,7 @@ class OAuthDrupalProvider implements AuthenticationProviderInterface {
    *
    * @param \Drupal\user\UserDataInterface
    *  The user data service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service for OAuth.
    */
   public function __construct(UserDataInterface $user_data, LoggerInterface $logger) {
@@ -99,7 +99,7 @@ class OAuthDrupalProvider implements AuthenticationProviderInterface {
   /**
    * {@inheritdoc}
    */
-  public function handleException(GetResponseForExceptionEvent $event) {
+  public function handleException(ExceptionEvent $event) {
     return FALSE;
   }
 
diff --git a/src/Controller/OAuthController.php b/src/Controller/OAuthController.php
index 894d0c6..b822a71 100644
--- a/src/Controller/OAuthController.php
+++ b/src/Controller/OAuthController.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\oauth\Controller;
 
+use Drupal\user\UserData;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Drupal\Core\Utility\LinkGeneratorInterface;
@@ -23,24 +24,24 @@ class OAuthController extends ControllerBase implements ContainerInjectionInterf
   /**
    * The URL generator service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;
 
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserData
+   * @var UserData
    */
   protected $user_data;
 
   /**
    * Constructs an OauthController object.
    *
-   * @param \Drupal\user\UserDataInterface $user_data
+   * @param UserDataInterface $user_data
    *   The user data service.
    *
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The link generator service.
    */
   public function __construct(UserDataInterface $user_data, LinkGeneratorInterface $link_generator) {
@@ -52,10 +53,10 @@ class OAuthController extends ControllerBase implements ContainerInjectionInterf
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\user\UserDataInterface $user_data */
+    /** @var UserDataInterface $user_data */
     $user_data = $container->get('user.data');
 
-    /** @var \Drupal\Core\Utility\LinkGeneratorInterface $link_generator */
+    /** @var LinkGeneratorInterface $link_generator */
     $link_generator = $container->get('link_generator');
 
     return new static($user_data, $link_generator);
@@ -64,7 +65,7 @@ class OAuthController extends ControllerBase implements ContainerInjectionInterf
   /**
    * Returns the list of consumers for a user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   A user account object.
    *
    * @return string
diff --git a/src/Form/OAuthAddConsumerForm.php b/src/Form/OAuthAddConsumerForm.php
index eafe607..f4ca9cc 100644
--- a/src/Form/OAuthAddConsumerForm.php
+++ b/src/Form/OAuthAddConsumerForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\oauth\Form;
 
+use Drupal\user\UserData;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -25,14 +26,14 @@ class OAuthAddConsumerForm extends FormBase {
   /**
    * The current user service.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserData
+   * @var UserData
    */
   protected $user_data;
 
@@ -41,10 +42,10 @@ class OAuthAddConsumerForm extends FormBase {
    */
   public static function create(ContainerInterface $container) {
 
-    /** @var \Drupal\Core\Session\AccountProxyInterface $current_user */
+    /** @var AccountProxyInterface $current_user */
     $current_user = $container->get('current_user');
 
-    /** @var \Drupal\user\UserDataInterface $user_data */
+    /** @var UserDataInterface $user_data */
     $user_data = $container->get('user.data');
     return new static($current_user, $user_data);
   }
@@ -58,9 +59,9 @@ class OAuthAddConsumerForm extends FormBase {
 
   /**
    * {@inheritdoc}
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user service.
-   * @param \Drupal\user\UserDataInterface $user_data
+   * @param UserDataInterface $user_data
    *  The user data service.
    */
   public function __construct(AccountProxyInterface $account, UserDataInterface $user_data) {
@@ -89,8 +90,8 @@ class OAuthAddConsumerForm extends FormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    $consumer_key = user_password(32);
-    $consumer_secret  = user_password(32);
+    $consumer_key = \Drupal::service('password_generator')->generate(32);
+    $consumer_secret  = \Drupal::service('password_generator')->generate(32);
     $key_hash = sha1($consumer_key);
     $uid = $form_state->getValue('uid');
     $consumer = array(
diff --git a/src/Form/OAuthDeleteConsumerForm.php b/src/Form/OAuthDeleteConsumerForm.php
index 8c98a9b..0e83ca9 100644
--- a/src/Form/OAuthDeleteConsumerForm.php
+++ b/src/Form/OAuthDeleteConsumerForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\oauth\Form;
 
+use Drupal\user\UserData;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -27,21 +28,21 @@ class OAuthDeleteConsumerForm extends ConfirmFormBase implements ContainerInject
   /**
    * The current user service.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserData
+   * @var UserData
    */
   protected $user_data;
 
   /**
    * Factory.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The DIC.
    *
    * @return static
@@ -49,10 +50,10 @@ class OAuthDeleteConsumerForm extends ConfirmFormBase implements ContainerInject
    */
   public static function create(ContainerInterface $container) {
 
-    /** @var \Drupal\Core\Session\AccountProxyInterface $current_user */
+    /** @var AccountProxyInterface $current_user */
     $current_user = $container->get('current_user');
 
-    /** @var \Drupal\user\UserDataInterface $user_data */
+    /** @var UserDataInterface $user_data */
     $user_data = $container->get('user.data');
 
     return new static($current_user, $user_data);
diff --git a/src/Form/OAuthSettingsForm.php b/src/Form/OAuthSettingsForm.php
index 5cd0827..5026d41 100644
--- a/src/Form/OAuthSettingsForm.php
+++ b/src/Form/OAuthSettingsForm.php
@@ -21,7 +21,7 @@ class OAuthSettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Config\ConfigFactory $config */
+    /** @var ConfigFactory $config */
     $config = $container->get('config.factory');
     return new static($config);
   }
@@ -29,7 +29,7 @@ class OAuthSettingsForm extends ConfigFormBase {
   /**
    * Constructs an OAuthSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config service.
    */
   public function __construct(ConfigFactory $config_factory) {
