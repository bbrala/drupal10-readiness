diff --git a/foldershare.api.php b/foldershare.api.php
index 92bc0f1..326fc98 100644
--- a/foldershare.api.php
+++ b/foldershare.api.php
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\Access\AccessResultInterface;
+use Drupal\foldershare\Entity\Exception\ValidationException;
+use Drupal\Component\Plugin\Definition\PluginDefinitionInterface;
 /**
  * @file
  * Documents the principal hooks available in the module.
@@ -58,9 +61,9 @@ use Drupal\foldershare\FolderShareInterface;
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $parent
+ * @param FolderShareInterface $parent
  *   The parent entity. When NULL, the parent is a root list.
- * @param \Drupal\foldershare\FolderShareInterface[] $fileEntities
+ * @param FolderShareInterface[] $fileEntities
  *   An array of added entities.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation. This may differ from
@@ -79,7 +82,7 @@ function hook_foldershare_post_operation_add_files(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being updated.
  * @param int $fromUid
  *   The user ID of the entity before it was changed.
@@ -107,9 +110,9 @@ function hook_foldershare_post_operation_change_owner(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The new copy.
- * @param \Drupal\foldershare\FolderShareInterface $origEntity
+ * @param FolderShareInterface $origEntity
  *   The original entity that was copied.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation. This may differ from
@@ -146,7 +149,7 @@ function hook_foldershare_post_operation_delete(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The downloaded entity.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation. This may differ from
@@ -164,7 +167,7 @@ function hook_foldershare_post_operation_download(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The edited entity.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation. This may differ from
@@ -182,11 +185,11 @@ function hook_foldershare_post_operation_edit(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being moved.
- * @param \Drupal\foldershare\FolderShareInterface $oldParent
+ * @param FolderShareInterface $oldParent
  *   The old parent.
- * @param \Drupal\foldershare\FolderShareInterface $newParent
+ * @param FolderShareInterface $newParent
  *   The new parent.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation. This may differ from
@@ -209,7 +212,7 @@ function hook_foldershare_post_operation_move(
  * If the operation creates a new root folder, $entity->isRootItem() will
  * be TRUE. Otherwise the operation created a new subfolder.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The newly created entity.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation. This may differ from
@@ -230,7 +233,7 @@ function hook_foldershare_post_operation_new_folder(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The newly created entity.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation. This may differ from
@@ -248,7 +251,7 @@ function hook_foldershare_post_operation_new_object(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being updated.
  * @param string $oldName
  *   The previous name for the entity.
@@ -276,7 +279,7 @@ function hook_foldershare_post_operation_rename(
  * This hook is called in response to user interface operations, REST
  * operations, or direct calls to the FolderShare entity's API.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being updated.
  * @param array $oldGrants
  *   The previous access grants.
@@ -302,7 +305,7 @@ function hook_foldershare_post_operation_share(
  * entity view is created to present the entity, rather than to create
  * search indexes or search results lists.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being viewed.
  * @param int $requestingUid
  *   The user ID of the user requesting the operation.
@@ -335,7 +338,7 @@ function hook_foldershare_post_operation_view(
  * is not an admin and does have permission and access granted. This hook,
  * then, can only make a final allow/deny choice.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity the user wishes to access. If the entity is NULL, the user
  *   is requesting access to the root folder list.
  * @param string $op
@@ -345,10 +348,10 @@ function hook_foldershare_post_operation_view(
  *   - 'share'.
  *   - 'update'.
  *   - 'view'.
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The user's account.
  *
- * @return \Drupal\Core\Access\AccessResultInterface
+ * @return AccessResultInterface
  *   Returns the access result to allow or forbid access, or have a neutral
  *   opinion.
  *
@@ -373,7 +376,7 @@ function hook_foldershare_access(
 /**
  * Controls access to create a FolderShare entity.
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The user's account.
  * @param array $context
  *   An associative array with additional context values, including at least:
@@ -408,7 +411,7 @@ function hook_foldershare_create_access(
  * This is a low-level hook provided by Drupal core. See also higher-level
  * hooks provide by the FolderShare module.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object that has been created, but not yet saved.
  *
  * @ingroup foldershare
@@ -429,7 +432,7 @@ function hook_foldershare_create(EntityInterface $entity) {
  * This is a low-level hook provided by Drupal core. See also higher-level
  * hooks provide by the FolderShare module.
  *
- * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+ * @param FieldableEntityInterface $entity
  *   The entity object to be initialized.
  *
  * @ingroup foldershare
@@ -491,7 +494,7 @@ function hook_foldershare_load(array $entities) {
  * This is a low-level hook provided by Drupal core. See also higher-level
  * hooks provide by the FolderShare module.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object that has been created, but not yet saved.
  *
  * @ingroup foldershare
@@ -522,7 +525,7 @@ function hook_foldershare_presave(EntityInterface $entity) {
  * This is a low-level hook provided by Drupal core. See also higher-level
  * hooks provide by the FolderShare module.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object that has been created, but not yet saved.
  *
  * @ingroup foldershare
@@ -553,7 +556,7 @@ function hook_foldershare_insert(EntityInterface $entity) {
  * This is a low-level hook provided by Drupal core. See also higher-level
  * hooks provide by the FolderShare module.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object that is being updated.
  *
  * @ingroup foldershare
@@ -585,7 +588,7 @@ function hook_foldershare_update(EntityInterface $entity) {
  * This is a low-level hook provided by Drupal core. See also higher-level
  * hooks provide by the FolderShare module.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object that is about to be deleted.
  *
  * @ingroup foldershare
@@ -609,7 +612,7 @@ function hook_foldershare_predelete(EntityInterface $entity) {
  * This is a low-level hook provided by Drupal core. See also higher-level
  * hooks provide by the FolderShare module.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object that has been deleted from storage.
  *
  * @ingroup foldershare
@@ -641,9 +644,9 @@ function hook_foldershare_delete(EntityInterface $entity) {
  *   A renderable array representing the entity content. This may include
  *   render elements for pseudo-fields and embedded views, such as for a
  *   view listing the contents of a folder.
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object being rendered.
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityViewDisplayInterface $display
  *   The entity view display holding the options configured for the
  *   entity components, such as their weights on a page and their field
  *   formatters.
@@ -679,9 +682,9 @@ function hook_foldershare_view(
  *   A renderable array representing the entity content. This may include
  *   render elements for pseudo-fields and embedded views, such as for a
  *   view listing the contents of a folder.
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object being rendered.
- * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+ * @param EntityViewDisplayInterface $display
  *   The entity view display holding the options configured for the
  *   entity components, such as their weights on a page and their field
  *   formatters.
@@ -710,7 +713,7 @@ function hook_foldershare_view_alter(
  *   A renderable array representing the entity content. This may include
  *   render elements for pseudo-fields and embedded views, such as for a
  *   view listing the contents of a folder.
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object being rendered.
  * @param string $viewMode
  *   The name of the view mode.
@@ -737,7 +740,7 @@ function hook_foldershare_build_defaults_alter(
  *
  * @param array $links
  *   A renderable array representing the current links.
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity object being rendered.
  * @param array $context
  *   Information on the context in which the entity links are being displayed,
@@ -785,11 +788,11 @@ function foldershare_foldershare_links_alter(
  * - Invoke prepare_form hooks.
  * - Build form.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity object being edited.
  * @param string $operation
  *   The current operation.
- * @param \Drupal\Core\Form\FormStateInterface $formState
+ * @param FormStateInterface $formState
  *   The current state of the form.
  *
  * @ingroup foldershare
@@ -819,7 +822,7 @@ function hook_foldershare_prepare_form(
  * then searched to produce a list of search results to present to
  * the user. This hook may be used to append to those search results.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being include in the search results.
  *
  * @return array
@@ -844,7 +847,7 @@ function hook_foldershare_search_result(FolderShareInterface $entity) {
  * including its name and the values of its text fields and file content.
  * This hook may be used to append additional values to the search index.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being include in the search index.
  *
  * @return string
@@ -882,7 +885,7 @@ function hook_foldershare_update_index(FolderShareInterface $entity) {
  * tree operations. Hooks should therefore do their work quickly and simply,
  * without altering the given entity or other entities in the folder tree.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   The entity being set. The entity has *not* been saved yet and should
  *   not be saved by a hook.
  * @param string $mimeType
@@ -960,7 +963,7 @@ function hook_foldershare_mime_type_alter(
  *   filename extensions and hooks may further restrict this list, but they
  *   may not allow an extension that the site has not allowed.
  *
- * @param \Drupal\foldershare\FolderShareInterface $parent
+ * @param FolderShareInterface $parent
  *   The parent folder for new files. If the parent is NULL, files are
  *   being added to the user's root list.
  * @param int $ownerUid
@@ -1021,7 +1024,7 @@ function hook_foldershare_allowed_filename_extensions_alter(
  *
  * The returned value will be no larger than the given default limit.
  *
- * @param \Drupal\foldershare\FolderShareInterface $parent
+ * @param FolderShareInterface $parent
  *   The parent folder for new files. If the parent is NULL, files are
  *   being added to the user's root list.
  * @param int $ownerUid
@@ -1075,20 +1078,20 @@ function hook_foldershare_file_upload_size_limit_alter(
  * may be read, but it should not be written or deleted. Any changes made
  * to the local file are not guaranteed to be retained.
  *
- * @param \Drupal\foldershare\FolderShareInterface $parent
+ * @param FolderShareInterface $parent
  *   The parent folder for the new file. If the parent is NULL, the file is
  *   being added to the user's root list.
  * @param int $ownerUid
  *   The user ID of the intended owner of the file. If the value is (-1),
  *   the file is being added for the current user.
- * @param \Drupal\file\FileInterface $file
+ * @param FileInterface $file
  *   The file being added to the folder.
  *
  * @return bool
  *   Returns FALSE if the file is not valid. Any other return value is
  *   taken as valid.
  *
- * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+ * @throws ValidationException
  *   May throw an exception if the file is not valid. The exception should
  *   be a ValidationException, but any other exception type may be thrown
  *   and it will be converted to a ValidationException by the hook caller.
@@ -1122,7 +1125,7 @@ function hook_foldershare_validate_file(
  * command menu button and its menu of commands when presenting the
  * indicated entity or root list for the indicated user.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   (optional, default = NULL = root list) The entity being viewed.
  * @param int $userUid
  *   (optional, default = (-1) = current user) The user ID of the current user.
@@ -1148,7 +1151,7 @@ function hook_foldershare_ui_command_menu_enable(
  * ancestor menu button and its menu of ancestor folders when presenting the
  * indicated entity or root list for the indicated user.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   (optional, default = NULL = root list) The entity being viewed.
  * @param int $userUid
  *   (optional, default = (-1) = current user) The user ID of the current user.
@@ -1175,7 +1178,7 @@ function hook_foldershare_ui_ancestor_menu_enable(
  * indicated user. The hook will not be called if the Drupal core search
  * module is not enabled.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   (optional, default = NULL = root list) The entity being viewed.
  * @param int $userUid
  *   (optional, default = (-1) = current user) The user ID of the current user.
@@ -1201,7 +1204,7 @@ function hook_foldershare_ui_search_box_enable(
  * sidebar when presenting the indicated entity or root list for the
  * indicated user.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   (optional, default = NULL = root list) The entity being viewed.
  * @param int $userUid
  *   (optional, default = (-1) = current user) The user ID of the current user.
@@ -1227,7 +1230,7 @@ function hook_foldershare_ui_sidebar_enable(
  * toolbar button to show/hide the sidebar when presenting the indicated
  * entity or root list for the indicated user.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   (optional, default = NULL = root list) The entity being viewed.
  * @param int $userUid
  *   (optional, default = (-1) = current user) The user ID of the current user.
@@ -1251,7 +1254,7 @@ function hook_foldershare_ui_sidebar_button_enable(
  * possible to modify the definitions of existing commands or add new
  * definitions.
  *
- * @param \Drupal\Component\Plugin\Definition\PluginDefinitionInterface[]|array[] $definitions
+ * @param PluginDefinitionInterface[]|array[] $definitions
  *   The array of plugin definitions.
  * @param mixed[] $extra
  *   (optional, default = NULL) An associative array containing additional
@@ -1292,7 +1295,7 @@ function hook_foldersharecommand_info_alter(
  * annotation, or modify that annotation using the
  * "hook_foldersharecommand_info_alter()" hook.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   (optional, default = NULL = root list) The entity being viewed.
  * @param int $userUid
  *   (optional, default = (-1) = current user) The user ID of the current user.
@@ -1312,7 +1315,7 @@ function hook_foldershare_ui_command_enable(
  * Additional links, if any, are included in the folder browser's sidebar
  * in the "Favorites" section, below the well-known favorites links.
  *
- * @param \Drupal\foldershare\FolderShareInterface $entity
+ * @param FolderShareInterface $entity
  *   (optional, default = NULL = root list) The entity being viewed.
  * @param int $userUid
  *   (optional, default = (-1) = current user) The user ID of the current user.
diff --git a/foldershare.module b/foldershare.module
index 2f73a14..72c4315 100644
--- a/foldershare.module
+++ b/foldershare.module
@@ -1748,7 +1748,7 @@ function foldershare_help(string $routeName, RouteMatchInterface $routeMatch) {
 
   $anonymousName = User::getAnonymousUser()->getDisplayName();
 
-  $imagePath = '/' . drupal_get_path('module', Constants::MODULE) . '/images/';
+  $imagePath = '/' . \Drupal::service('extension.list.module')->getPath(Constants::MODULE) . '/images/';
 
   $recommended = '<span class="foldershare-admin-help-recommended">• ' . t('Recommended practice:') . ' </span>';
 
diff --git a/src/Ajax/OpenErrorDialogCommand.php b/src/Ajax/OpenErrorDialogCommand.php
index c26a3a2..16d5719 100755
--- a/src/Ajax/OpenErrorDialogCommand.php
+++ b/src/Ajax/OpenErrorDialogCommand.php
@@ -152,7 +152,7 @@ class OpenErrorDialogCommand extends OpenModalDialogCommand {
   /**
    * Sets dialog content based upon form state errors.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state who's error messages are used to set the dialog's
    *   body.
    * @param bool $clearErrors
@@ -185,7 +185,7 @@ class OpenErrorDialogCommand extends OpenModalDialogCommand {
   /**
    * Sets dialog content based upon page messages.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    * @param array $messageTypes
    *   (optional, default = ['error', 'warning']) An array containing one or
diff --git a/src/Annotation/FolderShareCommand.php b/src/Annotation/FolderShareCommand.php
index 4129fff..68479be 100755
--- a/src/Annotation/FolderShareCommand.php
+++ b/src/Annotation/FolderShareCommand.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -116,7 +117,7 @@ class FolderShareCommand extends Plugin {
    * - "Edit".
    * - "Rename".
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -139,7 +140,7 @@ class FolderShareCommand extends Plugin {
    * - "Edit...".
    * - "Rename...".
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -165,7 +166,7 @@ class FolderShareCommand extends Plugin {
    * - "Edit @operand...".
    * - "Rename @operand...".
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Commands/FolderShareCommands.php b/src/Commands/FolderShareCommands.php
index 641b9df..512575a 100644
--- a/src/Commands/FolderShareCommands.php
+++ b/src/Commands/FolderShareCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Commands;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Symfony\Component\Console\Input\InputOption;
 
 use Drupal\Core\Extension\ModuleExtensionList;
@@ -55,21 +56,21 @@ final class FolderShareCommands extends DrushCommands {
   /**
    * Access to system state, set at construction time.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   private $state;
 
   /**
    * Access the list of installed modules, set at construction time.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   private $moduleList;
 
   /**
    * Access User entity storage, set at construction time.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   private $userStorage;
 
@@ -81,11 +82,11 @@ final class FolderShareCommands extends DrushCommands {
   /**
    * Constructs a Drush command set.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The system state.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $moduleList
+   * @param ModuleExtensionList $moduleList
    *   The list of installed modules.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(
diff --git a/src/Controller/FileDownload.php b/src/Controller/FileDownload.php
index 4d6396d..1a4def3 100755
--- a/src/Controller/FileDownload.php
+++ b/src/Controller/FileDownload.php
@@ -42,7 +42,7 @@ final class FileDownload extends ControllerBase {
   /**
    * The stream wrapper manager, set at construction time.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManager
+   * @var StreamWrapperManager
    */
   private $streamWrapperManager;
 
@@ -54,7 +54,7 @@ final class FileDownload extends ControllerBase {
   /**
    * Constructs a new file download controller.
    *
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManager $streamWrapperManager
+   * @param StreamWrapperManager $streamWrapperManager
    *   The stream wrapper manager.
    */
   public function __construct(StreamWrapperManager $streamWrapperManager) {
@@ -82,11 +82,11 @@ final class FileDownload extends ControllerBase {
    * The file is sent with a custom HTTP header that includes the full
    * human-readable name of the file and its MIME type.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object that contains the entity ID of the
    *   file being requested. The entity ID is included in the URL
    *   for links to the file.
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   (optional, default = NULL) The file object to download, parsed from
    *   the URL by using an embedded File entity ID. If the entity ID is not
    *   valid, the function receives a NULL argument.  NOTE:  Because this
@@ -94,7 +94,7 @@ final class FileDownload extends ControllerBase {
    *   the function argument here *must be* named after the argument
    *   name: 'file'.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse
+   * @return BinaryFileResponse
    *   A binary transfer response is returned to send the file to the
    *   user's browser.
    *
diff --git a/src/Controller/FolderShareDownload.php b/src/Controller/FolderShareDownload.php
index e0d5265..6eda84a 100755
--- a/src/Controller/FolderShareDownload.php
+++ b/src/Controller/FolderShareDownload.php
@@ -78,7 +78,7 @@ final class FolderShareDownload extends ControllerBase {
   /**
    * The MIME type guesser, set at construction time.
    *
-   * @var \Drupal\Core\ProxyClass\File\MimeType\MimeTypeGuesser
+   * @var MimeTypeGuesser
    */
   private $mimeTypeGuesser;
 
@@ -90,7 +90,7 @@ final class FolderShareDownload extends ControllerBase {
   /**
    * Constructs a new FolderShare entity download controller.
    *
-   * @param \Drupal\Core\ProxyClass\File\MimeType\MimeTypeGuesser $mimeTypeGuesser
+   * @param MimeTypeGuesser $mimeTypeGuesser
    *   The MIME type guesser.
    */
   public function __construct(MimeTypeGuesser $mimeTypeGuesser) {
@@ -130,7 +130,7 @@ final class FolderShareDownload extends ControllerBase {
    * If the site hs enabled logging of operations, this method posts a
    * log message for each item downloaded.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object that contains the entity ID of the
    *   file being requested. The entity ID is included in the URL
    *   for links to the file.
@@ -140,14 +140,14 @@ final class FolderShareDownload extends ControllerBase {
    *   argument, the name of the function argument here *must be* named
    *   after the argument name: 'encoded'.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse
+   * @return BinaryFileResponse
    *   A binary transfer response is returned to send the file to the
    *   user's browser.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Thrown when the user does not have access to the entities.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Thrown if the URL argument is empty or malformed, if any entity ID
    *   in that encoded argument is invalid, if the entities don't all have
    *   the same parent, if the file's those entities refer to cannot be
diff --git a/src/Controller/UserAutocompleteController.php b/src/Controller/UserAutocompleteController.php
index 4acf1fb..6c103a1 100755
--- a/src/Controller/UserAutocompleteController.php
+++ b/src/Controller/UserAutocompleteController.php
@@ -86,7 +86,7 @@ class UserAutocompleteController extends ControllerBase {
   /**
    * The User entity storage manager, set at construction time.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $userStorage;
 
@@ -130,14 +130,14 @@ class UserAutocompleteController extends ControllerBase {
    * skip those users, an optional excludeUids list omits them from the returned
    * results.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The HTTP request, including two parameters:
    *   - 'q' has the text field input to auto-complete.
    *   - 'excludeUids' has a list of integer UIDs to exclude.
    *   - 'excludeBlocked' is 0 (FALSE) or 1 (TRUE) to indicate whether blocked
    *     user accounts should be excluded.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The JSON response that contains an array of autocomplete content. Each
    *   entry in the JSON array is for a user. Each user entry is itself an
    *   array with 'value' and 'label' string values. The label is intended to
diff --git a/src/Entity/Builder/FolderShareBreadcrumbBuilder.php b/src/Entity/Builder/FolderShareBreadcrumbBuilder.php
index 661c61d..1abcc6b 100755
--- a/src/Entity/Builder/FolderShareBreadcrumbBuilder.php
+++ b/src/Entity/Builder/FolderShareBreadcrumbBuilder.php
@@ -52,21 +52,21 @@ class FolderShareBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * The route provider, set at construction time.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   private $routeProvider;
 
   /**
    * The current user account, set at construction time.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   private $currentUser;
 
   /**
    * The route title resolver, set at construction time.
    *
-   * @var \Drupal\Core\Controller\TitleResolver
+   * @var TitleResolver
    */
   private $titleResolver;
 
@@ -81,11 +81,11 @@ class FolderShareBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * The arguments here must match those in the service declaration in
    * MODULE.services.yml.
    *
-   * @param \Drupal\Core\Routing\RouteProviderInterface $routeProvider
+   * @param RouteProviderInterface $routeProvider
    *   The route provider.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user account.
-   * @param \Drupal\Core\Controller\TitleResolver $titleResolver
+   * @param TitleResolver $titleResolver
    *   The page title resolver.
    */
   public function __construct(
@@ -214,11 +214,11 @@ class FolderShareBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * links. Instead, this function returns an abbreviated breadcrumb that
    * only includes a home page link and a root folder list link.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   The route description, including the name of the route and its
    *   parameters.
    *
-   * @return \Drupal\Core\Link[]
+   * @return Link[]
    *   Returns an array of links for the breadcrumb, from the site's home
    *   page to the current FolderShare entity.
    */
@@ -254,11 +254,11 @@ class FolderShareBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * links. Instead, this function returns an abbreviated breadcrumb that
    * only includes a home page link.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   The route description, including the name of the route and its
    *   parameters.
    *
-   * @return \Drupal\Core\Link[]
+   * @return Link[]
    *   Returns an array of links for the breadcrumb, from the site's home
    *   page to the current FolderShare entity.
    */
@@ -302,17 +302,17 @@ class FolderShareBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * The last link in the returned array is for the page's item, if
    * $includeItem is TRUE.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   The route description, including the name of the route and its
    *   parameters.
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   The FolderShare entity for the breadcrumbs.
    * @param bool $includeItem
    *   (optional, default = FALSE) When TRUE, the current FolderShare entity
    *   (whether a file or a folder) is included at the end of the breadcrumb.
    *   When FALSE, it is not.
    *
-   * @return \Drupal\Core\Link[]
+   * @return Link[]
    *   Returns an array of links for the breadcrumb, from the site's home
    *   page to the current FolderShare entity.
    */
@@ -450,11 +450,11 @@ class FolderShareBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    *
    * This function returns breadcrumbs based upon the decoded argument.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   The route description, including the name of the route and its
    *   parameters.
    *
-   * @return \Drupal\Core\Link[]
+   * @return Link[]
    *   Returns an array of links for the breadcrumb, from the site's home
    *   page to the current FolderShare entity.
    */
diff --git a/src/Entity/Builder/FolderShareViewBuilder.php b/src/Entity/Builder/FolderShareViewBuilder.php
index 2a3a8d7..6a8ef7b 100755
--- a/src/Entity/Builder/FolderShareViewBuilder.php
+++ b/src/Entity/Builder/FolderShareViewBuilder.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\foldershare\Entity\Builder;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Entity\EntityViewBuilder;
 
@@ -77,9 +79,9 @@ final class FolderShareViewBuilder extends EntityViewBuilder {
    *
    * @param array $build
    *   The renderable array representing the entity content.
-   * @param \Drupal\Core\Entity\EntityInterface[] $entities
+   * @param EntityInterface[] $entities
    *   The FolderShare entities whose content is being built.
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface[] $displays
+   * @param EntityViewDisplayInterface[] $displays
    *   The array of entity view displays holding the display options
    *   configured for the entity components.
    * @param string $viewMode
@@ -125,9 +127,9 @@ final class FolderShareViewBuilder extends EntityViewBuilder {
    *
    * @param array $build
    *   The renderable array representing the entity content.
-   * @param \Drupal\Core\Entity\EntityInterface[] $entities
+   * @param EntityInterface[] $entities
    *   The FolderShare entities whose content is being built.
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface[] $displays
+   * @param EntityViewDisplayInterface[] $displays
    *   The array of entity view displays holding the display options
    *   configured for the entity components.
    */
@@ -241,9 +243,9 @@ final class FolderShareViewBuilder extends EntityViewBuilder {
    *
    * @param array $build
    *   The renderable array representing the entity content.
-   * @param \Drupal\Core\Entity\EntityInterface[] $entities
+   * @param EntityInterface[] $entities
    *   The FolderShare entities whose content is being built.
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface[] $displays
+   * @param EntityViewDisplayInterface[] $displays
    *   The array of entity view displays holding the display options
    *   configured for the entity components.
    */
diff --git a/src/Entity/Controller/FolderShareViewController.php b/src/Entity/Controller/FolderShareViewController.php
index 8dead58..fa44cca 100755
--- a/src/Entity/Controller/FolderShareViewController.php
+++ b/src/Entity/Controller/FolderShareViewController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Controller;
 
+use Drupal\views\ViewExecutable;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\Exception\ConflictHttpException;
@@ -102,35 +103,35 @@ final class FolderShareViewController extends EntityViewController {
   /**
    * The route provider, set at construction time.
    *
-   * @var \Drupal\Core\Routing\RouteProvider
+   * @var RouteProvider
    */
   private $routeProvider;
 
   /**
    * The route title resolver, set at construction time.
    *
-   * @var \Drupal\Core\Controller\TitleResolver
+   * @var TitleResolver
    */
   private $titleResolver;
 
   /**
    * The current user account, set at construction time.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   private $currentUser;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;
 
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   private $formBuilder;
 
@@ -142,19 +143,19 @@ final class FolderShareViewController extends EntityViewController {
   /**
    * Constructs a FolderShare view controller.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user account.
-   * @param \Drupal\Core\Routing\RouteProvider $routeProvider
+   * @param RouteProvider $routeProvider
    *   The route provider.
-   * @param \Drupal\Core\Controller\TitleResolver $titleResolver
+   * @param TitleResolver $titleResolver
    *   The page title resolver.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
-   * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
+   * @param FormBuilderInterface $formBuilder
    *   The entity form builder.
    */
   public function __construct(
@@ -286,9 +287,9 @@ final class FolderShareViewController extends EntityViewController {
    *
    * @param array $page
    *   The initial rendering array modified by this method and returned.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being presented.
-   * @param \Drupal\Core\Entity\Entity\EntityViewDisplay $display
+   * @param EntityViewDisplay $display
    *   The field_ui display to use.
    * @param string $viewMode
    *   (optional) The field_ui view mode to use.
@@ -378,7 +379,7 @@ final class FolderShareViewController extends EntityViewController {
   /**
    * Returns the title of the indicated entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $foldershare
+   * @param EntityInterface $foldershare
    *   The entity for which the title is needed.  NOTE: This function is
    *   the target of a route with an entity ID argument. The name of the
    *   function argument here *must be* named after the entity
@@ -396,7 +397,7 @@ final class FolderShareViewController extends EntityViewController {
   /**
    * Returns the title of the "All" root list.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The page title.
    */
   public function getAllFolderTitle() {
@@ -408,7 +409,7 @@ final class FolderShareViewController extends EntityViewController {
    *
    * The title is set to the user's display name.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The page title.
    */
   public function getHomeFolderTitle() {
@@ -429,7 +430,7 @@ final class FolderShareViewController extends EntityViewController {
   /**
    * Returns the title of the "Shared" root list.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The page title.
    */
   public function getSharedFolderTitle() {
@@ -439,7 +440,7 @@ final class FolderShareViewController extends EntityViewController {
   /**
    * Returns the title of the "Public" root list.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The page title.
    */
   public function getPublicFolderTitle() {
@@ -461,7 +462,7 @@ final class FolderShareViewController extends EntityViewController {
    * to the renderable array in the proper order.  Pseudo-fields
    * for the contents table and folder path are added as appropriate.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $foldershare
+   * @param EntityInterface $foldershare
    *   The entity being shown.  NOTE: This function is the target of
    *   a route with an entity ID argument. The name of the function
    *   argument here *must be* named after the entity type: 'foldershare'.
@@ -534,7 +535,7 @@ final class FolderShareViewController extends EntityViewController {
    * @return array
    *   A renderable array.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an exception if the user is not an administrator.
    */
   public function viewAllFolder() {
@@ -564,7 +565,7 @@ final class FolderShareViewController extends EntityViewController {
    * @return array
    *   A renderable array.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an exception if the the view display does not allow access.
    */
   public function viewHomeFolder() {
@@ -598,7 +599,7 @@ final class FolderShareViewController extends EntityViewController {
    * @return array
    *   A renderable array.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an exception if the the view display does not allow access.
    */
   public function viewSharedFolder() {
@@ -629,7 +630,7 @@ final class FolderShareViewController extends EntityViewController {
    * @return array
    *   A renderable array.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an exception if the the view display does not allow access.
    */
   public function viewPublicFolder() {
@@ -659,7 +660,7 @@ final class FolderShareViewController extends EntityViewController {
    * Otherwise, a page is generated that includes a user interface above
    * an embed of the named view and display.
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $title
+   * @param TranslatableMarkup $title
    *   The page title.
    * @param string $viewName
    *   The name of the view to embed in the page.
@@ -671,7 +672,7 @@ final class FolderShareViewController extends EntityViewController {
    * @return array
    *   A renderable array.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an exception if the named display's access controls
    *   do not allow access.
    */
@@ -731,13 +732,13 @@ final class FolderShareViewController extends EntityViewController {
    *   that it uses the dialog-specific field formatter for the name field.
    *   When FALSE, the non-dialog field formatter is required.
    *
-   * @return \Drupal\views\ViewExecutable|null
+   * @return ViewExecutable|null
    *   Returns the view executable.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an exception if the named display's access controls
    *   do not allow access.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception on failure, setting the message to explain the
    *   problem. Typically, the exception message should be logged as critical
    *   by the caller.
@@ -900,9 +901,9 @@ final class FolderShareViewController extends EntityViewController {
    *
    * @param array $page
    *   A render array into which we insert our element.
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional) The item for which we generate a path render element.
-   * @param \Drupal\Core\Entity\Entity\EntityViewDisplay $display
+   * @param EntityViewDisplay $display
    *   The field_ui display to use.
    * @param string $viewMode
    *   (optional) The field_ui view mode to use.
@@ -1033,9 +1034,9 @@ final class FolderShareViewController extends EntityViewController {
    *
    * @param array $page
    *   A render array into which we insert our element.
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional) The item for which we generate a path render element.
-   * @param \Drupal\Core\Entity\Entity\EntityViewDisplay $display
+   * @param EntityViewDisplay $display
    *   The field_ui display to use.
    * @param string $viewMode
    *   (optional) The field_ui view mode to use.
@@ -1154,9 +1155,9 @@ final class FolderShareViewController extends EntityViewController {
    *
    * @param array $page
    *   A render array into which we insert our element.
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional) The item for which we generate a path render element.
-   * @param \Drupal\Core\Entity\Entity\EntityViewDisplay $display
+   * @param EntityViewDisplay $display
    *   The field_ui display to use.
    * @param string $viewMode
    *   (optional) The field_ui view mode to use.
@@ -1352,9 +1353,9 @@ final class FolderShareViewController extends EntityViewController {
    *
    * @param array $page
    *   A render array into which we insert our element.
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional) The item for which we generate a contents render element.
-   * @param \Drupal\Core\Entity\Entity\EntityViewDisplay $display
+   * @param EntityViewDisplay $display
    *   The field_ui display to use.
    * @param string $viewMode
    *   (optional) The field_ui view mode to use.
@@ -1427,7 +1428,7 @@ final class FolderShareViewController extends EntityViewController {
    *
    * @param array $page
    *   A render array into which we insert our element.
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $title
+   * @param TranslatableMarkup $title
    *   The page title.
    * @param string $viewName
    *   The machine name of the view.
@@ -1445,7 +1446,7 @@ final class FolderShareViewController extends EntityViewController {
    *   Whether to include the sidebar.
    * @param bool $enableSidebarButton
    *   Whether to include the sidebar show/hide button.
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL) The item for which to generate a folder
    *   view. When NULL, the view is expected to be for a root list.
    * @param int $rootListId
@@ -1677,7 +1678,7 @@ final class FolderShareViewController extends EntityViewController {
     // themes to mark the button as a button.
     //
     // Create the <img> HTML.
-    $sidebarButtonUrl   = '/' . drupal_get_path('module', 'foldershare') .
+    $sidebarButtonUrl   = '/' . \Drupal::service('extension.list.module')->getPath('foldershare') .
       '/images/button-sidebar.svg';
     $sidebarButtonAlt   = $this->t('Show/hide');
     $sidebarButtonImage = "<img alt=\"$sidebarButtonAlt\" src=\"$sidebarButtonUrl\">";
@@ -1723,7 +1724,7 @@ final class FolderShareViewController extends EntityViewController {
    * triggers the form to issue a command to the server. Typical commands
    * delete, copy, move, and rename. Commands are all plugins.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL) The current item.
    * @param int $rootListId
    *   (optional, default = USER_ROOT_LIST) The root list parent for
@@ -1753,7 +1754,7 @@ final class FolderShareViewController extends EntityViewController {
    * Javascript creates and attaches a menu of ancestor links to the button
    * and monitors those links to trigger a page load for a chosen link.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL) The current item.
    *
    * @return array
@@ -1774,7 +1775,7 @@ final class FolderShareViewController extends EntityViewController {
    * current FolderShare item, if any, as context from which to start
    * a search.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL) The current item.
    *
    * @return array
@@ -1804,7 +1805,7 @@ final class FolderShareViewController extends EntityViewController {
    * Additional links are defined by hooks. If no hooks provide links,
    * the block is not included.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL) The current item.
    *
    * @return array
@@ -1969,7 +1970,7 @@ final class FolderShareViewController extends EntityViewController {
    *   The machine name of the display.
    * @param bool $enableSidebar
    *   Whether to include the sidebar.
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL) The current item.
    * @param int $rootListId
    *   (optional, default = USER_ROOT_LIST) The root list parent for
diff --git a/src/Entity/Exception/ExecutionTimeLimitException.php b/src/Entity/Exception/ExecutionTimeLimitException.php
index 085605e..777162b 100755
--- a/src/Entity/Exception/ExecutionTimeLimitException.php
+++ b/src/Entity/Exception/ExecutionTimeLimitException.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Exception;
 
+use Drupal\Component\Render\MarkupInterface;
 /**
  * Defines an exception indicating that an time limit has been reached.
  *
@@ -22,7 +23,7 @@ class ExecutionTimeLimitException extends RuntimeExceptionWithMarkup {
   /**
    * Constructs an exception.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   (optional, default = NULL) The message string or an instance of
    *   \Drupal\Component\Render\MarkupInterface. If NULL, a default
    *   message is used.
diff --git a/src/Entity/Exception/LockException.php b/src/Entity/Exception/LockException.php
index 68e49e1..cf4edf7 100755
--- a/src/Entity/Exception/LockException.php
+++ b/src/Entity/Exception/LockException.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Exception;
 
+use Drupal\Component\Render\MarkupInterface;
 /**
  * Defines an exception indicating that an access lock could not be acquired.
  *
@@ -17,7 +18,7 @@ class LockException extends RuntimeExceptionWithMarkup {
   /**
    * Constructs an exception.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   (optional, default = NULL) The message string or an instance of
    *   \Drupal\Component\Render\MarkupInterface. If NULL, a default
    *   message is used.
diff --git a/src/Entity/Exception/MemoryLimitException.php b/src/Entity/Exception/MemoryLimitException.php
index d2c2ce1..6548089 100755
--- a/src/Entity/Exception/MemoryLimitException.php
+++ b/src/Entity/Exception/MemoryLimitException.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Exception;
 
+use Drupal\Component\Render\MarkupInterface;
 /**
  * Defines an exception indicating that a memory limit has been reached.
  *
@@ -22,7 +23,7 @@ class MemoryLimitException extends RuntimeExceptionWithMarkup {
   /**
    * Constructs an exception.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   (optional, default = NULL) The message string or an instance of
    *   \Drupal\Component\Render\MarkupInterface. If NULL, a default
    *   message is used.
diff --git a/src/Entity/Exception/NotFoundException.php b/src/Entity/Exception/NotFoundException.php
index 6aafd0b..1728d05 100755
--- a/src/Entity/Exception/NotFoundException.php
+++ b/src/Entity/Exception/NotFoundException.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Exception;
 
+use Drupal\Component\Render\MarkupInterface;
 /**
  * Defines an exception indicating requested content that could not be found.
  *
@@ -17,7 +18,7 @@ class NotFoundException extends RuntimeExceptionWithMarkup {
   /**
    * Constructs an exception.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   (optional, default = NULL) The message string or an instance of
    *   \Drupal\Component\Render\MarkupInterface. If NULL, a default
    *   message is used.
diff --git a/src/Entity/Exception/RuntimeExceptionWithMarkup.php b/src/Entity/Exception/RuntimeExceptionWithMarkup.php
index 10c0b14..704987d 100755
--- a/src/Entity/Exception/RuntimeExceptionWithMarkup.php
+++ b/src/Entity/Exception/RuntimeExceptionWithMarkup.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Exception;
 
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Render\Markup;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
@@ -40,7 +41,7 @@ class RuntimeExceptionWithMarkup extends \RuntimeException {
   /**
    * Constructs an exception.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   (optional, default = NULL) The message string or an instance of
    *   \Drupal\Component\Render\MarkupInterface. If NULL, a default
    *   message is used.
@@ -73,7 +74,7 @@ class RuntimeExceptionWithMarkup extends \RuntimeException {
   /**
    * Returns the exception message's markup.
    *
-   * @return \Drupal\Component\Render\MarkupInterface
+   * @return MarkupInterface
    *   Returns a markup object for the exception's message.
    */
   public function getMarkup() {
diff --git a/src/Entity/Exception/SystemException.php b/src/Entity/Exception/SystemException.php
index fbb6f01..3b5b70c 100755
--- a/src/Entity/Exception/SystemException.php
+++ b/src/Entity/Exception/SystemException.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Exception;
 
+use Drupal\Component\Render\MarkupInterface;
 /**
  * Defines an exception indicating a system error.
  *
@@ -20,7 +21,7 @@ class SystemException extends RuntimeExceptionWithMarkup {
   /**
    * Constructs an exception.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   (optional, default = NULL) The message string or an instance of
    *   \Drupal\Component\Render\MarkupInterface. If NULL, a default
    *   message is used.
diff --git a/src/Entity/Exception/ValidationException.php b/src/Entity/Exception/ValidationException.php
index e237399..53a51ff 100755
--- a/src/Entity/Exception/ValidationException.php
+++ b/src/Entity/Exception/ValidationException.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\Exception;
 
+use Drupal\Component\Render\MarkupInterface;
 /**
  * Defines an exception indicating a content validation problem.
  *
@@ -33,7 +34,7 @@ class ValidationException extends RuntimeExceptionWithMarkup {
   /**
    * Constructs an exception.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $message
+   * @param string|MarkupInterface $message
    *   (optional, default = NULL) The message string or an instance of
    *   \Drupal\Component\Render\MarkupInterface. If NULL, a default
    *   message is used.
diff --git a/src/Entity/FolderShare.php b/src/Entity/FolderShare.php
index 179b429..b79e134 100755
--- a/src/Entity/FolderShare.php
+++ b/src/Entity/FolderShare.php
@@ -294,7 +294,7 @@ final class FolderShare extends ContentEntityBase implements FolderShareInterfac
    * | image            |                                      |
    * | media            |                                      |
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   The entity type for which we are returning base field
    *   definitions.
    *
@@ -1135,7 +1135,7 @@ final class FolderShare extends ContentEntityBase implements FolderShareInterfac
    *   Returns either SAVED_NEW or SAVED_UPDATED, depending upon the
    *   operation performed.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Throws an exception on database operation failure.
    *
    * @see ::save()
@@ -1188,14 +1188,14 @@ final class FolderShare extends ContentEntityBase implements FolderShareInterfac
    * The File class's save() is performed within a retry loop, catching
    * and ignoring database exceptions until a retry limit is reached.
    *
-   * @param \Drupal\file\FileInterface $entity
+   * @param FileInterface $entity
    *   The File entity to save.
    *
    * @return int
    *   Returns either SAVED_NEW or SAVED_UPDATED, depending upon the
    *   operation performed.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Throws an exception on database operation failure.
    *
    * @see ::save()
@@ -1249,14 +1249,14 @@ final class FolderShare extends ContentEntityBase implements FolderShareInterfac
    * The Media class's save() is performed within a retry loop, catching
    * and ignoring database exceptions until a retry limit is reached.
    *
-   * @param \Drupal\media\MediaInterface $entity
+   * @param MediaInterface $entity
    *   The Media entity to save.
    *
    * @return int
    *   Returns either SAVED_NEW or SAVED_UPDATED, depending upon the
    *   operation performed.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Throws an exception on database operation failure.
    *
    * @see ::save()
diff --git a/src/Entity/FolderShareAccessControlHandler.php b/src/Entity/FolderShareAccessControlHandler.php
index 152fcfd..b50d0a2 100755
--- a/src/Entity/FolderShareAccessControlHandler.php
+++ b/src/Entity/FolderShareAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
@@ -147,7 +148,7 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
   /**
    * Constructs and initializes an access control handler object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   The entity type definition.
    */
   public function __construct(EntityTypeInterface $entityType) {
@@ -196,18 +197,18 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    * hook after checking permissions and access grants. This hook is not
    * invoked for administrators, which always have access.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity for which access checking is required.
    * @param string $operation
    *   The name of the operation being considered.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional) The user for which to check access.  Defaults to the
    *   current user.
    * @param bool $returnAsObject
    *   (optional) When TRUE, an access object is returned. When FALSE
    *   (default), a boolean is returned.
    *
-   * @return bool|\Drupal\Core\Access\AccessResultInterface
+   * @return bool|AccessResultInterface
    *   The result of the access control check.
    *
    * @see ::checkAccess()
@@ -294,7 +295,7 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    * if creation is allowed within an entity. To do that, use access()
    * on the entity and pass 'create' as the operation.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional, default = NULL = current user) The user for which to
    *   check access.
    * @param array $context
@@ -305,7 +306,7 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    *   entities that support bundles, and NULL otherwise.  Ignored by this
    *   method since file/folder entities do not support bundles.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The result of the access control check.
    *
    * @see ::checkAccess()
@@ -395,12 +396,12 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    * @param string $operation
    *   The name of the operation being considered, which is always
    *   'view' or 'edit' (defined by Drupal core).
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field
+   * @param FieldDefinitionInterface $field
    *   The field being checked.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional) The user for which to check access.  Defaults to
    *   the current user.
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   (optional) The list of field values for which to check access.
    *   Ignored by this method.
    *
@@ -500,15 +501,15 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    * Ownership of a file/folder is always an override of the per-file/folder
    * access controls.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $item
+   * @param EntityInterface $item
    *   The entity for which access checking is required.
    * @param string $operation
    *   The name of the operation being considered.
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   (optional) The user for which to check access.  Defaults to
    *   the current user.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The result of the access control check.
    */
   protected function checkAccess(
@@ -755,7 +756,7 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    *
    * @param string $operation
    *   The name of the operation being considered.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional) The user for which to check access.  Defaults to
    *   the current user.
    *
@@ -846,11 +847,11 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    * If this is NULL, access checks are for operations on the root item
    * list for which there is no parent entity.
    *
-   * @param \Drupal\foldershare\Entity\FolderShare $entity
+   * @param FolderShare $entity
    *   (optional, default = NULL = user root list) The entity for which
    *   access grants are checked.  If this is NULL, getRootAccessSummary()
    *   is called for FolderShareInterface::USER_ROOT_LIST.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional, default = NULL = current user) The user for which to check
    *   access.
    *
@@ -919,7 +920,7 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    *   FolderShareInterface::ALL_ROOT_LIST, or
    *   FolderShareInterface::PUBLIC_ROOT_LIST. All other values return
    *   no permissions.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional, default = NULL = current user) The user for which to check
    *   access.
    *
@@ -1108,7 +1109,7 @@ class FolderShareAccessControlHandler extends EntityAccessControlHandler {
    *   FolderShareInterface::ALL_ROOT_LIST, or
    *   FolderShareInterface::PUBLIC_ROOT_LIST. All other values return
    *   no permissions.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   (optional, default = NULL = current user) The user for which to check
    *   access.
    *
diff --git a/src/Entity/FolderShareScheduledTask.php b/src/Entity/FolderShareScheduledTask.php
index 61f58a3..aaae008 100644
--- a/src/Entity/FolderShareScheduledTask.php
+++ b/src/Entity/FolderShareScheduledTask.php
@@ -244,7 +244,7 @@ final class FolderShareScheduledTask extends ContentEntityBase {
    * | comments         | getComments()                        |
    * | executiontime    | getAccumulatedExecutionTime()        |
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   The entity type for which we are returning base field definitions.
    *
    * @return array
@@ -427,7 +427,7 @@ final class FolderShareScheduledTask extends ContentEntityBase {
    *   Returns a string of the form "FUNCTIONNAME" or "CLASSNAME::METHODNAME",
    *   where the function, class, and method have all been verified.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the callback is malformed, if the function,
    *   class, or method does not exist, or if the method is not public
    *   and static.
@@ -544,7 +544,7 @@ final class FolderShareScheduledTask extends ContentEntityBase {
    *   Returns the newly created task. The task will already have been saved
    *   to the task table.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the callback is malformed or unrecognized, or
    *   if the the parameters array cannot be encoded as JSON.
    */
diff --git a/src/Entity/FolderShareScheduledTaskTraits/DeleteTrait.php b/src/Entity/FolderShareScheduledTaskTraits/DeleteTrait.php
index b167b38..9927f19 100644
--- a/src/Entity/FolderShareScheduledTaskTraits/DeleteTrait.php
+++ b/src/Entity/FolderShareScheduledTaskTraits/DeleteTrait.php
@@ -65,7 +65,7 @@ trait DeleteTrait {
    * still locked, and entities marked hidden or disabled. This should only
    * be done as a last resort.
    *
-   * @param \Drupal\foldershare\Entity\FolderShareScheduledTask $task
+   * @param FolderShareScheduledTask $task
    *   The task to delete.
    *
    * @see ::deleteAllTasks()
diff --git a/src/Entity/FolderShareTraits/FindTrait.php b/src/Entity/FolderShareTraits/FindTrait.php
index 0441789..6161e2c 100644
--- a/src/Entity/FolderShareTraits/FindTrait.php
+++ b/src/Entity/FolderShareTraits/FindTrait.php
@@ -86,7 +86,7 @@ trait FindTrait {
    *   (optional, default = FALSE) When TRUE, hidden root items are included.
    *   When FALSE, they are not.
    *
-   * @return \Drupal\foldershare\FolderShareInterface[]
+   * @return FolderShareInterface[]
    *   Returns an unordered associative array where keys are entity IDs
    *   and values are entities for root items.
    *
@@ -327,7 +327,7 @@ trait FindTrait {
    *   (optional, default = FALSE) When TRUE, hidden root items are included.
    *   When FALSE, they are not.
    *
-   * @return \Drupal\foldershare\FolderShareInterface[]
+   * @return FolderShareInterface[]
    *   Returns an unordered associative array where keys are entity IDs
    *   and values are entities for root items.
    *
@@ -514,7 +514,7 @@ trait FindTrait {
    *   (optional, default = FALSE) When TRUE, hidden root items are included.
    *   When FALSE, they are not.
    *
-   * @return \Drupal\foldershare\FolderShareInterface[]
+   * @return FolderShareInterface[]
    *   Returns an unordered associative array where keys are entity IDs
    *   and values are entities for root items.
    *
@@ -995,7 +995,7 @@ trait FindTrait {
    *
    * A system hidden or disabled item may be returned.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The File entity used to search for a FolderShare entity that wraps it.
    *
    * @return bool|int
@@ -1039,7 +1039,7 @@ trait FindTrait {
    *
    * A system hidden or disabled item may be returned.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   The Media entity used to search for a FolderShare entity that wraps it.
    *
    * @return int
diff --git a/src/Entity/FolderShareTraits/GetSetAccessGrantsTrait.php b/src/Entity/FolderShareTraits/GetSetAccessGrantsTrait.php
index fb0143e..fb228de 100644
--- a/src/Entity/FolderShareTraits/GetSetAccessGrantsTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetAccessGrantsTrait.php
@@ -384,7 +384,7 @@ trait GetSetAccessGrantsTrait {
    *
    * The caller must call save() for the change to take effect.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::getAccessGrantUserIds()
@@ -435,7 +435,7 @@ trait GetSetAccessGrantsTrait {
    *   so that they can still see and operate upon the item. When FALSE, the
    *   owner's own access grants are also cleared.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::setAccessGrants()
diff --git a/src/Entity/FolderShareTraits/GetSetFileTrait.php b/src/Entity/FolderShareTraits/GetSetFileTrait.php
index acb281a..f0ad61b 100644
--- a/src/Entity/FolderShareTraits/GetSetFileTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetFileTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\foldershare\FolderShareInterface;
 use Drupal\file\Entity\File;
 use Drupal\media\Entity\Media;
 
@@ -38,7 +39,7 @@ trait GetSetFileTrait {
    * This method does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::setFileId()
@@ -96,7 +97,7 @@ trait GetSetFileTrait {
    *   to be a valid File entity ID. If the value is negative, the file ID
    *   is cleared.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::clearFileId()
@@ -129,7 +130,7 @@ trait GetSetFileTrait {
    * This method does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::setImageId()
@@ -191,7 +192,7 @@ trait GetSetFileTrait {
    *   to be a valid File entity ID. If the value is negative, the image ID
    *   is cleared.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::clearImageId()
@@ -224,7 +225,7 @@ trait GetSetFileTrait {
    * This method does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::setMediaId()
@@ -282,7 +283,7 @@ trait GetSetFileTrait {
    *   to be a valid Media entity ID. If the vlaue is negative, the media ID
    *   is cleared.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::clearMediaId()
diff --git a/src/Entity/FolderShareTraits/GetSetKindTrait.php b/src/Entity/FolderShareTraits/GetSetKindTrait.php
index 17f438d..eb78b41 100644
--- a/src/Entity/FolderShareTraits/GetSetKindTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetKindTrait.php
@@ -49,7 +49,7 @@ trait GetSetKindTrait {
    *   FOLDER_KIND, FILE_KIND, IMAGE_KIND, MEDIA_KIND, or OBJECT_KIND. Setting
    *   the field to any other kind is ignored.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::getKind()
diff --git a/src/Entity/FolderShareTraits/GetSetNameTrait.php b/src/Entity/FolderShareTraits/GetSetNameTrait.php
index 1811655..d3d8138 100644
--- a/src/Entity/FolderShareTraits/GetSetNameTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetNameTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\Core\Render\Markup;
 use Drupal\foldershare\FolderShareInterface;
 use Drupal\foldershare\ManageFilenameExtensions;
 use Drupal\foldershare\Utilities\FormatUtilities;
@@ -62,7 +63,7 @@ trait GetSetNameTrait {
    *   to be of legal content and length and not to collide with any other
    *   name in the item's parent folder or root list.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::getName()
@@ -450,7 +451,7 @@ trait GetSetNameTrait {
    *   The list of allowed filename extensions. If NULL or empty, filename
    *   extensions are not checked.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the name is not legal or if it uses a filename
    *   extension that is not in the given list.
    *
@@ -497,7 +498,7 @@ trait GetSetNameTrait {
    * @param string $itemName
    *   The name that is illegal.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a markup object containing a formatted standard
    *   exception message.
    */
@@ -540,7 +541,7 @@ trait GetSetNameTrait {
    * @param string $itemName
    *   The name that is in use.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a markup object containing a formatted standard
    *   exception message.
    */
@@ -566,7 +567,7 @@ trait GetSetNameTrait {
    *   (optional, default = NULL = multi-item message) The name that is
    *   in use.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a markup object containing a formatted standard
    *   exception message.
    */
@@ -599,7 +600,7 @@ trait GetSetNameTrait {
    *   (optional, default = 'item') The type of item being created, such as
    *   'copy' or 'duplicate'.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a markup object containing a formatted standard
    *   exception message.
    */
diff --git a/src/Entity/FolderShareTraits/GetSetParentTrait.php b/src/Entity/FolderShareTraits/GetSetParentTrait.php
index 2338a22..39a9cb2 100644
--- a/src/Entity/FolderShareTraits/GetSetParentTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetParentTrait.php
@@ -95,7 +95,7 @@ trait GetSetParentTrait {
    *   is FolderShareInterface::USER_ROOT_LIST or negative, the parent
    *   folder ID is cleared to NULL, which marks this item as a root item.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::clearParentFolderId()
diff --git a/src/Entity/FolderShareTraits/GetSetRootTrait.php b/src/Entity/FolderShareTraits/GetSetRootTrait.php
index 57ad2a0..bffd46e 100644
--- a/src/Entity/FolderShareTraits/GetSetRootTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetRootTrait.php
@@ -38,7 +38,7 @@ trait GetSetRootTrait {
    * This method does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::setRootItemId()
@@ -116,7 +116,7 @@ trait GetSetRootTrait {
    *   item, the root ID is cleared to NULL, indicating the item is in the
    *   root list.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::clearRootItemId()
diff --git a/src/Entity/FolderShareTraits/GetSetSizeTrait.php b/src/Entity/FolderShareTraits/GetSetSizeTrait.php
index 5db22e2..3a252a6 100644
--- a/src/Entity/FolderShareTraits/GetSetSizeTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetSizeTrait.php
@@ -52,7 +52,7 @@ trait GetSetSizeTrait {
    * This method does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::getSize()
diff --git a/src/Entity/FolderShareTraits/GetSetSystemDisabledTrait.php b/src/Entity/FolderShareTraits/GetSetSystemDisabledTrait.php
index 1fad9b5..03df063 100644
--- a/src/Entity/FolderShareTraits/GetSetSystemDisabledTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetSystemDisabledTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\Core\Render\Markup;
 use Drupal\Core\Database\Database;
 
 use Drupal\foldershare\FolderShareInterface;
@@ -57,7 +58,7 @@ trait GetSetSystemDisabledTrait {
    * @param bool $state
    *   The new flag state.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::isSystemDisabled()
@@ -127,7 +128,7 @@ trait GetSetSystemDisabledTrait {
    *   involved in an operation that cannot be done. If NULL, a multi-item
    *   message is returned instead.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a markup object containing a formatted standard
    *   exception message.
    */
diff --git a/src/Entity/FolderShareTraits/GetSetSystemHiddenTrait.php b/src/Entity/FolderShareTraits/GetSetSystemHiddenTrait.php
index f9dadef..d81ba58 100644
--- a/src/Entity/FolderShareTraits/GetSetSystemHiddenTrait.php
+++ b/src/Entity/FolderShareTraits/GetSetSystemHiddenTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\Core\Render\Markup;
 use Drupal\Core\Database\Database;
 
 use Drupal\foldershare\FolderShareInterface;
@@ -57,7 +58,7 @@ trait GetSetSystemHiddenTrait {
    * @param bool $state
    *   The new flag state.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns this item.
    *
    * @see ::isSystemHidden()
@@ -178,7 +179,7 @@ trait GetSetSystemHiddenTrait {
    *   involved in an operation that cannot be done. If NULL, a multi-item
    *   message is returned instead.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a markup object containing a formatted standard
    *   exception message.
    */
diff --git a/src/Entity/FolderShareTraits/ManageLocksTrait.php b/src/Entity/FolderShareTraits/ManageLocksTrait.php
index 8c4a50f..5d8f8fe 100644
--- a/src/Entity/FolderShareTraits/ManageLocksTrait.php
+++ b/src/Entity/FolderShareTraits/ManageLocksTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\Core\Render\Markup;
 use Drupal\foldershare\FolderShareInterface;
 use Drupal\foldershare\Settings;
 use Drupal\foldershare\Utilities\FormatUtilities;
@@ -176,7 +177,7 @@ trait ManageLocksTrait {
    *   involved in an operation that cannot be done. If NULL, a multi-item
    *   message is returned instead.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a markup object containing a formatted standard lock
    *   exception message.
    */
diff --git a/src/Entity/FolderShareTraits/OperationAddFileTrait.php b/src/Entity/FolderShareTraits/OperationAddFileTrait.php
index c9c830d..ce412d4 100644
--- a/src/Entity/FolderShareTraits/OperationAddFileTrait.php
+++ b/src/Entity/FolderShareTraits/OperationAddFileTrait.php
@@ -78,15 +78,15 @@ trait OperationAddFileTrait {
    *   the module's files directory. When FALSE, the indicated file is copied
    *   instead.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the newly added FolderShare entity wrapping the file. Returns
    *   NULL and takes no action if the URI is empty.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the file URI is empty.
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if an error occurs when trying to create, copy,
    *   or move a file, or create a directory.
    *
@@ -149,7 +149,7 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after the file has been added.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   (optional, default = NULL) The parent entity, or a NULL if there is
    *   no parent and the file should be added to the owner's root list.
    * @param string $uri
@@ -171,16 +171,16 @@ trait OperationAddFileTrait {
    *   the module's files directory. When FALSE, the indicated file is copied
    *   instead.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the newly added FolderShare entity wrapping the file. Returns
    *   NULL and takes no action if the URI is empty.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if an error occurs when trying to create, copy,
    *   or move a file, or create a directory.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the file URI is empty or a parent entity is
    *   not a folder.
    *
@@ -294,15 +294,15 @@ trait OperationAddFileTrait {
    *   (optional, default = (-1) = current user) The user ID of the owner
    *   of the new file.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the newly added FolderShare entity wrapping the file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if an error occurs when trying to create, copy,
    *   or move a file, or create a directory.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the file name is empty.
    *
    * @see ::addFileToRootFromFormUpload()
@@ -360,7 +360,7 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after the file has been added.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   (optional, default = NULL) The parent entity, or a NULL if there is
    *   no parent and the file should be added to the owner's root list.
    * @param string $filename
@@ -374,15 +374,15 @@ trait OperationAddFileTrait {
    *   (optional, default = (-1) = current user) The user ID of the owner
    *   of the new file.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the newly added FolderShare entity wrapping the file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if an error occurs when trying to create, copy,
    *   or move a file, or create a directory.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the file name is empty or a parent entity is
    *   not a folder.
    *
@@ -508,10 +508,10 @@ trait OperationAddFileTrait {
    *   - "error": An error message if the file could not be processed.
    *   - "foldershare": The FolderShare entity for the uploaded file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. No files
    *   will have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the field name is empty.
    *
    * @see ::addFile()
@@ -577,7 +577,7 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after the files have been added.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   The parent folder into which to place the uploaded files. If NULL,
    *   uploaded files are added to the root list.
    * @param string $formFieldName
@@ -598,10 +598,10 @@ trait OperationAddFileTrait {
    *   - "error": An error message if the file could not be processed.
    *   - "foldershare": The FolderShare entity for the uploaded file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. No files
    *   will have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the field name is empty or a parent entity is
    *   not a folder.
    *
@@ -1085,7 +1085,7 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after each file is added.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file to be added to the root list.
    * @param bool $allowRename
    *   (optional, default = FALSE) When TRUE, the file's name should be
@@ -1095,13 +1095,13 @@ trait OperationAddFileTrait {
    *   (optional, default = (-1) = current user) The user ID of the owner
    *   of the new file.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the new FolderShare entity wrapping the given file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. The file
    *   will not have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the given file is NULL, it does not have a
    *   legal name, it uses a filename extension that is not allowed, or
    *   the name collides with another item already in the root list and
@@ -1179,7 +1179,7 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after each file is added.
    *
-   * @param \Drupal\file\FileInterface[] $files
+   * @param FileInterface[] $files
    *   An array of files to be added to the root list.  NULL files
    *   are silently skipped.
    * @param bool $allowRename
@@ -1196,10 +1196,10 @@ trait OperationAddFileTrait {
    *   wrapping the file, or it is a text string containing an error message
    *   explaining why the file could not be added.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. No files
    *   will have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the parent is not NULL and not a folder. No
    *   files will be added.
    *
@@ -1265,7 +1265,7 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after the files have been added.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file to be added to this folder.
    * @param bool $allowRename
    *   (optional, default = FALSE) When TRUE, the file's name should be
@@ -1275,13 +1275,13 @@ trait OperationAddFileTrait {
    *   (optional, default = (-1) = current user) The user ID of the owner
    *   of the new files.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the new FolderShare entity wrapping the given file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. The file
    *   will not have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the given file is NULL, it does not have a
    *   legal name, it uses a filename extension that is not allowed, or
    *   the name collides with another item already in the root list and
@@ -1365,7 +1365,7 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after the files have been added.
    *
-   * @param \Drupal\file\FileInterface[] $files
+   * @param FileInterface[] $files
    *   An array of files to be added to this folder.  NULL files
    *   are silently skipped.
    * @param bool $allowRename
@@ -1382,10 +1382,10 @@ trait OperationAddFileTrait {
    *   wrapping the file, or it is a text string containing an error message
    *   explaining why the file could not be added.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. No files
    *   will have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the parent is not NULL and not a folder. No
    *   files will be added.
    *
@@ -1449,10 +1449,10 @@ trait OperationAddFileTrait {
    * <B>Activity log</B>
    * This method posts a log message after each file is added.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   The parent entity, or NULL for the root list, to which to add
    *   the files.
-   * @param \Drupal\file\FileInterface[] $files
+   * @param FileInterface[] $files
    *   An array of File enities to be added to this folder.  An empty
    *   array and NULL file objects are silently skipped.
    * @param int $ownerUid
@@ -1479,10 +1479,10 @@ trait OperationAddFileTrait {
    *   wrapping the file, or it is a text string containing an error message
    *   explaining why the file could not be added.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. No files
    *   will have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the parent is not NULL and not a folder. No
    *   files will be added.
    *
@@ -1860,7 +1860,7 @@ trait OperationAddFileTrait {
    * @return string
    *   The URI of the new temporary file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if one of the following occurs:
    *   - The input stream cannot be read.
    *   - A temporary file cannot be created.
@@ -1963,17 +1963,17 @@ trait OperationAddFileTrait {
    *   the module's files directory. When FALSE, the indicated file is copied
    *   instead.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   Returns a new File entity with the given file name, and a properly
    *   set MIME type and size. The entity is owned by the current user.
    *   The File's URI points to a FolderShare directory tree file moved
    *   from the given local path. A NULL is returned if the local path is
    *   empty.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the URI or filename are empty strings.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if an error occurs when trying to create, copy,
    *   or move a file, or create a directory.
    */
@@ -2104,7 +2104,7 @@ trait OperationAddFileTrait {
    * This function does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @param \Drupal\file\FileInterface $source
+   * @param FileInterface $source
    *   The file to copy.
    * @param string $destinationName
    *   (optional, default = '') The new filename for the file copy. If empty,
@@ -2113,10 +2113,10 @@ trait OperationAddFileTrait {
    *   (optional, default = (-1)) The new owner ID for the file copy.
    *   If negative, the existing owner ID is used.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   The new file copy.
    *
-   * @throws \Drupal\Core\File\Exception\FileException
+   * @throws FileException
    *   Throws an exception if the file cannot be copied.
    *
    * @see ::copyAndAddFilesInternal()
@@ -2200,7 +2200,7 @@ trait OperationAddFileTrait {
    * This function does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @param \Drupal\file\FileInterface $source
+   * @param FileInterface $source
    *   The File entity referring to a file to be moved.
    * @param string $destinationUri
    *   The URI for the moved file.
@@ -2209,12 +2209,12 @@ trait OperationAddFileTrait {
    *   permanent. When FALSE, the File entity is not changed from whatever
    *   state it currently has.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   The updated File entity is returned.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the destination URI uses an invalid scheme.
-   * @throws \Drupal\Core\File\Exception\FileException
+   * @throws FileException
    *   Throws an exception if the file cannot be moved.
    *
    * @internal
diff --git a/src/Entity/FolderShareTraits/OperationArchiveTrait.php b/src/Entity/FolderShareTraits/OperationArchiveTrait.php
index b8f0b95..fabd291 100644
--- a/src/Entity/FolderShareTraits/OperationArchiveTrait.php
+++ b/src/Entity/FolderShareTraits/OperationArchiveTrait.php
@@ -49,18 +49,18 @@ trait OperationArchiveTrait {
    * <B>Activity log</B>
    * This method posts a log message after the archive is created.
    *
-   * @param \Drupal\foldershare\FolderShareInterface[] $items
+   * @param FolderShareInterface[] $items
    *   An array of root items that are to be included in a new archive
    *   added to the root list.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the FolderShare entity for the new archive.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Thrown if an access lock on any item could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Thrown if any item in the array are not root items.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Thrown if the archive file could not be created, such as if the
    *   temporary directory does not exist or is not writable, if a temporary
    *   file for the archive could not be created, or if any of the file
@@ -298,7 +298,7 @@ trait OperationArchiveTrait {
    * locked for exclusive editing access by this function for the duration of
    * the archiving.
    *
-   * @param \Drupal\foldershare\FolderShareInterface[] $items
+   * @param FolderShareInterface[] $items
    *   An array of FolderShare files and/or folders that are to be included
    *   in a new ZIP archive. They should all be children of the same parent
    *   folder.
@@ -315,10 +315,10 @@ trait OperationArchiveTrait {
    *   periodically. Callers should move the file to a new destination if
    *   they intend to keep the file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Thrown if an access lock on any child could not be acquired.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Thrown if the archive file could not be created, such as if the
    *   temporary directory does not exist or is not writable, if a temporary
    *   file for the archive could not be created, or if any of the file
@@ -538,11 +538,11 @@ trait OperationArchiveTrait {
    *   The folder path to be used within the ZIP archive to lead to the
    *   parent of this item.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Thrown if an access lock on this folder could not be acquired.
    *   This exception is never thrown if $lock is FALSE.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Thrown if a file could not be added to the archive.
    */
   private function addToZipArchiveInternal(
diff --git a/src/Entity/FolderShareTraits/OperationChangeOwnerTrait.php b/src/Entity/FolderShareTraits/OperationChangeOwnerTrait.php
index 4fad03d..3f7cb1c 100644
--- a/src/Entity/FolderShareTraits/OperationChangeOwnerTrait.php
+++ b/src/Entity/FolderShareTraits/OperationChangeOwnerTrait.php
@@ -342,9 +342,9 @@ trait OperationChangeOwnerTrait {
    *   is changed. When TRUE, the ownership of all of this item's descendants
    *   is updated as well.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if an item is a root item and it's name is
    *   already in use in the root list of the new user.
    *
diff --git a/src/Entity/FolderShareTraits/OperationCopyTrait.php b/src/Entity/FolderShareTraits/OperationCopyTrait.php
index 99142bf..c2f7b8c 100644
--- a/src/Entity/FolderShareTraits/OperationCopyTrait.php
+++ b/src/Entity/FolderShareTraits/OperationCopyTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\foldershare\Entity\FolderShare;
 use Drupal\foldershare\ManageHooks;
 use Drupal\foldershare\ManageLog;
 use Drupal\foldershare\Settings;
@@ -435,12 +436,12 @@ trait OperationCopyTrait {
    *   names may be adjusted to make them unique if there is an item with
    *   the same name in the root list.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if this item cannot be locked for exclusive use,
    *   or if one or more descendants cannot be locked.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if a name is already in use in the user's root list.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if a serious system error occurs, such as a
    *   file system becomes unreadable/unwritable, gets full, or gores offline.
    *
@@ -1256,7 +1257,7 @@ trait OperationCopyTrait {
    * @param int[] $ids
    *   An array of integer FolderShare entity IDs to copy. Invalid IDs
    *   are silently skipped.
-   * @param \Drupal\foldershare\FolderShareInterface $destination
+   * @param FolderShareInterface $destination
    *   (optional, default = NULL = copy to the root list) The destination folder
    *   for the copy. When NULL, the copy is added to the root list.
    * @param bool $allowRename
@@ -1266,12 +1267,12 @@ trait OperationCopyTrait {
    *   names may be adjusted to make them unique if there is an item with
    *   the same name in the destination.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if this item cannot be locked for exclusive use,
    *   or if one or more descendants cannot be locked.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if a name is already in use in the user's root list.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if a serious system error occurs, such as a
    *   file system becomes unreadable/unwritable, gets full, or gores offline.
    *
@@ -1767,10 +1768,10 @@ trait OperationCopyTrait {
    * @param bool $enabled
    *   (optional, default = TRUE) Whether to mark the item enabled.
    *
-   * @return \Drupal\foldershare\Entity\FolderShare
+   * @return FolderShare
    *   Returns the completed duplicate.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   For files, throws an exception if a serious system error occurs while
    *   duplicating the underlying local file. System errors may indicate a
    *   file system has become unreadable/unwritable, is full, or is offline.
@@ -1920,7 +1921,7 @@ trait OperationCopyTrait {
    * <B>Activity log</B>
    * This method post a log message after each item is copied.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $destination
+   * @param FolderShareInterface $destination
    *   The destination folder.
    * @param int $newOwnerUid
    *   The user ID of the owner of the new items from the copy.
@@ -1934,16 +1935,16 @@ trait OperationCopyTrait {
    *   executing as a background task and it can take longer without
    *   impacting interactivity.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the new copy.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ExecutionTimeLimitException
+   * @throws ExecutionTimeLimitException
    *   Throws an exception if the execution time has reached its limit.
-   * @throws \Drupal\foldershare\Entity\Exception\MemoryLimitException
+   * @throws MemoryLimitException
    *   Throws an exception if memory use has reached its limit.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if a serious system error occurs, such as a
    *   file system becomes unreadable/unwritable, gets full, or goes offline.
    *
diff --git a/src/Entity/FolderShareTraits/OperationDeleteTrait.php b/src/Entity/FolderShareTraits/OperationDeleteTrait.php
index e205975..9622276 100644
--- a/src/Entity/FolderShareTraits/OperationDeleteTrait.php
+++ b/src/Entity/FolderShareTraits/OperationDeleteTrait.php
@@ -42,7 +42,7 @@ trait OperationDeleteTrait {
    * The parent class's delete() is performed within a retry loop, catching
    * and ignoring database exceptions until a retry limit is reached.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Throws an exception on database operation failure.
    *
    * @see ::delete()
@@ -96,10 +96,10 @@ trait OperationDeleteTrait {
    * The parent class's delete() is performed within a retry loop, catching
    * and ignoring database exceptions until a retry limit is reached.
    *
-   * @param \Drupal\file\FileInterface $entity
+   * @param FileInterface $entity
    *   The File entity to delete.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Throws an exception on database operation failure.
    *
    * @see ::delete()
@@ -154,10 +154,10 @@ trait OperationDeleteTrait {
    * The parent class's delete() is performed within a retry loop, catching
    * and ignoring database exceptions until a retry limit is reached.
    *
-   * @param \Drupal\media\MediaInterface $entity
+   * @param MediaInterface $entity
    *   The Media entity to delete.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Throws an exception on database operation failure.
    *
    * @see ::delete()
@@ -502,7 +502,7 @@ trait OperationDeleteTrait {
    *   big delete, the rest of the work will still be postponed into a
    *   scheduled task.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   If one or more items are in use and could not be locked and deleted.
    *
    * @see ::isSystemHidden()
@@ -837,9 +837,9 @@ trait OperationDeleteTrait {
    *   the operation. When interactive, this is the current user. When this
    *   is a background task, this is the original requesting user.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ExecutionTimeLimitException
+   * @throws ExecutionTimeLimitException
    *   Throws an exception if the execution time has reached its limit.
-   * @throws \Drupal\foldershare\Entity\Exception\MemoryLimitException
+   * @throws MemoryLimitException
    *   Throws an exception if memory use has reached its limit.
    */
   private function deleteInternal(
@@ -1063,9 +1063,9 @@ trait OperationDeleteTrait {
    * @param int $requestingUid
    *   The user ID of the user requesting the operation.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ExecutionTimeLimitException
+   * @throws ExecutionTimeLimitException
    *   Throws an exception if the execution time has reached its limit.
-   * @throws \Drupal\foldershare\Entity\Exception\MemoryLimitException
+   * @throws MemoryLimitException
    *   Throws an exception if memory use has reached its limit.
    */
   private function deleteInternalFolder(
diff --git a/src/Entity/FolderShareTraits/OperationDuplicateTrait.php b/src/Entity/FolderShareTraits/OperationDuplicateTrait.php
index c19efdb..647d27d 100644
--- a/src/Entity/FolderShareTraits/OperationDuplicateTrait.php
+++ b/src/Entity/FolderShareTraits/OperationDuplicateTrait.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\foldershare\Entity\Exception\LockException;
+use Drupal\foldershare\Entity\Exception\ValidationException;
+use Drupal\foldershare\Entity\Exception\SystemException;
 use Drupal\Core\Database\Database;
 
 use Drupal\foldershare\FolderShareInterface;
@@ -100,12 +103,12 @@ trait OperationDuplicateTrait {
    *   An array of integer FolderShare entity IDs to duplicate. Invalid IDs
    *   are silently skipped.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if a unique name cannot be created for the
    *   duplicate.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   For files, throws an exception if a serious system error occurs while
    *   duplicating the underlying local file. System errors may indicate a
    *   file system has become unreadable/unwritable, is full, or is offline.
diff --git a/src/Entity/FolderShareTraits/OperationMoveTrait.php b/src/Entity/FolderShareTraits/OperationMoveTrait.php
index 4e5321d..25d45eb 100644
--- a/src/Entity/FolderShareTraits/OperationMoveTrait.php
+++ b/src/Entity/FolderShareTraits/OperationMoveTrait.php
@@ -475,9 +475,9 @@ trait OperationMoveTrait {
    *   names may be adjusted to make them unique if there is an item with
    *   the same name in the user's root list.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if a name is already in use in the user's root list.
    *
    * @see ::moveToRoot()
@@ -1436,7 +1436,7 @@ trait OperationMoveTrait {
    * @param int[] $ids
    *   An array of integer FolderShare entity IDs to move. Invalid IDs
    *   are silently skipped.
-   * @param \Drupal\foldershare\FolderShareInterface $destination
+   * @param FolderShareInterface $destination
    *   (optional, default = NULL = move to the root list) The destination
    *   folder for the move. When NULL, the moved items are added to the
    *   user's root list.
@@ -1447,9 +1447,9 @@ trait OperationMoveTrait {
    *   names may be adjusted to make them unique if there is an item with
    *   the same name in the destination.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if a name is already in use in the destination.
    *
    * @see ::moveToFolder()
diff --git a/src/Entity/FolderShareTraits/OperationNewFolderTrait.php b/src/Entity/FolderShareTraits/OperationNewFolderTrait.php
index a9243bb..1cf2aae 100644
--- a/src/Entity/FolderShareTraits/OperationNewFolderTrait.php
+++ b/src/Entity/FolderShareTraits/OperationNewFolderTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\foldershare\Entity\FolderShare;
 use Drupal\foldershare\FolderShareInterface;
 use Drupal\foldershare\ManageHooks;
 use Drupal\foldershare\ManageLog;
@@ -77,12 +78,12 @@ trait OperationNewFolderTrait {
    *   (optional, default = (-1) = current user) The user ID of the owner
    *   of the new folder.
    *
-   * @return \Drupal\foldershare\Entity\FolderShare
+   * @return FolderShare
    *   Returns the new folder at the root.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   If the name is already in use or is not legal.
    *
    * @see ::createFolder()
diff --git a/src/Entity/FolderShareTraits/OperationNewObjectTrait.php b/src/Entity/FolderShareTraits/OperationNewObjectTrait.php
index f789b14..a899fdf 100644
--- a/src/Entity/FolderShareTraits/OperationNewObjectTrait.php
+++ b/src/Entity/FolderShareTraits/OperationNewObjectTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Entity\FolderShareTraits;
 
+use Drupal\foldershare\Entity\FolderShare;
 use Drupal\foldershare\FolderShareInterface;
 use Drupal\foldershare\ManageHooks;
 use Drupal\foldershare\ManageLog;
@@ -78,12 +79,12 @@ trait OperationNewObjectTrait {
    *   (optional, default = (-1) = current user) The user ID of the owner
    *   of the new object.
    *
-   * @return \Drupal\foldershare\Entity\FolderShare
+   * @return FolderShare
    *   Returns the new object at the root.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   If the name is already in use or is not legal.
    *
    * @see ::createObject()
diff --git a/src/Entity/FolderShareTraits/OperationShareTrait.php b/src/Entity/FolderShareTraits/OperationShareTrait.php
index bb20076..0dc5ba0 100644
--- a/src/Entity/FolderShareTraits/OperationShareTrait.php
+++ b/src/Entity/FolderShareTraits/OperationShareTrait.php
@@ -221,7 +221,7 @@ trait OperationShareTrait {
    *   The access grant to unshare. One of 'view' or 'author'. An empty
    *   string unshares for 'view' AND 'author'.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if this item cannot be locked for exclusive use.
    *
    * @see ::unshare()
diff --git a/src/Entity/FolderShareTraits/OperationUnarchiveTrait.php b/src/Entity/FolderShareTraits/OperationUnarchiveTrait.php
index 890181e..189bc8f 100644
--- a/src/Entity/FolderShareTraits/OperationUnarchiveTrait.php
+++ b/src/Entity/FolderShareTraits/OperationUnarchiveTrait.php
@@ -371,7 +371,7 @@ trait OperationUnarchiveTrait {
    *   - 'localUri' - the file or directory URI in local storage.
    *   - 'time' - the last-modified time in the ZIP file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Thrown if a file or directory cannot be created, or if the ZIP
    *   archive is corrupted.
    */
diff --git a/src/EventSubscriber/FolderShareHttpExceptionSubscriber.php b/src/EventSubscriber/FolderShareHttpExceptionSubscriber.php
index faa5517..f8fb4c9 100644
--- a/src/EventSubscriber/FolderShareHttpExceptionSubscriber.php
+++ b/src/EventSubscriber/FolderShareHttpExceptionSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Psr\Log\LoggerInterface;
 
 use Drupal\Core\EventSubscriber\DefaultExceptionHtmlSubscriber;
@@ -12,7 +13,6 @@ use Drupal\Core\Cache\CacheableJsonResponse;
 use Drupal\Core\Routing\RedirectDestinationInterface;
 
 use Symfony\Component\HttpKernel\HttpKernelInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpKernel\Exception\HttpExceptionInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ -130,7 +130,7 @@ class FolderShareHttpExceptionSubscriber extends DefaultExceptionHtmlSubscriber
   /**
    * The logger instance.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
@@ -142,15 +142,15 @@ class FolderShareHttpExceptionSubscriber extends DefaultExceptionHtmlSubscriber
   /**
    * Constructs an event subscriber to handle HTTP exceptions on FolderShare.
    *
-   * @param \Symfony\Component\HttpKernel\HttpKernelInterface $httpKernel
+   * @param HttpKernelInterface $httpKernel
    *   The HTTP kernel.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The PHP logger service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirectDestination
+   * @param RedirectDestinationInterface $redirectDestination
    *   The redirect destination service.
-   * @param \Symfony\Component\Routing\Matcher\UrlMatcherInterface $accessUnawareRouter
+   * @param UrlMatcherInterface $accessUnawareRouter
    *   A router implementation which does not check access.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   The Drupal logger factory for multiple logger channels.
    */
   public function __construct(
@@ -223,14 +223,14 @@ class FolderShareHttpExceptionSubscriber extends DefaultExceptionHtmlSubscriber
    * If the event is handled, log and response messages are built that
    * include the event's exception message and request headers.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent $event
+   * @param ExceptionEvent $event
    *   The event to process.
    *
    * @todo When Drupal 8 and pre-Symfony 4.4 compatibility is no longer
    * required, change the argument type to ExceptionEvent. And change the
    * use statement above to \Symfony\Component\HttpKernel\Event\ExceptionEvent.
    */
-  public function onException(GetResponseForExceptionEvent $event) {
+  public function onException(ExceptionEvent $event) {
     //
     // Verify exception type.
     // ----------------------
@@ -240,7 +240,7 @@ class FolderShareHttpExceptionSubscriber extends DefaultExceptionHtmlSubscriber
     //
     // @todo When Drupal 8 and pre-Symfony 4.4 compatibility is no longer
     // required, change the getException() method here to getThrowable().
-    $exception = $event->getException();
+    $exception = $event->getThrowable();
     if (($exception instanceof HttpExceptionInterface) === FALSE) {
       // Not an HTTP exception.
       return;
diff --git a/src/EventSubscriber/FolderShareScheduledTaskHandler.php b/src/EventSubscriber/FolderShareScheduledTaskHandler.php
index 22d3fee..0506b59 100644
--- a/src/EventSubscriber/FolderShareScheduledTaskHandler.php
+++ b/src/EventSubscriber/FolderShareScheduledTaskHandler.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\foldershare\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\TerminateEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\PostResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 use Drupal\foldershare\Entity\FolderShareScheduledTask;
@@ -59,7 +59,7 @@ class FolderShareScheduledTaskHandler implements EventSubscriberInterface {
    * The scheduled task list of the FolderShare module is checked and
    * ready tasks run.
    *
-   * @param \Symfony\Component\HttpKernel\Event\PostResponseEvent $event
+   * @param TerminateEvent $event
    *   The termination event.
    *
    * @see ::getSubscribedEvents()
@@ -69,7 +69,7 @@ class FolderShareScheduledTaskHandler implements EventSubscriberInterface {
    * required, change the argument type to TerminateEvent. And change the
    * use statement above to Symfony\Component\HttpKernel\Event\TerminateEvent.
    */
-  public function onTerminate(PostResponseEvent $event) {
+  public function onTerminate(TerminateEvent $event) {
     FolderShareScheduledTask::executeTasks(
       (int) $event->getRequest()->server->get('REQUEST_TIME'));
   }
diff --git a/src/FolderShareInterface.php b/src/FolderShareInterface.php
index b63c5f1..ae58968 100755
--- a/src/FolderShareInterface.php
+++ b/src/FolderShareInterface.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\foldershare;
 
+use Drupal\file\FileInterface;
+use Drupal\media\MediaInterface;
+use Drupal\foldershare\Entity\Exception\LockException;
+use Drupal\foldershare\Entity\Exception\ValidationException;
+use Drupal\foldershare\Entity\Exception\SystemException;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
 use Drupal\user\EntityOwnerInterface;
@@ -621,7 +626,7 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   }
    * @endcode
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   Returns the File entity for the underlying file for file items,
    *   or a NULL if this item is not for a file.
    *
@@ -685,7 +690,7 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   }
    * @endcode
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   Returns the File entity for the underlying image file for image items,
    *   or a NULL if this item is not for an image.
    *
@@ -717,7 +722,7 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * For media items, this method returns the Media entity for the
    * media object. For all other item kinds, a NULL is returned.
    *
-   * @return \Drupal\media\MediaInterface
+   * @return MediaInterface
    *   Returns the Media entity for the underlying media object for media
    *   items, or a NULL if this item is not for media.
    *
@@ -897,7 +902,7 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * This method does not lock access. The caller should lock around changes
    * to the entity.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The user account of the new owner of the folder. If the value is NULL,
    *   the current user's account is used.
    *
@@ -2223,9 +2228,9 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   is changed. When TRUE, the ownership of all of this item's descendants
    *   is updated as well.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if this is a root item and it's name is
    *   already in use in the root list of the new user.
    *
@@ -2276,9 +2281,9 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * @return \Drupal\foldershare\FolderShareInterface
    *   Returns the new folder. The folder has been saved.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the name is already in use.
    *
    * @see ::isFolder()
@@ -2329,9 +2334,9 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * @return \Drupal\foldershare\FolderShareInterface
    *   Returns the new object. The object has been saved.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the name is already in use.
    *
    * @see ::isFolder()
@@ -2412,14 +2417,14 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * @return \Drupal\foldershare\FolderShareInterface
    *   Returns the new root item.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   If $newName is not empty, an exception is thrown if the name is not
    *   legal or if this is a file or image and the name's filename extension
    *   is not allowed for the site. If $allowRename is FALSE, an exception
    *   is thrown if the name is already in use in the user's root list.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   For files, throws an exception if a serious system error occurs while
    *   duplicating the underlying local file. System errors may indicate a
    *   file system has become unreadable/unwritable, is full, or is offline.
@@ -2501,14 +2506,14 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * @return \Drupal\foldershare\FolderShareInterface
    *   Returns the new item.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   If $newName is not empty, an exception is thrown if the name is not
    *   legal or if this is a file or image and the name's filename extension
    *   is not allowed for the site. If $allowRename is FALSE, an exception
    *   is thrown if the name is in use already in the destination.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   For files, throws an exception if a serious system error occurs while
    *   duplicating the underlying local file. System errors may indicate a
    *   file system has become unreadable/unwritable, is full, or is offline.
@@ -2576,7 +2581,7 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   When FALSE, the delete should not spawn a background task and instead
    *   do the work immediately.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
    *
    * @see ::isSystemHidden()
@@ -2625,12 +2630,12 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * <B>Activity log</B>
    * This method posts a log message after the item is copied.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if a unique name for the duplicate could not be
    *   created.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   For files, throws an exception if a serious system error occurs while
    *   duplicating the underlying local file. System errors may indicate a
    *   file system has become unreadable/unwritable, is full, or is offline.
@@ -2715,9 +2720,9 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   name, or the given new name, and then the name is modified to create
    *   a unique name within the user's root list.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   If $newName is not empty, an exception is thrown if the name is not
    *   legal or if this is a file or image and the name's filename extension
    *   is not allowed for the site. If $allowRename is FALSE, an exception
@@ -2806,9 +2811,9 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   given new name, and then the name is modified to create a unique name
    *   within the destination.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   If $newName is not empty, an exception is thrown if the name is not
    *   legal or if this is a file or image and the name's filename extension
    *   is not allowed for the site. If $allowRename is FALSE, an exception
@@ -2853,9 +2858,9 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * @param string $newName
    *   The new name for this item.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   If the item could not be renamed because the name is invalid or
    *   already in use.
    *
@@ -2901,7 +2906,7 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   arrays as values. Array values contain strings indicating 'view' or
    *   'author' access.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
    *
    * @see ::getAccessGrants()
@@ -2939,7 +2944,7 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   (optional, default = '' = view and author) The access grant to remove.
    *   This is either 'view' or 'author', or an empty string to remove both.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
    *
    * @see ::getAccessGrants()
@@ -3009,10 +3014,10 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   - "error": An error message if the file could not be processed.
    *   - "foldershare": The FolderShare entity for the uploaded file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired. No files
    *   will have been added.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the field name is empty or this entity is
    *   not a folder.
    *
@@ -3070,12 +3075,12 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * @return \Drupal\foldershare\FolderShareInterface
    *   Returns the newly added FolderShare entity wrapping the file.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if an error occurs when trying to create, copy,
    *   or move a file, or create a directory.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the file name is empty or the entity is
    *   not a folder.
    *
@@ -3135,12 +3140,12 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    *   Returns the newly added FolderShare entity wrapping the file. Returns
    *   NULL and takes no action if the URI is empty.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Throws an exception if an access lock could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Throws an exception if an error occurs when trying to create, copy,
    *   or move a file, or create a directory.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the file URI is empty or the entity is
    *   not a folder.
    *
@@ -3193,12 +3198,12 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * @return \Drupal\foldershare\FolderShareInterface
    *   Returns the FolderShare entity for the new archive.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Thrown if an access lock on this folder could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Thrown if this item is not a folder or root folder, or if any of
    *   the children in the array are not children of this folder.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Thrown if the archive file could not be created, such as if the
    *   temporary directory does not exist or is not writable, if a temporary
    *   file for the archive could not be created, or if any of the file
@@ -3237,12 +3242,12 @@ interface FolderShareInterface extends ContentEntityInterface, EntityOwnerInterf
    * <B>Activity log</B>
    * This method posts a log message after each file is uncompressed.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\LockException
+   * @throws LockException
    *   Thrown if an access lock on this folder could not be acquired.
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Thrown if the archive is not a valid archive or it has become
    *   corrpted.
-   * @throws \Drupal\foldershare\Entity\Exception\SystemException
+   * @throws SystemException
    *   Thrown if the archive file could not be accessed or there was a
    *   problem creating any of the new files and folders from the archive.
    */
diff --git a/src/Form/AdminSettings.php b/src/Form/AdminSettings.php
index f4b5676..2a7cbe3 100755
--- a/src/Form/AdminSettings.php
+++ b/src/Form/AdminSettings.php
@@ -47,7 +47,7 @@ final class AdminSettings extends ConfigFormBase {
   /**
    * The module handler, set at construction time.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -59,9 +59,9 @@ final class AdminSettings extends ConfigFormBase {
   /**
    * Constructs a new form.
    *
-   * @param Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
    */
   public function __construct(
@@ -113,7 +113,7 @@ final class AdminSettings extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the renderable structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   (optional) The current state of the form.
    *
    * @return array
@@ -159,7 +159,7 @@ final class AdminSettings extends ConfigFormBase {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   public function validateForm(array &$form, FormStateInterface $formState) {
@@ -182,7 +182,7 @@ final class AdminSettings extends ConfigFormBase {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   public function submitForm(array &$form, FormStateInterface $formState) {
diff --git a/src/Form/AdminSettingsTraits/AdminSettingsAboutTab.php b/src/Form/AdminSettingsTraits/AdminSettingsAboutTab.php
index d31abe1..6089103 100644
--- a/src/Form/AdminSettingsTraits/AdminSettingsAboutTab.php
+++ b/src/Form/AdminSettingsTraits/AdminSettingsAboutTab.php
@@ -32,7 +32,7 @@ trait AdminSettingsAboutTab {
    * @param array $form
    *   An associative array containing the structure of the form. The form
    *   is modified to include additional render elements for the tab.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The current state of the form.
    * @param string $tabGroup
    *   The name of the tab group.
@@ -381,7 +381,7 @@ trait AdminSettingsAboutTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function validateAboutTab(
@@ -401,7 +401,7 @@ trait AdminSettingsAboutTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function submitAboutTab(
diff --git a/src/Form/AdminSettingsTraits/AdminSettingsFilesTab.php b/src/Form/AdminSettingsTraits/AdminSettingsFilesTab.php
index 1b75b4c..fa39c8e 100644
--- a/src/Form/AdminSettingsTraits/AdminSettingsFilesTab.php
+++ b/src/Form/AdminSettingsTraits/AdminSettingsFilesTab.php
@@ -34,7 +34,7 @@ trait AdminSettingsFilesTab {
    * @param array $form
    *   An associative array containing the structure of the form. The form
    *   is modified to include additional render elements for the tab.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The current state of the form.
    * @param string $tabGroup
    *   The name of the tab group.
@@ -592,7 +592,7 @@ trait AdminSettingsFilesTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function validateFilesTab(
@@ -658,7 +658,7 @@ trait AdminSettingsFilesTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function submitFilesTab(
diff --git a/src/Form/AdminSettingsTraits/AdminSettingsInterfaceTab.php b/src/Form/AdminSettingsTraits/AdminSettingsInterfaceTab.php
index fb30272..a72dc2e 100644
--- a/src/Form/AdminSettingsTraits/AdminSettingsInterfaceTab.php
+++ b/src/Form/AdminSettingsTraits/AdminSettingsInterfaceTab.php
@@ -34,7 +34,7 @@ trait AdminSettingsInterfaceTab {
    * @param array $form
    *   An associative array containing the structure of the form. The form
    *   is modified to include additional render elements for the tab.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The current state of the form.
    * @param string $tabGroup
    *   The name of the tab group.
@@ -1186,7 +1186,7 @@ trait AdminSettingsInterfaceTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function validateInterfaceTab(
@@ -1342,7 +1342,7 @@ trait AdminSettingsInterfaceTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function submitInterfaceTab(
diff --git a/src/Form/AdminSettingsTraits/AdminSettingsServicesTab.php b/src/Form/AdminSettingsTraits/AdminSettingsServicesTab.php
index 19b1c71..db5735a 100644
--- a/src/Form/AdminSettingsTraits/AdminSettingsServicesTab.php
+++ b/src/Form/AdminSettingsTraits/AdminSettingsServicesTab.php
@@ -32,7 +32,7 @@ trait AdminSettingsServicesTab {
    * @param array $form
    *   An associative array containing the structure of the form. The form
    *   is modified to include additional render elements for the tab.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The current state of the form.
    * @param string $tabGroup
    *   The name of the tab group.
@@ -749,7 +749,7 @@ trait AdminSettingsServicesTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function validateServicesTab(
@@ -826,7 +826,7 @@ trait AdminSettingsServicesTab {
    *
    * @param array $form
    *   The form configuration.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The entered values for the form.
    */
   private function submitServicesTab(
diff --git a/src/Form/AdminUsageReport.php b/src/Form/AdminUsageReport.php
index 8fd1a8b..0bb18fb 100755
--- a/src/Form/AdminUsageReport.php
+++ b/src/Form/AdminUsageReport.php
@@ -41,7 +41,7 @@ class AdminUsageReport extends FormBase {
   /**
    * The entity type manager, set at construction time.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -53,7 +53,7 @@ class AdminUsageReport extends FormBase {
   /**
    * Constructs a new page.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManager $entityTypeManager) {
diff --git a/src/Form/CommandFormWrapper.php b/src/Form/CommandFormWrapper.php
index 97036ab..d21eab9 100755
--- a/src/Form/CommandFormWrapper.php
+++ b/src/Form/CommandFormWrapper.php
@@ -57,7 +57,7 @@ class CommandFormWrapper extends FormBase {
   /**
    * The messenger, set at construction time.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -120,7 +120,7 @@ class CommandFormWrapper extends FormBase {
    *
    * @param \Drupal\foldershare\FolderShareCommand\FolderShareCommandManager $commandPluginManager
    *   The command plugin manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(
@@ -649,7 +649,7 @@ class CommandFormWrapper extends FormBase {
   /**
    * Returns the messenger.
    *
-   * @return \Drupal\Core\Messenger\MessengerInterface
+   * @return MessengerInterface
    *   Returns the messenger.
    */
   private function getMessenger() {
diff --git a/src/Form/UIAncestorMenu.php b/src/Form/UIAncestorMenu.php
index 8f245d4..9956817 100755
--- a/src/Form/UIAncestorMenu.php
+++ b/src/Form/UIAncestorMenu.php
@@ -83,7 +83,7 @@ final class UIAncestorMenu {
     $menuButtonClass = 'foldershare-ancestormenu-menu-button';
     $menuClass       = 'foldershare-ancestormenu-menu';
 
-    $menuButtonUrl   = '/' . drupal_get_path('module', 'foldershare') .
+    $menuButtonUrl   = '/' . \Drupal::service('extension.list.module')->getPath('foldershare') .
       '/images/menu-ancestor.svg';
     $menuButtonAlt   = t('Location menu');
     $menuButtonImage = "<img alt=\"$menuButtonAlt\" src=\"$menuButtonUrl\">";
diff --git a/src/Form/UIFolderBrowserMenu.php b/src/Form/UIFolderBrowserMenu.php
index e25f341..bc21984 100755
--- a/src/Form/UIFolderBrowserMenu.php
+++ b/src/Form/UIFolderBrowserMenu.php
@@ -81,7 +81,7 @@ class UIFolderBrowserMenu extends FormBase {
   /**
    * The module handler, set at construction time.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -95,7 +95,7 @@ class UIFolderBrowserMenu extends FormBase {
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
@@ -123,11 +123,11 @@ class UIFolderBrowserMenu extends FormBase {
   /**
    * Constructs a new form.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
    * @param \Drupal\foldershare\FolderShareCommand\FolderShareCommandManager $pm
    *   The command plugin manager.
-   * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
+   * @param FormBuilderInterface $formBuilder
    *   The form builder.
    */
   public function __construct(
@@ -199,7 +199,7 @@ class UIFolderBrowserMenu extends FormBase {
    * here and converted to form error messages. The command is returned,
    * or NULL if the command could not be created.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The current form state.
    * @param string $commandClass
    *   The form state entry to which to report command errors.
@@ -208,7 +208,7 @@ class UIFolderBrowserMenu extends FormBase {
    * @param array $configuration
    *   The initial command configuration.
    *
-   * @return \Drupal\foldershare\Plugin\FolderShareCommand\FolderShareCommandInterface
+   * @return FolderShareCommandInterface
    *   Returns an initialized command, or NULL if the command could not be
    *   created. If there were validation errors, form state has been updated.
    */
@@ -544,11 +544,11 @@ class UIFolderBrowserMenu extends FormBase {
 
     if ($disabled === TRUE) {
       // TODO delete this code. It uses the wrong icon.
-      $menuButtonUrl = '/' . drupal_get_path('module', 'foldershare') .
+      $menuButtonUrl = '/' . \Drupal::service('extension.list.module')->getPath('foldershare') .
         '/images/menu-icon.disabled.27x15.png';
     }
     else {
-      $menuButtonUrl = '/' . drupal_get_path('module', 'foldershare') .
+      $menuButtonUrl = '/' . \Drupal::service('extension.list.module')->getPath('foldershare') .
         '/images/menu-file.svg';
     }
 
@@ -769,7 +769,7 @@ class UIFolderBrowserMenu extends FormBase {
   /**
    * Returns the filename extensions accepted for file uploads.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   The parent entity to contain uploaded files, or NULL for the root list.
    * @param int $userId
    *   The user ID.
@@ -1057,10 +1057,10 @@ class UIFolderBrowserMenu extends FormBase {
    *
    * @param array $form
    *   An array of form elements.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The input values for the form's elements.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    */
   public function submitFormAjax(array &$form, FormStateInterface $formState) {
@@ -1097,7 +1097,7 @@ class UIFolderBrowserMenu extends FormBase {
   /**
    * Returns an AJAX response that shows a command configuration form dialog.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    */
   private function respondWithConfigurationDialog() {
@@ -1175,7 +1175,7 @@ class UIFolderBrowserMenu extends FormBase {
    * are shown in an error dialog. Otherwise the page is refreshed or
    * redirected per the command's needs.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    */
   private function respondWithCommandExecution() {
diff --git a/src/Form/UninstallFolderShareConfirm.php b/src/Form/UninstallFolderShareConfirm.php
index 1b1988e..06f991b 100755
--- a/src/Form/UninstallFolderShareConfirm.php
+++ b/src/Form/UninstallFolderShareConfirm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -34,7 +35,7 @@ class UninstallFolderShareConfirm extends ConfirmFormBase {
   /**
    * The entity type manager, set at construction time.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -46,7 +47,7 @@ class UninstallFolderShareConfirm extends ConfirmFormBase {
   /**
    * Constructs a new page.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManager $entityTypeManager) {
@@ -75,7 +76,7 @@ class UninstallFolderShareConfirm extends ConfirmFormBase {
   /**
    * Returns the title for the form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The form title.
    */
   public function getTitle() {
diff --git a/src/Form/UninstallFolderShareScheduledTaskConfirm.php b/src/Form/UninstallFolderShareScheduledTaskConfirm.php
index 879257a..001d843 100755
--- a/src/Form/UninstallFolderShareScheduledTaskConfirm.php
+++ b/src/Form/UninstallFolderShareScheduledTaskConfirm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -31,7 +32,7 @@ class UninstallFolderShareScheduledTaskConfirm extends ConfirmFormBase {
   /**
    * The entity type manager, set at construction time.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -43,7 +44,7 @@ class UninstallFolderShareScheduledTaskConfirm extends ConfirmFormBase {
   /**
    * Constructs a new page.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManager $entityTypeManager) {
@@ -72,7 +73,7 @@ class UninstallFolderShareScheduledTaskConfirm extends ConfirmFormBase {
   /**
    * Returns the title for the form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The form title.
    */
   public function getTitle() {
diff --git a/src/ManageFileSystem.php b/src/ManageFileSystem.php
index 4452a24..a973eb9 100755
--- a/src/ManageFileSystem.php
+++ b/src/ManageFileSystem.php
@@ -238,7 +238,7 @@ final class ManageFileSystem {
    * Once the file path is built for the given File entity, any directories
    * needed are created, permissions are set, and .htaccess files are added.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file current stored locally, or soon to be stored locally.
    *
    * @return string
diff --git a/src/ManageHooks.php b/src/ManageHooks.php
index 6a7e16c..5ce9a5d 100644
--- a/src/ManageHooks.php
+++ b/src/ManageHooks.php
@@ -76,7 +76,7 @@ final class ManageHooks {
    *
    * @param string $operationName
    *   The name of the operation.
-   * @param array|\Drupal\foldershare\FolderShareInterface $args
+   * @param array|FolderShareInterface $args
    *   (optional, default = NULL) Appropriate arguments for the hook, such
    *   as a FolderShare entity or an array of entity IDs.
    */
@@ -132,16 +132,16 @@ final class ManageHooks {
    * If no modules implement the hook, this method returns without throwing
    * an exception and the file is condidered valid.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   The parent folder for the new file. If the parent is NULL, the file is
    *   being added to the user's root list.
    * @param int $ownerUid
    *   The user ID of the intended owner of the file. If the value is (-1),
    *   the file is being added for the current user.
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file being added to the folder.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if any of the hooks return FALSE or if any of
    *   them throw their own exception. If a hook throws an exception, the
    *   exception is converted to a ValidationException with the original
@@ -251,7 +251,7 @@ final class ManageHooks {
    *   filename extensions and hooks may further restrict this list, but they
    *   may not allow an extension that the site has not allowed.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   The parent folder for new files. If the parent is NULL, files are
    *   being added to the user's root list.
    * @param int $ownerUid
@@ -405,7 +405,7 @@ final class ManageHooks {
    *
    * The returned value will be no larger than the given default limit.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   The parent folder for new files. If the parent is NULL, files are
    *   being added to the user's root list.
    * @param int $ownerUid
@@ -492,7 +492,7 @@ final class ManageHooks {
    * The "hook_foldershare_mime_type_alter" hook is called with the unsaved
    * entity and default MIME type.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $entity
+   * @param FolderShareInterface $entity
    *   The entity being set. The entity has *not* been saved yet and should
    *   not be saved by a hook.
    * @param string $mimeType
@@ -557,7 +557,7 @@ final class ManageHooks {
    *
    * If no modules implement the hook, this method returns TRUE.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL = root list) The current file/folder.
    * @param int $userUid
    *   (optional, default = (-1) = current user) The current user ID.
@@ -611,7 +611,7 @@ final class ManageHooks {
    *
    * If no modules implement the hook, this method returns TRUE.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL = root list) The current file/folder.
    * @param int $userUid
    *   (optional, default = (-1) = current user) The current user ID.
@@ -665,7 +665,7 @@ final class ManageHooks {
    *
    * If no modules implement the hook, this method returns TRUE.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL = root list) The current file/folder.
    * @param int $userUid
    *   (optional, default = (-1) = current user) The current user ID.
@@ -719,7 +719,7 @@ final class ManageHooks {
    *
    * If no modules implement the hook, this method returns TRUE.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL = root list) The current file/folder.
    * @param int $userUid
    *   (optional, default = (-1) = current user) The current user ID.
@@ -772,7 +772,7 @@ final class ManageHooks {
    *
    * If no modules implement the hook, this method returns TRUE.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL = root list) The current file/folder.
    * @param int $userUid
    *   (optional, default = (-1) = current user) The current user ID.
@@ -826,7 +826,7 @@ final class ManageHooks {
    *
    * If no modules implement the hook, this method returns TRUE.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL = root list) The current file/folder.
    * @param int $userUid
    *   (optional, default = (-1) = current user) The current user ID.
@@ -905,7 +905,7 @@ final class ManageHooks {
    * When multiple modules implement the hook. Each one can add to the
    * links array.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   (optional, default = NULL = root list) The current file/folder.
    * @param int $userUid
    *   (optional, default = (-1) = current user) The current user ID.
diff --git a/src/ManagePaths.php b/src/ManagePaths.php
index 5702ed5..e84ddaf 100644
--- a/src/ManagePaths.php
+++ b/src/ManagePaths.php
@@ -99,7 +99,7 @@ final class ManagePaths {
    *   provided. If the path includes an ACCOUNT, that ACCOUNT is looked up
    *   and the UID for the account returned in the array.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the path is malformed:
    *   - The incoming path is empty.
    *   - The SCHEME does not have a known value.
@@ -266,9 +266,9 @@ final class ManagePaths {
    * @return int
    *   Returns the entity ID of the last entity on the path.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws an exception if the path is malformed.
-   * @throws \Drupal\foldershare\Entity\Exception\NotFoundException
+   * @throws NotFoundException
    *   Throws an exception if the path contains a root item, parent
    *   folder, or child that could not be found.
    *
diff --git a/src/ManageSearch.php b/src/ManageSearch.php
index 1e8b082..87fe020 100755
--- a/src/ManageSearch.php
+++ b/src/ManageSearch.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare;
 
+use Drupal\search\Plugin\SearchInterface;
 use Drupal\foldershare\Entity\FolderShare;
 use Drupal\foldershare\Entity\FolderShareScheduledTask;
 use Drupal\foldershare\Utilities\ConfigurationUtilities;
@@ -513,7 +514,7 @@ final class ManageSearch {
    * If the Drupal core "search" module is not enabled or FolderShare's
    * search plugin is not enabled, this method returns a NULL.
    *
-   * @return \Drupal\search\Plugin\SearchInterface
+   * @return SearchInterface
    *   Returns the module's search plugin object, or NULL if the plugin
    *   is not found or if it is currently disabled.
    *
diff --git a/src/Plugin/Field/FieldFormatter/FolderShareInternalFolderName.php b/src/Plugin/Field/FieldFormatter/FolderShareInternalFolderName.php
index 9f7dd9a..34a4d2f 100755
--- a/src/Plugin/Field/FieldFormatter/FolderShareInternalFolderName.php
+++ b/src/Plugin/Field/FieldFormatter/FolderShareInternalFolderName.php
@@ -54,7 +54,7 @@ class FolderShareInternalFolderName extends FormatterBase implements ContainerFa
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -92,7 +92,7 @@ class FolderShareInternalFolderName extends FormatterBase implements ContainerFa
    *   The ID for the plugin instance.
    * @param mixed $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $fieldDefinition
+   * @param FieldDefinitionInterface $fieldDefinition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter's settings.
@@ -102,7 +102,7 @@ class FolderShareInternalFolderName extends FormatterBase implements ContainerFa
    *   The view mode.
    * @param array $thirdPartySettings
    *   Third party settings.
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user.
    */
   public function __construct(
@@ -291,7 +291,7 @@ class FolderShareInternalFolderName extends FormatterBase implements ContainerFa
    *
    * Folders have a link and data attributes, while other kinds do not.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   A entity to return a value for.
    * @param string $langCode
    *   The target language.
diff --git a/src/Plugin/Field/FieldFormatter/FolderShareInternalName.php b/src/Plugin/Field/FieldFormatter/FolderShareInternalName.php
index abda160..3998f0a 100755
--- a/src/Plugin/Field/FieldFormatter/FolderShareInternalName.php
+++ b/src/Plugin/Field/FieldFormatter/FolderShareInternalName.php
@@ -54,7 +54,7 @@ class FolderShareInternalName extends FormatterBase implements ContainerFactoryP
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -92,7 +92,7 @@ class FolderShareInternalName extends FormatterBase implements ContainerFactoryP
    *   The ID for the plugin instance.
    * @param mixed $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $fieldDefinition
+   * @param FieldDefinitionInterface $fieldDefinition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter's settings.
@@ -102,7 +102,7 @@ class FolderShareInternalName extends FormatterBase implements ContainerFactoryP
    *   The view mode.
    * @param array $thirdPartySettings
    *   Third party settings.
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user.
    */
   public function __construct(
@@ -288,7 +288,7 @@ class FolderShareInternalName extends FormatterBase implements ContainerFactoryP
   /**
    * Returns a formatted field for icon-linked values.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   A entity to return a value for.
    * @param string $langCode
    *   The target language.
diff --git a/src/Plugin/Field/FieldFormatter/FolderShareName.php b/src/Plugin/Field/FieldFormatter/FolderShareName.php
index 9313b30..1355b00 100755
--- a/src/Plugin/Field/FieldFormatter/FolderShareName.php
+++ b/src/Plugin/Field/FieldFormatter/FolderShareName.php
@@ -216,7 +216,7 @@ class FolderShareName extends FormatterBase {
   /**
    * Returns a formatted field for icon-linked values.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   A entity to return a value for.
    * @param string $langCode
    *   The target language.
diff --git a/src/Plugin/Field/FieldFormatter/FolderShareReference.php b/src/Plugin/Field/FieldFormatter/FolderShareReference.php
index 098049a..ab85ed7 100755
--- a/src/Plugin/Field/FieldFormatter/FolderShareReference.php
+++ b/src/Plugin/Field/FieldFormatter/FolderShareReference.php
@@ -223,7 +223,7 @@ class FolderShareReference extends EntityReferenceFormatterBase {
   /**
    * Returns a formatted field for icon-linked values.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   A entity to return a value for.
    * @param string $langCode
    *   The target language.
diff --git a/src/Plugin/FolderShareCommand/ChangeOwner.php b/src/Plugin/FolderShareCommand/ChangeOwner.php
index 65fa979..f8c5b9b 100755
--- a/src/Plugin/FolderShareCommand/ChangeOwner.php
+++ b/src/Plugin/FolderShareCommand/ChangeOwner.php
@@ -69,7 +69,7 @@ class ChangeOwner extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Compress.php b/src/Plugin/FolderShareCommand/Compress.php
index f1566c5..1244db7 100755
--- a/src/Plugin/FolderShareCommand/Compress.php
+++ b/src/Plugin/FolderShareCommand/Compress.php
@@ -59,7 +59,7 @@ class Compress extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Copy.php b/src/Plugin/FolderShareCommand/Copy.php
index 4359317..736162a 100755
--- a/src/Plugin/FolderShareCommand/Copy.php
+++ b/src/Plugin/FolderShareCommand/Copy.php
@@ -73,7 +73,7 @@ class Copy extends CopyMoveBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/CopyMoveBase.php b/src/Plugin/FolderShareCommand/CopyMoveBase.php
index 8213c89..43df697 100755
--- a/src/Plugin/FolderShareCommand/CopyMoveBase.php
+++ b/src/Plugin/FolderShareCommand/CopyMoveBase.php
@@ -55,7 +55,7 @@ abstract class CopyMoveBase extends FolderShareCommandBase {
   /**
    * Constructs a new plugin with the given configuration.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The array of named parameters for the new command instance.
@@ -522,7 +522,7 @@ abstract class CopyMoveBase extends FolderShareCommandBase {
    *
    * @param array $form
    *   The render array for the form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return array
diff --git a/src/Plugin/FolderShareCommand/DeleteAsAdmin.php b/src/Plugin/FolderShareCommand/DeleteAsAdmin.php
index e34a78b..26f616b 100755
--- a/src/Plugin/FolderShareCommand/DeleteAsAdmin.php
+++ b/src/Plugin/FolderShareCommand/DeleteAsAdmin.php
@@ -63,7 +63,7 @@ class DeleteAsAdmin extends DeleteBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/DeleteGeneral.php b/src/Plugin/FolderShareCommand/DeleteGeneral.php
index 41d5889..a07469a 100755
--- a/src/Plugin/FolderShareCommand/DeleteGeneral.php
+++ b/src/Plugin/FolderShareCommand/DeleteGeneral.php
@@ -60,7 +60,7 @@ class DeleteGeneral extends DeleteBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/DeleteOnRootList.php b/src/Plugin/FolderShareCommand/DeleteOnRootList.php
index 0317308..bbfbbe9 100755
--- a/src/Plugin/FolderShareCommand/DeleteOnRootList.php
+++ b/src/Plugin/FolderShareCommand/DeleteOnRootList.php
@@ -62,7 +62,7 @@ class DeleteOnRootList extends DeleteBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Download.php b/src/Plugin/FolderShareCommand/Download.php
index b0f9b24..becf51d 100755
--- a/src/Plugin/FolderShareCommand/Download.php
+++ b/src/Plugin/FolderShareCommand/Download.php
@@ -59,7 +59,7 @@ class Download extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Duplicate.php b/src/Plugin/FolderShareCommand/Duplicate.php
index 75d4576..9eb8429 100755
--- a/src/Plugin/FolderShareCommand/Duplicate.php
+++ b/src/Plugin/FolderShareCommand/Duplicate.php
@@ -57,7 +57,7 @@ class Duplicate extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Edit.php b/src/Plugin/FolderShareCommand/Edit.php
index 30ace65..6b8c458 100755
--- a/src/Plugin/FolderShareCommand/Edit.php
+++ b/src/Plugin/FolderShareCommand/Edit.php
@@ -59,7 +59,7 @@ class Edit extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/FolderShareCommandBase.php b/src/Plugin/FolderShareCommand/FolderShareCommandBase.php
index dd81848..1588b24 100755
--- a/src/Plugin/FolderShareCommand/FolderShareCommandBase.php
+++ b/src/Plugin/FolderShareCommand/FolderShareCommandBase.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\foldershare\Plugin\FolderShareCommand;
 
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\Core\Session\AccountInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpKernel\Exception\ConflictHttpException;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
@@ -93,21 +97,21 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
   /**
    * The messenger, set at construction time.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The current user account, set at construction time.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The current request stack, set at construction time.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
@@ -181,7 +185,7 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
   /**
    * Constructs a new plugin with the given configuration.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The array of named parameters for the new command instance.
@@ -349,7 +353,7 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
   /**
    * Returns the current user.
    *
-   * @return \Drupal\Core\Session\AccountInterface
+   * @return AccountInterface
    *   Returns the current user.
    */
   protected function getCurrentUser() {
@@ -359,7 +363,7 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
   /**
    * Returns the messenger for posting errors.
    *
-   * @return \Drupal\Core\Messenger\MessengerInterface
+   * @return MessengerInterface
    *   Returns the messenger.
    */
   protected function getMessenger() {
@@ -369,7 +373,7 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
   /**
    * Returns the current request.
    *
-   * @return \Symfony\Component\HttpFoundation\Request
+   * @return Request
    *   Returns the current request.
    */
   protected function getRequest() {
@@ -406,7 +410,7 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
   /**
    * Gets the configuration's parent folder.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the parent folder or NULL if there is no parent or the parent
    *   is a root list.
    *
@@ -472,7 +476,7 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
   /**
    * Gets the configuration's destination folder, if any.
    *
-   * @return \Drupal\foldershare\FolderShareInterface
+   * @return FolderShareInterface
    *   Returns the destination folder, or NULL if there is no destination
    *   or the destination is a root list.
    *
@@ -544,7 +548,7 @@ abstract class FolderShareCommandBase extends PluginBase implements Configurable
    * The returned associative array has FolderShare kind names as keys,
    * and values that are arrays of loaded FolderShare objects.
    *
-   * @return \Drupal\foldershare\FolderShareInterface[]
+   * @return FolderShareInterface[]
    *   Returns an array of selected items, or an empty array if there
    *   are no selected items.
    */
diff --git a/src/Plugin/FolderShareCommand/FolderShareCommandInterface.php b/src/Plugin/FolderShareCommand/FolderShareCommandInterface.php
index 7cd6cbc..c5a1a86 100755
--- a/src/Plugin/FolderShareCommand/FolderShareCommandInterface.php
+++ b/src/Plugin/FolderShareCommand/FolderShareCommandInterface.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\foldershare\Plugin\FolderShareCommand;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Url;
+use Drupal\foldershare\Entity\Exception\ValidationException;
+use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Core\Plugin\PluginFormInterface;
@@ -89,7 +94,7 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    *   Indicate whether the returned description is intended for a page
    *   (TRUE) or a dialog (FALSE).
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Returns an array containing the primary and secondary description for
    *   the form. The primary description is often brief and in bold, while the
    *   secondary description provides more explanation and is not bold.
@@ -105,7 +110,7 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    *   Indicate whether the returned title is intended for a page
    *   (TRUE) or a dialog (FALSE).
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   Returns the title for the form. Return an empty string or NULL for
    *   no title.
    */
@@ -114,7 +119,7 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
   /**
    * Returns the translated name of the form's submit button, if any.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   Returns the name for the submit button.
    */
   public function getSubmitButtonName();
@@ -165,7 +170,7 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    * For pre- and post-execution page redirects, this method returns the
    * URL of the page to redirect to.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Returns the URL for the page to which the command needs to redirect.
    *
    * @see ::getExecuteBehavior()
@@ -205,11 +210,11 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    * On success, this function returns and future calls to isValidated()
    * will return TRUE.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws a validation exception with a message describing the problem.
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an access denied exception if an entity is disabled.
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Throws a not found exception if an entity is hidden or not found.
    *
    * @see ::isValidated()
@@ -226,7 +231,7 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    *
    * An exception is thrown if the constraints are not met.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an access denied exception if the command is not available
    *   on this site.
    *
@@ -240,7 +245,7 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    *
    * An exception is thrown if the constraints are not met.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws a validation exception with a message describing the problem.
    *
    * @see ::validateConfiguration()
@@ -253,11 +258,11 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    *
    * An exception is thrown if the constraints are not met.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws a validation exception with a message describing the problem.
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an access denied exception if the parent entity is disabled.
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Throws a not found exception if the parent entity is hidden.
    *
    * @see ::validateConfiguration()
@@ -273,11 +278,11 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    * This function is automatically called by validateConfiguration(),
    * but it may be called directly to validate the selection configuration only.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws a validation exception with a message describing the problem.
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an access denied exception if a selected entity is disabled.
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Throws a not found exception if a selected entity is hidden.
    *
    * @see ::validateConfiguration()
@@ -290,11 +295,11 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    *
    * An exception is thrown if the constraints are not met.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws a validation exception with a message describing the problem.
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Throws an access denied exception if the destination entity is disabled.
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Throws a not found exception if the destination entity is hidden.
    *
    * @see ::validateConfiguration()
@@ -307,7 +312,7 @@ interface FolderShareCommandInterface extends PluginFormInterface, ExecutableInt
    *
    * An exception is thrown if the constraints are not met.
    *
-   * @throws \Drupal\foldershare\Entity\Exception\ValidationException
+   * @throws ValidationException
    *   Throws a validation exception with a message describing the problem.
    *
    * @see ::validateConfiguration()
diff --git a/src/Plugin/FolderShareCommand/MoveAsAdmin.php b/src/Plugin/FolderShareCommand/MoveAsAdmin.php
index 8944302..0923448 100755
--- a/src/Plugin/FolderShareCommand/MoveAsAdmin.php
+++ b/src/Plugin/FolderShareCommand/MoveAsAdmin.php
@@ -69,7 +69,7 @@ class MoveAsAdmin extends MoveBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/MoveGeneral.php b/src/Plugin/FolderShareCommand/MoveGeneral.php
index 1c54f33..fa5bf2b 100755
--- a/src/Plugin/FolderShareCommand/MoveGeneral.php
+++ b/src/Plugin/FolderShareCommand/MoveGeneral.php
@@ -66,7 +66,7 @@ class MoveGeneral extends MoveBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/MoveOnRootList.php b/src/Plugin/FolderShareCommand/MoveOnRootList.php
index 5793b70..c31f9d4 100755
--- a/src/Plugin/FolderShareCommand/MoveOnRootList.php
+++ b/src/Plugin/FolderShareCommand/MoveOnRootList.php
@@ -69,7 +69,7 @@ class MoveOnRootList extends MoveBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/NewFolder.php b/src/Plugin/FolderShareCommand/NewFolder.php
index 0bc3c2d..37a4e30 100755
--- a/src/Plugin/FolderShareCommand/NewFolder.php
+++ b/src/Plugin/FolderShareCommand/NewFolder.php
@@ -51,7 +51,7 @@ class NewFolder extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/NewObject.php b/src/Plugin/FolderShareCommand/NewObject.php
index 2ac869d..5ed7bdb 100755
--- a/src/Plugin/FolderShareCommand/NewObject.php
+++ b/src/Plugin/FolderShareCommand/NewObject.php
@@ -51,7 +51,7 @@ class NewObject extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Open.php b/src/Plugin/FolderShareCommand/Open.php
index c1ab9da..cbe92e4 100755
--- a/src/Plugin/FolderShareCommand/Open.php
+++ b/src/Plugin/FolderShareCommand/Open.php
@@ -58,7 +58,7 @@ class Open extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/ReleaseShare.php b/src/Plugin/FolderShareCommand/ReleaseShare.php
index 8c68df6..ca2d705 100755
--- a/src/Plugin/FolderShareCommand/ReleaseShare.php
+++ b/src/Plugin/FolderShareCommand/ReleaseShare.php
@@ -64,7 +64,7 @@ class ReleaseShare extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Rename.php b/src/Plugin/FolderShareCommand/Rename.php
index 55f3793..5e3ac6d 100755
--- a/src/Plugin/FolderShareCommand/Rename.php
+++ b/src/Plugin/FolderShareCommand/Rename.php
@@ -62,7 +62,7 @@ class Rename extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/Share.php b/src/Plugin/FolderShareCommand/Share.php
index 13b3138..f5df057 100755
--- a/src/Plugin/FolderShareCommand/Share.php
+++ b/src/Plugin/FolderShareCommand/Share.php
@@ -70,7 +70,7 @@ class Share extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
@@ -639,9 +639,9 @@ class Share extends FolderShareCommandBase {
    * If the given user does not have appropriate module permissions, they
    * cannot have either "view" or "access" and an empty array is returned.
    *
-   * @param \Drupal\user\Entity\User $user
+   * @param User $user
    *   The user for whom to build the row.
-   * @param \Drupal\user\Entity\User $owner
+   * @param User $owner
    *   The owner of the current root item.
    * @param array $grant
    *   The access grants for the user.
@@ -1174,7 +1174,7 @@ class Share extends FolderShareCommandBase {
    *
    * @param array $form
    *   The configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The form state.
    *
    * @return array
diff --git a/src/Plugin/FolderShareCommand/Uncompress.php b/src/Plugin/FolderShareCommand/Uncompress.php
index 0bd0f42..2425136 100755
--- a/src/Plugin/FolderShareCommand/Uncompress.php
+++ b/src/Plugin/FolderShareCommand/Uncompress.php
@@ -58,7 +58,7 @@ class Uncompress extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommand/UploadFiles.php b/src/Plugin/FolderShareCommand/UploadFiles.php
index 5dabd2c..12cb6c3 100755
--- a/src/Plugin/FolderShareCommand/UploadFiles.php
+++ b/src/Plugin/FolderShareCommand/UploadFiles.php
@@ -55,7 +55,7 @@ class UploadFiles extends FolderShareCommandBase {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container from which to get services.
    * @param array $configuration
    *   The plugin configuration.
diff --git a/src/Plugin/FolderShareCommandManager.php b/src/Plugin/FolderShareCommandManager.php
index 3ebc456..8687a56 100755
--- a/src/Plugin/FolderShareCommandManager.php
+++ b/src/Plugin/FolderShareCommandManager.php
@@ -41,9 +41,9 @@ class FolderShareCommandManager extends DefaultPluginManager implements Categori
    * @param \Traversable $namespaces
    *   An object containing the root paths, keyed by the corresponding
    *   namespace, in which to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   The backend cache to use to store plugin information.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(
diff --git a/src/Plugin/Search/FolderShareSearch.php b/src/Plugin/Search/FolderShareSearch.php
index 255617f..ad26098 100755
--- a/src/Plugin/Search/FolderShareSearch.php
+++ b/src/Plugin/Search/FolderShareSearch.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\foldershare\Plugin\Search;
 
+use Drupal\search\SearchIndexInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessibleInterface;
 
@@ -86,42 +87,42 @@ class FolderShareSearch extends ConfigurableSearchPluginBase implements Accessib
   /**
    * A database connection object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * An entity type manager object.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * A module manager object.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * A config object for 'search.settings'.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $searchSettings;
 
   /**
    * The Drupal account to use for checking for access to advanced search.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * The Renderer service to format the file or folder.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -130,7 +131,7 @@ class FolderShareSearch extends ConfigurableSearchPluginBase implements Accessib
    *
    * Prior to Drupal 8.8, this interface does not exist.
    *
-   * @var \Drupal\search\SearchIndexInterface
+   * @var SearchIndexInterface
    */
   protected $searchIndex;
 
@@ -184,19 +185,19 @@ class FolderShareSearch extends ConfigurableSearchPluginBase implements Accessib
    *   The plugin_id for the plugin instance.
    * @param mixed $pluginDefinition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   A database connection object.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   An entity type manager object.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   A module manager object.
-   * @param \Drupal\Core\Config\Config $searchSettings
+   * @param Config $searchSettings
    *   A config object for 'search.settings'.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The account object to use for checking for access to advanced search.
-   * @param null|\Drupal\search\SearchIndexInterface $searchIndex
+   * @param null|SearchIndexInterface $searchIndex
    *   The search index. Prior to Drupal 8.8, the SearchIndexInterface did
    *   not exist, so there is no type hint below.
    */
@@ -905,7 +906,7 @@ class FolderShareSearch extends ConfigurableSearchPluginBase implements Accessib
    * the plugin's configuraiton, file content may also be scanned for words
    * to add to the index.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $item
+   * @param FolderShareInterface $item
    *   The item to index.
    */
   private function indexItem(FolderShareInterface $item) {
@@ -1087,7 +1088,7 @@ class FolderShareSearch extends ConfigurableSearchPluginBase implements Accessib
    *   entity ID. If the value is negative or FolderShareInterface::ANY_ITEM_ID,
    *   the search is not constrained to a specific folder tree.
    *
-   * @return \Drupal\Core\Database\StatementInterface|null
+   * @return StatementInterface|null
    *   Returns results from a search query, or NULL if the search failed.
    */
   private function search(
@@ -1320,7 +1321,7 @@ class FolderShareSearch extends ConfigurableSearchPluginBase implements Accessib
    *
    * The standard 'user' variable is set to the owner's display name.
    *
-   * @param \Drupal\Core\Database\StatementInterface $results
+   * @param StatementInterface $results
    *   Results found from a successful search.
    *
    * @return array
diff --git a/src/Settings.php b/src/Settings.php
index 1f1e28e..414c219 100755
--- a/src/Settings.php
+++ b/src/Settings.php
@@ -433,7 +433,7 @@ class Settings {
    * filtered to only include those commands that are currently allowed,
    * based upon module settings for command menu restrictions and content.
    *
-   * @param \Drupal\foldershare\FolderShareInterface $parent
+   * @param FolderShareInterface $parent
    *   The parent entity for the commands. A NULL indicates a root list.
    * @param int $userId
    *   The current user ID.
diff --git a/src/Utilities/AjaxUtilities.php b/src/Utilities/AjaxUtilities.php
index b804c37..21a9773 100755
--- a/src/Utilities/AjaxUtilities.php
+++ b/src/Utilities/AjaxUtilities.php
@@ -33,7 +33,7 @@ final class AjaxUtilities {
    *
    * If no URL is given, the URL for the current page is used.
    *
-   * @param \Drupal\Core\Url $url
+   * @param Url $url
    *   (optional, default = NULL = current page) The URL to redirect to.
    *
    * @return string
@@ -95,13 +95,13 @@ final class AjaxUtilities {
   /**
    * Returns an AJAX response that redirects to a new page.
    *
-   * @param string|\Drupal\Core\Url $url
+   * @param string|Url $url
    *   (optional, default = NULL = current page) The URL to redirect to.
-   * @param \Drupal\Core\Ajax\AjaxResponse $response
+   * @param AjaxResponse $response
    *   (optional, default = NULL = create a new response) The response to
    *   add an AJAX command to.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    *
    * @see ::createRefreshResponse()
@@ -133,11 +133,11 @@ final class AjaxUtilities {
   /**
    * Returns an AJAX response that refreshes the current page.
    *
-   * @param \Drupal\Core\Ajax\AjaxResponse $response
+   * @param AjaxResponse $response
    *   (optional, default = NULL = create a new response) The response to
    *   add an AJAX command to.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    *
    * @see ::createRedirectResponse()
@@ -149,13 +149,13 @@ final class AjaxUtilities {
   /**
    * Returns an AJAX response that shows form errors in a dialog.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   The input values for the form's elements.
-   * @param \Drupal\Core\Ajax\AjaxResponse $response
+   * @param AjaxResponse $response
    *   (optional, default = NULL = create a new response) The response to
    *   add an AJAX command to.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    *
    * @see ::createMessengerErrorsDialogResponse()
@@ -177,11 +177,11 @@ final class AjaxUtilities {
   /**
    * Returns an AJAX response that shows messenger errors in a dialog.
    *
-   * @param \Drupal\Core\Ajax\AjaxResponse $response
+   * @param AjaxResponse $response
    *   (optional, default = NULL = create a new response) The response to
    *   add an AJAX command to.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    *
    * @see ::createFormErrorsDialogResponse()
@@ -203,7 +203,7 @@ final class AjaxUtilities {
   /**
    * Returns an AJAX response that shows messenger errors in a dialog.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Returns an AJAX response.
    *
    * @see ::createFormErrorsDialogResponse()
diff --git a/src/Utilities/CacheUtilities.php b/src/Utilities/CacheUtilities.php
index 08740bd..57c4ae2 100755
--- a/src/Utilities/CacheUtilities.php
+++ b/src/Utilities/CacheUtilities.php
@@ -142,7 +142,7 @@ final class CacheUtilities {
    * process if the flushed content is needed again and must be reloaded
    * from the database.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to flush from the entity caches.
    *
    * @see ::flushAllEntityCaches()
@@ -176,7 +176,7 @@ final class CacheUtilities {
    * directly, then this change is not detected automatically and cache
    * invalidation must be done intentionally.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to flush from the entity caches.
    *
    * @see ::flushAllEntityCaches()
diff --git a/src/Utilities/FormatUtilities.php b/src/Utilities/FormatUtilities.php
index c988505..b40210c 100755
--- a/src/Utilities/FormatUtilities.php
+++ b/src/Utilities/FormatUtilities.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\foldershare\Utilities;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Render\Markup;
 use Drupal\Component\Render\FormattableMarkup;
 
@@ -48,7 +50,7 @@ final class FormatUtilities {
    *   (optional, default = 2) The number of decimal digits for the resulting
    *   number.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   Returns a representation of the number, along with a suffix
    *   that summarizes the value using the selected 'k' units.
    *
@@ -216,7 +218,7 @@ final class FormatUtilities {
    * @param int $number
    *   The number to format.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   Returns a representation of the number.
    */
   public static function formatNumberAsWord(int $number) {
@@ -287,18 +289,18 @@ final class FormatUtilities {
    *
    * The summary is required, but the body and details are optional.
    *
-   * @param string|\Drupal\Component\Render\MarkupInterface $summary
+   * @param string|MarkupInterface $summary
    *   The short summary of the issue.
-   * @param string|\Drupal\Component\Render\MarkupInterface $body
+   * @param string|MarkupInterface $body
    *   (optional, default = NULL = none) The longer description of the issue
    *   and how to resolve it.
-   * @param string|\Drupal\Component\Render\MarkupInterface $detailsSummary
+   * @param string|MarkupInterface $detailsSummary
    *   (optional, default = NULL = none) A brief summary of the details
    *   section. This could be "Details:", for instance.
-   * @param string|\Drupal\Component\Render\MarkupInterface $details
+   * @param string|MarkupInterface $details
    *   (optional, default = NULL = none) The much longer detailed information.
    *
-   * @return \Drupal\Core\Render\Markup
+   * @return Markup
    *   Returns a Markup object suitable for use in messages. Casting the
    *   object to a (string) creates a conventional string message.
    */
