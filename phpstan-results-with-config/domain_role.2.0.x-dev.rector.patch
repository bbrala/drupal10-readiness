diff --git a/domain_role.module b/domain_role.module
index b7dee0e..3e89f07 100644
--- a/domain_role.module
+++ b/domain_role.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\domain\DomainNegotiatorInterface;
 /**
  * @file
  * Contains domain_role.module.
@@ -36,7 +37,7 @@ function domain_role_user_role_load(&$entities) {
   $domain = $domain_negotiator->getActiveId();
   /**
    * @var string $key
-   * @var \Drupal\user\RoleInterface $role
+   * @var RoleInterface $role
    */
   foreach ($entities as $key => $role) {
     if (strpos($key, $domain) === 0) {
@@ -90,7 +91,7 @@ function domain_role_views_data_alter(array &$data) {
  *   (optional) Whether to return role names with the domain name specified, or
  *   the actual role name as the key.
  *
- * @return \Drupal\user\RoleInterface[]
+ * @return RoleInterface[]
  *   An associative array with the role id as the key and the role object as
  *   value.
  */
@@ -131,9 +132,9 @@ function domain_role_ids() {
 function _domain_role_role_id($rolename) {
   static $domain_id;
   if (empty($domain_id)) {
-    /** @var \Drupal\domain\DomainNegotiatorInterface $domain_negotiator */
+    /** @var DomainNegotiatorInterface $domain_negotiator */
     $domain_negotiator = \Drupal::service('domain.negotiator');
     $domain_id = $domain_negotiator->getActiveId();
   }
   return $domain_id . '-' . $rolename;
-}
\ No newline at end of file
+}
diff --git a/src/Entity/DomainUser.php b/src/Entity/DomainUser.php
index a18cf73..a216d39 100644
--- a/src/Entity/DomainUser.php
+++ b/src/Entity/DomainUser.php
@@ -9,6 +9,8 @@
 namespace Drupal\domain_role\Entity;
 
 
+use Drupal\Core\Field\EntityReferenceFieldItemList;
+use Drupal\domain\DomainNegotiatorInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\user\Entity\User;
 use Drupal\user\RoleInterface;
@@ -106,12 +108,12 @@ class DomainUser extends User {
   /**
    * Override preSave to store domain-id along with role-id.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *
    * @throws \Exception
    */
   public function preSave(EntityStorageInterface $storage) {
-    /** @var \Drupal\Core\Field\EntityReferenceFieldItemList $prev_roles */
+    /** @var EntityReferenceFieldItemList $prev_roles */
     $prev_roles = $this->allRoles;
     $roles = $this->get('roles');
     $domain_roles = $this->getDomainRoles();
@@ -144,7 +146,7 @@ class DomainUser extends User {
    * @return string
    */
   private function getDomain() {
-    /** @var \Drupal\domain\DomainNegotiatorInterface $negotiator */
+    /** @var DomainNegotiatorInterface $negotiator */
     $negotiator = \Drupal::service('domain.negotiator');
     return $negotiator->getActiveId();
   }
diff --git a/src/Form/DomainRoleConfigForm.php b/src/Form/DomainRoleConfigForm.php
index 1150340..e8cad54 100644
--- a/src/Form/DomainRoleConfigForm.php
+++ b/src/Form/DomainRoleConfigForm.php
@@ -17,7 +17,7 @@ class DomainRoleConfigForm extends ConfigFormBase {
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
   /**
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index d318e12..c772e47 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\domain_role\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
