diff --git a/src/Element/WebformGroupRoles.php b/src/Element/WebformGroupRoles.php
index 611692e..655f891 100644
--- a/src/Element/WebformGroupRoles.php
+++ b/src/Element/WebformGroupRoles.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_group_extended\Element;
 
+use Drupal\group\Entity\GroupRoleInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Element\Select;
 use Drupal\group\Entity\GroupRole;
@@ -75,7 +76,7 @@ class WebformGroupRoles extends Select {
       '#include_outsider' => TRUE,
     ];
 
-    /** @var \Drupal\group\Entity\GroupRoleInterface[] $group_roles */
+    /** @var GroupRoleInterface[] $group_roles */
     $group_roles = GroupRole::loadMultiple();
     $group_role_names = [];
 
diff --git a/src/WebformGroupManager.php b/src/WebformGroupManager.php
index 38da19a..17cce68 100644
--- a/src/WebformGroupManager.php
+++ b/src/WebformGroupManager.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\webform_group_extended;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Plugin\Context\ContextProviderInterface;
+use Drupal\group\Entity\Storage\GroupContentStorageInterface;
+use Drupal\group\Entity\Storage\GroupRoleStorageInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -24,28 +29,28 @@ class WebformGroupManager implements WebformGroupManagerInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The configuration object factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The webform request handler.
    *
-   * @var \Drupal\webform\WebformRequestInterface
+   * @var WebformRequestInterface
    */
   protected $requestHandler;
 
   /**
    * The webform access rules manager.
    *
-   * @var \Drupal\webform\WebformAccessRulesManagerInterface
+   * @var WebformAccessRulesManagerInterface
    */
   protected $accessRulesManager;
 
@@ -66,7 +71,7 @@ class WebformGroupManager implements WebformGroupManagerInterface {
   /**
    * The current request's group content.
    *
-   * @var \Drupal\group\Entity\GroupContentInterface
+   * @var GroupContentInterface
    */
   protected $currentGroupContent;
 
@@ -87,19 +92,19 @@ class WebformGroupManager implements WebformGroupManagerInterface {
   /**
    * Constructs a WebformGroupManager object.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration object factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\webform\WebformRequestInterface $request_handler
+   * @param WebformRequestInterface $request_handler
    *   The webform request handler.
-   * @param \Drupal\webform\WebformAccessRulesManagerInterface $access_rules_manager
+   * @param WebformAccessRulesManagerInterface $access_rules_manager
    *   The webform access rules manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(AccountInterface $current_user, ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, WebformRequestInterface $request_handler, WebformAccessRulesManagerInterface $access_rules_manager) {
     $this->currentUser = $current_user;
@@ -175,7 +180,7 @@ class WebformGroupManager implements WebformGroupManagerInterface {
     }
 
     // Load from group  context
-    /** @var \Drupal\Core\Plugin\Context\ContextProviderInterface $context_provider */
+    /** @var ContextProviderInterface $context_provider */
     $context_provider = \Drupal::service('group.group_route_context');
     $contexts = $context_provider->getRuntimeContexts(['group']);
     $context = $contexts['group'];
@@ -231,7 +236,7 @@ class WebformGroupManager implements WebformGroupManagerInterface {
       return $this->currentGroupContent;
     }
 
-    /** @var \Drupal\group\Entity\Storage\GroupContentStorageInterface $group_content_storage */
+    /** @var GroupContentStorageInterface $group_content_storage */
     $group_content_storage = $this->getEntityStorage('group_content');
 
     // Get group content id for the source entity.
@@ -239,7 +244,7 @@ class WebformGroupManager implements WebformGroupManagerInterface {
       ->condition('entity_id', $source_entity->id())
       ->execute();
 
-    /** @var \Drupal\group\Entity\GroupContentInterface[] $group_contents */
+    /** @var GroupContentInterface[] $group_contents */
     $group_contents = $group_content_storage->loadMultiple($group_content_ids);
     foreach ($group_contents as $group_content) {
       $group_content_entity = $group_content->getEntity();
@@ -293,7 +298,7 @@ class WebformGroupManager implements WebformGroupManagerInterface {
       }
     }
 
-    /** @var \Drupal\group\Entity\Storage\GroupContentStorageInterface $group_content_storage */
+    /** @var GroupContentStorageInterface $group_content_storage */
     $group_content_storage = $this->getEntityStorage('group_content');
 
     // Get group content id for the source entity.
@@ -301,7 +306,7 @@ class WebformGroupManager implements WebformGroupManagerInterface {
       ->condition('entity_id', $source_entity->id())
       ->execute();
 
-    /** @var \Drupal\group\Entity\GroupContentInterface[] $group_contents */
+    /** @var GroupContentInterface[] $group_contents */
     $group_contents = $group_content_storage->loadMultiple($group_content_ids);
     foreach ($group_contents as $group_content) {
       $group_content_entity = $group_content->getEntity();
@@ -331,14 +336,14 @@ class WebformGroupManager implements WebformGroupManagerInterface {
       }
     }
 
-    /** @var \Drupal\group\Entity\Storage\GroupContentStorageInterface $group_content_storage */
+    /** @var GroupContentStorageInterface $group_content_storage */
     $group_content_storage = $this->getEntityStorage('group');
 
     // Get group content id for the source entity.
     $group_content_ids = $group_content_storage->getQuery()
       ->condition('id', $source_entity->id())
       ->execute();
-    /** @var \Drupal\group\Entity\GroupContentInterface[] $group_contents */
+    /** @var GroupContentInterface[] $group_contents */
     $group_contents = $group_content_storage->loadMultiple($group_content_ids);
     foreach ($group_contents as $group_content) {
       if (
@@ -388,13 +393,12 @@ class WebformGroupManager implements WebformGroupManagerInterface {
   /****************************************************************************/
   // Helper methods.
   /****************************************************************************/
-
   /**
    * Get current user group roles for group content.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   A user account.
    *
    * @return array
@@ -406,7 +410,7 @@ class WebformGroupManager implements WebformGroupManagerInterface {
     // Must get implied groups, which includes outsider, by calling
     // \Drupal\group\Entity\Storage\GroupRoleStorage::loadByUserAndGroup.
     // @see \Drupal\group\Entity\Storage\GroupRoleStorageInterface::loadByUserAndGroup
-    /** @var \Drupal\group\Entity\Storage\GroupRoleStorageInterface $group_role_storage */
+    /** @var GroupRoleStorageInterface $group_role_storage */
     $group_role_storage = $this->getEntityStorage('group_role');
     $group_roles = $group_role_storage->loadByUserAndGroup($account, $group, TRUE);
     if (!$group_roles) {
@@ -430,9 +434,9 @@ class WebformGroupManager implements WebformGroupManagerInterface {
   /**
    * Get current user group permissions for group content.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   A user account.
    *
    * @return array
diff --git a/src/WebformGroupManagerInterface.php b/src/WebformGroupManagerInterface.php
index 8d4c6aa..e8032c2 100644
--- a/src/WebformGroupManagerInterface.php
+++ b/src/WebformGroupManagerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_group_extended;
 
+use Drupal\group\Entity\GroupContentInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\webform\WebformSubmissionInterface;
 use Drupal\webform\WebformInterface;
@@ -48,7 +49,7 @@ interface WebformGroupManagerInterface {
   /**
    * Get the group content for the current request.
    *
-   * @return \Drupal\group\Entity\GroupContentInterface|bool
+   * @return GroupContentInterface|bool
    *   The group content for the current request.
    *   FALSE if no group content is found for the current request.
    */
@@ -57,7 +58,7 @@ interface WebformGroupManagerInterface {
   /**
    * Get the group webform for the current request.
    *
-   * @return \Drupal\webform\WebformInterface|null
+   * @return WebformInterface|null
    *   The group webform for the current request.
    */
   public function getCurrentGroupWebform();
@@ -65,12 +66,12 @@ interface WebformGroupManagerInterface {
   /**
    * Get group roles for a webform submission and a specified user account.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   A webform submission.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   A user account.
    *
-   * @return \Drupal\group\Entity\GroupContentInterface|bool
+   * @return GroupContentInterface|bool
    *   The group role  for the webform submission.
    *   FALSE if no group roles found for the webform submission.
    */
@@ -79,12 +80,12 @@ interface WebformGroupManagerInterface {
   /**
    * Get group permissions for a webform submission and a specified user account.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   A webform submission.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   A user account.
    *
-   * @return \Drupal\group\Entity\GroupContentInterface|bool
+   * @return GroupContentInterface|bool
    *   The group permission for the webform submission.
    *   FALSE if no group permissions found for the webform submission.
    */
@@ -94,10 +95,10 @@ interface WebformGroupManagerInterface {
   /**
    * Get group content for a webform submission.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   A webform submission.
    *
-   * @return \Drupal\group\Entity\GroupContentInterface|bool
+   * @return GroupContentInterface|bool
    *   The group content for the webform submission.
    *   FALSE if no group roles is found for the webform submission.
    */
@@ -106,7 +107,7 @@ interface WebformGroupManagerInterface {
   /**
    * Get a webform's access rules with group roles.
    *
-   * @param \Drupal\webform\WebformInterface $webform
+   * @param WebformInterface $webform
    *   A webform.
    *
    * @return array
