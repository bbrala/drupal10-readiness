modules/contrib/ai_support_bot/ai_support_bot.install
modules/contrib/ai_support_bot/ai_support_bot.module
modules/contrib/ai_support_bot/src/Controller/AIClients.php
modules/contrib/ai_support_bot/src/Controller/AIClientsAdmin.php
modules/contrib/ai_support_bot/src/Controller/AIQAnswers.php
modules/contrib/ai_support_bot/src/Controller/AISupportClientsCheck.php
modules/contrib/ai_support_bot/src/Controller/AItextToSpeech.php
modules/contrib/ai_support_bot/src/Form/AIForm.php
modules/contrib/ai_support_bot/src/Form/AIFormAskRyan.php
modules/contrib/ai_support_bot/src/Form/Questions.php
modules/contrib/ai_support_bot/src/Form/Settings.php
modules/contrib/ai_support_bot/src/Plugin/Block/AIFormBlock.php
modules/contrib/ai_support_bot/src/Plugin/Block/AIFormNeedHelpBlock.php

8 files with changes
====================

1) modules/contrib/ai_support_bot/src/Form/Settings.php:43

    ---------- begin diff ----------
@@ @@
     public function buildForm(array $form, FormStateInterface $form_state, $no_js_use = false)
     {
         $config = $this->config('ai_support_bot.settings');
-        $query = db_select('ai_support_bot', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('ai_support_bot', 'v');
         $query->fields('v');
         $results = $query->countQuery()->execute()->fetchField();
         $form['questions_fieldset'] = [
@@ @@
         $questions = '';
         $result = [];

-        $query = db_select('ai_support_bot', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('ai_support_bot', 'v');
         $query->fields('v');
         $results = $query->execute()->fetchAll();
         foreach ($results as $key => $value) {
    ----------- end diff -----------

Applied rules:
 * DBSelectRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ai_support_bot/src/Form/Questions.php:250

    ---------- begin diff ----------
@@ @@
     $answers = '';
     $questions = '';
     $result = [];
-    $query = db_select('ai_support_bot', 'v');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $query = \Drupal::database()->select('ai_support_bot', 'v');
     $query->fields('v');
     $results = $query->execute()->fetchAll();
     foreach ($results as $key => $value) {
    ----------- end diff -----------

Applied rules:
 * DBSelectRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/ai_support_bot/src/Form/AIFormAskRyan.php:49

    ---------- begin diff ----------
@@ @@
      *
      * @param array $form
      *   An associative array containing the structure of the form.
-     * @param \Drupal\Core\Form\FormStateInterface $form_state
+     * @param FormStateInterface $form_state
      *   The current state of the form.
      *
      * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/ai_support_bot/src/Form/AIForm.php:50

    ---------- begin diff ----------
@@ @@
      *
      * @param array $form
      *   An associative array containing the structure of the form.
-     * @param \Drupal\Core\Form\FormStateInterface $form_state
+     * @param FormStateInterface $form_state
      *   The current state of the form.
      *
      * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/ai_support_bot/src/Controller/AItextToSpeech.php:26

    ---------- begin diff ----------
@@ @@
       // if (!file_exists($file)) {.
       file_put_contents($file, $data);
     }
-    $path = file_create_url($file);
+    $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file);
     $player = '<audio style="display:none;" autoplay src="' . $path . '" type="audio/mp3" ></audio>';
     return $player;
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/ai_support_bot/src/Controller/AIQAnswers.php:73

    ---------- begin diff ----------
@@ @@
         $questions = '';
         $result = [];
         $answer = 'no-answer';
-        $query = db_select('ai_support_bot', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('ai_support_bot', 'v');
         $query->fields('v');
         $betterAnswer = [];
         $results = $query->execute()->fetchAll();
@@ @@
         $answersResult = [];
         $questionContent = [];
         // If ($answer == 'no-answer') {.
-        $query = db_select('node_field_data', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('node_field_data', 'v');
         $query->fields('v');
         $results = $query->execute()->fetchAll();
         $rm1 = array_rand($randomAnswer1);
@@ @@
             $user = \Drupal::currentUser();
             // Empty the table.
             $values = [];
-            $query = db_select('ai_support_bot_new_questions', 'v');
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+            $query = \Drupal::database()->select('ai_support_bot_new_questions', 'v');
             $query->condition('v.question', $question);
             $query->condition('v.answer', $answer);
             $query->fields('v');
    ----------- end diff -----------

Applied rules:
 * DBSelectRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/ai_support_bot/src/Controller/AIClientsAdmin.php:37

    ---------- begin diff ----------
@@ @@
      */
     public function getNewQuestions()
     {
-        $query = db_select('ai_support_bot_new_questions', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('ai_support_bot_new_questions', 'v');
         $query->fields('v');
         $results = $query->execute()->fetchAll();
         $final = json_decode(json_encode($results), true);
@@ @@
           array('data' => $this->t('times_repeated'), 'field' => 'times_repeated', 'sort' => 'desc'),
         );

-        $query = db_select('ai_support_bot_new_questions', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('ai_support_bot_new_questions', 'v');
         $query->fields('v', $headers);
         // The actual action of sorting the rows is here.
         $table_sort = $query->extend('Drupal\Core\Database\Query\TableSortExtender')
    ----------- end diff -----------

Applied rules:
 * DBSelectRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/ai_support_bot/src/Controller/AIClients.php:36

    ---------- begin diff ----------
@@ @@
     public function getNewQuestions()
     {
         $uid = $this->currentUser->id();
-        $query = db_select('ai_support_bot_analytics', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('ai_support_bot_analytics', 'v');
         $query->fields('v');
         $query->condition('v.uid', $uid);
         $results = $query->execute()->fetchAll();
@@ @@
           array('data' => $this->t('Website'), 'field' => 'website'),
         );

-        $query = db_select('ai_support_bot_analytics', 'v');
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+        $query = \Drupal::database()->select('ai_support_bot_analytics', 'v');
         $query->fields('v', $headers);
         $query->condition('v.uid', $uid);
         // The actual action of sorting the rows is here.
    ----------- end diff -----------

Applied rules:
 * DBSelectRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

