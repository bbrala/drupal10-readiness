modules/contrib/colossal_menu/colossal_menu.install
modules/contrib/colossal_menu/colossal_menu.module
modules/contrib/colossal_menu/colossal_menu.post_update.php
modules/contrib/colossal_menu/docroot/modules/contrib/colossal_menu/colossal_menu.post_update.php
modules/contrib/colossal_menu/modules/colossal_menu_rest/src/Plugin/rest/resource/MenuTreeResource.php
modules/contrib/colossal_menu/src/Controller/LinkController.php
modules/contrib/colossal_menu/src/Entity/Link.php
modules/contrib/colossal_menu/src/Entity/LinkType.php
modules/contrib/colossal_menu/src/Entity/LinkViewsData.php
modules/contrib/colossal_menu/src/Entity/Menu.php
modules/contrib/colossal_menu/src/Form/LinkDeleteForm.php
modules/contrib/colossal_menu/src/Form/LinkForm.php
modules/contrib/colossal_menu/src/Form/LinkTypeDeleteForm.php
modules/contrib/colossal_menu/src/Form/LinkTypeForm.php
modules/contrib/colossal_menu/src/Form/MenuDeleteForm.php
modules/contrib/colossal_menu/src/Form/MenuForm.php
modules/contrib/colossal_menu/src/LinkAccessControlHandler.php
modules/contrib/colossal_menu/src/LinkInterface.php
modules/contrib/colossal_menu/src/LinkTypeAccessControlHandler.php
modules/contrib/colossal_menu/src/LinkTypeInterface.php
modules/contrib/colossal_menu/src/LinkTypeListBuilder.php
modules/contrib/colossal_menu/src/Menu/MenuLinkTree.php
modules/contrib/colossal_menu/src/Menu/MenuTreeStorage.php
modules/contrib/colossal_menu/src/MenuAccessControlHandler.php
modules/contrib/colossal_menu/src/MenuListBuilder.php
modules/contrib/colossal_menu/src/Plugin/Block/MenuBlock.php
modules/contrib/colossal_menu/src/Plugin/Derivative/MenuBlock.php
modules/contrib/colossal_menu/tests/src/Functional/ColossalMenuFunctionalTestBase.php
modules/contrib/colossal_menu/tests/src/Functional/LinkDeleteFormTest.php
modules/contrib/colossal_menu/tests/src/Functional/LinkFormTest.php
modules/contrib/colossal_menu/tests/src/Functional/LinkTypeDeleteFormTest.php
modules/contrib/colossal_menu/tests/src/Functional/LinkTypeFormTest.php
modules/contrib/colossal_menu/tests/src/Functional/MenuDeleteFormTest.php
modules/contrib/colossal_menu/tests/src/Functional/MenuFormTest.php

15 files with changes
=====================

1) modules/contrib/colossal_menu/tests/src/Functional/ColossalMenuFunctionalTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\colossal_menu\Functional;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
    * @param array $values
    *   Entity values for the menu.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function addMenu(array $values = []): void {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = \Drupal::entityTypeManager()
       ->getStorage('colossal_menu')
       ->create(['id' => 'tests', 'label' => 'Tests'] + $values);
@@ @@
    * @param array $values
    *   Entity values for the link type.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function addLinkType(array $values = []): void {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = \Drupal::entityTypeManager()
       ->getStorage('colossal_menu_link_type')
       ->create(['id' => 'test_type', 'label' => 'Test Type'] + $values);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/colossal_menu/src/Plugin/Block/MenuBlock.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_tree
+   * @param MenuLinkTreeInterface $menu_tree
    *   The menu tree service.
-   * @param \Drupal\Core\Menu\MenuActiveTrailInterface $menu_active_trail
+   * @param MenuActiveTrailInterface $menu_active_trail
    *   The active menu trail service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MenuLinkTreeInterface $menu_tree, MenuActiveTrailInterface $menu_active_trail, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/colossal_menu/src/MenuListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\colossal_menu;

+use Drupal\Core\Url;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;

@@ @@

     // Since links are managed from the menu edit page we remove the destination
     // parameter to make it easier to modify and save link changes quickly.
-    /** @var \Drupal\Core\Url $url */
+    /** @var Url $url */
     $url = $operations['edit']['url'];
     $query = $url->getOption('query');
     unset($query['destination']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/colossal_menu/src/MenuAccessControlHandler.php:17

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\colossal_menu\LinkInterface $entity */
+    /** @var LinkInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'view colossal_menu');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/colossal_menu/src/Menu/MenuTreeStorage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\colossal_menu\Menu;

+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\colossal_menu\Entity\Link;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Menu\MenuTreeParameters;
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;

@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $currentRouteMatch;

@@ @@
   /**
    * Constructs a new \Drupal\Core\Menu\MenuTreeStorage.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A Database connection to use for reading and writing configuration data.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManager service.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $current_route_match
+   * @param RouteMatchInterface $current_route_match
    *   The currently active route match object.
    * @param string $entity_type
    *   The entity type name.
@@ @@
    * @param string $table
    *   A database table name to store configuration data in.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(Connection $connection, EntityTypeManagerInterface $entity_type_manager, RouteMatchInterface $current_route_match, string $entity_type, string $table) {
     $this->connection = $connection;
@@ @@
    * {@inheritdoc}
    */
   public function loadByProperties(array $properties) {
-    /** @var \Drupal\colossal_menu\Entity\Link[] $entities */
+    /** @var Link[] $entities */
     $entities = $this->storage->loadByProperties($properties);
     return $entities;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/colossal_menu/src/Menu/MenuLinkTree.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\colossal_menu\Menu;

+use Drupal\colossal_menu\LinkInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Access\AccessibleInterface;
 use Drupal\Core\Controller\ControllerResolverInterface;
@@ @@
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a \Drupal\Core\Menu\MenuLinkTree object.
    *
-   * @param \Drupal\Core\Menu\MenuTreeStorageInterface $tree_storage
+   * @param MenuTreeStorageInterface $tree_storage
    *   The menu link tree storage.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider to load routes by name.
-   * @param \Drupal\Core\Menu\MenuActiveTrailInterface $menu_active_trail
+   * @param MenuActiveTrailInterface $menu_active_trail
    *   The active menu trail service.
-   * @param \Drupal\Core\Controller\ControllerResolverInterface $controller_resolver
+   * @param ControllerResolverInterface $controller_resolver
    *   The controller resolver.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManager service.
    */
   public function __construct(MenuTreeStorageInterface $tree_storage,
@@ @@
    */
   protected function addItemContent(array &$tree) {
     foreach ($tree as &$item) {
-      /** @var \Drupal\colossal_menu\LinkInterface $link */
+      /** @var LinkInterface $link */
       $link = $item['original_link'];

       $item['show_title'] = $link->showTitle();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/colossal_menu/src/LinkTypeAccessControlHandler.php:17

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\colossal_menu\LinkInterface $entity */
+    /** @var LinkInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIf($account->hasPermission('view colossal_menu_link_type'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/colossal_menu/src/LinkAccessControlHandler.php:17

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\colossal_menu\LinkInterface $entity */
+    /** @var LinkInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isEnabled()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/colossal_menu/src/Form/MenuForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Menu Tree.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;

@@ @@
    *
    * @param array $elements
    *   An array of form elements to be filled.
-   * @param \Drupal\Core\Menu\MenuLinkTreeElement $item
+   * @param MenuLinkTreeElement $item
    *   Menu Link Tree element.
    * @param int $depth
    *   The current depth.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/colossal_menu/src/Form/LinkForm.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The link tree.
    *
-   * @var \Drupal\colossal_menu\Menu\MenuLinkTree
+   * @var MenuLinkTree
    */
   protected $linkTree;

@@ @@
   /**
    * Constructs a LinkForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\colossal_menu\Menu\MenuLinkTree $link_tree
+   * @param MenuLinkTree $link_tree
    *   The colossal menu link tree.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeManagerInterface $entity_type_manager, MenuLinkTree $link_tree, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/colossal_menu/src/Entity/Menu.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\colossal_menu\Entity;

+use Drupal\colossal_menu\Menu\MenuTreeStorage;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\system\MenuInterface;
@@ @@
    */
   public static function preDelete(EntityStorageInterface $storage, array $entities) {
     parent::preDelete($storage, $entities);
-    /** @var \Drupal\colossal_menu\Menu\MenuTreeStorage $menu_tree_storage */
+    /** @var MenuTreeStorage $menu_tree_storage */
     $menu_tree_storage = \Drupal::service('colossal_menu.tree_storage');
     foreach ($entities as $menu) {
       $links = $menu_tree_storage->loadByProperties(['menu' => $menu->id()]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/colossal_menu/src/Entity/Link.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\colossal_menu\Entity;

+use Drupal\Core\Database\Connection;
+use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Database\Query\Condition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
   /**
    * Database Connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * Url Object.
    *
-   * @var \Drupal\Core\Url
+   * @var Url
    */
   protected $url;

@@ @@
   /**
    * Get the database connection.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   The database connection.
    */
   protected function getConnection() {
@@ @@
    * This method is marked private to prevent sub-classes from retrieving
    * services from the container through it.
    *
-   * @return \Symfony\Component\DependencyInjection\ContainerInterface
+   * @return ContainerInterface
    *   The service container.
    */
   private function container() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/colossal_menu/src/Controller/LinkController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\colossal_menu\Controller;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
   /**
    * Current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * Colossal Menu Link storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;

@@ @@
   /**
    * Colossal Menu Link Type storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $typeStorage;

@@ @@
   /**
    * LinkController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   Colossal Menu Link storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $type_storage
+   * @param EntityStorageInterface $type_storage
    *   Colossal Menu Link Type storage.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   Current route match.
    */
   public function __construct(
@@ @@
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager */
+    /** @var EntityTypeManagerInterface $entity_manager */
     $entity_type_manager = $container->get('entity_type.manager');
     return new static(
       $entity_type_manager->getStorage('colossal_menu_link'),
@@ @@
    * Displays add links for available bundles/types for entity
    * colossal_menu_link.
    *
-   * @param \Drupal\system\MenuInterface $colossal_menu
+   * @param MenuInterface $colossal_menu
    *   An entity representing a custom menu.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ @@
    * Presents the creation form for colossal_menu_link entities of given
    * bundle/type.
    *
-   * @param \Drupal\system\MenuInterface $colossal_menu
+   * @param MenuInterface $colossal_menu
    *   An entity representing a custom menu.
-   * @param \Drupal\Core\Entity\EntityInterface $colossal_menu_link_type
+   * @param EntityInterface $colossal_menu_link_type
    *   The custom bundle to add.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ @@
   /**
    * Provides the page title for this controller.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $colossal_menu_link_type
+   * @param EntityInterface $colossal_menu_link_type
    *   The custom bundle/type being added.
    *
    * @return string
@@ @@
    * Presents the creation form for colossal_menu_link entities of given
    * bundle/type.
    *
-   * @param \Drupal\colossal_menu\LinkInterface $colossal_menu_link
+   * @param LinkInterface $colossal_menu_link
    *   The custom bundle to add.
    *
    * @return array
@@ @@
   /**
    * Provides the page title for this controller.
    *
-   * @param \Drupal\colossal_menu\LinkInterface $colossal_menu_link
+   * @param LinkInterface $colossal_menu_link
    *   Link type being edited.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/colossal_menu/docroot/modules/contrib/colossal_menu/colossal_menu.post_update.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\colossal_menu\LinkTypeInterface;
+use Drupal\colossal_menu\Entity\Link;
+use Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface;
 /**
  * @file
  * Post update functions for Colossal Menu.
@@ @@
  * Remove deprecated link `machine_name` field.
  */
 function colossal_menu_post_update_remove_link_machine_name(&$sandbox = NULL) {
-  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository */
+  /** @var EntityDisplayRepositoryInterface $entity_display_repository */
   $entity_display_repository = \Drupal::service('entity_display.repository');
   $link_type_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link_type');
@@ @@
   ])->save();

   // Add new field instance to all link types.
-  /** @var \Drupal\colossal_menu\LinkTypeInterface $link_type */
+  /** @var LinkTypeInterface $link_type */
   foreach ($link_type_storage->loadMultiple() as $link_type) {
     FieldConfig::create([
       'field_name' => $field_name,
@@ @@
     ->fetchAllKeyed();
   $link_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link');
-  /** @var \Drupal\colossal_menu\Entity\Link $link */
+  /** @var Link $link */
   foreach ($link_storage->loadMultiple() as $link) {
     $link->set($field_name, $machine_names[$link->id()]);
     $link->save();
@@ @@
   }

   // Uninstall base field.
-  /** @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface $update_manager */
+  /** @var EntityDefinitionUpdateManagerInterface $update_manager */
   $update_manager = Drupal::service('entity.definition_update_manager');
   $definition = $update_manager->getFieldStorageDefinition('machine_name', 'colossal_menu_link');
   $update_manager->uninstallFieldStorageDefinition($definition);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


15) modules/contrib/colossal_menu/colossal_menu.post_update.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\colossal_menu\LinkTypeInterface;
+use Drupal\colossal_menu\Entity\Link;
+use Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface;
 /**
  * @file
  * Post update functions for Colossal Menu.
@@ @@
  * Remove deprecated link `machine_name` field.
  */
 function colossal_menu_post_update_remove_link_machine_name() {
-  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository */
+  /** @var EntityDisplayRepositoryInterface $entity_display_repository */
   $entity_display_repository = \Drupal::service('entity_display.repository');
   $link_type_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link_type');
@@ @@
   ])->save();

   // Add new field instance to all link types.
-  /** @var \Drupal\colossal_menu\LinkTypeInterface $link_type */
+  /** @var LinkTypeInterface $link_type */
   foreach ($link_type_storage->loadMultiple() as $link_type) {
     FieldConfig::create([
       'field_name' => $field_name,
@@ @@
     ->fetchAllKeyed();
   $link_storage = Drupal::entityTypeManager()
     ->getStorage('colossal_menu_link');
-  /** @var \Drupal\colossal_menu\Entity\Link $link */
+  /** @var Link $link */
   foreach ($link_storage->loadMultiple() as $link) {
     $link->set($field_name, $machine_names[$link->id()]);
     $link->save();
@@ @@
   }

   // Uninstall base field.
-  /** @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface $update_manager */
+  /** @var EntityDefinitionUpdateManagerInterface $update_manager */
   $update_manager = Drupal::service('entity.definition_update_manager');
   $definition = $update_manager->getFieldStorageDefinition('machine_name', 'colossal_menu_link');
   $update_manager->uninstallFieldStorageDefinition($definition);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/colossal_menu/modules/colossal_menu_rest/src/Plugin/rest
         /resource/MenuTreeResource.php" file, due to:                          
         "Analyze error: "Class                                                 
         Drupal\rest_menu_tree\Plugin\rest\resource\MenuTreeResource not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

