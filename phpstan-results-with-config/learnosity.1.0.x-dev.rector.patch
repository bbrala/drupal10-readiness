diff --git a/learnosity.views.inc b/learnosity.views.inc
index ac910ec..aca545e 100644
--- a/learnosity.views.inc
+++ b/learnosity.views.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\Sql\DefaultTableMapping;
 /**
  * @file
  * Provide views data for learnosity.module.
@@ -16,7 +17,7 @@ function learnosity_field_views_data(FieldStorageConfigInterface $field_storage)
   $data = views_field_default_views_data($field_storage);
   $entity_type_manager = \Drupal::entityTypeManager();
   $entity_type_id = $field_storage->getTargetEntityTypeId();
-  /** @var \Drupal\Core\Entity\Sql\DefaultTableMapping $table_mapping */
+  /** @var DefaultTableMapping $table_mapping */
   $table_mapping = $entity_type_manager->getStorage($entity_type_id)->getTableMapping();
 
   foreach ($data as $table_name => $table_data) {
diff --git a/src/Commands/LearnosityCommands.php b/src/Commands/LearnosityCommands.php
index b1d8e87..0e34527 100644
--- a/src/Commands/LearnosityCommands.php
+++ b/src/Commands/LearnosityCommands.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\learnosity\Commands;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\learnosity\LearnositySdk;
@@ -19,23 +21,23 @@ class LearnosityCommands extends DrushCommands {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The learnosity Sdk service.
    *
-   * @var \Drupal\learnosity\LearnositySdk
+   * @var LearnositySdk
    */
   protected $learnosity;
 
   /**
    * LearnosityCommands constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\learnosity\LearnositySdk $learnosity
+   * @param LearnositySdk $learnosity
    *   The learnosity sdk service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, LearnositySdk $learnosity) {
@@ -67,11 +69,11 @@ class LearnosityCommands extends DrushCommands {
    * @aliases laudit
    * @filter-default-field reference
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Activity details formatted as table.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function auditActivities(array $options = ['entity-id' => self::REQ, 'format' => 'table']) {
     $rows = [];
diff --git a/src/Controller/LearnosityActivityController.php b/src/Controller/LearnosityActivityController.php
index 86995a8..aadca06 100644
--- a/src/Controller/LearnosityActivityController.php
+++ b/src/Controller/LearnosityActivityController.php
@@ -21,23 +21,23 @@ class LearnosityActivityController extends ControllerBase implements ContainerIn
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * Constructs a LearnosityActivityController object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
    */
   public function __construct(DateFormatter $date_formatter, Renderer $renderer) {
@@ -91,7 +91,7 @@ class LearnosityActivityController extends ControllerBase implements ContainerIn
   /**
    * Generates an overview table of older revisions of an activity.
    *
-   * @param \Drupal\learnosity\Entity\LearnosityActivityInterface $entity
+   * @param LearnosityActivityInterface $entity
    *   A Learnosity Activity object.
    *
    * @return array
@@ -146,7 +146,9 @@ class LearnosityActivityController extends ControllerBase implements ContainerIn
           ]));
         }
         else {
-          $link = $entity->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$entity` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $entity->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/src/Controller/LearnosityEventController.php b/src/Controller/LearnosityEventController.php
index 7f5d48b..fbf2c59 100644
--- a/src/Controller/LearnosityEventController.php
+++ b/src/Controller/LearnosityEventController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\learnosity\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\learnosity\Event\LearnosityEvent;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -18,23 +20,23 @@ class LearnosityEventController extends ControllerBase implements ContainerInjec
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * LearnosityEventController constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request stack service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(RequestStack $request, EventDispatcherInterface $event_dispatcher) {
@@ -58,8 +60,8 @@ class LearnosityEventController extends ControllerBase implements ContainerInjec
    * @return array
    *   The associative array of contextual values.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function processContext() {
     // @todo: Make this more robust.
@@ -79,11 +81,11 @@ class LearnosityEventController extends ControllerBase implements ContainerInjec
   /**
    * Dispatches an event from Learnosity.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function dispatchEvent($name) {
 
@@ -94,7 +96,7 @@ class LearnosityEventController extends ControllerBase implements ContainerInjec
     $context = $this->processContext();
 
     $event = new LearnosityEvent($name, $context);
-    $dispatch = $this->eventDispatcher->dispatch('learnosity.' . $name, $event);
+    $dispatch = $this->eventDispatcher->dispatch($event, 'learnosity.' . $name);
 
     // Check to see if any subscribers return a response. If they do then use
     // that. Otherwise default to an empty ajax response.
diff --git a/src/Controller/LearnosityImageUploadController.php b/src/Controller/LearnosityImageUploadController.php
index c4292c4..372a0a4 100644
--- a/src/Controller/LearnosityImageUploadController.php
+++ b/src/Controller/LearnosityImageUploadController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\learnosity\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\CloseDialogCommand;
 use Drupal\Core\Ajax\OpenDialogCommand;
@@ -21,14 +24,14 @@ class LearnosityImageUploadController extends ControllerBase implements Containe
   /**
    * The image upload plugin manager.
    *
-   * @var \Drupal\learnosity\LearnosityImageUploadPluginManager
+   * @var LearnosityImageUploadPluginManager
    */
   protected $imageUploadManager;
 
   /**
    * Constructs a LearnosityImageUploadController object.
    *
-   * @param \Drupal\learnosity\LearnosityImageUploadPluginManager $image_upload_manager
+   * @param LearnosityImageUploadPluginManager $image_upload_manager
    *   The Learnosity Image Upload Plugin Manager.
    */
   public function __construct(LearnosityImageUploadPluginManager $image_upload_manager) {
@@ -47,17 +50,17 @@ class LearnosityImageUploadController extends ControllerBase implements Containe
   /**
    * Open image upload dialog box.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    * @param string $editor
    *   The activity editor.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
    */
   public function uploadForm(Request $request, $editor) {
     // Load the creation form of a given entity type. The entity type is
diff --git a/src/Element/LearnosityActivityEditor.php b/src/Element/LearnosityActivityEditor.php
index 6085e68..e131841 100644
--- a/src/Element/LearnosityActivityEditor.php
+++ b/src/Element/LearnosityActivityEditor.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\learnosity\Element;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface;
 use Drupal\Core\Entity\EntityFormInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -54,7 +56,7 @@ class LearnosityActivityEditor extends FormElement {
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    * @param array $complete_form
    *   The complete form.
@@ -127,7 +129,7 @@ class LearnosityActivityEditor extends FormElement {
 
     // Set current user id and email if none is provided.
     if (empty($element['#user'])) {
-      /** @var \Drupal\user\Entity\User $user */
+      /** @var User $user */
       $user = \Drupal::service('entity_type.manager')->getStorage('user')->load(\Drupal::currentUser()->id());
       $element['#user'] = [
         'id' => $user->id(),
@@ -252,7 +254,7 @@ class LearnosityActivityEditor extends FormElement {
         'handler' => $element['#selection_handler'],
       ];
 
-      /** @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface $handler */
+      /** @var SelectionInterface $handler */
       $handler = \Drupal::service('plugin.manager.entity_reference_selection')->getInstance($options);
 
       // Check to see if an entity exists.
@@ -280,7 +282,7 @@ class LearnosityActivityEditor extends FormElement {
       else {
         $input_values = [$element['#value']];
         foreach ($input_values as $input) {
-          /** @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface $handler */
+          /** @var SelectionInterface $handler */
           $entity = $handler->createNewEntity($element['#target_type'], 'learnosity_activity', $input['reference'], $element['#autocreate']['uid']);
           $entity->setData($data);
           $value[] = [
diff --git a/src/Entity/LearnosityActivityInterface.php b/src/Entity/LearnosityActivityInterface.php
index 1d0013c..69b786f 100644
--- a/src/Entity/LearnosityActivityInterface.php
+++ b/src/Entity/LearnosityActivityInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -108,7 +109,7 @@ interface LearnosityActivityInterface extends ContentEntityInterface, RevisionLo
   /**
    * Gets the Activity revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/src/Event/LearnosityEvent.php b/src/Event/LearnosityEvent.php
index 148071e..7fef09f 100644
--- a/src/Event/LearnosityEvent.php
+++ b/src/Event/LearnosityEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\learnosity\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\HttpFoundation\Response;
 
 /**
@@ -27,7 +27,7 @@ class LearnosityEvent extends Event {
   /**
    * The return response object.
    *
-   * @var \Symfony\Component\HttpFoundation\Response
+   * @var Response
    */
   protected $response;
 
@@ -67,7 +67,7 @@ class LearnosityEvent extends Event {
   /**
    * Sets the return response object.
    *
-   * @param \Symfony\Component\HttpFoundation\Response $response
+   * @param Response $response
    *   The return response.
    */
   public function setResponse(Response $response) {
@@ -77,7 +77,7 @@ class LearnosityEvent extends Event {
   /**
    * Gets the return response object.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The return response.
    */
   public function getResponse() {
diff --git a/src/EventSubscriber/LearnositySessionExpireSubscriber.php b/src/EventSubscriber/LearnositySessionExpireSubscriber.php
index 61defc4..1c6f2ca 100644
--- a/src/EventSubscriber/LearnositySessionExpireSubscriber.php
+++ b/src/EventSubscriber/LearnositySessionExpireSubscriber.php
@@ -17,14 +17,14 @@ class LearnositySessionExpireSubscriber implements EventSubscriberInterface {
   /**
    * The Content Completion Settings service.
    *
-   * @var \Drupal\learnosity\LearnositySessionHandler
+   * @var LearnositySessionHandler
    */
   protected $sessionHandler;
 
   /**
    * LearnosityEventsSubscriber constructor.
    *
-   * @param \Drupal\learnosity\LearnositySessionHandler $session_handler
+   * @param LearnositySessionHandler $session_handler
    *   The learnosity session handler.
    */
   public function __construct(LearnositySessionHandler $session_handler) {
@@ -43,7 +43,7 @@ class LearnositySessionExpireSubscriber implements EventSubscriberInterface {
   /**
    * Test finished subscribed event callback.
    *
-   * @param \Drupal\learnosity\Event\LearnosityEvent $event
+   * @param LearnosityEvent $event
    *   The learnosity event.
    */
   public function expireSessions(LearnosityEvent $event) {
diff --git a/src/Form/LearnosityActivityEditorForm.php b/src/Form/LearnosityActivityEditorForm.php
index 3f407a3..6dcf6d8 100644
--- a/src/Form/LearnosityActivityEditorForm.php
+++ b/src/Form/LearnosityActivityEditorForm.php
@@ -156,7 +156,7 @@ class LearnosityActivityEditorForm extends EntityForm {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
diff --git a/src/Form/LearnosityActivityRevisionDeleteForm.php b/src/Form/LearnosityActivityRevisionDeleteForm.php
index 327fccd..9314670 100644
--- a/src/Form/LearnosityActivityRevisionDeleteForm.php
+++ b/src/Form/LearnosityActivityRevisionDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity\Form;
 
+use Drupal\learnosity\Entity\LearnosityActivityInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -20,39 +21,39 @@ class LearnosityActivityRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The Activity revision.
    *
-   * @var \Drupal\learnosity\Entity\LearnosityActivityInterface
+   * @var LearnosityActivityInterface
    */
   protected $revision;
 
   /**
    * The Entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * LearnosityActivityRevisionDeleteForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter, Connection $connection) {
diff --git a/src/Form/LearnosityActivityRevisionRevertForm.php b/src/Form/LearnosityActivityRevisionRevertForm.php
index 9bf7166..30de845 100644
--- a/src/Form/LearnosityActivityRevisionRevertForm.php
+++ b/src/Form/LearnosityActivityRevisionRevertForm.php
@@ -21,30 +21,30 @@ class LearnosityActivityRevisionRevertForm extends ConfirmFormBase {
   /**
    * The Activity revision.
    *
-   * @var \Drupal\learnosity\Entity\LearnosityActivityInterface
+   * @var LearnosityActivityInterface
    */
   protected $revision;
 
   /**
    * The Activity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * LearnosityActivityRevisionRevertForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter) {
@@ -137,18 +137,18 @@ class LearnosityActivityRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\learnosity\Entity\LearnosityActivityInterface $revision
+   * @param LearnosityActivityInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\learnosity\Entity\LearnosityActivityInterface
+   * @return LearnosityActivityInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(LearnosityActivityInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/src/Form/LearnosityActivityRevisionRevertTranslationForm.php b/src/Form/LearnosityActivityRevisionRevertTranslationForm.php
index e232549..6f8a81d 100644
--- a/src/Form/LearnosityActivityRevisionRevertTranslationForm.php
+++ b/src/Form/LearnosityActivityRevisionRevertTranslationForm.php
@@ -27,18 +27,18 @@ class LearnosityActivityRevisionRevertTranslationForm extends LearnosityActivity
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * LearnosityActivityRevisionRevertTranslationForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The Activity storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter, LanguageManagerInterface $language_manager) {
@@ -96,7 +96,7 @@ class LearnosityActivityRevisionRevertTranslationForm extends LearnosityActivity
   protected function prepareRevertedRevision(LearnosityActivityInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\learnosity\Entity\LearnosityActivityInterface $default_revision */
+    /** @var LearnosityActivityInterface $default_revision */
     $latest_revision = $this->entityStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
@@ -110,7 +110,7 @@ class LearnosityActivityRevisionRevertTranslationForm extends LearnosityActivity
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/src/Form/LearnosityActivitySettingsForm.php b/src/Form/LearnosityActivitySettingsForm.php
index b177dbd..62a47db 100644
--- a/src/Form/LearnosityActivitySettingsForm.php
+++ b/src/Form/LearnosityActivitySettingsForm.php
@@ -29,7 +29,7 @@ class LearnosityActivitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -41,7 +41,7 @@ class LearnosityActivitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/LearnosityMappingsForm.php b/src/Form/LearnosityMappingsForm.php
index 9042b25..2939c08 100644
--- a/src/Form/LearnosityMappingsForm.php
+++ b/src/Form/LearnosityMappingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity\Form;
 
+use Drupal\Core\Entity\EntityTypeBundleInfo;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -125,7 +126,7 @@ class LearnosityMappingsForm extends ConfigFormBase {
         '#open' => TRUE,
       ];
 
-      /** @var \Drupal\Core\Entity\EntityTypeBundleInfo $bundle_info */
+      /** @var EntityTypeBundleInfo $bundle_info */
       $bundle_service = \Drupal::service('entity_type.bundle.info');
       $bundle_info = $bundle_service->getBundleInfo($entity_type);
 
diff --git a/src/LearnosityActivityAccessControlHandler.php b/src/LearnosityActivityAccessControlHandler.php
index 2ac453d..46ccd2d 100644
--- a/src/LearnosityActivityAccessControlHandler.php
+++ b/src/LearnosityActivityAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity;
 
+use Drupal\Core\Condition\ConditionInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheableDependencyInterface;
@@ -28,21 +29,21 @@ class LearnosityActivityAccessControlHandler extends EntityAccessControlHandler
   /**
    * The condition manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $conditionManager;
 
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandler
+   * @var ContextHandler
    */
   protected $contextHandler;
 
   /**
    * The context repository.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
@@ -61,13 +62,13 @@ class LearnosityActivityAccessControlHandler extends EntityAccessControlHandler
   /**
    * LearnosityActivityAccessControlHandler constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Condition\ConditionManager $condition_manager
+   * @param ConditionManager $condition_manager
    *   The condition plugin manager.
-   * @param \Drupal\Core\Plugin\Context\ContextHandler $context_handler
+   * @param ContextHandler $context_handler
    *   The context handler.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The context repository.
    */
   public function __construct(EntityTypeInterface $entity_type, ConditionManager $condition_manager, ContextHandler $context_handler, ContextRepositoryInterface $context_repository) {
@@ -100,9 +101,9 @@ class LearnosityActivityAccessControlHandler extends EntityAccessControlHandler
   /**
    * Merges cacheable metadata from conditions onto the access result object.
    *
-   * @param \Drupal\Core\Access\AccessResult $access
+   * @param AccessResult $access
    *   The access result object.
-   * @param \Drupal\Core\Condition\ConditionInterface[] $conditions
+   * @param ConditionInterface[] $conditions
    *   List of conditions conditions.
    */
   protected function mergeCacheabilityFromConditions(AccessResult $access, array $conditions) {
diff --git a/src/LearnosityActivityEditorListBuilder.php b/src/LearnosityActivityEditorListBuilder.php
index c6848c0..081554e 100644
--- a/src/LearnosityActivityEditorListBuilder.php
+++ b/src/LearnosityActivityEditorListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity;
 
+use Drupal\field\FieldConfigInterface;
 use Drupal\Core\Config\Entity\DraggableListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -18,18 +19,18 @@ class LearnosityActivityEditorListBuilder extends DraggableListBuilder {
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new LearnosityActivityEditorListBuilder.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, MessengerInterface $messenger) {
@@ -75,7 +76,7 @@ class LearnosityActivityEditorListBuilder extends DraggableListBuilder {
    * {@inheritdoc}
    */
   public function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\field\FieldConfigInterface $entity */
+    /** @var FieldConfigInterface $entity */
     $operations = parent::getDefaultOperations($entity);
 
     if (isset($operations['edit'])) {
diff --git a/src/LearnosityActivityEditorPermissions.php b/src/LearnosityActivityEditorPermissions.php
index 8e75d9a..4b4ffbe 100644
--- a/src/LearnosityActivityEditorPermissions.php
+++ b/src/LearnosityActivityEditorPermissions.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\learnosity;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\DependencyInjection\DeprecatedServicePropertyTrait;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,14 +22,14 @@ class LearnosityActivityEditorPermissions implements ContainerInjectionInterface
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * LearnosityActivityEditorPermissions constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -46,9 +49,9 @@ class LearnosityActivityEditorPermissions implements ContainerInjectionInterface
    * @return array
    *   The array of permissions.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityMalformedException
    */
   public function permissions() {
     $permissions = [];
diff --git a/src/LearnosityActivityHtmlRouteProvider.php b/src/LearnosityActivityHtmlRouteProvider.php
index bd0b678..95a2102 100644
--- a/src/LearnosityActivityHtmlRouteProvider.php
+++ b/src/LearnosityActivityHtmlRouteProvider.php
@@ -52,10 +52,10 @@ class LearnosityActivityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -76,10 +76,10 @@ class LearnosityActivityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -100,10 +100,10 @@ class LearnosityActivityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class LearnosityActivityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -148,10 +148,10 @@ class LearnosityActivityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -172,10 +172,10 @@ class LearnosityActivityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/LearnosityActivityPlayerListBuilder.php b/src/LearnosityActivityPlayerListBuilder.php
index d3f5e04..2c14d1f 100644
--- a/src/LearnosityActivityPlayerListBuilder.php
+++ b/src/LearnosityActivityPlayerListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity;
 
+use Drupal\field\FieldConfigInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -32,7 +33,7 @@ class LearnosityActivityPlayerListBuilder extends ConfigEntityListBuilder {
    * {@inheritdoc}
    */
   public function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\field\FieldConfigInterface $entity */
+    /** @var FieldConfigInterface $entity */
     $operations = parent::getDefaultOperations($entity);
 
     if (isset($operations['edit'])) {
diff --git a/src/LearnosityActivityStorageInterface.php b/src/LearnosityActivityStorageInterface.php
index 944ded9..e53f007 100644
--- a/src/LearnosityActivityStorageInterface.php
+++ b/src/LearnosityActivityStorageInterface.php
@@ -20,7 +20,7 @@ interface LearnosityActivityStorageInterface extends ContentEntityStorageInterfa
   /**
    * Gets a list of Activity revision IDs for a specific Activity.
    *
-   * @param \Drupal\learnosity\Entity\LearnosityActivityInterface $entity
+   * @param LearnosityActivityInterface $entity
    *   The Activity entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface LearnosityActivityStorageInterface extends ContentEntityStorageInterfa
   /**
    * Gets a list of revision IDs having a given user as Activity author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface LearnosityActivityStorageInterface extends ContentEntityStorageInterfa
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\learnosity\Entity\LearnosityActivityInterface $entity
+   * @param LearnosityActivityInterface $entity
    *   The Activity entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface LearnosityActivityStorageInterface extends ContentEntityStorageInterfa
   /**
    * Unsets the language for all Activity with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/src/LearnosityApiEventHandler.php b/src/LearnosityApiEventHandler.php
index 756e5c1..af02929 100644
--- a/src/LearnosityApiEventHandler.php
+++ b/src/LearnosityApiEventHandler.php
@@ -14,7 +14,7 @@ class LearnosityApiEventHandler {
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -28,7 +28,7 @@ class LearnosityApiEventHandler {
   /**
    * LearnosityApiEventHandler constructor.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
diff --git a/src/LearnosityFeaturePluginManager.php b/src/LearnosityFeaturePluginManager.php
index 1229772..4ab364a 100644
--- a/src/LearnosityFeaturePluginManager.php
+++ b/src/LearnosityFeaturePluginManager.php
@@ -19,9 +19,9 @@ class LearnosityFeaturePluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/LearnosityImageUploadPluginManager.php b/src/LearnosityImageUploadPluginManager.php
index 8cde104..13f0508 100644
--- a/src/LearnosityImageUploadPluginManager.php
+++ b/src/LearnosityImageUploadPluginManager.php
@@ -19,9 +19,9 @@ class LearnosityImageUploadPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/LearnosityMappingsHandler.php b/src/LearnosityMappingsHandler.php
index 0f0790d..56fe3c9 100644
--- a/src/LearnosityMappingsHandler.php
+++ b/src/LearnosityMappingsHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -18,7 +19,7 @@ class LearnosityMappingsHandler {
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    *   A configuration object.
    */
   protected $config;
@@ -43,7 +44,7 @@ class LearnosityMappingsHandler {
   /**
    * LearnosityMappingsHandler constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -53,7 +54,7 @@ class LearnosityMappingsHandler {
   /**
    * Fetches an entity's mapping information.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being mapped from.
    * @param string $key
    *   The mapping key.
diff --git a/src/LearnositySdk.php b/src/LearnositySdk.php
index 87bcbdf..7229260 100644
--- a/src/LearnositySdk.php
+++ b/src/LearnositySdk.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\learnosity;
 
+use Symfony\Component\HttpFoundation\Request;
+use LearnositySdk\Request\Remote;
 use LearnositySdk\Request\DataApi;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
@@ -21,35 +23,35 @@ class LearnositySdk {
   /**
    * The service container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;
 
   /**
    * Request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * Configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
 
@@ -63,15 +65,15 @@ class LearnositySdk {
   /**
    * LearnositySdk constructor.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container interface.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request stack.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   The logger service.
    */
   public function __construct(ContainerInterface $container, RequestStack $request, ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, LoggerChannelFactoryInterface $logger) {
@@ -155,7 +157,7 @@ class LearnositySdk {
    * @param mixed $callback
    *   Optional callback if you don't want to return all at once.
    *
-   * @return \LearnositySdk\Request\Remote
+   * @return Remote
    *   The request response.
    */
   public function dataApi($endpoint, array $request = [], $action = NULL, $recursive = FALSE, $callback = NULL, $security = []) {
diff --git a/src/LearnositySessionHandler.php b/src/LearnositySessionHandler.php
index 3a6c6cd..59b26fb 100644
--- a/src/LearnositySessionHandler.php
+++ b/src/LearnositySessionHandler.php
@@ -18,23 +18,23 @@ class LearnositySessionHandler {
   /**
    * The learnosity Sdk service.
    *
-   * @var \Drupal\learnosity\LearnositySdk
+   * @var LearnositySdk
    */
   protected $learnosity;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * LearnositySessionHandler constructor.
    *
-   * @param \Drupal\learnosity\LearnositySdk $learnosity
+   * @param LearnositySdk $learnosity
    *   The learnosity sdk service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The drupal core database.
    */
   public function __construct(LearnositySdk $learnosity, Connection $database) {
diff --git a/src/Plugin/EntityReferenceSelection/LearnosityActivitySelection.php b/src/Plugin/EntityReferenceSelection/LearnosityActivitySelection.php
index d3f4239..1a4fff2 100644
--- a/src/Plugin/EntityReferenceSelection/LearnosityActivitySelection.php
+++ b/src/Plugin/EntityReferenceSelection/LearnosityActivitySelection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity\Plugin\EntityReferenceSelection;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginBase;
@@ -37,15 +38,15 @@ class LearnosityActivitySelection extends SelectionPluginBase implements Selecti
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, AccountInterface $current_user, EntityFieldManagerInterface $entity_field_manager = NULL, EntityRepositoryInterface $entity_repository = NULL) {
@@ -105,7 +106,7 @@ class LearnosityActivitySelection extends SelectionPluginBase implements Selecti
    *   (Optional) The operation the matching should be done with. Defaults
    *   to "CONTAINS".
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   The EntityQuery object with the basic conditions and sorting applied to
    *   it.
    */
diff --git a/src/Plugin/Field/FieldFormatter/LearnosityActivityFormatterBase.php b/src/Plugin/Field/FieldFormatter/LearnosityActivityFormatterBase.php
index 2cd40a2..2cf90b5 100644
--- a/src/Plugin/Field/FieldFormatter/LearnosityActivityFormatterBase.php
+++ b/src/Plugin/Field/FieldFormatter/LearnosityActivityFormatterBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\learnosity\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemInterface;
@@ -16,7 +19,7 @@ abstract class LearnosityActivityFormatterBase extends FormatterBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -27,7 +30,7 @@ abstract class LearnosityActivityFormatterBase extends FormatterBase {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -37,7 +40,7 @@ abstract class LearnosityActivityFormatterBase extends FormatterBase {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager) {
@@ -64,14 +67,14 @@ abstract class LearnosityActivityFormatterBase extends FormatterBase {
   /**
    * Fetches the Learnosity Activity entity.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The field item.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The Learnosity Activity entity.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getActivityEntity(FieldItemInterface $item) {
     $value = $item->getValue();
@@ -81,14 +84,14 @@ abstract class LearnosityActivityFormatterBase extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return mixed
    *   The textual output generated.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function viewValue(FieldItemInterface $item) {
     $value = $item->getValue();
diff --git a/src/Plugin/Field/FieldWidget/LearnosityActivityAuthoringWidget.php b/src/Plugin/Field/FieldWidget/LearnosityActivityAuthoringWidget.php
index ed56260..7606aa3 100644
--- a/src/Plugin/Field/FieldWidget/LearnosityActivityAuthoringWidget.php
+++ b/src/Plugin/Field/FieldWidget/LearnosityActivityAuthoringWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\learnosity\Plugin\Field\FieldWidget;
 
+use Drupal\user\Entity\User;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -29,7 +30,7 @@ class LearnosityActivityAuthoringWidget extends WidgetBase {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -40,13 +41,13 @@ class LearnosityActivityAuthoringWidget extends WidgetBase {
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager) {
@@ -155,7 +156,7 @@ class LearnosityActivityAuthoringWidget extends WidgetBase {
       'match_limit' => $this->getSetting('match_limit'),
     ];
 
-    /** @var \Drupal\user\Entity\User $user */
+    /** @var User $user */
     $current_user = \Drupal::service('entity_type.manager')->getStorage('user')->load(\Drupal::currentUser()->id());
     $element += [
       '#type' => 'learnosity_activity_editor',
@@ -210,7 +211,7 @@ class LearnosityActivityAuthoringWidget extends WidgetBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
diff --git a/tests/src/Kernel/LearnosityActivityAuthoringWidgetTest.php b/tests/src/Kernel/LearnosityActivityAuthoringWidgetTest.php
index 3161119..16647af 100644
--- a/tests/src/Kernel/LearnosityActivityAuthoringWidgetTest.php
+++ b/tests/src/Kernel/LearnosityActivityAuthoringWidgetTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\learnosity\Kernel;
 
+use Drupal\Core\Form\EnforcedResponseException;
+use Drupal\Core\Form\FormAjaxException;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\learnosity\Entity\LearnosityActivity;
 use Drupal\node\Entity\Node;
@@ -141,14 +143,14 @@ class LearnosityActivityAuthoringWidgetTest extends LearnosityKernelTestBase {
    *
    * @param string $field_name
    *   The name of the field.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The current entity.
    *
    * @return mixed
    *   The field widget element.
    *
-   * @throws \Drupal\Core\Form\EnforcedResponseException
-   * @throws \Drupal\Core\Form\FormAjaxException
+   * @throws EnforcedResponseException
+   * @throws FormAjaxException
    */
   protected function buildFieldWidgetElement($field_name, EntityInterface $entity) {
     $form_display = EntityFormDisplay::create([
diff --git a/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php b/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php
index 1b18ac4..d228de1 100644
--- a/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php
+++ b/tests/src/Kernel/LearnosityActivityEditorElementFormTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\learnosity\Kernel;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\Core\Form\FormStateInterface;
@@ -27,14 +29,14 @@ class LearnosityActivityEditorElementFormTest extends LearnosityKernelTestBase i
   /**
    * User for testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
   /**
    * An array of entities to be referenced in this test.
    *
-   * @var \Drupal\Core\Entity\EntityInterface[]
+   * @var EntityInterface[]
    */
   protected $referencedEntities;
 
@@ -160,7 +162,7 @@ class LearnosityActivityEditorElementFormTest extends LearnosityKernelTestBase i
     // Test the 'activity' element.
     $value = $form_state->getValue('activity_blank');
     // The UUID should match the following pattern.
-    $this->assertRegExp('/[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}/', $value['entity']->getReference());
+    $this->assertMatchesRegularExpression('/[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}/', $value['entity']->getReference());
     $this->assertEquals('learnosity_activity', $value['entity']->bundle());
     $this->assertEquals($this->testUser->id(), $value['entity']->getOwnerId());
 
diff --git a/tests/src/Kernel/LearnosityAssessmentPlayerFormatterTest.php b/tests/src/Kernel/LearnosityAssessmentPlayerFormatterTest.php
index f39a180..acd0814 100644
--- a/tests/src/Kernel/LearnosityAssessmentPlayerFormatterTest.php
+++ b/tests/src/Kernel/LearnosityAssessmentPlayerFormatterTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\learnosity\Kernel;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\learnosity\Entity\LearnosityActivity;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -79,7 +80,7 @@ class LearnosityAssessmentPlayerFormatterTest extends LearnosityKernelTestBase {
   /**
    * Test the Assessment Player field formatter.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function testAssessmentPlayerFormatter() {
     // Create the test LearnosityActivity entity.
diff --git a/tests/src/Kernel/LearnosityFeatureTest.php b/tests/src/Kernel/LearnosityFeatureTest.php
index 21a2e2d..4b3e1b4 100644
--- a/tests/src/Kernel/LearnosityFeatureTest.php
+++ b/tests/src/Kernel/LearnosityFeatureTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\learnosity\Kernel;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Render\Renderer;
 use Drupal\learnosity\Entity\LearnosityActivity;
 use Drupal\Tests\user\Traits\UserCreationTrait;
 use Drupal\learnosity\Entity\LearnosityActivityEditor;
@@ -28,7 +30,7 @@ class LearnosityFeatureTest extends LearnosityKernelTestBase {
   /**
    * User for testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
@@ -97,7 +99,7 @@ class LearnosityFeatureTest extends LearnosityKernelTestBase {
       ],
     ];
 
-    /** @var \Drupal\Core\Render\Renderer $renderer */
+    /** @var Renderer $renderer */
     $renderer = \Drupal::service('renderer');
     $renderer->renderRoot($element);
     $request = json_decode($element['#attached']['drupalSettings']['learnosity']['signedRequest'], TRUE);
diff --git a/tests/src/Kernel/LearnosityImageUploadTest.php b/tests/src/Kernel/LearnosityImageUploadTest.php
index eaba746..1dd837f 100644
--- a/tests/src/Kernel/LearnosityImageUploadTest.php
+++ b/tests/src/Kernel/LearnosityImageUploadTest.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\Tests\learnosity\Kernel;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Render\Renderer;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\learnosity\Controller\LearnosityImageUploadController;
 use Drupal\learnosity\Entity\LearnosityActivity;
 use Drupal\Tests\user\Traits\UserCreationTrait;
@@ -32,7 +37,7 @@ class LearnosityImageUploadTest extends LearnosityKernelTestBase {
   /**
    * User for testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
@@ -110,7 +115,7 @@ class LearnosityImageUploadTest extends LearnosityKernelTestBase {
       ],
     ];
 
-    /** @var \Drupal\Core\Render\Renderer $renderer */
+    /** @var Renderer $renderer */
     $renderer = \Drupal::service('renderer');
     $renderer->renderRoot($element);
 
@@ -121,9 +126,9 @@ class LearnosityImageUploadTest extends LearnosityKernelTestBase {
   /**
    * Tests the image upload ajax controller.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
    */
   public function testImageUploadControllerRequest() {
     $request_stack = new RequestStack();
diff --git a/tests/src/Kernel/LearnosityReportsItemElementRenderTest.php b/tests/src/Kernel/LearnosityReportsItemElementRenderTest.php
index f24e254..e8e3307 100644
--- a/tests/src/Kernel/LearnosityReportsItemElementRenderTest.php
+++ b/tests/src/Kernel/LearnosityReportsItemElementRenderTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\learnosity\Kernel;
 
+use Drupal\Core\Render\Renderer;
 use Drupal\learnosity\Element\LearnosityReportsItem;
 use Drupal\Core\Render\Element;
 
@@ -42,7 +43,7 @@ class LearnosityReportsItemElementRenderTest extends LearnosityKernelTestBase {
       ],
     ];
 
-    /** @var \Drupal\Core\Render\Renderer $renderer */
+    /** @var Renderer $renderer */
     $renderer = \Drupal::service('renderer');
     $renderer->renderRoot($element);
 
diff --git a/tests/src/Unit/LearnosityApiEventHandlerTest.php b/tests/src/Unit/LearnosityApiEventHandlerTest.php
index 17908c9..f6b56e6 100644
--- a/tests/src/Unit/LearnosityApiEventHandlerTest.php
+++ b/tests/src/Unit/LearnosityApiEventHandlerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\learnosity\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\learnosity\Event\LearnosityAssessmentEvent;
 use Drupal\learnosity\LearnosityApiEventHandler;
 use Drupal\Tests\UnitTestCase;
@@ -14,6 +15,7 @@ use Drupal\Core\Entity\EntityTypeEvents;
  */
 class LearnosityApiEventHandlerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Test getting subscribed events.
    */
diff --git a/tests/src/Unit/LearnosityEventControllerTest.php b/tests/src/Unit/LearnosityEventControllerTest.php
index 0b1af2c..b2da9be 100644
--- a/tests/src/Unit/LearnosityEventControllerTest.php
+++ b/tests/src/Unit/LearnosityEventControllerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\learnosity\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\learnosity\Controller\LearnosityEventController;
 use Drupal\Tests\UnitTestCase;
@@ -17,6 +18,7 @@ use Prophecy\Argument;
  */
 class LearnosityEventControllerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Tests learnosity event controller.
    */
diff --git a/tests/src/Unit/LearnositySdkTest.php b/tests/src/Unit/LearnositySdkTest.php
index 1e7ee26..763afa2 100644
--- a/tests/src/Unit/LearnositySdkTest.php
+++ b/tests/src/Unit/LearnositySdkTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\learnosity\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Prophecy\Prophecy\ObjectProphecy;
 use Drupal\learnosity\LearnositySdk;
 use Drupal\Tests\UnitTestCase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -17,38 +19,39 @@ use Drupal\Core\Logger\LoggerChannelFactoryInterface;
  */
 class LearnositySdkTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The service container.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $container;
 
   /**
    * Request stack.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $request;
 
   /**
    * Configuration factory.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $config;
 
   /**
    * Module handler service.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $moduleHandler;
 
   /**
    * The logger service.
    *
-   * @var \Prophecy\Prophecy\ObjectProphecy
+   * @var ObjectProphecy
    */
   protected $logger;
 
