diff --git a/rating_field.info.yml b/rating_field.info.yml
index 254b470..1cb8978 100644
--- a/rating_field.info.yml
+++ b/rating_field.info.yml
@@ -2,8 +2,7 @@
 name: Rating Field
 type: module
 description: 'Provides a new field for Drupal 8 in the format of a configurable rating grid.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: Field types
 dependencies:
   - drupal:field
diff --git a/src/Element/Rating.php b/src/Element/Rating.php
index 001fdb0..dfcc533 100644
--- a/src/Element/Rating.php
+++ b/src/Element/Rating.php
@@ -82,7 +82,7 @@ class Rating extends FormElement {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   rating element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Plugin/Field/FieldType/RatingField.php b/src/Plugin/Field/FieldType/RatingField.php
index 834121d..a706eb8 100644
--- a/src/Plugin/Field/FieldType/RatingField.php
+++ b/src/Plugin/Field/FieldType/RatingField.php
@@ -248,7 +248,7 @@ class RatingField extends FieldItemBase {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form for the form this element belongs to.
    */
   public static function validateAllowedValues(array $element, FormStateInterface $form_state) {
@@ -276,7 +276,7 @@ class RatingField extends FieldItemBase {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form for the form this element belongs to.
    */
   public static function validateQuantityValues(array $element, FormStateInterface $form_state) {
diff --git a/src/Plugin/Field/FieldWidget/RatingWidgetBase.php b/src/Plugin/Field/FieldWidget/RatingWidgetBase.php
index ae9aa47..ce12136 100644
--- a/src/Plugin/Field/FieldWidget/RatingWidgetBase.php
+++ b/src/Plugin/Field/FieldWidget/RatingWidgetBase.php
@@ -127,7 +127,7 @@ class RatingWidgetBase extends WidgetBase {
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $form
    *   The form element.
@@ -150,7 +150,7 @@ class RatingWidgetBase extends WidgetBase {
   /**
    * Custom function to check the inputs of our rating grid field.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $widget_element
    *   The element array to check, we want the widget index.
@@ -175,7 +175,7 @@ class RatingWidgetBase extends WidgetBase {
   /**
    * Get the values of the field when the form is submitted.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $widget_element
    *   The element array to check, we want the widget index.
@@ -209,7 +209,7 @@ class RatingWidgetBase extends WidgetBase {
    *
    * @param array $user_input
    *   Array of all the inputs of the user from the form_state.
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The field values.
    * @param array $questions
    *   The questions of the field from the element.
@@ -247,7 +247,7 @@ class RatingWidgetBase extends WidgetBase {
   /**
    * Checks if the field is new, has been sumbitted or is being set.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
diff --git a/tests/src/Functional/DefaultWidgetTest.php b/tests/src/Functional/DefaultWidgetTest.php
index 5440dda..c1ad496 100644
--- a/tests/src/Functional/DefaultWidgetTest.php
+++ b/tests/src/Functional/DefaultWidgetTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\rating_field\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -27,21 +29,21 @@ class DefaultWidgetTest extends BrowserTestBase {
   /**
    * A user with permission to create pages.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
   /**
    * EntityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->entityTypeManager = $this->container->get('entity_type.manager');
@@ -99,14 +101,14 @@ class DefaultWidgetTest extends BrowserTestBase {
    */
   public function testRatingWidget() {
     $this->drupalGet('node/add/page');
-    $this->assertFieldByName("test_rating-row-0", 0);
-    $this->assertFieldByName("test_rating-row-0", 1);
-    $this->assertFieldByName("test_rating-row-0", 2);
-    $this->assertFieldByName("test_rating-row-0", 3);
-    $this->assertFieldByName("test_rating-row-1", 0);
-    $this->assertFieldByName("test_rating-row-1", 1);
-    $this->assertFieldByName("test_rating-row-1", 2);
-    $this->assertFieldByName("test_rating-row-1", 3);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 0);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 1);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 2);
+    $this->assertSession()->fieldValueEquals("test_rating-row-0", 3);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 0);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 1);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 2);
+    $this->assertSession()->fieldValueEquals("test_rating-row-1", 3);
   }
 
 }
diff --git a/tests/src/Kernel/Formatter/RatingCustomOptionTest.php b/tests/src/Kernel/Formatter/RatingCustomOptionTest.php
index 7670f2b..768782c 100644
--- a/tests/src/Kernel/Formatter/RatingCustomOptionTest.php
+++ b/tests/src/Kernel/Formatter/RatingCustomOptionTest.php
@@ -14,7 +14,7 @@ class RatingCustomOptionTest extends RatingFormatterTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Set storageSetting to custom option.
diff --git a/tests/src/Kernel/Formatter/RatingFormatterTestBase.php b/tests/src/Kernel/Formatter/RatingFormatterTestBase.php
index bcc39b4..0aa83d4 100644
--- a/tests/src/Kernel/Formatter/RatingFormatterTestBase.php
+++ b/tests/src/Kernel/Formatter/RatingFormatterTestBase.php
@@ -19,7 +19,7 @@ abstract class RatingFormatterTestBase extends KernelTestBase {
   /**
    * The entity display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $display;
 
@@ -40,14 +40,14 @@ abstract class RatingFormatterTestBase extends KernelTestBase {
   /**
    * The list field storage used in the test.
    *
-   * @var \Drupal\field\Entity\FieldStorageConfig
+   * @var FieldStorageConfig
    */
   protected $fieldStorage;
 
   /**
    * The list field used in the test.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $field;
 
@@ -67,7 +67,7 @@ abstract class RatingFormatterTestBase extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['system']);
@@ -146,9 +146,9 @@ abstract class RatingFormatterTestBase extends KernelTestBase {
   /**
    * Renders fields of a given entity with a given display.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity object with attached fields to render.
-   * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
+   * @param EntityViewDisplayInterface $display
    *   The display to render the fields in.
    *
    * @return string
diff --git a/tests/src/Kernel/Formatter/RatingLikertOptionTest.php b/tests/src/Kernel/Formatter/RatingLikertOptionTest.php
index 2198d0e..985cd5b 100644
--- a/tests/src/Kernel/Formatter/RatingLikertOptionTest.php
+++ b/tests/src/Kernel/Formatter/RatingLikertOptionTest.php
@@ -14,7 +14,7 @@ class RatingLikertOptionTest extends RatingFormatterTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Set storageSetting to option 1, 3 questions and a max.value of 5.
diff --git a/tests/src/Kernel/Formatter/RatingNumericOptionTest.php b/tests/src/Kernel/Formatter/RatingNumericOptionTest.php
index 8e03da2..ef18b8a 100644
--- a/tests/src/Kernel/Formatter/RatingNumericOptionTest.php
+++ b/tests/src/Kernel/Formatter/RatingNumericOptionTest.php
@@ -14,7 +14,7 @@ class RatingNumericOptionTest extends RatingFormatterTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Set storageSetting to option 1, 3 questions and a max.value of 5.
diff --git a/tests/src/Kernel/RatingTest.php b/tests/src/Kernel/RatingTest.php
index e352a30..a0c316f 100644
--- a/tests/src/Kernel/RatingTest.php
+++ b/tests/src/Kernel/RatingTest.php
@@ -26,14 +26,14 @@ class RatingTest extends EntityKernelTestBase {
   /**
    * The test entity.
    *
-   * @var \Drupal\entity_test\Entity\EntityTest
+   * @var EntityTest
    */
   protected $testEntity;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $field_storage = FieldStorageConfig::create([
