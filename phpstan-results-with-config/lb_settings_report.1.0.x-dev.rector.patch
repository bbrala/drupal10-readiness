diff --git a/src/Annotation/LayoutBuilderSettingsReport.php b/src/Annotation/LayoutBuilderSettingsReport.php
index 3203cfe..6fb7ce0 100644
--- a/src/Annotation/LayoutBuilderSettingsReport.php
+++ b/src/Annotation/LayoutBuilderSettingsReport.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lb_settings_report\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class LayoutBuilderSettingsReport extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -36,7 +37,7 @@ class LayoutBuilderSettingsReport extends Plugin {
    *
    * This will be shown when adding or configuring this capture utility.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/LayoutBuilderSettingsReportSubject.php b/src/Annotation/LayoutBuilderSettingsReportSubject.php
index 19c1042..8b65b29 100644
--- a/src/Annotation/LayoutBuilderSettingsReportSubject.php
+++ b/src/Annotation/LayoutBuilderSettingsReportSubject.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lb_settings_report\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class LayoutBuilderSettingsReportSubject extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -36,7 +37,7 @@ class LayoutBuilderSettingsReportSubject extends Plugin {
    *
    * This will be shown when adding or configuring this capture utility.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Form/LayoutBuilderSettingsReportForm.php b/src/Form/LayoutBuilderSettingsReportForm.php
index 738beb1..fd9fd51 100644
--- a/src/Form/LayoutBuilderSettingsReportForm.php
+++ b/src/Form/LayoutBuilderSettingsReportForm.php
@@ -17,14 +17,14 @@ class LayoutBuilderSettingsReportForm extends FormBase {
   /**
    * The report manager.
    *
-   * @var \Drupal\lb_settings_report\Plugin\Report\ReportManager
+   * @var ReportManager
    */
   protected $reportManager;
 
   /**
    * Constructs a new ConfigSingleImportForm.
    *
-   * @param \Drupal\lb_settings_report\Plugin\Report\ReportManager $report_manager
+   * @param ReportManager $report_manager
    *   The report manager service.
    */
   public function __construct(ReportManager $report_manager) {
diff --git a/src/Plugin/Report/DiffReport.php b/src/Plugin/Report/DiffReport.php
index 43445fc..540c321 100644
--- a/src/Plugin/Report/DiffReport.php
+++ b/src/Plugin/Report/DiffReport.php
@@ -22,7 +22,7 @@ class DiffReport extends ReportBase {
   /**
    * Diff formatter service.
    *
-   * @var \Drupal\Core\Diff\DiffFormatter
+   * @var DiffFormatter
    */
   protected $diffFormatter;
 
@@ -70,7 +70,7 @@ class DiffReport extends ReportBase {
    * @param array $values
    *   Values array.
    *
-   * @return \Drupal\Component\Diff\Diff
+   * @return Diff
    *   The diff.
    */
   public function getDiff(array $values) {
diff --git a/src/Plugin/Report/ReportBase.php b/src/Plugin/Report/ReportBase.php
index 6e1049d..45bf68e 100644
--- a/src/Plugin/Report/ReportBase.php
+++ b/src/Plugin/Report/ReportBase.php
@@ -21,14 +21,14 @@ abstract class ReportBase extends PluginBase implements ReportInterface {
   /**
    * Renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Subject Manager.
    *
-   * @var \Drupal\lb_settings_report\Plugin\Subject\SubjectManager
+   * @var SubjectManager
    */
   protected $subjectManager;
 
diff --git a/src/Plugin/Report/ReportManager.php b/src/Plugin/Report/ReportManager.php
index 2d99925..eee1618 100644
--- a/src/Plugin/Report/ReportManager.php
+++ b/src/Plugin/Report/ReportManager.php
@@ -17,9 +17,9 @@ class ReportManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Subject/SubjectBase.php b/src/Plugin/Subject/SubjectBase.php
index f3e1dcd..b5c1874 100644
--- a/src/Plugin/Subject/SubjectBase.php
+++ b/src/Plugin/Subject/SubjectBase.php
@@ -34,14 +34,14 @@ abstract class SubjectBase extends PluginBase implements SubjectInterface {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Config storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $configStorage;
 
diff --git a/src/Plugin/Subject/SubjectManager.php b/src/Plugin/Subject/SubjectManager.php
index 58e6359..e0385cc 100644
--- a/src/Plugin/Subject/SubjectManager.php
+++ b/src/Plugin/Subject/SubjectManager.php
@@ -17,9 +17,9 @@ class SubjectManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/tests/src/Functional/LayoutBuilderSettingsReportTest.php b/tests/src/Functional/LayoutBuilderSettingsReportTest.php
index 6fb3c80..5bc23bc 100644
--- a/tests/src/Functional/LayoutBuilderSettingsReportTest.php
+++ b/tests/src/Functional/LayoutBuilderSettingsReportTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\lb_settings_report\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,14 +25,14 @@ class LayoutBuilderSettingsReportTest extends BrowserTestBase {
   /**
    * Authorized User.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $authorizedUser;
 
   /**
    * Unauthorized User.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $unauthorizedUser;
 
@@ -45,7 +46,7 @@ class LayoutBuilderSettingsReportTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->authorizedUser = $this->drupalCreateUser([
       'view layout builder settings report',
diff --git a/tests/src/Unit/MockTestTrait.php b/tests/src/Unit/MockTestTrait.php
index 9ec753b..ee2b4b0 100644
--- a/tests/src/Unit/MockTestTrait.php
+++ b/tests/src/Unit/MockTestTrait.php
@@ -57,7 +57,7 @@ trait MockTestTrait {
    * @param bool $empty_target_types
    *   Indicates whether or not the target type list is empty.
    *
-   * @return \Drupal\lb_settings_report\Plugin\Subject\LayoutBuilderSubject
+   * @return LayoutBuilderSubject
    *   Subject object.
    */
   private function getSubjectMockByClass($class, array $config = [], array $mock_report = [], $empty_target_types = FALSE) {
@@ -112,7 +112,7 @@ trait MockTestTrait {
    * @param bool $empty_target_types
    *   Indicates whether or not the target type list is empty.
    *
-   * @return \Drupal\lb_settings_report\Plugin\Subject\LayoutBuilderSubject
+   * @return LayoutBuilderSubject
    *   Subject object.
    */
   public function getLayoutBuilderSubjectMock(array $config = [], array $mock_report = [], $empty_target_types = FALSE) {
@@ -129,7 +129,7 @@ trait MockTestTrait {
    * @param bool $empty_target_types
    *   Indicates whether or not the target type list is empty.
    *
-   * @return \Drupal\lb_settings_report\Plugin\Subject\BundleSubject
+   * @return BundleSubject
    *   Subject object.
    */
   public function getBundleSubjectMock(array $config = [], array $mock_report = [], $empty_target_types = FALSE) {
@@ -172,7 +172,7 @@ trait MockTestTrait {
    * @param string $subject_class
    *   Class of subject to generate.
    *
-   * @return \Drupal\lb_settings_report\Plugin\Subject\SubjectManager
+   * @return SubjectManager
    *   Subject manager object.
    */
   public function getSubjectManagerMock($subject_ct, $subject_class) {
@@ -201,7 +201,7 @@ trait MockTestTrait {
    * @param int $subject_ct
    *   Number of subjects to generate.
    *
-   * @return \Drupal\lb_settings_report\Plugin\Report\DiffReport
+   * @return DiffReport
    *   Diff report object.
    */
   public function getDiffReportMock($subject_ct = 0) {
@@ -235,7 +235,7 @@ trait MockTestTrait {
    * @param int $subject_ct
    *   Number of subjects to generate.
    *
-   * @return \Drupal\lb_settings_report\Plugin\Report\SingleReport
+   * @return SingleReport
    *   Diff report object.
    */
   public function getSingleReportMock($subject_ct = 0) {
@@ -267,7 +267,7 @@ trait MockTestTrait {
    * @param int $subject_ct
    *   Number of subjects to generate.
    *
-   * @return \Drupal\lb_settings_report\Plugin\Report\SingleReport
+   * @return SingleReport
    *   Diff report object.
    */
   public function getOverrideReportMock($subject_ct = 0) {
@@ -297,13 +297,11 @@ trait MockTestTrait {
   /**
    * Helper function to retrieve a mock diff formatter.
    *
-   * @return \Drupal\Core\Diff\DiffFormatter
+   * @return DiffFormatter
    *   Diff formatter.
    */
   public function getDiffFormatterMock() {
-    $diff_formatter = $this->getMockBuilder(DiffFormatter::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $diff_formatter = $this->createMock(DiffFormatter::class);
     $diff_formatter->expects($this->any())
       ->method('format')
       ->will($this->returnCallback(function ($diff) {
@@ -315,12 +313,11 @@ trait MockTestTrait {
   /**
    * Helper function to retrieve a mock renderer.
    *
-   * @return \Drupal\Core\Render\RendererInterface
+   * @return RendererInterface
    *   Renderer.
    */
   public function getRendererMock() {
-    $renderer = $this->getMockBuilder(RendererInterface::class)
-      ->getMock();
+    $renderer = $this->createMock(RendererInterface::class);
     $renderer->expects($this->any())
       ->method('render')
       ->will($this->returnCallback(function ($build) {
