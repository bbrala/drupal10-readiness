diff --git a/src/Authentication/Provider/SlackAuth.php b/src/Authentication/Provider/SlackAuth.php
index b27e415..5556dad 100644
--- a/src/Authentication/Provider/SlackAuth.php
+++ b/src/Authentication/Provider/SlackAuth.php
@@ -2,13 +2,14 @@
 
 namespace Drupal\slack_receive\Authentication\Provider;
 
+use Drupal\slack_receive\Entity\SlackApplicationInterface;
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Flood\FloodInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
 use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException;
 
@@ -22,39 +23,39 @@ class SlackAuth implements AuthenticationProviderInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The flood service.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;
 
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The time service
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a Slack Authentication provider object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager service.
-   * @param \Drupal\Core\Flood\FloodInterface $flood
+   * @param FloodInterface $flood
    *   The flood service.
    * @param \Drupal\Component\Datetime\TimeInterface
    *    The time service.
@@ -105,7 +106,7 @@ class SlackAuth implements AuthenticationProviderInterface {
         ->loadByProperties([
           'status' => TRUE,
         ]);
-      /** @var \Drupal\slack_receive\Entity\SlackApplicationInterface $app */
+      /** @var SlackApplicationInterface $app */
       foreach ((array) $applications as $app) {
         // Slack authentication control.
         $timestamp = $request->headers->get('X-Slack-Request-Timestamp');
@@ -127,10 +128,10 @@ class SlackAuth implements AuthenticationProviderInterface {
   /**
    * {@inheritdoc}
    */
-  public function handleException(GetResponseForExceptionEvent $event) {
-    $exception = $event->getException();
+  public function handleException(ExceptionEvent $event) {
+    $exception = $event->getThrowable();
     if ($exception instanceof AccessDeniedHttpException) {
-      $event->setException(new UnauthorizedHttpException('Invalid consumer origin.', $exception));
+      $event->setThrowable(new UnauthorizedHttpException('Invalid consumer origin.', $exception));
       return TRUE;
     }
     return FALSE;
diff --git a/src/Form/SlackApplicationForm.php b/src/Form/SlackApplicationForm.php
index 79150f2..4bc8f2c 100644
--- a/src/Form/SlackApplicationForm.php
+++ b/src/Form/SlackApplicationForm.php
@@ -17,7 +17,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class SlackApplicationForm extends EntityForm {
 
   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
diff --git a/src/Plugin/rest/resource/SlashCommandResponse.php b/src/Plugin/rest/resource/SlashCommandResponse.php
index 389cd38..4ff8cdb 100644
--- a/src/Plugin/rest/resource/SlashCommandResponse.php
+++ b/src/Plugin/rest/resource/SlashCommandResponse.php
@@ -27,7 +27,7 @@ class SlashCommandResponse extends ResourceBase {
   /**
    * The ModuleHandler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -42,7 +42,7 @@ class SlashCommandResponse extends ResourceBase {
    *   The plugin implementation definition.
    * @param array $serializer_formats
    *   The available serialization formats.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    * @param \Drupal\Core\Extension\ModuleHandlerInterface
    *   The module handler service.
diff --git a/src/Plugin/views/display/SlackMessage.php b/src/Plugin/views/display/SlackMessage.php
index 7afe0f5..d77ceec 100644
--- a/src/Plugin/views/display/SlackMessage.php
+++ b/src/Plugin/views/display/SlackMessage.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\slack_receive\Plugin\views\display;
 
+use Drupal\Core\Routing\RouteProviderInterface;
+use Drupal\Core\State\StateInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheableResponse;
 use Drupal\Core\Render\RenderContext;
@@ -73,7 +75,7 @@ class SlackMessage extends DisplayPluginBase {
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -93,11 +95,11 @@ class SlackMessage extends DisplayPluginBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key value store.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    * @param string[] $authentication_providers
    *   The authentication providers, keyed by ID.
@@ -328,7 +330,7 @@ class SlackMessage extends DisplayPluginBase {
     $response = new CacheableResponse('', 200);
     $build['#response'] = $response;
 
-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
 
     $output = (string) $renderer->renderRoot($build);
