diff --git a/inc/alter/form.inc b/inc/alter/form.inc
index 1a45e2d..e9debe5 100755
--- a/inc/alter/form.inc
+++ b/inc/alter/form.inc
@@ -5,13 +5,12 @@ use Drupal\Core\Form\FormStateInterface;
  * @file
  * The form alter functions.
  */
-
 /**
  * The alter function for search_block form.
  *
  * @param array $form
  *   The form array data.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state interface.
  */
 function nightar_form_search_block_form_alter(array &$form, FormStateInterface $form_state) {
@@ -24,7 +23,7 @@ function nightar_form_search_block_form_alter(array &$form, FormStateInterface $
  *
  * @param array $form
  *   The form array data.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state interface.
  */
 function nightar_form_user_login_form_alter(array &$form, FormStateInterface $form_state) {
diff --git a/inc/preprocess.inc b/inc/preprocess.inc
index 56c9a59..8b26902 100755
--- a/inc/preprocess.inc
+++ b/inc/preprocess.inc
@@ -31,7 +31,7 @@ Theme::includeFile('inc', '/inc/alter/form');
  */
 function nightar_preprocess(array &$variables, $hook) {
   if (empty($variables['path_images'])) {
-    $variables['theme_path'] = drupal_get_path('theme', Theme::getThemeName());
+    $variables['theme_path'] = \Drupal::service('extension.list.theme')->getPath(Theme::getThemeName());
   }
 }
 
diff --git a/inc/preprocess/content_entity.inc b/inc/preprocess/content_entity.inc
index d03d176..474c6ca 100755
--- a/inc/preprocess/content_entity.inc
+++ b/inc/preprocess/content_entity.inc
@@ -12,7 +12,7 @@ use Drupal\Core\Entity\ContentEntityBase;
  *
  * @param array $variables
  *   An array of variables passed to the theme hook.
- * @param \Drupal\Core\Entity\EntityBase $object
+ * @param EntityBase $object
  *   Entity object.
  */
 function nightar_content_entity_preprocess_alter(array &$variables, EntityBase $object) {
diff --git a/inc/suggestion.inc b/inc/suggestion.inc
index 196b611..5c5d770 100755
--- a/inc/suggestion.inc
+++ b/inc/suggestion.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\taxonomy\Entity\Term;
 /**
  * @file
  * The main suggestions hooks.
@@ -114,7 +115,7 @@ function nightar_theme_suggestions_menu_alter(array &$suggestions, array $variab
  * @see hook_theme_suggestions_HOOK_alter()
  */
 function nightar_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
-  /** @var \Drupal\taxonomy\Entity\Term $term **/
+  /** @var Term $term **/
   $term = $variables['elements']['#taxonomy_term'];
   array_unshift(
     $suggestions,
diff --git a/nightar.theme b/nightar.theme
index a7ef918..1edd53e 100755
--- a/nightar.theme
+++ b/nightar.theme
@@ -24,7 +24,7 @@ function nightar_theme() {
       'variables' => [
         'class' => '',
       ],
-      'path' => drupal_get_path('theme', Theme::getThemeName()) . '/templates/icons',
+      'path' => \Drupal::service('extension.list.theme')->getPath(Theme::getThemeName()) . '/templates/icons',
       'pattern' => 'na_icon__',
     ],
   ];
diff --git a/src/Theme.php b/src/Theme.php
index b5b1395..c08a34c 100755
--- a/src/Theme.php
+++ b/src/Theme.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\nightar;
 
+use Drupal\Core\StringTranslation\StringTranslationTrait;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -15,7 +17,7 @@ use Drupal\Component\Render\MarkupInterface;
  */
 class Theme {
 
-  use Drupal\Core\StringTranslation\StringTranslationTrait;
+  use StringTranslationTrait;
 
   /**
    * The theme name.
@@ -73,7 +75,9 @@ class Theme {
     if (empty($module_name) && $module_type == 'theme') {
       $module_name = self::getThemeName();
     }
-    $file = drupal_get_path($module_type, $module_name) . $name . '.' . $ext;
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $file = \Drupal::service('extension.path.resolver')->getPath($module_type, $module_name) . $name . '.' . $ext;
 
     if (is_file($file)) {
       require_once $file;
@@ -90,7 +94,7 @@ class Theme {
    * @param string $mode
    *   Display mode.
    *
-   * @return \Drupal\Core\Entity\EntityDisplayBase|EntityViewDisplay|\Drupal\Core\Entity\EntityInterface|null
+   * @return EntityDisplayBase|EntityViewDisplay|EntityInterface|null
    *   Return the Entity display object or null
    */
   public static function getEntityDisplay($entityType, $bundle, $mode) {
@@ -109,7 +113,7 @@ class Theme {
   /**
    * Get rendered string without development comments.
    *
-   * @param \Drupal\Core\Entity\ContentEntityBase $entity
+   * @param ContentEntityBase $entity
    *   The entity where contains the field.
    * @param string $field_name
    *   The field name thats will be rendered.
diff --git a/theme-settings.php b/theme-settings.php
index f61e9d3..f19039a 100755
--- a/theme-settings.php
+++ b/theme-settings.php
@@ -1,16 +1,16 @@
 <?php
 
+use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
  * Theme settings form for NightAr theme.
  */
-
 /**
  * Implements hook_form_system_theme_settings_alter().
  *
  * @see hook_form_system_theme_settings_alter()
  */
-function nightar_form_system_theme_settings_alter(array &$form, \Drupal\Core\Form\FormStateInterface &$form_state) {
+function nightar_form_system_theme_settings_alter(array &$form, FormStateInterface &$form_state) {
 
   $form['nightar'] = [
     '#type'  => 'details',
