diff --git a/src/Backend/WidgetBlockBackend.php b/src/Backend/WidgetBlockBackend.php
index 81a273c..c5ba9c0 100644
--- a/src/Backend/WidgetBlockBackend.php
+++ b/src/Backend/WidgetBlockBackend.php
@@ -24,35 +24,35 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Cache used for resolved widget markup.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * An HTTP client which can be used for requesting widget markup.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * The logger channel for this backend.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The cache tags invalidator service.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;
 
@@ -61,13 +61,13 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
    *
    * @param \Drupal\Core\Cache\CacheBackendInterface
    *   Cache used for resolved widget markup.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   An HTTP client which can be used to requesting widget markup.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   An instance of LoggerChannelInterface.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache_tags_invalidator
+   * @param CacheTagsInvalidatorInterface $cache_tags_invalidator
    *   The cache tags invalidator service.
    */
   public function __construct(CacheBackendInterface $cache, ClientInterface $http_client, LoggerChannelInterface $logger, ModuleHandlerInterface $module_handler, CacheTagsInvalidatorInterface $cache_tags_invalidator) {
@@ -82,7 +82,7 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get the widget markup cache.
    *
-   * @return \Drupal\Core\Cache\CacheBackendInterface
+   * @return CacheBackendInterface
    *   An instance of CacheBackendInterface.
    */
   protected function getCache() {
@@ -92,7 +92,7 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get the HTTP client.
    *
-   * @return \GuzzleHttp\ClientInterface
+   * @return ClientInterface
    *   An instance of ClientInterface.
    */
   protected function getHttpClient() {
@@ -102,7 +102,7 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get the logger instance.
    *
-   * @return \Drupal\Core\Logger\LoggerChannelInterface
+   * @return LoggerChannelInterface
    *   An instance of LoggerChannelInterface.
    */
   protected function getLogger() {
@@ -112,7 +112,7 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get the module handler.
    *
-   * @return \Drupal\Core\Extension\ModuleHandlerInterface
+   * @return ModuleHandlerInterface
    *   An instance of ModuleHandlerInterface.
    */
   protected function getModuleHandler() {
@@ -122,7 +122,7 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get the cache tags invalidator.
    *
-   * @return \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @return CacheTagsInvalidatorInterface
    *   An instance of CacheTagsInvalidatorInterface.
    */
   protected function getCacheTagsInvalidator() {
@@ -132,9 +132,9 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Create a request URL for specified Widget Block configuration.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which the markup should be resolved.
    *
    * @return string
@@ -148,9 +148,9 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Create a request for specified Widget Block configuration.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which the markup should be resolved.
    *
    * @return \Drupal\widget_block\Utility\WidgetResponse
@@ -178,9 +178,9 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Determine whether markup has changed.
    *
-   * @param \Drupal\widget_block\Renderable\WidgetMarkupInterface|null $current
+   * @param WidgetMarkupInterface|null $current
    *   The current markup from which comparison is performed.
-   * @param \Drupal\widget_block\Renderable\WidgetMarkupInterface|null $new
+   * @param WidgetMarkupInterface|null $new
    *   The new markup to compare against.
    */
   protected function hasMarkupChanged(WidgetMarkupInterface $current = NULL, WidgetMarkupInterface $new = NULL) {
@@ -203,9 +203,9 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get the cache identifier based on the widget configuration.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which the markup should be resolved.
    *
    * @return string
@@ -218,12 +218,12 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get markup from local cache.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which the markup should be resolved.
    *
-   * @return \Drupal\widget_block\Renderable\WidgetMarkupInterface|null
+   * @return WidgetMarkupInterface|null
    *   An instance of WidgetMarkupInterface if resolved, otherwise NULL.
    */
   protected function getMarkupFromCache(WidgetBlockConfigInterface $config, LanguageInterface $language) {
@@ -247,9 +247,9 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Apply markup to the underlying cache.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which the markup should be resolved.
    * @param \Drupal\widget_bock\Renderable\WidgetMarkupInterface|NULL $markup
    *   An instance of WidgetMarkupInterface.
@@ -282,12 +282,12 @@ class WidgetBlockBackend implements WidgetBlockBackendInterface {
   /**
    * Get markup from the external service.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which the markup should be resolved.
    *
-   * @return \Drupal\widget_block\Renderable\WidgetMarkupInterface|null
+   * @return WidgetMarkupInterface|null
    *   An instance of WidgetMarkupInterface if resolved, otherwise NULL.
    *
    * @throws \Exception
diff --git a/src/Backend/WidgetBlockBackendInterface.php b/src/Backend/WidgetBlockBackendInterface.php
index 377a128..ed12ef0 100644
--- a/src/Backend/WidgetBlockBackendInterface.php
+++ b/src/Backend/WidgetBlockBackendInterface.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\widget_block\Backend;
 
+use Drupal\widget_block\Renderable\WidgetMarkupInterface;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\widget_block\Entity\WidgetBlockConfigInterface;
 
@@ -17,9 +18,9 @@ interface WidgetBlockBackendInterface {
   /**
    * Invalidate the widget block markup for specified configuration.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which an invalidation should be performed.
    *
    * @return bool
@@ -30,9 +31,9 @@ interface WidgetBlockBackendInterface {
   /**
    * Refresh the widget block markup for specified configuration.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which a refresh should be performed.
    * @param boolean $forced
    *   A flag which indicates whether refresh should be forced.
@@ -45,12 +46,12 @@ interface WidgetBlockBackendInterface {
   /**
    * Get the widget block markup for specified configuration.
    *
-   * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+   * @param WidgetBlockConfigInterface $config
    *   The widget block configuration.
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which the widget block will be resolved.
    *
-   * @return \Drupal\widget_block\Renderable\WidgetMarkupInterface|null
+   * @return WidgetMarkupInterface|null
    *   An instance of WidgetMarkupInterface if available, otherwise null.
    */
   public function getMarkup(WidgetBlockConfigInterface $config, LanguageInterface $language);
diff --git a/src/Entity/WidgetBlockConfigInterface.php b/src/Entity/WidgetBlockConfigInterface.php
index 7ac222e..733949f 100644
--- a/src/Entity/WidgetBlockConfigInterface.php
+++ b/src/Entity/WidgetBlockConfigInterface.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\widget_block\Entity;
 
+use Drupal\widget_block\Renderable\WidgetMarkupInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -123,7 +124,7 @@ interface WidgetBlockConfigInterface extends ConfigEntityInterface {
   /**
    * Get the widget block markup.
    *
-   * @return \Drupal\widget_block\Renderable\WidgetMarkupInterface
+   * @return WidgetMarkupInterface
    *   An instance of WidgetMarkupInterface.
    */
   public function getMarkup();
diff --git a/src/Form/WidgetBlockConfigEditForm.php b/src/Form/WidgetBlockConfigEditForm.php
index f5a0e7d..5366ab3 100644
--- a/src/Form/WidgetBlockConfigEditForm.php
+++ b/src/Form/WidgetBlockConfigEditForm.php
@@ -22,7 +22,7 @@ class WidgetBlockConfigEditForm extends EntityForm {
     // Perform default form building.
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\widget_block\Entity\WidgetBlockConfigInterface $entity */
+    /** @var WidgetBlockConfigInterface $entity */
     $entity = $this->getEntity();
 
     $form['id'] = [
diff --git a/src/Form/WidgetBlockConfigInvalidateForm.php b/src/Form/WidgetBlockConfigInvalidateForm.php
index 83e64af..369af5a 100644
--- a/src/Form/WidgetBlockConfigInvalidateForm.php
+++ b/src/Form/WidgetBlockConfigInvalidateForm.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\widget_block\Form;
 
+use Drupal\Core\Language\LanguageInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -19,14 +20,14 @@ class WidgetBlockConfigInvalidateForm extends EntityConfirmFormBase {
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageInterface
+   * @var LanguageInterface
    */
   protected $languageManager;
 
   /**
    * Create a WidgetBlockConfigRefreshForm object.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The Language Manager service.
    */
   public function __construct(LanguageManagerInterface $language_manager) {
@@ -44,7 +45,7 @@ class WidgetBlockConfigInvalidateForm extends EntityConfirmFormBase {
   /**
    * Get the language manager.
    *
-   * @return \Drupal\Core\Language\LanguageManagerInterface
+   * @return LanguageManagerInterface
    *   An instance of LanguageManagerInterface.
    */
   protected function getLanguageManager() {
diff --git a/src/Form/WidgetBlockConfigRefreshForm.php b/src/Form/WidgetBlockConfigRefreshForm.php
index de8036f..83011c7 100644
--- a/src/Form/WidgetBlockConfigRefreshForm.php
+++ b/src/Form/WidgetBlockConfigRefreshForm.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\widget_block\Form;
 
+use Drupal\Core\Language\LanguageInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -19,14 +20,14 @@ class WidgetBlockConfigRefreshForm extends EntityConfirmFormBase {
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageInterface
+   * @var LanguageInterface
    */
   protected $languageManager;
 
   /**
    * Create a WidgetBlockConfigRefreshForm object.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The Language Manager service.
    */
   public function __construct(LanguageManagerInterface $language_manager) {
@@ -44,7 +45,7 @@ class WidgetBlockConfigRefreshForm extends EntityConfirmFormBase {
   /**
    * Get the language manager.
    *
-   * @return \Drupal\Core\Language\LanguageManagerInterface
+   * @return LanguageManagerInterface
    *   An instance of LanguageManagerInterface.
    */
   protected function getLanguageManager() {
diff --git a/src/Plugin/Block/WidgetBlock.php b/src/Plugin/Block/WidgetBlock.php
index de617d7..b46cced 100644
--- a/src/Plugin/Block/WidgetBlock.php
+++ b/src/Plugin/Block/WidgetBlock.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\widget_block\Plugin\Block;
 
+use Drupal\widget_block\Entity\WidgetBlockConfigInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -28,21 +29,21 @@ class WidgetBlock extends BlockBase implements WidgetBlockInterface, ContainerFa
   /**
    * The widget block configuration storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $widgetBlockConfigStorage;
 
   /**
    * The widget service backend.
    *
-   * @var \Drupal\widget_block\Backend\WidgetBlockBackendInterface
+   * @var WidgetBlockBackendInterface
    */
   protected $backend;
 
   /**
    * The widget block configuration entity.
    *
-   * @var \Drupal\widget_block\Entity\WidgetBlockConfigInterface|NULL
+   * @var WidgetBlockConfigInterface|NULL
    */
   protected $configEntity;
 
@@ -55,9 +56,9 @@ class WidgetBlock extends BlockBase implements WidgetBlockInterface, ContainerFa
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\widget_block\Backend\WidgetBlockBackendInterface $backend
+   * @param WidgetBlockBackendInterface $backend
    *   The widget backend service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $widget_block_config_storage
+   * @param EntityStorageInterface $widget_block_config_storage
    *   The widget block configuration storage.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, WidgetBlockBackendInterface $backend, EntityStorageInterface $widget_block_config_storage) {
@@ -87,7 +88,7 @@ class WidgetBlock extends BlockBase implements WidgetBlockInterface, ContainerFa
   /**
    * Get the widget block backend.
    *
-   * @return \Drupal\widget_block\Backend\WidgetBlockBackendInterface
+   * @return WidgetBlockBackendInterface
    *   An instance of WidgetBlockBackendInterface.
    */
   protected function getBackend() {
@@ -97,7 +98,7 @@ class WidgetBlock extends BlockBase implements WidgetBlockInterface, ContainerFa
   /**
    * Get the widget block configuration storage.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   The widget block configuration storage.
    */
   protected function getStorage() {
@@ -107,7 +108,7 @@ class WidgetBlock extends BlockBase implements WidgetBlockInterface, ContainerFa
   /**
    * Get the configuration entity.
    *
-   * @return \Drupal\widget_block\Entity\WidgetBlockConfigInterface|NULL
+   * @return WidgetBlockConfigInterface|NULL
    *   An instance of WidgetBlockConfigInterface.
    */
   public function getConfigEntity() {
diff --git a/src/Plugin/Block/WidgetBlockInterface.php b/src/Plugin/Block/WidgetBlockInterface.php
index d63a430..efca3b8 100644
--- a/src/Plugin/Block/WidgetBlockInterface.php
+++ b/src/Plugin/Block/WidgetBlockInterface.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\widget_block\Plugin\Block;
 
+use Drupal\widget_block\Entity\WidgetBlockConfigInterface;
 use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Language\LanguageInterface;
 
@@ -17,7 +18,7 @@ interface WidgetBlockInterface extends BlockPluginInterface {
   /**
    * Get the configuration entity.
    *
-   * @return \Drupal\widget_block\Entity\WidgetBlockConfigInterface|NULL
+   * @return WidgetBlockConfigInterface|NULL
    *   An instance of WidgetBlockConfigInterface if available, otherwise NULL.
    */
   public function getConfigEntity();
@@ -25,7 +26,7 @@ interface WidgetBlockInterface extends BlockPluginInterface {
   /**
    * Invalida the widget block.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which invalidation should be performed.
    *
    * @return bool
@@ -36,7 +37,7 @@ interface WidgetBlockInterface extends BlockPluginInterface {
   /**
    * Refresh the widget block.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language for which refresh should be performed.
    * @param bool $forced
    *   Flag which indicates whether refresh should be performed
diff --git a/src/Plugin/Derivative/WidgetBlockDeriver.php b/src/Plugin/Derivative/WidgetBlockDeriver.php
index 0376f65..1c527b3 100644
--- a/src/Plugin/Derivative/WidgetBlockDeriver.php
+++ b/src/Plugin/Derivative/WidgetBlockDeriver.php
@@ -23,14 +23,14 @@ class WidgetBlockDeriver extends DeriverBase implements ContainerDeriverInterfac
   /**
    * The widget block configuration storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $widgetBlockConfigStorage;
 
   /**
    * Create a WidgetBlockDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $widget_block_config_storage
+   * @param EntityStorageInterface $widget_block_config_storage
    *   The widget block configuration storage.
    */
   public function __construct(EntityStorageInterface $widget_block_config_storage) {
@@ -53,7 +53,7 @@ class WidgetBlockDeriver extends DeriverBase implements ContainerDeriverInterfac
   /**
    * Get the widget block configuration storage.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   The widget block configuration storage.
    */
   protected function getWidgetBlockConfigStorage() {
diff --git a/src/Renderable/WidgetMarkup.php b/src/Renderable/WidgetMarkup.php
index f2fe256..77e2d05 100644
--- a/src/Renderable/WidgetMarkup.php
+++ b/src/Renderable/WidgetMarkup.php
@@ -6,6 +6,7 @@
 
 namespace Drupal\widget_block\Renderable;
 
+use Drupal\Core\Render\Markup;
 use Psr\Http\Message\ResponseInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Component\Render\MarkupInterface;
@@ -69,7 +70,7 @@ class WidgetMarkup implements WidgetMarkupInterface {
   /**
    * Markup which represents the content.
    *
-   * @var \Drupal\Core\Render\Markup
+   * @var Markup
    */
   protected $content;
 
diff --git a/src/Utility/ResponseHelper.php b/src/Utility/ResponseHelper.php
index 47f51ce..2f0f993 100644
--- a/src/Utility/ResponseHelper.php
+++ b/src/Utility/ResponseHelper.php
@@ -6,6 +6,8 @@
 
 namespace Drupal\widget_block\Utility;
 
+use Drupal\Core\Language\LanguageInterface;
+use Drupal\widget_block\Renderable\WidgetMarkupInterface;
 use Psr\Http\Message\ResponseInterface;
 use Drupal\Core\Render\Markup;
 use Drupal\widget_block\Entity\WidgetBlockConfigInterface;
@@ -24,7 +26,7 @@ final class ResponseHelper {
     /**
      * Validate whether the response has valid meta headers.
      *
-     * @param \Psr\Http\Message\ResponseInterface $response
+     * @param ResponseInterface $response
      *   An instance of ResponseInterface.
      *
      * @throws \RuntimeException
@@ -61,7 +63,7 @@ final class ResponseHelper {
     /**
      * Validate whether the content type matches.
      *
-     * @param \Psr\Http\Message\ResponseInterface $response
+     * @param ResponseInterface $response
      *   The response which should be validated.
      *
      * @throws \RuntimeException
@@ -82,7 +84,7 @@ final class ResponseHelper {
     /**
      * Extract the widget related meta data from request.
      *
-     * @param \Psr\Http\Message\ResponseInterface $response
+     * @param ResponseInterface $response
      *   An instance of ResponseInterface.
      *
      * @return array
@@ -146,13 +148,13 @@ final class ResponseHelper {
     /**
      * Create markup from specified response.
      *
-     * @param \Psr\Http\Message\ResponseInterface $response
+     * @param ResponseInterface $response
      *   An instance of ResponseInterface.
-     * @param \Drupal\Core\Language\LanguageInterface $language
+     * @param LanguageInterface $language
      *   Optional. The language for which the widget markup was generated. Defaults
      *   to the language code in the response.
      *
-     * @return \Drupal\widget_block\Renderable\WidgetMarkupInterface
+     * @return WidgetMarkupInterface
      *   An instance of WidgetMarkupInterface.
      *
      * @throws \Exception
diff --git a/src/WidgetBlockLazyBuilder.php b/src/WidgetBlockLazyBuilder.php
index f921687..94d5141 100644
--- a/src/WidgetBlockLazyBuilder.php
+++ b/src/WidgetBlockLazyBuilder.php
@@ -6,6 +6,8 @@
 
 namespace Drupal\widget_block;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\widget_block\Entity\WidgetBlockConfigInterface;
 use Drupal\Core\Entity\EntityManagerInterface;
 
 /**
@@ -16,7 +18,7 @@ class WidgetBlockLazyBuilder {
   /**
    * The Widget Block configuration storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $widgetBlockConfigStorage;
 
@@ -34,7 +36,7 @@ class WidgetBlockLazyBuilder {
   /**
    * Get the widget block configuration storage.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   An instance of EntityStorageInterface.
    */
   protected function getWidgetBlockConfigStorage() {
@@ -54,7 +56,7 @@ class WidgetBlockLazyBuilder {
     // Initialize $markup variable to NULL as default behavior.
     $markup = NULL;
 
-    /** @var \Drupal\widget_block\Entity\WidgetBlockConfigInterface $widget_block_config */
+    /** @var WidgetBlockConfigInterface $widget_block_config */
     $widget_block_config = $this->getWidgetBlockConfigStorage()->load($widget_block_config_id);
 
     // Check whether the widget block configuration was resolved.
diff --git a/widget_block.api.php b/widget_block.api.php
index e226743..0a81db5 100644
--- a/widget_block.api.php
+++ b/widget_block.api.php
@@ -11,11 +11,10 @@ use Drupal\widget_block\Entity\WidgetBlockConfigInterface;
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Purge all related resource which use the given Widget Block configuration.
  *
- * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+ * @param WidgetBlockConfigInterface $config
  *   The widget block configuration for which a purge is requested.
  * @param \Drupal\Core\LanguageInterface $language
  *   The language which the resources need to be purged.
diff --git a/widget_block.drush.inc b/widget_block.drush.inc
index 1a21786..c5a7557 100644
--- a/widget_block.drush.inc
+++ b/widget_block.drush.inc
@@ -1,4 +1,6 @@
 <?php
+use Drupal\widget_block\Entity\WidgetBlockConfigInterface;
+use Drupal\Core\Language\LanguageInterface;
 /**
  * @file
  * Widget Block drush integration.
@@ -55,7 +57,7 @@ function widget_block_drush_command() {
 /**
  * Get the Widget Block configuration from the ID option.
  *
- * @return \Drupal\widget_block\Entity\WidgetBlockConfigInterface[]
+ * @return WidgetBlockConfigInterface[]
  *   An array of WidgetBlockConfigInterface objects.
  */
 function _drush_widget_block_get_id_option() {
@@ -71,7 +73,7 @@ function _drush_widget_block_get_id_option() {
 /**
  * Get a list of languages from the language option.
  *
- * @return \Drupal\Core\Language\LanguageInterface[]
+ * @return LanguageInterface[]
  *   An array of LanguageInterface objects.
  */
 function _drush_widget_block_get_language_option() {
diff --git a/widget_block.module b/widget_block.module
index 34ac1ed..2ef46ff 100644
--- a/widget_block.module
+++ b/widget_block.module
@@ -78,13 +78,12 @@ function widget_block_entity_operation(EntityInterface $entity) {
 /*
  * Batch related helper functions.
  */
-
 /**
  * Batch API related callback which is invoked when operation should be performed.
  *
- * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+ * @param WidgetBlockConfigInterface $config
  *   An instance of WidgetBlockConfigInterface.
- * @param \Drupal\Core\Language\LanguageInterface $language
+ * @param LanguageInterface $language
  *   An instance of LanguageInterface.
  * @param bool $forced
  *   Flag which indicates whether refresh should be forced.
@@ -134,9 +133,9 @@ function _widget_block_batch_refresh_finished($success, $results, $operations) {
 /**
  * Batch API related callback which is invoked when operation should be performed.
  *
- * @param \Drupal\widget_block\Entity\WidgetBlockConfigInterface $config
+ * @param WidgetBlockConfigInterface $config
  *   An instance of WidgetBlockConfigInterface.
- * @param \Drupal\Core\Language\LanguageInterface $language
+ * @param LanguageInterface $language
  *   An instance of LanguageInterface.
  * @param bool $forced
  *   Flag which indicates whether refresh should be forced.
