modules/contrib/embederator/embederator.api.php
modules/contrib/embederator/embederator.install
modules/contrib/embederator/embederator.module
modules/contrib/embederator/embederator.theme.inc
modules/contrib/embederator/src/Controller/AjaxRender.php
modules/contrib/embederator/src/EmbederatorAccessControlHandler.php
modules/contrib/embederator/src/EmbederatorInterface.php
modules/contrib/embederator/src/EmbederatorRender.php
modules/contrib/embederator/src/EmbederatorTypeInterface.php
modules/contrib/embederator/src/EmbederatorUtilities.php
modules/contrib/embederator/src/Entity/Controller/EmbederatorController.php
modules/contrib/embederator/src/Entity/Controller/EmbederatorListBuilder.php
modules/contrib/embederator/src/Entity/Controller/EmbederatorTypeListBuilder.php
modules/contrib/embederator/src/Entity/Embederator.php
modules/contrib/embederator/src/Entity/EmbederatorType.php
modules/contrib/embederator/src/Form/EmbederatorDeleteForm.php
modules/contrib/embederator/src/Form/EmbederatorForm.php
modules/contrib/embederator/src/Form/EmbederatorTypeDeleteForm.php
modules/contrib/embederator/src/Form/EmbederatorTypeForm.php
modules/contrib/embederator/src/Plugin/EntityReferenceSelection/EmbederatorSelection.php
modules/contrib/embederator/src/Plugin/Field/FieldFormatter/EmbederatorFormatter.php

6 files with changes
====================

1) modules/contrib/embederator/src/Plugin/EntityReferenceSelection/EmbederatorSelection.php:138

    ---------- begin diff ----------
@@ @@
    * Validate helper to have support for other entity reference widgets.
    *
    * @param $element
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @param $form
    */
   public static function targetTypeValidate($element, FormStateInterface $form_state, $form) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/embederator/src/Entity/Controller/EmbederatorListBuilder.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;

@@ @@
   /**
    * Constructs a new EmbederatorListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, UrlGeneratorInterface $url_generator) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/embederator/src/Entity/Controller/EmbederatorController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\embederator\Entity\Controller;

+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Render\RendererInterface;
@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Constructs a EmbederatorController object.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(RendererInterface $renderer) {
@@ @@
    *
    * Redirects to node/add/[type] if only one content type is available.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   A render array for a list of the node types that can be added; however,
    *   if there is only one node type defined for the site, the function
    *   will return a RedirectResponse to the node add page for that one node
@@ @@
   /**
    * Provides the embederator submission form.
    *
-   * @param \Drupal\embederator\EmbederatorTypeInterface $embederator_type
+   * @param EmbederatorTypeInterface $embederator_type
    *   The node type entity for the node.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/embederator/src/EmbederatorUtilities.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Token handling.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/embederator/src/EmbederatorRender.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $client;

@@ @@
   /**
    * Token handling.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/embederator/src/Controller/AjaxRender.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;

@@ @@
   /**
    * Embed render utilities.
    *
-   * @var Drupal\embederator\EmbederatorRender
+   * @var EmbederatorRender
    */
   protected $embedRenderer;

@@ @@
   /**
    * Core renderer.
    *
-   * @var Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
     $loadstyle = $settings['loadstyle'] ?? '';
     if ($loadstyle == 'iframe') {
       $base_url = Url::fromRoute('<front>', [], ['absolute' => TRUE])->toString();
-      $markup .= "\n" . '<script src="' . $base_url . drupal_get_path('module', 'embederator') . '/js/iframeResizer.contentWindow.min.js"></script>';
+      $markup .= "\n" . '<script src="' . $base_url . \Drupal::service('extension.list.module')->getPath('embederator') . '/js/iframeResizer.contentWindow.min.js"></script>';
     }

     $build = $this->embedRenderer->generateElement($markup);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

