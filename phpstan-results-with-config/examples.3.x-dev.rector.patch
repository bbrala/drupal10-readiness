diff --git a/modules/action_example/src/Plugin/Action/BasicExample.php b/modules/action_example/src/Plugin/Action/BasicExample.php
index 06b7aa6..e0b9fbf 100644
--- a/modules/action_example/src/Plugin/Action/BasicExample.php
+++ b/modules/action_example/src/Plugin/Action/BasicExample.php
@@ -29,7 +29,7 @@ class BasicExample extends ActionBase implements ContainerFactoryPluginInterface
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MessengerInterface $messenger) {
diff --git a/modules/ajax_example/src/Form/DependentDropdown.php b/modules/ajax_example/src/Form/DependentDropdown.php
index 3fe6cdd..2712717 100644
--- a/modules/ajax_example/src/Form/DependentDropdown.php
+++ b/modules/ajax_example/src/Form/DependentDropdown.php
@@ -181,7 +181,7 @@ class DependentDropdown extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/ajax_example/src/Form/DynamicFormSections.php b/modules/ajax_example/src/Form/DynamicFormSections.php
index c6d41ee..201079f 100644
--- a/modules/ajax_example/src/Form/DynamicFormSections.php
+++ b/modules/ajax_example/src/Form/DynamicFormSections.php
@@ -210,7 +210,7 @@ class DynamicFormSections extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/ajax_example/src/Form/EntityAutocomplete.php b/modules/ajax_example/src/Form/EntityAutocomplete.php
index 5ba801d..06b62eb 100644
--- a/modules/ajax_example/src/Form/EntityAutocomplete.php
+++ b/modules/ajax_example/src/Form/EntityAutocomplete.php
@@ -25,14 +25,14 @@ class EntityAutocomplete implements FormInterface, ContainerInjectionInterface {
    *
    * We need this for the submit handler.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Container injection factory.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The service discovery container.
    *
    * @return self
@@ -50,7 +50,7 @@ class EntityAutocomplete implements FormInterface, ContainerInjectionInterface {
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/modules/ajax_example/src/Form/Wizard.php b/modules/ajax_example/src/Form/Wizard.php
index 787d630..fd94174 100644
--- a/modules/ajax_example/src/Form/Wizard.php
+++ b/modules/ajax_example/src/Form/Wizard.php
@@ -172,7 +172,7 @@ class Wizard extends FormBase {
    *
    * @param array $form
    *   Form API form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form API form.
    *
    * @return array
@@ -187,7 +187,7 @@ class Wizard extends FormBase {
    *
    * @param array $form
    *   The Form API form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The FormState object.
    *
    * @return array
@@ -204,7 +204,7 @@ class Wizard extends FormBase {
    *
    * @param array $form
    *   The Form API form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The FormState object.
    *
    * @return array
diff --git a/modules/ajax_example/tests/src/Functional/DynamicFormSectionsTest.php b/modules/ajax_example/tests/src/Functional/DynamicFormSectionsTest.php
index a06fece..13244f7 100644
--- a/modules/ajax_example/tests/src/Functional/DynamicFormSectionsTest.php
+++ b/modules/ajax_example/tests/src/Functional/DynamicFormSectionsTest.php
@@ -49,7 +49,7 @@ class DynamicFormSectionsTest extends BrowserTestBase {
     $this->drupalGet($dropdown_url);
     $this->submitForm(['question_type_select' => 'Choose question style'], 'Choose');
     $detail_children = $page->findAll('css', 'div.details-wrapper *');
-    $this->assertEqual(count($detail_children), 0);
+    $this->assertEquals(count($detail_children), 0);
 
     // Cycle through the other dropdown values.
     $question_styles = [
@@ -62,7 +62,7 @@ class DynamicFormSectionsTest extends BrowserTestBase {
       $this->drupalGet($dropdown_url);
       $this->submitForm(['question_type_select' => $question_style], 'Choose');
       $detail_children = $page->findAll('css', 'div.details-wrapper *');
-      $this->assertNotEqual($this->count($detail_children), 0);
+      $this->assertNotEquals($this->count($detail_children), 0);
       $this->submitForm(['question' => 'George Washington'], 'Submit your answer');
       $assert->pageTextContains('You got the right answer: George Washington');
     }
@@ -70,7 +70,7 @@ class DynamicFormSectionsTest extends BrowserTestBase {
     $this->drupalGet($dropdown_url);
     $this->submitForm(['question_type_select' => 'Multiple Choice'], 'Choose');
     $detail_children = $page->findAll('css', 'div.details-wrapper *');
-    $this->assertNotEqual($this->count($detail_children), 0);
+    $this->assertNotEquals($this->count($detail_children), 0);
     $this->submitForm(['question' => 'Abraham Lincoln'], 'Submit your answer');
     $assert->pageTextContains('Sorry, your answer (Abraham Lincoln) is wrong');
   }
diff --git a/modules/batch_example/tests/src/Functional/BatchExampleWebTest.php b/modules/batch_example/tests/src/Functional/BatchExampleWebTest.php
index 0a79a43..9b5ef89 100644
--- a/modules/batch_example/tests/src/Functional/BatchExampleWebTest.php
+++ b/modules/batch_example/tests/src/Functional/BatchExampleWebTest.php
@@ -35,13 +35,19 @@ class BatchExampleWebTest extends BrowserTestBase {
     $this->drupalGet('examples/batch_example');
     $this->submitForm(['batch' => 'batch_1'], 'Go');
     // Check that 1000 operations were performed.
-    $this->assertText('1000 results processed');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('1000 results processed');
 
     // Launch Batch 2.
     $this->drupalGet('examples/batch_example');
     $this->submitForm(['batch' => 'batch_2'], 'Go');
     // Check that 600 operations were performed.
-    $this->assertText('600 results processed');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('600 results processed');
   }
 
 }
diff --git a/modules/block_example/tests/src/Functional/BlockExampleMenuTest.php b/modules/block_example/tests/src/Functional/BlockExampleMenuTest.php
index 2b5fd2f..08a3b56 100644
--- a/modules/block_example/tests/src/Functional/BlockExampleMenuTest.php
+++ b/modules/block_example/tests/src/Functional/BlockExampleMenuTest.php
@@ -40,16 +40,16 @@ class BlockExampleMenuTest extends BrowserTestBase {
    */
   public function testBlockExampleLink() {
     $this->drupalGet('');
-    $this->assertLinkByHref('examples/block-example');
+    $this->assertSession()->linkByHrefExists('examples/block-example');
 
     $this->drupalGet('examples/block-example');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Verify that the block admin page link works.
     $this->clickLink('the block admin page');
     // Since it links to the admin page, we should get a permissions error and
     // not 404.
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }
 
 }
diff --git a/modules/cache_example/src/Form/CacheExampleForm.php b/modules/cache_example/src/Form/CacheExampleForm.php
index a4b1afa..734392c 100644
--- a/modules/cache_example/src/Form/CacheExampleForm.php
+++ b/modules/cache_example/src/Form/CacheExampleForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\cache_example\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Cache\Cache;
@@ -16,28 +19,28 @@ class CacheExampleForm extends FormBase {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The cache.default cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
diff --git a/modules/config_entity_example/src/Controller/RobotListBuilder.php b/modules/config_entity_example/src/Controller/RobotListBuilder.php
index 988e88e..893dae7 100644
--- a/modules/config_entity_example/src/Controller/RobotListBuilder.php
+++ b/modules/config_entity_example/src/Controller/RobotListBuilder.php
@@ -53,7 +53,7 @@ class RobotListBuilder extends ConfigEntityListBuilder {
   /**
    * Builds a row for an entity in the entity listing.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity for which to build the row.
    *
    * @return array
diff --git a/modules/config_entity_example/src/Form/RobotAddForm.php b/modules/config_entity_example/src/Form/RobotAddForm.php
index ec57951..06c08a0 100644
--- a/modules/config_entity_example/src/Form/RobotAddForm.php
+++ b/modules/config_entity_example/src/Form/RobotAddForm.php
@@ -20,7 +20,7 @@ class RobotAddForm extends RobotFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
diff --git a/modules/config_entity_example/src/Form/RobotDeleteForm.php b/modules/config_entity_example/src/Form/RobotDeleteForm.php
index 34756d2..074f4e2 100644
--- a/modules/config_entity_example/src/Form/RobotDeleteForm.php
+++ b/modules/config_entity_example/src/Form/RobotDeleteForm.php
@@ -55,7 +55,7 @@ class RobotDeleteForm extends EntityConfirmFormBase {
    * delete forms, this is typically the route that points at the list
    * controller.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The URL to go to if the user cancels the deletion.
    */
   public function getCancelUrl() {
@@ -70,7 +70,7 @@ class RobotDeleteForm extends EntityConfirmFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/modules/config_entity_example/src/Form/RobotEditForm.php b/modules/config_entity_example/src/Form/RobotEditForm.php
index eda096f..d09bfb0 100644
--- a/modules/config_entity_example/src/Form/RobotEditForm.php
+++ b/modules/config_entity_example/src/Form/RobotEditForm.php
@@ -20,7 +20,7 @@ class RobotEditForm extends RobotFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
diff --git a/modules/config_entity_example/src/Form/RobotFormBase.php b/modules/config_entity_example/src/Form/RobotFormBase.php
index 0ca7065..efedb77 100644
--- a/modules/config_entity_example/src/Form/RobotFormBase.php
+++ b/modules/config_entity_example/src/Form/RobotFormBase.php
@@ -23,7 +23,7 @@ class RobotFormBase extends EntityForm {
   /**
    * An entity query factory for the robot entity type.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
@@ -35,7 +35,7 @@ class RobotFormBase extends EntityForm {
    * from the container. We later use this query factory to build an entity
    * query for the exists() method.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   An entity query factory for the robot entity type.
    */
   public function __construct(EntityStorageInterface $entity_storage) {
@@ -69,7 +69,7 @@ class RobotFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
@@ -122,7 +122,7 @@ class RobotFormBase extends EntityForm {
    *   The entity ID.
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ -147,7 +147,7 @@ class RobotFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
@@ -183,7 +183,7 @@ class RobotFormBase extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    */
   public function save(array $form, FormStateInterface $form_state) {
diff --git a/modules/config_entity_example/tests/src/Functional/ConfigEntityExampleTest.php b/modules/config_entity_example/tests/src/Functional/ConfigEntityExampleTest.php
index 137f640..ed4e806 100644
--- a/modules/config_entity_example/tests/src/Functional/ConfigEntityExampleTest.php
+++ b/modules/config_entity_example/tests/src/Functional/ConfigEntityExampleTest.php
@@ -130,9 +130,9 @@ class ConfigEntityExampleTest extends BrowserTestBase {
 
     // 6) Verify that required links are present on respective paths.
     $this->drupalGet(Url::fromRoute('entity.robot.list'));
-    $this->assertLinkByHref('/examples/config-entity-example/add');
-    $this->assertLinkByHref('/examples/config-entity-example/manage/robby_machine_name');
-    $this->assertLinkByHref('/examples/config-entity-example/manage/robby_machine_name/delete');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/add');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/manage/robby_machine_name');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/manage/robby_machine_name/delete');
 
     // Verify links on Add Robot.
     $this->drupalGet('/examples/config-entity-example/add');
@@ -140,7 +140,7 @@ class ConfigEntityExampleTest extends BrowserTestBase {
 
     // Verify links on Edit Robot.
     $this->drupalGet('/examples/config-entity-example/manage/robby_machine_name');
-    $this->assertLinkByHref('/examples/config-entity-example/manage/robby_machine_name/delete');
+    $this->assertSession()->linkByHrefExists('/examples/config-entity-example/manage/robby_machine_name/delete');
     $this->assertActionButton('examples/config-entity-example');
 
     // Verify links on Delete Robot.
@@ -150,7 +150,7 @@ class ConfigEntityExampleTest extends BrowserTestBase {
       '//a[@id="edit-cancel" and contains(@href, :path)]',
       [':path' => '/examples/config-entity-example']
     );
-    $this->assertEqual(count($cancel_button), 1, 'Found cancel button linking to list page.');
+    $this->assertEquals(count($cancel_button), 1, 'Found cancel button linking to list page.');
 
     // Try to submit a robot with a machine name of 'custom'. This is a reserved
     // keyword we've disallowed in the form.
@@ -171,7 +171,7 @@ class ConfigEntityExampleTest extends BrowserTestBase {
       '//a[contains(@class, "button-action") and contains(@data-drupal-link-system-path, :path)]',
       [':path' => $path]
     );
-    $this->assertEqual(count($button_element), 1, 'Found action button for path: ' . $path);
+    $this->assertEquals(count($button_element), 1, 'Found action button for path: ' . $path);
   }
 
 }
diff --git a/modules/content_entity_example/src/Entity/Controller/ContactListBuilder.php b/modules/content_entity_example/src/Entity/Controller/ContactListBuilder.php
index 8866b3a..49950ca 100644
--- a/modules/content_entity_example/src/Entity/Controller/ContactListBuilder.php
+++ b/modules/content_entity_example/src/Entity/Controller/ContactListBuilder.php
@@ -19,7 +19,7 @@ class ContactListBuilder extends EntityListBuilder {
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
@@ -37,11 +37,11 @@ class ContactListBuilder extends EntityListBuilder {
   /**
    * Constructs a new ContactListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, UrlGeneratorInterface $url_generator) {
diff --git a/modules/cron_example/src/Form/CronExampleForm.php b/modules/cron_example/src/Form/CronExampleForm.php
index 1b3dcd4..166acb2 100644
--- a/modules/cron_example/src/Form/CronExampleForm.php
+++ b/modules/cron_example/src/Form/CronExampleForm.php
@@ -20,52 +20,52 @@ class CronExampleForm extends ConfigFormBase {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The cron service.
    *
-   * @var \Drupal\Core\CronInterface
+   * @var CronInterface
    */
   protected $cron;
 
   /**
    * The queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queue;
 
   /**
    * The state keyvalue collection.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs new CronExampleForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\CronInterface $cron
+   * @param CronInterface $cron
    *   The cron service.
-   * @param \Drupal\Core\Queue\QueueFactory $queue
+   * @param QueueFactory $queue
    *   The queue factory.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state keyvalue collection.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountInterface $current_user, CronInterface $cron, QueueFactory $queue, StateInterface $state, TimeInterface $time) {
diff --git a/modules/cron_example/src/Plugin/QueueWorker/ReportWorkerBase.php b/modules/cron_example/src/Plugin/QueueWorker/ReportWorkerBase.php
index 0512f90..6e77ea3 100644
--- a/modules/cron_example/src/Plugin/QueueWorker/ReportWorkerBase.php
+++ b/modules/cron_example/src/Plugin/QueueWorker/ReportWorkerBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\cron_example\Plugin\QueueWorker;
 
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\Messenger\MessengerTrait;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -21,14 +22,14 @@ abstract class ReportWorkerBase extends QueueWorkerBase implements ContainerFact
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -41,9 +42,9 @@ abstract class ReportWorkerBase extends QueueWorkerBase implements ContainerFact
    *   The plugin id.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service the instance should use.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   The logger service the instance should use.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, StateInterface $state, LoggerChannelFactoryInterface $logger) {
diff --git a/modules/cron_example/tests/src/Functional/CronExampleTest.php b/modules/cron_example/tests/src/Functional/CronExampleTest.php
index 1447361..d162700 100644
--- a/modules/cron_example/tests/src/Functional/CronExampleTest.php
+++ b/modules/cron_example/tests/src/Functional/CronExampleTest.php
@@ -30,7 +30,7 @@ class CronExampleTest extends ExamplesBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create user. Search content permission granted for the search block to
     // be shown.
diff --git a/modules/dbtng_example/src/Controller/DbtngExampleController.php b/modules/dbtng_example/src/Controller/DbtngExampleController.php
index 8e90649..1a7857c 100644
--- a/modules/dbtng_example/src/Controller/DbtngExampleController.php
+++ b/modules/dbtng_example/src/Controller/DbtngExampleController.php
@@ -16,7 +16,7 @@ class DbtngExampleController extends ControllerBase {
   /**
    * The repository for our specialized queries.
    *
-   * @var \Drupal\dbtng_example\DbtngExampleRepository
+   * @var DbtngExampleRepository
    */
   protected $repository;
 
@@ -32,7 +32,7 @@ class DbtngExampleController extends ControllerBase {
   /**
    * Construct a new controller.
    *
-   * @param \Drupal\dbtng_example\DbtngExampleRepository $repository
+   * @param DbtngExampleRepository $repository
    *   The repository service.
    */
   public function __construct(DbtngExampleRepository $repository) {
diff --git a/modules/dbtng_example/src/DbtngExampleRepository.php b/modules/dbtng_example/src/DbtngExampleRepository.php
index cf7c8a3..5b2157b 100644
--- a/modules/dbtng_example/src/DbtngExampleRepository.php
+++ b/modules/dbtng_example/src/DbtngExampleRepository.php
@@ -33,18 +33,18 @@ class DbtngExampleRepository {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Construct a repository object.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The translation service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(Connection $connection, TranslationInterface $translation, MessengerInterface $messenger) {
diff --git a/modules/dbtng_example/src/Form/DbtngExampleAddForm.php b/modules/dbtng_example/src/Form/DbtngExampleAddForm.php
index 18fd77c..d7b7ef0 100644
--- a/modules/dbtng_example/src/Form/DbtngExampleAddForm.php
+++ b/modules/dbtng_example/src/Form/DbtngExampleAddForm.php
@@ -24,7 +24,7 @@ class DbtngExampleAddForm implements FormInterface, ContainerInjectionInterface
   /**
    * Our database repository service.
    *
-   * @var \Drupal\dbtng_example\DbtngExampleRepository
+   * @var DbtngExampleRepository
    */
   protected $repository;
 
@@ -33,7 +33,7 @@ class DbtngExampleAddForm implements FormInterface, ContainerInjectionInterface
    *
    * We'll need this service in order to check if the user is logged in.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
diff --git a/modules/dbtng_example/src/Form/DbtngExampleUpdateForm.php b/modules/dbtng_example/src/Form/DbtngExampleUpdateForm.php
index c05d30a..fd66508 100644
--- a/modules/dbtng_example/src/Form/DbtngExampleUpdateForm.php
+++ b/modules/dbtng_example/src/Form/DbtngExampleUpdateForm.php
@@ -17,7 +17,7 @@ class DbtngExampleUpdateForm extends FormBase {
   /**
    * Our database repository service.
    *
-   * @var \Drupal\dbtng_example\DbtngExampleRepository
+   * @var DbtngExampleRepository
    */
   protected $repository;
 
diff --git a/modules/dbtng_example/tests/src/Kernel/DbtngExampleRepositoryTest.php b/modules/dbtng_example/tests/src/Kernel/DbtngExampleRepositoryTest.php
index 152e061..f2a0fd0 100644
--- a/modules/dbtng_example/tests/src/Kernel/DbtngExampleRepositoryTest.php
+++ b/modules/dbtng_example/tests/src/Kernel/DbtngExampleRepositoryTest.php
@@ -34,7 +34,7 @@ class DbtngExampleRepositoryTest extends KernelTestBase {
    * Kernel tests do not invoke hook_schema() or hook_install(). Therefore we
    * have to do it if our tests expect them to have been run.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Install the schema we defined in hook_schema().
     $this->installSchema('dbtng_example', 'dbtng_example');
diff --git a/modules/email_example/src/Form/EmailExampleGetFormPage.php b/modules/email_example/src/Form/EmailExampleGetFormPage.php
index 30d3bc8..81703da 100644
--- a/modules/email_example/src/Form/EmailExampleGetFormPage.php
+++ b/modules/email_example/src/Form/EmailExampleGetFormPage.php
@@ -19,32 +19,32 @@ class EmailExampleGetFormPage extends FormBase {
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The email validator.
    *
-   * @var \Drupal\Component\Utility\EmailValidator
+   * @var EmailValidator
    */
   protected $emailValidator;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Constructs a new EmailExampleGetFormPage.
    *
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Component\Utility\EmailValidator $email_validator
+   * @param EmailValidator $email_validator
    *   The email validator.
    */
   public function __construct(MailManagerInterface $mail_manager, LanguageManagerInterface $language_manager, EmailValidator $email_validator) {
diff --git a/modules/events_example/events_example.services.yml b/modules/events_example/events_example.services.yml
index 8140164..ca89477 100644
--- a/modules/events_example/events_example.services.yml
+++ b/modules/events_example/events_example.services.yml
@@ -1,16 +1,6 @@
-# Subscribing to an event requires you to create a new service tagged with the
-# 'event_subscriber' tag. This tells the service container, and by proxy the
-# event dispatcher service, that the class registered here can be queried to get
-# a list of events that it would like to be notified about.
-#
-# For more on defining and tagging services see
-# https://api.drupal.org/api/drupal/core%21core.api.php/group/container/8.2.x
 services:
-  # Give your service a unique name, convention is to prefix service names with
-  # the name of the module that implements them.
   events_example_subscriber:
-    # Point to the class that will contain your implementation of
-    # \Symfony\Component\EventDispatcher\EventSubscriberInterface
     class: Drupal\events_example\EventSubscriber\EventsExampleSubscriber
     tags:
-      - {name: event_subscriber}
+      -
+        name: event_subscriber
diff --git a/modules/events_example/src/Event/IncidentReportEvent.php b/modules/events_example/src/Event/IncidentReportEvent.php
index 03dce0d..d3bcc66 100644
--- a/modules/events_example/src/Event/IncidentReportEvent.php
+++ b/modules/events_example/src/Event/IncidentReportEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\events_example\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Wraps a incident report event for event subscribers.
diff --git a/modules/events_example/src/EventSubscriber/EventsExampleSubscriber.php b/modules/events_example/src/EventSubscriber/EventsExampleSubscriber.php
index bab1f5a..797a858 100644
--- a/modules/events_example/src/EventSubscriber/EventsExampleSubscriber.php
+++ b/modules/events_example/src/EventSubscriber/EventsExampleSubscriber.php
@@ -87,7 +87,7 @@ class EventsExampleSubscriber implements EventSubscriberInterface {
    * configuration change you'll get an event object that contains the relevant
    * configuration object.
    *
-   * @param \Drupal\events_example\Event\IncidentReportEvent $event
+   * @param IncidentReportEvent $event
    *   The event object containing the incident report.
    */
   public function notifyMario(IncidentReportEvent $event) {
@@ -105,7 +105,7 @@ class EventsExampleSubscriber implements EventSubscriberInterface {
   /**
    * Let Batman know about any events involving the Joker.
    *
-   * @param \Drupal\events_example\Event\IncidentReportEvent $event
+   * @param IncidentReportEvent $event
    *   The event object containing the incident report.
    */
   public function notifyBatman(IncidentReportEvent $event) {
@@ -118,7 +118,7 @@ class EventsExampleSubscriber implements EventSubscriberInterface {
   /**
    * Handle incidents not handled by the other handlers.
    *
-   * @param \Drupal\events_example\Event\IncidentReportEvent $event
+   * @param IncidentReportEvent $event
    *   The event object containing the incident report.
    */
   public function notifyDefault(IncidentReportEvent $event) {
diff --git a/modules/events_example/src/Form/EventsExampleForm.php b/modules/events_example/src/Form/EventsExampleForm.php
index fb0759d..170ef91 100644
--- a/modules/events_example/src/Form/EventsExampleForm.php
+++ b/modules/events_example/src/Form/EventsExampleForm.php
@@ -27,14 +27,14 @@ class EventsExampleForm extends FormBase {
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new UserLoginForm.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
@@ -124,7 +124,7 @@ class EventsExampleForm extends FormBase {
     // to represent the event being dispatched. The constant serves as a
     // location for documentation of the event, and ensures your code is future
     // proofed against event name changes.
-    $this->eventDispatcher->dispatch(IncidentEvents::NEW_REPORT, $event);
+    $this->eventDispatcher->dispatch($event, IncidentEvents::NEW_REPORT);
   }
 
 }
diff --git a/modules/field_example/tests/src/Functional/FieldExampleBrowserTestBase.php b/modules/field_example/tests/src/Functional/FieldExampleBrowserTestBase.php
index a4fc78b..dab92e8 100644
--- a/modules/field_example/tests/src/Functional/FieldExampleBrowserTestBase.php
+++ b/modules/field_example/tests/src/Functional/FieldExampleBrowserTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\field_example\Functional;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Tests\examples\Functional\ExamplesBrowserTestBase;
 
@@ -28,14 +29,14 @@ abstract class FieldExampleBrowserTestBase extends ExamplesBrowserTestBase {
   /**
    * The administrator account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $administratorAccount;
 
   /**
    * The author account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $authorAccount;
 
@@ -58,7 +59,7 @@ abstract class FieldExampleBrowserTestBase extends ExamplesBrowserTestBase {
    *
    * Once installed, a content type with the desired field is created.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Install Drupal.
     parent::setUp();
 
@@ -80,7 +81,10 @@ abstract class FieldExampleBrowserTestBase extends ExamplesBrowserTestBase {
       'type' => $this->contentTypeName,
     ];
     $this->submitForm($edit, 'Save and manage fields');
-    $this->assertText((string) new FormattableMarkup('The content type @name has been added.', ['@name' => $this->contentTypeName]));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains((string) new FormattableMarkup('The content type @name has been added.', ['@name' => $this->contentTypeName]));
 
     // Reset the permission cache.
     $create_permission = 'create ' . $this->contentTypeName . ' content';
diff --git a/modules/field_permission_example/tests/src/Kernel/FieldNoteItemTest.php b/modules/field_permission_example/tests/src/Kernel/FieldNoteItemTest.php
index 397d0d2..2135d0a 100644
--- a/modules/field_permission_example/tests/src/Kernel/FieldNoteItemTest.php
+++ b/modules/field_permission_example/tests/src/Kernel/FieldNoteItemTest.php
@@ -42,7 +42,7 @@ class FieldNoteItemTest extends FieldKernelTestBase {
    * This sets up the entity_test and user types to use our example
    * field plugins.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $type_manager = $this->container->get('entity_type.manager');
 
@@ -144,13 +144,13 @@ class FieldNoteItemTest extends FieldKernelTestBase {
 
     $this->assertTrue($entity->field_fieldnote instanceof FieldItemListInterface, 'Field implements interface.');
     $this->assertTrue($entity->field_fieldnote[0] instanceof FieldItemInterface, 'Field item implements interface.');
-    $this->assertEqual($entity->field_fieldnote->value, $value);
-    $this->assertEqual($entity->field_fieldnote[0]->value, $value);
+    $this->assertEquals($entity->field_fieldnote->value, $value);
+    $this->assertEquals($entity->field_fieldnote[0]->value, $value);
 
     // Verify changing the field's value.
     $new_value = $this->randomMachineName();
     $entity->field_fieldnote->value = $new_value;
-    $this->assertEqual($entity->field_fieldnote->value, $new_value);
+    $this->assertEquals($entity->field_fieldnote->value, $new_value);
 
     // Read changed entity and assert changed values.
     $entity->save();
@@ -160,7 +160,7 @@ class FieldNoteItemTest extends FieldKernelTestBase {
         ->getStorage('entity_test')
         ->load($id);
 
-    $this->assertEqual($entity->field_fieldnote->value, $new_value);
+    $this->assertEquals($entity->field_fieldnote->value, $new_value);
 
     // Test sample item generation.
     $entity
diff --git a/modules/form_api_example/src/Form/BuildDemo.php b/modules/form_api_example/src/Form/BuildDemo.php
index 2d893fe..fa785ce 100644
--- a/modules/form_api_example/src/Form/BuildDemo.php
+++ b/modules/form_api_example/src/Form/BuildDemo.php
@@ -130,7 +130,7 @@ class BuildDemo extends FormBase {
    *
    * @param array $form
    *   Form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current state of the form.
    */
   public function ajaxSubmit(array &$form, FormStateInterface $form_state) {
@@ -147,7 +147,7 @@ class BuildDemo extends FormBase {
    *
    * @param array $form
    *   Form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current state of the form.
    */
   public function rebuildFormSubmit(array &$form, FormStateInterface $form_state) {
diff --git a/modules/form_api_example/src/Form/DemoBase.php b/modules/form_api_example/src/Form/DemoBase.php
index 7b7d70d..f9e08c4 100644
--- a/modules/form_api_example/src/Form/DemoBase.php
+++ b/modules/form_api_example/src/Form/DemoBase.php
@@ -21,7 +21,7 @@ abstract class DemoBase extends FormBase {
    *
    * @param array $form
    *   The render array of the currently built form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object describing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/modules/form_api_example/src/Form/InputDemo.php b/modules/form_api_example/src/Form/InputDemo.php
index fcb8c3a..5345f71 100644
--- a/modules/form_api_example/src/Form/InputDemo.php
+++ b/modules/form_api_example/src/Form/InputDemo.php
@@ -260,7 +260,7 @@ class InputDemo extends FormBase {
     $form['image_button'] = [
       '#type' => 'image_button',
       '#value' => 'Image button',
-      '#src' => drupal_get_path('module', 'examples') . '/images/100x30.svg',
+      '#src' => \Drupal::service('extension.list.module')->getPath('examples') . '/images/100x30.svg',
       '#description' => $this->t('image file, #type = image_button'),
     ];
 
diff --git a/modules/form_api_example/src/Form/ModalForm.php b/modules/form_api_example/src/Form/ModalForm.php
index 7fbc4c6..d1d3de9 100644
--- a/modules/form_api_example/src/Form/ModalForm.php
+++ b/modules/form_api_example/src/Form/ModalForm.php
@@ -147,10 +147,10 @@ class ModalForm extends FormBase {
    *
    * @param array $form
    *   Render array representing from.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Array of AJAX commands to execute on submit of the modal form.
    */
   public function ajaxSubmitForm(array &$form, FormStateInterface $form_state) {
diff --git a/modules/form_api_example/src/Form/MultistepForm.php b/modules/form_api_example/src/Form/MultistepForm.php
index 2c88f9e..bcadd9a 100644
--- a/modules/form_api_example/src/Form/MultistepForm.php
+++ b/modules/form_api_example/src/Form/MultistepForm.php
@@ -100,7 +100,7 @@ class MultistepForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function fapiExampleMultistepFormNextValidate(array &$form, FormStateInterface $form_state) {
@@ -117,7 +117,7 @@ class MultistepForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function fapiExampleMultistepFormNextSubmit(array &$form, FormStateInterface $form_state) {
@@ -140,7 +140,7 @@ class MultistepForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -182,7 +182,7 @@ class MultistepForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function fapiExamplePageTwoBack(array &$form, FormStateInterface $form_state) {
diff --git a/modules/form_api_example/src/Form/SimpleForm.php b/modules/form_api_example/src/Form/SimpleForm.php
index 4c99bf5..65b336e 100644
--- a/modules/form_api_example/src/Form/SimpleForm.php
+++ b/modules/form_api_example/src/Form/SimpleForm.php
@@ -23,7 +23,7 @@ class SimpleForm extends FormBase {
    *
    * @param array $form
    *   Default form array structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object containing current form state.
    *
    * @return array
@@ -81,7 +81,7 @@ class SimpleForm extends FormBase {
    *
    * @param array $form
    *   The render array of the currently built form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object describing the current state of the form.
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
@@ -99,7 +99,7 @@ class SimpleForm extends FormBase {
    *
    * @param array $form
    *   The render array of the currently built form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object describing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/modules/form_api_example/src/Plugin/Block/SimpleFormBlock.php b/modules/form_api_example/src/Plugin/Block/SimpleFormBlock.php
index dd6cc41..5b0679a 100644
--- a/modules/form_api_example/src/Plugin/Block/SimpleFormBlock.php
+++ b/modules/form_api_example/src/Plugin/Block/SimpleFormBlock.php
@@ -25,7 +25,7 @@ class SimpleFormBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * Form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
diff --git a/modules/form_api_example/tests/src/Functional/FapiExampleTest.php b/modules/form_api_example/tests/src/Functional/FapiExampleTest.php
index 2379611..07822fd 100644
--- a/modules/form_api_example/tests/src/Functional/FapiExampleTest.php
+++ b/modules/form_api_example/tests/src/Functional/FapiExampleTest.php
@@ -293,7 +293,7 @@ class FapiExampleTest extends ExamplesBrowserTestBase {
 
     // Verify that anonymous can access the ajax_add_more page.
     $this->drupalGet($ajax_addmore_url);
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Verify that there is no remove button.
     $this->assertEmpty($this->xpath($button_xpath));
 
@@ -334,7 +334,10 @@ class FapiExampleTest extends ExamplesBrowserTestBase {
 
     // Submit the form and verify the results.
     $this->submitForm([], 'Submit');
-    $this->assertText('These people are coming to the picnic: ' . $name_one . ', ' . $name_two);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('These people are coming to the picnic: ' . $name_one . ', ' . $name_two);
 
   }
 
diff --git a/modules/hooks_example/hooks_example.api.php b/modules/hooks_example/hooks_example.api.php
index e1c880c..5c0f280 100644
--- a/modules/hooks_example/hooks_example.api.php
+++ b/modules/hooks_example/hooks_example.api.php
@@ -1,10 +1,10 @@
 <?php
 
+use Drupal\node\NodeInterface;
 /**
  * @file
  * Hooks specific to the Hooks Example module.
  */
-
 /**
  * @addtogroup hooks_example
  * @{
@@ -26,7 +26,6 @@
  * @see file.api.php
  * @see node.api.php
  */
-
 /**
  * Respond to node view count being incremented.
  *
@@ -37,10 +36,10 @@
  * @param int $current_count
  *   The number of times that the current user has viewed the node during this
  *   session.
- * @param \Drupal\node\NodeInterface $node
+ * @param NodeInterface $node
  *   The node being viewed.
  */
-function hook_hooks_example_count_incremented($current_count, \Drupal\node\NodeInterface $node) {
+function hook_hooks_example_count_incremented($current_count, NodeInterface $node) {
   // If this is the first time the user has viewed this node we display a
   // message letting them know.
   if ($current_count === 1) {
diff --git a/modules/hooks_example/tests/src/Functional/HooksExampleTest.php b/modules/hooks_example/tests/src/Functional/HooksExampleTest.php
index 78b6c10..e63edcf 100644
--- a/modules/hooks_example/tests/src/Functional/HooksExampleTest.php
+++ b/modules/hooks_example/tests/src/Functional/HooksExampleTest.php
@@ -32,7 +32,7 @@ class HooksExampleTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->createContentType(['type' => 'page']);
diff --git a/modules/menu_example/src/Access/RoleAccessCheck.php b/modules/menu_example/src/Access/RoleAccessCheck.php
index 22578c0..9d2a67d 100644
--- a/modules/menu_example/src/Access/RoleAccessCheck.php
+++ b/modules/menu_example/src/Access/RoleAccessCheck.php
@@ -25,7 +25,7 @@ class RoleAccessCheck implements AccessInterface {
   /**
    * Checks access.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
    *
    * @return string
diff --git a/modules/menu_example/src/Routing/MenuExampleDynamicRoutes.php b/modules/menu_example/src/Routing/MenuExampleDynamicRoutes.php
index 3263641..337fabf 100644
--- a/modules/menu_example/src/Routing/MenuExampleDynamicRoutes.php
+++ b/modules/menu_example/src/Routing/MenuExampleDynamicRoutes.php
@@ -17,7 +17,7 @@ class MenuExampleDynamicRoutes {
   /**
    * Returns an array of route objects.
    *
-   * @return \Symfony\Component\Routing\Route[]
+   * @return Route[]
    *   An array of route objects.
    */
   public function routes() {
diff --git a/modules/menu_example/tests/src/Functional/MenuExampleTest.php b/modules/menu_example/tests/src/Functional/MenuExampleTest.php
index 862cd61..f058333 100644
--- a/modules/menu_example/tests/src/Functional/MenuExampleTest.php
+++ b/modules/menu_example/tests/src/Functional/MenuExampleTest.php
@@ -39,7 +39,7 @@ class MenuExampleTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Always call the parent setUp().
     parent::setUp();
     // Add the main menu block, as provided by the Block module.
diff --git a/modules/node_type_example/tests/src/Functional/NodeTypeExampleTest.php b/modules/node_type_example/tests/src/Functional/NodeTypeExampleTest.php
index 8998421..a212108 100644
--- a/modules/node_type_example/tests/src/Functional/NodeTypeExampleTest.php
+++ b/modules/node_type_example/tests/src/Functional/NodeTypeExampleTest.php
@@ -153,15 +153,27 @@ class NodeTypeExampleTest extends ExamplesBrowserTestBase {
     $this->drupalGet('/node/add/basic_content_type');
     $this->submitForm($edit, 'Save');
     // Verify all fields and data of created content is shown.
-    $this->assertText($title);
-    $this->assertText($body);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($title);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($body);
 
     // Create a locked_content_type content.
     $this->drupalGet('/node/add/locked_content_type');
     $this->submitForm($edit, 'Save');
     // Verify all fields and data of created content is shown.
-    $this->assertText($title);
-    $this->assertText($body);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($title);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($body);
   }
 
   /**
diff --git a/modules/page_example/src/Controller/PageExampleController.php b/modules/page_example/src/Controller/PageExampleController.php
index d74d0eb..5c91558 100644
--- a/modules/page_example/src/Controller/PageExampleController.php
+++ b/modules/page_example/src/Controller/PageExampleController.php
@@ -60,7 +60,7 @@ class PageExampleController extends ControllerBase {
    * @param string $second
    *   Another string to use, should be a number.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   If the parameters are invalid.
    */
   public function arguments($first, $second) {
diff --git a/modules/page_example/tests/src/Functional/PageExampleTest.php b/modules/page_example/tests/src/Functional/PageExampleTest.php
index de60349..6705945 100644
--- a/modules/page_example/tests/src/Functional/PageExampleTest.php
+++ b/modules/page_example/tests/src/Functional/PageExampleTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\page_example\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Tests\BrowserTestBase;
 
@@ -38,7 +39,7 @@ class PageExampleTest extends BrowserTestBase {
   /**
    * User object for our test.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
diff --git a/modules/pager_example/src/Controller/PagerExamplePage.php b/modules/pager_example/src/Controller/PagerExamplePage.php
index 7805604..181926c 100644
--- a/modules/pager_example/src/Controller/PagerExamplePage.php
+++ b/modules/pager_example/src/Controller/PagerExamplePage.php
@@ -20,23 +20,23 @@ class PagerExamplePage extends ControllerBase {
   /**
    * Entity storage for node entities.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * PagerExamplePage constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   Entity storage for node entities.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(EntityStorageInterface $node_storage, AccountInterface $current_user) {
diff --git a/modules/pager_example/tests/src/Functional/PagerExampleTest.php b/modules/pager_example/tests/src/Functional/PagerExampleTest.php
index 7c059d6..bc00470 100644
--- a/modules/pager_example/tests/src/Functional/PagerExampleTest.php
+++ b/modules/pager_example/tests/src/Functional/PagerExampleTest.php
@@ -25,7 +25,7 @@ class PagerExampleTest extends ExamplesBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Log in a user to prevent caching from affecting the results.
diff --git a/modules/plugin_type_example/src/Annotation/Sandwich.php b/modules/plugin_type_example/src/Annotation/Sandwich.php
index 29a7f65..f93a375 100644
--- a/modules/plugin_type_example/src/Annotation/Sandwich.php
+++ b/modules/plugin_type_example/src/Annotation/Sandwich.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\plugin_type_example\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -28,7 +29,7 @@ class Sandwich extends Plugin {
    * should use the Translation() construct in their annotation when declaring
    * this property.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/modules/plugin_type_example/src/Controller/PluginTypeExampleController.php b/modules/plugin_type_example/src/Controller/PluginTypeExampleController.php
index 6a13c70..3e2c8bb 100644
--- a/modules/plugin_type_example/src/Controller/PluginTypeExampleController.php
+++ b/modules/plugin_type_example/src/Controller/PluginTypeExampleController.php
@@ -16,14 +16,14 @@ class PluginTypeExampleController extends ControllerBase {
    *
    * We use this to get all of the sandwich plugins.
    *
-   * @var \Drupal\plugin_type_example\SandwichPluginManager
+   * @var SandwichPluginManager
    */
   protected $sandwichManager;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\plugin_type_example\SandwichPluginManager $sandwich_manager
+   * @param SandwichPluginManager $sandwich_manager
    *   The sandwich plugin manager service. We're injecting this service so that
    *   we can use it to access the sandwich plugins.
    */
diff --git a/modules/plugin_type_example/src/SandwichPluginManager.php b/modules/plugin_type_example/src/SandwichPluginManager.php
index 763222c..adef193 100644
--- a/modules/plugin_type_example/src/SandwichPluginManager.php
+++ b/modules/plugin_type_example/src/SandwichPluginManager.php
@@ -30,9 +30,9 @@ class SandwichPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/modules/plugin_type_example/tests/src/Functional/PluginTypeExampleTest.php b/modules/plugin_type_example/tests/src/Functional/PluginTypeExampleTest.php
index 8473c36..9eee19b 100644
--- a/modules/plugin_type_example/tests/src/Functional/PluginTypeExampleTest.php
+++ b/modules/plugin_type_example/tests/src/Functional/PluginTypeExampleTest.php
@@ -65,7 +65,7 @@ class PluginTypeExampleTest extends ExamplesBrowserTestBase {
     $ref_day->setAccessible(TRUE);
     $ref_day->setValue($meatball, 'Sun');
     // Check the special description on Sunday.
-    $this->assertEqual($meatball->description(), 'Italian style meatballs drenched in irresistible marinara sauce, served on day old bread.');
+    $this->assertEquals($meatball->description(), 'Italian style meatballs drenched in irresistible marinara sauce, served on day old bread.');
   }
 
   /**
diff --git a/modules/queue_example/src/Form/QueueExampleForm.php b/modules/queue_example/src/Form/QueueExampleForm.php
index 8ce4f80..fbb76a5 100644
--- a/modules/queue_example/src/Form/QueueExampleForm.php
+++ b/modules/queue_example/src/Form/QueueExampleForm.php
@@ -21,21 +21,21 @@ class QueueExampleForm extends FormBase {
   /**
    * The queue object.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * The database object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The CronInterface object.
    *
-   * @var \Drupal\Core\CronInterface
+   * @var CronInterface
    */
   protected $cron;
 
@@ -49,13 +49,13 @@ class QueueExampleForm extends FormBase {
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   Queue factory service to get new/existing queues for use.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection to be used.
-   * @param Drupal\Core\CronInterface $cron
+   * @param CronInterface $cron
    *   The cron service.
-   * @param Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The site settings.
    */
   public function __construct(QueueFactory $queue_factory, Connection $database, CronInterface $cron, Settings $settings) {
@@ -266,7 +266,7 @@ class QueueExampleForm extends FormBase {
    *
    * @param array $form
    *   Form definition array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public function submitShowQueue(array &$form, FormStateInterface $form_state) {
@@ -291,7 +291,7 @@ class QueueExampleForm extends FormBase {
    *
    * @param array $form
    *   Form definition array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public function submitAddQueueItem(array &$form, FormStateInterface $form_state) {
@@ -322,7 +322,7 @@ class QueueExampleForm extends FormBase {
    *
    * @param array $form
    *   Form definition array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public function submitClaimItem(array &$form, FormStateInterface $form_state) {
@@ -350,7 +350,7 @@ class QueueExampleForm extends FormBase {
    *
    * @param array $form
    *   Form definition array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public function submitClaimDeleteItem(array &$form, FormStateInterface $form_state) {
@@ -384,7 +384,7 @@ class QueueExampleForm extends FormBase {
    *
    * @param array $form
    *   Form definition array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public function submitRunCron(array &$form, FormStateInterface $form_state) {
@@ -406,7 +406,7 @@ class QueueExampleForm extends FormBase {
    *
    * @param array $form
    *   Form definition array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    */
   public function submitDeleteQueue(array &$form, FormStateInterface $form_state) {
diff --git a/modules/queue_example/tests/src/Functional/QueueExampleTest.php b/modules/queue_example/tests/src/Functional/QueueExampleTest.php
index 25a34a1..9ab6da8 100644
--- a/modules/queue_example/tests/src/Functional/QueueExampleTest.php
+++ b/modules/queue_example/tests/src/Functional/QueueExampleTest.php
@@ -43,17 +43,23 @@ class QueueExampleTest extends BrowserTestBase {
     for ($i = 1; $i <= 5; $i++) {
       $edit = ['queue_name' => 'queue_example_first_queue', 'string_to_add' => 'boogie' . $i];
       $this->submitForm($edit, 'Insert into queue');
-      $this->assertText((string) new FormattableMarkup('There are now @number items in the queue', ['@number' => $i]));
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains((string) new FormattableMarkup('There are now @number items in the queue', ['@number' => $i]));
     }
     // Claim each of the 5 items with a claim time of 0 seconds.
     for ($i = 1; $i <= 5; $i++) {
       $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
       $this->submitForm($edit, 'Claim the next item from the queue');
-      $this->assertPattern((string) new FormattableMarkup('%Claimed item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
+      $this->assertSession()->responseMatches((string) new FormattableMarkup('%Claimed item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
     }
     $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
     $this->submitForm($edit, 'Claim the next item from the queue');
-    $this->assertText('There were no items in the queue available to claim');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('There were no items in the queue available to claim');
 
     // Sleep a second so we can make sure that the timeouts actually time out.
     // Local systems work fine with this but apparently the PIFR server is so
@@ -67,12 +73,15 @@ class QueueExampleTest extends BrowserTestBase {
     for ($i = 1; $i <= 5; $i++) {
       $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
       $this->submitForm($edit, 'Claim the next item and delete it');
-      $this->assertPattern((string) new FormattableMarkup('%Claimed and deleted item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
+      $this->assertSession()->responseMatches((string) new FormattableMarkup('%Claimed and deleted item id=.*string=@string for 0 seconds.%', ['@string' => 'boogie' . $i]));
     }
     // Verify that nothing is left to claim.
     $edit = ['queue_name' => 'queue_example_first_queue', 'claim_time' => 0];
     $this->submitForm($edit, 'Claim the next item from the queue');
-    $this->assertText('There were no items in the queue available to claim');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('There were no items in the queue available to claim');
   }
 
 }
diff --git a/modules/render_example/src/Controller/RenderExampleController.php b/modules/render_example/src/Controller/RenderExampleController.php
index ba568fb..078369d 100644
--- a/modules/render_example/src/Controller/RenderExampleController.php
+++ b/modules/render_example/src/Controller/RenderExampleController.php
@@ -28,7 +28,7 @@ class RenderExampleController extends ControllerBase implements TrustedCallbackI
   /**
    * Constructs a new BlockController instance.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(AccountInterface $current_user) {
diff --git a/modules/render_example/src/Form/RenderExampleDemoForm.php b/modules/render_example/src/Form/RenderExampleDemoForm.php
index a180ca7..1ca76ca 100644
--- a/modules/render_example/src/Form/RenderExampleDemoForm.php
+++ b/modules/render_example/src/Form/RenderExampleDemoForm.php
@@ -18,7 +18,7 @@ class RenderExampleDemoForm extends ConfigFormBase {
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
diff --git a/modules/rest_example/src/Controller/RestExampleClientController.php b/modules/rest_example/src/Controller/RestExampleClientController.php
index 1955424..d91009f 100644
--- a/modules/rest_example/src/Controller/RestExampleClientController.php
+++ b/modules/rest_example/src/Controller/RestExampleClientController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_example\Controller;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Link;
 use Drupal\rest_example\RestExampleClientCalls;
@@ -17,14 +18,14 @@ class RestExampleClientController extends ControllerBase {
   /**
    * RestExampleClientCalls object.
    *
-   * @var \Drupal\rest_example\RestExampleClientCalls
+   * @var RestExampleClientCalls
    */
   private $restExampleClientCalls;
 
   /**
    * RestExampleClientController constructor.
    *
-   * @param \Drupal\rest_example\RestExampleClientCalls $rest_example_client_calls
+   * @param RestExampleClientCalls $rest_example_client_calls
    *   RestExampleClientCalls service.
    */
   public function __construct(RestExampleClientCalls $rest_example_client_calls) {
@@ -47,7 +48,7 @@ class RestExampleClientController extends ControllerBase {
    * and builds the list from the response of that.
    *
    * @throws \RuntimeException
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function indexAction() {
 
diff --git a/modules/rest_example/src/Form/RestExampleClientDelete.php b/modules/rest_example/src/Form/RestExampleClientDelete.php
index 31a4b31..f9a6567 100644
--- a/modules/rest_example/src/Form/RestExampleClientDelete.php
+++ b/modules/rest_example/src/Form/RestExampleClientDelete.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_example\Form;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Url;
@@ -17,14 +18,14 @@ class RestExampleClientDelete extends ConfirmFormBase {
   /**
    * RestExampleClientCalls object.
    *
-   * @var \Drupal\rest_example\RestExampleClientCalls
+   * @var RestExampleClientCalls
    */
   private $restExampleClientCalls;
 
   /**
    * RestExampleClientController constructor.
    *
-   * @param \Drupal\rest_example\RestExampleClientCalls $rest_example_client_calls
+   * @param RestExampleClientCalls $rest_example_client_calls
    *   RestExampleClientCalls service.
    */
   public function __construct(RestExampleClientCalls $rest_example_client_calls) {
@@ -91,7 +92,7 @@ class RestExampleClientDelete extends ConfirmFormBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $node_id = $form_state->get('node_id');
diff --git a/modules/rest_example/src/Form/RestExampleClientEdit.php b/modules/rest_example/src/Form/RestExampleClientEdit.php
index 572c9d6..087ea7b 100644
--- a/modules/rest_example/src/Form/RestExampleClientEdit.php
+++ b/modules/rest_example/src/Form/RestExampleClientEdit.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_example\Form;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\rest_example\RestExampleClientCalls;
@@ -18,7 +19,7 @@ class RestExampleClientEdit extends FormBase {
   /**
    * RestExampleClientCalls service.
    *
-   * @var \Drupal\rest_example\RestExampleClientCalls
+   * @var RestExampleClientCalls
    */
   private $client;
 
@@ -58,7 +59,7 @@ class RestExampleClientEdit extends FormBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function buildForm(array $form, FormStateInterface $form_state, $id = NULL) {
 
@@ -107,7 +108,7 @@ class RestExampleClientEdit extends FormBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $node_id = $form_state->get('node_id');
diff --git a/modules/rest_example/src/RestExampleClientCalls.php b/modules/rest_example/src/RestExampleClientCalls.php
index 3df1a24..b4e962b 100644
--- a/modules/rest_example/src/RestExampleClientCalls.php
+++ b/modules/rest_example/src/RestExampleClientCalls.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_example;
 
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use GuzzleHttp\ClientInterface;
@@ -17,7 +18,7 @@ class RestExampleClientCalls {
   /**
    * The client used to send HTTP requests.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
@@ -56,9 +57,9 @@ class RestExampleClientCalls {
   /**
    * The constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   The HTTP client.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The Config Factory.
    */
   public function __construct(ClientInterface $client, ConfigFactoryInterface $config_factory) {
@@ -89,7 +90,7 @@ class RestExampleClientCalls {
    *   JSON formatted string with the nodes from the remote server.
    *
    * @throws \RuntimeException
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function index($node_id = NULL) {
 
@@ -118,11 +119,11 @@ class RestExampleClientCalls {
    * @param array $node
    *   Contains the data of the node we want to create.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A HTTP response.
    *
    * @throws \InvalidArgumentException
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function create(array $node) {
 
@@ -166,11 +167,11 @@ class RestExampleClientCalls {
    * @param array $node
    *   Contains the data of the node we want to create.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A HTTP response.
    *
    * @throws \InvalidArgumentException
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function update(array $node) {
     if (empty($this->remoteUrl)) {
@@ -208,11 +209,11 @@ class RestExampleClientCalls {
    * @param array $node
    *   Contains the data of the node we want to create.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   An HTTP response.
    *
    * @throws \InvalidArgumentException
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function delete(array $node) {
 
diff --git a/modules/rest_example/tests/src/Functional/RestExampleActionTest.php b/modules/rest_example/tests/src/Functional/RestExampleActionTest.php
index ab074ca..1e7c428 100644
--- a/modules/rest_example/tests/src/Functional/RestExampleActionTest.php
+++ b/modules/rest_example/tests/src/Functional/RestExampleActionTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\rest_example\Funtional;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -30,9 +32,9 @@ class RestExampleActionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setup();
 
     global $base_url;
@@ -53,7 +55,7 @@ class RestExampleActionTest extends BrowserTestBase {
   /**
    * Test that we access the client side View.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testClientNode() {
 
@@ -64,7 +66,7 @@ class RestExampleActionTest extends BrowserTestBase {
   /**
    * Test that we can access the server side View.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testServerView() {
     $this->drupalGet('rest/node');
diff --git a/modules/rest_example/tests/src/Functional/RestExampleMenuTest.php b/modules/rest_example/tests/src/Functional/RestExampleMenuTest.php
index d03635a..9c3e047 100644
--- a/modules/rest_example/tests/src/Functional/RestExampleMenuTest.php
+++ b/modules/rest_example/tests/src/Functional/RestExampleMenuTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\rest_example\Funtional;
 
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -32,7 +33,7 @@ class RestExampleMenuTest extends BrowserTestBase {
   /**
    * Test for a link to the rest example in the Tools menu.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testRestExampleLink() {
     $this->drupalGet('');
@@ -43,7 +44,7 @@ class RestExampleMenuTest extends BrowserTestBase {
   /**
    * Tests rest_example menus.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testRestExampleMenu() {
     $this->drupalGet('examples/rest-client-actions');
diff --git a/modules/rest_example/tests/src/Functional/RestExampleSettingsTest.php b/modules/rest_example/tests/src/Functional/RestExampleSettingsTest.php
index c51e893..2487fdf 100644
--- a/modules/rest_example/tests/src/Functional/RestExampleSettingsTest.php
+++ b/modules/rest_example/tests/src/Functional/RestExampleSettingsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\rest_example\Funtional;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -30,7 +31,7 @@ class RestExampleSettingsTest extends BrowserTestBase {
   /**
    * Test that the form can be submitted.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function testRestExampleSettings() {
     global $base_url;
@@ -48,7 +49,10 @@ class RestExampleSettingsTest extends BrowserTestBase {
 
     $this->drupalGet(base_path() . 'examples/rest-client-settings');
     $this->submitForm($edit, t('Save configuration'));
-    $this->assertText('The configuration options have been saved.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $config_factory = \Drupal::configFactory();
 
diff --git a/modules/session_example/src/Controller/SessionExampleController.php b/modules/session_example/src/Controller/SessionExampleController.php
index d1f698c..948dcd3 100644
--- a/modules/session_example/src/Controller/SessionExampleController.php
+++ b/modules/session_example/src/Controller/SessionExampleController.php
@@ -18,7 +18,7 @@ class SessionExampleController extends ControllerBase {
    * By default, controller methods receive a Request object as a parameter, so
    * we can use one here.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return string
diff --git a/modules/session_example/src/Form/SessionExampleForm.php b/modules/session_example/src/Form/SessionExampleForm.php
index 527decb..feb3e63 100644
--- a/modules/session_example/src/Form/SessionExampleForm.php
+++ b/modules/session_example/src/Form/SessionExampleForm.php
@@ -28,23 +28,23 @@ class SessionExampleForm extends FormBase {
    * We will use this to store information that the user submits, so that it
    * persists across requests.
    *
-   * @var \Symfony\Component\HttpFoundation\Session\SessionInterface
+   * @var SessionInterface
    */
   protected $session;
 
   /**
    * The cache tag invalidator service.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagInvalidator;
 
   /**
    * Constructs a new SessionExampleForm object.
    *
-   * @param \Symfony\Component\HttpFoundation\Session\SessionInterface $session
+   * @param SessionInterface $session
    *   The session object.
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $invalidator
+   * @param CacheTagsInvalidatorInterface $invalidator
    *   The cache tag invalidator service.
    */
   public function __construct(SessionInterface $session, CacheTagsInvalidatorInterface $invalidator) {
diff --git a/modules/session_example/tests/src/Functional/SessionExampleTest.php b/modules/session_example/tests/src/Functional/SessionExampleTest.php
index 4068960..0b2c037 100644
--- a/modules/session_example/tests/src/Functional/SessionExampleTest.php
+++ b/modules/session_example/tests/src/Functional/SessionExampleTest.php
@@ -28,7 +28,7 @@ class SessionExampleTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Place our blocks.
     $this->drupalPlaceBlock('local_tasks_block', ['region' => 'content']);
diff --git a/modules/stream_wrapper_example/src/SessionHelper.php b/modules/stream_wrapper_example/src/SessionHelper.php
index 0a83b82..ce3ae56 100644
--- a/modules/stream_wrapper_example/src/SessionHelper.php
+++ b/modules/stream_wrapper_example/src/SessionHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stream_wrapper_example;
 
+use Symfony\Component\HttpFoundation\Session\SessionInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
 
 /**
@@ -17,7 +18,7 @@ class SessionHelper {
   /**
    * Representation of the current HTTP request.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
@@ -31,7 +32,7 @@ class SessionHelper {
   /**
    * Construct our helper object.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   An object used to read data from the current HTTP request.
    */
   public function __construct(RequestStack $request_stack) {
@@ -42,7 +43,7 @@ class SessionHelper {
   /**
    * Get a fresh session object.
    *
-   * @return \Symfony\Component\HttpFoundation\Session\SessionInterface
+   * @return SessionInterface
    *   A session object.
    */
   protected function getSession() {
diff --git a/modules/stream_wrapper_example/src/StreamWrapper/SessionStreamWrapper.php b/modules/stream_wrapper_example/src/StreamWrapper/SessionStreamWrapper.php
index 2652603..91a3746 100644
--- a/modules/stream_wrapper_example/src/StreamWrapper/SessionStreamWrapper.php
+++ b/modules/stream_wrapper_example/src/StreamWrapper/SessionStreamWrapper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stream_wrapper_example\StreamWrapper;
 
+use Drupal\stream_wrapper_example\SessionHelper;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\StreamWrapper\StreamWrapperInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -81,7 +82,7 @@ class SessionStreamWrapper implements StreamWrapperInterface {
   /**
    * The session helper service.
    *
-   * @var \Drupal\stream_wrapper_example\SessionHelper
+   * @var SessionHelper
    */
   protected $sessionHelper;
 
diff --git a/modules/stream_wrapper_example/tests/src/Kernel/StreamWrapperTest.php b/modules/stream_wrapper_example/tests/src/Kernel/StreamWrapperTest.php
index 0d92546..5d8b6a2 100644
--- a/modules/stream_wrapper_example/tests/src/Kernel/StreamWrapperTest.php
+++ b/modules/stream_wrapper_example/tests/src/Kernel/StreamWrapperTest.php
@@ -34,7 +34,7 @@ class StreamWrapperTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // We use a mock session here so that our session-based stream wrapper is
     // able to operate. Kernel tests don't normally have a logged-in user, so
@@ -60,7 +60,7 @@ class StreamWrapperTest extends KernelTestBase {
 
     $uri = 'session://drupal.txt';
 
-    $this->assertFileNotExists($uri, "File $uri should not exist yet.");
+    $this->assertFileDoesNotExist($uri, "File $uri should not exist yet.");
     $handle = fopen($uri, 'wb');
     $this->assertNotEmpty($handle, "Handle for $uri should be non-empty.");
     $buffer = "Ain't seen nothin' yet!\n";
@@ -76,7 +76,7 @@ class StreamWrapperTest extends KernelTestBase {
     $result = fclose($handle);
     $this->assertNotFalse($result, "Closed $uri.");
     $this->assertFileExists($uri, "File $uri should now exist.");
-    $this->assertDirectoryNotExists($uri, "$uri is not a directory.");
+    $this->assertDirectoryDoesNotExist($uri, "$uri is not a directory.");
     $this->assertTrue(is_file($uri), "$uri is a file.");
 
     $contents = file_get_contents($uri);
@@ -97,7 +97,7 @@ class StreamWrapperTest extends KernelTestBase {
 
     $dir = dirname($dir_uri);
 
-    $this->assertFileNotExists($dir, "The outer dir $dir should not exist yet.");
+    $this->assertFileDoesNotExist($dir, "The outer dir $dir should not exist yet.");
     // We don't care about mode, since we don't support it.
     $worked = mkdir($dir);
     $this->assertDirectoryExists($dir, "Directory $dir was created.");
@@ -121,7 +121,7 @@ class StreamWrapperTest extends KernelTestBase {
     $this->assertSame($content, $got_back, 'Data in subdir made round trip.');
     $worked = unlink($file_in_sub);
     $this->assertTrue($worked, 'Deleted file in subdir.');
-    $this->assertFileNotExists($file_in_sub, 'File in subdir should not exist.');
+    $this->assertFileDoesNotExist($file_in_sub, 'File in subdir should not exist.');
   }
 
   /**
diff --git a/modules/stream_wrapper_example/tests/src/Traits/MockSessionTrait.php b/modules/stream_wrapper_example/tests/src/Traits/MockSessionTrait.php
index d063697..cd1143e 100644
--- a/modules/stream_wrapper_example/tests/src/Traits/MockSessionTrait.php
+++ b/modules/stream_wrapper_example/tests/src/Traits/MockSessionTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\stream_wrapper_example\Traits;
 
+use Prophecy\Prophecy\ProphecyInterface;
 use Drupal\stream_wrapper_example\SessionHelper;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Symfony\Component\HttpFoundation\Request;
@@ -23,14 +24,14 @@ trait MockSessionTrait {
   /**
    * A representation of the HTTP request.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack|\Prophecy\Prophecy\ProphecyInterface
+   * @var RequestStack|ProphecyInterface
    */
   protected $requestStack;
 
   /**
    * Create a mock session object.
    *
-   * @return \Symfony\Component\HttpFoundation\RequestStack|\Prophecy\Prophecy\ProphecyInterface
+   * @return RequestStack|ProphecyInterface
    *   A test double, or mock, of a RequestStack object
    *   that can be used to return a mock Session object.
    */
diff --git a/modules/stream_wrapper_example/tests/src/Unit/SessionHelperTest.php b/modules/stream_wrapper_example/tests/src/Unit/SessionHelperTest.php
index bc711b5..9218fce 100644
--- a/modules/stream_wrapper_example/tests/src/Unit/SessionHelperTest.php
+++ b/modules/stream_wrapper_example/tests/src/Unit/SessionHelperTest.php
@@ -32,7 +32,7 @@ class SessionHelperTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Mock the session service.
diff --git a/modules/tabledrag_example/src/Form/TableDragExampleNestedForm.php b/modules/tabledrag_example/src/Form/TableDragExampleNestedForm.php
index 0399f77..94f92bb 100644
--- a/modules/tabledrag_example/src/Form/TableDragExampleNestedForm.php
+++ b/modules/tabledrag_example/src/Form/TableDragExampleNestedForm.php
@@ -18,14 +18,14 @@ class TableDragExampleNestedForm extends FormBase {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $render;
 
@@ -42,9 +42,9 @@ class TableDragExampleNestedForm extends FormBase {
   /**
    * Construct a form.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
-   * @param \Drupal\Core\Render\RendererInterface $render
+   * @param RendererInterface $render
    *   The renderer.
    */
   public function __construct(Connection $database, RendererInterface $render) {
@@ -70,7 +70,7 @@ class TableDragExampleNestedForm extends FormBase {
    *
    * @param array $form
    *   Render array representing from.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    *
    * @return array
@@ -197,7 +197,7 @@ class TableDragExampleNestedForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancel(array &$form, FormStateInterface $form_state) {
@@ -213,7 +213,7 @@ class TableDragExampleNestedForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/modules/tabledrag_example/src/Form/TableDragExampleResetForm.php b/modules/tabledrag_example/src/Form/TableDragExampleResetForm.php
index ec84b5f..71799a8 100644
--- a/modules/tabledrag_example/src/Form/TableDragExampleResetForm.php
+++ b/modules/tabledrag_example/src/Form/TableDragExampleResetForm.php
@@ -19,7 +19,7 @@ class TableDragExampleResetForm extends ConfirmFormBase {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -33,7 +33,7 @@ class TableDragExampleResetForm extends ConfirmFormBase {
   /**
    * Construct a form.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(Connection $database) {
diff --git a/modules/tabledrag_example/src/Form/TableDragExampleRootLeafForm.php b/modules/tabledrag_example/src/Form/TableDragExampleRootLeafForm.php
index 1763589..809ddb8 100644
--- a/modules/tabledrag_example/src/Form/TableDragExampleRootLeafForm.php
+++ b/modules/tabledrag_example/src/Form/TableDragExampleRootLeafForm.php
@@ -23,14 +23,14 @@ class TableDragExampleRootLeafForm extends FormBase {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $render;
 
@@ -47,9 +47,9 @@ class TableDragExampleRootLeafForm extends FormBase {
   /**
    * Construct a form.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
-   * @param \Drupal\Core\Render\RendererInterface $render
+   * @param RendererInterface $render
    *   The renderer.
    */
   public function __construct(Connection $database, RendererInterface $render) {
@@ -75,7 +75,7 @@ class TableDragExampleRootLeafForm extends FormBase {
    *
    * @param array $form
    *   Render array representing from.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    *
    * @return array
@@ -231,7 +231,7 @@ class TableDragExampleRootLeafForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancel(array &$form, FormStateInterface $form_state) {
@@ -247,7 +247,7 @@ class TableDragExampleRootLeafForm extends FormBase {
    *
    * @param array $form
    *   Render array representing from.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/modules/tabledrag_example/src/Form/TableDragExampleSimpleForm.php b/modules/tabledrag_example/src/Form/TableDragExampleSimpleForm.php
index ffbba7a..1c074a6 100644
--- a/modules/tabledrag_example/src/Form/TableDragExampleSimpleForm.php
+++ b/modules/tabledrag_example/src/Form/TableDragExampleSimpleForm.php
@@ -17,7 +17,7 @@ class TableDragExampleSimpleForm extends FormBase {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -31,7 +31,7 @@ class TableDragExampleSimpleForm extends FormBase {
   /**
    * Construct a form.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(Connection $database) {
@@ -50,7 +50,7 @@ class TableDragExampleSimpleForm extends FormBase {
    *
    * @param array $form
    *   Render array representing from.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    *
    * @return array
@@ -147,7 +147,7 @@ class TableDragExampleSimpleForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancel(array &$form, FormStateInterface $form_state) {
@@ -159,7 +159,7 @@ class TableDragExampleSimpleForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/modules/tabledrag_example/tabledrag_example.install b/modules/tabledrag_example/tabledrag_example.install
index b69be67..4a0c5fa 100644
--- a/modules/tabledrag_example/tabledrag_example.install
+++ b/modules/tabledrag_example/tabledrag_example.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Database\Connection;
 /**
  * @file
  * Install and uninstall functions for the tabledrag example module.
@@ -80,7 +81,7 @@ function tabledrag_example_schema() {
  * @ingroup tabledrag_example
  */
 function tabledrag_example_install() {
-  /** @var \Drupal\Core\Database\Connection $connection */
+  /** @var Connection $connection */
   $connection = \Drupal::database();
   $rows = Fixtures::getSampleItems();
   foreach ($rows as $row) {
diff --git a/modules/tablesort_example/src/Controller/TableSortExampleController.php b/modules/tablesort_example/src/Controller/TableSortExampleController.php
index e2d7d25..385a65e 100644
--- a/modules/tablesort_example/src/Controller/TableSortExampleController.php
+++ b/modules/tablesort_example/src/Controller/TableSortExampleController.php
@@ -14,7 +14,7 @@ class TableSortExampleController extends ControllerBase {
   /**
    * The Database Connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -32,7 +32,7 @@ class TableSortExampleController extends ControllerBase {
   /**
    * TableSortExampleController constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection.
    */
   public function __construct(Connection $database) {
diff --git a/modules/testing_example/src/Controller/ContrivedController.php b/modules/testing_example/src/Controller/ContrivedController.php
index 6538f88..9239478 100644
--- a/modules/testing_example/src/Controller/ContrivedController.php
+++ b/modules/testing_example/src/Controller/ContrivedController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\testing_example\Controller;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\StringTranslation\TranslationInterface;
@@ -26,7 +27,7 @@ class ContrivedController implements ContainerInjectionInterface {
   /**
    * Construct a new controller.
    *
-   * @param Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The translation service.
    */
   public function __construct(TranslationInterface $translation) {
@@ -58,7 +59,7 @@ class ContrivedController implements ContainerInjectionInterface {
    * @param int $second
    *   Second parameter.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The translated message.
    */
   protected function handCount($first, $second) {
diff --git a/modules/testing_example/src/Controller/TestingExampleController.php b/modules/testing_example/src/Controller/TestingExampleController.php
index 5620d56..07a3f52 100644
--- a/modules/testing_example/src/Controller/TestingExampleController.php
+++ b/modules/testing_example/src/Controller/TestingExampleController.php
@@ -30,7 +30,7 @@ class TestingExampleController {
    *   A render array.
    */
   public function simpletestDescription() {
-    $template_file = drupal_get_path('module', 'testing_example') . '/templates/simpletest.description.html.twig';
+    $template_file = \Drupal::service('extension.list.module')->getPath('testing_example') . '/templates/simpletest.description.html.twig';
     $build = [
       'description' => [
         '#type' => 'inline_template',
diff --git a/modules/testing_example/tests/src/Functional/ExampleFunctionalTest.php b/modules/testing_example/tests/src/Functional/ExampleFunctionalTest.php
index 3629d95..1331226 100644
--- a/modules/testing_example/tests/src/Functional/ExampleFunctionalTest.php
+++ b/modules/testing_example/tests/src/Functional/ExampleFunctionalTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\testing_example\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\Tests\WebAssert;
+use Drupal\node\NodeInterface;
 use Drupal\Tests\examples\Functional\ExamplesBrowserTestBase;
 
 /**
@@ -32,14 +35,14 @@ class ExampleFunctionalTest extends ExamplesBrowserTestBase {
   /**
    * Fixture user with administrative powers.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * Fixture authenticated user with no permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $authUser;
 
@@ -49,7 +52,7 @@ class ExampleFunctionalTest extends ExamplesBrowserTestBase {
    * The setUp() method is run before every other test method, so commonalities
    * should go here.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create users.
@@ -80,7 +83,7 @@ class ExampleFunctionalTest extends ExamplesBrowserTestBase {
     // For many assertions, we need a WebAssert object. This object gives us
     // assertion types for the HTTP requests we make, such as content and the
     // HTTP status code.
-    /** @var \Drupal\Tests\WebAssert $assert */
+    /** @var WebAssert $assert */
     $assert = $this->assertSession();
 
     // Get the page that lets us add new content.
@@ -106,7 +109,7 @@ class ExampleFunctionalTest extends ExamplesBrowserTestBase {
 
     // We can search for the node by its title. Since the node object can also
     // tell us its URL, we can just feed that information into drupalGet().
-    /** @var \Drupal\node\NodeInterface $createdNode */
+    /** @var NodeInterface $createdNode */
     $createdNode = $this->drupalGetNodeByTitle($nodeTitle);
     $url = $createdNode->toUrl();
     $this->drupalGet($url);
diff --git a/modules/testing_example/tests/src/Functional/FrontPageLinkDependenciesTest.php b/modules/testing_example/tests/src/Functional/FrontPageLinkDependenciesTest.php
index f4fea44..abaf8bd 100644
--- a/modules/testing_example/tests/src/Functional/FrontPageLinkDependenciesTest.php
+++ b/modules/testing_example/tests/src/Functional/FrontPageLinkDependenciesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\testing_example\Functional;
 
+use Drupal\node\Entity\NodeType;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -35,14 +36,14 @@ class FrontPageLinkDependenciesTest extends BrowserTestBase {
   /**
    * Our node type.
    *
-   * @var \Drupal\node\Entity\NodeType
+   * @var NodeType
    */
   protected $contentType;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     // Always call the parent setUp().
     parent::setUp();
     // Add the Tools menu block, as provided by the Block module.
diff --git a/modules/testing_example/tests/src/Functional/TestingExampleMenuTest.php b/modules/testing_example/tests/src/Functional/TestingExampleMenuTest.php
index 1727c3a..8a74d89 100644
--- a/modules/testing_example/tests/src/Functional/TestingExampleMenuTest.php
+++ b/modules/testing_example/tests/src/Functional/TestingExampleMenuTest.php
@@ -45,10 +45,10 @@ class TestingExampleMenuTest extends BrowserTestBase {
   public function testTestingNavigation() {
     foreach (['' => '/examples/testing-example'] as $page => $path) {
       $this->drupalGet($page);
-      $this->assertLinkByHref($path);
+      $this->assertSession()->linkByHrefExists($path);
     }
     $this->drupalGet('/examples/testing-example');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
diff --git a/modules/testing_example/tests/src/Kernel/ExampleFixtureManagementTest.php b/modules/testing_example/tests/src/Kernel/ExampleFixtureManagementTest.php
index 1472424..6d6388a 100644
--- a/modules/testing_example/tests/src/Kernel/ExampleFixtureManagementTest.php
+++ b/modules/testing_example/tests/src/Kernel/ExampleFixtureManagementTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\testing_example\Kernel;
 
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\node\Traits\NodeCreationTrait;
 use Drupal\Tests\user\Traits\UserCreationTrait;
@@ -43,7 +45,7 @@ class ExampleFixtureManagementTest extends KernelTestBase {
   /**
    * An 'owner' user object.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $owner;
 
@@ -58,7 +60,7 @@ class ExampleFixtureManagementTest extends KernelTestBase {
    * In a Kernel test, setUp() can be responsible for creating any schema or
    * database configuration which must exist for the test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Since kernel tests do not install modules, we have to install whatever
@@ -94,7 +96,7 @@ class ExampleFixtureManagementTest extends KernelTestBase {
     // translated with t().
     $nodeTitle = 'Test Node!';
 
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $this->createNode([
       'title' => $nodeTitle,
       'type' => 'page',
diff --git a/modules/testing_example/tests/src/Unit/Controller/ContrivedControllerTest.php b/modules/testing_example/tests/src/Unit/Controller/ContrivedControllerTest.php
index abcd1b0..eb0a01e 100644
--- a/modules/testing_example/tests/src/Unit/Controller/ContrivedControllerTest.php
+++ b/modules/testing_example/tests/src/Unit/Controller/ContrivedControllerTest.php
@@ -27,9 +27,7 @@ class ContrivedControllerTest extends UnitTestCase {
    * @dataProvider provideTestAdd
    */
   public function testAdd($expected, $first, $second) {
-    $controller = $this->getMockBuilder(ContrivedController::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $controller = $this->createMock(ContrivedController::class);
     $ref_add = new \ReflectionMethod($controller, 'add');
     $ref_add->setAccessible(TRUE);
     $this->assertEquals($expected, $ref_add->invokeArgs($controller, [$first, $second]));
diff --git a/modules/theming_example/tests/src/Functional/ThemingExampleTest.php b/modules/theming_example/tests/src/Functional/ThemingExampleTest.php
index 1703c31..bbd43c1 100644
--- a/modules/theming_example/tests/src/Functional/ThemingExampleTest.php
+++ b/modules/theming_example/tests/src/Functional/ThemingExampleTest.php
@@ -41,9 +41,9 @@ class ThemingExampleTest extends ExamplesBrowserTestBase {
     // Check that the main page has been themed (first line with <b>) and has
     // content.
     $this->drupalGet('/examples/theming_example');
-    $this->assertRaw('Some examples of pages and forms that are run through theme functions.</h1>');
-    $this->assertRaw('examples/theming_example/form_select">Simple form 1</a>');
-    $this->assertRaw('examples/theming_example/form_text">Simple form 2</a>');
+    $this->assertSession()->responseContains('Some examples of pages and forms that are run through theme functions.</h1>');
+    $this->assertSession()->responseContains('examples/theming_example/form_select">Simple form 1</a>');
+    $this->assertSession()->responseContains('examples/theming_example/form_text">Simple form 2</a>');
 
     // Visit the list demonstration page and check that css gets loaded
     // and do some spot checks on how the two lists were themed.
@@ -58,16 +58,19 @@ class ThemingExampleTest extends ExamplesBrowserTestBase {
     // Visit the select form page to do spot checks.
     $this->drupalGet('/examples/theming_example/form_select');
     // Choice element title should be output separately, as h3 header.
-    $this->assertRaw('<h3 data-drupal-selector="edit-title">Choose which ordering you want</h3>');
+    $this->assertSession()->responseContains('<h3 data-drupal-selector="edit-title">Choose which ordering you want</h3>');
     // Choice element should be wrapped with <strong> tag.
-    $this->assertRaw('<strong>Choose which ordering you want</strong>');
+    $this->assertSession()->responseContains('<strong>Choose which ordering you want</strong>');
     // Form elements should be wrapped with container-inline div.
     $this->assertSession()->responseMatches('/<div class="container-inline choice-wrapper"><div class="[a-zA-Z- ]* form-item-choice/');
     $this->assertSession()->responseNotMatches('/<link rel="stylesheet".*theming_example.css/');
 
     // Visit the text form page and do spot checks.
     $this->drupalGet('/examples/theming_example/form_text');
-    $this->assertText('Please input something!');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Please input something!');
   }
 
 }
diff --git a/tests/src/Functional/ExamplesBrowserTestBase.php b/tests/src/Functional/ExamplesBrowserTestBase.php
index 70c599d..85f0ce6 100644
--- a/tests/src/Functional/ExamplesBrowserTestBase.php
+++ b/tests/src/Functional/ExamplesBrowserTestBase.php
@@ -22,7 +22,7 @@ abstract class ExamplesBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Add the system menu blocks to appropriate regions.
     $this->setupExamplesMenus();
