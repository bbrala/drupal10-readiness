diff --git a/simple_mega_menu.page.inc b/simple_mega_menu.page.inc
index d143f88..70c8ee7 100644
--- a/simple_mega_menu.page.inc
+++ b/simple_mega_menu.page.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\simple_megamenu\Entity\SimpleMegaMenu;
 /**
  * @file
  * Contains simple_mega_menu.page.inc.
@@ -21,7 +22,7 @@ use Drupal\Core\Render\Element;
  */
 function template_preprocess_simple_mega_menu(array &$variables) {
   // Fetch SimpleMegaMenu Entity Object.
-  /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenu $simple_mega_menu */
+  /** @var SimpleMegaMenu $simple_mega_menu */
   $simple_mega_menu = $variables['elements']['#simple_mega_menu'];
 
   $variables['view_mode'] = $variables['elements']['#view_mode'];
diff --git a/simple_megamenu.module b/simple_megamenu.module
index 55f9290..0f5ee89 100644
--- a/simple_megamenu.module
+++ b/simple_megamenu.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\simple_megamenu\SimpleMegaMenuHelperInterface;
+use Drupal\Core\Menu\MenuLinkDefault;
 /**
  * @file
  * Contains simple_megamenu.module.
@@ -73,7 +75,7 @@ function simple_megamenu_preprocess_block(&$variables) {
   // default #theme menu, to be able to add suggestions in the good order.
   if (isset($variables['content']['#menu_name'])) {
     $menu_name = $variables['content']['#menu_name'];
-    /** @var \Drupal\simple_megamenu\SimpleMegaMenuHelperInterface $simple_megamenu_helper */
+    /** @var SimpleMegaMenuHelperInterface $simple_megamenu_helper */
     $simple_megamenu_helper = \Drupal::service('simple_megamenu.helper');
     if ($simple_megamenu_helper->menuIsTargetedByMegaMenuType($menu_name)) {
       $variables['content']['#theme'] = 'menu';
@@ -198,7 +200,7 @@ function simple_megamenu_form_menu_link_edit_alter(&$form, FormStateInterface $f
   // phpcs:disable
   $build_info = $form_state->getBuildInfo();
 
-  /** @var \Drupal\Core\Menu\MenuLinkDefault $menu_link_default */
+  /** @var MenuLinkDefault $menu_link_default */
   $menu_link_default = $build_info['args'][0];
   $menu_link_options = $menu_link_default->getOptions();
   $menu_name = $menu_link_default->getMenuName();
diff --git a/src/Controller/SimpleMegaMenuController.php b/src/Controller/SimpleMegaMenuController.php
index 1b11ca9..26cedac 100644
--- a/src/Controller/SimpleMegaMenuController.php
+++ b/src/Controller/SimpleMegaMenuController.php
@@ -24,14 +24,14 @@ class SimpleMegaMenuController extends ControllerBase implements ContainerInject
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
@@ -48,9 +48,9 @@ class SimpleMegaMenuController extends ControllerBase implements ContainerInject
   /**
    * Constructs a BlockContent object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
    */
   public function __construct(DateFormatter $date_formatter, Renderer $renderer) {
@@ -92,7 +92,7 @@ class SimpleMegaMenuController extends ControllerBase implements ContainerInject
   /**
    * Generates an overview table of older revisions of a Simple mega menu .
    *
-   * @param \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface $simple_mega_menu
+   * @param SimpleMegaMenuInterface $simple_mega_menu
    *   A Simple mega menu  object.
    *
    * @return array
@@ -119,7 +119,7 @@ class SimpleMegaMenuController extends ControllerBase implements ContainerInject
     $latest_revision = TRUE;
 
     foreach (array_reverse($vids) as $vid) {
-      /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface $revision */
+      /** @var SimpleMegaMenuInterface $revision */
       $revision = $simple_mega_menu_storage->loadRevision($vid);
       // Only show revisions that are affected by the language that is being
       // displayed.
diff --git a/src/Entity/SimpleMegaMenuInterface.php b/src/Entity/SimpleMegaMenuInterface.php
index 3a992db..bf5f335 100644
--- a/src/Entity/SimpleMegaMenuInterface.php
+++ b/src/Entity/SimpleMegaMenuInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_megamenu\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\RevisionableInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -103,7 +104,7 @@ interface SimpleMegaMenuInterface extends RevisionableInterface, RevisionLogInte
   /**
    * Gets the Simple mega menu revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php b/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php
index 8eb0aac..ec1d2ff 100644
--- a/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php
+++ b/src/EventSubscriber/SimpleMegaMenuAccessCanonicalPageSubscriber.php
@@ -2,10 +2,11 @@
 
 namespace Drupal\simple_megamenu\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Drupal\simple_megamenu\Entity\SimpleMegaMenu;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Routing\UrlGeneratorInterface;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
@@ -20,16 +21,16 @@ class SimpleMegaMenuAccessCanonicalPageSubscriber implements EventSubscriberInte
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
    */
   public function __construct(AccountInterface $current_user, UrlGeneratorInterface $url_generator) {
@@ -47,10 +48,10 @@ class SimpleMegaMenuAccessCanonicalPageSubscriber implements EventSubscriberInte
   /**
    * This method is called whenever the kernel.request event is dispatched.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event object.
    */
-  public function onRequestCheckAccess(GetResponseEvent $event) {
+  public function onRequestCheckAccess(RequestEvent $event) {
     $request = $event->getRequest();
 
     // If we've got an exception, nothing to do here.
@@ -58,7 +59,7 @@ class SimpleMegaMenuAccessCanonicalPageSubscriber implements EventSubscriberInte
       return;
     }
 
-    /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenu $simple_mega_menu */
+    /** @var SimpleMegaMenu $simple_mega_menu */
     $simple_mega_menu = $request->get('simple_mega_menu');
     if ($simple_mega_menu  && $simple_mega_menu instanceof SimpleMegaMenuInterface) {
       if (!$this->currentUser->hasPermission('access simple mega menu entities canonical page')) {
diff --git a/src/Form/SimpleMegaMenuRevisionDeleteForm.php b/src/Form/SimpleMegaMenuRevisionDeleteForm.php
index 8156978..9ccf4d1 100644
--- a/src/Form/SimpleMegaMenuRevisionDeleteForm.php
+++ b/src/Form/SimpleMegaMenuRevisionDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_megamenu\Form;
 
+use Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Datetime\DateFormatter;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -20,39 +21,39 @@ class SimpleMegaMenuRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The Simple mega menu revision.
    *
-   * @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface
+   * @var SimpleMegaMenuInterface
    */
   protected $revision;
 
   /**
    * The Simple mega menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $simpleMegaMenuStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new SimpleMegaMenuRevisionDeleteForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Datetime\DateFormatter $date_formatter
+   * @param DateFormatter $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityStorageInterface $entity_storage, Connection $connection, DateFormatter $date_formatter) {
diff --git a/src/Form/SimpleMegaMenuRevisionRevertForm.php b/src/Form/SimpleMegaMenuRevisionRevertForm.php
index b948312..19310ff 100644
--- a/src/Form/SimpleMegaMenuRevisionRevertForm.php
+++ b/src/Form/SimpleMegaMenuRevisionRevertForm.php
@@ -21,39 +21,39 @@ class SimpleMegaMenuRevisionRevertForm extends ConfirmFormBase {
   /**
    * The Simple mega menu revision.
    *
-   * @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface
+   * @var SimpleMegaMenuInterface
    */
   protected $revision;
 
   /**
    * The Simple mega menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $simpleMegaMenuStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;
 
   /**
    * Constructs a new SimpleMegaMenuRevisionRevertForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The Simple mega menu storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\Time $time
+   * @param Time $time
    *   The time service.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter, Time $time) {
@@ -141,12 +141,12 @@ class SimpleMegaMenuRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface $revision
+   * @param SimpleMegaMenuInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface
+   * @return SimpleMegaMenuInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(SimpleMegaMenuInterface $revision, FormStateInterface $form_state) {
diff --git a/src/Form/SimpleMegaMenuRevisionRevertTranslationForm.php b/src/Form/SimpleMegaMenuRevisionRevertTranslationForm.php
index b214364..2028991 100644
--- a/src/Form/SimpleMegaMenuRevisionRevertTranslationForm.php
+++ b/src/Form/SimpleMegaMenuRevisionRevertTranslationForm.php
@@ -27,20 +27,20 @@ class SimpleMegaMenuRevisionRevertTranslationForm extends SimpleMegaMenuRevision
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Constructs a new SimpleMegaMenuRevisionRevertTranslationForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The Simple mega menu storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\Time $time
+   * @param Time $time
    *   The time service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter, Time $time, LanguageManagerInterface $language_manager) {
@@ -96,7 +96,7 @@ class SimpleMegaMenuRevisionRevertTranslationForm extends SimpleMegaMenuRevision
   protected function prepareRevertedRevision(SimpleMegaMenuInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface $default_revision */
+    /** @var SimpleMegaMenuInterface $default_revision */
     $latest_revision = $this->simpleMegaMenuStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
diff --git a/src/Form/SimpleMegaMenuSettingsForm.php b/src/Form/SimpleMegaMenuSettingsForm.php
index 13b5b22..9533b2d 100644
--- a/src/Form/SimpleMegaMenuSettingsForm.php
+++ b/src/Form/SimpleMegaMenuSettingsForm.php
@@ -29,7 +29,7 @@ class SimpleMegaMenuSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -41,7 +41,7 @@ class SimpleMegaMenuSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/SimpleMegaMenuTypeForm.php b/src/Form/SimpleMegaMenuTypeForm.php
index e6be29f..420d5db 100644
--- a/src/Form/SimpleMegaMenuTypeForm.php
+++ b/src/Form/SimpleMegaMenuTypeForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_megamenu\Form;
 
+use Drupal\simple_megamenu\Entity\SimpleMegaMenuTypeInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -18,7 +19,7 @@ class SimpleMegaMenuTypeForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuTypeInterface $simple_mega_menu_type */
+    /** @var SimpleMegaMenuTypeInterface $simple_mega_menu_type */
     $simple_mega_menu_type = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
diff --git a/src/SimpleMegaMenuAccessControlHandler.php b/src/SimpleMegaMenuAccessControlHandler.php
index 8bc52ee..8a93239 100644
--- a/src/SimpleMegaMenuAccessControlHandler.php
+++ b/src/SimpleMegaMenuAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_megamenu;
 
+use Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class SimpleMegaMenuAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface $entity */
+    /** @var SimpleMegaMenuInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
diff --git a/src/SimpleMegaMenuHelper.php b/src/SimpleMegaMenuHelper.php
index df4ac91..a7f3041 100644
--- a/src/SimpleMegaMenuHelper.php
+++ b/src/SimpleMegaMenuHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_megamenu;
 
+use Drupal\simple_megamenu\Entity\SimpleMegaMenuType;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\simple_megamenu\Entity\SimpleMegaMenuTypeInterface;
 
@@ -15,14 +16,14 @@ class SimpleMegaMenuHelper implements SimpleMegaMenuHelperInterface {
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -42,7 +43,7 @@ class SimpleMegaMenuHelper implements SimpleMegaMenuHelperInterface {
   public function getMegaMenuTypeWhichTargetMenu($menu_name) {
     $mega_menu_types = [];
     $simple_mega_menu_types = $this->entityTypeManager->getStorage('simple_mega_menu_type')->loadMultiple();
-    /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuType $entity */
+    /** @var SimpleMegaMenuType $entity */
     foreach ($simple_mega_menu_types as $id => $entity) {
       $target_menus = $this->getTargetMenus($entity);
       if (in_array($menu_name, $target_menus)) {
@@ -57,7 +58,7 @@ class SimpleMegaMenuHelper implements SimpleMegaMenuHelperInterface {
    */
   public function menuIsTargetedByMegaMenuType($menu_name) {
     $simple_mega_menu_types = $this->entityTypeManager->getStorage('simple_mega_menu_type')->loadMultiple();
-    /** @var \Drupal\simple_megamenu\Entity\SimpleMegaMenuType $entity */
+    /** @var SimpleMegaMenuType $entity */
     foreach ($simple_mega_menu_types as $entity) {
       $target_menus = $this->getTargetMenus($entity);
       if (in_array($menu_name, $target_menus)) {
diff --git a/src/SimpleMegaMenuHelperInterface.php b/src/SimpleMegaMenuHelperInterface.php
index aa5225c..4d4f9a0 100644
--- a/src/SimpleMegaMenuHelperInterface.php
+++ b/src/SimpleMegaMenuHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_megamenu;
 
+use Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface;
 use Drupal\simple_megamenu\Entity\SimpleMegaMenuTypeInterface;
 
 /**
@@ -14,7 +15,7 @@ interface SimpleMegaMenuHelperInterface {
   /**
    * Gets the menus targeted by a specific Simple mega menu type.
    *
-   * @param \Drupal\simple_megamenu\Entity\SimpleMegaMenuTypeInterface $entity
+   * @param SimpleMegaMenuTypeInterface $entity
    *   The Simple mega menu type entity.
    *
    * @return array
@@ -52,7 +53,7 @@ interface SimpleMegaMenuHelperInterface {
    * @param string $id
    *   The SimpleMegaMenuType id.
    *
-   * @return \Drupal\simple_megamenu\Entity\SimpleMegaMenuTypeInterface
+   * @return SimpleMegaMenuTypeInterface
    *   The SimpleMegaMenuTypeInterface entity.
    */
   public function getSimpleMegaMenuType($id);
@@ -63,7 +64,7 @@ interface SimpleMegaMenuHelperInterface {
    * @param string $id
    *   The SimpleMegaMenu id.
    *
-   * @return \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface
+   * @return SimpleMegaMenuInterface
    *   The SimpleMegaMenuInterface entity.
    */
   public function getSimpleMegaMenu($id);
diff --git a/src/SimpleMegaMenuHtmlRouteProvider.php b/src/SimpleMegaMenuHtmlRouteProvider.php
index 379b72d..7aefcf8 100644
--- a/src/SimpleMegaMenuHtmlRouteProvider.php
+++ b/src/SimpleMegaMenuHtmlRouteProvider.php
@@ -56,10 +56,10 @@ class SimpleMegaMenuHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -81,10 +81,10 @@ class SimpleMegaMenuHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -105,10 +105,10 @@ class SimpleMegaMenuHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -129,10 +129,10 @@ class SimpleMegaMenuHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -153,10 +153,10 @@ class SimpleMegaMenuHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -177,10 +177,10 @@ class SimpleMegaMenuHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -201,10 +201,10 @@ class SimpleMegaMenuHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/SimpleMegaMenuListBuilder.php b/src/SimpleMegaMenuListBuilder.php
index afb66b6..3267274 100644
--- a/src/SimpleMegaMenuListBuilder.php
+++ b/src/SimpleMegaMenuListBuilder.php
@@ -23,27 +23,27 @@ class SimpleMegaMenuListBuilder extends EntityListBuilder {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The bundle info interface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfo;
 
   /**
    * Constructs a new EntityListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundleInfo
+   * @param EntityTypeBundleInfoInterface $bundleInfo
    *   The bundle info service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, EntityTypeManagerInterface $entityTypeManager, EntityTypeBundleInfoInterface $bundleInfo) {
diff --git a/src/SimpleMegaMenuStorageInterface.php b/src/SimpleMegaMenuStorageInterface.php
index d5d54a5..c2e475e 100644
--- a/src/SimpleMegaMenuStorageInterface.php
+++ b/src/SimpleMegaMenuStorageInterface.php
@@ -20,7 +20,7 @@ interface SimpleMegaMenuStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of Simple megamenu revision IDs for a specific Simple megamenu.
    *
-   * @param \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface $entity
+   * @param SimpleMegaMenuInterface $entity
    *   The Simple mega menu entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface SimpleMegaMenuStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as Simple mega menu author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface SimpleMegaMenuStorageInterface extends ContentEntityStorageInterface {
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\simple_megamenu\Entity\SimpleMegaMenuInterface $entity
+   * @param SimpleMegaMenuInterface $entity
    *   The Simple mega menu entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface SimpleMegaMenuStorageInterface extends ContentEntityStorageInterface {
   /**
    * Unsets the language for all Simple mega menu with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/src/SimpleMegaMenuTypeHtmlRouteProvider.php b/src/SimpleMegaMenuTypeHtmlRouteProvider.php
index d6023df..98fcd93 100644
--- a/src/SimpleMegaMenuTypeHtmlRouteProvider.php
+++ b/src/SimpleMegaMenuTypeHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class SimpleMegaMenuTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
