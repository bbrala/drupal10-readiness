diff --git a/entityform_block.info.yml b/entityform_block.info.yml
index 505c30f..30c06ed 100644
--- a/entityform_block.info.yml
+++ b/entityform_block.info.yml
@@ -1,5 +1,4 @@
 name: Entity Form Block
 type: module
 description: Provides blocks with forms for editing content entities.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/src/Plugin/Block/EntityEditFormBlock.php b/src/Plugin/Block/EntityEditFormBlock.php
index 34df9fc..8e9fbf2 100644
--- a/src/Plugin/Block/EntityEditFormBlock.php
+++ b/src/Plugin/Block/EntityEditFormBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entityform_block\Plugin\Block;
 
+use Drupal\Core\Entity\ContentEntityTypeInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -25,14 +26,14 @@ class EntityEditFormBlock extends BlockBase implements ContainerFactoryPluginInt
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
@@ -45,9 +46,9 @@ class EntityEditFormBlock extends BlockBase implements ContainerFactoryPluginInt
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info) {
@@ -95,7 +96,7 @@ class EntityEditFormBlock extends BlockBase implements ContainerFactoryPluginInt
     $form = parent::blockForm($form, $form_state);
 
     // Get content entity types.
-    /** @var \Drupal\Core\Entity\ContentEntityTypeInterface[] $content_entity_types */
+    /** @var ContentEntityTypeInterface[] $content_entity_types */
     $content_entity_types = [];
     foreach ($this->entityTypeManager->getDefinitions() as $entity_type_id => $entity_type_definition) {
       if ($entity_type_definition->getGroup() == 'content') {
diff --git a/tests/src/Functional/EntityFormBlockTest.php b/tests/src/Functional/EntityFormBlockTest.php
index c3126e0..b5b4ed2 100644
--- a/tests/src/Functional/EntityFormBlockTest.php
+++ b/tests/src/Functional/EntityFormBlockTest.php
@@ -53,13 +53,13 @@ class EntityFormBlockTest extends BrowserTestBase {
     $this->drupalGet('admin/structure/block/add/entityform_block/classy', ['query' => ['region' => 'content']]);
 
     // Assert that comments and personal form bundles are not displayed.
-    $this->assertNoOption('edit-settings-entity-type-bundle', 'comment.comment');
-    $this->assertNoOption('edit-settings-entity-type-bundle', 'contact_message.personal');
+    $this->assertSession()->optionNotExists('edit-settings-entity-type-bundle', 'comment.comment');
+    $this->assertSession()->optionNotExists('edit-settings-entity-type-bundle', 'contact_message.personal');
 
     $edit = array(
       'settings[entity_type_bundle]' => 'node.article',
     );
-    $this->drupalPostForm(NULL, $edit, t('Save block'));
+    $this->submitForm($edit, t('Save block'));
 
     $this->drupalGet('<front>');
 
@@ -74,7 +74,8 @@ class EntityFormBlockTest extends BrowserTestBase {
       'name' => 'Vocabulary Tags',
       'vid' => 'vocabulary_tags',
     );
-    $this->drupalPostForm('admin/structure/taxonomy/add', $edit, t('Save'), [], 'taxonomy-vocabulary-form');
+    $this->drupalGet('admin/structure/taxonomy/add', []);
+    $this->submitForm($edit, t('Save'), 'taxonomy-vocabulary-form');
     $this->assertSession()->pageTextContains('Created new vocabulary Vocabulary Tags.');
 
     // Add a form block for creating tags.
@@ -82,7 +83,7 @@ class EntityFormBlockTest extends BrowserTestBase {
     $edit = array(
       'settings[entity_type_bundle]' => 'taxonomy_term.vocabulary_tags',
     );
-    $this->drupalPostForm(NULL, $edit, t('Save block'));
+    $this->submitForm($edit, t('Save block'));
 
     $this->drupalGet('<front>');
 
@@ -95,7 +96,7 @@ class EntityFormBlockTest extends BrowserTestBase {
     $edit = array(
       'settings[entity_type_bundle]' => 'user.user',
     );
-    $this->drupalPostForm(NULL, $edit, t('Save block'));
+    $this->submitForm($edit, t('Save block'));
 
     $this->drupalGet('<front>');
 
diff --git a/tests/src/Functional/LocaleTest.php b/tests/src/Functional/LocaleTest.php
index 3f01102..5288656 100644
--- a/tests/src/Functional/LocaleTest.php
+++ b/tests/src/Functional/LocaleTest.php
@@ -20,11 +20,11 @@ class LocaleTest extends EntityFormBlockTest {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $file = new \stdClass();
-    $file->uri =  \Drupal::service('file_system')->realpath(drupal_get_path('module', 'entityform_block') . '/tests/test.de.po');
+    $file->uri =  \Drupal::service('file_system')->realpath(\Drupal::service('extension.list.module')->getPath('entityform_block') . '/tests/test.de.po');
     $file->langcode = 'de';
     Gettext::fileToDatabase($file, array());
 
