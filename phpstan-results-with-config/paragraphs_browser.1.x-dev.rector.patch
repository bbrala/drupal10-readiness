diff --git a/paragraphs_browser.module b/paragraphs_browser.module
index 0a96987..d91120f 100644
--- a/paragraphs_browser.module
+++ b/paragraphs_browser.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\paragraphs\Entity\ParagraphsType;
 /**
@@ -45,7 +46,7 @@ function paragraphs_browser_theme() {
  *
  * @param $name
  *
- * @return \Drupal\Core\Entity\EntityInterface|null|static
+ * @return EntityInterface|null|static
  */
 function paragraphs_browser_type_load($name) {
   return BrowserType::load($name);
diff --git a/src/BrowserGroupList.php b/src/BrowserGroupList.php
index ee9dbfb..cdb703e 100644
--- a/src/BrowserGroupList.php
+++ b/src/BrowserGroupList.php
@@ -45,14 +45,14 @@ class BrowserGroupList {
   /**
    * @param integer $id
    *
-   * @return \Drupal\paragraphs_browser\BrowserGroupItem
+   * @return BrowserGroupItem
    */
   public function getGroup($id) {
     return isset($this->groups[$id]) ? $this->groups[$id] : null;
   }
 
   /**
-   * @param \Drupal\paragraphs_browser\BrowserGroupItem $group
+   * @param BrowserGroupItem $group
    */
   public function setGroup(BrowserGroupItem $group) {
     $this->groups[$group->getId()] = $group;
@@ -65,7 +65,7 @@ class BrowserGroupList {
    * @param string $label
    * @param integer $weight
    *
-   * @return \Drupal\paragraphs_browser\BrowserGroupItem
+   * @return BrowserGroupItem
    */
   public function addGroup($machine_name, $label, $weight = null) {
     if(is_null($weight)) {
@@ -87,7 +87,7 @@ class BrowserGroupList {
   /**
    * Gets the last group in the list
    *
-   * @return \Drupal\paragraphs_browser\BrowserGroupItem
+   * @return BrowserGroupItem
    */
   public function getLastGroup() {
     foreach($this->getGroups() as $group) {
diff --git a/src/Controller/BrowserListBuilder.php b/src/Controller/BrowserListBuilder.php
index 8510b66..2ba5782 100644
--- a/src/Controller/BrowserListBuilder.php
+++ b/src/Controller/BrowserListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\paragraphs_browser\Controller;
 
+use Drupal\field\FieldConfigInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -33,7 +34,7 @@ class BrowserListBuilder extends ConfigEntityListBuilder {
    * {@inheritdoc}
    */
   public function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\field\FieldConfigInterface $entity */
+    /** @var FieldConfigInterface $entity */
     $operations = parent::getDefaultOperations($entity);
 
     if (isset($operations['edit'])) {
diff --git a/src/Entity/BrowserType.php b/src/Entity/BrowserType.php
index d0be6cb..ededad7 100644
--- a/src/Entity/BrowserType.php
+++ b/src/Entity/BrowserType.php
@@ -71,7 +71,7 @@ class BrowserType extends ConfigEntityBase implements BrowserTypeInterface
    *
    * On presave, items here are saved back to $groups;
    *
-   * @var \Drupal\paragraphs_browser\BrowserGroupList|null
+   * @var BrowserGroupList|null
    */
   protected $groupList;
 
diff --git a/src/Form/BrowserGroupsForm.php b/src/Form/BrowserGroupsForm.php
index bad2168..9329052 100644
--- a/src/Form/BrowserGroupsForm.php
+++ b/src/Form/BrowserGroupsForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\paragraphs_browser\Form;
 
+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -32,23 +33,23 @@ class BrowserGroupsForm extends EntityForm {
   /**
    * The shared temporary storage for unsaved search indexes.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a CropWidgetForm object.
    *
-   * @param \Drupal\Core\TempStore\SharedTempStoreFactory $temp_store_factory
+   * @param SharedTempStoreFactory $temp_store_factory
    *   The factory for shared temporary storages.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(SharedTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ -216,7 +217,7 @@ class BrowserGroupsForm extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancel(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/GroupAddForm.php b/src/Form/GroupAddForm.php
index 1725a5b..45f3ad7 100644
--- a/src/Form/GroupAddForm.php
+++ b/src/Form/GroupAddForm.php
@@ -7,6 +7,8 @@
 
 namespace Drupal\paragraphs_browser\Form;
 
+use Drupal\paragraphs_browser\Entity\BrowserType;
+use Drupal\Core\TempStore\SharedTempStore;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -24,30 +26,30 @@ class GroupAddForm extends EntityForm {
   /**
    * The index for which the fields are configured.
    *
-   * @var \Drupal\paragraphs_browser\Entity\BrowserType
+   * @var BrowserType
    */
   protected $entity;
 
   /**
    * The shared temporary storage for unsaved search indexes.
    *
-   * @var \Drupal\Core\TempStore\SharedTempStore
+   * @var SharedTempStore
    */
   protected $tempStore;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a CropWidgetForm object.
    *
-   * @param \Drupal\Core\TempStore\SharedTempStoreFactory $temp_store_factory
+   * @param SharedTempStoreFactory $temp_store_factory
    *   The factory for shared temporary storages.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(SharedTempStoreFactory $temp_store_factory, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Form/GroupDeleteConfirm.php b/src/Form/GroupDeleteConfirm.php
index 38deff2..7eb73a0 100644
--- a/src/Form/GroupDeleteConfirm.php
+++ b/src/Form/GroupDeleteConfirm.php
@@ -57,7 +57,7 @@ class GroupDeleteConfirm extends FormBase {
    * Secondary submit handler, saves entity after group has been removed
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function save(array $form, FormStateInterface $form_state) {
     $this->entity->save();
diff --git a/src/Form/GroupEditForm.php b/src/Form/GroupEditForm.php
index 5116dcd..3199ba4 100644
--- a/src/Form/GroupEditForm.php
+++ b/src/Form/GroupEditForm.php
@@ -83,7 +83,7 @@ class GroupEditForm extends FormBase {
    * Secondary submit handler to save entity after group has been updated
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function save(array $form, FormStateInterface $form_state) {
     $this->entity->save();
diff --git a/src/Form/ParagraphTypeGroupsForm.php b/src/Form/ParagraphTypeGroupsForm.php
index 3aa5d9e..b691ccc 100644
--- a/src/Form/ParagraphTypeGroupsForm.php
+++ b/src/Form/ParagraphTypeGroupsForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\paragraphs_browser\Form;
 
+use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\paragraphs\ParagraphsTypeInterface;
@@ -33,22 +34,22 @@ class ParagraphTypeGroupsForm extends FormBase {
   /**
    * Drupal entityTypeManager
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Provides messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Constructs a new ParagraphsTypeDeleteConfirm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, MessengerInterface $messenger) {
@@ -161,7 +162,7 @@ class ParagraphTypeGroupsForm extends FormBase {
    * Secondary submit handler
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function save(array $form, FormStateInterface $form_state) {
     $build_info = $form_state->getBuildInfo();
diff --git a/src/Form/ParagraphsBrowserForm.php b/src/Form/ParagraphsBrowserForm.php
index b042f89..bf6af8e 100644
--- a/src/Form/ParagraphsBrowserForm.php
+++ b/src/Form/ParagraphsBrowserForm.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\paragraphs_browser\Form;
 
+use Drupal\paragraphs\ParagraphsTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\CloseModalDialogCommand;
@@ -35,39 +36,39 @@ class ParagraphsBrowserForm extends FormBase {
   protected $entity;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a new ParagraphsTypeDeleteConfirm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, ModuleHandlerInterface $module_handler, AccountInterface $current_user) {
@@ -197,8 +198,7 @@ class ParagraphsBrowserForm extends FormBase {
         '#markup' => '<h2>' . $groups[$group_machine_name]->getLabel() . '</h2>',
       ];
       foreach($items as $paragraph_type) {
-        /** @var \Drupal\paragraphs\ParagraphsTypeInterface $paragraph_type */
-
+        /** @var ParagraphsTypeInterface $paragraph_type */
         $element = [
           '#theme' => 'paragraphs_browser_paragraph_type'
         ];
@@ -213,7 +213,7 @@ class ParagraphsBrowserForm extends FormBase {
 
         if($image_path = $paragraph_type->getThirdPartySetting('paragraphs_browser', 'image_path', $default = NULL)) {
           // If there is a paragraphs browser image, use it
-          $src = file_create_url($image_path);
+          $src = \Drupal::service('file_url_generator')->generateAbsoluteString($image_path);
         } else {
           // Otherwise, default to paragraphs icon
           $src = $paragraph_type->getIconUrl();
diff --git a/src/ParagraphsBrowserManager.php b/src/ParagraphsBrowserManager.php
index 5645625..e6af176 100644
--- a/src/ParagraphsBrowserManager.php
+++ b/src/ParagraphsBrowserManager.php
@@ -15,13 +15,13 @@ class BrowserManager {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface;
+   * @var EntityTypeManagerInterface ;
    */
   protected $entityTypeManager;
   /**
    * Constructs a BrowserManager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
