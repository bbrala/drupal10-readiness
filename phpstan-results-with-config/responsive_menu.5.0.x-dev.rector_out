modules/contrib/responsive_menu/responsive_menu.api.php
modules/contrib/responsive_menu/responsive_menu.install
modules/contrib/responsive_menu/responsive_menu.module
modules/contrib/responsive_menu/src/Form/SettingsForm.php
modules/contrib/responsive_menu/src/OffCanvas.php
modules/contrib/responsive_menu/src/Plugin/Block/HorizontalMenu.php
modules/contrib/responsive_menu/src/Plugin/Block/Toggle.php
modules/contrib/responsive_menu/tests/modules/responsive_menu_test/responsive_menu_test.install
modules/contrib/responsive_menu/tests/modules/responsive_menu_test/responsive_menu_test.module
modules/contrib/responsive_menu/tests/src/Functional/ResponsiveMenuAdminTest.php
modules/contrib/responsive_menu/tests/src/Functional/ResponsiveMenuHooks.php
modules/contrib/responsive_menu/tests/src/Functional/ResponsiveMenuTest.php
modules/contrib/responsive_menu/tests/src/Nightwatch/SiteInstallSetupScript.php

7 files with changes
====================

1) modules/contrib/responsive_menu/tests/src/Functional/ResponsiveMenuTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\responsive_menu\Functional;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp(): void {
     parent::setUp();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/responsive_menu/tests/src/Functional/ResponsiveMenuHooks.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\responsive_menu\Functional;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp(): void {
     parent::setUp();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/responsive_menu/tests/src/Functional/ResponsiveMenuAdminTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\responsive_menu\Functional;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setUp(): void {
     parent::setUp();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/responsive_menu/tests/modules/responsive_menu_test/responsive_menu_test.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * Install file for responsive_menu_test module.
@@ @@
 /**
  * Implements hook_install().
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  *
  * @noinspection PhpFullyQualifiedNameUsageInspection
  */
@@ @@
  * @param array $node_data
  *   An array of data for the new node.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  *
  * @noinspection PhpFullyQualifiedNameUsageInspection
  */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) modules/contrib/responsive_menu/src/Plugin/Block/HorizontalMenu.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\responsive_menu\Plugin\Block;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Menu\MenuActiveTrailInterface;
@@ @@
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuTree;

@@ @@
   /**
    * The active menu trail service.
    *
-   * @var \Drupal\Core\Menu\MenuActiveTrailInterface
+   * @var MenuActiveTrailInterface
    */
   protected $menuActiveTrail;

@@ @@
   /**
    * Configuration Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Stored configuration for the module.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/responsive_menu/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\responsive_menu\Form;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\system\MenuInterface;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    * @noinspection PhpUnnecessaryFullyQualifiedNameInspection
    */
   protected $entityTypeManager;
@@ @@
   /**
    * Stored configuration for the module.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    * @noinspection PhpFullyQualifiedNameUsageInspection
    */
   protected $config;
@@ @@
    * @return array
    *   Keys are menu names (ids) values are the menu labels.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    *
    * @noinspection PhpFullyQualifiedNameUsageInspection
    */
@@ @@
   protected function getMenuOptions(array $menu_names = NULL) {
     $menus = $this->entityTypeManager->getStorage('menu')->loadMultiple($menu_names);
     $options = [];
-    /** @var \Drupal\system\MenuInterface[] $menus */
+    /** @var MenuInterface[] $menus */
     foreach ($menus as $menu) {
       $options[$menu->id()] = $menu->label();
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/responsive_menu/responsive_menu.module:20

    ---------- begin diff ----------
@@ @@
 function responsive_menu_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'responsive_menu.settings':
-      $readme = Link::fromTextAndUrl('README.md', Url::fromUri('base:' . drupal_get_path('module', 'responsive_menu') . '/README.md'))->toRenderable();
+      $readme = Link::fromTextAndUrl('README.md', Url::fromUri('base:' . \Drupal::service('extension.list.module')->getPath('responsive_menu') . '/README.md'))->toRenderable();
       return '<p>' . t('3rd party libraries are required to enable some of the features. See the @readme file for more information about where to download and place them.', [
-        '@readme' => render($readme),
+        '@readme' => \Drupal::service('renderer')->render($readme),
       ]) . '</p><p>' . t("At a minimum you need to place the 'Responsive menu mobile icon' block in a region. If you want to display a horizontal menu at a specified breakpoint then you also need to place the 'Horizontal menu' block, although this is optional.") . '</p>';
   }
 }
@@ @@
 /**
  * Determines whether the flyleft menu link attribute has been set.
  *
- * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link_content_plugin
+ * @param MenuLinkInterface $menu_link_content_plugin
  *   The menu link content plugin.
  *
  * @return bool
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * RenderRector
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

