modules/contrib/simplenews_mailjet_subscriptions/simplenews_mailjet_subscriptions.module
modules/contrib/simplenews_mailjet_subscriptions/src/Controller/SimplenewsMailjetSubscriptionsListBuilder.php
modules/contrib/simplenews_mailjet_subscriptions/src/Entity/SimplenewsMailjetSubscriptionEntity.php
modules/contrib/simplenews_mailjet_subscriptions/src/Form/SimplenewsMailjetSubscriptionAddForm.php
modules/contrib/simplenews_mailjet_subscriptions/src/Form/SimplenewsMailjetSubscriptionDeleteForm.php
modules/contrib/simplenews_mailjet_subscriptions/src/Form/SimplenewsMailjetSubscriptionEditForm.php
modules/contrib/simplenews_mailjet_subscriptions/src/SimplenewsMailjetSubscriptionsInterface.php
modules/contrib/simplenews_mailjet_subscriptions/src/SimplenewsMailjetSubscriptionsUtilities.php
modules/contrib/simplenews_mailjet_subscriptions/tests/src/Funtional/ConfigurationFormTest.php

4 files with changes
====================

1) modules/contrib/simplenews_mailjet_subscriptions/tests/src/Funtional/ConfigurationFormTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Set up the tests.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $account =
@@ @@
    */
   public function testCanAccessContentMessages() {
     $this->drupalGet('/admin/config/services/simplenews/mailjet-subscriptions');
-    $this->assertText('Simplenews Maijet Subscription');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Simplenews Maijet Subscription');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/simplenews_mailjet_subscriptions/src/Form/SimplenewsMailjetSubscriptionEditForm.php:104

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   Form entity array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form State.
    */
   public function constructTable(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   Form entity array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form State.
    */
   public function addRow(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/simplenews_mailjet_subscriptions/src/Form/SimplenewsMailjetSubscriptionDeleteForm.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Get url used when canceling an entity deletion.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Cancellation URL.
    */
   public function getCancelUrl() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/simplenews_mailjet_subscriptions/simplenews_mailjet_subscriptions.module:13

    ---------- begin diff ----------
@@ @@
 /**
  * Invoked if a subscriber is subscribed to a newsletter.
  *
- * @param \Drupal\simplenews\Entity\Subscriber $subscriber
+ * @param Subscriber $subscriber
  *   The subscriber object including all subscriptions of this user.
  * @param string $subscription
  *   The subscription object for this specific subscribe action.
@@ @@
 /**
  * Invoked if a subscriber is unsubscribed from a newsletter.
  *
- * @param \Drupal\simplenews\Entity\Subscriber $subscriber
+ * @param Subscriber $subscriber
  *   The subscriber object including all subscriptions of this user.
  * @param string $subscription
  *   The subscription object for this specific subscribe action.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

