diff --git a/src/Annotation/WebformHierarchy.php b/src/Annotation/WebformHierarchy.php
index 14d91a1..31c476e 100644
--- a/src/Annotation/WebformHierarchy.php
+++ b/src/Annotation/WebformHierarchy.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_hierarchy\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class WebformHierarchy extends Plugin {
   /**
    * The label of the hierarchy.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +31,7 @@ class WebformHierarchy extends Plugin {
   /**
    * The description of the hierarchy.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Element/WebformHierarchy.php b/src/Element/WebformHierarchy.php
index 42c35ab..5181cb8 100644
--- a/src/Element/WebformHierarchy.php
+++ b/src/Element/WebformHierarchy.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\webform_hierarchy\Element;
 
+use Drupal\webform_hierarchy\Plugin\WebformHierarchyManagerInterface;
+use Drupal\webform_hierarchy\Plugin\WebformHierarchyInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Form\FormStateInterface;
@@ -96,11 +98,11 @@ class WebformHierarchy extends WebformCompositeBase {
     $value = NestedArray::getValue($form_state->getValues(), $element['#parents']);
     $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
 
-    /** @var \Drupal\webform_hierarchy\Plugin\WebformHierarchyManagerInterface $hierarchy_manager */
+    /** @var WebformHierarchyManagerInterface $hierarchy_manager */
     $hierarchy_manager = \Drupal::service('plugin.manager.webform_hierarchy');
 
     try {
-      /** @var \Drupal\webform_hierarchy\Plugin\WebformHierarchyInterface $hierarchy */
+      /** @var WebformHierarchyInterface $hierarchy */
       $hierarchy = $hierarchy_manager->createInstance($element['#hierarchy_id']);
     }
     catch (\Exception $e) {
diff --git a/src/Plugin/Derivative/WebformHierarchyDeriver.php b/src/Plugin/Derivative/WebformHierarchyDeriver.php
index 2dc3d90..907c6ee 100644
--- a/src/Plugin/Derivative/WebformHierarchyDeriver.php
+++ b/src/Plugin/Derivative/WebformHierarchyDeriver.php
@@ -17,14 +17,14 @@ class WebformHierarchyDeriver extends DeriverBase implements ContainerDeriverInt
   /**
    * The hierarchy information manager.
    *
-   * @var \Drupal\webform_hierarchy\Plugin\WebformHierarchyManagerInterface
+   * @var WebformHierarchyManagerInterface
    */
   protected $hierarchyManager;
 
   /**
    * Constructs new WebformHierarchyDeriver.
    *
-   * @param \Drupal\webform_hierarchy\Plugin\WebformHierarchyManagerInterface $hierarchy_manager
+   * @param WebformHierarchyManagerInterface $hierarchy_manager
    *   The hierarchy information manager.
    */
   public function __construct(WebformHierarchyManagerInterface $hierarchy_manager) {
diff --git a/src/Plugin/WebformHierarchyManager.php b/src/Plugin/WebformHierarchyManager.php
index c88a7bd..ee456ba 100644
--- a/src/Plugin/WebformHierarchyManager.php
+++ b/src/Plugin/WebformHierarchyManager.php
@@ -14,7 +14,7 @@ class WebformHierarchyManager extends DefaultPluginManager implements WebformHie
   /**
    * Loaded plugin instances.
    *
-   * @var \Drupal\webform_hierarchy\Plugin\WebformHierarchyInterface[]
+   * @var WebformHierarchyInterface[]
    */
   protected $hierarchyPlugins = [];
 
@@ -24,9 +24,9 @@ class WebformHierarchyManager extends DefaultPluginManager implements WebformHie
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
