diff --git a/pmfs.info.yml b/pmfs.info.yml
index ba625e8..0a2b666 100644
--- a/pmfs.info.yml
+++ b/pmfs.info.yml
@@ -2,5 +2,5 @@ name: Prevent Multiple Form Submissions
 type: module
 description: Provides server-side multiple submit request validation
 package: Forms
-core_version_requirement: ^8.8 || ^9.0
+core_version_requirement: ^8.8 || ^9.0 || ^10
 configure: pmfs.settings
diff --git a/src/EventSubscriber/Cookie.php b/src/EventSubscriber/Cookie.php
index e8e65f9..d26d4e8 100644
--- a/src/EventSubscriber/Cookie.php
+++ b/src/EventSubscriber/Cookie.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\pmfs\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Component\Utility\Crypt;
 use Drupal\pmfs\Pmfs;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
@@ -25,7 +26,7 @@ class Cookie implements EventSubscriberInterface {
   /**
    * Cookie handler of the module.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent|\Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent|RequestEvent $event
    *   Request event.
    */
   public function setCookie($event) {
diff --git a/src/Form/Settings.php b/src/Form/Settings.php
index 39d9c70..28cd492 100644
--- a/src/Form/Settings.php
+++ b/src/Form/Settings.php
@@ -21,14 +21,14 @@ class Settings extends ConfigFormBase {
   /**
    * State service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Pmfs service.
    *
-   * @var \Drupal\pmfs\Pmfs
+   * @var Pmfs
    */
   protected $pmfs;
 
@@ -295,7 +295,7 @@ class Settings extends ConfigFormBase {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed
diff --git a/src/Pmfs.php b/src/Pmfs.php
index bfd0081..8e5ae3d 100644
--- a/src/Pmfs.php
+++ b/src/Pmfs.php
@@ -39,35 +39,35 @@ class Pmfs {
   /**
    * Configuration factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $conf;
 
   /**
    * State storage service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Locking service.
    *
-   * @var \Drupal\Core\Lock\LockBackendInterface
+   * @var LockBackendInterface
    */
   protected $lock;
 
   /**
    * Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
@@ -88,15 +88,15 @@ class Pmfs {
   /**
    * Pmfs constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   Configuration factory service.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State storage service.
-   * @param \Drupal\Core\Lock\LockBackendInterface $lock
+   * @param LockBackendInterface $lock
    *   Locking service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Messenger service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Request stack.
    */
   public function __construct(
@@ -120,7 +120,7 @@ class Pmfs {
    *
    * @param array $form
    *   Form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   FOrm state instance.
    * @param string $form_id
    *   Form ID.
@@ -235,7 +235,7 @@ class Pmfs {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function formValidate(array $form, FormStateInterface $form_state) {
@@ -275,7 +275,7 @@ class Pmfs {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function formSubmitFirst(array $form, FormStateInterface $form_state) {
@@ -288,7 +288,7 @@ class Pmfs {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function formSubmitLast(array $form, FormStateInterface $form_state) {
@@ -318,7 +318,7 @@ class Pmfs {
    *
    * @param array $form
    *   Form aarray.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed
@@ -348,7 +348,7 @@ class Pmfs {
   /**
    * Is form configured for force release option.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return bool
@@ -374,7 +374,7 @@ class Pmfs {
   /**
    * Releases the given lock for the specific form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface|string $id
+   * @param FormStateInterface|string $id
    *   Form state or form ID.
    *
    * @see \Drupal\Core\Lock\LockBackendInterface::release()
@@ -404,7 +404,7 @@ class Pmfs {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function setLockValidationError(array $form, FormStateInterface $form_state) {
@@ -429,7 +429,7 @@ class Pmfs {
   /**
    * Acquires a lock for the specific form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @see \Drupal\Core\Lock\LockBackendInterface::acquire()
@@ -476,7 +476,7 @@ class Pmfs {
   /**
    * Checks if a lock is available for acquiring for the specific form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return bool
@@ -531,7 +531,7 @@ class Pmfs {
   /**
    * Get ID for the current user.
    *
-   * @param string|\Drupal\Core\Form\FormStateInterface $id
+   * @param string|FormStateInterface $id
    *   Form state.
    *
    * @return string
@@ -560,7 +560,7 @@ class Pmfs {
   /**
    * Form settings getter.
    *
-   * @param string|\Drupal\Core\Form\FormStateInterface $form_id
+   * @param string|FormStateInterface $form_id
    *   Form ID or Form State instance.
    *
    * @return array
@@ -637,7 +637,7 @@ class Pmfs {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    * @param string $form_id
    *   Form ID.
diff --git a/tests/modules/pmfs_tests/src/Form/TestForm.php b/tests/modules/pmfs_tests/src/Form/TestForm.php
index c95626b..81f5d8b 100644
--- a/tests/modules/pmfs_tests/src/Form/TestForm.php
+++ b/tests/modules/pmfs_tests/src/Form/TestForm.php
@@ -71,7 +71,7 @@ class TestForm extends FormBase {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state instance.
    */
   public function validateCustom(array &$form, FormStateInterface $form_state) {
@@ -83,7 +83,7 @@ class TestForm extends FormBase {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state instance.
    */
   public function submitCustom(array &$form, FormStateInterface $form_state) {
@@ -95,10 +95,10 @@ class TestForm extends FormBase {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state instance.
    *
-   * @return array|\Drupal\Core\Ajax\AjaxResponse
+   * @return array|AjaxResponse
    *   Ajax commands.
    */
   public function ajax(array &$form, FormStateInterface $form_state) {
