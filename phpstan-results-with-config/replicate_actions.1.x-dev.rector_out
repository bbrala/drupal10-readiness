modules/contrib/replicate_actions/replicate_actions.module
modules/contrib/replicate_actions/src/EventSubscriber/ReplicateSetNodeEdit.php
modules/contrib/replicate_actions/tests/src/Functional/ReplicateActionsTest.php

2 files with changes
====================

1) modules/contrib/replicate_actions/tests/src/Functional/ReplicateActionsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\replicate_actions\Functional;

+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\node\Entity\Node;
 use Drupal\node\Entity\NodeType;
@@ @@
   /**
    * The user's object.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * The nodes's object.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/replicate_actions/src/EventSubscriber/ReplicateSetNodeEdit.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $timeService;

@@ @@
   /**
    * ReplicateSetNodeEdit constructor.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time_service
+   * @param TimeInterface $time_service
    *   Current market report service.
    */
   public function __construct(TimeInterface $time_service) {
@@ @@
   /**
    * Sets the status of a replicated node to unpublished.
    *
-   * @param \Drupal\replicate\Events\ReplicateAlterEvent $event
+   * @param ReplicateAlterEvent $event
    *   The event fired by the replicator.
    */
   public function setUnpublished(ReplicateAlterEvent $event) {
@@ @@
     // in the future, we would need to make sure this is translatable before
     // getting languages.
     foreach ($cloned_entity->getTranslationLanguages() as $translation_language) {
-      /** @var \Drupal\node\NodeInterface $translation */
+      /** @var NodeInterface $translation */
       $translation = $cloned_entity->getTranslation($translation_language->getId());
       $translation->setUnpublished();

@@ @@
   /**
    * Make a redirect to "edit" mode.
    *
-   * @param \Drupal\replicate\Events\AfterSaveEvent $event
+   * @param AfterSaveEvent $event
    *   The event fired by the replicator.
    */
   public function makeRedirect(AfterSaveEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

