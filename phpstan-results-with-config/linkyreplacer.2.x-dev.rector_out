modules/contrib/linkyreplacer/linkyreplacer.install
modules/contrib/linkyreplacer/linkyreplacer.module
modules/contrib/linkyreplacer/src/Form/LinkyReplacerConfigurationForm.php
modules/contrib/linkyreplacer/src/LinkyEntityUtility.php
modules/contrib/linkyreplacer/src/LinkyEntityUtilityInterface.php
modules/contrib/linkyreplacer/src/LinkyRealmDeterminator.php
modules/contrib/linkyreplacer/src/LinkyRealmDeterminatorInterface.php
modules/contrib/linkyreplacer/src/LinkyReplacerEntityOperations.php
modules/contrib/linkyreplacer/src/LinkyReplacerLinkReplacer.php
modules/contrib/linkyreplacer/src/LinkyReplacerLinkReplacerInterface.php
modules/contrib/linkyreplacer/tests/src/Kernel/LinkyReplacerTest.php
modules/contrib/linkyreplacer/tests/src/Unit/LinkyReplacerRealmDeterminatorUnitTest.php
modules/contrib/linkyreplacer/tests/src/Unit/LinkyReplacerUnitTest.php

9 files with changes
====================

1) modules/contrib/linkyreplacer/tests/src/Unit/LinkyReplacerRealmDeterminatorUnitTest.php:28

    ---------- begin diff ----------
@@ @@
    * @covers ::isInternal
    */
   public function testIsInternal(string $assertUrlString, bool $expectIsInternal): void {
-    $configFactory = $this->getMockBuilder(ConfigFactoryInterface::class)
-      ->getMock();
+    $configFactory = $this->createMock(ConfigFactoryInterface::class);
     $config = $this->createMock(ImmutableConfig::class);
     $configFactory->expects($this->any())
       ->method('get')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/linkyreplacer/src/LinkyReplacerLinkReplacer.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * Utility for dealing with Linky entities.
    *
-   * @var \Drupal\linkyreplacer\LinkyEntityUtilityInterface
+   * @var LinkyEntityUtilityInterface
    */
   protected $linkyUtility;

@@ @@
   /**
    * LinkyReplacerLinkReplacer constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\linkyreplacer\LinkyEntityUtilityInterface $linkyUtility
+   * @param LinkyEntityUtilityInterface $linkyUtility
    *   Utility for dealing with Linky entities.
    */
   public function __construct(LoggerInterface $logger, LinkyEntityUtilityInterface $linkyUtility) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/linkyreplacer/src/LinkyReplacerEntityOperations.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * Link replacer.
    *
-   * @var \Drupal\linkyreplacer\LinkyReplacerLinkReplacerInterface
+   * @var LinkyReplacerLinkReplacerInterface
    */
   protected $linkReplacer;

@@ @@
   /**
    * Constructs a new LinkyReplacerEntityOperations.
    *
-   * @param \Drupal\linkyreplacer\LinkyReplacerLinkReplacerInterface $linkReplacer
+   * @param LinkyReplacerLinkReplacerInterface $linkReplacer
    *   Link replacer.
    */
   public function __construct(LinkyReplacerLinkReplacerInterface $linkReplacer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/linkyreplacer/src/LinkyRealmDeterminator.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new LinkyRealmDeterminator service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration object factory.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/linkyreplacer/src/LinkyEntityUtilityInterface.php:31

    ---------- begin diff ----------
@@ @@
    *   The href. If the href is converted to Linky then the original href is
    *   updated.
    *
-   * @return \Drupal\linky\LinkyInterface|null
+   * @return LinkyInterface|null
    *   Linky for entity, or NULL if no Linky exists for this uri.
    *
    * @throws \InvalidArgumentException
@@ @@
    * @param string $title
    *   The link title.
    *
-   * @return \Drupal\linky\LinkyInterface
+   * @return LinkyInterface
    *   The created Linky entity.
    *
    * @throws \InvalidArgumentException
@@ @@
    * @param int $id
    *   The link ID.
    *
-   * @return \Drupal\linky\LinkyInterface|null
+   * @return LinkyInterface|null
    *   Linky, or NULL if no linky exists for this uri.
    */
   public function getLinkyById(int $id): ?LinkyInterface;
@@ @@
    * @param string $uri
    *   The link URI.
    *
-   * @return \Drupal\linky\LinkyInterface|null
+   * @return LinkyInterface|null
    *   Linky, or NULL if no Linky exists for this uri.
    */
   public function getLinkyByUri(string $uri): ?LinkyInterface;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/linkyreplacer/src/LinkyEntityUtility.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\linkyreplacer;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * Linky storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkyStorage;

@@ @@
   /**
    * Service for determining whether a URL is internal or external.
    *
-   * @var \Drupal\linkyreplacer\LinkyRealmDeterminatorInterface
+   * @var LinkyRealmDeterminatorInterface
    */
   protected $realmDeterminator;

@@ @@
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Entity route context route helper.
    *
-   * @var \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface
+   * @var EntityRouteContextRouteHelperInterface
    */
   protected $entityRouteContextRouteHelper;

@@ @@
   /**
    * LinkyEntityUtility constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\linkyreplacer\LinkyRealmDeterminatorInterface $realmDeterminator
+   * @param LinkyRealmDeterminatorInterface $realmDeterminator
    *   Service for determining whether a URL is internal or external.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
-   * @param \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface $entityRouteContextRouteHelper
+   * @param EntityRouteContextRouteHelperInterface $entityRouteContextRouteHelper
    *   Entity route context route helper.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, LinkyRealmDeterminatorInterface $realmDeterminator, ConfigFactoryInterface $configFactory, EntityRouteContextRouteHelperInterface $entityRouteContextRouteHelper) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/linkyreplacer/src/Form/LinkyReplacerConfigurationForm.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\linkyreplacer\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
    * @param string[] $domains
    *   An array of domain rules.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   An array of errors, if any.
    */
   protected function checkRedundantDomains(array $domains): array {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/linkyreplacer/linkyreplacer.module:10

    ---------- begin diff ----------
@@ @@
  * Implements hook_entity_presave().
  */
 function linkyreplacer_entity_presave(EntityInterface $entity): void {
-  /** @var \Drupal\linkyreplacer\LinkyReplacerEntityOperations $entityOperations */
+  /** @var LinkyReplacerEntityOperations $entityOperations */
   $entityOperations = \Drupal::service('class_resolver')->getInstanceFromDefinition(LinkyReplacerEntityOperations::class);
   $entityOperations->entityPreSave($entity);
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


9) modules/contrib/linkyreplacer/linkyreplacer.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Extension\ModuleInstallerInterface;
 /**
  * @file
  * Installation functionality for Linky Replacer.
@@ @@
  */
 function linkyreplacer_update_8203(&$sandbox): void {
   // Install the Entity Route Context module.
-  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $moduleInstaller */
+  /** @var ModuleInstallerInterface $moduleInstaller */
   $moduleInstaller = \Drupal::service('module_installer');
   $moduleInstaller->install(['entity_route_context']);
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 9 files have been changed by Rector                                       

