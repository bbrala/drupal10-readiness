diff --git a/minimal_share.info.yml b/minimal_share.info.yml
index bbd50c5..1050cd7 100644
--- a/minimal_share.info.yml
+++ b/minimal_share.info.yml
@@ -1,7 +1,6 @@
 name: Minimal Share
 type: module
 description: Provides minimal share buttons for several services.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Custom
 configure: minimal_share.config
diff --git a/minimal_share.module b/minimal_share.module
index 94b4612..3bee76c 100644
--- a/minimal_share.module
+++ b/minimal_share.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\minimal_share\MinimalShareManager;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 /**
  * @file
  * Contains minimal_share.module.
@@ -32,14 +34,14 @@ function minimal_share_theme() {
  */
 function minimal_share_entity_extra_field_info() {
   $extra = [];
-  /** @var \Drupal\minimal_share\MinimalShareManager $manager */
+  /** @var MinimalShareManager $manager */
   $manager = \Drupal::service('minimal_share.manager');
   $config = $manager->getConfig();
 
   // Iterate all enabled entity types and provide
   // an extra field for each bundle.
   foreach ($config['entity_types'] as $entity_type) {
-    /** @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface $definition */
+    /** @var EntityTypeBundleInfoInterface $definition */
     $bundle_info = \Drupal::service('entity_type.bundle.info');
     $bundles = $bundle_info->getBundleInfo($entity_type);
 
@@ -59,7 +61,7 @@ function minimal_share_entity_extra_field_info() {
  * Implements hook_entity_view().
  */
 function minimal_share_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
-  /** @var \Drupal\minimal_share\MinimalShareManager $manager */
+  /** @var MinimalShareManager $manager */
   $manager = \Drupal::service('minimal_share.manager');
   $entity_type = $entity->getEntityTypeId();
 
diff --git a/src/Annotation/MinimalShareProvider.php b/src/Annotation/MinimalShareProvider.php
index a83c97b..e250194 100644
--- a/src/Annotation/MinimalShareProvider.php
+++ b/src/Annotation/MinimalShareProvider.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\minimal_share\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class MinimalShareProvider extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Form/ConfigForm.php b/src/Form/ConfigForm.php
index 00d1323..238da9b 100644
--- a/src/Form/ConfigForm.php
+++ b/src/Form/ConfigForm.php
@@ -16,19 +16,19 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ConfigForm extends ConfigFormBase {
 
   /**
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
-   * @var \Drupal\minimal_share\MinimalShareManager
+   * @var MinimalShareManager
    */
   protected $manager;
 
   /**
    * ConfigForm constructor.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
-   * @param \Drupal\minimal_share\MinimalShareManager $minimal_share_manager
+   * @param DateFormatterInterface $date_formatter
+   * @param MinimalShareManager $minimal_share_manager
    */
   public function __construct(DateFormatterInterface $date_formatter, MinimalShareManager $minimal_share_manager) {
     $this->dateFormatter = $date_formatter;
diff --git a/src/MinimalShareManager.php b/src/MinimalShareManager.php
index a297821..42bd6aa 100644
--- a/src/MinimalShareManager.php
+++ b/src/MinimalShareManager.php
@@ -33,8 +33,8 @@ class MinimalShareManager {
   /**
    * MinimalShareManager constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
-   * @param \Drupal\minimal_share\Plugin\MinimalShareProviderManager $provider_manager
+   * @param ConfigFactory $config_factory
+   * @param MinimalShareProviderManager $provider_manager
    */
   public function __construct(ConfigFactory $config_factory, MinimalShareProviderManager $provider_manager) {
     $this->config = $config_factory->get('minimal_share.config')->get();
@@ -192,7 +192,7 @@ class MinimalShareManager {
    *   The machine-readable string.
    */
   public function getMachineName($str) {
-    return Unicode::strtolower(Html::cleanCssIdentifier($str));
+    return mb_strtolower(Html::cleanCssIdentifier($str));
   }
 
   /**
@@ -216,7 +216,7 @@ class MinimalShareManager {
   /**
    * Build share info from entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *
    * @return array
    */
diff --git a/src/Plugin/MinimalShareProviderBase.php b/src/Plugin/MinimalShareProviderBase.php
index 8713e70..47a06a8 100644
--- a/src/Plugin/MinimalShareProviderBase.php
+++ b/src/Plugin/MinimalShareProviderBase.php
@@ -27,6 +27,6 @@ abstract class MinimalShareProviderBase extends PluginBase implements MinimalSha
    * @return string
    */
   public function getIconPath() {
-    return drupal_get_path('module', 'minimal_share') . '/assets/icons/';
+    return \Drupal::service('extension.list.module')->getPath('minimal_share') . '/assets/icons/';
   }
 }
diff --git a/src/Plugin/MinimalShareProviderManager.php b/src/Plugin/MinimalShareProviderManager.php
index a0ccc87..f326cba 100644
--- a/src/Plugin/MinimalShareProviderManager.php
+++ b/src/Plugin/MinimalShareProviderManager.php
@@ -18,9 +18,9 @@ class MinimalShareProviderManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
