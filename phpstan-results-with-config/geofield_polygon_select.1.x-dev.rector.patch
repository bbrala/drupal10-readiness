diff --git a/geofield_polygon_select.info.yml b/geofield_polygon_select.info.yml
index 1e2f04f..36cdf0b 100644
--- a/geofield_polygon_select.info.yml
+++ b/geofield_polygon_select.info.yml
@@ -1,6 +1,5 @@
 name: 'Geofield polygon select'
 type: module
 description: 'A field to pick a polygon from a json list of predefined polygons'
-core: 8.x
 package: 'Other'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
diff --git a/src/FeatureCollectionStore.php b/src/FeatureCollectionStore.php
index 86f095a..52ee466 100644
--- a/src/FeatureCollectionStore.php
+++ b/src/FeatureCollectionStore.php
@@ -13,7 +13,7 @@ class FeatureCollectionStore implements FeatureCollectionStoreInterface {
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/src/Plugin/Field/FieldFormatter/PolygonSelectFieldFormatter.php b/src/Plugin/Field/FieldFormatter/PolygonSelectFieldFormatter.php
index 93a26b2..1985961 100644
--- a/src/Plugin/Field/FieldFormatter/PolygonSelectFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/PolygonSelectFieldFormatter.php
@@ -64,7 +64,7 @@ class PolygonSelectFieldFormatter extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
diff --git a/src/Plugin/Field/FieldType/GeofieldPolygonItem.php b/src/Plugin/Field/FieldType/GeofieldPolygonItem.php
index 5bfad0d..610f707 100644
--- a/src/Plugin/Field/FieldType/GeofieldPolygonItem.php
+++ b/src/Plugin/Field/FieldType/GeofieldPolygonItem.php
@@ -4,6 +4,7 @@ namespace Drupal\geofield_polygon_select\Plugin\Field\FieldType;
 
 // Use Drupal\Core\Field\FieldDefinitionInterface;
 // use Drupal\Core\Field\FieldItemBase;.
+use Drupal\Core\Field\TypedData\FieldItemDataDefinition;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ -91,7 +92,7 @@ class GeofieldPolygonItem extends GeofieldItem {
   public function fieldSettingsForm(array $form, FormStateInterface $form_state) {
     $element = [];
     if ($this->getFieldDefinition()->getType() == "geofield_polygon_item") {
-      /** @var \Drupal\Core\Field\TypedData\FieldItemDataDefinition  **/
+      /** @var FieldItemDataDefinition **/
       $definition = $this->getFieldDefinition();
       // Add geofield_target only if we are not working with geofield fieldtype.
       $entity_fields = \Drupal::service('entity_field.manager')->getFieldDefinitions($this->getEntity()->getEntityTypeId(), $this->getEntity()->bundle());
diff --git a/src/Plugin/Field/FieldWidget/PolygonSelectFieldWidget.php b/src/Plugin/Field/FieldWidget/PolygonSelectFieldWidget.php
index 75a5a9b..dd49a33 100644
--- a/src/Plugin/Field/FieldWidget/PolygonSelectFieldWidget.php
+++ b/src/Plugin/Field/FieldWidget/PolygonSelectFieldWidget.php
@@ -33,14 +33,14 @@ class PolygonSelectFieldWidget extends GeofieldDefaultWidget {
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The service to fetch features from the feature collections entities.
    *
-   * @var \Drupal\geofield_polygon_select\FeatureCollectionStore
+   * @var FeatureCollectionStore
    */
   protected $featureCollectionStore;
 
@@ -51,19 +51,19 @@ class PolygonSelectFieldWidget extends GeofieldDefaultWidget {
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The geoPhpWrapper.
-   * @param \Drupal\geofield\WktGeneratorInterface $wkt_generator
+   * @param WktGeneratorInterface $wkt_generator
    *   The WKT format Generator service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The Event dispatcher.
-   * @param \Drupal\geofield_polygon_select\FeatureCollectionStore $feature_collection_store
+   * @param FeatureCollectionStore $feature_collection_store
    *   The service to fetch features from the feature collections entities.
    */
   public function __construct($plugin_id,
@@ -142,7 +142,7 @@ class PolygonSelectFieldWidget extends GeofieldDefaultWidget {
   /**
    * Get the options from list of polygon feature collections entities created.
    *
-   * @var \Drupal\geofield_polygon_select\Entity\PolygonFeatureCollectionInterface $collection_entity
+   * @var PolygonFeatureCollectionInterface $collection_entity
    *   The collection entity to extract options.
    */
   private function optionsFromJson(PolygonFeatureCollectionInterface $collection_entity) {
@@ -319,7 +319,7 @@ class PolygonSelectFieldWidget extends GeofieldDefaultWidget {
     $entity = $form_state->getBuildInfo()["callback_object"]->getEntity();
     $field = $this->fieldDefinition->getName();
     $event = new PolygonSelectFieldSelectedEvent($entity, $field, $values);
-    $this->eventDispatcher->dispatch(PolygonSelectFieldSelectedEvent::SUBMIT, $event);
+    $this->eventDispatcher->dispatch($event, PolygonSelectFieldSelectedEvent::SUBMIT);
     return $values;
   }
 
diff --git a/src/PolygonSelectFieldSelectedEvent.php b/src/PolygonSelectFieldSelectedEvent.php
index c92cf71..408a1a7 100644
--- a/src/PolygonSelectFieldSelectedEvent.php
+++ b/src/PolygonSelectFieldSelectedEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\geofield_polygon_select;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Entity\EntityInterface;
 
 /**
@@ -15,7 +15,7 @@ class PolygonSelectFieldSelectedEvent extends Event {
   /**
    * The Entity that is storing the polygon.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;
 
@@ -36,7 +36,7 @@ class PolygonSelectFieldSelectedEvent extends Event {
   /**
    * PolygonSelectFieldSelectedEvent constructor.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The Entity that is storing the polygon.
    * @param string $field_name
    *   The field name that holds the polygons.
@@ -52,7 +52,7 @@ class PolygonSelectFieldSelectedEvent extends Event {
   /**
    * Return entity that is storing the polygon.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Return entity interface.
    */
   public function getEntity() {
