modules/contrib/views_filter_clear/src/Form/FilterClear.php
modules/contrib/views_filter_clear/src/Form/ViewsUiFormHelper.php
modules/contrib/views_filter_clear/tests/src/Functional/Form/AdminUiTest.php
modules/contrib/views_filter_clear/tests/src/Functional/Form/FilterClearTest.php
modules/contrib/views_filter_clear/views_filter_clear.module

3 files with changes
====================

1) modules/contrib/views_filter_clear/tests/src/Functional/Form/FilterClearTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\views_filter_clear\Functional\Form;

+use Drupal\views\ViewEntityInterface;
 use Drupal\Tests\views\Functional\ViewTestBase;

 /**
@@ @@
   /**
    * The view to test on.
    *
-   * @var \Drupal\views\ViewEntityInterface
+   * @var ViewEntityInterface
    */
   protected $view;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/views_filter_clear/src/Form/ViewsUiFormHelper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_filter_clear\Form;

+use Drupal\views\Plugin\views\HandlerBase;
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;

@@ @@
    *
    * @param array $form
    *   The form definition.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function viewsUiFormAlter(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\HandlerBase $handler */
+    /** @var HandlerBase $handler */
     $handler = $form_state->get('handler');
     if ($handler->canExpose()) {
-      /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $handler */
-
+      /** @var FilterPluginBase $handler */
       // @todo This seems extremely hacky. There is not apparently a way to
       // add options to a handler's `defineOptions` method, but adding it here
       // and in the submit handler below does persist the option through a view
@@ @@
    * Submit handler for the exposed filter settings form.
    */
   public static function submitFilterForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $handler */
+    /** @var FilterPluginBase $handler */
     $handler = $form_state->get('handler');
     $handler->options['expose']['add_clear_link'] = $form_state->getValue(
       ['options', 'expose', 'add_clear_link']
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/views_filter_clear/src/Form/FilterClear.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_filter_clear\Form;

+use Drupal\views\Plugin\views\HandlerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * Constructs the filter clear object.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(RequestStack $request_stack) {
@@ @@
    *
    * @param array $form
    *   The form definition.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addClearLinks(array &$form, FormStateInterface $form_state) {
@@ @@
     $view = $form_state->get('view');
     // @See \Drupal\views\Form\ViewsExposedForm::buildForm
     foreach ($view->display_handler->handlers as $type => $value) {
-      /** @var \Drupal\views\Plugin\views\HandlerBase $handler */
+      /** @var HandlerBase $handler */
       foreach ($view->$type as $id => $handler) {
         if ($handler->canExpose() && $handler->isExposed() && !empty($handler->options['expose']['add_clear_link'])) {
           // Pass the raw url object in so themes can place this elsewhere.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

