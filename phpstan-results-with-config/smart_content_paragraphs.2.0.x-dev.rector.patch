diff --git a/modules/pce_geobrowser/src/Plugin/Derivative/GeobrowserDerivative.php b/modules/pce_geobrowser/src/Plugin/Derivative/GeobrowserDerivative.php
index 7aa3392..ad05b95 100644
--- a/modules/pce_geobrowser/src/Plugin/Derivative/GeobrowserDerivative.php
+++ b/modules/pce_geobrowser/src/Plugin/Derivative/GeobrowserDerivative.php
@@ -44,7 +44,7 @@ class GeobrowserDerivative extends DeriverBase {
    *   Array of Regions.
    */
   public static function getRegionOptions() {
-    $file = fopen(drupal_get_path('module', 'smart_content_paragraphs') . '/data/region_codes.csv', "r");
+    $file = fopen(\Drupal::service('extension.list.module')->getPath('smart_content_paragraphs') . '/data/region_codes.csv', "r");
     $region_codes = [];
     while (!feof($file)) {
       $regions = fgetcsv($file);
diff --git a/src/Controller/ReactionsController.php b/src/Controller/ReactionsController.php
index 9a11619..c345159 100644
--- a/src/Controller/ReactionsController.php
+++ b/src/Controller/ReactionsController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\smart_content_paragraphs\Controller;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\field\FieldConfigInterface;
@@ -31,34 +32,34 @@ class ReactionsController extends ControllerBase {
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * Database service object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Constructor for ReactionsController objects.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity
+   * @param EntityTypeManagerInterface $entity
    *   The Entity type manager service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   Database connectivity.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager service.
    */
   public function __construct(Request $request, EntityTypeManagerInterface $entity_type_manager, Connection $database, EntityFieldManagerInterface $entity_field_manager) {
