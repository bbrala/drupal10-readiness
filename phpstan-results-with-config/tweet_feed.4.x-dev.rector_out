modules/contrib/tweet_feed/src/Commands/TweetFeedCommands.php
modules/contrib/tweet_feed/src/Controller/TweetFeed.php
modules/contrib/tweet_feed/src/Controller/TwitterAccountsController.php
modules/contrib/tweet_feed/src/Controller/TwitterFeedsController.php
modules/contrib/tweet_feed/src/Controller/TwitterOAuth2.php
modules/contrib/tweet_feed/src/Entity/TweetEntity.php
modules/contrib/tweet_feed/src/Entity/TweetEntityInterface.php
modules/contrib/tweet_feed/src/Entity/TweetEntityViewsData.php
modules/contrib/tweet_feed/src/Entity/TwitterProfileEntity.php
modules/contrib/tweet_feed/src/Entity/TwitterProfileEntityInterface.php
modules/contrib/tweet_feed/src/Entity/TwitterProfileEntityViewsData.php
modules/contrib/tweet_feed/src/Form/TweetEntityDeleteForm.php
modules/contrib/tweet_feed/src/Form/TweetEntityForm.php
modules/contrib/tweet_feed/src/Form/TweetEntitySettingsForm.php
modules/contrib/tweet_feed/src/Form/TwitterAccountsDeleteForm.php
modules/contrib/tweet_feed/src/Form/TwitterAccountsForm.php
modules/contrib/tweet_feed/src/Form/TwitterFeedsDeleteForm.php
modules/contrib/tweet_feed/src/Form/TwitterFeedsForm.php
modules/contrib/tweet_feed/src/Form/TwitterProfileDeleteForm.php
modules/contrib/tweet_feed/src/Form/TwitterProfileEntityForm.php
modules/contrib/tweet_feed/src/Form/TwitterProfileEntitySettingsForm.php
modules/contrib/tweet_feed/src/Plugin/Field/FieldFormatter/TweetHTMLFormatterType.php
modules/contrib/tweet_feed/src/Plugin/Field/FieldFormatter/UserMentionsFormatterType.php
modules/contrib/tweet_feed/src/Plugin/Field/FieldType/UserMentionsFieldType.php
modules/contrib/tweet_feed/src/Plugin/Field/FieldWidget/UserMentionsWidgetType.php
modules/contrib/tweet_feed/src/TweetEntityAccessControlHandler.php
modules/contrib/tweet_feed/src/TweetEntityHtmlRouteProvider.php
modules/contrib/tweet_feed/src/TweetEntityListBuilder.php
modules/contrib/tweet_feed/src/TwitterProfileEntityAccessControlHandler.php
modules/contrib/tweet_feed/src/TwitterProfileEntityHtmlRouteProvider.php
modules/contrib/tweet_feed/src/TwitterProfileEntityListBuilder.php
modules/contrib/tweet_feed/tweet_entity.page.inc
modules/contrib/tweet_feed/tweet_feed.install
modules/contrib/tweet_feed/tweet_feed.module

11 files with changes
=====================

1) modules/contrib/tweet_feed/tweet_feed.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\taxonomy\Entity\Term;
+use Drupal\file\Entity\File;
 use Drupal\taxonomy\Entity\Vocabulary;
 use Drupal\Core\Entity\EntityTypeManagerInterface;

@@ @@
         $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid->id());
         if (!empty($terms)) {
           foreach ($terms as $term) {
-            $term = \Drupal\taxonomy\Entity\Term::load($term->tid);
+            $term = Term::load($term->tid);
             $term->delete();
           }
         }
@@ @@
         $files = $entity->get('linked_images')->getValue();
         foreach ($files as $file) {
           $fid = $file['target_id'];
-          $file_image = \Drupal\file\Entity\File::load($fid);
+          $file_image = File::load($fid);
           if ($file_image) {
-            $imageSRC = file_create_url($file_image->getFileUri());
+            $imageSRC = \Drupal::service('file_url_generator')->generateAbsoluteString($file_image->getFileUri());
             $filename = basename($imageSRC);
             if (empty($tweet_image_titles[$filename])) {
               $tweet_image_titles[$filename] = $entity_id;
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


2) modules/contrib/tweet_feed/src/TwitterProfileEntityHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tweet_feed/src/TwitterProfileEntityAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tweet_feed;

+use Drupal\tweet_feed\Entity\TweetEntityInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\tweet_feed\Entity\TweetEntityInterface $entity */
+    /** @var TweetEntityInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'view published tweet entity entities');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/tweet_feed/src/TweetEntityHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tweet_feed/src/TweetEntityAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tweet_feed;

+use Drupal\tweet_feed\Entity\TweetEntityInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\tweet_feed\Entity\TweetEntityInterface $entity */
+    /** @var TweetEntityInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'access content');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/tweet_feed/src/Plugin/Field/FieldFormatter/UserMentionsFormatterType.php:64

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/tweet_feed/src/Plugin/Field/FieldFormatter/TweetHTMLFormatterType.php:62

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/tweet_feed/src/Form/TwitterProfileEntitySettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/tweet_feed/src/Form/TweetEntitySettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/tweet_feed/src/Entity/TweetEntity.php:268

    ---------- begin diff ----------
@@ @@
     foreach ($files as $file) {
       $file_uri = $file->getFileUri();
       // I can't believe this will survive Drupal 9 but there is no deprecation notice on it yet.
-      $urls[] = file_create_url($file_uri);
+      $urls[] = \Drupal::service('file_url_generator')->generateAbsoluteString($file_uri);
     }
     return $urls;
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/tweet_feed/src/Controller/TweetFeed.php:0

    ---------- begin diff ----------
@@ @@
 <?php
 namespace Drupal\tweet_feed\Controller;

+use Drupal\taxonomy\Entity\Term;
 use Drupal\Core\Link;
 use Drush\Log;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
         }
       }
       if (empty($tid)) {
-        $new_term = \Drupal\taxonomy\Entity\Term::create([
+        $new_term = Term::create([
           'vid' => $taxonomy,
           'name' => $taxonomy_name,
         ]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 11 files have been changed by Rector                                      

