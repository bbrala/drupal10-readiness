diff --git a/modules/library_field_entity/src/Access/LibraryFieldEntityAccessHandler.php b/modules/library_field_entity/src/Access/LibraryFieldEntityAccessHandler.php
index 1bd9547..3989b09 100644
--- a/modules/library_field_entity/src/Access/LibraryFieldEntityAccessHandler.php
+++ b/modules/library_field_entity/src/Access/LibraryFieldEntityAccessHandler.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\library_field_entity\Access;
 
+use Drupal\library_field_entity\Entity\LibraryFieldEntityInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
@@ -37,7 +38,7 @@ class LibraryFieldEntityAccessHandler extends EntityAccessControlHandler {
     $operation,
     AccountInterface $account
   ) {
-    /** @var \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $entity */
+    /** @var LibraryFieldEntityInterface $entity */
     $adminPermission = $this->entityType->getAdminPermission();
     if ($account->hasPermission($adminPermission)) {
       return AccessResult::allowed();
diff --git a/modules/library_field_entity/src/Controller/LibraryFieldEntityController.php b/modules/library_field_entity/src/Controller/LibraryFieldEntityController.php
index 27a957c..30c6fb1 100644
--- a/modules/library_field_entity/src/Controller/LibraryFieldEntityController.php
+++ b/modules/library_field_entity/src/Controller/LibraryFieldEntityController.php
@@ -4,6 +4,10 @@ declare(strict_types=1);
 
 namespace Drupal\library_field_entity\Controller;
 
+use Drupal\Core\Entity\RevisionableStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -18,34 +22,34 @@ class LibraryFieldEntityController extends ControllerBase {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Library storage.
    *
-   * @var \Drupal\Core\Entity\RevisionableStorageInterface
+   * @var RevisionableStorageInterface
    */
   protected $libraryStorage;
 
   /**
    * LibraryFieldEntityController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(
     EntityTypeManagerInterface $entityTypeManager,
@@ -91,7 +95,7 @@ class LibraryFieldEntityController extends ControllerBase {
    * @param int|string $library_field_entity_revision
    *   The revision ID.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The title.
    */
   public function revisionTitle($library_field_entity_revision) {
diff --git a/modules/library_field_entity/src/Event/BaseLibraryLifecycleEvent.php b/modules/library_field_entity/src/Event/BaseLibraryLifecycleEvent.php
index b04a2eb..7625340 100644
--- a/modules/library_field_entity/src/Event/BaseLibraryLifecycleEvent.php
+++ b/modules/library_field_entity/src/Event/BaseLibraryLifecycleEvent.php
@@ -4,8 +4,8 @@ declare(strict_types=1);
 
 namespace Drupal\library_field_entity\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\library_field_entity\Entity\LibraryFieldEntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * A Base Library Event.
@@ -15,14 +15,14 @@ abstract class BaseLibraryLifecycleEvent extends Event {
   /**
    * The library entity.
    *
-   * @var \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface
+   * @var LibraryFieldEntityInterface
    */
   protected $library;
 
   /**
    * BaseLibraryLifecycleEvent constructor.
    *
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library entity.
    */
   public function __construct(LibraryFieldEntityInterface $library) {
@@ -32,7 +32,7 @@ abstract class BaseLibraryLifecycleEvent extends Event {
   /**
    * Getter for the Library Entity.
    *
-   * @return \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface
+   * @return LibraryFieldEntityInterface
    *   The library entity.
    */
   public function getLibrary(): LibraryFieldEntityInterface {
diff --git a/modules/library_field_entity/src/EventSubscriber/LibraryLifecycleEventSubscriber.php b/modules/library_field_entity/src/EventSubscriber/LibraryLifecycleEventSubscriber.php
index 74ada15..8a8e45c 100644
--- a/modules/library_field_entity/src/EventSubscriber/LibraryLifecycleEventSubscriber.php
+++ b/modules/library_field_entity/src/EventSubscriber/LibraryLifecycleEventSubscriber.php
@@ -21,23 +21,23 @@ class LibraryLifecycleEventSubscriber implements EventSubscriberInterface {
   /**
    * The library file service.
    *
-   * @var \Drupal\library_field_entity\LibraryFileService
+   * @var LibraryFileService
    */
   protected $fileService;
 
   /**
    * The library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;
 
   /**
    * LibraryLifecycleEventSubscriber constructor.
    *
-   * @param \Drupal\library_field_entity\LibraryFileService $fileService
+   * @param LibraryFileService $fileService
    *   The library file service.
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The library discovery service.
    */
   public function __construct(
@@ -61,7 +61,7 @@ class LibraryLifecycleEventSubscriber implements EventSubscriberInterface {
   /**
    * Handles when a library is approved; writes new files.
    *
-   * @param \Drupal\library_field_entity\Event\LibraryApprovalEvent $event
+   * @param LibraryApprovalEvent $event
    *   The Library approved event.
    */
   public function onApproval(LibraryApprovalEvent $event): void {
@@ -73,7 +73,7 @@ class LibraryLifecycleEventSubscriber implements EventSubscriberInterface {
   /**
    * Handles when a library is removed; removes files.
    *
-   * @param \Drupal\library_field_entity\Event\LibraryDeletionEvent $event
+   * @param LibraryDeletionEvent $event
    *   The library deletion event.
    */
   public function onDeletion(LibraryDeletionEvent $event): void {
@@ -85,7 +85,7 @@ class LibraryLifecycleEventSubscriber implements EventSubscriberInterface {
   /**
    * Clears the Library cache, and asset files.
    *
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library to clear cache for.
    */
   protected function clearCache(LibraryFieldEntityInterface $library): void {
diff --git a/modules/library_field_entity/src/Form/LibraryFieldEntityBeginReviewForm.php b/modules/library_field_entity/src/Form/LibraryFieldEntityBeginReviewForm.php
index d256064..d019d7a 100644
--- a/modules/library_field_entity/src/Form/LibraryFieldEntityBeginReviewForm.php
+++ b/modules/library_field_entity/src/Form/LibraryFieldEntityBeginReviewForm.php
@@ -4,6 +4,8 @@ declare(strict_types=1);
 
 namespace Drupal\library_field_entity\Form;
 
+use Drupal\library_field_entity\Entity\LibraryFieldEntity;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -22,30 +24,30 @@ class LibraryFieldEntityBeginReviewForm extends ConfirmFormBase {
   /**
    * The library entity.
    *
-   * @var \Drupal\library_field_entity\Entity\LibraryFieldEntity
+   * @var LibraryFieldEntity
    */
   protected $library;
 
   /**
    * The Library Field Entity settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * LibraryFieldEntityBeginReviewForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The Configuration Factory.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The Time service.
    */
   public function __construct(
@@ -125,12 +127,12 @@ class LibraryFieldEntityBeginReviewForm extends ConfirmFormBase {
   /**
    * Access handler for this form.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user accessing the form.
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library_field_entity
+   * @param LibraryFieldEntityInterface $library_field_entity
    *   The library entity.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function access(
diff --git a/modules/library_field_entity/src/Form/LibraryFieldEntityForm.php b/modules/library_field_entity/src/Form/LibraryFieldEntityForm.php
index 92beb97..4abb2d6 100644
--- a/modules/library_field_entity/src/Form/LibraryFieldEntityForm.php
+++ b/modules/library_field_entity/src/Form/LibraryFieldEntityForm.php
@@ -4,6 +4,11 @@ declare(strict_types=1);
 
 namespace Drupal\library_field_entity\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\library_field_entity\Entity\LibraryFieldEntity;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\ContentEntityForm;
@@ -27,33 +32,33 @@ class LibraryFieldEntityForm extends ContentEntityForm {
   /**
    * The library entity settings config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The Library storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $libraryStorage;
 
   /**
    * LibraryFieldEntityForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface|null $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface|null $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Component\Datetime\TimeInterface|null $time
+   * @param TimeInterface|null $time
    *   The time service.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(
     EntityRepositoryInterface $entity_repository,
@@ -85,7 +90,7 @@ class LibraryFieldEntityForm extends ContentEntityForm {
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
     $form = parent::buildForm($form, $form_state);
-    /** @var \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $entity */
+    /** @var LibraryFieldEntityInterface $entity */
     $entity = $this->entity;
 
     $form['revision_log']['#weight'] = 40;
@@ -117,7 +122,7 @@ class LibraryFieldEntityForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $entity */
+    /** @var LibraryFieldEntityInterface $entity */
     $entity = $this->entity;
     $name = $form_state->getValue([static::NAME_FIELD, 0, 'value']);
     if ($entity->isNew()) {
@@ -155,7 +160,7 @@ class LibraryFieldEntityForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\library_field_entity\Entity\LibraryFieldEntity $entity */
+    /** @var LibraryFieldEntity $entity */
     $entity = $this->entity;
     $currentUserId = (int) $this->currentUser()->id();
     $entity
diff --git a/modules/library_field_entity/src/Form/LibraryFieldEntityReviewForm.php b/modules/library_field_entity/src/Form/LibraryFieldEntityReviewForm.php
index f7d9837..2e56874 100644
--- a/modules/library_field_entity/src/Form/LibraryFieldEntityReviewForm.php
+++ b/modules/library_field_entity/src/Form/LibraryFieldEntityReviewForm.php
@@ -4,6 +4,8 @@ declare(strict_types=1);
 
 namespace Drupal\library_field_entity\Form;
 
+use Drupal\library_field_entity\Entity\LibraryFieldEntity;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -24,48 +26,48 @@ class LibraryFieldEntityReviewForm extends FormBase {
   /**
    * The library entity.
    *
-   * @var \Drupal\library_field_entity\Entity\LibraryFieldEntity
+   * @var LibraryFieldEntity
    */
   protected $library;
 
   /**
    * The library configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $dispatcher;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * LibraryFieldEntityReviewForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(
@@ -143,7 +145,7 @@ class LibraryFieldEntityReviewForm extends FormBase {
       $this->library
         ->setRecentApprovedRevision((int) $this->library->getRevisionId())
         ->save();
-      $this->dispatcher->dispatch(LibraryApprovalEvent::NAME, new LibraryApprovalEvent($this->library));
+      $this->dispatcher->dispatch(new LibraryApprovalEvent($this->library), LibraryApprovalEvent::NAME);
       $this->messenger()->addMessage(
         $this->t(
           "Successfully approved and activated Library: @name",
@@ -172,12 +174,12 @@ class LibraryFieldEntityReviewForm extends FormBase {
   /**
    * The access handler.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account checking access to form.
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library_field_entity
+   * @param LibraryFieldEntityInterface $library_field_entity
    *   The library field entity.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function access(
diff --git a/modules/library_field_entity/src/LibraryBuilderService.php b/modules/library_field_entity/src/LibraryBuilderService.php
index b9f3e19..17b5892 100644
--- a/modules/library_field_entity/src/LibraryBuilderService.php
+++ b/modules/library_field_entity/src/LibraryBuilderService.php
@@ -4,6 +4,10 @@ declare(strict_types=1);
 
 namespace Drupal\library_field_entity;
 
+use Drupal\Core\Entity\RevisionableStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\library_field_entity\Entity\LibraryFieldEntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 
 /**
@@ -21,7 +25,7 @@ class LibraryBuilderService {
   /**
    * Library storage.
    *
-   * @var \Drupal\Core\Entity\RevisionableStorageInterface
+   * @var RevisionableStorageInterface
    */
   protected $libraryStorage;
 
@@ -30,11 +34,11 @@ class LibraryBuilderService {
    *
    * @param LibraryFileService $fileService
    *   The library file service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(LibraryFileService $fileService, EntityTypeManagerInterface $entityTypeManager) {
     $this->fileService = $fileService;
@@ -48,7 +52,7 @@ class LibraryBuilderService {
     $libraries = [];
     $allLibraries = $this->libraryStorage->loadMultiple();
     foreach ($allLibraries as $library) {
-      /** @var \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library */
+      /** @var LibraryFieldEntityInterface $library */
       if (!$library->isApproved() && empty($library->getRecentApprovedRevision())) {
         continue;
       }
@@ -56,7 +60,7 @@ class LibraryBuilderService {
         $libraries[$library->getName()] = $this->fileService->getLibraryInfo($library);
       }
       else {
-        /** @var \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $currentActiveLibrary */
+        /** @var LibraryFieldEntityInterface $currentActiveLibrary */
         $currentActiveLibrary = $this->libraryStorage->loadRevision($library->getRecentApprovedRevision());
         if (empty($currentActiveLibrary)) {
           return [];
diff --git a/modules/library_field_entity/src/LibraryFileService.php b/modules/library_field_entity/src/LibraryFileService.php
index 177d251..0aa3ff5 100644
--- a/modules/library_field_entity/src/LibraryFileService.php
+++ b/modules/library_field_entity/src/LibraryFileService.php
@@ -33,14 +33,14 @@ class LibraryFileService {
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The library service.
    *
-   * @var \Drupal\library_field\LibraryService
+   * @var LibraryService
    */
   protected $libraryService;
 
@@ -54,9 +54,9 @@ class LibraryFileService {
   /**
    * LibraryFileService constructor.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   File system.
-   * @param \Drupal\library_field\LibraryService $libraryService
+   * @param LibraryService $libraryService
    *   Library service.
    * @param string $appRoot
    *   Application root.
@@ -84,7 +84,7 @@ class LibraryFileService {
   /**
    * Writes and removes library files based on entity passed.
    *
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   Library entity.
    */
   public function writeLibraryFiles(LibraryFieldEntityInterface $library): void {
@@ -120,7 +120,7 @@ class LibraryFileService {
    *
    * @param string $type
    *   The asset type to delete.
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library entity to execute file deletion.
    */
   protected function deleteLibraryFile(string $type, LibraryFieldEntityInterface $library): void {
@@ -131,7 +131,7 @@ class LibraryFileService {
   /**
    * Deletes all assets associated with a library entity.
    *
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library entity to execute file deletion.
    */
   public function deleteAllLibraryFiles(LibraryFieldEntityInterface $library): void {
@@ -145,7 +145,7 @@ class LibraryFileService {
    *
    * @param string $type
    *   The asset type.
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library entity.
    * @param string $base
    *   The base path.
@@ -169,7 +169,7 @@ class LibraryFileService {
    *
    * @param string $type
    *   The asset type.
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library entity.
    *
    * @return string
@@ -188,7 +188,7 @@ class LibraryFileService {
    *
    * @param string $type
    *   The asset type.
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library entity.
    *
    * @return string
@@ -205,7 +205,7 @@ class LibraryFileService {
   /**
    * Builds the library information needed for library build info hook.
    *
-   * @param \Drupal\library_field_entity\Entity\LibraryFieldEntityInterface $library
+   * @param LibraryFieldEntityInterface $library
    *   The library entity.
    *
    * @return array
diff --git a/src/Controller/LibrariesController.php b/src/Controller/LibrariesController.php
index 809d6ee..680581a 100644
--- a/src/Controller/LibrariesController.php
+++ b/src/Controller/LibrariesController.php
@@ -19,14 +19,14 @@ class LibrariesController extends ControllerBase {
   /**
    * The library service.
    *
-   * @var \Drupal\library_field\LibraryService
+   * @var LibraryService
    */
   protected $libraryService;
 
   /**
    * LibrariesController constructor.
    *
-   * @param \Drupal\library_field\LibraryService $libraryService
+   * @param LibraryService $libraryService
    *   The library service.
    */
   public function __construct(LibraryService $libraryService) {
@@ -80,7 +80,7 @@ class LibrariesController extends ControllerBase {
   /**
    * Endpoint for getting all libraries as JSON response.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The libraries JSON response.
    */
   public function listLibraries(): JsonResponse {
diff --git a/src/LibraryService.php b/src/LibraryService.php
index 70fd5a3..28a4a93 100644
--- a/src/LibraryService.php
+++ b/src/LibraryService.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\library_field;
 
+use Drupal\Core\Extension\Extension;
 use Drupal\Core\Asset\LibraryDiscoveryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
@@ -45,21 +46,21 @@ class LibraryService {
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;
 
@@ -73,11 +74,11 @@ class LibraryService {
   /**
    * LibraryService constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $themeHandler
+   * @param ThemeHandlerInterface $themeHandler
    *   The theme handler.
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The library discovery service.
    */
   public function __construct(
@@ -123,7 +124,7 @@ class LibraryService {
     foreach ($this::getLibraryTypes() as $type) {
       $libraries[$type] = [];
     }
-    /** @var \Drupal\Core\Extension\Extension[] $extensions */
+    /** @var Extension[] $extensions */
     $extensions = array_merge(
       $this->moduleHandler->getModuleList(),
       $this->themeHandler->rebuildThemeData()
@@ -236,7 +237,7 @@ class LibraryService {
    * @param string $type
    *   The library type to get the label for.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The label of the library type.
    */
   public function getLibraryTypeReadable(string $type): TranslatableMarkup {
diff --git a/src/Plugin/Field/FieldFormatter/LibraryFormatter.php b/src/Plugin/Field/FieldFormatter/LibraryFormatter.php
index e3ddcde..6087eef 100644
--- a/src/Plugin/Field/FieldFormatter/LibraryFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/LibraryFormatter.php
@@ -28,7 +28,7 @@ class LibraryFormatter extends FormatterBase {
   /**
    * The library service.
    *
-   * @var \Drupal\library_field\LibraryService
+   * @var LibraryService
    */
   protected $libraryService;
 
@@ -39,7 +39,7 @@ class LibraryFormatter extends FormatterBase {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -49,7 +49,7 @@ class LibraryFormatter extends FormatterBase {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\library_field\LibraryService $libraryService
+   * @param LibraryService $libraryService
    *   The library service.
    */
   public function __construct(
diff --git a/src/Plugin/Field/FieldWidget/LibraryWidget.php b/src/Plugin/Field/FieldWidget/LibraryWidget.php
index 8c3d74b..3391a15 100644
--- a/src/Plugin/Field/FieldWidget/LibraryWidget.php
+++ b/src/Plugin/Field/FieldWidget/LibraryWidget.php
@@ -35,14 +35,14 @@ class LibraryWidget extends WidgetBase {
   /**
    * The library service.
    *
-   * @var \Drupal\library_field\LibraryService
+   * @var LibraryService
    */
   protected $libraryService;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -53,15 +53,15 @@ class LibraryWidget extends WidgetBase {
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\library_field\LibraryService $libraryService
+   * @param LibraryService $libraryService
    *   The library service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
    */
   public function __construct(
@@ -202,7 +202,7 @@ class LibraryWidget extends WidgetBase {
    *
    * @param array $element
    *   The element to validate.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validate(array $element, FormStateInterface $form_state): void {
