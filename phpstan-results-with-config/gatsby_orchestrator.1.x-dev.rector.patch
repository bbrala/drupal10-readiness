diff --git a/modules/gatsby_deploy/src/Controller/GatsbyDeployEventListener.php b/modules/gatsby_deploy/src/Controller/GatsbyDeployEventListener.php
index 1956fbd..2e7e5b0 100644
--- a/modules/gatsby_deploy/src/Controller/GatsbyDeployEventListener.php
+++ b/modules/gatsby_deploy/src/Controller/GatsbyDeployEventListener.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\gatsby_deploy\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,23 +22,23 @@ class GatsbyDeployEventListener extends ControllerBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, Request $request) {
@@ -63,8 +65,8 @@ class GatsbyDeployEventListener extends ControllerBase {
    *   In case we found a matching frontend environment the ID of the frontend
    *   environment will be return.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getFrontendEnvironmentFromSecretKey() {
     $payload = json_decode($this->request->getContent());
@@ -97,8 +99,8 @@ class GatsbyDeployEventListener extends ControllerBase {
   /**
    * Creating records.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function build() {
     $environment_id = $this->getFrontendEnvironmentFromSecretKey();
diff --git a/modules/gatsby_revisions/gatsby_revisions.module b/modules/gatsby_revisions/gatsby_revisions.module
index 9e766c3..76aa886 100644
--- a/modules/gatsby_revisions/gatsby_revisions.module
+++ b/modules/gatsby_revisions/gatsby_revisions.module
@@ -1,14 +1,16 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Url;
 /**
  * @file
  * Primary module hooks for Gatsby Revisions module.
  */
-
 /**
  * Implements hook_entity_view_alter().
  */
-function gatsby_revisions_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
+function gatsby_revisions_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
 
   if ($entity->getEntityTypeId() != 'gatsby_revision') {
     return;
@@ -31,7 +33,7 @@ function gatsby_revisions_entity_view_alter(array &$build, Drupal\Core\Entity\En
     'revert' => [
       '#type' => 'link',
       '#title' => 'Revert to this revision',
-      '#url' => \Drupal\Core\Url::fromRoute('gatsby_revisions.revert_to_revision', ['gatsby_revision' => $entity->id()]),
+      '#url' => Url::fromRoute('gatsby_revisions.revert_to_revision', ['gatsby_revision' => $entity->id()]),
 
       '#attributes' => [
         'class' => 'button button--primary',
diff --git a/modules/gatsby_revisions/src/Controller/GatsbyRevisionEventsListener.php b/modules/gatsby_revisions/src/Controller/GatsbyRevisionEventsListener.php
index 05bae96..f26b27d 100644
--- a/modules/gatsby_revisions/src/Controller/GatsbyRevisionEventsListener.php
+++ b/modules/gatsby_revisions/src/Controller/GatsbyRevisionEventsListener.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gatsby_revisions\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Session\AccountInterface;
@@ -20,7 +21,7 @@ class GatsbyRevisionEventsListener extends ControllerBase {
   /**
    * The event plugin manager.
    *
-   * @var \Drupal\gatsby_orchestrator\GatsbyEventListenerPluginManager
+   * @var GatsbyEventListenerPluginManager
    */
   protected $eventPluginManager;
 
@@ -34,7 +35,7 @@ class GatsbyRevisionEventsListener extends ControllerBase {
   /**
    * GatsbyRevisionEventsListener constructor.
    *
-   * @param \Drupal\gatsby_orchestrator\GatsbyEventListenerPluginManager $event_plugin_manager
+   * @param GatsbyEventListenerPluginManager $event_plugin_manager
    *   The gatsby orchestrator plugin manager.
    */
   public function __construct(GatsbyEventListenerPluginManager $event_plugin_manager) {
@@ -44,10 +45,10 @@ class GatsbyRevisionEventsListener extends ControllerBase {
   /**
    * Custom access callback.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $account) {
diff --git a/modules/gatsby_revisions/src/Controller/GatsbyRevisionsSyncRevisions.php b/modules/gatsby_revisions/src/Controller/GatsbyRevisionsSyncRevisions.php
index ab12985..43449ca 100644
--- a/modules/gatsby_revisions/src/Controller/GatsbyRevisionsSyncRevisions.php
+++ b/modules/gatsby_revisions/src/Controller/GatsbyRevisionsSyncRevisions.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\gatsby_revisions\Controller;
 
+use Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsQuery;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Url;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\gatsby_orchestrator\GatsbyOrchestratePluginManager;
@@ -16,17 +18,17 @@ class GatsbyRevisionsSyncRevisions extends ControllerBase {
   /**
    * The gatsby revision query plugin object.
    *
-   * @var \Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsQuery
+   * @var GatsbyRevisionsQuery
    */
   protected $getRevisionsQuery;
 
   /**
    * GatsbyRevisionsSyncRevisions constructor.
    *
-   * @param \Drupal\gatsby_orchestrator\GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager
+   * @param GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager
    *   The gatsby orchestrator plugin service.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function __construct(GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager) {
     $this->getRevisionsQuery = $gatsby_orchestrator_plugin_manager->createInstance('get_revisions');
diff --git a/modules/gatsby_revisions/src/Form/GatsbyRevisionForm.php b/modules/gatsby_revisions/src/Form/GatsbyRevisionForm.php
index f842817..9aa82a9 100644
--- a/modules/gatsby_revisions/src/Form/GatsbyRevisionForm.php
+++ b/modules/gatsby_revisions/src/Form/GatsbyRevisionForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gatsby_revisions\Form;
 
+use Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionCreate;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Entity\EntityRepositoryInterface;
@@ -20,29 +21,29 @@ class GatsbyRevisionForm extends ContentEntityForm {
   /**
    * The gatsby health service.
    *
-   * @var \Drupal\gatsby_orchestrator\GatsbyOrchestratorGatsbyHealth
+   * @var GatsbyOrchestratorGatsbyHealth
    */
   protected $gatsbyHealth;
 
   /**
    * The revision plugin object.
    *
-   * @var \Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionCreate
+   * @var GatsbyRevisionCreate
    */
   protected $revisionPlugin;
 
   /**
    * GatsbyRevisionForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\gatsby_orchestrator\GatsbyOrchestratorGatsbyHealth $gatsby_health
+   * @param GatsbyOrchestratorGatsbyHealth $gatsby_health
    *   The gatsby health object.
-   * @param \Drupal\gatsby_orchestrator\GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager
+   * @param GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager
    *   The gatsby orchestrate plugin.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface|null $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface|null $entity_type_bundle_info
    *   The entity type bundle interface service.
-   * @param \Drupal\Component\Datetime\TimeInterface|null $time
+   * @param TimeInterface|null $time
    *   The time interface service.
    */
   public function __construct(
@@ -103,7 +104,7 @@ class GatsbyRevisionForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New gatsby revision %label has been created.', $message_arguments));
diff --git a/modules/gatsby_revisions/src/Form/RevertRevision.php b/modules/gatsby_revisions/src/Form/RevertRevision.php
index 5552c76..d86a641 100644
--- a/modules/gatsby_revisions/src/Form/RevertRevision.php
+++ b/modules/gatsby_revisions/src/Form/RevertRevision.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\gatsby_revisions\Form;
 
+use Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsRevert;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\gatsby_revisions\Entity\GatsbyRevision;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -17,26 +20,26 @@ class RevertRevision extends ConfirmFormBase {
   /**
    * The revert revision plugin.
    *
-   * @var \Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsRevert
+   * @var GatsbyRevisionsRevert
    */
   protected $revertRevision;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * RevertRevision constructor.
    *
-   * @param \Drupal\gatsby_orchestrator\GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager
+   * @param GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager
    *   The gatsby orchestrator plugin manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function __construct(GatsbyOrchestratePluginManager $gatsby_orchestrator_plugin_manager, EntityTypeManagerInterface $entity_type_manager) {
     $this->revertRevision = $gatsby_orchestrator_plugin_manager->createInstance('revert_revision');
@@ -80,7 +83,7 @@ class RevertRevision extends ConfirmFormBase {
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $gatsby_revision = \Drupal::request()->attributes->get('gatsby_revision');
 
-    /** @var \Drupal\gatsby_revisions\Entity\GatsbyRevision $gatsby_revision */
+    /** @var GatsbyRevision $gatsby_revision */
     $gatsby_revision = $this->entityTypeManager->getStorage('gatsby_revision')->load($gatsby_revision);
 
     $response = $this
diff --git a/modules/gatsby_revisions/src/GatsbyRevisionListBuilder.php b/modules/gatsby_revisions/src/GatsbyRevisionListBuilder.php
index 4614a53..99b00c2 100644
--- a/modules/gatsby_revisions/src/GatsbyRevisionListBuilder.php
+++ b/modules/gatsby_revisions/src/GatsbyRevisionListBuilder.php
@@ -21,36 +21,36 @@ class GatsbyRevisionListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * The current account of the user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentAccount;
 
   /**
    * Constructs a new GatsbyRevisionListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $currect_account
+   * @param AccountProxyInterface $currect_account
    *   The account service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination, AccountProxyInterface $currect_account) {
diff --git a/modules/gatsby_revisions/src/Plugin/GatsbyEventListener/GatsbyRevisionCreation.php b/modules/gatsby_revisions/src/Plugin/GatsbyEventListener/GatsbyRevisionCreation.php
index ee82553..906a47f 100644
--- a/modules/gatsby_revisions/src/Plugin/GatsbyEventListener/GatsbyRevisionCreation.php
+++ b/modules/gatsby_revisions/src/Plugin/GatsbyEventListener/GatsbyRevisionCreation.php
@@ -35,7 +35,7 @@ class GatsbyRevisionCreation extends GatsbyEventListenerPluginBase {
       return;
     }
 
-    /** @var \Drupal\gatsby_revisions\Entity\GatsbyRevision $gatsby_revision */
+    /** @var GatsbyRevision $gatsby_revision */
     $gatsby_revision = $storage->load(reset($gatsby_revision_ids));
 
     if ($payload->status == 'succeeded') {
diff --git a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionCreateTest.php b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionCreateTest.php
index 32f0d5e..f6290d1 100644
--- a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionCreateTest.php
+++ b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionCreateTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\gatsby_revisions\Kernel;
 
+use Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionCreate;
 use Drupal\gatsby_orchestrator\GatsbyOrchestratorGatsbyHealth;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\gatsby_orchestrator\Kernel\GatsbyOrchestrateMockObjectsHelper;
@@ -33,14 +34,14 @@ class GatsbyRevisionCreateTest extends KernelTestBase {
   /**
    * The plugin handler for creating revision.
    *
-   * @var \Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionCreate
+   * @var GatsbyRevisionCreate
    */
   protected $revisionCreateHandler;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('gatsby_revision');
@@ -130,7 +131,7 @@ class GatsbyRevisionCreateTest extends KernelTestBase {
       ->setHttpClient($client)
       ->orchestrate();
 
-    $this->assertEqual(12345, $response);
+    $this->assertEquals(12345, $response);
   }
 
 }
diff --git a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionEventListenerTest.php b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionEventListenerTest.php
index 23e9d2b..0e841d7 100644
--- a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionEventListenerTest.php
+++ b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionEventListenerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\gatsby_revisions\Kernel;
 
+use Drupal\gatsby_orchestrator\GatsbyEventListenerPluginBase;
 use Drupal\gatsby_revisions\Entity\GatsbyRevision;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\gatsby_orchestrator\Kernel\GatsbyOrchestrateMockObjectsHelper;
@@ -27,14 +28,14 @@ class GatsbyRevisionEventListenerTest extends KernelTestBase {
   /**
    * The event listener plugin.
    *
-   * @var \Drupal\gatsby_orchestrator\GatsbyEventListenerPluginBase
+   * @var GatsbyEventListenerPluginBase
    */
   protected $revisionCreationHandler;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('gatsby_revision');
 
diff --git a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsQueryTest.php b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsQueryTest.php
index 951c124..fbad319 100644
--- a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsQueryTest.php
+++ b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsQueryTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\gatsby_revisions\Kernel;
 
+use Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsQuery;
 use Drupal\gatsby_orchestrator\GatsbyOrchestratorGatsbyHealth;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\gatsby_orchestrator\Kernel\GatsbyOrchestrateMockObjectsHelper;
@@ -33,14 +34,14 @@ class GatsbyRevisionsQueryTest extends KernelTestBase {
   /**
    * The revision query object.
    *
-   * @var \Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsQuery
+   * @var GatsbyRevisionsQuery
    */
   protected $revisionQueryHandler;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('gatsby_revision');
@@ -131,7 +132,7 @@ class GatsbyRevisionsQueryTest extends KernelTestBase {
       ->setHttpClient($client)
       ->orchestrate();
 
-    $this->assertEqual('bar', $response->foo);
+    $this->assertEquals('bar', $response->foo);
   }
 
 }
diff --git a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsRevertTest.php b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsRevertTest.php
index 89db7ce..34878b8 100644
--- a/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsRevertTest.php
+++ b/modules/gatsby_revisions/tests/src/Kernel/GatsbyRevisionsRevertTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\gatsby_revisions\Kernel;
 
+use Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsRevert;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\gatsby_orchestrator\Kernel\GatsbyOrchestrateMockObjectsHelper;
 use GuzzleHttp\Client;
@@ -32,14 +33,14 @@ class GatsbyRevisionsRevertTest extends KernelTestBase {
   /**
    * The revision revert handler.
    *
-   * @var \Drupal\gatsby_revisions\Plugin\GatsbyOrchestrate\GatsbyRevisionsRevert
+   * @var GatsbyRevisionsRevert
    */
   protected $revisionRevertHandler;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('gatsby_revision');
@@ -110,7 +111,7 @@ class GatsbyRevisionsRevertTest extends KernelTestBase {
       ->setHttpClient($client)
       ->orchestrate();
 
-    $this->assertEqual('bar', $response->foo);
+    $this->assertEquals('bar', $response->foo);
   }
 
 }
diff --git a/src/Annotation/GatsbyEventListener.php b/src/Annotation/GatsbyEventListener.php
index c27d5e4..1709bd6 100644
--- a/src/Annotation/GatsbyEventListener.php
+++ b/src/Annotation/GatsbyEventListener.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gatsby_orchestrator\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class GatsbyEventListener extends Plugin {
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +31,7 @@ class GatsbyEventListener extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/GatsbyOrchestrate.php b/src/Annotation/GatsbyOrchestrate.php
index b711f65..046c2ce 100644
--- a/src/Annotation/GatsbyOrchestrate.php
+++ b/src/Annotation/GatsbyOrchestrate.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gatsby_orchestrator\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class GatsbyOrchestrate extends Plugin {
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +31,7 @@ class GatsbyOrchestrate extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/GatsbyEventListenerPluginBase.php b/src/GatsbyEventListenerPluginBase.php
index 1561b91..37300e8 100644
--- a/src/GatsbyEventListenerPluginBase.php
+++ b/src/GatsbyEventListenerPluginBase.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\gatsby_orchestrator;
 
+use Psr\Log\LoggerInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Logger\LoggerChannelFactory;
@@ -16,14 +20,14 @@ abstract class GatsbyEventListenerPluginBase extends PluginBase implements Gatsb
   /**
    * The logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Setting the logger service.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The mock service.
    *
    * @return GatsbyEventListenerPluginBase
@@ -38,7 +42,7 @@ abstract class GatsbyEventListenerPluginBase extends PluginBase implements Gatsb
   /**
    * The type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -51,9 +55,9 @@ abstract class GatsbyEventListenerPluginBase extends PluginBase implements Gatsb
    *   The plugin ID.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager object.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_channel
+   * @param LoggerChannelFactory $logger_channel
    *   The logger object.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager, LoggerChannelFactory $logger_channel) {
@@ -93,9 +97,9 @@ abstract class GatsbyEventListenerPluginBase extends PluginBase implements Gatsb
    * @return null
    *   In case something went wrong a null will be returned.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   abstract public function handle($payload);
 
diff --git a/src/GatsbyEventListenerPluginManager.php b/src/GatsbyEventListenerPluginManager.php
index a6c6a80..c618a6f 100644
--- a/src/GatsbyEventListenerPluginManager.php
+++ b/src/GatsbyEventListenerPluginManager.php
@@ -17,9 +17,9 @@ class GatsbyEventListenerPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/GatsbyOrchestratePluginBase.php b/src/GatsbyOrchestratePluginBase.php
index 3e4540b..36286c7 100644
--- a/src/GatsbyOrchestratePluginBase.php
+++ b/src/GatsbyOrchestratePluginBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gatsby_orchestrator;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Messenger\MessengerInterface;
 use GuzzleHttp\Client;
@@ -18,21 +19,21 @@ abstract class GatsbyOrchestratePluginBase extends PluginBase implements GatsbyO
   /**
    * The gatsby settings factory.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   protected $gatsbySettings;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * The http client service.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -46,7 +47,7 @@ abstract class GatsbyOrchestratePluginBase extends PluginBase implements GatsbyO
   /**
    * Setting the messenger service.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger object.
    *
    * @return GatsbyOrchestratePluginBase
@@ -61,7 +62,7 @@ abstract class GatsbyOrchestratePluginBase extends PluginBase implements GatsbyO
   /**
    * Setting the client service.
    *
-   * @param \GuzzleHttp\Client $httpClient
+   * @param Client $httpClient
    *   The client object.
    *
    * @return GatsbyOrchestratePluginBase
@@ -91,7 +92,7 @@ abstract class GatsbyOrchestratePluginBase extends PluginBase implements GatsbyO
   /**
    * Setting the gatsby settings.
    *
-   * @param \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig $gatsbySettings
+   * @param Config|ImmutableConfig $gatsbySettings
    *   The gatsby settings object.
    *
    * @return GatsbyOrchestratePluginBase
@@ -112,11 +113,11 @@ abstract class GatsbyOrchestratePluginBase extends PluginBase implements GatsbyO
    *   The plugin ID.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factor service.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The messenger service.
-   * @param \GuzzleHttp\Client $http_client
+   * @param Client $http_client
    *   The http client service.
    * @param GatsbyOrchestratorGatsbyHealth $gatsby_health
    *   The gatsby health service.
diff --git a/src/GatsbyOrchestratePluginManager.php b/src/GatsbyOrchestratePluginManager.php
index e751ff0..8c93a58 100644
--- a/src/GatsbyOrchestratePluginManager.php
+++ b/src/GatsbyOrchestratePluginManager.php
@@ -17,9 +17,9 @@ class GatsbyOrchestratePluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/GatsbyOrchestratorGatsbyHealth.php b/src/GatsbyOrchestratorGatsbyHealth.php
index 523c579..a809860 100644
--- a/src/GatsbyOrchestratorGatsbyHealth.php
+++ b/src/GatsbyOrchestratorGatsbyHealth.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\gatsby_orchestrator;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use GuzzleHttp\ClientInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -25,32 +27,32 @@ class GatsbyOrchestratorGatsbyHealth {
   /**
    * The gatsby setting config factory.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   protected $gatsbySettings;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * GatsbyRevisionGatsbyHealth constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger object.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The client object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MessengerInterface $messenger, ClientInterface $http_client) {
@@ -62,7 +64,7 @@ class GatsbyOrchestratorGatsbyHealth {
   /**
    * Set the http client.
    *
-   * @param \GuzzleHttp\ClientInterface $httpClient
+   * @param ClientInterface $httpClient
    *   The http client.
    */
   public function setHttpClient(ClientInterface $httpClient) {
@@ -74,7 +76,7 @@ class GatsbyOrchestratorGatsbyHealth {
   /**
    * Setting the settings service.
    *
-   * @param \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig $gatsbySettings
+   * @param Config|ImmutableConfig $gatsbySettings
    *   The replacement.
    *
    * @retrn GatsbyOrchestratorGatsbyHealth
@@ -89,7 +91,7 @@ class GatsbyOrchestratorGatsbyHealth {
   /**
    * Setting the messenger service.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger object.
    *
    * @return GatsbyOrchestratorGatsbyHealth
diff --git a/tests/src/Kernel/GatsbyOrchestrateMockObjectsHelper.php b/tests/src/Kernel/GatsbyOrchestrateMockObjectsHelper.php
index fe80c9f..6c238ac 100644
--- a/tests/src/Kernel/GatsbyOrchestrateMockObjectsHelper.php
+++ b/tests/src/Kernel/GatsbyOrchestrateMockObjectsHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\gatsby_orchestrator\Kernel;
 
+use PHPUnit\Framework\MockObject\MockObject;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Messenger\Messenger;
@@ -19,42 +21,39 @@ trait GatsbyOrchestrateMockObjectsHelper {
   /**
    * The mocked messenger object.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Messenger\Messenger
+   * @var MockObject|Messenger
    */
   public $messengerMock;
 
   /**
    * The gatsby service mock.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject|GatsbyOrchestratorGatsbyHealth
+   * @var MockObject|GatsbyOrchestratorGatsbyHealth
    */
   public $gatsbyHealthMock;
 
   /**
    * The gatsby settings mock.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Config\Config
+   * @var MockObject|Config
    */
   public $gatsbySettingsMock;
 
   /**
    * The mocked logger service.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject|\Psr\Log\LoggerInterface
+   * @var MockObject|LoggerInterface
    */
   protected $loggerMock;
 
   /**
    * Set the gatsby health mock object.
    *
-   * @return \Drupal\gatsby_orchestrator\GatsbyOrchestratorGatsbyHealth|\PHPUnit\Framework\MockObject\MockObject
+   * @return GatsbyOrchestratorGatsbyHealth|MockObject
    *   The mock object.
    */
   public function getAndSetGatsbyHealthMock() {
-    $this->gatsbyHealthMock = $this
-      ->getMockBuilder(GatsbyOrchestratorGatsbyHealth::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->gatsbyHealthMock = $this->createMock(GatsbyOrchestratorGatsbyHealth::class);
 
     return $this->gatsbyHealthMock;
   }
@@ -62,14 +61,11 @@ trait GatsbyOrchestrateMockObjectsHelper {
   /**
    * Set the gatsby settings mock.
    *
-   * @return \Drupal\Core\Config\Config|\PHPUnit\Framework\MockObject\MockObject
+   * @return Config|MockObject
    *   The mock object.
    */
   public function getAndSetGatsbySettingsMock() {
-    $this->gatsbySettingsMock = $this
-      ->getMockBuilder(Config::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->gatsbySettingsMock = $this->createMock(Config::class);
 
     return $this->gatsbySettingsMock;
   }
@@ -77,14 +73,11 @@ trait GatsbyOrchestrateMockObjectsHelper {
   /**
    * Set the messenger mock.
    *
-   * @return \Drupal\Core\Messenger\Messenger|\PHPUnit\Framework\MockObject\MockObject
+   * @return Messenger|MockObject
    *   The mock object.
    */
   public function getAndSetMessengerMock() {
-    $this->messengerMock = $this
-      ->getMockBuilder(Messenger::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->messengerMock = $this->createMock(Messenger::class);
 
     return $this->messengerMock;
   }
@@ -92,13 +85,11 @@ trait GatsbyOrchestrateMockObjectsHelper {
   /**
    * Get the mock of the logger service.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject|\Drupal\Core\Logger\LoggerChannelInterface
+   * @return MockObject|LoggerChannelInterface
    *   The mocked log object.
    */
   public function getAndSetLoggerMock() {
-    $this->loggerMock = $this
-      ->getMockBuilder(LoggerChannelInterface::class)
-      ->getMock();
+    $this->loggerMock = $this->createMock(LoggerChannelInterface::class);
 
     return $this->loggerMock;
   }
diff --git a/tests/src/Kernel/GatsbyOrchestratorGatsbyHealthTest.php b/tests/src/Kernel/GatsbyOrchestratorGatsbyHealthTest.php
index cf70e4f..e0802eb 100644
--- a/tests/src/Kernel/GatsbyOrchestratorGatsbyHealthTest.php
+++ b/tests/src/Kernel/GatsbyOrchestratorGatsbyHealthTest.php
@@ -29,14 +29,14 @@ class GatsbyOrchestratorGatsbyHealthTest extends KernelTestBase {
   /**
    * The gatsby health.
    *
-   * @var \Drupal\gatsby_orchestrator\GatsbyOrchestratorGatsbyHealth
+   * @var GatsbyOrchestratorGatsbyHealth
    */
   protected $gatsbyHealth;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $mock = new MockHandler([
