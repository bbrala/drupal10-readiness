diff --git a/livestorm.info.yml b/livestorm.info.yml
index 6b7f170..af52882 100644
--- a/livestorm.info.yml
+++ b/livestorm.info.yml
@@ -1,7 +1,6 @@
 name: 'Livestorm'
 description: 'Provides a webhook integration with Livestorm'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 type: module
 package: Livestorm
 configure: livestorm.admin
diff --git a/src/Controller/LivestormWebhookController.php b/src/Controller/LivestormWebhookController.php
index 66a98f3..2cc9432 100644
--- a/src/Controller/LivestormWebhookController.php
+++ b/src/Controller/LivestormWebhookController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\livestorm\Controller;
 
+use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ -25,28 +26,28 @@ class LivestormWebhookController extends ControllerBase {
   /**
    * The ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The LoggerInterface definition.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The RequestStack definition.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The EventDispatcherInterface definition.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -73,14 +74,14 @@ class LivestormWebhookController extends ControllerBase {
   /**
    * Captures the incoming webhook request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Http Request.
    * @param string $event_type
    *   Livestorm event type.
    * @param string $token
    *   Livestorm given token.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Http Response.
    */
   public function handleIncomingWebhook(Request $request, $event_type, $token) {
@@ -110,22 +111,22 @@ class LivestormWebhookController extends ControllerBase {
     switch ($event_type) {
       case 'new_registrant':
         $e = new LivestormNewRegistrantEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.new_registrant', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.new_registrant');
         break;
 
       case 'webinar_start':
         $e = new LivestormWebinarStartEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_start', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_start');
         break;
 
       case 'webinar_end':
         $e = new LivestormWebinarEndEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_end', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_end');
         break;
 
       default:
         $e = new LivestormWebinarPublishedEvent($decoded_input);
-        $this->eventDispatcher->dispatch('livestorm.webinar_published', $e);
+        $this->eventDispatcher->dispatch($e, 'livestorm.webinar_published');
     }
 
     return new Response('Okay', Response::HTTP_OK);
diff --git a/src/Event/LivestormWebhookEvent.php b/src/Event/LivestormWebhookEvent.php
index 07448f1..8761d66 100644
--- a/src/Event/LivestormWebhookEvent.php
+++ b/src/Event/LivestormWebhookEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\livestorm\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class LivestormWebhookEvent.
diff --git a/src/Event/LivestormWebhookSubscriber.php b/src/Event/LivestormWebhookSubscriber.php
index 0ebfc07..a0091eb 100644
--- a/src/Event/LivestormWebhookSubscriber.php
+++ b/src/Event/LivestormWebhookSubscriber.php
@@ -26,7 +26,7 @@ class LivestormWebhookSubscriber implements EventSubscriberInterface {
   /**
    * Write a webhook log message.
    *
-   * @param \Drupal\livestorm\Event\LivestormWebhookEvent $event
+   * @param LivestormWebhookEvent $event
    *   Livestorm event.
    */
   protected function logMessages(LivestormWebhookEvent $event) {
