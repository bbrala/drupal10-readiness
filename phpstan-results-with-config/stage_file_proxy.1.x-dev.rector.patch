diff --git a/src/Commands/StageFileProxyCommands.php b/src/Commands/StageFileProxyCommands.php
index 6561805..b98b3a9 100644
--- a/src/Commands/StageFileProxyCommands.php
+++ b/src/Commands/StageFileProxyCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stage_file_proxy\Commands;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
@@ -19,21 +20,21 @@ class StageFileProxyCommands extends DrushCommands {
   /**
    * The database service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The stage_file_proxy.fetch_manager service.
    *
-   * @var \Drupal\stage_file_proxy\FetchManagerInterface
+   * @var FetchManagerInterface
    */
   protected $fetchManager;
 
   /**
    * The logger.channel.stage_file_proxy service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -42,7 +43,7 @@ class StageFileProxyCommands extends DrushCommands {
    *
    * Not called "config": name is used by Drush to store a DrushConfig instance.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $moduleConfig;
 
@@ -56,13 +57,13 @@ class StageFileProxyCommands extends DrushCommands {
   /**
    * StageFileProxyCommands constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config.factory service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database service.
-   * @param \Drupal\stage_file_proxy\FetchManagerInterface $fetchManager
+   * @param FetchManagerInterface $fetchManager
    *   The stage_file_proxy.fetch_manager service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.channel.stage_file_proxy service.
    * @param string $root
    *   The app root.
diff --git a/src/EventDispatcher/AlterExcludedPathsEvent.php b/src/EventDispatcher/AlterExcludedPathsEvent.php
index 8e356f1..3c07204 100644
--- a/src/EventDispatcher/AlterExcludedPathsEvent.php
+++ b/src/EventDispatcher/AlterExcludedPathsEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\stage_file_proxy\EventDispatcher;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class AlterExcludedPathsEvent.
diff --git a/src/EventSubscriber/ProxySubscriber.php b/src/EventSubscriber/ProxySubscriber.php
index 8be00c6..22c0405 100644
--- a/src/EventSubscriber/ProxySubscriber.php
+++ b/src/EventSubscriber/ProxySubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stage_file_proxy\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\StreamWrapper\StreamWrapperManager;
@@ -12,7 +13,6 @@ use Psr\Log\LoggerInterface;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -23,50 +23,50 @@ class ProxySubscriber implements EventSubscriberInterface {
   /**
    * The manager used to fetch the file against.
    *
-   * @var \Drupal\stage_file_proxy\FetchManagerInterface
+   * @var FetchManagerInterface
    */
   protected $manager;
 
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Construct the FetchManager.
    *
-   * @param \Drupal\stage_file_proxy\FetchManagerInterface $manager
+   * @param FetchManagerInterface $manager
    *   The manager used to fetch the file against.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger interface.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(FetchManagerInterface $manager, LoggerInterface $logger, EventDispatcherInterface $event_dispatcher, ConfigFactoryInterface $config_factory, RequestStack $request_stack) {
@@ -80,10 +80,10 @@ class ProxySubscriber implements EventSubscriberInterface {
   /**
    * Fetch the file from it's origin.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
-  public function checkFileOrigin(GetResponseEvent $event) {
+  public function checkFileOrigin(RequestEvent $event) {
     $config = $this->configFactory->get('stage_file_proxy.settings');
 
     // Get the origin server.
@@ -119,7 +119,7 @@ class ProxySubscriber implements EventSubscriberInterface {
     }
 
     $alter_excluded_paths_event = new AlterExcludedPathsEvent([]);
-    $this->eventDispatcher->dispatch('stage_file_proxy.alter_excluded_paths', $alter_excluded_paths_event);
+    $this->eventDispatcher->dispatch($alter_excluded_paths_event, 'stage_file_proxy.alter_excluded_paths');
     $excluded_paths = $alter_excluded_paths_event->getExcludedPaths();
     foreach ($excluded_paths as $excluded_path) {
       if (strpos($request_path, $excluded_path) !== FALSE) {
diff --git a/src/FetchManager.php b/src/FetchManager.php
index f0a4ddf..cab9d1f 100644
--- a/src/FetchManager.php
+++ b/src/FetchManager.php
@@ -20,28 +20,28 @@ class FetchManager implements FetchManagerInterface {
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $client;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
diff --git a/src/FetchManagerInterface.php b/src/FetchManagerInterface.php
index 49a1d01..36e17f7 100644
--- a/src/FetchManagerInterface.php
+++ b/src/FetchManagerInterface.php
@@ -15,13 +15,13 @@ interface FetchManagerInterface {
   /**
    * Constructs an FetchManager instance.
    *
-   * @param \GuzzleHttp\Client $client
+   * @param Client $client
    *   The HTTP client.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger interface.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(Client $client, FileSystemInterface $file_system, LoggerInterface $logger, ConfigFactoryInterface $config_factory);
