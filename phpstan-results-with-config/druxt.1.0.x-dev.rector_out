modules/contrib/druxt/druxt.install
modules/contrib/druxt/druxt.module
modules/contrib/druxt/src/DruxtServiceProvider.php
modules/contrib/druxt/src/EventSubscriber/ContactPathTranslatorSubscriber.php
modules/contrib/druxt/src/EventSubscriber/ViewsPathTranslatorSubscriber.php
modules/contrib/druxt/src/Plugin/Condition/DruxtRequestPath.php
modules/contrib/druxt/tests/src/Functional/ConditionBypassTest.php
modules/contrib/druxt/tests/src/Functional/CorsIntegrationTest.php
modules/contrib/druxt/tests/src/Functional/EntityViewDisplayTest.php
modules/contrib/druxt/tests/src/Functional/PermissionsTest.php

5 files with changes
====================

1) modules/contrib/druxt/tests/src/Functional/PermissionsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\druxt\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   /**
    * Consumer user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $consumer;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->consumer = $this->createUser(['access druxt resources']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/druxt/tests/src/Functional/EntityViewDisplayTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\druxt\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Url;
 use Drupal\taxonomy\Entity\Vocabulary;
@@ @@
   /**
    * Consumer user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $consumer;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create consumer.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/druxt/tests/src/Functional/ConditionBypassTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\druxt\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Url;
 use Drupal\block\Entity\Block;
@@ @@
   /**
    * Consumer user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $consumer;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create consumer.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/druxt/src/EventSubscriber/ViewsPathTranslatorSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\druxt\EventSubscriber;

+use Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Cache\CacheableJsonResponse;
 use Drupal\Core\Cache\CacheableMetadata;
@@ @@
     if ($this->moduleHandler->moduleExists('jsonapi')) {
       $view_type_id = $view->getEntityTypeId();

-      /** @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface $rt_repo */
+      /** @var ResourceTypeRepositoryInterface $rt_repo */
       $rt_repo = $this->container->get('jsonapi.resource_type.repository');
       $rt = $rt_repo->get($view_type_id, $view->bundle());
       $type_name = $rt->getTypeName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/druxt/src/EventSubscriber/ContactPathTranslatorSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\druxt\EventSubscriber;

+use Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Cache\CacheableJsonResponse;
 use Drupal\Core\Cache\CacheableMetadata;
@@ @@
     if ($this->moduleHandler->moduleExists('jsonapi')) {
       $contact_form_type_id = $contact_form->getEntityTypeId();

-      /** @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface $rt_repo */
+      /** @var ResourceTypeRepositoryInterface $rt_repo */
       $rt_repo = $this->container->get('jsonapi.resource_type.repository');
       $rt = $rt_repo->get($contact_form_type_id, $contact_form->bundle());
       $type_name = $rt->getTypeName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

