modules/contrib/gopay/gopay.install
modules/contrib/gopay/gopay.module
modules/contrib/gopay/src/Contact/Contact.php
modules/contrib/gopay/src/Contact/ContactInterface.php
modules/contrib/gopay/src/Controller/GoPayController.php
modules/contrib/gopay/src/Eet/Eet.php
modules/contrib/gopay/src/Exception/GoPayException.php
modules/contrib/gopay/src/Exception/GoPayInvalidSettingsException.php
modules/contrib/gopay/src/Form/AdminSettingsForm.php
modules/contrib/gopay/src/GoPayApi.php
modules/contrib/gopay/src/GoPayApiInterface.php
modules/contrib/gopay/src/GoPayFactory.php
modules/contrib/gopay/src/GoPayFactoryInterface.php
modules/contrib/gopay/src/GoPayState.php
modules/contrib/gopay/src/Item/Item.php
modules/contrib/gopay/src/Item/ItemInterface.php
modules/contrib/gopay/src/Payment/PaymentInterface.php
modules/contrib/gopay/src/Payment/StandardPayment.php
modules/contrib/gopay/src/Response/PaymentResponse.php
modules/contrib/gopay/src/Response/PaymentResponseInterface.php
modules/contrib/gopay/tests/src/Unit/Contact/ContactTest.php
modules/contrib/gopay/tests/src/Unit/Item/ItemTest.php
modules/contrib/gopay/tests/src/Unit/Payment/StandardPaymentTest.php

14 files with changes
=====================

1) modules/contrib/gopay/tests/src/Unit/Payment/StandardPaymentTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\gopay\Unit\Payment;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\gopay\GoPayApiInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\gopay\Contact\Contact;
 use Drupal\gopay\Exception\GoPayInvalidSettingsException;
@@ @@
  */
 class StandardPaymentTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * ConfigFactoryMock.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactoryMock;

@@ @@
   /**
    * GoPay Api.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApiMock;

@@ @@
   /**
    * Setup Mocks.
    */
-  public function setUp() {
+  public function setUp(): void {
     // Set config mock.
     $confingProphecy = $this->prophesize(ImmutableConfig::class);
     $confingProphecy->get('go_id')->willReturn('testgoid');
@@ @@
    * Test missing amount property.
    */
   public function testMissingAmount() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $payment = new StandardPayment($this->configFactoryMock, $this->goPayApiMock);
     $payment->setCurrency(Currency::EUROS);
     $payment->toArray();
@@ @@
    * Test missing currency property.
    */
   public function testMissingCurrency() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $payment = new StandardPayment($this->configFactoryMock, $this->goPayApiMock);
     $payment->setAmount(100);
     $payment->toArray();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * DelegateExceptionArgumentsRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/gopay/tests/src/Unit/Item/ItemTest.php:78

    ---------- begin diff ----------
@@ @@
    * Test missing name property.
    */
   public function testMissingName() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $item = new Item();
     $item->setAmount(1);
     $item->toArray();
@@ @@
    * Test missing amount property.
    */
   public function testMissingAmount() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $item = new Item();
     $item->setName('name');
     $item->toArray();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * DelegateExceptionArgumentsRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/gopay/src/Response/PaymentResponse.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * GoPay Response object.
    *
-   * @var \GoPay\Http\Response
+   * @var Response
    */
   protected $response;

@@ @@
   /**
    * GoPayFactory constructor.
    *
-   * @param \GoPay\Http\Response $response
+   * @param Response $response
    *   GoPay response object.
    */
   public function __construct(Response $response) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/gopay/src/Payment/StandardPayment.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * ConfigFactory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * GoPayApi Service.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;

@@ @@
   /**
    * Payer contact object.
    *
-   * @var \Drupal\gopay\Contact\ContactInterface
+   * @var ContactInterface
    */
   protected $payerContact;

@@ @@
   /**
    * Items in payment.
    *
-   * @var array|\Drupal\gopay\Item\ItemInterface
+   * @var array|ItemInterface
    */
   protected $items;

@@ @@
   /**
    * EET object.
    *
-   * @var \Drupal\gopay\Eet\Eet
+   * @var Eet
    */
   protected $eet;

@@ @@
   /**
    * GoPayFactory constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory service.
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi service.
    * @param array $config_override
    *   Config override.
@@ @@
    *
    * @param string $key
    *   Config key.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   Config object.
    * @param array $config_override
    *   Config override values indexed by config key.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/gopay/src/Payment/PaymentInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gopay\Payment;

+use Drupal\gopay\Exception\GoPayInvalidSettingsException;
 use Drupal\gopay\Contact\ContactInterface;
 use Drupal\gopay\Eet\Eet;
 use Drupal\gopay\Item\ItemInterface;
@@ @@
   /**
    * Sets payer contact.
    *
-   * @param \Drupal\gopay\Contact\ContactInterface $contact
+   * @param ContactInterface $contact
    *   Contact object.
    *
    * @return \Drupal\gopay\Payment\PaymentInterface
@@ @@
   /**
    * Adds item in payment.
    *
-   * @param \Drupal\gopay\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   Item object.
    *
    * @return \Drupal\gopay\Payment\PaymentInterface
@@ @@
     /**
      * Sets EET object.
      *
-     * @param \Drupal\gopay\Eet\Eet $eet
+     * @param Eet $eet
      *   EET object.
      *
      * @return \Drupal\gopay\Payment\PaymentInterface
@@ @@
    * @return array
    *   Configuration of this Payment
    *
-   * @throws \Drupal\gopay\Exception\GoPayInvalidSettingsException
+   * @throws GoPayInvalidSettingsException
    */
   public function toArray();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/gopay/src/Item/ItemInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gopay\Item;

+use Drupal\gopay\Exception\GoPayInvalidSettingsException;
 /**
  * Interface ItemInterface.
  *
@@ @@
    * @return array
    *   Configuration of this item
    *
-   * @throws \Drupal\gopay\Exception\GoPayInvalidSettingsException
+   * @throws GoPayInvalidSettingsException
    */
   public function toArray();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/gopay/src/GoPayFactoryInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gopay;

+use Drupal\gopay\Contact\ContactInterface;
+use Drupal\gopay\Item\ItemInterface;
+use Drupal\gopay\Eet\Eet;
+use Drupal\gopay\Payment\PaymentInterface;
+use Drupal\gopay\Response\PaymentResponseInterface;
 /**
  * Interface GoPayFactoryInterface.
  *
@@ @@
   /**
    * Creates instance of payer contact.
    *
-   * @return \Drupal\gopay\Contact\ContactInterface
+   * @return ContactInterface
    *   Contact object.
    */
   public function createContact();
@@ @@
   /**
    * Creates instance of item.
    *
-   * @return \Drupal\gopay\Item\ItemInterface
+   * @return ItemInterface
    *   Item object.
    */
   public function createItem();
@@ @@
   /**
    * Creates instance of Eet.
    *
-   * @return \Drupal\gopay\Eet\Eet
+   * @return Eet
    *   Eet object.
    */
   public function createEet();
@@ @@
    * @param array $config_override
    *   Configuration override.
    *
-   * @return \Drupal\gopay\Payment\PaymentInterface
+   * @return PaymentInterface
    *   StandardPayment object.
    */
   public function createStandardPayment(array $config_override = []);
@@ @@
    * @param int $id
    *   Payment Id.
    *
-   * @return \Drupal\gopay\Response\PaymentResponseInterface
+   * @return PaymentResponseInterface
    *   Response object.
    */
   public function createResponseStatus($id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


8) modules/contrib/gopay/src/GoPayFactory.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * ConfigFactory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * GoPayApi Service.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;

@@ @@
   /**
    * GoPayFactory constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory service.
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, GoPayApiInterface $go_pay_api) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/gopay/src/GoPayApiInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gopay;

+use GoPay\Payments;
+use GoPay\Http\Response;
 use Drupal\gopay\Payment\PaymentInterface;

 /**
@@ @@
    * @param array $user_services
    *   List additional of services.
    *
-   * @return \GoPay\Payments
+   * @return Payments
    *   Payments object.
    */
   public function config(array $user_config, array $user_services = []);
@@ @@
   /**
    * Creates link for GoPay gateway.
    *
-   * @param \Drupal\gopay\Payment\PaymentInterface $payment
+   * @param PaymentInterface $payment
    *   Payment object.
    *
-   * @return \GoPay\Http\Response
+   * @return Response
    *   Response object corresponding to the created GoPay payment.
    */
   public function createGoPayPayment(PaymentInterface $payment);
@@ @@
   /**
    * Creates link for GoPay gateway.
    *
-   * @param \Drupal\gopay\Payment\PaymentInterface $payment
+   * @param PaymentInterface $payment
    *   Payment object.
    * @param string $text
    *   Text of link.
@@ @@
   /**
    * Creates inline form as GoPay gateway.
    *
-   * @param \Drupal\gopay\Payment\PaymentInterface $payment
+   * @param PaymentInterface $payment
    *   Payment object.
    * @param string $text
    *   Text of link.
@@ @@
    * @param int $id
    *   Payment Id.
    *
-   * @return \GoPay\Http\Response
+   * @return Response
    *   Response object.
    */
   public function getPaymentStatus($id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/gopay/src/GoPayApi.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gopay;

+use GoPay\Payments;
 use Drupal\gopay\Exception\GoPayException;
 use GoPay\Api;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * ConfigFactory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Logger Service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $logger;

@@ @@
   /**
    * Payments object created on GoPay init.
    *
-   * @var \GoPay\Payments
+   * @var Payments
    */
   protected $goPay;

@@ @@
   /**
    * GoPayApi constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory Service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger
+   * @param LoggerChannelFactory $logger
    *   Logger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LoggerChannelFactory $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


11) modules/contrib/gopay/src/Form/AdminSettingsForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * GoPayApi service.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory service.
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, GoPayApiInterface $go_pay_api) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/gopay/src/Controller/GoPayController.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * GoPay Api.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;

@@ @@
   /**
    * GoPay Factory.
    *
-   * @var \Drupal\gopay\GoPayFactoryInterface
+   * @var GoPayFactoryInterface
    */
   protected $goPayFactory;

@@ @@
   /**
    * GopPayController constructor.
    *
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi Service.
-   * @param \Drupal\gopay\GoPayFactoryInterface $go_pay_factory
+   * @param GoPayFactoryInterface $go_pay_factory
    *   GoPayFactory Service.
    */
   public function __construct(GoPayApiInterface $go_pay_api, GoPayFactoryInterface $go_pay_factory) {
@@ @@
   /**
    * Default return callback page for GoPay.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/gopay/gopay.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Extension\ModuleExtensionList;
 /**
  * @file
  * Contains gopay.module.
@@ @@
  * Implements hook_theme().
  */
 function gopay_theme($existing, $type, $theme, $path) {
-  /** @var \Drupal\Core\Extension\ModuleExtensionList $resolver */
+  /** @var ModuleExtensionList $resolver */
   $resolver = \Drupal::service('extension.list.module');

   return [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


14) modules/contrib/gopay/gopay.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\gopay\GoPayApiInterface;
 /**
  * @file
  * GoPay module install file.
  */
-
 /**
  * Implements hook_requirements().
  */
@@ @@
   $requirements = [];

   if ($phase == 'runtime') {
-    /** @var \Drupal\gopay\GoPayApiInterface $gopay */
+    /** @var GoPayApiInterface $gopay */
     $gopay = \Drupal::service('gopay.api');
     $results = $gopay->runTests();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 14 files have been changed by Rector                                      

