modules/contrib/tinypng/src/Controller/TinyPngImageStyleDownloadController.php
modules/contrib/tinypng/src/Form/SettingsForm.php
modules/contrib/tinypng/src/Routing/RouteSubscriber.php
modules/contrib/tinypng/src/TinyPng.php
modules/contrib/tinypng/src/TinyPngImageHandler.php
modules/contrib/tinypng/src/TinyPngImageHandlerInterface.php
modules/contrib/tinypng/src/TinyPngInterface.php
modules/contrib/tinypng/tinypng.module

5 files with changes
====================

1) modules/contrib/tinypng/tinypng.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\tinypng\TinyPngImageHandlerInterface;
+use Drupal\image\Form\ImageStyleEditForm;
+use Drupal\image\Entity\ImageStyle;
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * TinyPng module.
@@ @@
  * Process the image with TinyPNG service.
  */
 function tinypng_entity_presave(EntityInterface $entity) {
-  /** @var \Drupal\tinypng\TinyPngImageHandlerInterface $service */
+  /** @var TinyPngImageHandlerInterface $service */
   $service = \Drupal::service('tinypng.image_handler');
   $service->hookEntityPresave($entity);
 }
@@ @@
     return;
   }

-  /** @var \Drupal\image\Form\ImageStyleEditForm $form_object */
+  /** @var ImageStyleEditForm $form_object */
   $form_object = $form_state->getFormObject();

-  /** @var \Drupal\image\Entity\ImageStyle $image_style */
+  /** @var ImageStyle $image_style */
   $image_style = $form_object->getEntity();

   $form['tinypng_compress'] = [
@@ @@
  *
  * @param string $entity_type_id
  *   Entity type ID.
- * @param \Drupal\image\ImageStyleInterface $image_style
+ * @param ImageStyleInterface $image_style
  *   Edited ImageStyle instance.
  * @param array $form
  *   Entity form to alter.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Form state.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function tinypng_image_style_edit_form_builder($entity_type_id, ImageStyleInterface $image_style, array &$form, FormStateInterface $form_state) {
   $image_style->setThirdPartySetting('tinypng', 'tinypng_compress', $form_state->getValue('tinypng_compress'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/tinypng/src/TinyPngImageHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tinypng;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ @@
   /**
    * Settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * TinyPng service.
    *
-   * @var \Drupal\tinypng\TinyPngInterface
+   * @var TinyPngInterface
    */
   protected $tinyPng;

@@ @@
   /**
    * Image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * Logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * TinyPngImageHandler constructor.
    *
-   * @param \Drupal\tinypng\TinyPngInterface $tiny_png
+   * @param TinyPngInterface $tiny_png
    *   TinyPng service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   Image factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_channel_factory
+   * @param LoggerChannelFactoryInterface $logger_channel_factory
    *   Logger channel factory.
    */
   public function __construct(
@@ @@
       return;
     }

-    /** @var \Drupal\file\FileInterface $entity */
+    /** @var FileInterface $entity */
     // Compress image.
     $image_path = $entity->getFileUri();
     try {
@@ @@
   /**
    * Checks if we should handle entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity to check.
    *
    * @return bool
@@ @@
       return FALSE;
     }

-    /** @var \Drupal\file\FileInterface $entity */
+    /** @var FileInterface $entity */
     if (!$this->checkFile($entity)) {
       return FALSE;
     }
@@ @@
   /**
    * Checks if given entity is a new File entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity to check.
    *
    * @return bool
@@ @@
   /**
    * Check if given file entity is an image with a supported type.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   File entity to check.
    *
    * @return bool
@@ @@
   /**
    * Check if given entity is a valid image.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity to check.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/tinypng/src/TinyPng.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tinypng;

+use Drupal\Core\Config\ImmutableConfig;
+use Tinify\Source;
 use Drupal\Core\File\FileUrlGeneratorInterface;
 use function Tinify\setKey as TinifySetKey;
 use function Tinify\setAppIdentifier as TinifySetAppIdentifier;
@@ @@
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * File system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Tinify Source.
    *
-   * @var \Tinify\Source
+   * @var Source
    */
   protected $tinyfySource;

@@ @@
   /**
    * File URL generator.
    *
-   * @var \Drupal\Core\File\FileUrlGeneratorInterface
+   * @var FileUrlGeneratorInterface
    */
   protected $fileUrlGenerator;

@@ @@
   /**
    * TinyPng service constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   File system.
-   * @param \Drupal\Core\File\FileUrlGeneratorInterface $file_url_generator
+   * @param FileUrlGeneratorInterface $file_url_generator
    *   File URL generator.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/tinypng/src/Routing/RouteSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tinypng\Routing;

+use Symfony\Component\Routing\Route;
 use Drupal\Core\Routing\RouteSubscriberBase;
 use Symfony\Component\Routing\RouteCollection;

@@ @@
   protected function alterRoutes(RouteCollection $collection) {
     // This is not a good solution. Replace this if
     // https://www.drupal.org/project/drupal/issues/2940016 is closed.
-    /** @var \Symfony\Component\Routing\Route $route */
+    /** @var Route $route */
     if ($route = $collection->get('image.style_public')) {
       $route->setDefault('_controller', '\Drupal\tinypng\Controller\TinyPngImageStyleDownloadController::deliver');
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tinypng/src/Controller/TinyPngImageStyleDownloadController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tinypng\Controller;

+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Image\ImageFactory;
@@ @@
   /**
    * TinyPng compress service.
    *
-   * @var \Drupal\tinypng\TinyPngInterface
+   * @var TinyPngInterface
    */
   protected $tinyPng;

@@ @@
   /**
    * TinyPng logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $serviceLogger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

