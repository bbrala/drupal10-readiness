themes/contrib/radix/Commands/radix/SubThemeCommands.php
themes/contrib/radix/includes/block.inc
themes/contrib/radix/includes/field.inc
themes/contrib/radix/includes/form.inc
themes/contrib/radix/includes/menu.inc
themes/contrib/radix/includes/suggestions.inc
themes/contrib/radix/includes/user.inc
themes/contrib/radix/includes/view.inc
themes/contrib/radix/radix.drush.inc
themes/contrib/radix/radix.theme
themes/contrib/radix/src/SubThemeGenerator.php
themes/contrib/radix/src/kits/default/default.theme
themes/contrib/radix/src/kits/default/includes/block.inc
themes/contrib/radix/src/kits/default/includes/comment.inc
themes/contrib/radix/src/kits/default/includes/content.inc
themes/contrib/radix/src/kits/default/includes/field.inc
themes/contrib/radix/src/kits/default/includes/form.inc
themes/contrib/radix/src/kits/default/includes/menu.inc
themes/contrib/radix/src/kits/default/includes/theme.inc
themes/contrib/radix/src/kits/default/includes/user.inc
themes/contrib/radix/src/kits/default/includes/view.inc

5 files with changes
====================

1) themes/contrib/radix/src/SubThemeGenerator.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @var \Symfony\Component\Filesystem\Filesystem
+   * @var Filesystem
    */
   protected $fs;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @var \Symfony\Component\Finder\Finder
+   * @var Finder
    */
   protected $finder;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) themes/contrib/radix/radix.drush.inc:90

    ---------- begin diff ----------
@@ @@
   $kit = (drush_get_option('kit')) ? drush_trim_path(drush_get_option('kit')) : 'default';

   // Make a fresh copy of the kit.
-  $kit_path = drush_normalize_path(drush_get_context('DRUSH_DRUPAL_ROOT') . '/' . drupal_get_path('theme', 'radix') . '/src/kits/' . $kit);
+  $kit_path = drush_normalize_path(drush_get_context('DRUSH_DRUPAL_ROOT') . '/' . \Drupal::service('extension.list.theme')->getPath('radix') . '/src/kits/' . $kit);

   // Allow kits to be pulled from external urls.
   if (UrlHelper::isValid($kit, TRUE)) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


3) themes/contrib/radix/includes/suggestions.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\NodeInterface;
 /**
  * @file
  * Theme suggestions.
@@ @@
  */
 function radix_theme_suggestions_page_alter(array &$suggestions, array $variables) {
   // Add a template suggestions for node type.
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   if ($node = \Drupal::routeMatch()->getParameter('node')) {
     if (is_numeric($node)) {
       $node = Node::load($node);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


4) themes/contrib/radix/includes/menu.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Url;
 /**
  * @file
  * Theme and preprocess functions for menus.
@@ @@
   // Get the first link and use it for the dropbutton.
   $link = reset($links);

-  /** @var \Drupal\Core\Url $url */
+  /** @var Url $url */
   $variables['split'] = FALSE;
   if (isset($link['link']) && ($url = $link['link']['#url'])) {
     $button = $link['link'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) themes/contrib/radix/Commands/radix/SubThemeCommands.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drush\Commands\radix;

+use Drupal\Core\Extension\Extension;
+use Drupal\Core\Archiver\ArchiverManager;
+use Drupal\Core\Archiver\ArchiverInterface;
+use Symfony\Component\Finder\SplFileInfo;
 use Consolidation\AnnotatedCommand\CommandData;
 use Consolidation\AnnotatedCommand\CommandError;
 use Drupal\Component\Utility\UrlHelper;
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @var \Drupal\radix\SubThemeGenerator
+   * @var SubThemeGenerator
    */
   protected $subThemeCreator;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @var \Symfony\Component\Filesystem\Filesystem
+   * @var Filesystem
    */
   protected $fs;

@@ @@
     $kit = $options['kit'];

     // @todo Use extension service.
-    $radixDir = drupal_get_path('theme', 'radix');
+    $radixDir = \Drupal::service('extension.list.theme')->getPath('radix');
     $srcDir = "$radixDir/src/kits/{$kit}";

     // Find kit from other active themes.
-    /** @var \Drupal\Core\Extension\Extension[] $themes */
+    /** @var Extension[] $themes */
     foreach (\Drupal::service('theme_handler')->listInfo() as $theme) {
       $path = "{$theme->getPath()}/src/kits/{$kit}";
       if ($this->fs->exists($path)) {
@@ @@

         $data['srcDir'] = "{$data['path']}/kit";

-        /** @var \Drupal\Core\Archiver\ArchiverManager $extractorManager */
+        /** @var ArchiverManager $extractorManager */
         $extractorManager = \Drupal::service('plugin.manager.archiver');

         try {
-          /** @var \Drupal\Core\Archiver\ArchiverInterface $extractorInstance */
+          /** @var ArchiverInterface $extractorInstance */
           $extractorInstance = $extractorManager->getInstance(['filepath' => $data['packPath']]);
           $extractorInstance->extract($data['srcDir']);
         }
@@ @@
    *
    * @hook validate @radixArgLabel
    *
-   * @return null|\Consolidation\AnnotatedCommand\CommandError
+   * @return null|CommandError
    *   Returns null or CommandError.
    */
   public function onHookValidateRadixArgLabel(CommandData $commandData): ?CommandError {
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Consolidation\AnnotatedCommand\CommandError[] $commandErrors
+   * @param CommandError[] $commandErrors
    *   Command errors.
    */
   protected function aggregateCommandErrors(array $commandErrors): ?CommandError {
     $errorCode = 0;
     $messages = [];
-    /** @var \Consolidation\AnnotatedCommand\CommandError $commandError */
+    /** @var CommandError $commandError */
     foreach (array_filter($commandErrors) as $commandError) {
       $messages[] = $commandError->getOutputData();
       $errorCode = max($errorCode, $commandError->getExitCode());
@@ @@
     $directDescendants = $this->getDirectDescendants($parentDir);
     $iterator = $directDescendants->getIterator();
     $iterator->rewind();
-    /** @var \Symfony\Component\Finder\SplFileInfo $firstFile */
+    /** @var SplFileInfo $firstFile */
     $firstFile = $iterator->current();
     if ($directDescendants->count() === 1 && $firstFile->isDir()) {
       return $firstFile->getPathname();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

