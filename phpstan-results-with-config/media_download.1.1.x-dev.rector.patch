diff --git a/composer.json b/composer.json
index 816cb61..682443c 100644
--- a/composer.json
+++ b/composer.json
@@ -17,7 +17,7 @@
         }
     ],
     "require": {
-        "drupal/core": "^8.9 || ^9"
+        "drupal/core": "^8.9 || ^9 || ^10"
     },
     "minimum-stability": "stable",
     "prefer-stable": true,
diff --git a/media_download.info.yml b/media_download.info.yml
index af604ed..de7fd72 100644
--- a/media_download.info.yml
+++ b/media_download.info.yml
@@ -1,7 +1,7 @@
 name: 'Media Download'
 description: 'Adds support for direct downloads of media entities when using their canonical path.'
 
-core_version_requirement: '^8.9 || ^9'
+core_version_requirement: ^8.9 || ^9 || ^10
 type: module
 
 php: '7.3'
diff --git a/src/DownloadController.php b/src/DownloadController.php
index 3650bb9..3d6005a 100644
--- a/src/DownloadController.php
+++ b/src/DownloadController.php
@@ -33,7 +33,7 @@ class DownloadController extends ControllerBase {
    * 2. The source field exists on the supplied media entity
    * 3. At least one field delta references a file that exists on disk
    *
-   * @return \Drupal\file\FileInterface|null
+   * @return FileInterface|null
    *   A file on success, otherwise NULL.
    *
    * @throws \RuntimeException
@@ -70,15 +70,15 @@ class DownloadController extends ControllerBase {
    * to be viewed in the browser. If `dl=1` is passed as a query parameter, then
    * the browser will be instructed to save the file to disk.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   The media entity for which to initiate a file download.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   When a valid file cannot be found for the supplied media entity.
    *
-   * @return \Drupal\media_download\CacheableBinaryFileResponse
+   * @return CacheableBinaryFileResponse
    *   A cacheable binary file response.
    */
   public function save(MediaInterface $media, Request $request) {
diff --git a/tests/src/Functional/DownloadTest.php b/tests/src/Functional/DownloadTest.php
index d36f3d7..b9ff136 100644
--- a/tests/src/Functional/DownloadTest.php
+++ b/tests/src/Functional/DownloadTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\media_download\Functional;
 
+use Drupal\media\Entity\Media;
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\system\Functional\Cache\AssertPageCacheContextsAndTagsTrait;
 
@@ -24,7 +26,7 @@ class DownloadTest extends BrowserTestBase {
   /**
    * The media entity.
    *
-   * @var \Drupal\media\Entity\Media
+   * @var Media
    */
   protected $media;
 
@@ -38,7 +40,7 @@ class DownloadTest extends BrowserTestBase {
   /**
    * The file owner account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $owner;
 
diff --git a/tests/src/Kernel/MediaTest.php b/tests/src/Kernel/MediaTest.php
index a11f717..cd96b5c 100644
--- a/tests/src/Kernel/MediaTest.php
+++ b/tests/src/Kernel/MediaTest.php
@@ -67,7 +67,7 @@ class MediaTest extends KernelTestBase {
     $this->assertNotEquals($config->getOriginal('standalone_url', FALSE), $config->get('standalone_url'));
 
     $entity_type = \Drupal::entityTypeManager()->getDefinition('media');
-    $this->assertIdentical('/media/{media}', $entity_type->getLinkTemplate('canonical'));
+    $this->assertSame('/media/{media}', $entity_type->getLinkTemplate('canonical'));
   }
 
 }
