themes/contrib/nightar/inc/alter/form.inc
themes/contrib/nightar/inc/preprocess.inc
themes/contrib/nightar/inc/preprocess/block.inc
themes/contrib/nightar/inc/preprocess/block_content.inc
themes/contrib/nightar/inc/preprocess/content_entity.inc
themes/contrib/nightar/inc/preprocess/field.inc
themes/contrib/nightar/inc/preprocess/menu.inc
themes/contrib/nightar/inc/suggestion.inc
themes/contrib/nightar/nightar.theme
themes/contrib/nightar/src/Theme.php
themes/contrib/nightar/theme-settings.php

7 files with changes
====================

1) themes/contrib/nightar/theme-settings.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
  * Theme settings form for NightAr theme.
  */
-
 /**
  * Implements hook_form_system_theme_settings_alter().
  *
  * @see hook_form_system_theme_settings_alter()
  */
-function nightar_form_system_theme_settings_alter(array &$form, \Drupal\Core\Form\FormStateInterface &$form_state) {
+function nightar_form_system_theme_settings_alter(array &$form, FormStateInterface &$form_state) {

   $form['nightar'] = [
     '#type'  => 'details',
    ----------- end diff -----------

2) themes/contrib/nightar/src/Theme.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\nightar;

+use Drupal\Core\StringTranslation\StringTranslationTrait;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\Core\Entity\ContentEntityBase;
@@ @@
  */
 class Theme {

-  use Drupal\Core\StringTranslation\StringTranslationTrait;
+  use StringTranslationTrait;

   /**
    * The theme name.
@@ @@
     if (empty($module_name) && $module_type == 'theme') {
       $module_name = self::getThemeName();
     }
-    $file = drupal_get_path($module_type, $module_name) . $name . '.' . $ext;
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $file = \Drupal::service('extension.path.resolver')->getPath($module_type, $module_name) . $name . '.' . $ext;

     if (is_file($file)) {
       require_once $file;
@@ @@
    * @param string $mode
    *   Display mode.
    *
-   * @return \Drupal\Core\Entity\EntityDisplayBase|EntityViewDisplay|\Drupal\Core\Entity\EntityInterface|null
+   * @return EntityDisplayBase|EntityViewDisplay|EntityInterface|null
    *   Return the Entity display object or null
    */
   public static function getEntityDisplay($entityType, $bundle, $mode) {
@@ @@
   /**
    * Get rendered string without development comments.
    *
-   * @param \Drupal\Core\Entity\ContentEntityBase $entity
+   * @param ContentEntityBase $entity
    *   The entity where contains the field.
    * @param string $field_name
    *   The field name thats will be rendered.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) themes/contrib/nightar/nightar.theme:23

    ---------- begin diff ----------
@@ @@
       'variables' => [
         'class' => '',
       ],
-      'path' => drupal_get_path('theme', Theme::getThemeName()) . '/templates/icons',
+      'path' => \Drupal::service('extension.list.theme')->getPath(Theme::getThemeName()) . '/templates/icons',
       'pattern' => 'na_icon__',
     ],
   ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


4) themes/contrib/nightar/inc/suggestion.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\taxonomy\Entity\Term;
 /**
  * @file
  * The main suggestions hooks.
@@ @@
  * @see hook_theme_suggestions_HOOK_alter()
  */
 function nightar_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
-  /** @var \Drupal\taxonomy\Entity\Term $term **/
+  /** @var Term $term **/
   $term = $variables['elements']['#taxonomy_term'];
   array_unshift(
     $suggestions,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) themes/contrib/nightar/inc/preprocess/content_entity.inc:11

    ---------- begin diff ----------
@@ @@
  *
  * @param array $variables
  *   An array of variables passed to the theme hook.
- * @param \Drupal\Core\Entity\EntityBase $object
+ * @param EntityBase $object
  *   Entity object.
  */
 function nightar_content_entity_preprocess_alter(array &$variables, EntityBase $object) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


6) themes/contrib/nightar/inc/preprocess.inc:30

    ---------- begin diff ----------
@@ @@
  */
 function nightar_preprocess(array &$variables, $hook) {
   if (empty($variables['path_images'])) {
-    $variables['theme_path'] = drupal_get_path('theme', Theme::getThemeName());
+    $variables['theme_path'] = \Drupal::service('extension.list.theme')->getPath(Theme::getThemeName());
   }
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


7) themes/contrib/nightar/inc/alter/form.inc:4

    ---------- begin diff ----------
@@ @@
  * @file
  * The form alter functions.
  */
-
 /**
  * The alter function for search_block form.
  *
  * @param array $form
  *   The form array data.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state interface.
  */
 function nightar_form_search_block_form_alter(array &$form, FormStateInterface $form_state) {
@@ @@
  *
  * @param array $form
  *   The form array data.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state interface.
  */
 function nightar_form_user_login_form_alter(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

 [OK] 7 files have been changed by Rector                                       

