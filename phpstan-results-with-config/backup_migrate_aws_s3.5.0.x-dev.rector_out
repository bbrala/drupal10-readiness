modules/contrib/backup_migrate_aws_s3/backup_migrate_aws_s3.module
modules/contrib/backup_migrate_aws_s3/src/Controller/AWSS3BackupController.php
modules/contrib/backup_migrate_aws_s3/src/Destination/AWSS3Destination.php
modules/contrib/backup_migrate_aws_s3/src/Plugin/BackupMigrateDestination/AWSS3DestinationPlugin.php
modules/contrib/backup_migrate_aws_s3/src/Routing/AWSS3RouteSubscriber.php
modules/contrib/backup_migrate_aws_s3/tests/src/Functional/LoadTest.php

3 files with changes
====================

1) modules/contrib/backup_migrate_aws_s3/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\backup_migrate_aws_s3\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/backup_migrate_aws_s3/src/Destination/AWSS3Destination.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\backup_migrate_aws_s3\Destination;

+use Drupal\key\KeyRepository;
+use Drupal\file\FileRepository;
+use Drupal\Core\File\FileSystem;
 use Aws\Exception\AwsException;
 use Aws\S3\S3Client;
 use Drupal\backup_migrate\Core\Config\ConfigInterface;
@@ @@
   /**
    * Stores client.
    *
-   * @var \Aws\S3\S3Client
+   * @var S3Client
    */
   protected $client = NULL;

@@ @@
   /**
    * Key repository service.
    *
-   * @var \Drupal\key\KeyRepository
+   * @var KeyRepository
    */
   protected $keyRepository = NULL;

@@ @@
   /**
    * File repository service.
    *
-   * @var \Drupal\file\FileRepository
+   * @var FileRepository
    */
   protected $fileRepository = NULL;

@@ @@
   /**
    * Filesystem service.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $fileSystem = NULL;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\backup_migrate\Core\Exception\BackupMigrateException
+   * @throws BackupMigrateException
    */
   protected function saveTheFile(BackupFileReadableInterface $file) {
     $this->saveFileToS3($file->getFullName(), $file->realpath(), $this->getClient());
@@ @@
   /**
    * Download backup file.
    *
-   * @param \Drupal\backup_migrate\Core\File\BackupFileInterface $file
+   * @param BackupFileInterface $file
    *   Backup file.
    *
-   * @return \Symfony\Component\HttpFoundation\Response|void
+   * @return Response|void
    *   Returns http file response.
    */
   public function downloadFile(BackupFileInterface $file) {
@@ @@
    *   Backup filename.
    * @param string $file_loc
    *   Backup real path.
-   * @param \Aws\S3\S3Client|null $client
+   * @param S3Client|null $client
    *   AWS S3 client.
    *
    * @return mixed
    *   Returns mixed values.
    *
-   * @throws \Drupal\backup_migrate\Core\Exception\BackupMigrateException
+   * @throws BackupMigrateException
    */
   public function saveFileToS3(string $filename, string $file_loc, S3Client $client = NULL) {
     // Make sure we have client.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/backup_migrate_aws_s3/src/Controller/AWSS3BackupController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\backup_migrate_aws_s3\Controller;

+use Drupal\backup_migrate\Core\Destination\DestinationInterface;
+use Symfony\Component\HttpFoundation\Response;
+use Drupal\backup_migrate\Core\Exception\BackupMigrateException;
 use Drupal\backup_migrate\Drupal\Destination\DrupalBrowserDownloadDestination;
 use Drupal\backup_migrate\Entity\Destination;
 use Drupal\backup_migrate_aws_s3\Destination\AWSS3Destination;
@@ @@
   /**
    * Backup & migrate destination object.
    *
-   * @var \Drupal\backup_migrate\Core\Destination\DestinationInterface
+   * @var DestinationInterface
    */
   public $destination;

@@ @@
   /**
    * Download a backup via the browser.
    *
-   * @param \Drupal\backup_migrate\Entity\Destination $backup_migrate_destination
+   * @param Destination $backup_migrate_destination
    *   Backup & migrate destination object.
    * @param string $backup_id
    *   Backup & migrate backup file id.
    *
-   * @return \Symfony\Component\HttpFoundation\Response|void
+   * @return Response|void
    *   Return http response to download backup file.
    *
-   * @throws \Drupal\backup_migrate\Core\Exception\BackupMigrateException
+   * @throws BackupMigrateException
    */
   public function download(Destination $backup_migrate_destination, string $backup_id) {
     $destination = $backup_migrate_destination->getObject();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

