modules/contrib/leaflet/leaflet.api.php
modules/contrib/leaflet/leaflet.install
modules/contrib/leaflet/leaflet.module
modules/contrib/leaflet/modules/leaflet_views/leaflet_views.api.php
modules/contrib/leaflet/modules/leaflet_views/src/Controller/LeafletAjaxPopupController.php
modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/display/LeafletAttachment.php
modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/row/LeafletMarker.php
modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/Leaflet.php
modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/LeafletMap.php
modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/MarkerDefault.php
modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/MarkerLayerGroup.php
modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/deprecated/LeafletMapIncorrect.php
modules/contrib/leaflet/src/LeafletService.php
modules/contrib/leaflet/src/LeafletSettingsElementsTrait.php
modules/contrib/leaflet/src/Plugin/Field/FieldFormatter/LeafletDefaultFormatter.php
modules/contrib/leaflet/src/Plugin/Field/FieldWidget/LeafletDefaultWidget.php

11 files with changes
=====================

1) modules/contrib/leaflet/src/Plugin/Field/FieldWidget/LeafletDefaultWidget.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\leaflet\LeafletService
+   * @var LeafletService
    */
   protected $leafletService;

@@ @@
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   private $languageManager;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The geoPhpWrapper.
-   * @param \Drupal\geofield\WktGeneratorInterface $wkt_generator
+   * @param WktGeneratorInterface $wkt_generator
    *   The WKT format Generator service.
-   * @param \Drupal\geofield\Plugin\GeofieldBackendManager $geofield_backend_manager
+   * @param GeofieldBackendManager $geofield_backend_manager
    *   The geofieldBackendManager.
-   * @param \Drupal\leaflet\LeafletService $leaflet_service
+   * @param LeafletService $leaflet_service
    *   The Leaflet service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   The language manager.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/leaflet/src/Plugin/Field/FieldFormatter/LeafletDefaultFormatter.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * Leaflet service.
    *
-   * @var \Drupal\Leaflet\LeafletService
+   * @var LeafletService
    */
   protected $leafletService;

@@ @@
   /**
    * The EntityField Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;

@@ @@
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Leaflet\LeafletService $leaflet_service
+   * @param LeafletService $leaflet_service
    *   The Leaflet service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The Entity Field Manager.
    * @param \Drupal\core\Utility\Token $token
    *   The token service.
-   * @param \Drupal\core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/leaflet/src/LeafletSettingsElementsTrait.php:1117

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element to build.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateGeocoderProviders(array $element, FormStateInterface &$form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/leaflet/src/LeafletService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\leaflet;

+use Drupal\Core\GeneratedLink;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\geofield\GeoPHP\GeoPHPInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   /**
    * Current user service.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;

@@ @@
   /**
    * LeafletService constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user service.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The geoPhpWrapper.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
    */
   public function __construct(
@@ @@
   /**
    * Leaflet Icon Documentation Link.
    *
-   * @return \Drupal\Core\GeneratedLink
+   * @return GeneratedLink
    *   The Leaflet Icon Documentation Link.
    */
   public function leafletIconDocumentationLink() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/MarkerDefault.php:45

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The modules handler.
    */
   public function __construct(
@@ @@
    *
    * @param array $points
    *   The Marker Points.
-   * @param \Drupal\views\ResultRow $row
+   * @param ResultRow $row
    *   The Result rows.
    */
   protected function alterLeafletMarkerPoints(array &$points, ResultRow $row) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/LeafletMap.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\leaflet_views\Plugin\views\style;

+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\views\Plugin\views\HandlerBase;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Field\FieldTypePluginManagerInterface;
 use Drupal\Core\Render\BubbleableMetadata;
@@ @@
   /**
    * The Entity Info service property.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface
+   * @var EntityTypeInterface
    */
   protected $entityInfo;

@@ @@
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;

@@ @@
   /**
    * The Entity Field manager service property.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The Entity Display Repository service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplay;

@@ @@
   /**
    * Current user service.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;

@@ @@
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Leaflet service.
    *
-   * @var \Drupal\Leaflet\LeafletService
+   * @var LeafletService
    */
   protected $leafletService;

@@ @@
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;

@@ @@
   /**
    * Field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypeManager;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display
+   * @param EntityDisplayRepositoryInterface $entity_display
    *   The entity display manager.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Leaflet\LeafletService $leaflet_service
+   * @param LeafletService $leaflet_service
    *   The Leaflet service.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager service.
    */
   public function __construct(
@@ @@
     ];

     $data = Views::viewsData();
-    /** @var \Drupal\views\Plugin\views\HandlerBase $handler */
+    /** @var HandlerBase $handler */
     foreach ($this->displayHandler->getHandlers('relationship') as $relationship_id => $handler) {
       if (($table = $data->get($handler->definition['base'])) && !empty($table['table']['entity type'])) {
         try {
@@ @@
    * @param string $source
    *   The Source identifier.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface
+   * @return EntityTypeInterface
    *   The entity type.
    */
   protected function getEntitySourceEntityInfo($source) {
@@ @@
    *
    * @param array $form
    *   The Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Form state.
    */
   public static function optionsFormEntitySourceSubmit(array $form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Form state.
    *
    * @return mixed
@@ @@
                   '***LANGUAGE_entity_default***' => 'DefaultLanguageRenderer',
                 ];
                 if (isset($dynamic_renderers[$rendering_language])) {
-                  /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+                  /** @var ContentEntityInterface $entity */
                   $langcode = isset($result->$entity_type_langcode_attribute) ? $result->$entity_type_langcode_attribute : $entity->language()
                     ->getId();
                 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/style/Leaflet.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;

@@ @@
   /**
    * The Entity Field manager service property.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The Entity Display Repository service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplay;

@@ @@
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;

@@ @@
   /**
    * Leaflet service.
    *
-   * @var \Drupal\Leaflet\LeafletService
+   * @var LeafletService
    */
   protected $leafletService;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display
+   * @param EntityDisplayRepositoryInterface $entity_display
    *   The entity display manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Leaflet\LeafletService $leaflet_service
+   * @param LeafletService $leaflet_service
    *   The Leaflet service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/leaflet/modules/leaflet_views/src/Plugin/views/row/LeafletMarker.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\leaflet_views\Plugin\views\row;

+use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Field\FieldTypePluginManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\display\DisplayPluginBase;
@@ @@
   /**
    * Contains the entity type of this row plugin instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface
+   * @var EntityTypeInterface
    */
   protected $entityType;

@@ @@
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   public $entityManager;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The Entity Field manager service property.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The Entity Display Repository service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplay;

@@ @@
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The View Data service property.
    *
-   * @var \Drupal\views\ViewsData
+   * @var ViewsData
    */
   protected $viewsData;

@@ @@
   /**
    * Leaflet service.
    *
-   * @var \Drupal\Leaflet\LeafletService
+   * @var LeafletService
    */
   protected $leafletService;

@@ @@
   /**
    * Field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypeManager;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display
+   * @param EntityDisplayRepositoryInterface $entity_display
    *   The entity display manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    * @param \Drupal\Views\ViewsData $view_data
    *   The view data.
-   * @param \Drupal\Leaflet\LeafletService $leaflet_service
+   * @param LeafletService $leaflet_service
    *   The Leaflet service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager service.
    */
   public function __construct(
@@ @@
    * @param array $points
    *   A list of geofield points from
    *   {@link \Drupal::service('leaflet.service')->leafletProcessGeofield()}.
-   * @param \Drupal\views\ResultRow $row
+   * @param ResultRow $row
    *   The views result row.
    *
    * @return array
@@ @@
    *
    * @param array $point
    *   The Marker Point.
-   * @param \Drupal\views\ResultRow $row
+   * @param ResultRow $row
    *   The Result rows.
    */
   protected function alterLeafletMarker(array &$point, ResultRow $row) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/leaflet/modules/leaflet_views/src/Controller/LeafletAjaxPopupController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\leaflet_views\Controller;

+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Symfony\Component\HttpFoundation\Response;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;

@@ @@
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;

@@ @@
   /**
    * Constructs a new LeafletAjaxPopupController object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, RendererInterface $renderer) {
@@ @@
   /**
    * User LeafletAjaxPopup page access checker.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check the permission for view.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The Access check results.
    */
   public function accessCheck(EntityInterface $entity) {
@@ @@
   /**
    * Leaflet Ajax Popup build callback..
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity whose build to return.
    * @param string $view_mode
    *   The view mode identifier.
@@ @@
    * @param string $langcode
    *   The langcode to render the entity by.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The Response to return.
    */
   public function popupBuild(EntityInterface $entity, $view_mode, $langcode = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/leaflet/modules/leaflet_views/leaflet_views.api.php:37

    ---------- begin diff ----------
@@ @@
  *     depending on feature type.
  *     {@see \Drupal::service('leaflet.service')->leafletProcessGeofield()}
  *     for details.
- * @param \Drupal\views\ResultRow $row
+ * @param ResultRow $row
  *   The views result row.
- * @param \Drupal\views\Plugin\views\row\RowPluginBase $rowPlugin
+ * @param RowPluginBase $rowPlugin
  *   (optional) The row plugin used for rendering the feature.
  */
 function hook_leaflet_views_feature_alter(array &$feature, ResultRow $row, RowPluginBase $rowPlugin = NULL) {
@@ @@
  *
  * @param array $map_settings
  *   The array of geofield map element settings.
- * @param \Drupal\leaflet_views\Plugin\views\style\LeafletMap $view_style
+ * @param LeafletMap $view_style
  *   The Leaflet Map View Style.
  * */
 function hook_leaflet_map_view_style_alter(array &$map_settings, LeafletMap &$view_style) {
@@ @@
  *     layer group. Set to FALSE to render contained features ungrouped.
  *   - features: List of features contained in this group.
  *   - label: The group label, e.g. used for the layer control widget.
- * @param \Drupal\leaflet_views\Plugin\views\style\MarkerDefault $stylePlugin
+ * @param MarkerDefault $stylePlugin
  *   The style plugin used for rendering the feature group.
  */
 function hook_leaflet_views_feature_group_alter(array &$group, MarkerDefault $stylePlugin) {
    ----------- end diff -----------

11) modules/contrib/leaflet/leaflet.api.php:147

    ---------- begin diff ----------
@@ @@
  *
  * @param array $map_settings
  *   The array of geofield map element settings.
- * @param Drupal\leaflet\Plugin\Field\FieldWidget\LeafletDefaultWidget $leafletDefaultWidget
+ * @param LeafletDefaultWidget $leafletDefaultWidget
  *   The Leaflet default Widget.
  * */
 function hook_leaflet_default_widget_alter(array &$map_settings, LeafletDefaultWidget $leafletDefaultWidget) {
@@ @@
  *     feature.
  *   - Other possible keys include "lat", "lon", "points", "component",
  *     depending on feature type.
- * @param \Drupal\geofield\Plugin\Field\FieldType\GeofieldItem $item
+ * @param GeofieldItem $item
  *   The Geofield Item.
- * @param \Drupal\Core\Entity\ContentEntityBase $entity
+ * @param ContentEntityBase $entity
  *   The Content Entity base of the formatter.
  */
 function hook_leaflet_formatter_feature_alter(array $feature, GeofieldItem $item, ContentEntityBase $entity) {
@@ @@
  *
  * @param array $map_settings
  *   The array of geofield map element settings.
- * @param \Drupal\Core\Field\FieldItemListInterface $items
+ * @param FieldItemListInterface $items
  *   The field values to be rendered.
  * */
 function hook_leaflet_default_map_formatter_alter(array &$map_settings, FieldItemListInterface &$items) {
    ----------- end diff -----------

 [OK] 11 files have been changed by Rector                                      

