diff --git a/linkychecker.info.yml b/linkychecker.info.yml
index 0f43962..3b9b29f 100644
--- a/linkychecker.info.yml
+++ b/linkychecker.info.yml
@@ -1,7 +1,7 @@
 name: Linkychecker
 type: module
 description: Link checker.
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 php: 7.1
 package: Links
 dependencies:
diff --git a/linkychecker.module b/linkychecker.module
index 51ad764..3d4f619 100644
--- a/linkychecker.module
+++ b/linkychecker.module
@@ -94,7 +94,7 @@ function linkychecker_entity_base_field_info(EntityTypeInterface $entity_type):
  * Implements hook_cron().
  */
 function linkychecker_cron(): void {
-  /** @var \Drupal\linkychecker\LinkyCheckerCronHook $cronHook */
+  /** @var LinkyCheckerCronHook $cronHook */
   $cronHook = \Drupal::service('class_resolver')->getInstanceFromDefinition(LinkyCheckerCronHook::class);
   $cronHook->cron();
 }
@@ -164,7 +164,7 @@ function linkychecker_entity_presave(EntityInterface $entity): void {
     return;
   }
 
-  /** @var \Drupal\linky\LinkyInterface $original */
+  /** @var LinkyInterface $original */
   $original = $entity->original;
   // Check if URI changed.
   if (($entity->link->uri ?? NULL) !== ($original->link->uri ?? NULL)) {
@@ -191,7 +191,7 @@ function linkychecker_entity_presave(EntityInterface $entity): void {
  * Implements hook_entity_type_build().
  */
 function linkychecker_entity_type_build(array &$entity_types) {
-  /** @var \Drupal\Core\Entity\EntityTypeInterface $entityType */
+  /** @var EntityTypeInterface $entityType */
   $entityType = $entity_types['linky'];
   // Route provider.
   $routeProviders = $entityType->getRouteProviderClasses() ?: [];
diff --git a/src/Commands/LinkyCheckerCommands.php b/src/Commands/LinkyCheckerCommands.php
index 42567c2..fc10909 100644
--- a/src/Commands/LinkyCheckerCommands.php
+++ b/src/Commands/LinkyCheckerCommands.php
@@ -13,14 +13,14 @@ class LinkyCheckerCommands extends DrushCommands {
   /**
    * The linky checker queue service.
    *
-   * @var \Drupal\linkychecker\LinkyCheckerCrawlQueueInterface
+   * @var LinkyCheckerCrawlQueueInterface
    */
   protected $checkerCrawlQueue;
 
   /**
    * Constructs a new LinkyCheckerCommands.
    *
-   * @param \Drupal\linkychecker\LinkyCheckerCrawlQueueInterface $checkerCrawlQueue
+   * @param LinkyCheckerCrawlQueueInterface $checkerCrawlQueue
    *   The linky checker queue service.
    */
   public function __construct(LinkyCheckerCrawlQueueInterface $checkerCrawlQueue) {
diff --git a/src/Form/LinkyCheckerLinkyCheckForm.php b/src/Form/LinkyCheckerLinkyCheckForm.php
index 24858f2..73d9058 100644
--- a/src/Form/LinkyCheckerLinkyCheckForm.php
+++ b/src/Form/LinkyCheckerLinkyCheckForm.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\linkychecker\Form;
 
+use Drupal\linky\LinkyInterface;
+use Drupal\linkychecker\LinkyCheckerMemoryLogger;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Ajax\AjaxFormHelperTrait;
@@ -20,7 +22,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 /**
  * Linky check form.
  *
- * @method \Drupal\linky\LinkyInterface getEntity()
+ * @method LinkyInterface getEntity()
  */
 class LinkyCheckerLinkyCheckForm extends ContentEntityForm {
 
@@ -29,29 +31,29 @@ class LinkyCheckerLinkyCheckForm extends ContentEntityForm {
   /**
    * Linky checker crawler.
    *
-   * @var \Drupal\linkychecker\LinkyCheckerCrawlerInterface
+   * @var LinkyCheckerCrawlerInterface
    */
   protected $crawler;
 
   /**
    * The in-memory logger.
    *
-   * @var \Psr\Log\LoggerInterface|\Drupal\linkychecker\LinkyCheckerMemoryLogger
+   * @var LoggerInterface|LinkyCheckerMemoryLogger
    */
   protected $logger;
 
   /**
    * Constructs a new LinkyCheckerLinkyCheckForm.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\linkychecker\LinkyCheckerCrawlerInterface $crawler
+   * @param LinkyCheckerCrawlerInterface $crawler
    *   Linky checker crawler.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The in-memory logger.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info, TimeInterface $time, LinkyCheckerCrawlerInterface $crawler, LoggerInterface $logger) {
diff --git a/src/Form/LinkyCheckerLinkyExcludeForm.php b/src/Form/LinkyCheckerLinkyExcludeForm.php
index 143bde4..812e518 100644
--- a/src/Form/LinkyCheckerLinkyExcludeForm.php
+++ b/src/Form/LinkyCheckerLinkyExcludeForm.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\linkychecker\Form;
 
+use Drupal\linky\LinkyInterface;
 use Drupal\Core\Entity\ContentEntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -11,7 +12,7 @@ use Drupal\Core\Url;
 /**
  * Link entity exclusion form.
  *
- * @property \Drupal\linky\LinkyInterface $entity
+ * @property LinkyInterface $entity
  */
 class LinkyCheckerLinkyExcludeForm extends ContentEntityConfirmFormBase {
 
diff --git a/src/Form/LinkyCheckerLinkyIncludeForm.php b/src/Form/LinkyCheckerLinkyIncludeForm.php
index 28a6a84..47a8548 100644
--- a/src/Form/LinkyCheckerLinkyIncludeForm.php
+++ b/src/Form/LinkyCheckerLinkyIncludeForm.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\linkychecker\Form;
 
+use Drupal\linky\LinkyInterface;
 use Drupal\Core\Entity\ContentEntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -11,7 +12,7 @@ use Drupal\Core\Url;
 /**
  * Link entity inclusion form.
  *
- * @property \Drupal\linky\LinkyInterface $entity
+ * @property LinkyInterface $entity
  */
 class LinkyCheckerLinkyIncludeForm extends ContentEntityConfirmFormBase {
 
diff --git a/src/LinkyCheckerCrawlQueue.php b/src/LinkyCheckerCrawlQueue.php
index 6c0a1c6..c4b30ed 100644
--- a/src/LinkyCheckerCrawlQueue.php
+++ b/src/LinkyCheckerCrawlQueue.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\linkychecker;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Queue\QueueInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -25,59 +27,59 @@ class LinkyCheckerCrawlQueue implements LinkyCheckerCrawlQueueInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The state key value collection.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Storage for linky entities.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkyStorage;
 
   /**
    * Service for obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The crawl job queue.
    *
-   * @var \Drupal\Core\Queue\QueueInterface
+   * @var QueueInterface
    */
   protected $crawlJobQueue;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Constructs a new linky checker queue service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key value collection.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Service for obtaining system time.
-   * @param \Drupal\Core\Queue\QueueFactory $queueFactory
+   * @param QueueFactory $queueFactory
    *   The queue factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(ConfigFactoryInterface $configFactory, StateInterface $state, EntityTypeManagerInterface $entityTypeManager, TimeInterface $time, QueueFactory $queueFactory, LoggerInterface $logger) {
diff --git a/src/LinkyCheckerCrawlQueueInterface.php b/src/LinkyCheckerCrawlQueueInterface.php
index 8ed0af0..14fa2ed 100644
--- a/src/LinkyCheckerCrawlQueueInterface.php
+++ b/src/LinkyCheckerCrawlQueueInterface.php
@@ -39,7 +39,7 @@ interface LinkyCheckerCrawlQueueInterface {
    *   Set a timestamp for any links older than this will be re-added to the
    *   queue.
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   An prepared query.
    */
   public function getLinksNeedingUpdate(int $threshold): QueryInterface;
diff --git a/src/LinkyCheckerCrawler.php b/src/LinkyCheckerCrawler.php
index 32ecb4d..23ccc6c 100644
--- a/src/LinkyCheckerCrawler.php
+++ b/src/LinkyCheckerCrawler.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\linkychecker;
 
+use Drupal\link\Plugin\Field\FieldType\LinkItem;
+use Psr\Http\Message\ResponseInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\linky\LinkyInterface;
@@ -18,41 +20,41 @@ class LinkyCheckerCrawler implements LinkyCheckerCrawlerInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The default http client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * Service for obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Constructs a new LinkyCheckerCrawler.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
-   * @param \GuzzleHttp\Client $httpClient
+   * @param Client $httpClient
    *   The default http client.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Service for obtaining system time.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(ConfigFactoryInterface $configFactory, Client $httpClient, TimeInterface $time, LoggerInterface $logger) {
@@ -74,7 +76,7 @@ class LinkyCheckerCrawler implements LinkyCheckerCrawlerInterface {
   /**
    * Check the status of a link.
    *
-   * @param \Drupal\linky\LinkyInterface $link
+   * @param LinkyInterface $link
    *   A linky entity.
    */
   protected function checkLink(LinkyInterface $link): void {
@@ -87,7 +89,7 @@ class LinkyCheckerCrawler implements LinkyCheckerCrawlerInterface {
     $error = FALSE;
     $message = NULL;
 
-    /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $item */
+    /** @var LinkItem $item */
     try {
       $item = $link->link->first();
       $url = $item->getUrl();
@@ -236,7 +238,7 @@ class LinkyCheckerCrawler implements LinkyCheckerCrawlerInterface {
    * @param string $method
    *   The HTTP method.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   A response.
    *
    * @throws \Exception
diff --git a/src/LinkyCheckerCrawlerInterface.php b/src/LinkyCheckerCrawlerInterface.php
index 371bb3f..4795a84 100644
--- a/src/LinkyCheckerCrawlerInterface.php
+++ b/src/LinkyCheckerCrawlerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\linkychecker;
 
+use Drupal\linky\LinkyInterface;
 /**
  * Interface for the linky checker crawler.
  */
@@ -10,7 +11,7 @@ interface LinkyCheckerCrawlerInterface {
   /**
    * Crawls the link and stores the result.
    *
-   * @param \Drupal\linky\LinkyInterface[] $links
+   * @param LinkyInterface[] $links
    *   An array of linky entities.
    */
   public function checkLinks(array $links);
diff --git a/src/LinkyCheckerCronHook.php b/src/LinkyCheckerCronHook.php
index a7c6fc7..15bf10b 100644
--- a/src/LinkyCheckerCronHook.php
+++ b/src/LinkyCheckerCronHook.php
@@ -14,23 +14,23 @@ class LinkyCheckerCronHook implements ContainerInjectionInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The linky checker queue service.
    *
-   * @var \Drupal\linkychecker\LinkyCheckerCrawlQueueInterface
+   * @var LinkyCheckerCrawlQueueInterface
    */
   protected $checkerCrawlQueue;
 
   /**
    * Constructs a new LinkyCheckerCronHook.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
-   * @param \Drupal\linkychecker\LinkyCheckerCrawlQueueInterface $checkerCrawlQueue
+   * @param LinkyCheckerCrawlQueueInterface $checkerCrawlQueue
    *   The linky checker queue service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, LinkyCheckerCrawlQueueInterface $checkerCrawlQueue) {
diff --git a/src/Plugin/QueueWorker/CrawlJob.php b/src/Plugin/QueueWorker/CrawlJob.php
index b3eb8f2..10c4510 100644
--- a/src/Plugin/QueueWorker/CrawlJob.php
+++ b/src/Plugin/QueueWorker/CrawlJob.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\linkychecker\Plugin\QueueWorker;
 
+use Drupal\linky\LinkyInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Queue\QueueWorkerBase;
@@ -22,14 +23,14 @@ class CrawlJob extends QueueWorkerBase implements ContainerFactoryPluginInterfac
   /**
    * The linky checker crawler.
    *
-   * @var \Drupal\linkychecker\LinkyCheckerCrawlerInterface
+   * @var LinkyCheckerCrawlerInterface
    */
   protected $crawler;
 
   /**
    * Storage for linky entities.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkyStorage;
 
@@ -42,9 +43,9 @@ class CrawlJob extends QueueWorkerBase implements ContainerFactoryPluginInterfac
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\linkychecker\LinkyCheckerCrawlerInterface $linkyCheckerCrawler
+   * @param LinkyCheckerCrawlerInterface $linkyCheckerCrawler
    *   The linky checker crawler.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $linkyStorage
+   * @param EntityStorageInterface $linkyStorage
    *   Storage for linky entities.
    */
   public function __construct(array $configuration, string $plugin_id, $plugin_definition, LinkyCheckerCrawlerInterface $linkyCheckerCrawler, EntityStorageInterface $linkyStorage) {
@@ -73,7 +74,7 @@ class CrawlJob extends QueueWorkerBase implements ContainerFactoryPluginInterfac
     /** @var int[] $ids */
     $ids = $data['linky_ids'];
     foreach ($this->linkyStorage->loadMultiple($ids) as $linky) {
-      /** @var \Drupal\linky\LinkyInterface $linky */
+      /** @var LinkyInterface $linky */
       $this->crawler->checkLinks([$linky]);
     }
   }
diff --git a/tests/src/Functional/LinkyCheckerIncludeExcludeTest.php b/tests/src/Functional/LinkyCheckerIncludeExcludeTest.php
index 0eeae87..877aec7 100644
--- a/tests/src/Functional/LinkyCheckerIncludeExcludeTest.php
+++ b/tests/src/Functional/LinkyCheckerIncludeExcludeTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\linkychecker\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\linky\LinkyInterface;
 use Drupal\Tests\BrowserTestBase;
 
@@ -15,7 +16,7 @@ class LinkyCheckerIncludeExcludeTest extends BrowserTestBase {
   /**
    * The admin user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $adminUser;
 
@@ -39,7 +40,7 @@ class LinkyCheckerIncludeExcludeTest extends BrowserTestBase {
   /**
    * Sets the test up.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Test admin user.
     $this->adminUser = $this->drupalCreateUser($this->permissions);
@@ -98,7 +99,7 @@ class LinkyCheckerIncludeExcludeTest extends BrowserTestBase {
   /**
    * Asserts number of operation links for given table row.
    *
-   * @param \Drupal\linky\LinkyInterface $linky
+   * @param LinkyInterface $linky
    *   The current linky.
    * @param int $index
    *   The row number.
@@ -113,28 +114,28 @@ class LinkyCheckerIncludeExcludeTest extends BrowserTestBase {
     foreach ($operation_links as $link) {
       switch ($link->getText()) {
         case 'Edit':
-          $this->assertContains("$url/edit?destination=", $link->getAttribute('href'));
+          $this->assertStringContainsString("$url/edit?destination=", $link->getAttribute('href'));
           $number_of_links_found++;
           break;
 
         case 'Re-check':
-          $this->assertIdentical("$url/crawl", $link->getAttribute('href'));
+          $this->assertSame("$url/crawl", $link->getAttribute('href'));
           $number_of_links_found++;
           break;
 
         case 'Exclude':
-          $this->assertIdentical("$url/exclude", $link->getAttribute('href'));
+          $this->assertSame("$url/exclude", $link->getAttribute('href'));
           $number_of_links_found++;
           break;
 
         case 'Remove Exclusion':
-          $this->assertIdentical("$url/include", $link->getAttribute('href'));
+          $this->assertSame("$url/include", $link->getAttribute('href'));
           $number_of_links_found++;
           break;
 
       }
     }
-    $this->assertEqual($number_of_links, $number_of_links_found);
+    $this->assertEquals($number_of_links, $number_of_links_found);
   }
 
 }
diff --git a/tests/src/Kernel/LinkyCheckerCrawlQueueTest.php b/tests/src/Kernel/LinkyCheckerCrawlQueueTest.php
index a399a3a..5f84b69 100644
--- a/tests/src/Kernel/LinkyCheckerCrawlQueueTest.php
+++ b/tests/src/Kernel/LinkyCheckerCrawlQueueTest.php
@@ -29,7 +29,7 @@ class LinkyCheckerCrawlQueueTest extends LinkyKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setup() {
+  public function setup(): void {
     parent::setUp();
     $this->installSchema('user', 'users_data');
     $this->installEntitySchema('linky');
diff --git a/tests/src/Kernel/LinkyFieldTest.php b/tests/src/Kernel/LinkyFieldTest.php
index 7b75466..365f513 100644
--- a/tests/src/Kernel/LinkyFieldTest.php
+++ b/tests/src/Kernel/LinkyFieldTest.php
@@ -25,7 +25,7 @@ class LinkyFieldTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('user', 'users_data');
     $this->installEntitySchema('linky');
