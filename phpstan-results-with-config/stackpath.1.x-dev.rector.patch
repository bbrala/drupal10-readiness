diff --git a/src/Event/StackPathPurgerItemsAlter.php b/src/Event/StackPathPurgerItemsAlter.php
index cb91cba..64e458d 100644
--- a/src/Event/StackPathPurgerItemsAlter.php
+++ b/src/Event/StackPathPurgerItemsAlter.php
@@ -16,7 +16,7 @@ class StackPathPurgerItemsAlter extends Event {
   /**
    * The purger instance.
    *
-   * @var \Drupal\purge\Plugin\Purge\Purger\PurgerInterface
+   * @var PurgerInterface
    */
   protected $purger;
 
@@ -30,7 +30,7 @@ class StackPathPurgerItemsAlter extends Event {
   /**
    * Constructs StackPathPurgerItemsAlter.
    *
-   * @param \Drupal\purge\Plugin\Purge\Purger\PurgerInterface $purger
+   * @param PurgerInterface $purger
    * @param array $items
    */
   public function __construct(PurgerInterface $purger, array $items = []) {
@@ -64,7 +64,7 @@ class StackPathPurgerItemsAlter extends Event {
   /**
    * Gets purger.
    *
-   * @return \Drupal\purge\Plugin\Purge\Purger\PurgerInterface
+   * @return PurgerInterface
    *   The purger that is used to invalidate the items.
    */
   public function getPurger() {
diff --git a/src/Form/StackPathPurgerConfigForm.php b/src/Form/StackPathPurgerConfigForm.php
index beeda2a..ac21bac 100644
--- a/src/Form/StackPathPurgerConfigForm.php
+++ b/src/Form/StackPathPurgerConfigForm.php
@@ -18,16 +18,16 @@ class StackPathPurgerConfigForm extends PurgerConfigFormBase {
   /**
    * The http client.
    *
-   * @var \Drupal\stackpath\StackPathApi
+   * @var StackPathApi
    */
   protected $stackPath;
 
   /**
    * Constructs a \Drupal\purge_purger_http\Form\ConfigurationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\stackpath\StackPathApi $stackpath_api
+   * @param StackPathApi $stackpath_api
    *   StackPath API service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StackPathApi $stackpath_api) {
diff --git a/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php b/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php
index 001a021..8216dc4 100644
--- a/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php
+++ b/src/Plugin/Purge/DiagnosticCheck/ConfigurationCheck.php
@@ -22,7 +22,7 @@ class ConfigurationCheck extends DiagnosticCheckBase implements DiagnosticCheckI
   /**
    * The purgers service.
    *
-   * @var \Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface
+   * @var PurgersServiceInterface
    */
   protected $purgePurgers;
 
@@ -35,7 +35,7 @@ class ConfigurationCheck extends DiagnosticCheckBase implements DiagnosticCheckI
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\purge\Plugin\Purge\Purger\PurgersServiceInterface $purge_purgers
+   * @param PurgersServiceInterface $purge_purgers
    *   The purge executive service, which wipes content from external caches.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PurgersServiceInterface $purge_purgers) {
diff --git a/src/Plugin/Purge/Purger/StackPathPurger.php b/src/Plugin/Purge/Purger/StackPathPurger.php
index 63c4af2..2b962db 100644
--- a/src/Plugin/Purge/Purger/StackPathPurger.php
+++ b/src/Plugin/Purge/Purger/StackPathPurger.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\stackpath\Plugin\Purge\Purger;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\purge\Plugin\Purge\Invalidation\Exception\InvalidStateException;
+use Psr\Http\Message\ResponseInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\purge\Plugin\Purge\Invalidation\InvalidationInterface;
 use Drupal\purge\Plugin\Purge\Purger\PurgerBase;
@@ -34,28 +37,28 @@ class StackPathPurger extends PurgerBase implements PurgerInterface {
   /**
    * StackPath API.
    *
-   * @var \Drupal\stackpath\StackPathApi
+   * @var StackPathApi
    */
   protected $stackPath;
 
   /**
    * Configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $factory;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The settings entity holding all configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $settings;
 
@@ -68,11 +71,11 @@ class StackPathPurger extends PurgerBase implements PurgerInterface {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\stackpath\StackPathApi $stackpath_api
+   * @param StackPathApi $stackpath_api
    *   StackPath API service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $factory
+   * @param ConfigFactoryInterface $factory
    *   Configuration factory.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, StackPathApi $stackpath_api, ConfigFactoryInterface $factory, EventDispatcherInterface $event_dispatcher) {
@@ -138,7 +141,7 @@ class StackPathPurger extends PurgerBase implements PurgerInterface {
   /**
    * Invalidate a set of urls.
    *
-   * @param \Drupal\purge\Plugin\Purge\Invalidation\InvalidationInterface[] $invalidations
+   * @param InvalidationInterface[] $invalidations
    *   The invalidator instance.
    *
    * @throws \Exception
@@ -179,7 +182,7 @@ class StackPathPurger extends PurgerBase implements PurgerInterface {
   /**
    * Invalidate a set of tags.
    *
-   * @param \Drupal\purge\Plugin\Purge\Invalidation\InvalidationInterface[] $invalidations
+   * @param InvalidationInterface[] $invalidations
    *   The invalidator instance.
    *
    * @throws \Exception
@@ -212,10 +215,10 @@ class StackPathPurger extends PurgerBase implements PurgerInterface {
   /**
    * Invalidate everything.
    *
-   * @param \Drupal\purge\Plugin\Purge\Invalidation\InvalidationInterface[] $invalidations
+   * @param InvalidationInterface[] $invalidations
    *   The invalidator instance.
    *
-   * @throws \Drupal\purge\Plugin\Purge\Invalidation\Exception\InvalidStateException
+   * @throws InvalidStateException
    */
   public function invalidateAll(array $invalidations) {
     $this->updateState($invalidations, InvalidationInterface::PROCESSING);
@@ -239,7 +242,7 @@ class StackPathPurger extends PurgerBase implements PurgerInterface {
     try {
       $this->stackPath->getToken($this->settings->get('client_id'), $this->settings->get('client_secret'));
       // Purge everything for the given zone.
-      /** @var \Psr\Http\Message\ResponseInterface $response */
+      /** @var ResponseInterface $response */
       $response = $this->stackPath->invalidate($this->settings->get('stack_id'), $type, $invalidates);
 
       // If successfully clears cache.
@@ -286,12 +289,12 @@ class StackPathPurger extends PurgerBase implements PurgerInterface {
   /**
    * Update the invalidation state of items.
    *
-   * @param \Drupal\purge\Plugin\Purge\Invalidation\InvalidationInterface[] $invalidations
+   * @param InvalidationInterface[] $invalidations
    *   The invalidator instance.
    * @param int $invalidation_state
    *   The invalidation state.
    *
-   * @throws \Drupal\purge\Plugin\Purge\Invalidation\Exception\InvalidStateException
+   * @throws InvalidStateException
    */
   protected function updateState(array $invalidations, $invalidation_state) {
     // Update the state.
diff --git a/src/Plugin/Purge/TagsHeader/StackPathTagsHeader.php b/src/Plugin/Purge/TagsHeader/StackPathTagsHeader.php
index 7598df8..61850c7 100644
--- a/src/Plugin/Purge/TagsHeader/StackPathTagsHeader.php
+++ b/src/Plugin/Purge/TagsHeader/StackPathTagsHeader.php
@@ -20,7 +20,7 @@ class StackPathTagsHeader extends TagsHeaderBase implements TagsHeaderInterface
   /**
    * StackPath API service.
    *
-   * @var \Drupal\stackpath\StackPathApi
+   * @var StackPathApi
    */
   protected $stackPath;
 
@@ -33,7 +33,7 @@ class StackPathTagsHeader extends TagsHeaderBase implements TagsHeaderInterface
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\stackpath\StackPathApi $stackpath_api
+   * @param StackPathApi $stackpath_api
    *   StackPath API service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, StackPathApi $stackpath_api) {
diff --git a/src/StackPathApi.php b/src/StackPathApi.php
index afe589a..4ebe1ec 100644
--- a/src/StackPathApi.php
+++ b/src/StackPathApi.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stackpath;
 
+use GuzzleHttp\ClientInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Http\ClientFactory;
 use Drupal\Core\Logger\LoggerChannelInterface;
@@ -25,7 +26,7 @@ class StackPathApi {
   /**
    * HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
@@ -39,16 +40,16 @@ class StackPathApi {
   /**
    * Logger instance.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * StackPathApi constructor.
    *
-   * @param \Drupal\Core\Http\ClientFactory $clientFactory
+   * @param ClientFactory $clientFactory
    *   Client Factory.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $loggerChannel
+   * @param LoggerChannelInterface $loggerChannel
    *   Logger.
    */
   public function __construct(ClientFactory $clientFactory, LoggerChannelInterface $loggerChannel) {
@@ -143,7 +144,7 @@ class StackPathApi {
   /**
    * Process response.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   Response object.
    *
    * @return mixed
