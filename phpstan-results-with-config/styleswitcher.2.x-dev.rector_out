modules/contrib/styleswitcher/src/Controller/DefaultController.php
modules/contrib/styleswitcher/src/Form/StyleswitcherAdmin.php
modules/contrib/styleswitcher/src/Form/StyleswitcherConfigTheme.php
modules/contrib/styleswitcher/src/Form/StyleswitcherStyleDeleteForm.php
modules/contrib/styleswitcher/src/Form/StyleswitcherStyleForm.php
modules/contrib/styleswitcher/src/ParamConverter/StyleswitcherStyleConverter.php
modules/contrib/styleswitcher/src/Plugin/Block/Styleswitcher.php
modules/contrib/styleswitcher/src/Plugin/Derivative/ThemeLocalTask.php
modules/contrib/styleswitcher/src/StyleswitcherElementInfoAlter.php
modules/contrib/styleswitcher/styleswitcher.install
modules/contrib/styleswitcher/styleswitcher.module
modules/contrib/styleswitcher/tests/fixtures/migrate/drupal7.styleswitcher.php
modules/contrib/styleswitcher/tests/fixtures/update/8201/drupal-8.8.0.styleswitcher.php
modules/contrib/styleswitcher/tests/modules/styleswitcher_test_legacy_cookies/src/Controller/Controller.php
modules/contrib/styleswitcher/tests/modules/styleswitcher_test_theme_per_page/src/Controller/Controller.php
modules/contrib/styleswitcher/tests/modules/styleswitcher_test_theme_per_page/src/Theme/ThemeNegotiator.php
modules/contrib/styleswitcher/tests/src/Functional/AssertTrait.php
modules/contrib/styleswitcher/tests/src/Functional/BlockTest.php
modules/contrib/styleswitcher/tests/src/Functional/ConfigTest.php
modules/contrib/styleswitcher/tests/src/Functional/CookieTest.php
modules/contrib/styleswitcher/tests/src/Functional/CookieUpdateTest.php
modules/contrib/styleswitcher/tests/src/Functional/FormTest.php
modules/contrib/styleswitcher/tests/src/Functional/HelperTrait.php
modules/contrib/styleswitcher/tests/src/Functional/InitialStateTest.php
modules/contrib/styleswitcher/tests/src/Functional/MultiThemeTest.php
modules/contrib/styleswitcher/tests/src/Functional/Update/StyleswitcherUpdate8201Test.php
modules/contrib/styleswitcher/tests/src/Functional/Update/UpdatePathTestInstallHelper.php
modules/contrib/styleswitcher/tests/src/Kernel/ConfigTest.php
modules/contrib/styleswitcher/tests/src/Kernel/Migrate/d7/MigrateBlockTest.php
modules/contrib/styleswitcher/tests/src/Kernel/Migrate/d7/MigrateVariablesTest.php

18 files with changes
=====================

1) modules/contrib/styleswitcher/tests/src/Kernel/Migrate/d7/MigrateVariablesTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->loadFixture(__DIR__ . '/../../../../fixtures/migrate/drupal7.styleswitcher.php');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/styleswitcher/tests/src/Kernel/Migrate/d7/MigrateBlockTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\styleswitcher\Kernel\Migrate\d7;

+use Drupal\block\BlockInterface;
 use Drupal\block\Entity\Block;
 use Drupal\Tests\migrate_drupal\Kernel\d7\MigrateDrupal7TestBase;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->loadFixture(__DIR__ . '/../../../../fixtures/migrate/drupal7.styleswitcher.php');

@@ @@
   public function testBlockMigration() {
     $block = Block::load('bartik_styleswitcher_styleswitcher');
     $this->assertTrue($block instanceof Block);
-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $this->assertSame('styleswitcher_styleswitcher', $block->getPluginId());

     $this->assertSame('sidebar_first', $block->getRegion());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/styleswitcher/tests/src/Kernel/ConfigTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(static::$modules);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/styleswitcher/tests/src/Functional/Update/UpdatePathTestInstallHelper.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The DB connection object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected static $connection;

@@ @@
   /**
    * Gets the DB connection object.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   The DB connection object.
    */
   protected static function getConnection(): Connection {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/styleswitcher/tests/src/Functional/MultiThemeTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->themeStyles = [
@@ @@
           $this->assertStringContainsString($label, $label_cell->getText());
         }
         else {
-          $this->assertContains($label, $label_cell->getText());
+          $this->assertStringContainsString($label, $label_cell->getText());
         }
       }
     }
@@ @@
         $this->assertStringContainsString('/styleswitcher/css/' . $theme, $link->getAttribute('href'));
       }
       else {
-        $this->assertContains('/styleswitcher/css/' . $theme, $link->getAttribute('href'));
+        $this->assertStringContainsString('/styleswitcher/css/' . $theme, $link->getAttribute('href'));
       }
     }
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/styleswitcher/tests/src/Functional/InitialStateTest.php:38

    ---------- begin diff ----------
@@ @@
       $this->assertStringContainsString("/styleswitcher/css/{$this->defaultTheme}", $link->getAttribute('href'));
     }
     else {
-      $this->assertContains("/styleswitcher/css/{$this->defaultTheme}", $link->getAttribute('href'));
+      $this->assertStringContainsString("/styleswitcher/css/{$this->defaultTheme}", $link->getAttribute('href'));
     }
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/styleswitcher/tests/src/Functional/FormTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $user = $this->drupalCreateUser(['administer styleswitcher']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/styleswitcher/tests/src/Functional/CookieUpdateTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->enablePageCaching();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/styleswitcher/tests/src/Functional/CookieTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->enablePageCaching();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/styleswitcher/tests/src/Functional/ConfigTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->enablePageCaching();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/styleswitcher/tests/modules/styleswitcher_test_legacy_cookies/src/Controller/Controller.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleswitcher_test_legacy_cookies\Controller;

+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Extension\ThemeHandlerInterface;
@@ @@
   /**
    * The Datetime service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Constructs a new Controller.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The DateTime service.
    */
   public function __construct(ThemeHandlerInterface $theme_handler, TimeInterface $time) {
@@ @@
    * @param int $version
    *   Version of a Style Switcher cookie to set.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Response object.
    */
   public function cookieSetter($version) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/styleswitcher/styleswitcher.module:31

    ---------- begin diff ----------
@@ @@
  * Implements hook_css_alter().
  */
 function styleswitcher_css_alter(&$css, AttachedAssetsInterface $assets) {
-  $path = drupal_get_path('module', 'styleswitcher') . '/styleswitcher.active.css';
+  $path = \Drupal::service('extension.list.module')->getPath('styleswitcher') . '/styleswitcher.active.css';

   // The dynamic-css library is not always attached. For example, maintenance
   // pages don't have it. So check for its presence.
@@ @@
   }

   $theme_styles = [];
-  $theme_path = drupal_get_path('theme', $theme);
+  $theme_path = \Drupal::service('extension.list.theme')->getPath($theme);
   $themes = Drupal::service('theme_handler')->listInfo();
   $theme_info = isset($themes[$theme]) ? $themes[$theme]->info : [];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


13) modules/contrib/styleswitcher/src/Plugin/Derivative/ThemeLocalTask.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Constructs a new ThemeLocalTask.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(ThemeHandlerInterface $theme_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/styleswitcher/src/Plugin/Block/Styleswitcher.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * The Redirect Destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;

@@ @@
   /**
    * Configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The Redirect Destination service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Configuration factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ThemeManagerInterface $theme_manager, RedirectDestinationInterface $redirect_destination, ConfigFactoryInterface $config_factory) {
@@ @@

         // Make paths absolute for JS.
         if (isset($style['path'])) {
-          $styles[$name]['path'] = file_create_url($style['path']);
+          $styles[$name]['path'] = \Drupal::service('file_url_generator')->generateAbsoluteString($style['path']);
         }
         else {
           $styles[$name]['path'] = Url::fromRoute('styleswitcher.css', ['theme' => $theme], ['absolute' => TRUE])->toString();
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/styleswitcher/src/Form/StyleswitcherStyleForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * Constructs the StyleswitcherStyleForm.
    *
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
    */
   public function __construct(ThemeManagerInterface $theme_manager) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array|null $style
    *   (optional) Style to edit. The structure of an array is the same as
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/styleswitcher/src/Form/StyleswitcherStyleDeleteForm.php:52

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $style
    *   Style to delete. The structure of an array is the same as returned from
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/styleswitcher/src/Form/StyleswitcherConfigTheme.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Constructs the StyleswitcherConfigTheme.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(ThemeHandlerInterface $theme_handler) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $theme
    *   Name of the theme to configure styles for.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/styleswitcher/src/Controller/DefaultController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleswitcher\Controller;

+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Extension\ThemeHandlerInterface;
@@ @@
   /**
    * The Datetime service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Constructs a new DefaultController.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The DateTime service.
    */
   public function __construct(ThemeHandlerInterface $theme_handler, TimeInterface $time) {
@@ @@
    *   New active style. The structure of an array is the same as returned from
    *   styleswitcher_style_load().
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Response object.
    *
    * @see styleswitcher_style_load()
@@ @@
    *   Name of the theme to find the active style for. This argument is needed
    *   to know what the page user came from and what theme was used there.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Response object.
    */
   public function styleswitcherCss($theme) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 18 files have been changed by Rector                                      

