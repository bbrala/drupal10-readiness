diff --git a/src/Adapter/TamperableComplexDataAdapter.php b/src/Adapter/TamperableComplexDataAdapter.php
index b91a28d..81c9b7f 100644
--- a/src/Adapter/TamperableComplexDataAdapter.php
+++ b/src/Adapter/TamperableComplexDataAdapter.php
@@ -13,14 +13,14 @@ class TamperableComplexDataAdapter implements TamperableItemInterface {
   /**
    * Typed complex data object.
    *
-   * @var \Drupal\Core\TypedData\ComplexDataInterface
+   * @var ComplexDataInterface
    */
   protected $complexData;
 
   /**
    * Create a new instance of the adapter.
    *
-   * @param \Drupal\Core\TypedData\ComplexDataInterface $complexData
+   * @param ComplexDataInterface $complexData
    *   Typed complex data object.
    */
   public function __construct(ComplexDataInterface $complexData) {
diff --git a/src/Annotation/Tamper.php b/src/Annotation/Tamper.php
index 9341391..e96c077 100644
--- a/src/Annotation/Tamper.php
+++ b/src/Annotation/Tamper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tamper\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -26,7 +27,7 @@ class Tamper extends Plugin {
   /**
    * The human-readable name of the tamper plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -35,7 +36,7 @@ class Tamper extends Plugin {
   /**
    * A short description of the tamper plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -44,7 +45,7 @@ class Tamper extends Plugin {
   /**
    * The category under which the tamper plugin should be listed in the UI.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/Tamper/CountryToCode.php b/src/Plugin/Tamper/CountryToCode.php
index bab5104..eaada69 100644
--- a/src/Plugin/Tamper/CountryToCode.php
+++ b/src/Plugin/Tamper/CountryToCode.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tamper\Plugin\Tamper;
 
+use Drupal\Core\Locale\CountryManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\tamper\Exception\TamperException;
 use Drupal\tamper\TamperableItemInterface;
@@ -23,7 +24,7 @@ class CountryToCode extends TamperBase implements ContainerFactoryPluginInterfac
   /**
    * Holds the CountryManager object so we can grab the country list.
    *
-   * @var \Drupal\Core\Locale\CountryManagerInterface
+   * @var CountryManagerInterface
    */
   protected $countryManager;
 
diff --git a/src/Plugin/Tamper/Transliteration.php b/src/Plugin/Tamper/Transliteration.php
index c16c1fd..86588dc 100644
--- a/src/Plugin/Tamper/Transliteration.php
+++ b/src/Plugin/Tamper/Transliteration.php
@@ -25,7 +25,7 @@ class Transliteration extends TamperBase implements ContainerFactoryPluginInterf
   /**
    * The transliteration service.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;
 
@@ -40,7 +40,7 @@ class Transliteration extends TamperBase implements ContainerFactoryPluginInterf
    *   The plugin definition.
    * @param mixed $source_definition
    *   A definition of which sources there are that Tamper plugins can use.
-   * @param \Drupal\Component\Transliteration\TransliterationInterface $transliteration
+   * @param TransliterationInterface $transliteration
    *   The transliteration service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, $source_definition, TransliterationInterface $transliteration) {
diff --git a/src/TamperBase.php b/src/TamperBase.php
index 6774d8b..ea1f245 100644
--- a/src/TamperBase.php
+++ b/src/TamperBase.php
@@ -14,7 +14,7 @@ abstract class TamperBase extends PluginBase implements TamperInterface {
   /**
    * The source definition.
    *
-   * @var \Drupal\tamper\SourceDefinitionInterface
+   * @var SourceDefinitionInterface
    */
   protected $sourceDefinition;
 
@@ -27,7 +27,7 @@ abstract class TamperBase extends PluginBase implements TamperInterface {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\tamper\SourceDefinitionInterface $source_definition
+   * @param SourceDefinitionInterface $source_definition
    *   A definition of which sources there are that Tamper plugins can use.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, SourceDefinitionInterface $source_definition) {
diff --git a/src/TamperInterface.php b/src/TamperInterface.php
index d079ec5..734ced5 100644
--- a/src/TamperInterface.php
+++ b/src/TamperInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\tamper;
 
+use Drupal\tamper\Exception\TamperException;
+use Drupal\tamper\Exception\SkipTamperDataException;
+use Drupal\tamper\Exception\SkipTamperItemException;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Plugin\PluginFormInterface;
@@ -18,17 +21,17 @@ interface TamperInterface extends PluginInspectionInterface, PluginFormInterface
    *
    * @param mixed $data
    *   The data to tamper.
-   * @param \Drupal\tamper\TamperableItemInterface $item
+   * @param TamperableItemInterface $item
    *   Item that can be tampered as part of a plugin's execution.
    *
    * @return mixed
    *   The tampered data.
    *
-   * @throws \Drupal\tamper\Exception\TamperException
+   * @throws TamperException
    *   When the plugin can not tamper the given data.
-   * @throws \Drupal\tamper\Exception\SkipTamperDataException
+   * @throws SkipTamperDataException
    *   When the calling tamper process should be skipped for the given data.
-   * @throws \Drupal\tamper\Exception\SkipTamperItemException
+   * @throws SkipTamperItemException
    *   When the calling tamper process should be skipped for the given item.
    */
   public function tamper($data, TamperableItemInterface $item = NULL);
diff --git a/src/TamperManager.php b/src/TamperManager.php
index 940fc41..4c722df 100644
--- a/src/TamperManager.php
+++ b/src/TamperManager.php
@@ -18,9 +18,9 @@ class TamperManager extends DefaultPluginManager implements TamperManagerInterfa
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ -77,7 +77,7 @@ class TamperManager extends DefaultPluginManager implements TamperManagerInterfa
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\tamper\TamperInterface[]
+   * @return TamperInterface[]
    *   List of tamper plugins.
    */
   public function getSortedDefinitions(array $definitions = NULL) {
diff --git a/src/TamperPluginCollection.php b/src/TamperPluginCollection.php
index 754b1d5..2ca7ce6 100644
--- a/src/TamperPluginCollection.php
+++ b/src/TamperPluginCollection.php
@@ -14,16 +14,16 @@ class TamperPluginCollection extends DefaultLazyPluginCollection {
   /**
    * A definition of which sources there are that Tamper plugins can use.
    *
-   * @var \Drupal\tamper\SourceDefinitionInterface
+   * @var SourceDefinitionInterface
    */
   protected $sourceDefinition;
 
   /**
    * Constructs a new TamperPluginCollection object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The manager to be used for instantiating plugins.
-   * @param \Drupal\tamper\SourceDefinitionInterface $source_definition
+   * @param SourceDefinitionInterface $source_definition
    *   A definition of which sources there are that Tamper plugins can use.
    * @param array $configurations
    *   (optional) An associative array containing the initial configuration for
diff --git a/tests/src/Kernel/TamperConfigSchemaTest.php b/tests/src/Kernel/TamperConfigSchemaTest.php
index 69effc8..0567d77 100644
--- a/tests/src/Kernel/TamperConfigSchemaTest.php
+++ b/tests/src/Kernel/TamperConfigSchemaTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tamper\Kernel;
 
+use Drupal\entity_test\Entity\EntityTestWithBundle;
 use Drupal\entity_test\Entity\EntityTestBundle;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\tamper\SourceDefinition;
@@ -25,7 +26,7 @@ class TamperConfigSchemaTest extends KernelTestBase {
   /**
    * The config entity to add third party settings to.
    *
-   * @var \Drupal\entity_test\Entity\EntityTestWithBundle
+   * @var EntityTestWithBundle
    */
   protected $entity;
 
diff --git a/tests/src/Unit/Adapter/TamperableComplexDataAdapterTest.php b/tests/src/Unit/Adapter/TamperableComplexDataAdapterTest.php
index 2122465..5995ceb 100644
--- a/tests/src/Unit/Adapter/TamperableComplexDataAdapterTest.php
+++ b/tests/src/Unit/Adapter/TamperableComplexDataAdapterTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tamper\Unit\Adapter;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\TypedData\ComplexDataInterface;
 use Drupal\tamper\Adapter\TamperableComplexDataAdapter;
 use Drupal\Tests\UnitTestCase;
@@ -15,14 +16,14 @@ class TamperableComplexDataAdapterTest extends UnitTestCase {
   /**
    * Complex data object.
    *
-   * @var \Drupal\Core\TypedData\ComplexDataInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var ComplexDataInterface|MockObject
    */
   protected $complexData;
 
   /**
    * Adapter for the complex data.
    *
-   * @var \Drupal\tamper\Adapter\TamperableComplexDataAdapter
+   * @var TamperableComplexDataAdapter
    */
   protected $adapter;
 
@@ -36,6 +37,7 @@ class TamperableComplexDataAdapterTest extends UnitTestCase {
 
   /**
    * @covers ::getSource
+   * @doesNotPerformAssertions
    */
   public function testGetSource() {
     $this->complexData->expects($this->once())
@@ -46,6 +48,7 @@ class TamperableComplexDataAdapterTest extends UnitTestCase {
 
   /**
    * @covers ::getSourceProperty
+   * @doesNotPerformAssertions
    */
   public function testGetSourceProperty() {
     $this->complexData->expects($this->once())
@@ -57,6 +60,7 @@ class TamperableComplexDataAdapterTest extends UnitTestCase {
 
   /**
    * @covers ::setSourceProperty
+   * @doesNotPerformAssertions
    */
   public function testSetSourceProperty() {
     $this->complexData->expects($this->once())
diff --git a/tests/src/Unit/Plugin/Tamper/CopyTest.php b/tests/src/Unit/Plugin/Tamper/CopyTest.php
index f4a0c2d..6f90803 100644
--- a/tests/src/Unit/Plugin/Tamper/CopyTest.php
+++ b/tests/src/Unit/Plugin/Tamper/CopyTest.php
@@ -23,7 +23,7 @@ class CopyTest extends TamperPluginTestBase {
   /**
    * Get a tamper item to use in the test.
    *
-   * @return \Drupal\tamper\TamperItem
+   * @return TamperItem
    *   The tamperable item to use in the test.
    */
   protected function getTamperItem() {
diff --git a/tests/src/Unit/Plugin/Tamper/CountryToCodeTest.php b/tests/src/Unit/Plugin/Tamper/CountryToCodeTest.php
index 5de684b..6c21488 100644
--- a/tests/src/Unit/Plugin/Tamper/CountryToCodeTest.php
+++ b/tests/src/Unit/Plugin/Tamper/CountryToCodeTest.php
@@ -16,7 +16,7 @@ class CountryToCodeTest extends TamperPluginTestBase {
   /**
    * The mock country manager object.
    *
-   * @var \Drupal\Core\Locale\CountryManagerInterface
+   * @var CountryManagerInterface
    */
   protected $countryManagerMock;
 
diff --git a/tests/src/Unit/Plugin/Tamper/ExplodeTest.php b/tests/src/Unit/Plugin/Tamper/ExplodeTest.php
index 9a9dc49..f66054e 100644
--- a/tests/src/Unit/Plugin/Tamper/ExplodeTest.php
+++ b/tests/src/Unit/Plugin/Tamper/ExplodeTest.php
@@ -61,7 +61,7 @@ class ExplodeTest extends TamperPluginTestBase {
   /**
    * Returns default configuration for the plugin for this test.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Explode
+   * @return Explode
    *   A explode tamper plugin instance.
    */
   protected function getPluginDefaultConfig() {
@@ -71,7 +71,7 @@ class ExplodeTest extends TamperPluginTestBase {
   /**
    * Returns default limit setting for the plugin for this test.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Explode
+   * @return Explode
    *   A explode tamper plugin instance.
    */
   protected function getPluginWithLimit() {
diff --git a/tests/src/Unit/Plugin/Tamper/HashTest.php b/tests/src/Unit/Plugin/Tamper/HashTest.php
index bf04917..ee182f0 100644
--- a/tests/src/Unit/Plugin/Tamper/HashTest.php
+++ b/tests/src/Unit/Plugin/Tamper/HashTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\tamper\Exception\TamperException;
 use Drupal\tamper\Plugin\Tamper\Hash;
 use Drupal\tamper\TamperableItemInterface;
@@ -24,7 +25,7 @@ class HashTest extends TamperPluginTestBase {
   /**
    * Get a mock item to use in the test.
    *
-   * @return \Drupal\tamper\TamperableItemInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @return TamperableItemInterface|MockObject
    *   The mock of a tamperable item to use in the test.
    */
   protected function getMockItem() {
diff --git a/tests/src/Unit/Plugin/Tamper/RequiredTest.php b/tests/src/Unit/Plugin/Tamper/RequiredTest.php
index b67c89d..f91a394 100644
--- a/tests/src/Unit/Plugin/Tamper/RequiredTest.php
+++ b/tests/src/Unit/Plugin/Tamper/RequiredTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;
 
+use Drupal\tamper\TamperInterface;
 use Drupal\tamper\Exception\SkipTamperItemException;
 use Drupal\tamper\Plugin\Tamper\Required;
 
@@ -16,7 +17,7 @@ class RequiredTest extends TamperPluginTestBase {
   /**
    * Instantiates a plugin.
    *
-   * @return \Drupal\tamper\TamperInterface
+   * @return TamperInterface
    *   A tamper plugin.
    */
   protected function instantiatePlugin() {
@@ -26,7 +27,7 @@ class RequiredTest extends TamperPluginTestBase {
   /**
    * Plugin instance, configured to require empty values.
    *
-   * @var \Drupal\tamper\Plugin\Tamper\Required
+   * @var Required
    */
   protected $invertedPlugin;
 
@@ -141,7 +142,7 @@ class RequiredTest extends TamperPluginTestBase {
   /**
    * Get a plugin configured to require items.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Required
+   * @return Required
    *   Plugin instance.
    */
   protected function getRequiredPlugin() {
@@ -155,7 +156,7 @@ class RequiredTest extends TamperPluginTestBase {
   /**
    * Get a plugin configured to require empty items.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Required
+   * @return Required
    *   Plugin instance.
    */
   protected function getInvertedPlugin() {
diff --git a/tests/src/Unit/Plugin/Tamper/RewriteTest.php b/tests/src/Unit/Plugin/Tamper/RewriteTest.php
index b85da44..5f09b91 100644
--- a/tests/src/Unit/Plugin/Tamper/RewriteTest.php
+++ b/tests/src/Unit/Plugin/Tamper/RewriteTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\tamper\Plugin\Tamper\Rewrite;
 use Drupal\tamper\TamperableItemInterface;
 
@@ -26,7 +27,7 @@ class RewriteTest extends TamperPluginTestBase {
   /**
    * Get a mock item to use in the test.
    *
-   * @return \Drupal\tamper\TamperableItemInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @return TamperableItemInterface|MockObject
    *   The mock of a tamperable item to use in the test.
    */
   protected function getMockItem() {
diff --git a/tests/src/Unit/Plugin/Tamper/TamperPluginTestBase.php b/tests/src/Unit/Plugin/Tamper/TamperPluginTestBase.php
index c9b2ab9..3acd55f 100644
--- a/tests/src/Unit/Plugin/Tamper/TamperPluginTestBase.php
+++ b/tests/src/Unit/Plugin/Tamper/TamperPluginTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;
 
+use Drupal\tamper\TamperInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\TranslationInterface;
 use Drupal\tamper\SourceDefinitionInterface;
@@ -15,7 +16,7 @@ abstract class TamperPluginTestBase extends UnitTestCase {
   /**
    * The tamper plugin under test.
    *
-   * @var \Drupal\tamper\TamperInterface
+   * @var TamperInterface
    */
   protected $plugin;
 
@@ -32,7 +33,7 @@ abstract class TamperPluginTestBase extends UnitTestCase {
   /**
    * Instantiates a plugin.
    *
-   * @return \Drupal\tamper\TamperInterface
+   * @return TamperInterface
    *   A tamper plugin.
    */
   abstract protected function instantiatePlugin();
@@ -40,7 +41,7 @@ abstract class TamperPluginTestBase extends UnitTestCase {
   /**
    * Returns a mocked source definition.
    *
-   * @return \Drupal\tamper\SourceDefinitionInterface
+   * @return SourceDefinitionInterface
    *   A source definition.
    */
   protected function getMockSourceDefinition() {
diff --git a/tests/src/Unit/Plugin/Tamper/TransliterationTest.php b/tests/src/Unit/Plugin/Tamper/TransliterationTest.php
index d743396..11524c3 100644
--- a/tests/src/Unit/Plugin/Tamper/TransliterationTest.php
+++ b/tests/src/Unit/Plugin/Tamper/TransliterationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;
 
+use Drupal\Component\Transliteration\TransliterationInterface;
 use Drupal\tamper\Plugin\Tamper\Transliteration;
 use Drupal\Component\Transliteration\PhpTransliteration;
 
@@ -16,7 +17,7 @@ class TransliterationTest extends TamperPluginTestBase {
   /**
    * A transliteration instance.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;
 
