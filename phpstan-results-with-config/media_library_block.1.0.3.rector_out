modules/contrib/media_library_block/src/Plugin/Block/MediaLibraryBlock.php
modules/contrib/media_library_block/src/Plugin/Derivative/MediaLibraryBlockDeriver.php
modules/contrib/media_library_block/tests/src/Kernel/MediaLibraryBlockDeriverTest.php
modules/contrib/media_library_block/tests/src/Kernel/MediaLibraryBlockTest.php

4 files with changes
====================

1) modules/contrib/media_library_block/tests/src/Kernel/MediaLibraryBlockTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\media_library_block\Kernel;

+use Drupal\Core\Block\BlockManager;
+use Drupal\media_library_block\Plugin\Block\MediaLibraryBlock;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\file\Entity\File;
 use Drupal\media\Entity\Media;
@@ @@
   /**
    * Block Manager.
    *
-   * @var \Drupal\Core\Block\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
     ]);
     $media->save();

-    /** @var \Drupal\media_library_block\Plugin\Block\MediaLibraryBlock $plugin_block */
+    /** @var MediaLibraryBlock $plugin_block */
     $plugin_block = $this->blockManager->createInstance('media_library_block:image', [
       'media' => $media->id(),
     ]);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_library_block/tests/src/Kernel/MediaLibraryBlockDeriverTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\media_library_block\Kernel;

+use Drupal\Core\Block\BlockManager;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\Tests\media\Traits\MediaTypeCreationTrait;

@@ @@
   /**
    * Block Manager.
    *
-   * @var \Drupal\Core\Block\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
     $this->assertArrayHasKey('media_library_block:document', $definitions);
     $this->assertArrayHasKey('media_library_block:image', $definitions);
     $this->assertArrayHasKey('media_library_block:teaser', $definitions);
-    $this->assertEqual($definitions['media_library_block:document']['admin_label'], 'Document');
+    $this->assertEquals($definitions['media_library_block:document']['admin_label'], 'Document');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/media_library_block/src/Plugin/Derivative/MediaLibraryBlockDeriver.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Entity Type Bundle Info.
    *
-   * @var Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
    *
    * @param string $base_plugin_id
    *   The base plugin ID.
-   * @param Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
    */
   public function __construct(string $base_plugin_id, EntityTypeBundleInfoInterface $entity_type_bundle_info) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/media_library_block/src/Plugin/Block/MediaLibraryBlock.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   Entity display repository.
    */
   public function __construct(
@@ @@
   /**
    * Load and return the referenced media.
    *
-   * @return \Drupal\media\MediaInterface|null
+   * @return MediaInterface|null
    *   The loaded media, if available.
    */
   public function loadMedia(): ?MediaInterface {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

