diff --git a/src/Client/ZoomApiClient.php b/src/Client/ZoomApiClient.php
index 69636b5..38d68b4 100644
--- a/src/Client/ZoomApiClient.php
+++ b/src/Client/ZoomApiClient.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\zoomapi\Client;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\key\KeyRepositoryInterface;
@@ -20,35 +21,35 @@ class ZoomApiClient implements ZoomApiClientInterface {
   /**
    * The Immutable Config Object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The KeyRepositoryInterface.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;
 
   /**
    * An http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * Psr\Log\LoggerInterface definition.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Drupal\Component\Datetime\Time definition.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;
 
@@ -76,15 +77,15 @@ class ZoomApiClient implements ZoomApiClientInterface {
   /**
    * Constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   Client interface.
-   * @param \Drupal\key\KeyRepositoryInterface $key_repository
+   * @param KeyRepositoryInterface $key_repository
    *   Key repository interface.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory interface.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Logger interface.
-   * @param \Drupal\Component\Datetime\Time $time
+   * @param Time $time
    *   Time.
    */
   public function __construct(
diff --git a/src/Controller/ZoomApiWebhooksController.php b/src/Controller/ZoomApiWebhooksController.php
index 3cd2000..bb06696 100644
--- a/src/Controller/ZoomApiWebhooksController.php
+++ b/src/Controller/ZoomApiWebhooksController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\zoomapi\Controller;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Access\AccessResult;
@@ -24,35 +25,35 @@ class ZoomApiWebhooksController extends ControllerBase {
   /**
    * The Immutable Config Object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The KeyRepositoryInterface.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $keyRepository;
 
   /**
    * Psr\Log\LoggerInterface definition.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Symfony\Component\HttpFoundation\RequestStack definition.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Symfony\Component\EventDispatcher\EventDispatcherInterface definition.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -73,15 +74,15 @@ class ZoomApiWebhooksController extends ControllerBase {
   /**
    * Constructs a new WebhookController object.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Logger interface.
-   * @param \Drupal\key\KeyRepositoryInterface $key_repository
+   * @param KeyRepositoryInterface $key_repository
    *   Key repository interface.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory interface.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Request stack.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   Event dispatcher interface.
    */
   public function __construct(
@@ -115,10 +116,10 @@ class ZoomApiWebhooksController extends ControllerBase {
   /**
    * Capture the incoming payload.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A simple JSON response.
    */
   public function capture(Request $request) {
@@ -152,7 +153,7 @@ class ZoomApiWebhooksController extends ControllerBase {
     // Var $data['payload'] = Payload data from Zoom.
     // Var $request = The complete request from Zoom.
     $dispatch = new ZoomApiWebhookEvent($data['event'], $data['payload'], $request);
-    $this->eventDispatcher->dispatch(ZoomApiEvents::WEBHOOK_POST, $dispatch);
+    $this->eventDispatcher->dispatch($dispatch, ZoomApiEvents::WEBHOOK_POST);
 
     $response = [
       'success' => TRUE,
@@ -165,7 +166,7 @@ class ZoomApiWebhooksController extends ControllerBase {
   /**
    * Compares local webhook token to incoming.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   AccessResult allowed or forbidden.
    */
   public function authorize() {
@@ -187,7 +188,7 @@ class ZoomApiWebhooksController extends ControllerBase {
   /**
    * Gets the Zoom authorize header from the incoming request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The incoming request.
    *
    * @return mixed
diff --git a/src/Event/ZoomApiWebhookEvent.php b/src/Event/ZoomApiWebhookEvent.php
index 10d7bdb..def2cfd 100644
--- a/src/Event/ZoomApiWebhookEvent.php
+++ b/src/Event/ZoomApiWebhookEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\zoomapi\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\HttpFoundation\Request;
 
 /**
@@ -29,7 +29,7 @@ class ZoomApiWebhookEvent extends Event {
   /**
    * Type of the incoming post.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
@@ -40,7 +40,7 @@ class ZoomApiWebhookEvent extends Event {
    *   The type of webhook incoming.
    * @param array $payload
    *   The data posted.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The orignal request.
    */
   public function __construct($event, array $payload, Request $request) {
@@ -72,7 +72,7 @@ class ZoomApiWebhookEvent extends Event {
   /**
    * Return request.
    *
-   * @return \Symfony\Component\HttpFoundation\Request
+   * @return Request
    *   The original request in case you need more.
    */
   public function getRequest() {
diff --git a/tests/src/Functional/ApiRequestTest.php b/tests/src/Functional/ApiRequestTest.php
index ea39399..a711fc2 100644
--- a/tests/src/Functional/ApiRequestTest.php
+++ b/tests/src/Functional/ApiRequestTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\zoomapi\Functional;
 
+use Drupal\key\KeyInterface;
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\key\Functional\KeyTestTrait;
 use Drupal\Tests\BrowserTestBase;
@@ -31,21 +33,21 @@ class ApiRequestTest extends BrowserTestBase {
   /**
    * A key entity to use for testing.
    *
-   * @var \Drupal\key\KeyInterface
+   * @var KeyInterface
    */
   protected $testKey;
 
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer zoom api', 'administer keys']);
     $this->drupalLogin($this->user);
@@ -76,7 +78,7 @@ class ApiRequestTest extends BrowserTestBase {
       'api_key' => 'test_zoomapi_key',
       'api_secret' => 'test_zoomapi_secret',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');
 
     // Post to the webhook controller.
     $client = \Drupal::service('zoomapi.client');
diff --git a/tests/src/Functional/ConfigLoadTest.php b/tests/src/Functional/ConfigLoadTest.php
index 1af32d0..c94c776 100644
--- a/tests/src/Functional/ConfigLoadTest.php
+++ b/tests/src/Functional/ConfigLoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\zoomapi\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -27,14 +28,14 @@ class ConfigLoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer zoom api']);
     $this->drupalLogin($this->user);
diff --git a/tests/src/Functional/WebhookPostTest.php b/tests/src/Functional/WebhookPostTest.php
index e1958a0..bc215f1 100644
--- a/tests/src/Functional/WebhookPostTest.php
+++ b/tests/src/Functional/WebhookPostTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\zoomapi\Functional;
 
+use Drupal\key\KeyInterface;
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\key\Entity\Key;
 use Drupal\Tests\BrowserTestBase;
@@ -28,21 +30,21 @@ class WebhookPostTest extends BrowserTestBase {
   /**
    * A key entity to use for testing.
    *
-   * @var \Drupal\key\KeyInterface
+   * @var KeyInterface
    */
   protected $testKey;
 
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer zoom api', 'administer keys']);
     $this->drupalLogin($this->user);
@@ -90,7 +92,7 @@ class WebhookPostTest extends BrowserTestBase {
     $edit = [
       'webhook_verification_token' => 'zoomapi_webhook_test_key',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save configuration');
+    $this->submitForm($edit, 'Save configuration');
 
     $url = Url::fromRoute('zoomapi.webhooks')
       ->setAbsolute()
diff --git a/zoomapi.info.yml b/zoomapi.info.yml
index 6727d76..989f9a0 100644
--- a/zoomapi.info.yml
+++ b/zoomapi.info.yml
@@ -2,8 +2,7 @@ name: Zoom API
 type: module
 description: 'Provides functionality interacting with the Zoom.us API. This is mainly meant to be a developer module. See the README.'
 package: Web Services
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 configure: zoomapi.settings
 dependencies:
   - key:key
