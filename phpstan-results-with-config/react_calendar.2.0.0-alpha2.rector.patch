diff --git a/src/CalendarConfiguration.php b/src/CalendarConfiguration.php
index c6729cc..e211a0a 100644
--- a/src/CalendarConfiguration.php
+++ b/src/CalendarConfiguration.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\react_calendar;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -17,7 +18,7 @@ class CalendarConfiguration implements CalendarConfigurationInterface {
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -31,7 +32,7 @@ class CalendarConfiguration implements CalendarConfigurationInterface {
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -183,7 +184,7 @@ class CalendarConfiguration implements CalendarConfigurationInterface {
     $result = [];
     $dateTypes = ['datetime', 'daterange'];
     $bundleFields = \Drupal::service('entity_field.manager')->getFieldDefinitions('node', $node_type);
-    /** @var \Drupal\Core\Field\FieldDefinitionInterface $fieldDefinition */
+    /** @var FieldDefinitionInterface $fieldDefinition */
     foreach ($bundleFields as $fieldName => $fieldDefinition) {
       if (!empty($fieldDefinition->getTargetBundle()) && in_array($fieldDefinition->getType(), $dateTypes)) {
         $result[$fieldName] = $fieldDefinition;
diff --git a/src/CalendarConfigurationInterface.php b/src/CalendarConfigurationInterface.php
index e2f996e..8fc287f 100644
--- a/src/CalendarConfigurationInterface.php
+++ b/src/CalendarConfigurationInterface.php
@@ -22,7 +22,7 @@ interface CalendarConfigurationInterface {
   /**
    * Checks if an entity bundle is enabled.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity that is the subject of the template.
    *
    * @return bool
diff --git a/src/Controller/CalendarController.php b/src/Controller/CalendarController.php
index ebb772d..1d1eebb 100644
--- a/src/Controller/CalendarController.php
+++ b/src/Controller/CalendarController.php
@@ -14,7 +14,7 @@ class CalendarController extends ControllerBase {
   /**
    * Drupal\react_calendar\CalendarConfigurationInterface definition.
    *
-   * @var \Drupal\react_calendar\CalendarConfigurationInterface
+   * @var CalendarConfigurationInterface
    */
   protected $reactCalendarConfig;
 
diff --git a/src/Form/NodeTypeSettingsForm.php b/src/Form/NodeTypeSettingsForm.php
index f54a098..7f79b79 100644
--- a/src/Form/NodeTypeSettingsForm.php
+++ b/src/Form/NodeTypeSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\react_calendar\Form;
 
+use Drupal\react_calendar\CalendarConfigurationInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -21,7 +22,7 @@ class NodeTypeSettingsForm extends FormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, $node_type = NULL) {
-    /** @var \Drupal\react_calendar\CalendarConfigurationInterface $reactCalendarConfiguration */
+    /** @var CalendarConfigurationInterface $reactCalendarConfiguration */
     $calendarConfiguration = \Drupal::service('react_calendar.config');
     $storage = [
       'node_type' => $node_type,
@@ -73,7 +74,7 @@ class NodeTypeSettingsForm extends FormBase {
     $storage = $form_state->getStorage();
     $node_type = $storage['node_type'];
     // Update React Calendar settings.
-    /** @var \Drupal\react_calendar\CalendarConfigurationInterface $calendarConfiguration */
+    /** @var CalendarConfigurationInterface $calendarConfiguration */
     $calendarConfiguration = \Drupal::service('react_calendar.config');
     // Empty configuration if set again to disabled.
     if (!$values['enabled']) {
diff --git a/src/Plugin/Block/CalendarBlock.php b/src/Plugin/Block/CalendarBlock.php
index 763975e..c4b43a4 100644
--- a/src/Plugin/Block/CalendarBlock.php
+++ b/src/Plugin/Block/CalendarBlock.php
@@ -20,7 +20,7 @@ class CalendarBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * Drupal\react_calendar\CalendarConfigurationInterface definition.
    *
-   * @var \Drupal\react_calendar\CalendarConfigurationInterface
+   * @var CalendarConfigurationInterface
    */
   protected $reactCalendarConfig;
 
@@ -33,7 +33,7 @@ class CalendarBlock extends BlockBase implements ContainerFactoryPluginInterface
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\react_calendar\CalendarConfigurationInterface $react_calendar_config
+   * @param CalendarConfigurationInterface $react_calendar_config
    *   CalendarConfiguration definition.
    */
   public function __construct(
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 1b21e84..33b1dfc 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\react_calendar\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
