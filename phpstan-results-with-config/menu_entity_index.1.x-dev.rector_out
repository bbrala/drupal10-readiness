modules/contrib/menu_entity_index/menu_entity_index.batch.inc
modules/contrib/menu_entity_index/menu_entity_index.install
modules/contrib/menu_entity_index/menu_entity_index.module
modules/contrib/menu_entity_index/menu_entity_index.post_update.php
modules/contrib/menu_entity_index/menu_entity_index.views.inc
modules/contrib/menu_entity_index/src/Form/ConfigurationForm.php
modules/contrib/menu_entity_index/src/Plugin/views/argument_default/Menu.php
modules/contrib/menu_entity_index/src/Plugin/views/field/Menu.php
modules/contrib/menu_entity_index/src/Plugin/views/field/TargetType.php
modules/contrib/menu_entity_index/src/Plugin/views/filter/Menu.php
modules/contrib/menu_entity_index/src/Plugin/views/filter/TargetType.php
modules/contrib/menu_entity_index/src/Tracker.php
modules/contrib/menu_entity_index/src/TrackerInterface.php
modules/contrib/menu_entity_index/src/ViewsData/MenuEntityIndex.php
modules/contrib/menu_entity_index/src/ViewsData/MenuLinkContent.php

9 files with changes
====================

1) modules/contrib/menu_entity_index/src/ViewsData/MenuEntityIndex.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_entity_index\ViewsData;

+use Drupal\views\EntityViewsDataInterface;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The Menu Entity Index Tracker service.
    *
-   * @var \Drupal\menu_entity_index\TrackerInterface
+   * @var TrackerInterface
    */
   protected $tracker;

@@ @@
   /**
    * Creates a new ViewsData instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\menu_entity_index\TrackerInterface $tracker
+   * @param TrackerInterface $tracker
    *   The tracker service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TrackerInterface $tracker) {
@@ @@
     // Extend views data for each targeted entity type.
     foreach ($tracked_entity_types as $entity_type_id => $entity_type) {
       $is_host_entity = $entity_type_id == 'menu_link_content';
-      /** @var \Drupal\views\EntityViewsDataInterface $views_data */
+      /** @var EntityViewsDataInterface $views_data */
       if ($this->entityTypeManager->hasHandler($entity_type_id, 'views_data') && $views_data = $this->entityTypeManager->getHandler($entity_type_id, 'views_data')) {
         // Add a join from the entity base table to the menu_entity_index table.
         $base_table = $views_data->getViewsTableForEntityType($entity_type);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/menu_entity_index/src/TrackerInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_entity_index;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;

@@ @@
   /**
    * Deletes all database records for the given host entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The deleted host entity.
    */
   public function deleteEntity(EntityInterface $entity);
@@ @@
   /**
    * Gets host information for a target entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The target entity to get the host information for.
    *
    * @return array
@@ @@
   /**
    * Checks, if an entity type is among the tracked entity types.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $type
+   * @param EntityTypeInterface $type
    *   Entity type to check.
    *
    * @return bool
@@ @@
   /**
    * Gets stored configuration object.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   A configuration object.
    */
   public function getConfiguration();
@@ @@
   /**
    * Updates database tracking for new or updated entities.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The updated host entity.
    */
   public function updateEntity(EntityInterface $entity);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/menu_entity_index/src/Tracker.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_entity_index;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\views\ViewsData;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
@@ @@
   /**
    * Configuration Factory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * This service's configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The menu link manager service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;

@@ @@
   /**
    * The path processor manager service.
    *
-   * @var \Drupal\Core\PathProcessor\InboundPathProcessorInterface
+   * @var InboundPathProcessorInterface
    */
   protected $pathProcessor;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The dynamic router service.
    *
-   * @var \Symfony\Component\Routing\Matcher\RequestMatcherInterface
+   * @var RequestMatcherInterface
    */
   protected $router;

@@ @@
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;

@@ @@
   /**
    * Views data manager.
    *
-   * @var \Drupal\views\ViewsData|null
+   * @var ViewsData|null
    */
   protected $viewsData = NULL;

@@ @@
   /**
    * Constructs the Tracker object.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager
+   * @param MenuLinkManagerInterface $menu_link_manager
    *   The menu link manager service.
-   * @param \Drupal\Core\PathProcessor\InboundPathProcessorInterface $path_processor
+   * @param InboundPathProcessorInterface $path_processor
    *   The path processor manager service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Symfony\Component\Routing\Matcher\RequestMatcherInterface $router
+   * @param RequestMatcherInterface $router
    *   The dynamic router service.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
    */
   public function __construct(ConfigFactory $config_factory, Connection $connection, EntityRepositoryInterface $entity_repository, EntityTypeManagerInterface $entity_type_manager, MenuLinkManagerInterface $menu_link_manager, InboundPathProcessorInterface $path_processor, RequestStack $request_stack, RequestMatcherInterface $router, PathValidatorInterface $path_validator) {
@@ @@
   /**
    * Sets optional views data manager dependency, if available.
    *
-   * @param \Drupal\views\ViewsData|null $views_data
+   * @param ViewsData|null $views_data
    *   The views data manager.
    */
   public function setViewsData($views_data) {
@@ @@
     batch_set([
       'title' => $this->t('Scanning menu links'),
       'operations' => $operations,
-      'file' => drupal_get_path('module', 'menu_entity_index') . '/menu_entity_index.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('menu_entity_index') . '/menu_entity_index.batch.inc',
     ]);
   }

@@ @@
   /**
    * Checks, if an entity is translatable.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check.
    *
    * @return bool
@@ @@
    * @param string $url
    *   The absolute URL to match.
    *
-   * @return \Symfony\Component\HttpFoundation\Request|null
+   * @return Request|null
    *   A populated request object or NULL if the path couldn't be matched.
    */
   protected function getRequestForUrl($url) {
@@ @@
   /**
    * Inserts a database entry for each target entity of the given host entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The host entity for which to add tracking records.
    * @param array $targets
    *   An array of target entities.
@@ @@
    *
    * Recursive method.
    *
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link
+   * @param MenuLinkInterface $menu_link
    *   The menu link plugin to get the level for.
    * @param int $level
    *   Used internally to track level during recursive calls.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/menu_entity_index/src/Plugin/views/filter/TargetType.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The Menu Entity Index Tracker service.
    *
-   * @var \Drupal\menu_entity_index\TrackerInterface
+   * @var TrackerInterface
    */
   protected $tracker;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\menu_entity_index\TrackerInterface $tracker
+   * @param TrackerInterface $tracker
    *   The Menu Entity Index Tracker service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TrackerInterface $tracker) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/menu_entity_index/src/Plugin/views/filter/Menu.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The Menu Entity Index Tracker service.
    *
-   * @var \Drupal\menu_entity_index\TrackerInterface
+   * @var TrackerInterface
    */
   protected $tracker;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\menu_entity_index\TrackerInterface $tracker
+   * @param TrackerInterface $tracker
    *   The Menu Entity Index Tracker service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, TrackerInterface $tracker) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/menu_entity_index/src/Plugin/views/field/TargetType.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The Menu Entity Index Tracker service.
    *
-   * @var \Drupal\menu_entity_index\TrackerInterface
+   * @var TrackerInterface
    */
   protected $tracker;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\menu_entity_index\TrackerInterface $tracker
+   * @param TrackerInterface $tracker
    *   The Menu Entity Index Tracker service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TrackerInterface $tracker) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/menu_entity_index/src/Plugin/views/field/Menu.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The Menu Entity Index Tracker service.
    *
-   * @var \Drupal\menu_entity_index\TrackerInterface
+   * @var TrackerInterface
    */
   protected $tracker;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\menu_entity_index\TrackerInterface $tracker
+   * @param TrackerInterface $tracker
    *   The Menu Entity Index Tracker service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TrackerInterface $tracker) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/menu_entity_index/src/Plugin/views/argument_default/Menu.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The Menu Entity Index Tracker service.
    *
-   * @var \Drupal\menu_entity_index\TrackerInterface
+   * @var TrackerInterface
    */
   protected $tracker;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\menu_entity_index\TrackerInterface $tracker
+   * @param TrackerInterface $tracker
    *   The Menu Entity Index Tracker service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TrackerInterface $tracker) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/menu_entity_index/src/Form/ConfigurationForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The Menu Entity Index Tracker service.
    *
-   * @var \Drupal\menu_entity_index\TrackerInterface
+   * @var TrackerInterface
    */
   protected $tracker;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

