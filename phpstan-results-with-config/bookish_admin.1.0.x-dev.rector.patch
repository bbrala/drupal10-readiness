diff --git a/modules/bookish_ckeditor/src/Plugin/Filter/BookishOEmbedFilter.php b/modules/bookish_ckeditor/src/Plugin/Filter/BookishOEmbedFilter.php
index bc6b5ae..471026f 100644
--- a/modules/bookish_ckeditor/src/Plugin/Filter/BookishOEmbedFilter.php
+++ b/modules/bookish_ckeditor/src/Plugin/Filter/BookishOEmbedFilter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_ckeditor\Plugin\Filter;
 
+use GuzzleHttp\Client;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -25,7 +26,7 @@ class BookishOEmbedFilter extends FilterBase implements ContainerFactoryPluginIn
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -45,7 +46,7 @@ class BookishOEmbedFilter extends FilterBase implements ContainerFactoryPluginIn
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ClientInterface $http_client) {
diff --git a/modules/bookish_image/bookish_image.module b/modules/bookish_image/bookish_image.module
index a6ece50..aca67bf 100644
--- a/modules/bookish_image/bookish_image.module
+++ b/modules/bookish_image/bookish_image.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\image\ImageStyleInterface;
 /**
  * @file
  * Hook implementations for bookish_image.
@@ -86,7 +87,7 @@ function _bookish_image_flush_image_styles($uri) {
   if (empty($uri)) {
     return;
   }
-  /** @var \Drupal\image\ImageStyleInterface[] $image_styles */
+  /** @var ImageStyleInterface[] $image_styles */
   $image_styles = \Drupal::entityTypeManager()->getStorage('image_style')->loadMultiple();
   foreach ($image_styles as $image_style) {
     $image_style->flush($uri);
@@ -96,7 +97,7 @@ function _bookish_image_flush_image_styles($uri) {
 /**
  * Updates a file object with the new bookish image data, without saving it.
  *
- * @param \Drupal\file\FileInterface $file
+ * @param FileInterface $file
  *   The file to update.
  * @param mixed $new_image_data
  *   The new image data.
diff --git a/modules/bookish_image/src/BookishImageFormTrait.php b/modules/bookish_image/src/BookishImageFormTrait.php
index 5137883..12ee4f4 100644
--- a/modules/bookish_image/src/BookishImageFormTrait.php
+++ b/modules/bookish_image/src/BookishImageFormTrait.php
@@ -47,11 +47,11 @@ trait BookishImageFormTrait {
    *   The form element, which may be nested.
    * @param string $unique_id
    *   A partial HTML ID that is unique to this form build.
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The current image.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory.
-   * @param \Drupal\image\ImageStyleInterface $image_style
+   * @param ImageStyleInterface $image_style
    *   The image style.
    *
    * @return array
@@ -450,13 +450,13 @@ trait BookishImageFormTrait {
   /**
    * Builds the preview element.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The image.
-   * @param \Drupal\image\ImageStyleInterface|null $image_style
+   * @param ImageStyleInterface|null $image_style
    *   The image style.
    * @param array $image_data
    *   The current bookish_image_data.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory.
    *
    * @return array
diff --git a/modules/bookish_image/src/Controller/BookishImagePreview.php b/modules/bookish_image/src/Controller/BookishImagePreview.php
index 2130c7a..7351b3d 100644
--- a/modules/bookish_image/src/Controller/BookishImagePreview.php
+++ b/modules/bookish_image/src/Controller/BookishImagePreview.php
@@ -22,23 +22,23 @@ class BookishImagePreview extends ControllerBase {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * Constructs a new BookishImagePreview object.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory.
    */
   public function __construct(FileSystemInterface $file_system, ImageFactory $image_factory) {
@@ -59,14 +59,14 @@ class BookishImagePreview extends ControllerBase {
   /**
    * Generates a temporary image style derivative using effect settings.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The image.
-   * @param \Drupal\image\ImageStyleInterface $image_style
+   * @param ImageStyleInterface $image_style
    *   The image style.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse
+   * @return BinaryFileResponse
    *   The contents of the preview image.
    */
   public function build(FileInterface $file, ImageStyleInterface $image_style, Request $request) {
@@ -92,12 +92,12 @@ class BookishImagePreview extends ControllerBase {
   /**
    * Determines access to the preview and form routes.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The image.
-   * @param \Drupal\image\ImageStyleInterface $image_style
+   * @param ImageStyleInterface $image_style
    *   The image style.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   An access result.
    */
   public static function access(FileInterface $file, ImageStyleInterface $image_style = NULL) {
diff --git a/modules/bookish_image/src/Form/BookishImageForm.php b/modules/bookish_image/src/Form/BookishImageForm.php
index da63e31..efbc536 100644
--- a/modules/bookish_image/src/Form/BookishImageForm.php
+++ b/modules/bookish_image/src/Form/BookishImageForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\bookish_image\Form;
 
+use Drupal\image\Entity\ImageStyle;
+use Drupal\image\ImageStyleInterface;
 use Drupal\bookish_image\Ajax\BookishImageCKEditorCommand;
 use Drupal\bookish_image\BookishImageFormTrait;
 use Drupal\bookish_image\Plugin\ImageEffect\BookishImageScaleAndCrop;
@@ -26,14 +28,14 @@ class BookishImageForm extends FormBase {
   /**
    * The image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -47,9 +49,9 @@ class BookishImageForm extends FormBase {
   /**
    * Constructs a new BookishImageForm object.
    *
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ImageFactory $image_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ -87,7 +89,7 @@ class BookishImageForm extends FormBase {
 
     $image_style = NULL;
     if ($image_style_name && $image_style_name !== 'none') {
-      /** @var \Drupal\image\Entity\ImageStyle $image_style */
+      /** @var ImageStyle $image_style */
       $image_style = $image_style_storage->load($image_style_name);
       if (!$image_style) {
         $this->messenger()->addError('Could not load an image style use with the preview.');
@@ -100,7 +102,7 @@ class BookishImageForm extends FormBase {
     $unique_id = $file->id() . '-modal';
     $preview_id = 'bookish-image-preview-' . $unique_id;
 
-    /** @var \Drupal\image\Entity\ImageStyle[] $image_styles */
+    /** @var ImageStyle[] $image_styles */
     $image_styles = $image_style_storage->loadMultiple();
     ksort($image_styles);
     $bookish_styles = [];
@@ -216,7 +218,7 @@ class BookishImageForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -243,17 +245,17 @@ class BookishImageForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The AJAX response.
    */
   public static function submitAjax(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $form['#file'];
     $url = $file->getFileUri();
-    /** @var \Drupal\image\ImageStyleInterface|NULL $image_style  */
+    /** @var ImageStyleInterface|NULL $image_style  */
     $image_style = $form['#image_style'];
     $image_style_name = NULL;
     if ($image_style) {
@@ -274,10 +276,10 @@ class BookishImageForm extends FormBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The AJAX response.
    */
   public static function cancelAjax(array &$form, FormStateInterface $form_state) {
diff --git a/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishImageFormatter.php b/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishImageFormatter.php
index f22a943..b53d406 100644
--- a/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishImageFormatter.php
+++ b/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishImageFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_image\Plugin\Field\FieldFormatter;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -32,14 +33,14 @@ class BookishImageFormatter extends ImageFormatter {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
@@ -83,7 +84,7 @@ class BookishImageFormatter extends ImageFormatter {
       if (!isset($files[$delta])) {
         continue;
       }
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = $files[$delta];
       $derivative_uri = $image_style->buildUri($file->getFileUri());
       if (!file_exists($derivative_uri)) {
diff --git a/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishResponsiveImageFormatter.php b/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishResponsiveImageFormatter.php
index 04fb3ba..d0cef66 100644
--- a/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishResponsiveImageFormatter.php
+++ b/modules/bookish_image/src/Plugin/Field/FieldFormatter/BookishResponsiveImageFormatter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\bookish_image\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Render\Renderer;
+use Drupal\file\FileInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -34,14 +36,14 @@ class BookishResponsiveImageFormatter extends ResponsiveImageFormatter {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
@@ -81,13 +83,13 @@ class BookishResponsiveImageFormatter extends ResponsiveImageFormatter {
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = parent::viewElements($items, $langcode);
     $files = $this->getEntitiesToView($items, $langcode);
-    /** @var \Drupal\Core\Render\Renderer $renderer */
+    /** @var Renderer $renderer */
     $renderer = \Drupal::service('renderer');
     foreach ($elements as $delta => $element) {
       if (!isset($files[$delta])) {
         continue;
       }
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = $files[$delta];
       $original_image = $this->imageFactory->get($file->getFileUri());
       if (!$original_image) {
diff --git a/modules/bookish_image/src/Plugin/Field/FieldWidget/BookishImageWidget.php b/modules/bookish_image/src/Plugin/Field/FieldWidget/BookishImageWidget.php
index fbd56f1..5209c40 100644
--- a/modules/bookish_image/src/Plugin/Field/FieldWidget/BookishImageWidget.php
+++ b/modules/bookish_image/src/Plugin/Field/FieldWidget/BookishImageWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_image\Plugin\Field\FieldWidget;
 
+use Drupal\file\FileInterface;
 use Drupal\bookish_image\BookishImageFormTrait;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -57,7 +58,7 @@ class BookishImageWidget extends ImageWidget {
     $item['fids'] = $element['fids']['#value'];
 
     if (!empty($element['#files'])) {
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       $file = reset($element['#files']);
       $element = static::buildImageForm($element, $unique_id, $file, \Drupal::service('image.factory'), ImageStyle::load('bookish_image_thumbnail'));
       $element['bookish_image']['bookish_image_data']['zoom']['#access'] = !!$element['#show_zoom'];
@@ -74,9 +75,9 @@ class BookishImageWidget extends ImageWidget {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
    * @return array
@@ -92,7 +93,7 @@ class BookishImageWidget extends ImageWidget {
       return $element['preview'];
     }
 
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = reset($element['#files']);
     $image_data = json_decode($file->bookish_image_data->getString(), TRUE);
     $new_image_data = $form_state->getValue(array_merge($element['#parents'], [
diff --git a/modules/bookish_image/src/Plugin/Filter/BookishImageFilter.php b/modules/bookish_image/src/Plugin/Filter/BookishImageFilter.php
index 559256d..e8b5418 100644
--- a/modules/bookish_image/src/Plugin/Filter/BookishImageFilter.php
+++ b/modules/bookish_image/src/Plugin/Filter/BookishImageFilter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_image\Plugin\Filter;
 
+use Drupal\image\Entity\ImageStyle;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,21 +28,21 @@ class BookishImageFilter extends FilterBase implements ContainerFactoryPluginInt
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * The image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -54,11 +55,11 @@ class BookishImageFilter extends FilterBase implements ContainerFactoryPluginInt
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityRepositoryInterface $entity_repository, ImageFactory $image_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ -97,12 +98,12 @@ class BookishImageFilter extends FilterBase implements ContainerFactoryPluginInt
           continue;
         }
         $uuid = $node->getAttribute('data-entity-uuid');
-        /** @var \Drupal\file\FileInterface $file */
+        /** @var FileInterface $file */
         $file = $this->entityRepository->loadEntityByUuid('file', $uuid);
         if (!($file instanceof FileInterface)) {
           continue;
         }
-        /** @var \Drupal\image\Entity\ImageStyle $image_style */
+        /** @var ImageStyle $image_style */
         $image_style = $image_style_storage->load($node->getAttribute('data-bookish-image-style'));
         if (!$image_style) {
           continue;
diff --git a/modules/bookish_image/src/Plugin/ImageEffect/BookishImageCrop.php b/modules/bookish_image/src/Plugin/ImageEffect/BookishImageCrop.php
index 429630f..b850084 100644
--- a/modules/bookish_image/src/Plugin/ImageEffect/BookishImageCrop.php
+++ b/modules/bookish_image/src/Plugin/ImageEffect/BookishImageCrop.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_image\Plugin\ImageEffect;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Image\ImageInterface;
 use Drupal\image\Plugin\ImageEffect\ResizeImageEffect;
@@ -22,7 +23,7 @@ class BookishImageCrop extends ResizeImageEffect {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -51,7 +52,7 @@ class BookishImageCrop extends ResizeImageEffect {
    * {@inheritdoc}
    */
   public function applyEffect(ImageInterface $image) {
-    /** @var \Drupal\file\FileInterface[] $files */
+    /** @var FileInterface[] $files */
     $files = $this->entityTypeManager
       ->getStorage('file')
       ->loadByProperties([
diff --git a/modules/bookish_image/src/Plugin/ImageEffect/BookishImageEffect.php b/modules/bookish_image/src/Plugin/ImageEffect/BookishImageEffect.php
index 5f41af7..58cec19 100644
--- a/modules/bookish_image/src/Plugin/ImageEffect/BookishImageEffect.php
+++ b/modules/bookish_image/src/Plugin/ImageEffect/BookishImageEffect.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_image\Plugin\ImageEffect;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Image\ImageInterface;
 use Drupal\image\ImageEffectBase;
@@ -23,7 +24,7 @@ class BookishImageEffect extends ImageEffectBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -52,7 +53,7 @@ class BookishImageEffect extends ImageEffectBase {
    * {@inheritdoc}
    */
   public function applyEffect(ImageInterface $image) {
-    /** @var \Drupal\system\Plugin\ImageToolkit\GDToolkit $toolkit */
+    /** @var GDToolkit $toolkit */
     $toolkit = $image->getToolkit();
     if (!($toolkit instanceof GDToolkit)) {
       return TRUE;
@@ -61,7 +62,7 @@ class BookishImageEffect extends ImageEffectBase {
     if (!$resource) {
       return TRUE;
     }
-    /** @var \Drupal\file\FileInterface[] $files */
+    /** @var FileInterface[] $files */
     $files = $this->entityTypeManager
       ->getStorage('file')
       ->loadByProperties([
diff --git a/modules/bookish_image/src/Plugin/ImageEffect/BookishImageScaleAndCrop.php b/modules/bookish_image/src/Plugin/ImageEffect/BookishImageScaleAndCrop.php
index fcbad8d..05127cc 100644
--- a/modules/bookish_image/src/Plugin/ImageEffect/BookishImageScaleAndCrop.php
+++ b/modules/bookish_image/src/Plugin/ImageEffect/BookishImageScaleAndCrop.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_image\Plugin\ImageEffect;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Image\ImageInterface;
 use Drupal\image\Plugin\ImageEffect\ResizeImageEffect;
@@ -22,7 +23,7 @@ class BookishImageScaleAndCrop extends ResizeImageEffect {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -55,7 +56,7 @@ class BookishImageScaleAndCrop extends ResizeImageEffect {
     $height = $this->configuration['height'];
     $scale = max($width / $image->getWidth(), $height / $image->getHeight());
 
-    /** @var \Drupal\file\FileInterface[] $files */
+    /** @var FileInterface[] $files */
     $files = $this->entityTypeManager
       ->getStorage('file')
       ->loadByProperties([
diff --git a/modules/bookish_speed/bookish_speed.module b/modules/bookish_speed/bookish_speed.module
index 162f240..bfa0446 100644
--- a/modules/bookish_speed/bookish_speed.module
+++ b/modules/bookish_speed/bookish_speed.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Asset\AssetResolver;
+use Drupal\Core\Asset\AssetCollectionGrouperInterface;
 /**
  * @file
  * Hook implementations for bookish_speed.
@@ -36,11 +38,11 @@ function bookish_speed_js_settings_alter(array &$settings, AttachedAssetsInterfa
   $local_assets = &drupal_static(ModifyHtmlSubscriber::STATIC_KEY, []);
   $local_assets = [];
 
-  /** @var \Drupal\Core\Asset\AssetResolver $asset_resolver */
+  /** @var AssetResolver $asset_resolver */
   $asset_resolver = \Drupal::service('asset.resolver');
-  /** @var \Drupal\Core\Asset\AssetCollectionGrouperInterface $css_grouper */
+  /** @var AssetCollectionGrouperInterface $css_grouper */
   $css_grouper = \Drupal::service('asset.css.collection_grouper');
-  /** @var \Drupal\Core\Asset\AssetCollectionGrouperInterface $js_grouper */
+  /** @var AssetCollectionGrouperInterface $js_grouper */
   $js_grouper = \Drupal::service('asset.js.collection_grouper');
 
   // Get CSS assets.
diff --git a/modules/bookish_tags/src/Plugin/Field/FieldWidget/BookishTagsWidget.php b/modules/bookish_tags/src/Plugin/Field/FieldWidget/BookishTagsWidget.php
index 53dc30f..009c6d1 100644
--- a/modules/bookish_tags/src/Plugin/Field/FieldWidget/BookishTagsWidget.php
+++ b/modules/bookish_tags/src/Plugin/Field/FieldWidget/BookishTagsWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bookish_tags\Plugin\Field\FieldWidget;
 
+use Drupal\taxonomy\TermInterface;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -33,28 +34,28 @@ class BookishTagsWidget extends WidgetBase {
   /**
    * The key value factory.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueFactoryInterface
+   * @var KeyValueFactoryInterface
    */
   protected $keyValueFactory;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The selection plugin manager.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected $selectionManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -65,19 +66,19 @@ class BookishTagsWidget extends WidgetBase {
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key value factory.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface $selection_manager
+   * @param SelectionPluginManagerInterface $selection_manager
    *   The selection plugin manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, KeyValueFactoryInterface $key_value_factory, AccountInterface $current_user, SelectionPluginManagerInterface $selection_manager, EntityTypeManagerInterface $entity_type_manager) {
@@ -110,7 +111,7 @@ class BookishTagsWidget extends WidgetBase {
    */
   public function formElement(FieldItemListInterface $items, $delta, array $element, array &$form, FormStateInterface $form_state) {
     $entity = $items->getEntity();
-    /** @var \Drupal\taxonomy\TermInterface[] $referenced_entities */
+    /** @var TermInterface[] $referenced_entities */
     $referenced_entities = $items->referencedEntities();
     $default_value = [];
 
diff --git a/modules/bookish_yaml/bookish_yaml.module b/modules/bookish_yaml/bookish_yaml.module
index fd92138..89f813f 100644
--- a/modules/bookish_yaml/bookish_yaml.module
+++ b/modules/bookish_yaml/bookish_yaml.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Field\FieldItemInterface;
 /**
  * @file
  * Contains hook implementations for the bookish_yaml module.
@@ -21,7 +22,7 @@ function bookish_yaml_entity_presave(EntityInterface $entity) {
       ], TRUE)) {
         continue;
       }
-      /** @var \Drupal\Core\Field\FieldItemInterface $field_item */
+      /** @var FieldItemInterface $field_item */
       foreach ($field as $field_item) {
         $value = $field_item->getValue();
         $value['value'] = _bookish_yaml_process($value['value']);
