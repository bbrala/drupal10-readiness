diff --git a/imagepin.forms.inc b/imagepin.forms.inc
index 7909757..790697a 100644
--- a/imagepin.forms.inc
+++ b/imagepin.forms.inc
@@ -14,15 +14,15 @@ use Drupal\Component\Serialization\Json;
 /**
  * Builds the imagepin settings element for the given field formatter form.
  *
- * @param \Drupal\Core\Field\FormatterInterface $plugin
+ * @param FormatterInterface $plugin
  *   The field formatter plugin instance.
- * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+ * @param FieldDefinitionInterface $field_definition
  *   The corresponding field definition.
  * @param string $view_mode
  *   The entity view mode.
  * @param array $form
  *   The (entire) configuration form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  *
  * @return array
@@ -81,7 +81,7 @@ function imagepin_build_formatter_settings_form(FormatterInterface $plugin, Fiel
  *
  * @param array &$element
  *   The element array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  * @param array $context
  *   The context array.
diff --git a/imagepin.info.yml b/imagepin.info.yml
index 9be8531..7ed3d82 100755
--- a/imagepin.info.yml
+++ b/imagepin.info.yml
@@ -1,8 +1,7 @@
 type: module
 name: Imagepin
 description: "Enables users to pin any widget on content images."
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Media
 dependencies:
   - drupal:image
diff --git a/src/Annotation/Widget.php b/src/Annotation/Widget.php
index 44c89c4..51fd0e5 100755
--- a/src/Annotation/Widget.php
+++ b/src/Annotation/Widget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imagepin\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class Widget extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Form/PinWidgetsForm.php b/src/Form/PinWidgetsForm.php
index 4744b67..75a9ca0 100755
--- a/src/Form/PinWidgetsForm.php
+++ b/src/Form/PinWidgetsForm.php
@@ -25,49 +25,49 @@ class PinWidgetsForm extends FormBase {
   /**
    * The EntityTypeManagerInterface instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The EntityDisplayRepositoryInterface instance.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $displayRepository;
 
   /**
    * The WidgetManager instance.
    *
-   * @var \Drupal\imagepin\Plugin\WidgetManager
+   * @var WidgetManager
    */
   protected $widgetManager;
 
   /**
    * The WidgetRepository instance.
    *
-   * @var \Drupal\imagepin\WidgetRepository
+   * @var WidgetRepository
    */
   protected $widgetRepository;
 
   /**
    * The FormBuilder instance.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The JSON serializer.
    *
-   * @var \Drupal\Component\Serialization\Json
+   * @var Json
    */
   protected $jsonSerializer;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
@@ -89,19 +89,19 @@ class PinWidgetsForm extends FormBase {
   /**
    * Constructor method.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManagerInterface instance.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository
+   * @param EntityDisplayRepositoryInterface $display_repository
    *   The EntityDisplayRepositoryInterface instance.
-   * @param \Drupal\imagepin\Plugin\WidgetManager $widget_manager
+   * @param WidgetManager $widget_manager
    *   The WidgetManager instance.
-   * @param \Drupal\imagepin\WidgetRepository $widget_repository
+   * @param WidgetRepository $widget_repository
    *   The WidgetRepository instance.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The FormBuiderInterface instance.
-   * @param \Drupal\Component\Serialization\Json $json_serializer
+   * @param Json $json_serializer
    *   The JSON serializer.
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   The module handler.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityDisplayRepositoryInterface $display_repository, WidgetManager $widget_manager, WidgetRepository $widget_repository, FormBuilderInterface $form_builder, Json $json_serializer, ModuleHandler $module_handler) {
@@ -359,7 +359,7 @@ class PinWidgetsForm extends FormBase {
    *
    * @param array &$form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param string $plugin_id
    *   (Optional) The widget plugin id as string.
@@ -398,9 +398,9 @@ class PinWidgetsForm extends FormBase {
    *
    * @param array &$form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   (Optional) The current request object, usually delivered by the AJAX API.
    */
   public function addNewWidget(array &$form, FormStateInterface $form_state, Request $request = NULL) {
@@ -427,7 +427,7 @@ class PinWidgetsForm extends FormBase {
    *
    * @param array &$form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param string $view_mode
    *   The view mode as string.
@@ -522,9 +522,9 @@ class PinWidgetsForm extends FormBase {
    *
    * @param array &$form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   (Optional) The current request object, usually delivered by the AJAX API.
    */
   public function removeWidget(array &$form, FormStateInterface $form_state, Request $request = NULL) {
@@ -548,9 +548,9 @@ class PinWidgetsForm extends FormBase {
    *
    * @param array &$form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   (Optional) The current request object, usually delivered by the AJAX API.
    */
   public function savePositions(array &$form, FormStateInterface $form_state, Request $request = NULL) {
diff --git a/src/ImagepinRender.php b/src/ImagepinRender.php
index 7826cc2..3b418b5 100644
--- a/src/ImagepinRender.php
+++ b/src/ImagepinRender.php
@@ -46,7 +46,7 @@ class ImagepinRender implements TrustedCallbackInterface {
    * @see imagepin_attach()
    */
   public static function postRender($markup, $element) {
-    $widgets_html = render($element['#imagepin_widgets']);
+    $widgets_html = \Drupal::service('renderer')->render($element['#imagepin_widgets']);
     return $markup . $widgets_html;
   }
 
diff --git a/src/Plugin/WidgetInterface.php b/src/Plugin/WidgetInterface.php
index 4477c89..b5ab1c5 100755
--- a/src/Plugin/WidgetInterface.php
+++ b/src/Plugin/WidgetInterface.php
@@ -17,7 +17,7 @@ interface WidgetInterface extends PluginInspectionInterface {
    *
    * @param array &$form
    *   The currently array build for the pin form.
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
    *
    * @return array
diff --git a/src/Plugin/WidgetManager.php b/src/Plugin/WidgetManager.php
index 5336662..f618506 100755
--- a/src/Plugin/WidgetManager.php
+++ b/src/Plugin/WidgetManager.php
@@ -17,9 +17,9 @@ class WidgetManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/WidgetRepository.php b/src/WidgetRepository.php
index 0155eab..4196af3 100755
--- a/src/WidgetRepository.php
+++ b/src/WidgetRepository.php
@@ -19,50 +19,50 @@ class WidgetRepository {
   /**
    * The database connection instance.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The serializer instance.
    *
-   * @var \Drupal\Component\Serialization\SerializationInterface
+   * @var SerializationInterface
    */
   protected $serializer;
 
   /**
    * The WidgetManager instance.
    *
-   * @var \Drupal\imagepin\Plugin\WidgetManager
+   * @var WidgetManager
    */
   protected $widgetManager;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
   /**
    * The EntityTypeManagerInterface instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructor method.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection instance.
-   * @param \Drupal\Component\Serialization\SerializationInterface $serializer
+   * @param SerializationInterface $serializer
    *   The serializer instance.
-   * @param \Drupal\imagepin\Plugin\WidgetManager $widget_manager
+   * @param WidgetManager $widget_manager
    *   The WidgetManager instance.
-   * @param \Drupal\Core\Session\AccountProxy $current_user
+   * @param AccountProxy $current_user
    *   The current user object.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManagerInterface instance.
    */
   public function __construct(Connection $connection, SerializationInterface $serializer, WidgetManager $widget_manager, AccountProxy $current_user, EntityTypeManagerInterface $entity_type_manager) {
@@ -76,7 +76,7 @@ class WidgetRepository {
   /**
    * Saves the given widget value.
    *
-   * @param \Drupal\imagepin\Plugin\WidgetInterface $widget
+   * @param WidgetInterface $widget
    *   An instance of the widget plugin.
    * @param mixed $value
    *   The widget value. Because the value will be stored in the database,
@@ -167,7 +167,7 @@ class WidgetRepository {
   /**
    * Loads all available widget instances for the given entity field view.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity being viewed.
    * @param string $field_name
    *   The machine name of the field being viewed.
@@ -250,7 +250,7 @@ class WidgetRepository {
   /**
    * Permanently removes all widget records by the given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    * @param string $langcode
    *   (Optional) When given, only all widget records
@@ -277,7 +277,7 @@ class WidgetRepository {
   /**
    * Adopts all widget records, which were attached to a new entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity object.
    */
   public function adoptFromNew(EntityInterface $entity) {
