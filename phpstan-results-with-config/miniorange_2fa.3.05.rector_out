modules/contrib/miniorange_2fa/miniorange_2fa.install
modules/contrib/miniorange_2fa/miniorange_2fa.module
modules/contrib/miniorange_2fa/src/AuthenticationAPIHandler.php
modules/contrib/miniorange_2fa/src/AuthenticationType.php
modules/contrib/miniorange_2fa/src/Controller/miniorange_2faController.php
modules/contrib/miniorange_2fa/src/EventSubscriber/InitSubscriber.php
modules/contrib/miniorange_2fa/src/Form/MoAuthCustomerSetup.php
modules/contrib/miniorange_2fa/src/Form/MoAuthHeadlessSetup.php
modules/contrib/miniorange_2fa/src/Form/MoAuthLicensing.php
modules/contrib/miniorange_2fa/src/Form/MoAuthLoginSettings.php
modules/contrib/miniorange_2fa/src/Form/MoAuthRemoveAccount.php
modules/contrib/miniorange_2fa/src/Form/MoAuthRequestDemo.php
modules/contrib/miniorange_2fa/src/Form/MoAuthSetupTwoFactor.php
modules/contrib/miniorange_2fa/src/Form/MoAuthSupport.php
modules/contrib/miniorange_2fa/src/Form/MoAuthUserManagement.php
modules/contrib/miniorange_2fa/src/Form/UserMfaSetup.php
modules/contrib/miniorange_2fa/src/Form/authenticate_user.php
modules/contrib/miniorange_2fa/src/Form/configure_google_authenticator.php
modules/contrib/miniorange_2fa/src/Form/configure_kba.php
modules/contrib/miniorange_2fa/src/Form/configure_otp_over_sms_and_email.php
modules/contrib/miniorange_2fa/src/Form/configure_qrcode_authentication.php
modules/contrib/miniorange_2fa/src/Form/miniorange_2fa_inline_registration.php
modules/contrib/miniorange_2fa/src/Form/test_email_verification.php
modules/contrib/miniorange_2fa/src/Form/test_google_authenticator.php
modules/contrib/miniorange_2fa/src/Form/test_kba_authentication.php
modules/contrib/miniorange_2fa/src/Form/test_otp_over_sms_and_email.php
modules/contrib/miniorange_2fa/src/Form/test_qrcode_authentication.php
modules/contrib/miniorange_2fa/src/Miniorange2FASupport.php
modules/contrib/miniorange_2fa/src/MiniorangeCustomerProfile.php
modules/contrib/miniorange_2fa/src/MiniorangeCustomerSetup.php
modules/contrib/miniorange_2fa/src/MiniorangeUser.php
modules/contrib/miniorange_2fa/src/MoAuthConstants.php
modules/contrib/miniorange_2fa/src/MoAuthUtilities.php
modules/contrib/miniorange_2fa/src/UsersAPIHandler.php

10 files with changes
=====================

1) modules/contrib/miniorange_2fa/src/MoAuthUtilities.php:94

    ---------- begin diff ----------
@@ @@
         $session = self::getSession();
         $session->set( 'mo_auth', array( 'status' => '1ST_FACTOR_AUTHENTICATED', 'uid' => $user_id, 'challenged' => 0, 'user_email' => $user->getEmail(), 'moResetPass' => $tmpDestination ) );
         $session->save();
-        
+
         /**
        * Login without 2FA if backdoor url is enabled and user is admin.
        */
@@ @@
                 <h3>'. t('Looking for a Drupal Web Security module?') .'</h3>
                     <tr class="mo_ns_row">
                         <th class="mo_ns_image1"><img
-                                    src="'.$base_url . '/' . drupal_get_path("module", "miniorange_2fa") . '/includes/images/security.jpg"
+                                    src="'.$base_url . '/' . \Drupal::service('extension.list.module')->getPath("miniorange_2fa") . '/includes/images/security.jpg"
                                     alt="security icon" height=150px width=44%>
                            <br>
                         <strong>'. t('Drupal Website Security') .'</strong>
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/miniorange_2fa/src/Form/test_email_verification.php:73

    ---------- begin diff ----------
@@ @@
                     '#attributes' => array( 'style' => 'padding:2% 2% 20% 2%; margin-bottom:2%' ),
                 );
                 $form['mo_test_email_verification_push_notification']['header']['#markup'] = '<br><hr><br><div class="mo2f-text-center"><div class="mo_auth_font_type">'. $divMessage .'</div><br><div class="mo_auth_font_type mo2f-text-center"><strong>'.t('We are waiting for your approval...').'</strong></div><br>';
-                $image_path = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/ajax-loader-login.gif');
+                $image_path = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/ajax-loader-login.gif');
                 $form['mo_test_email_verification_push_notification']['loader']['#markup'] = '<div class="mo2f-text-center"><img src="' . $image_path . '" /></div>';

                 /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/miniorange_2fa/src/Form/miniorange_2fa_inline_registration.php:1032

    ---------- begin diff ----------
@@ @@
             $qrCode = $response->qrCode;
             $image = new FormattableMarkup('<img class="mo2f_image" src="data:image/jpg;base64, '.$qrCode.'"/>', [':src' => $qrCode]);

-            $iPhoneAppLink = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-link.png');
-            $androidAppLink = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/android-google-authenticator-app-link.png');
+            $iPhoneAppLink = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-link.png');
+            $androidAppLink = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/android-google-authenticator-app-link.png');

             $form['actions_31'] = array(
                     '#markup' => '<div class="mo2f-modal">
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/miniorange_2fa/src/Form/configure_qrcode_authentication.php:54

    ---------- begin diff ----------
@@ @@
             $messageHeader = t( 'Configure QR Code Authentication' );
         }

-        $androidAppLink = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/android-google-authenticator-app-link.png');
-        $iPhoneAppLink  = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-link.png');
-        $androidAppQR   = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/android-mo-authenticator-app-qr.jpg');
-        $iPhoneAppQR    = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/iphone-mo-authenticator-app-qr.png');
+        $androidAppLink = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/android-google-authenticator-app-link.png');
+        $iPhoneAppLink  = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-link.png');
+        $androidAppQR   = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/android-mo-authenticator-app-qr.jpg');
+        $iPhoneAppQR    = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/iphone-mo-authenticator-app-qr.png');

         if ( array_key_exists('txId', $input ) === FALSE ) {
             $user_email       = $custom_attribute[0]->miniorange_registered_email;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/miniorange_2fa/src/Form/configure_google_authenticator.php:19

    ---------- begin diff ----------
@@ @@
     public function buildForm(array $form, FormStateInterface $form_state)
     {
         global $base_url;
-        $androidAppLink = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/android-google-authenticator-app-link.png');
-        $iPhoneAppLink = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-link.png');
-        $androidAppQR = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/android-google-authenticator-app-qr.jpg');
-        $iPhoneAppQR = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-qr.jpg');
+        $androidAppLink = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/android-google-authenticator-app-link.png');
+        $iPhoneAppLink = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-link.png');
+        $androidAppQR = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/android-google-authenticator-app-qr.jpg');
+        $iPhoneAppQR = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/iphone-google-authenticator-app-qr.jpg');

         $form['markup_library'] = array(
             '#attached' => array(
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/miniorange_2fa/src/Form/authenticate_user.php:491

    ---------- begin diff ----------
@@ @@

         $form['header']['#markup'] .= ('<div class="mo2f-info mo2f-text-center">'.t('A verification email is sent to your registered email.').'</div>
                   <div class="mo2f-info mo2f-text-center">'.t('We are waiting for your approval...').'</div>');
-        $image_path = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/ajax-loader-login.gif');
+        $image_path = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/ajax-loader-login.gif');
         $form['header']['#markup'] .= '<div class="mo2f-text-center"><img class="mo2f_image" src="' . $image_path . '"></div>';

         $form['txId'] = array(
@@ @@
         $form['header']['#markup'] .= t('<div class="mo2f-message mo2f-message-status">' . $message . '</div>');
         $form['header']['#markup'] .= ('<div class="mo2f-info mo2f-text-center">'.t('A Push Notification has been sent to your miniOrange Authenticator App.').'</div>
                   <div class="mo2f-info mo2f-text-center">'.t('We are waiting for your approval...').'</div>');
-        $image_path = file_create_url($base_url . '/' . drupal_get_path('module', 'miniorange_2fa') . '/includes/images/ajax-loader-login.gif');
+        $image_path = \Drupal::service('file_url_generator')->generateAbsoluteString($base_url . '/' . \Drupal::service('extension.list.module')->getPath('miniorange_2fa') . '/includes/images/ajax-loader-login.gif');
         $form['header']['#markup'] .= '<div class="mo2f-text-center"><img class="mo2f_image" src="' . $image_path . '"></div>';

         $form['txId'] = array(
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/miniorange_2fa/src/Form/MoAuthSetupTwoFactor.php:120

    ---------- begin diff ----------
@@ @@
         );

         if( isset( $mo_db_values['mo_auth_firstuser_id'] ) && $mo_db_values['mo_auth_firstuser_id'] != $user_id ) {
-          $firstuser = \Drupal\user\Entity\User::load($mo_db_values['mo_auth_firstuser_id']);
+          $firstuser = User::load($mo_db_values['mo_auth_firstuser_id']);
           $username = $firstuser->get('name')->value;
             $form['mo_setup_second_factor']['mo_auth_method'] = array(
                 '#markup' => t('<div><br><br><hr><p>You do not have permissions to edit configurations. Only ' . '<b>' .$username . '</b>' .  ' can setup second factor from this tab.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/miniorange_2fa/src/Form/MoAuthRequestDemo.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\miniorange_2fa\Form;

+use Drupal\Core\Url;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ @@

             \Drupal::messenger()->addStatus(t('Success! We shall review and add the trial licence under your account. You can click the Check Licence button periodically, to check whether this has been completed.'));
             $_POST['value_check'] = 'False';
-            $response->addCommand(new RedirectCommand(\Drupal\Core\Url::fromRoute('miniorange_2fa.customer_setup')->toString()));
+            $response->addCommand(new RedirectCommand(Url::fromRoute('miniorange_2fa.customer_setup')->toString()));
         }
         return $response;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/miniorange_2fa/src/Form/MoAuthRemoveAccount.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\miniorange_2fa\Form;

+use Drupal\Core\Url;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ @@

             \Drupal::messenger()->addStatus(t('Your Account Has Been Removed Successfully!'));
             $_POST['value_check'] = 'False';
-            $response->addCommand(new RedirectCommand(\Drupal\Core\Url::fromRoute('miniorange_2fa.customer_setup', ['tab'=> 'login'])->toString()));
+            $response->addCommand(new RedirectCommand(Url::fromRoute('miniorange_2fa.customer_setup', ['tab'=> 'login'])->toString()));
         }
         return $response;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/miniorange_2fa/src/Form/MoAuthLicensing.php:398

    ---------- begin diff ----------
@@ @@
     <h3 style="text-align: center; margin:3%;">PAYMENT METHODS</h3><hr><br><br>
     <div class="row">
     <div class="col-md-3 payment_method_inner_divs">
-        <div><img src="'.$base_url . '/' . drupal_get_path("module", "miniorange_2fa") . '/includes/images/card_payment.png" width="120" ><h4></h4></div><hr>
+        <div><img src="'.$base_url . '/' . \Drupal::service('extension.list.module')->getPath("miniorange_2fa") . '/includes/images/card_payment.png" width="120" ><h4></h4></div><hr>
         <p>If the payment is made through Credit Card/International Debit Card, the license will be created automatically once the payment is completed.</p>
     </div> 
     <div class="col-md-3 payment_method_inner_divs">
-        <div><img src="'.$base_url . '/' . drupal_get_path("module", "miniorange_2fa") . '/includes/images/bank_transfer.png" width="150" ><h4><h4></div><hr>
+        <div><img src="'.$base_url . '/' . \Drupal::service('extension.list.module')->getPath("miniorange_2fa") . '/includes/images/bank_transfer.png" width="150" ><h4><h4></div><hr>
         <p>If you want to use bank transfer for the payment then contact us at <a href="mailto:drupalsupport@xecurify.com">drupalsupport@xecurify.com</a> so that we can provide you the bank details.</p>
     </div>
     <div class="col-md-3 payment_method_inner_divs">
-        <div><img src="'.$base_url . '/' . drupal_get_path("module", "miniorange_2fa") . '/includes/images/paypal.png" width="120"><h4></h4></ iv><hr>
+        <div><img src="'.$base_url . '/' . \Drupal::service('extension.list.module')->getPath("miniorange_2fa") . '/includes/images/paypal.png" width="120"><h4></h4></ iv><hr>
         <p>Use the following PayPal ID <a href="mailto:drupalsupport@xecurify.com">drupalsupport@xecurify.com</a> for making the payment via PayPal.</p>
     </div>
     </div>
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 10 files have been changed by Rector                                      

