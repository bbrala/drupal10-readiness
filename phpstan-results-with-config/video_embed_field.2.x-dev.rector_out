modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/src/Commands/VemCommands.php
modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/src/VemMigrate.php
modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/tests/src/Functional/oEmbedUpdateTest.php
modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/vem_migrate_oembed.drush.inc
modules/contrib/video_embed_field/modules/video_embed_media/src/Plugin/media/Source/VideoEmbedField.php
modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Functional/BundleTest.php
modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/DefaultNameTest.php
modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/ProvidedFieldsTest.php
modules/contrib/video_embed_field/modules/video_embed_media/video_embed_media.install
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Access/FilterInUse.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Form/VideoEmbedDialog.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Plugin/CKEditorPlugin/VideoEmbedWysiwyg.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Plugin/Filter/VideoEmbedWysiwyg.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Functional/TextFormatConfigurationTest.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/FunctionalJavascript/EmbedDialogTest.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Kernel/FilterTest.php
modules/contrib/video_embed_field/modules/video_embed_wysiwyg/video_embed_wysiwyg.module
modules/contrib/video_embed_field/src/Annotation/VideoEmbedProvider.php
modules/contrib/video_embed_field/src/Element/VideoEmbedIFrame.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Colorbox.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/LazyLoad.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Thumbnail.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Video.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldType/VideoEmbedField.php
modules/contrib/video_embed_field/src/Plugin/Field/FieldWidget/VideoTextfield.php
modules/contrib/video_embed_field/src/Plugin/Validation/Constraint/VideoEmbedConstraint.php
modules/contrib/video_embed_field/src/Plugin/Validation/Constraint/VideoEmbedConstraintValidator.php
modules/contrib/video_embed_field/src/Plugin/migrate/field/EmvideoField.php
modules/contrib/video_embed_field/src/Plugin/migrate/field/VideoEmbedField.php
modules/contrib/video_embed_field/src/Plugin/video_embed_field/Provider/Vimeo.php
modules/contrib/video_embed_field/src/Plugin/video_embed_field/Provider/YouTube.php
modules/contrib/video_embed_field/src/Plugin/video_embed_field/Provider/YouTubePlaylist.php
modules/contrib/video_embed_field/src/ProviderManager.php
modules/contrib/video_embed_field/src/ProviderManagerInterface.php
modules/contrib/video_embed_field/src/ProviderPluginBase.php
modules/contrib/video_embed_field/src/ProviderPluginInterface.php
modules/contrib/video_embed_field/tests/modules/video_embed_field_mock_provider/src/Plugin/video_embed_field/Provider/MockProvider.php
modules/contrib/video_embed_field/tests/src/Functional/AdminUserTrait.php
modules/contrib/video_embed_field/tests/src/Functional/AutoplayPermissionTest.php
modules/contrib/video_embed_field/tests/src/Functional/EntityDisplaySetupTrait.php
modules/contrib/video_embed_field/tests/src/Functional/FieldConfigurationTest.php
modules/contrib/video_embed_field/tests/src/Functional/FormatterConfigurationTest.php
modules/contrib/video_embed_field/tests/src/Functional/InstallationTest.php
modules/contrib/video_embed_field/tests/src/Functional/WidgetTest.php
modules/contrib/video_embed_field/tests/src/FunctionalJavascript/ColorboxFormatterTest.php
modules/contrib/video_embed_field/tests/src/FunctionalJavascript/LazyLoadFormatterTest.php
modules/contrib/video_embed_field/tests/src/Kernel/ConstraintTest.php
modules/contrib/video_embed_field/tests/src/Kernel/Drupal6EmfieldMigrationTest.php
modules/contrib/video_embed_field/tests/src/Kernel/Drupal7MigrationTest.php
modules/contrib/video_embed_field/tests/src/Kernel/EntityLoadTrait.php
modules/contrib/video_embed_field/tests/src/Kernel/FieldOutputTest.php
modules/contrib/video_embed_field/tests/src/Kernel/FormatterDependenciesTest.php
modules/contrib/video_embed_field/tests/src/Kernel/KernelTestBase.php
modules/contrib/video_embed_field/tests/src/Kernel/MockHttpClient.php
modules/contrib/video_embed_field/tests/src/Kernel/StripWhitespaceTrait.php
modules/contrib/video_embed_field/tests/src/Kernel/VideoEmbedIFrameTest.php
modules/contrib/video_embed_field/tests/src/Unit/ProviderManagerTest.php
modules/contrib/video_embed_field/tests/src/Unit/ProviderUrlParseTest.php
modules/contrib/video_embed_field/video_embed_field.api.php
modules/contrib/video_embed_field/video_embed_field.module

37 files with changes
=====================

1) modules/contrib/video_embed_field/tests/src/Kernel/KernelTestBase.php:46

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema($this->entityTypeId);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/video_embed_field/tests/src/Kernel/FormatterDependenciesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_field\Kernel;

+use Drupal\image\ImageStyleInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\image\Entity\ImageStyle;

 /**
@@ @@
   /**
    * A test image style.
    *
-   * @var \Drupal\image\ImageStyleInterface
+   * @var ImageStyleInterface
    */
   protected $style;

@@ @@
   /**
    * A test image style.
    *
-   * @var \Drupal\image\ImageStyleInterface
+   * @var ImageStyleInterface
    */
   protected $replacementStyle;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->style = ImageStyle::create(['name' => 'style_foo', 'label' => $this->randomString()]);
@@ @@
   /**
    * Load the entity display for the test entity.
    *
-   * @return \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @return EntityViewDisplayInterface
    *   The entity display for the test entity.
    */
   protected function loadEntityDisplay() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/video_embed_field/tests/src/Kernel/EntityLoadTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_field\Kernel;

+use Drupal\Core\Entity\EntityInterface;
 /**
  * Test helpers for loading entities for tests.
  */
@@ @@
    * @param string $entity_type
    *   The entity type to load.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   A loaded entity.
    */
   protected function loadEntityByLabel($label, $entity_type = 'node') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/video_embed_field/tests/src/Kernel/Drupal7MigrationTest.php:43

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('node');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/video_embed_field/tests/src/Kernel/ConstraintTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_field\Kernel;

+use Drupal\user\UserInterface;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\Tests\user\Traits\UserCreationTrait;
 use Drupal\video_embed_field\Plugin\Validation\Constraint\VideoEmbedConstraint;
@@ @@
   /**
    * A test user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installEntitySchema('user');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/video_embed_field/tests/src/FunctionalJavascript/LazyLoadFormatterTest.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityDisplays();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/video_embed_field/tests/src/FunctionalJavascript/ColorboxFormatterTest.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->setupEntityDisplays();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/video_embed_field/tests/src/Functional/InstallationTest.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->createAdminUser());
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/video_embed_field/tests/src/Functional/FormatterConfigurationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_field\Functional;

+use Behat\Mink\Element\NodeElement;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\video_embed_field\Plugin\Field\FieldFormatter\Thumbnail;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->createAdminUser());
     $this->setupEntityDisplays();
@@ @@
    * @param string $css_selector
    *   A css selector to find an element for.
    *
-   * @return \Behat\Mink\Element\NodeElement|null
+   * @return NodeElement|null
    *   The found element or null.
    */
   protected function find($css_selector) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/video_embed_field/tests/src/Functional/EntityDisplaySetupTrait.php:0

    ---------- begin diff ----------
@@ @@
 <?php

 namespace Drupal\Tests\video_embed_field\Functional;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\node\NodeInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
@@ @@
   /**
    * The entity display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $entityDisplay;

@@ @@
   /**
    * The form display.
    *
-   * @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface
+   * @var EntityFormDisplayInterface
    */
   protected $entityFormDisplay;

@@ @@
    * @param string $value
    *   The video URL to use for the field value.
    *
-   * @return \Drupal\node\NodeInterface
+   * @return NodeInterface
    *   A node.
    */
   protected function createVideoNode($value) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/video_embed_field/tests/src/Functional/AdminUserTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_field\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\user\Traits\UserCreationTrait;

 /**
@@ @@
   /**
    * Create an admin user.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   A user with all permissions.
    */
   protected function createAdminUser() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/video_embed_field/src/ProviderPluginBase.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * An http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

   /**
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *    An HTTP client.
    *
    * @throws \Exception
@@ @@
   /**
    * Get the file system service.
    *
-   * @return \Drupal\Core\File\FileSystemInterface
+   * @return FileSystemInterface
    *   The file system service.
    */
   protected function getFileSystem() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/video_embed_field/src/ProviderManagerInterface.php:33

    ---------- begin diff ----------
@@ @@
    * @param string $user_input
    *   The user input to test against the plugins.
    *
-   * @return \Drupal\video_embed_field\ProviderPluginInterface|bool
+   * @return ProviderPluginInterface|bool
    *   The relevant plugin or FALSE on failure.
    */
   public function filterApplicableDefinitions(array $definitions, $user_input);
@@ @@
    * @param string $input
    *   Input provided from a field.
    *
-   * @return \Drupal\video_embed_field\ProviderPluginInterface|bool
+   * @return ProviderPluginInterface|bool
    *   The loaded plugin.
    */
   public function loadProviderFromInput($input);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


14) modules/contrib/video_embed_field/src/Plugin/Validation/Constraint/VideoEmbedConstraintValidator.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Video embed provider manager service.
    *
-   * @var \Drupal\video_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * Create an instance of the validator.
    *
-   * @param \Drupal\video_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The provider manager service.
    */
   public function __construct(ProviderManagerInterface $provider_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/video_embed_field/src/Plugin/Field/FieldType/VideoEmbedField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\video_embed_field\Plugin\Field\FieldType;

+use Drupal\video_embed_field\ProviderManagerInterface;
 use Drupal\Core\Field\FieldItemBase;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The embed provider plugin manager.
    *
-   * @var \Drupal\video_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Video.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The embed provider plugin manager.
    *
-   * @var \Drupal\video_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * The logged in user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\video_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The video embed provider manager.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The logged in user.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, $settings, $label, $view_mode, $third_party_settings, ProviderManagerInterface $provider_manager, AccountInterface $current_user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Thumbnail.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The embed provider plugin manager.
    *
-   * @var \Drupal\video_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\video_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The video embed provider manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, $settings, $label, $view_mode, $third_party_settings, ProviderManagerInterface $provider_manager, EntityStorageInterface $image_style_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/LazyLoad.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The field formatter plugin instance for thumbnails.
    *
-   * @var \Drupal\Core\Field\FormatterInterface
+   * @var FormatterInterface
    */
   protected $thumbnailFormatter;

@@ @@
   /**
    * The field formatterp plguin instance for videos.
    *
-   * @var \Drupal\Core\Field\FormatterInterface
+   * @var FormatterInterface
    */
   protected $videoFormatter;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Field\FormatterInterface $thumbnail_formatter
+   * @param FormatterInterface $thumbnail_formatter
    *   The field formatter for thumbnails.
-   * @param \Drupal\Core\Field\FormatterInterface $video_formatter
+   * @param FormatterInterface $video_formatter
    *   The field formatter for videos.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, $settings, $label, $view_mode, $third_party_settings, RendererInterface $renderer, FormatterInterface $thumbnail_formatter, FormatterInterface $video_formatter) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/video_embed_field/src/Plugin/Field/FieldFormatter/Colorbox.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The field formatter plugin instance for thumbnails.
    *
-   * @var \Drupal\Core\Field\FormatterInterface
+   * @var FormatterInterface
    */
   protected $thumbnailFormatter;

@@ @@
   /**
    * The field formatterp plguin instance for videos.
    *
-   * @var \Drupal\Core\Field\FormatterInterface
+   * @var FormatterInterface
    */
   protected $videoFormatter;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Field\FormatterInterface $thumbnail_formatter
+   * @param FormatterInterface $thumbnail_formatter
    *   The field formatter for thumbnails.
-   * @param \Drupal\Core\Field\FormatterInterface $video_formatter
+   * @param FormatterInterface $video_formatter
    *   The field formatter for videos.
    * @param \Drupal\colorbox\ElementAttachmentInterface|null $colorbox_attachment
    *   The colorbox attachment if colorbox is enabled.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/video_embed_field/src/Annotation/VideoEmbedProvider.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\video_embed_field\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


21) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/video_embed_wysiwyg.module:14

    ---------- begin diff ----------
@@ @@
  * Implements hook_ckeditor_css_alter().
  */
 function video_embed_wysiwyg_ckeditor_css_alter(array &$css, Editor $editor) {
-  $css[] = drupal_get_path('module', 'video_embed_wysiwyg') . '/plugin/plugin.css';
+  $css[] = \Drupal::service('extension.list.module')->getPath('video_embed_wysiwyg') . '/plugin/plugin.css';
 }

 /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


22) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Kernel/FilterTest.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * The filter to use for the test.
    *
-   * @var \Drupal\filter\Entity\FilterFormat
+   * @var FilterFormat
    */
   protected $filter;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->filter = FilterFormat::create([
       'format' => 'test_format',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/FunctionalJavascript/EmbedDialogTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_wysiwyg\FunctionalJavascript;

+use Drupal\Core\Session\AccountInterface;
+use Behat\Mink\Element\NodeElement;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\node\Traits\ContentTypeCreationTrait;

@@ @@
   /**
    * An admin account for testing.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser(array_keys($this->container->get('user.permissions')->getPermissions()));
     $this->drupalLogin($this->adminUser);
@@ @@
     $this->find('button.form-submit')->click();
     $this->assertSession()->assertWaitOnAjaxRequest();
     $this->assertSession()->pageTextContains('Could not find a video provider to handle the given URL.');
-    $this->assertContains('http://example.com/', $this->getSession()->getPage()->getHtml());
+    $this->assertStringContainsString('http://example.com/', $this->getSession()->getPage()->getHtml());

     // Submit a valid URL.
     $this->find('input[name="video_url"]')->setValue('https://www.youtube.com/watch?v=iaf3Sl2r3jE&t=1553s');
@@ @@
    * @param string $css_selector
    *   A css selector to find an element for.
    *
-   * @return \Behat\Mink\Element\NodeElement|null
+   * @return NodeElement|null
    *   The found element or null.
    */
   protected function find($css_selector) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/tests/src/Functional/TextFormatConfigurationTest.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalLogin($this->createAdminUser());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Plugin/Filter/VideoEmbedWysiwyg.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The video provider manager.
    *
-   * @var \Drupal\video_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
    *   Plugin ID.
    * @param mixed $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\video_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The video provider manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ProviderManagerInterface $provider_manager, RendererInterface $renderer, AccountProxyInterface $current_user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Plugin/CKEditorPlugin/VideoEmbedWysiwyg.php:23

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'video_embed_wysiwyg') . '/plugin/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('video_embed_wysiwyg') . '/plugin/plugin.js';
   }

   /**
@@ @@
     return [
       'video_embed' => [
         'label' => $this->t('Video Embed'),
-        'image' => drupal_get_path('module', 'video_embed_wysiwyg') . '/plugin/icon.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('video_embed_wysiwyg') . '/plugin/icon.png',
       ],
     ];
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Form/VideoEmbedDialog.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The video provider manager.
    *
-   * @var \Drupal\video_embed_field\ProviderManager
+   * @var ProviderManager
    */
   protected $providerManager;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * VideoEmbedDialog constructor.
    *
-   * @param \Drupal\video_embed_field\ProviderManager $provider_manager
+   * @param ProviderManager $provider_manager
    *   The video provider plugin manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(ProviderManager $provider_manager, RendererInterface $renderer) {
@@ @@
   /**
    * Get a value from the widget in the WYSIWYG.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state to extract values from.
    * @param string $key
    *   The key to get from the selected WYSIWYG element.
@@ @@
   /**
    * Get the values from the form and provider required for the client.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state from the dialog submission.
-   * @param \Drupal\video_embed_field\ProviderPluginInterface $provider
+   * @param ProviderPluginInterface $provider
    *   The provider loaded from the user input.
    *
    * @return array
@@ @@
    * @param string $input
    *   The input string.
    *
-   * @return bool|\Drupal\video_embed_field\ProviderPluginInterface
+   * @return bool|ProviderPluginInterface
    *   A video provider or FALSE on failure.
    */
   protected function getProvider($input) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/video_embed_field/modules/video_embed_wysiwyg/src/Access/FilterInUse.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Check if the filter is used for the given filter.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route
+   * @param RouteMatchInterface $route
    *   The route.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   An access result.
    */
   public function access(RouteMatchInterface $route) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


29) modules/contrib/video_embed_field/modules/video_embed_media/video_embed_media.install:10

    ---------- begin diff ----------
@@ @@
  * Implements hook_install().
  */
 function video_embed_media_install() {
-  /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+  /** @var FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
   // Copy the video icons into the right place.
-  $icon_folder = drupal_get_path('module', 'video_embed_media') . '/images/icons';
+  $icon_folder = \Drupal::service('extension.list.module')->getPath('video_embed_media') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


30) modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/ProvidedFieldsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_media\Kernel;

+use Drupal\video_embed_media\Plugin\media\Source\VideoEmbedField;
+use Drupal\media\Entity\MediaType;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\media\Entity\Media;
 use Drupal\Tests\media\Kernel\MediaKernelTestBase;
@@ @@
   /**
    * The plugin under test.
    *
-   * @var \Drupal\video_embed_media\Plugin\media\Source\VideoEmbedField
+   * @var VideoEmbedField
    */
   protected $plugin;

@@ @@
   /**
    * The created media type.
    *
-   * @var \Drupal\media\Entity\MediaType;
+   * @var MediaType ;
    */
   protected $entityType;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->entityType = $this->createMediaType('video_embed_field');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Kernel/DefaultNameTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\video_embed_media\Kernel;

+use Drupal\video_embed_media\Plugin\media\Source\VideoEmbedField;
+use Drupal\media\Entity\MediaType;
 use Drupal\media\Entity\Media;
 use Drupal\Tests\media\Kernel\MediaKernelTestBase;

@@ @@
   /**
    * The plugin under test.
    *
-   * @var \Drupal\video_embed_media\Plugin\media\Source\VideoEmbedField
+   * @var VideoEmbedField
    */
   protected $plugin;

@@ @@
   /**
    * The created media type.
    *
-   * @var \Drupal\media\Entity\MediaType;
+   * @var MediaType ;
    */
   protected $entityType;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['video_embed_field', 'video_embed_media']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


32) modules/contrib/video_embed_field/modules/video_embed_media/tests/src/Functional/BundleTest.php:62

    ---------- begin diff ----------
@@ @@
       'field_media_video_embed_field[0][value]' => 'https://www.youtube.com/watch?v=XgYu7-DQjDQ',
     ], 'Save');
     // We should see the video thumbnail on the media page.
-    $this->assertContains('video_thumbnails/XgYu7-DQjDQ.jpg', $this->getSession()->getPage()->getHtml());
+    $this->assertStringContainsString('video_thumbnails/XgYu7-DQjDQ.jpg', $this->getSession()->getPage()->getHtml());
   }

 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


33) modules/contrib/video_embed_field/modules/video_embed_media/src/Plugin/media/Source/VideoEmbedField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\video_embed_media\Plugin\media\Source;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The video provider manager.
    *
-   * @var \Drupal\video_embed_field\ProviderManagerInterface
+   * @var ProviderManagerInterface
    */
   protected $providerManager;

@@ @@
   /**
    * The media settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $mediaSettings;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   Config field type manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\video_embed_field\ProviderManagerInterface $provider_manager
+   * @param ProviderManagerInterface $provider_manager
    *   The video provider manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, FieldTypePluginManagerInterface $field_type_manager, ConfigFactoryInterface $config_factory, ProviderManagerInterface $provider_manager) {
@@ @@
   /**
    * Get the video URL from a media entity.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   The media entity.
    *
    * @return string|bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


34) modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/vem_migrate_oembed.drush.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\vem_migrate_oembed\VemMigrate;
 /**
  * @file
  * Drush integration for vem_migrate_oembed.
@@ @@
  * Callback for drush commmand "video-embed-media-migrate-oembed" (vemmo).
  */
 function drush_vem_migrate_oembed_vem_migrate_oembed() {
-  /** @var \Drupal\vem_migrate_oembed\VemMigrate $migrate */
+  /** @var VemMigrate $migrate */
   $migrate = \Drupal::service('vem_migrate_oembed.migrate');
   $migrate->migrate();
   \drush_print(\dt('Migration complete.'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


35) modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/tests/src/Functional/oEmbedUpdateTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\vem_embed_media\Functional;

+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\vem_migrate_oembed\VemMigrate;
 use Drupal\media\Entity\MediaType;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\media\Traits\MediaTypeCreationTrait;
@@ @@
   public function testOEmbedUpdate() {

     $mediaType = $this->createMediaType('video_embed_field');
-    $this->assertEqual($mediaType->getSource()->getPluginId(), 'video_embed_field');
+    $this->assertEquals($mediaType->getSource()->getPluginId(), 'video_embed_field');

     $sourceField = $mediaType->getSource()->getSourceFieldDefinition($mediaType);
-    $this->assertEqual($sourceField->getType(), 'video_embed_field');
+    $this->assertEquals($sourceField->getType(), 'video_embed_field');

-    /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
+    /** @var EntityDisplayRepositoryInterface $display_repository */
     $display_repository = $this->container->get('entity_display.repository');

     $formDisplay = $display_repository->getFormDisplay('media', $mediaType->id());
     $formField = $formDisplay->getComponent($sourceField->getName());

-    $this->assertEqual($formField['type'], 'video_embed_field_textfield');
+    $this->assertEquals($formField['type'], 'video_embed_field_textfield');

-    /** @var \Drupal\vem_migrate_oembed\VemMigrate $vemService */
+    /** @var VemMigrate $vemService */
     $vemService = \Drupal::service('vem_migrate_oembed.migrate');
     $vemService->migrate();

-    /** @var \Drupal\media\Entity\MediaType $mediaType */
+    /** @var MediaType $mediaType */
     $mediaType = MediaType::load($mediaType->id());
-    $this->assertEqual($mediaType->getSource()->getPluginId(), 'oembed:video');
+    $this->assertEquals($mediaType->getSource()->getPluginId(), 'oembed:video');

     $sourceField = $mediaType->getSource()->getSourceFieldDefinition($mediaType);
-    $this->assertEqual($sourceField->getType(), 'string');
+    $this->assertEquals($sourceField->getType(), 'string');

     $formDisplay = $display_repository->getFormDisplay('media', $mediaType->id());
     $formField = $formDisplay->getComponent($sourceField->getName());

-    $this->assertEqual($formField['type'], 'oembed_textfield');
+    $this->assertEquals($formField['type'], 'oembed_textfield');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


36) modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/src/VemMigrate.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\vem_migrate_oembed;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
@@ @@
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The last installed schema repository service.
    *
-   * @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface
+   * @var EntityLastInstalledSchemaRepositoryInterface
    */
   protected $lastInstalledSchemaRepository;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The key value store.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueFactoryInterface
+   * @var KeyValueFactoryInterface
    */
   protected $keyValue;

@@ @@
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * VemMigrate constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
-   * @param \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $entityLastInstalledSchemaRepository
+   * @param EntityLastInstalledSchemaRepositoryInterface $entityLastInstalledSchemaRepository
    *   The last installed schema repository service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $keyValueFactory
+   * @param KeyValueFactoryInterface $keyValueFactory
    *   The key value store.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
+   * @param EntityFieldManagerInterface $entityFieldManager
    *   The entity field manager service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, EntityLastInstalledSchemaRepositoryInterface $entityLastInstalledSchemaRepository, Connection $connection, KeyValueFactoryInterface $keyValueFactory, EntityFieldManagerInterface $entityFieldManager) {
@@ @@
   /**
    * Migrates from video_embed_media to core media.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function migrate() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


37) modules/contrib/video_embed_field/modules/video_embed_media/modules/vem_migrate_oembed/src/Commands/VemCommands.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The migrate service.
    *
-   * @var \Drupal\vem_migrate_oembed\VemMigrate
+   * @var VemMigrate
    */
   protected $migrator;

@@ @@
   /**
    * VemCommands constructor.
    *
-   * @param \Drupal\vem_migrate_oembed\VemMigrate $migrator
+   * @param VemMigrate $migrator
    *   The migrate service.
    */
   public function __construct(VemMigrate $migrator) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 37 files have been changed by Rector                                      

