modules/contrib/silktide/silktide.module
modules/contrib/silktide/src/Event/SilktideEvent.php
modules/contrib/silktide/src/Form/SilktideForm.php
modules/contrib/silktide/src/SilktideService.php

3 files with changes
====================

1) modules/contrib/silktide/src/SilktideService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\silktide;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\silktide\Event\SilktideEvent;
@@ @@
   /**
    * The http client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;

@@ @@
   /**
    * The logger channel factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
   /**
    * The Drupal configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   A http client.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   A logger channel factory.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A configuration settings factory.
    */
   public function __construct(
@@ @@
    * @param \Drupal\silktide\event\SilktideEvent $event
    *   The event that was triggered.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function notify(SilktideEvent $event) {
     $settings = $this->configFactory->get('silktide.settings');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/silktide/src/Form/SilktideForm.php:33

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   Default form array structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object containing current form state.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   The render array of the currently built form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object describing the current state of the form.
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The render array of the currently built form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object describing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/silktide/src/Event/SilktideEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\silktide\Event;

-use Symfony\Component\EventDispatcher\Event;
-
 /**
  * Class SilktideEvent.
  *
  * @package Drupal\silktide\Event
  */
-class SilktideEvent extends Event {
+class SilktideEvent extends \Symfony\Contracts\EventDispatcher\Event {

   /**
    * Name of the event fired when we need to notify Silktide.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 3 files have been changed by Rector                                       

