modules/contrib/dynamic_menu_item/dynamic_menu_item.module
modules/contrib/dynamic_menu_item/src/Form/AdminForm.php
modules/contrib/dynamic_menu_item/src/Form/DynamicMenuItemAdminForm.php

2 files with changes
====================

1) modules/contrib/dynamic_menu_item/src/Form/DynamicMenuItemAdminForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\dynamic_menu_item\Form;

+use Drupal\Core\Entity\EntityTypeManager;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
   /**
    * Holds the entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The parent form selector service.
    *
-   * @var \Drupal\Core\Menu\MenuParentFormSelectorInterface
+   * @var MenuParentFormSelectorInterface
    */
   protected $menuParentSelector;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new \Drupal\dynamic_menu_item\Form\DynamicMenuItemAdminForm.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Menu\MenuParentFormSelectorInterface $menuParentSelector
+   * @param MenuParentFormSelectorInterface $menuParentSelector
    *   The menu parent form selector service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, MenuParentFormSelectorInterface $menuParentSelector, MessengerInterface $messenger, ConfigFactoryInterface $config_factory) {
@@ @@
   public function buildForm(array $form, FormStateInterface $form_state) {
     $config = $this->config('dynamic_menu_item.settings');

-    /** @var \Drupal\Core\Menu\MenuParentFormSelectorInterface $menuParentSelector */
+    /** @var MenuParentFormSelectorInterface $menuParentSelector */
     $menu_names = menu_ui_get_menus();
     $parent_element = $this->menuParentSelector
       ->parentSelectElement($config->get('menu_item_parent'), '', $menu_names);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/dynamic_menu_item/src/Form/AdminForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The parent form selector service.
    *
-   * @var \Drupal\Core\Menu\MenuParentFormSelectorInterface
+   * @var MenuParentFormSelectorInterface
    */
   protected $menuParentSelector;

@@ @@
   /**
    * Constructs a new \Drupal\Core\Menu\Form\MenuLinkDefaultForm.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Menu\MenuParentFormSelectorInterface $menu_parent_selector
+   * @param MenuParentFormSelectorInterface $menu_parent_selector
    *   The menu parent form selector service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, MenuParentFormSelectorInterface $menu_parent_selector) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

