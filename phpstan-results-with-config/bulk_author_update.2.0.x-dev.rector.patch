diff --git a/bulk_author_update.info.yml b/bulk_author_update.info.yml
index 16b502b..73bb032 100644
--- a/bulk_author_update.info.yml
+++ b/bulk_author_update.info.yml
@@ -1,6 +1,5 @@
 name: 'Bulk Author Update'
 description: 'Allows to update the author of nodes in bulk'
 package: 'Bulk Author Update'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 type: module
diff --git a/src/Form/BulkAuthorUpdateAdminConfigForm.php b/src/Form/BulkAuthorUpdateAdminConfigForm.php
index 54cc1aa..31cfaa3 100644
--- a/src/Form/BulkAuthorUpdateAdminConfigForm.php
+++ b/src/Form/BulkAuthorUpdateAdminConfigForm.php
@@ -18,41 +18,41 @@ class BulkAuthorUpdateAdminConfigForm extends FormBase {
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Provides an interface for an entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Provides an interface for entity type managers.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * User storage handler.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
   /**
    * ReportWorkerBase constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service the instance should use.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Provides an interface for an entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Provides an interface for entity type managers.
-   * @param \Drupal\user\UserStorageInterface $user_storage
+   * @param UserStorageInterface $user_storage
    *   The user storage handler.
    */
   public function __construct(StateInterface $state, EntityFieldManagerInterface $entity_field_manager, EntityTypeManagerInterface $entity_type_manager, UserStorageInterface $user_storage) {
@@ -92,7 +92,7 @@ class BulkAuthorUpdateAdminConfigForm extends FormBase {
       $default_user = $this->userStorage->load($data['author']);
       // Get the user image.
       if ($default_user->user_picture && !$default_user->user_picture->isEmpty()) {
-        $displayImg = file_create_url($default_user->user_picture->entity->getFileUri());
+        $displayImg = \Drupal::service('file_url_generator')->generateAbsoluteString($default_user->user_picture->entity->getFileUri());
       }
       else {
         $displayImg = '';
diff --git a/tests/src/Functional/ConfigFormTest.php b/tests/src/Functional/ConfigFormTest.php
index f8e01d7..1ef7168 100644
--- a/tests/src/Functional/ConfigFormTest.php
+++ b/tests/src/Functional/ConfigFormTest.php
@@ -35,7 +35,10 @@ class ConfigFormTest extends BrowserTestBase {
 
     $this->drupalLogin($account);
     $this->drupalGet('/admin/content/bulkauthorupdate/config');
-    $this->assertText('Bulk Author Update Configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Bulk Author Update Configuration');
   }
 
 }
