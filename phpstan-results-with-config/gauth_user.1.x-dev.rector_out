modules/contrib/gauth_user/gauth_user.module
modules/contrib/gauth_user/src/Controller/GauthUserCreate.php
modules/contrib/gauth_user/src/Entity/Controller/GauthUserListBuilder.php
modules/contrib/gauth_user/src/Entity/GauthUser.php
modules/contrib/gauth_user/src/Form/GauthUserDeleteForm.php
modules/contrib/gauth_user/src/Form/GauthUserForm.php
modules/contrib/gauth_user/src/Form/GauthUserRevokeForm.php
modules/contrib/gauth_user/src/Form/GauthUserSettingsForm.php
modules/contrib/gauth_user/src/GauthUserAccessControlHandler.php
modules/contrib/gauth_user/src/GauthUserPermissions.php
modules/contrib/gauth_user/src/Plugin/Validation/Constraint/GauthUserOwnerConstraint.php
modules/contrib/gauth_user/src/Plugin/Validation/Constraint/GauthUserOwnerConstraintValidator.php

5 files with changes
====================

1) modules/contrib/gauth_user/src/Plugin/Validation/Constraint/GauthUserOwnerConstraintValidator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gauth_user\Plugin\Validation\Constraint;

+use Symfony\Component\Validator\Context\ExecutionContextInterface;
+use Drupal\google_api_client\GoogleApiClientInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\user\UserStorageInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Validator 2.5 and upwards compatible execution context.
    *
-   * @var \Symfony\Component\Validator\Context\ExecutionContextInterface
+   * @var ExecutionContextInterface
    */
   protected $context;

@@ @@
   /**
    * User storage handler.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;

@@ @@
   /**
    * Google Api Client storage handler.
    *
-   * @var \Drupal\google_api_client\GoogleApiClientInterface
+   * @var GoogleApiClientInterface
    */
   protected $googleApiClientStorage;

@@ @@
   /**
    * Constructs a new GauthUserOwnerConstraintValidator.
    *
-   * @param \Drupal\user\UserStorageInterface $user_storage
+   * @param UserStorageInterface $user_storage
    *   The user storage handler.
-   * @param \Drupal\Core\Entity\Sql\SqlContentEntityStorage $google_api_client_storage
+   * @param SqlContentEntityStorage $google_api_client_storage
    *   The user storage handler.
    */
   public function __construct(UserStorageInterface $user_storage, SqlContentEntityStorage $google_api_client_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/gauth_user/src/Form/GauthUserSettingsForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a new SiteConfigureForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entityTypeManager) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/gauth_user/src/Entity/GauthUser.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gauth_user\Entity;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
@@ @@
   /**
    * Google Api Client.
    *
-   * @var \Drupal\google_api_client\Entity\GoogleApiClient
+   * @var GoogleApiClient
    */
   protected $googleApiClient;

@@ @@
   /**
    * Function gets Google Api Client object.
    *
-   * @return \Drupal\google_api_client\Entity\GoogleApiClient
+   * @return GoogleApiClient
    *   Returns object of GoogleApiClient.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getGoogleApiClient() {
     if ($this->googleApiClient) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/gauth_user/src/Controller/GauthUserCreate.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * EntityTypeManager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Callback constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   Google API Client.
    */
   public function __construct(EntityTypeManager $entityTypeManager) {
@@ @@
    *
    * @param int $google_api_client
    *   Google Authentication for Users object.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request.
    */
   public function createGauthUserAccount($google_api_client, Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/gauth_user/gauth_user.module:17

    ---------- begin diff ----------
@@ @@
 function gauth_user_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'help.page.gauth_user':
-      $path = $GLOBALS['base_url'] . '/' . drupal_get_path('module', 'gauth_user');
+      $path = $GLOBALS['base_url'] . '/' . \Drupal::service('extension.list.module')->getPath('gauth_user');
       $output = '<h3>' . t('About') . '</h3>';
       $output .= '<p>' . t("This module allows admin to define services and handle in permissions that which role can authenticate for which google service, this authentication can then be used to carry other api requests on the users account.") . '</p>';
       $output .= '<h3>' . t('Uses') . '</h3>';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

