diff --git a/editor_advanced_image.info.yml b/editor_advanced_image.info.yml
index 1de9148..533ba0d 100644
--- a/editor_advanced_image.info.yml
+++ b/editor_advanced_image.info.yml
@@ -1,7 +1,7 @@
 name: 'Editor Advanced Image'
 type: module
 description: 'Enhances the inline-image Dialog in D8 CKEditor.'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: CKEditor
 
 dependencies:
diff --git a/src/Plugin/CKEditorPlugin/EditorAdvancedImage.php b/src/Plugin/CKEditorPlugin/EditorAdvancedImage.php
index 521a38c..87e2988 100644
--- a/src/Plugin/CKEditorPlugin/EditorAdvancedImage.php
+++ b/src/Plugin/CKEditorPlugin/EditorAdvancedImage.php
@@ -47,7 +47,7 @@ class EditorAdvancedImage extends PluginBase implements CKEditorPluginInterface,
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'editor_advanced_image') . '/plugins/' . $this->getPluginId() . '/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('editor_advanced_image') . '/plugins/' . $this->getPluginId() . '/plugin.js';
   }
 
   /**
diff --git a/tests/src/FunctionalJavascript/UiAdminTest.php b/tests/src/FunctionalJavascript/UiAdminTest.php
index 046e0cf..26f6d2a 100644
--- a/tests/src/FunctionalJavascript/UiAdminTest.php
+++ b/tests/src/FunctionalJavascript/UiAdminTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\editor_advanced_image\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
 use Drupal\filter\Entity\FilterFormat;
 
 /**
@@ -33,7 +34,7 @@ class UiAdminTest extends UiTestBase {
   /**
    * A user with the 'administer filters' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/FunctionalJavascript/UiDialogTest.php b/tests/src/FunctionalJavascript/UiDialogTest.php
index 09fb4b4..b157077 100644
--- a/tests/src/FunctionalJavascript/UiDialogTest.php
+++ b/tests/src/FunctionalJavascript/UiDialogTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\editor_advanced_image\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\editor\Entity\Editor;
 use Drupal\field\Entity\FieldConfig;
@@ -40,7 +41,7 @@ class UiDialogTest extends UiTestBase {
   /**
    * A user with the 'administer filters' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/FunctionalJavascript/UiTestBase.php b/tests/src/FunctionalJavascript/UiTestBase.php
index b8db7c7..28480de 100644
--- a/tests/src/FunctionalJavascript/UiTestBase.php
+++ b/tests/src/FunctionalJavascript/UiTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\editor_advanced_image\FunctionalJavascript;
 
+use Behat\Mink\Element\NodeElement;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Behat\Mink\Exception\ElementNotFoundException;
 
@@ -21,7 +22,7 @@ abstract class UiTestBase extends WebDriverTestBase {
    * @param string $locator
    *   Input id, name or label.
    *
-   * @return \Behat\Mink\Element\NodeElement|null
+   * @return NodeElement|null
    *   The input field element.
    */
   public function findField($locator) {
@@ -34,7 +35,7 @@ abstract class UiTestBase extends WebDriverTestBase {
    * @param string $locator
    *   Button id, value or alt.
    *
-   * @return \Behat\Mink\Element\NodeElement|null
+   * @return NodeElement|null
    *   The button node element.
    */
   public function findButton($locator) {
@@ -47,7 +48,7 @@ abstract class UiTestBase extends WebDriverTestBase {
    * @param string $locator
    *   Button id, value or alt.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    */
   public function pressButton($locator) {
     $this->getSession()->getPage()->pressButton($locator);
@@ -61,10 +62,10 @@ abstract class UiTestBase extends WebDriverTestBase {
    * @param string|array $selector
    *   The element selector. Note: the first found element is used.
    *
-   * @return \Behat\Mink\Element\NodeElement|null
+   * @return NodeElement|null
    *   The node element.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    */
   public function clickOnElement($selector_type, $selector) {
     $element = $this->getSession()->getPage()->find($selector_type, $selector);
@@ -88,7 +89,7 @@ abstract class UiTestBase extends WebDriverTestBase {
    * @param string $value
    *   Value.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    *
    * @see \Behat\Mink\Element\NodeElement::setValue
    */
