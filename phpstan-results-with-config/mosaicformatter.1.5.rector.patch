diff --git a/mosaicformatter.info.yml b/mosaicformatter.info.yml
index 4eeb993..db96bae 100644
--- a/mosaicformatter.info.yml
+++ b/mosaicformatter.info.yml
@@ -1,9 +1,9 @@
-name: Mosaic Formatter
-description: Creates a field formatter that displayes image fields with multiple values using the mosaic plugin
-package: Custom
-type: module
-core_version_requirement: ^8.7.10 || ^9
-dependencies:
+name: Mosaic Formatter
+description: Creates a field formatter that displayes image fields with multiple values using the mosaic plugin
+package: Custom
+type: module
+core_version_requirement: ^9.3 || ^10
+dependencies:
   - drupal:image
 # Information added by Drupal.org packaging script on 2021-09-18
 version: '8.x-1.5'
diff --git a/src/Plugin/Field/FieldFormatter/MosaicFormatter.php b/src/Plugin/Field/FieldFormatter/MosaicFormatter.php
index dd27876..9601dfd 100644
--- a/src/Plugin/Field/FieldFormatter/MosaicFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/MosaicFormatter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\mosaicformatter\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Session\AccountInterface;
+use Drupal\image\ImageStyleStorageInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\image\Plugin\Field\FieldFormatter\ImageFormatterBase;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
@@ -29,49 +32,49 @@ use Drupal\Core\Entity\EntityTypeManagerInterface;
 class MosaicFormatter extends ImageFormatterBase implements ContainerFactoryPluginInterface {
 
   /**
-   * The current user.
-   *
-   * @var \Drupal\Core\Session\AccountInterface
-   */
-  protected $currentUser;
+		 * The current user.
+		 *
+		 * @var AccountInterface
+		 */
+		protected $currentUser;
 
   /**
-   * The image style entity storage.
-   *
-   * @var \Drupal\image\ImageStyleStorageInterface
-   */
-  protected $imageStyleStorage;
+		 * The image style entity storage.
+		 *
+		 * @var ImageStyleStorageInterface
+		 */
+		protected $imageStyleStorage;
 
    /**
-   * The entity type manager.
-   *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
-   */
-  protected $entityTypeManager;
+		 * The entity type manager.
+		 *
+		 * @var EntityTypeManagerInterface
+		 */
+		protected $entityTypeManager;
 
 /**
-   * Constructs an ImageFormatter object.
-   *
-   * @param string $plugin_id
-   *   The plugin_id for the formatter.
-   * @param mixed $plugin_definition
-   *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
-   *   The definition of the field to which the formatter is associated.
-   * @param array $settings
-   *   The formatter settings.
-   * @param string $label
-   *   The formatter label display setting.
-   * @param string $view_mode
-   *   The view mode.
-   * @param array $third_party_settings
-   *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
-   *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
-   *   The image style storage.
-   */
-  public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, \Drupal\Core\Session\AccountInterface $current_user, \Drupal\Core\Entity\EntityStorageInterface $image_style_storage, EntityTypeManagerInterface $entity_type_manager) {
+		 * Constructs an ImageFormatter object.
+		 *
+		 * @param string $plugin_id
+		 *   The plugin_id for the formatter.
+		 * @param mixed $plugin_definition
+		 *   The plugin implementation definition.
+		 * @param FieldDefinitionInterface $field_definition
+		 *   The definition of the field to which the formatter is associated.
+		 * @param array $settings
+		 *   The formatter settings.
+		 * @param string $label
+		 *   The formatter label display setting.
+		 * @param string $view_mode
+		 *   The view mode.
+		 * @param array $third_party_settings
+		 *   Any third party settings settings.
+		 * @param AccountInterface $current_user
+		 *   The current user.
+		 * @param EntityStorageInterface $image_style_storage
+		 *   The image style storage.
+		 */
+		public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage, EntityTypeManagerInterface $entity_type_manager) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $label, $view_mode, $third_party_settings);
     $this->currentUser = $current_user;
     $this->imageStyleStorage = $image_style_storage;
@@ -339,7 +342,7 @@ public static function exploreobject($object,$array=true,$depth=0) {
         $img=$item->getValue();
         $file=$this->entityTypeManager->getStorage('file')->load($img["target_id"]);
         $cache_tags = Cache::mergeTags($cache_tags, $file->getCacheTags());
-        $url = Url::fromUri(file_create_url($file->getFileUri()))->toUriString();
+        $url = \Drupal::service('file_url_generator')->generate($file->getFileUri())->toUriString();
         if ($style!==NULL) {
              $styleddestination = $style->buildUri($url);
              if (!file_exists($styleddestination)) {
@@ -352,7 +355,7 @@ public static function exploreobject($object,$array=true,$depth=0) {
             	$img["height"]=$imgdims[1];
             }
         }
-        $url=file_url_transform_relative($url);
+        $url=\Drupal::service('file_url_generator')->transformRelative($url);
 
        $elements['#items'][$delta] = [
         'uri'=> $url,
