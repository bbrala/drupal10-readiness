diff --git a/rules_flag.info.yml b/rules_flag.info.yml
index b04ecd1..e9739c9 100644
--- a/rules_flag.info.yml
+++ b/rules_flag.info.yml
@@ -2,8 +2,7 @@ name: Rules Flag
 type: module
 description: 'Integration of rules and flag modules. It adds rules events after flagging an entity, and adds rules examples with the events.'
 package: Rules
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 
 dependencies:
   - flag
diff --git a/rules_flag.module b/rules_flag.module
index 28a3768..0e877e6 100644
--- a/rules_flag.module
+++ b/rules_flag.module
@@ -59,7 +59,7 @@ function rules_flag_cron_job_scheduler_info() {
 /**
  * Callback of entity_delete scheduler.
  *
- * @param \Drupal\job_scheduler\Entity\JobSchedule $job
+ * @param JobSchedule $job
  *   The job.
  */
 function rules_flag_entity_delete_scheduler_callback(JobSchedule $job) {
diff --git a/src/Event/UserFlaggedEvent.php b/src/Event/UserFlaggedEvent.php
index a7160d7..43ac30e 100644
--- a/src/Event/UserFlaggedEvent.php
+++ b/src/Event/UserFlaggedEvent.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\rules_flag\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
 use Drupal\flag\FlaggingInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Event that is fired when a user is flagged.
@@ -18,23 +18,23 @@ class UserFlaggedEvent extends Event {
   /**
    * The Flagging entity.
    *
-   * @var \Drupal\flag\FlaggingInterface
+   * @var FlaggingInterface
    */
   public $flagging;
 
   /**
    * The User is flagged.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   public $user;
 
   /**
    * Constructs the object.
    *
-   * @param \Drupal\flag\FlaggingInterface $flagging
+   * @param FlaggingInterface $flagging
    *   The flagging entity.
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The flagging user.
    */
   public function __construct(FlaggingInterface $flagging, UserInterface $user) {
diff --git a/src/Plugin/Condition/EntityIsFlagged.php b/src/Plugin/Condition/EntityIsFlagged.php
index eb0da99..b4e91b0 100755
--- a/src/Plugin/Condition/EntityIsFlagged.php
+++ b/src/Plugin/Condition/EntityIsFlagged.php
@@ -38,7 +38,7 @@ class EntityIsFlagged extends RulesConditionBase {
   /**
    * Check if the provided entity is flagged.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check if it is flagged.
    * @param string $flag
    *   The flag to check for.
diff --git a/src/Plugin/RulesAction/EntityScheduleDelete.php b/src/Plugin/RulesAction/EntityScheduleDelete.php
index d34a79d..321532b 100644
--- a/src/Plugin/RulesAction/EntityScheduleDelete.php
+++ b/src/Plugin/RulesAction/EntityScheduleDelete.php
@@ -31,7 +31,7 @@ class EntityScheduleDelete extends RulesActionBase {
   /**
    * Deletes the Entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be deleted.
    * @param int $period
    *   The period to execute the job.
diff --git a/src/Plugin/RulesAction/FlaggingCreate.php b/src/Plugin/RulesAction/FlaggingCreate.php
index 4362d13..9f7848c 100644
--- a/src/Plugin/RulesAction/FlaggingCreate.php
+++ b/src/Plugin/RulesAction/FlaggingCreate.php
@@ -49,7 +49,7 @@ class FlaggingCreate extends RulesActionBase implements ContainerFactoryPluginIn
   /**
    * The entity storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;
 
@@ -76,7 +76,7 @@ class FlaggingCreate extends RulesActionBase implements ContainerFactoryPluginIn
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $storage) {
diff --git a/src/Plugin/RulesAction/FrindFlaggingDelete.php b/src/Plugin/RulesAction/FrindFlaggingDelete.php
index b1c9918..64c86a6 100644
--- a/src/Plugin/RulesAction/FrindFlaggingDelete.php
+++ b/src/Plugin/RulesAction/FrindFlaggingDelete.php
@@ -27,7 +27,7 @@ class FrindFlaggingDelete extends RulesActionBase {
   /**
    * Deletes the friend flagging.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity used to find the friend.
    */
   protected function doExecute(EntityInterface $entity) {
diff --git a/src/Plugin/RulesEvent/EntityFlaggedDeriver.php b/src/Plugin/RulesEvent/EntityFlaggedDeriver.php
index fba6320..52cae84 100644
--- a/src/Plugin/RulesEvent/EntityFlaggedDeriver.php
+++ b/src/Plugin/RulesEvent/EntityFlaggedDeriver.php
@@ -19,16 +19,16 @@ class EntityFlaggedDeriver extends DeriverBase implements ContainerDeriverInterf
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Creates a new EntityInsertDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
diff --git a/src/Plugin/RulesEvent/EntityUnflaggedDeriver.php b/src/Plugin/RulesEvent/EntityUnflaggedDeriver.php
index 64cf106..0a07dac 100644
--- a/src/Plugin/RulesEvent/EntityUnflaggedDeriver.php
+++ b/src/Plugin/RulesEvent/EntityUnflaggedDeriver.php
@@ -19,16 +19,16 @@ class EntityUnflaggedDeriver extends DeriverBase implements ContainerDeriverInte
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Creates a new EntityInsertDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
