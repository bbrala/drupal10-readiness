modules/contrib/floodcontrol_settings_api/mymodule/mymodule.module
modules/contrib/floodcontrol_settings_api/mymodule/src/Form/MyCustomForm.php
modules/contrib/floodcontrol_settings_api/mymodule/tests/src/Functional/FloodControlFormTest.php
modules/contrib/floodcontrol_settings_api/src/Controller/FloodControlAPIRouteController.php
modules/contrib/floodcontrol_settings_api/src/Form/SettingsForm.php

2 files with changes
====================

1) modules/contrib/floodcontrol_settings_api/mymodule/tests/src/Functional/FloodControlFormTest.php:29

    ---------- begin diff ----------
@@ @@
    * Tests that the form submission triggers floodcontrol.
    */
   public function testFormSubmissions() {
+    $this->drupalGet('mymodule/form/default');
     // First Submission.
-    $this->drupalPostForm('mymodule/form/default', [], t('Submit'));
-    $this->assertText('form_id: my_custom_form', "The form is submitted.");
+    $this->submitForm([], t('Submit'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('form_id: my_custom_form');
+    $this->drupalGet('mymodule/form/default');
     // Second Submission.
-    $this->drupalPostForm('mymodule/form/default', [], t('Submit'));
-    $this->assertText('form_id: my_custom_form', "The form is submitted.");
+    $this->submitForm([], t('Submit'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('form_id: my_custom_form');
+    $this->drupalGet('mymodule/form/default');
     // Third Submission.
-    $this->drupalPostForm('mymodule/form/default', [], t('Submit'));
-    $this->assertText('You cannot submit the form more than 2 times in 1 min. Try again later.', "The form is submitted again.");
+    $this->submitForm([], t('Submit'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('You cannot submit the form more than 2 times in 1 min. Try again later.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/floodcontrol_settings_api/mymodule/src/Form/MyCustomForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Flood\DatabaseBackend definition.
    *
-   * @var \Drupal\Core\Flood\DatabaseBackend
+   * @var DatabaseBackend
    */
   protected $flood;

@@ @@
   /**
    * Drupal\Core\Datetime\DateFormatter definition.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

