diff --git a/src/Commands/OmnyStudioCommands.php b/src/Commands/OmnyStudioCommands.php
index 20b92af..9cf6a2d 100644
--- a/src/Commands/OmnyStudioCommands.php
+++ b/src/Commands/OmnyStudioCommands.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\omnystudio\Commands;
 
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\migrate\MigrateException;
 use Drupal\Core\State\StateInterface;
 use Drupal\migrate\Plugin\MigrationInterface;
 use Drupal\migrate\Plugin\MigrationPluginManagerInterface;
@@ -19,39 +21,39 @@ class OmnyStudioCommands extends DrushCommands {
   /**
    * The migration object.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface
+   * @var MigrationPluginManagerInterface
    */
   protected $migrationManager;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The omnystudio program service.
    *
-   * @var \Drupal\omnystudio\OmnyStudioApiInterface
+   * @var OmnyStudioApiInterface
    */
   protected $apiManager;
 
   /**
    * The Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $loggerChannelFactory;
 
   /**
    * OmnyStudioCommands constructor.
    *
-   * @param \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migration
+   * @param MigrationPluginManagerInterface $migration
    *   Migration plugin manager interface.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   Interface for state system.
-   * @param \Drupal\omnystudio\OmnyStudioApiInterface $apiManager
+   * @param OmnyStudioApiInterface $apiManager
    *   Omnystudio program service.
    */
   public function __construct(MigrationPluginManagerInterface $migration, StateInterface $state, OmnyStudioApiInterface $apiManager, LoggerChannelFactoryInterface $loggerChannelFactory) {
@@ -74,29 +76,29 @@ class OmnyStudioCommands extends DrushCommands {
    * @command omnystudio:sync
    * @aliases omnystudio-sync
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\migrate\MigrateException
+   * @throws PluginException
+   * @throws MigrateException
    */
   public function sync() {
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_network */
+    /** @var MigrationInterface $migration_network */
     $migration_network = $this->migrationManager->createInstance('omnystudio_network');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_program_image */
+    /** @var MigrationInterface $migration_program_image */
     $migration_program_image = $this->migrationManager->createInstance('omnystudio_program_image');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_program_media */
+    /** @var MigrationInterface $migration_program_media */
     $migration_program_media = $this->migrationManager->createInstance('omnystudio_program_media');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_program */
+    /** @var MigrationInterface $migration_program */
     $migration_program = $this->migrationManager->createInstance('omnystudio_program');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_playlist_image */
+    /** @var MigrationInterface $migration_playlist_image */
     $migration_playlist_image = $this->migrationManager->createInstance('omnystudio_playlist_image');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_playlist_media */
+    /** @var MigrationInterface $migration_playlist_media */
     $migration_playlist_media = $this->migrationManager->createInstance('omnystudio_playlist_media');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_playlist */
+    /** @var MigrationInterface $migration_playlist */
     $migration_playlist = $this->migrationManager->createInstance('omnystudio_playlist');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $omnystudio_clip_image */
+    /** @var MigrationInterface $omnystudio_clip_image */
     $migration_clip_image = $this->migrationManager->createInstance('omnystudio_clip_image');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $omnystudio_clip_media */
+    /** @var MigrationInterface $omnystudio_clip_media */
     $migration_clip_media = $this->migrationManager->createInstance('omnystudio_clip_media');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration_clip */
+    /** @var MigrationInterface $migration_clip */
     $migration_clip = $this->migrationManager->createInstance('omnystudio_clip');
 
     // Migrate omnystudio network.
@@ -215,7 +217,7 @@ class OmnyStudioCommands extends DrushCommands {
   /**
    * Migrate the omnystudio videos and content.
    *
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   Migration plugin manager interface.
    *
    * @return int|null
diff --git a/src/Form/OmnyStudioSettingsForm.php b/src/Form/OmnyStudioSettingsForm.php
index 3b63a59..263acbd 100644
--- a/src/Form/OmnyStudioSettingsForm.php
+++ b/src/Form/OmnyStudioSettingsForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\omnystudio\Form;
 
+use Drupal\omnystudio\OmnyStudioApiInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -21,14 +23,14 @@ class OmnyStudioSettingsForm extends ConfigFormBase {
   /**
    * Drupal\omnystudio\OmnyStudioApiInterface definition.
    *
-   * @var \Drupal\omnystudio\OmnyStudioApiInterface
+   * @var OmnyStudioApiInterface
    */
   protected $omnystudioApi;
 
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
diff --git a/src/OmnyStudioApi.php b/src/OmnyStudioApi.php
index 197441e..9dbe36c 100644
--- a/src/OmnyStudioApi.php
+++ b/src/OmnyStudioApi.php
@@ -34,14 +34,14 @@ class OmnyStudioApi implements OmnyStudioApiInterface {
   /**
    * Drupal\Core\Http\ClientFactory definition.
    *
-   * @var \Drupal\Core\Http\ClientFactory
+   * @var ClientFactory
    */
   protected $clientFactory;
 
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -62,14 +62,14 @@ class OmnyStudioApi implements OmnyStudioApiInterface {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $loggerChannelFactory;
 
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 6dea242..9f5f632 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\omnystudio\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
