modules/contrib/entity_translation_unified_form/entity_translation_unified_form.install
modules/contrib/entity_translation_unified_form/entity_translation_unified_form.module
modules/contrib/entity_translation_unified_form/entity_translation_unified_form.theme.inc
modules/contrib/entity_translation_unified_form/src/Annotation/EntityTranslationUnifiedFormMode.php
modules/contrib/entity_translation_unified_form/src/EntityTranslationUnifiedFormModeInterface.php
modules/contrib/entity_translation_unified_form/src/EntityTranslationUnifiedFormModePluginManager.php
modules/contrib/entity_translation_unified_form/src/EtufHelper.php
modules/contrib/entity_translation_unified_form/src/Plugin/EntityTranslationUnifiedFormMode/EntityTranslationUnifiedFormInlineMode.php
modules/contrib/entity_translation_unified_form/src/Plugin/EntityTranslationUnifiedFormMode/EntityTranslationUnifiedFormTabbedMode.php

2 files with changes
====================

1) modules/contrib/entity_translation_unified_form/src/Annotation/EntityTranslationUnifiedFormMode.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_translation_unified_form\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The administrative label of the mode.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


2) modules/contrib/entity_translation_unified_form/entity_translation_unified_form.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\content_translation\ContentTranslationManagerInterface;
 /**
  * @file
  */
@@ @@
       // Get the CSS for the current theme.
       $theme = \Drupal::service('theme.manager')->getActiveTheme()->getName();
       if (floatval(\Drupal::VERSION) < 9.3) {
-        $path_to_etuf = drupal_get_path('module', 'entity_translation_unified_form');
+        $path_to_etuf = \Drupal::service('extension.list.module')->getPath('entity_translation_unified_form');
       }
       else {
         $path_to_etuf = \Drupal::service('extension.path.resolver')->getPath('module', 'entity_translation_unified_form');
@@ @@
  * Sets the configuration for a given bundle.
  */
 function entity_translation_unified_form_set_bundle_enabled($entity_type_id, $bundle, $enabled) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Returns true if ETUF is enabled for a given bundle.
  */
 function entity_translation_unified_form_bundle_enabled($entity_type_id, $bundle) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Sets the configuration for a given bundle.
  */
 function entity_translation_unified_form_set_sbs_enabled($entity_type_id, $bundle, $enabled) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Sets the configuration for a given bundle.
  */
 function entity_translation_unified_form_set_moderation_sync_disabled($entity_type_id, $bundle, $enabled) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Returns true if ETUF sbs is enabled for a given bundle.
  */
 function entity_translation_unified_form_sbs_enabled($entity_type_id, $bundle) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Sets the configuration for a given bundle.
  */
 function entity_translation_unified_form_set_translate_labels_enabled($entity_type_id, $bundle, $enabled) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Returns true if translate labels is enabled for a given bundle.
  */
 function entity_translation_unified_form_translate_labels_enabled($entity_type_id, $bundle) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Returns true if moderation sync mode is disabled for a given bundle.
  */
 function entity_translation_unified_form_moderation_sync_disabled($entity_type_id, $bundle) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Returns the display mode for a given bundle.
  */
 function entity_translation_unified_form_bundle_display_mode($entity_type_id, $bundle) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
  * Returns the language display mode for a given bundle.
  */
 function entity_translation_unified_form_language_display($entity_type_id, $bundle) {
-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   if ($content_translation_manager instanceof BundleTranslationSettingsInterface) {
@@ @@
     return;
   }

-  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager */
+  /** @var ContentTranslationManagerInterface $content_translation_manager */
   $content_translation_manager = \Drupal::service('content_translation.manager');

   $entity_manager = \Drupal::entityTypeManager();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

