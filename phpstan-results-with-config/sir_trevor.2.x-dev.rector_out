modules/contrib/sir_trevor/sir_trevor.module
modules/contrib/sir_trevor/src/ComplexDataValueProcessingEvent.php
modules/contrib/sir_trevor/src/Controller/IconsController.php
modules/contrib/sir_trevor/src/Controller/ImageStorage.php
modules/contrib/sir_trevor/src/EventDispatchingDataProcessor.php
modules/contrib/sir_trevor/src/Form/GlobalConfigForm.php
modules/contrib/sir_trevor/src/IconSvgMerger.php
modules/contrib/sir_trevor/src/IconSvgMergerInterface.php
modules/contrib/sir_trevor/src/LibraryInfoBuilder.php
modules/contrib/sir_trevor/src/Plugin/Field/FieldFormatter/SirTrevor.php
modules/contrib/sir_trevor/src/Plugin/Field/FieldType/SirTrevor.php
modules/contrib/sir_trevor/src/Plugin/Field/FieldWidget/SirTrevor.php
modules/contrib/sir_trevor/src/Plugin/SirTrevorBlock.php
modules/contrib/sir_trevor/src/Plugin/SirTrevorBlockPlugin.php
modules/contrib/sir_trevor/src/Plugin/SirTrevorMixin.php
modules/contrib/sir_trevor/src/Plugin/SirTrevorPlugin.php
modules/contrib/sir_trevor/src/Plugin/SirTrevorPluginManager.php
modules/contrib/sir_trevor/src/Plugin/SirTrevorPluginManagerInterface.php
modules/contrib/sir_trevor/tests/src/Unit/AnnotationAsserter.php
modules/contrib/sir_trevor/tests/src/Unit/FieldFormatter/EventDispatchingDataProcessorTest.php
modules/contrib/sir_trevor/tests/src/Unit/FieldFormatter/SirTrevorTest.php
modules/contrib/sir_trevor/tests/src/Unit/FieldType/SirTrevorTest.php
modules/contrib/sir_trevor/tests/src/Unit/FieldWidget/SirTrevorTest.php
modules/contrib/sir_trevor/tests/src/Unit/IconSvgMergerTest.php
modules/contrib/sir_trevor/tests/src/Unit/IconsControllerTest.php
modules/contrib/sir_trevor/tests/src/Unit/LibraryInfoBuilderTest.php
modules/contrib/sir_trevor/tests/src/Unit/Plugin/SirTrevorBlockPluginTest.php
modules/contrib/sir_trevor/tests/src/Unit/Plugin/SirTrevorPluginManagerTest.php
modules/contrib/sir_trevor/tests/src/Unit/Plugin/TestDoubles/ModuleHandlerMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ComplexDataValueProcessingEventSubscriberMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ConfigFactoryDummy.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ConfigFactoryMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ConfigFactorySpy.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ContainerSpy.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/EventDispatcherDummy.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/EventDispatcherMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/EventDispatcherSpy.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/FieldItemListDummy.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/FieldItemListMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/IconSvgMergerMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ImmutableConfigMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/SirTrevorBlockMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/SirTrevorMixinMock.php
modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/SirTrevorPluginManagerMock.php

27 files with changes
=====================

1) modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/SirTrevorPluginManagerMock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;

+use Drupal\sir_trevor\Plugin\SirTrevorPlugin;
 use Drupal\sir_trevor\Plugin\SirTrevorBlock;
 use Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface;

@@ @@
   protected $instances = [];
   /** @var array */
   protected $definitions = [];
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPlugin [] */
+  /** @var SirTrevorPlugin[] */
   private $blocks = [];
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPlugin [] */
+  /** @var SirTrevorPlugin[] */
   private $enabledBlocks = [];

   /**
@@ @@
   }

   /**
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPlugin[] $blocks
+   * @param SirTrevorPlugin[] $blocks
    */
   public function setBlocks(array $blocks) {
     $this->blocks = $blocks;
@@ @@
   }

   /**
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPlugin[] $blocks
+   * @param SirTrevorPlugin[] $blocks
    */
   public function setEnabledBlocks(array $blocks) {
     $this->enabledBlocks = $blocks;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/EventDispatcherSpy.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class EventDispatcherSpy
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/EventDispatcherMock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class EventDispatcherMock
@@ @@
  */
 abstract class EventDispatcherMock extends EventDispatcherDummy {

-  /** @var \Drupal\Tests\sir_trevor\Unit\TestDoubles\ComplexDataValueProcessingEventSubscriberMock */
+  /** @var ComplexDataValueProcessingEventSubscriberMock */
   private $subscriber;

   /**
-   * @param \Drupal\Tests\sir_trevor\Unit\TestDoubles\ComplexDataValueProcessingEventSubscriberMock $subscriber
+   * @param ComplexDataValueProcessingEventSubscriberMock $subscriber
    */
   public function setSubscriber(ComplexDataValueProcessingEventSubscriberMock $subscriber) {
     $this->subscriber = $subscriber;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/EventDispatcherDummy.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\sir_trevor\Unit\TestDoubles;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ConfigFactoryMock.php:9

    ---------- begin diff ----------
@@ @@

   /**
    * @param string $name
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    */
   public function set($name, ImmutableConfig $config) {
     $this->configs[$name] = $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/sir_trevor/tests/src/Unit/TestDoubles/ComplexDataValueProcessingEventSubscriberMock.php:36

    ---------- begin diff ----------
@@ @@
   }

   /**
-   * @param \Drupal\sir_trevor\ComplexDataValueProcessingEvent $event
+   * @param ComplexDataValueProcessingEvent $event
    */
   public function processEvent(ComplexDataValueProcessingEvent $event) {
     if (isset($this->replacementResults[$event->getType()])) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/sir_trevor/tests/src/Unit/Plugin/SirTrevorPluginManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sir_trevor\Tests\Unit\Plugin;

+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\FileCache\FileCacheFactory;
 use Drupal\sir_trevor\Plugin\SirTrevorBlock;
 use Drupal\sir_trevor\Plugin\SirTrevorBlockPlugin;
@@ @@
  * @group SirTrevor
  */
 class SirTrevorPluginManagerTest extends UnitTestCase {
-  /** @var \Drupal\Tests\sir_trevor\Unit\Plugin\TestDoubles\ModuleHandlerMock */
+  /** @var ModuleHandlerMock */
   protected $moduleHandler;
   /** @var ConfigFactorySpy */
   protected $configFactory;
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     FileCacheFactory::setPrefix('prefix');
     $this->moduleHandler = new ModuleHandlerMock();
     $directories = [
@@ @@

   /**
    * @test
-   * @expectedException \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @expectedExceptionMessage The "unknown" plugin does not exist.
    */
   public function getUnknownDefinition() {
+    $this->expectException(PluginNotFoundException::class);
+    $this->expectExceptionMessage('The "unknown" plugin does not exist.');
     $this->getSut()->getDefinition('unknown');
   }

@@ @@

   /**
    * @test
-   * @expectedException \Drupal\Component\Plugin\Exception\PluginException
-   * @expectedExceptionMessage The "unknown" plugin does not exist.
    */
   public function createInstanceWithInvalidPlugin() {
+    $this->expectException(PluginException::class);
+    $this->expectExceptionMessage('The "unknown" plugin does not exist.');
     $this->getSut()->createInstance('unknown');
   }

@@ @@
   }

   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPluginManager
+   * @return SirTrevorPluginManager
    */
   private function getSut() {
     if (!$this->configFactory->has('sir_trevor.global')) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/sir_trevor/tests/src/Unit/Plugin/SirTrevorBlockPluginTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sir_trevor\Tests\Unit\Plugin;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\sir_trevor\Plugin\SirTrevorBlock;
 use Drupal\Tests\UnitTestCase;

@@ @@

   /**
    * @test
-   * @expectedException \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @expectedExceptionMessage "some_id" must define "template".
    */
   public function definitionWithoutTemplate() {
+    $this->expectException(InvalidPluginDefinitionException::class);
+    $this->expectExceptionMessage('"some_id" must define "template".');
     new SirTrevorBlock($this->getDefinitionBase());
   }
 }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/sir_trevor/tests/src/Unit/LibraryInfoBuilderTest.php:10

    ---------- begin diff ----------
@@ @@
 /**
  * @group SirTrevor
  */
-class LibraryInfoBuilderTest extends \PHPUnit_Framework_TestCase {
+class LibraryInfoBuilderTest extends \PHPUnit\Framework\TestCase {
   /** @var SirTrevorPluginManagerMock */
   private $blockPluginManager;
   /** @var LibraryInfoBuilder */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/sir_trevor/tests/src/Unit/IconsControllerTest.php:14

    ---------- begin diff ----------
@@ @@
  * @package Drupal\sir_trevor\Tests
  * @group SirTrevor
  */
-class IconsControllerTest extends \PHPUnit_Framework_TestCase {
+class IconsControllerTest extends \PHPUnit\Framework\TestCase {
   /** @var SirTrevorPluginManagerMock */
   private $blockPluginManager;
   /** @var IconSvgMergerMock */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


11) modules/contrib/sir_trevor/tests/src/Unit/IconSvgMergerTest.php:9

    ---------- begin diff ----------
@@ @@
  * @package Drupal\sir_trevor\Tests
  * @group SirTrevor
  */
-class IconSvgMergerTest extends \PHPUnit_Framework_TestCase {
+class IconSvgMergerTest extends \PHPUnit\Framework\TestCase {
   /** @var Logger */
   protected $logger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


12) modules/contrib/sir_trevor/tests/src/Unit/FieldWidget/SirTrevorTest.php:34

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->pluginManagerMock = new SirTrevorPluginManagerMock();

@@ @@
   }

   /**
-   * @param \Drupal\Core\Field\FieldItemList $items
+   * @param FieldItemList $items
    * @return array
    */
   private function call__FormElement(FieldItemList $items) {
@@ @@

   /**
    * @param $field_name
-   * @return \Drupal\Core\Field\FieldItemList
+   * @return FieldItemList
    */
   private function getFieldItemListMock($field_name) {
     $items = new FieldItemList(new DataDefinition([]), 1);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/sir_trevor/tests/src/Unit/FieldType/SirTrevorTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     \Drupal::setContainer(new Container());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/sir_trevor/tests/src/Unit/FieldFormatter/SirTrevorTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     \Drupal::setContainer(new Container());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/sir_trevor/tests/src/Unit/FieldFormatter/EventDispatchingDataProcessorTest.php:11

    ---------- begin diff ----------
@@ @@
  *
  * @package Drupal\sir_trevor\Tests\Unit\FieldFormatter
  */
-class EventDispatchingDataProcessorTest extends \PHPUnit_Framework_TestCase {
+class EventDispatchingDataProcessorTest extends \PHPUnit\Framework\TestCase {
   /** @var EventDispatcherSpy */
   private $dispatcher;
   /** @var EventDispatchingDataProcessor */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


16) modules/contrib/sir_trevor/tests/src/Unit/AnnotationAsserter.php:18

    ---------- begin diff ----------
@@ @@
    */
   protected function assertClassAnnotationsMatch(array $expectedAnnotations, $classToTest) {
     $annotations = $this->getClassAnnotations($classToTest);
-    \PHPUnit_Framework_Assert::assertEquals($expectedAnnotations, $annotations);
+    \PHPUnit\Framework\Assert::assertEquals($expectedAnnotations, $annotations);
   }

   /**
-   * @return \Doctrine\Common\Annotations\DocParser
+   * @return DocParser
    */
   protected function createDocParser() {
     $docParser = new DocParser();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


17) modules/contrib/sir_trevor/src/Plugin/SirTrevorPluginManagerInterface.php:5

    ---------- begin diff ----------
@@ @@

 interface SirTrevorPluginManagerInterface extends PluginManagerInterface {
   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPlugin[]
+   * @return SirTrevorPlugin[]
    */
   public function createInstances();

   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPlugin[]
+   * @return SirTrevorPlugin[]
    *  All known SirTrevorPlugins of the type 'block'.
    */
   public function getBlocks();

   /**
-   * @return \Drupal\sir_trevor\Plugin\SirTrevorPlugin[]
+   * @return SirTrevorPlugin[]
    */
   public function getEnabledBlocks();
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


18) modules/contrib/sir_trevor/src/Plugin/SirTrevorPluginManager.php:7

    ---------- begin diff ----------
@@ @@

 class SirTrevorPluginManager implements SirTrevorPluginManagerInterface {

-  /** @var \Drupal\Core\Plugin\Discovery\YamlDiscovery */
+  /** @var YamlDiscovery */
   private $discovery;
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface */
+  /** @var ConfigFactoryInterface */
   private $configFactory;

   public function __construct(ModuleHandlerInterface $moduleHandler, ConfigFactoryInterface $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


19) modules/contrib/sir_trevor/src/Plugin/Field/FieldWidget/SirTrevor.php:22

    ---------- begin diff ----------
@@ @@
  * )
  */
 class SirTrevor extends WidgetBase implements ContainerFactoryPluginInterface {
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface  */
+  /** @var SirTrevorPluginManagerInterface  */
   private $pluginManager;

   /**
@@ @@
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface $pluginManager
+   * @param SirTrevorPluginManagerInterface $pluginManager
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, SirTrevorPluginManagerInterface $pluginManager) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $third_party_settings);
@@ @@
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/sir_trevor/src/LibraryInfoBuilder.php:6

    ---------- begin diff ----------
@@ @@

 class LibraryInfoBuilder {

-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface */
+  /** @var SirTrevorPluginManagerInterface */
   private $blockPluginManager;
   /** @var array */
   private $libraryInfo = [];

   /**
-   * @param \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface $blockPluginManager
+   * @param SirTrevorPluginManagerInterface $blockPluginManager
    */
   public function __construct(SirTrevorPluginManagerInterface $blockPluginManager) {
     $this->blockPluginManager = $blockPluginManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


21) modules/contrib/sir_trevor/src/IconSvgMerger.php:5

    ---------- begin diff ----------
@@ @@

 class IconSvgMerger implements IconSvgMergerInterface {

-  /** @var \Psr\Log\LoggerInterface */
+  /** @var LoggerInterface */
   private $logger;

   public function __construct(LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


22) modules/contrib/sir_trevor/src/Form/GlobalConfigForm.php:8

    ---------- begin diff ----------
@@ @@
 use Symfony\Component\DependencyInjection\ContainerInterface;

 class GlobalConfigForm extends ConfigFormBase {
-  /** @var \Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface */
+  /** @var SirTrevorPluginManagerInterface */
   private $sirTrevorPluginManager;

   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/sir_trevor/src/EventDispatchingDataProcessor.php:8

    ---------- begin diff ----------
@@ @@
  * @package Drupal\sir_trevor
  */
 class EventDispatchingDataProcessor {
-  /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface */
+  /** @var EventDispatcherInterface */
   private $eventDispatcher;

   /**
    * EventDispatchingDataProcessor constructor.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    */
   public function __construct(EventDispatcherInterface $eventDispatcher) {
     $this->eventDispatcher = $eventDispatcher;
@@ @@

   /**
    * @param \stdClass $dataValue
-   * @return \Drupal\sir_trevor\ComplexDataValueProcessingEvent
+   * @return ComplexDataValueProcessingEvent
    */
   private function dispatchProcessingComplexDataValueEvent(\stdClass $dataValue) {
     $event = new ComplexDataValueProcessingEvent($dataValue->type, $dataValue);
@@ @@
     $eventName = ComplexDataValueProcessingEvent::class;

     /** @var ComplexDataValueProcessingEvent $event */
-    $event = $this->eventDispatcher->dispatch($eventName, $event);
+    $event = $this->eventDispatcher->dispatch($event, $eventName);
     return $event;
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


24) modules/contrib/sir_trevor/src/Controller/ImageStorage.php:9

    ---------- begin diff ----------
@@ @@
 class ImageStorage extends ControllerBase {

   /**
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The Ajax response.
    */
   public function save() {
@@ @@
       $extension = $extensionGuesser->guess($mime);
       $filename = "public://contentbuilder/{$baseFileName}-{$id}.{$extension}";

-      $file = file_save_data($image, $filename);
+      $file = \Drupal::service('file.repository')->writeData($image, $filename);
       $images[$id] = $file;
     }
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


25) modules/contrib/sir_trevor/src/Controller/IconsController.php:10

    ---------- begin diff ----------
@@ @@
 use Symfony\Component\HttpFoundation\Response;

 class IconsController implements ContainerInjectionInterface {
-  /** @var \Drupal\Component\Plugin\PluginManagerInterface */
+  /** @var PluginManagerInterface */
   private $blockPluginManager;
-  /** @var \Drupal\sir_trevor\IconSvgMergerInterface */
+  /** @var IconSvgMergerInterface */
   private $iconSvgMerger;
-  /** @var \Drupal\Core\Extension\ModuleHandlerInterface */
+  /** @var ModuleHandlerInterface */
   private $moduleHandler;

   /**
    * IconsController constructor.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $blockPluginManager
-   * @param \Drupal\sir_trevor\IconSvgMergerInterface $iconSvgMerger
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param PluginManagerInterface $blockPluginManager
+   * @param IconSvgMergerInterface $iconSvgMerger
+   * @param ModuleHandlerInterface $moduleHandler
    */
   public function __construct(PluginManagerInterface $blockPluginManager, IconSvgMergerInterface $iconSvgMerger, ModuleHandlerInterface $moduleHandler) {
     $this->blockPluginManager = $blockPluginManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


26) modules/contrib/sir_trevor/src/ComplexDataValueProcessingEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sir_trevor;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class ComplexDataValueProcessingEvent
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/sir_trevor/sir_trevor.module:0

    ---------- begin diff ----------
@@ @@
 <?php
+use Drupal\sir_trevor\LibraryInfoBuilder;
 use Drupal\sir_trevor\Plugin\SirTrevorBlockPlugin;
 use Drupal\sir_trevor\Plugin\SirTrevorPlugin;
 use Drupal\sir_trevor\Plugin\SirTrevorPluginManagerInterface;
@@ @@
           'data' => [],
           'entity' => NULL,
         ],
-        'path' => drupal_get_path('module', $plugin->getDefiningModule()),
+        'path' => \Drupal::service('extension.list.module')->getPath($plugin->getDefiningModule()),
         'template' => $plugin->getTemplate(),
       ];
     }
@@ @@
  */
 function sir_trevor_library_info_alter(&$libraries, $extension) {
   $libraryBuilder = \Drupal::service('sir_trevor.libraries.info.builder');
-  /** @var \Drupal\sir_trevor\LibraryInfoBuilder $libraryBuilder */
+  /** @var LibraryInfoBuilder $libraryBuilder */
   $libraryInfo = $libraryBuilder->getLibraryInfo();

   if (!empty($libraryInfo[$extension])) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [WARNING] 4 nodes were removed                                                 

 [OK] 27 files have been changed by Rector                                      

