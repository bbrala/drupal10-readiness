diff --git a/src/EventSubscriber/BlockComponentRenderArray.php b/src/EventSubscriber/BlockComponentRenderArray.php
index d45686a..1dc401a 100644
--- a/src/EventSubscriber/BlockComponentRenderArray.php
+++ b/src/EventSubscriber/BlockComponentRenderArray.php
@@ -25,7 +25,7 @@ class BlockComponentRenderArray implements EventSubscriberInterface {
   /**
    * Builds render arrays for block plugins and sets it on the event.
    *
-   * @param \Drupal\layout_builder\Event\SectionComponentBuildRenderArrayEvent $event
+   * @param SectionComponentBuildRenderArrayEvent $event
    *   The section component render event.
    */
   public function onBuildRender(SectionComponentBuildRenderArrayEvent $event) {
diff --git a/src/Plugin/Field/FieldFormatter/CssFormatter.php b/src/Plugin/Field/FieldFormatter/CssFormatter.php
index 1825a5e..75d0d97 100644
--- a/src/Plugin/Field/FieldFormatter/CssFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/CssFormatter.php
@@ -117,7 +117,7 @@ class CssFormatter extends FormatterBase {
    *
    * @param array $element
    *   The element being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form array.
diff --git a/src/Plugin/Field/FieldWidget/CssWidget.php b/src/Plugin/Field/FieldWidget/CssWidget.php
index d5062e0..d8d97d4 100644
--- a/src/Plugin/Field/FieldWidget/CssWidget.php
+++ b/src/Plugin/Field/FieldWidget/CssWidget.php
@@ -87,7 +87,7 @@ class CssWidget extends WidgetBase {
    *
    * @param array $element
    *   The element being validated.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function validate(array $element, FormStateInterface $form_state) {
@@ -195,7 +195,7 @@ class CssWidget extends WidgetBase {
    * @param mixed $input
    *   The incoming input to populate the form element. If this is FALSE,
    *   the element's default value should be returned.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return mixed
diff --git a/src/Traits/CssTrait.php b/src/Traits/CssTrait.php
index d489040..f2ef20e 100644
--- a/src/Traits/CssTrait.php
+++ b/src/Traits/CssTrait.php
@@ -17,7 +17,7 @@ trait CssTrait {
   /**
    * Return any prefixes to be added to selectors for an entity and view mode.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity being rendered.
    * @param string $view_mode
    *   The view mode being rendered.
@@ -52,7 +52,7 @@ trait CssTrait {
    *
    * Pattern: 'scoped-css--[entity-type]-[entity-id]'.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity being rendered.
    * @param bool $leading_period
    *   Whether or not the prefix should be returned with a leading period.
diff --git a/tests/src/FunctionalJavascript/FormatterTest.php b/tests/src/FunctionalJavascript/FormatterTest.php
index 4e8274c..0be6ece 100644
--- a/tests/src/FunctionalJavascript/FormatterTest.php
+++ b/tests/src/FunctionalJavascript/FormatterTest.php
@@ -220,7 +220,7 @@ class FormatterTest extends TestBase {
     $assert_session->elementExists('xpath', '//head/style[contains(string(), "color: yellow;")]');
     $element = $page->find('xpath', '//div[@class="grantne"]');
     $this->assertNotEmpty($element);
-    $this->assertContains('Testing Block', $element->getHtml());
+    $this->assertStringContainsString('Testing Block', $element->getHtml());
   }
 
   /**
@@ -250,9 +250,9 @@ class FormatterTest extends TestBase {
 
     // Verify default configuration in UI.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Location: HEAD', $summary_markup);
-    $this->assertContains('Selector Prefix: None', $summary_markup);
-    $this->assertNotContains('Fixed Prefix Value', $summary_markup);
+    $this->assertStringContainsString('Location: HEAD', $summary_markup);
+    $this->assertStringContainsString('Selector Prefix: None', $summary_markup);
+    $this->assertStringNotContainsString('Fixed Prefix Value', $summary_markup);
 
     // Verify default configuration in storage.
     $display_component = \Drupal::service('entity_display.repository')
@@ -284,9 +284,9 @@ class FormatterTest extends TestBase {
 
     // Verify summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Location: BODY', $summary_markup);
-    $this->assertContains('Selector Prefix: Fixed Value', $summary_markup);
-    $this->assertContains('Fixed Prefix Value: venango', $summary_markup);
+    $this->assertStringContainsString('Location: BODY', $summary_markup);
+    $this->assertStringContainsString('Selector Prefix: Fixed Value', $summary_markup);
+    $this->assertStringContainsString('Fixed Prefix Value: venango', $summary_markup);
 
     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
diff --git a/tests/src/FunctionalJavascript/TestBase.php b/tests/src/FunctionalJavascript/TestBase.php
index fa594ff..85d7f32 100644
--- a/tests/src/FunctionalJavascript/TestBase.php
+++ b/tests/src/FunctionalJavascript/TestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\field_css\FunctionalJavascript;
 
+use Drupal\user\Entity\User;
+use Behat\Mink\Element\NodeElement;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
@@ -19,14 +21,14 @@ abstract class TestBase extends WebDriverTestBase {
   /**
    * A user with permission to access CSS fields.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $codeUser;
 
   /**
    * A user without permission to access CSS fields.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $authUser;
 
@@ -41,7 +43,7 @@ abstract class TestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->createContentType(['type' => 'page']);
@@ -93,7 +95,7 @@ abstract class TestBase extends WebDriverTestBase {
   /**
    * Helper function to find NodeElement for a widget/formatter summary cell.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   NodeElement for the formatter summary cell.
    */
   protected function getSummaryCell() {
diff --git a/tests/src/FunctionalJavascript/WidgetTest.php b/tests/src/FunctionalJavascript/WidgetTest.php
index fdb9dca..e678b06 100644
--- a/tests/src/FunctionalJavascript/WidgetTest.php
+++ b/tests/src/FunctionalJavascript/WidgetTest.php
@@ -121,8 +121,8 @@ class WidgetTest extends TestBase {
 
     // Verify default settings in summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Load toolbar: Yes', $summary_markup);
-    $this->assertContains('Toolbar buttons: undo, redo, enlarge, shrink', $summary_markup);
+    $this->assertStringContainsString('Load toolbar: Yes', $summary_markup);
+    $this->assertStringContainsString('Toolbar buttons: undo, redo, enlarge, shrink', $summary_markup);
 
     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
@@ -150,8 +150,8 @@ class WidgetTest extends TestBase {
 
     // Verify updated settings in summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Load toolbar: Yes', $summary_markup);
-    $this->assertContains('Toolbar buttons: enlarge, shrink', $summary_markup);
+    $this->assertStringContainsString('Load toolbar: Yes', $summary_markup);
+    $this->assertStringContainsString('Toolbar buttons: enlarge, shrink', $summary_markup);
 
     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
@@ -180,8 +180,8 @@ class WidgetTest extends TestBase {
 
     // Verify updated settings in summary.
     $summary_markup = $this->getSummaryCell()->getHtml();
-    $this->assertContains('Load toolbar: No', $summary_markup);
-    $this->assertNotContains('Toolbar buttons:', $summary_markup);
+    $this->assertStringContainsString('Load toolbar: No', $summary_markup);
+    $this->assertStringNotContainsString('Toolbar buttons:', $summary_markup);
 
     $page->pressButton('Save');
     $assert_session->pageTextContains('Your settings have been saved.');
