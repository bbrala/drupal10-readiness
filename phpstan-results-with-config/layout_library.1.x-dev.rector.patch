diff --git a/src/Entity/Layout.php b/src/Entity/Layout.php
index 2812f23..9f81ee2 100644
--- a/src/Entity/Layout.php
+++ b/src/Entity/Layout.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_library\Entity;
 
+use Drupal\layout_builder\Section;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\field_ui\FieldUI;
 use Drupal\layout_builder\SectionListInterface;
@@ -129,7 +130,7 @@ class Layout extends ConfigEntityBase implements SectionListInterface {
    * Implementations of this method are expected to call array_values() to rekey
    * the list of sections.
    *
-   * @param \Drupal\layout_builder\Section[] $sections
+   * @param Section[] $sections
    *   An array of section objects.
    *
    * @return $this
diff --git a/src/Entity/LayoutListBuilder.php b/src/Entity/LayoutListBuilder.php
index a146f43..c42492d 100644
--- a/src/Entity/LayoutListBuilder.php
+++ b/src/Entity/LayoutListBuilder.php
@@ -21,36 +21,36 @@ class LayoutListBuilder extends EntityListBuilder {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfo;
 
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a new LayoutListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   Entity type.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   Entity storage.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundleInfo
+   * @param EntityTypeBundleInfoInterface $bundleInfo
    *   Bundle info.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   Current user.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, EntityTypeManagerInterface $entityTypeManager, EntityTypeBundleInfoInterface $bundleInfo, AccountInterface $currentUser) {
@@ -90,7 +90,7 @@ class LayoutListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\layout_library\Entity\Layout $entity */
+    /** @var Layout $entity */
     $targetEntityTypeId = $entity->getTargetEntityType();
     $bundle_info = $this->bundleInfo->getBundleInfo($targetEntityTypeId);
     $bundle_name = isset($bundle_info[$entity->getTargetBundle()]) ? $bundle_info[$entity->getTargetBundle()]['label'] : $entity->getTargetBundle();
@@ -106,7 +106,7 @@ class LayoutListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   protected function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\layout_library\Entity\Layout $entity */
+    /** @var Layout $entity */
     $operations = [];
     if ($this->currentUser->hasPermission('administer ' . $entity->getTargetEntityType() . ' display')) {
       $operations['edit'] = [
diff --git a/src/EventSubscriber/PrepareLayout.php b/src/EventSubscriber/PrepareLayout.php
index d334524..e6f3e23 100644
--- a/src/EventSubscriber/PrepareLayout.php
+++ b/src/EventSubscriber/PrepareLayout.php
@@ -20,14 +20,14 @@ class PrepareLayout implements EventSubscriberInterface {
   /**
    * The layout tempstore repository.
    *
-   * @var \Drupal\layout_builder\LayoutTempstoreRepositoryInterface
+   * @var LayoutTempstoreRepositoryInterface
    */
   protected $layoutTempstoreRepository;
 
   /**
    * PrepareLayout constructor.
    *
-   * @param \Drupal\layout_builder\LayoutTempstoreRepositoryInterface $layout_tempstore_repository
+   * @param LayoutTempstoreRepositoryInterface $layout_tempstore_repository
    *   The tempstore repository.
    */
   public function __construct(LayoutTempstoreRepositoryInterface $layout_tempstore_repository) {
@@ -51,7 +51,7 @@ class PrepareLayout implements EventSubscriberInterface {
   /**
    * Prepares a layout for use in the UI.
    *
-   * @param \Drupal\layout_builder\Event\PrepareLayoutEvent $event
+   * @param PrepareLayoutEvent $event
    *   The prepare layout event.
    */
   public function onPrepareLayout(PrepareLayoutEvent $event) {
diff --git a/src/Form/LayoutAddForm.php b/src/Form/LayoutAddForm.php
index b144cc4..008df7b 100644
--- a/src/Form/LayoutAddForm.php
+++ b/src/Form/LayoutAddForm.php
@@ -19,32 +19,32 @@ class LayoutAddForm extends EntityForm {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $bundleInfo;
 
   /**
    * Messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new LayoutAddForm object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $bundleInfo
+   * @param EntityTypeBundleInfoInterface $bundleInfo
    *   Bundle info.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Messenger.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, EntityTypeBundleInfoInterface $bundleInfo, MessengerInterface $messenger) {
diff --git a/src/Form/LayoutBuilderForm.php b/src/Form/LayoutBuilderForm.php
index b60a4ec..5dfe9d7 100644
--- a/src/Form/LayoutBuilderForm.php
+++ b/src/Form/LayoutBuilderForm.php
@@ -18,21 +18,21 @@ class LayoutBuilderForm extends EntityForm {
   /**
    * Layout tempstore repository.
    *
-   * @var \Drupal\layout_builder\LayoutTempstoreRepositoryInterface
+   * @var LayoutTempstoreRepositoryInterface
    */
   protected $layoutTempstoreRepository;
 
   /**
    * The section storage.
    *
-   * @var \Drupal\layout_builder\SectionStorageInterface
+   * @var SectionStorageInterface
    */
   protected $sectionStorage;
 
   /**
    * Constructs a new DefaultsEntityForm.
    *
-   * @param \Drupal\layout_builder\LayoutTempstoreRepositoryInterface $layout_tempstore_repository
+   * @param LayoutTempstoreRepositoryInterface $layout_tempstore_repository
    *   The layout tempstore repository.
    */
   public function __construct(LayoutTempstoreRepositoryInterface $layout_tempstore_repository) {
diff --git a/src/Plugin/SectionStorage/Library.php b/src/Plugin/SectionStorage/Library.php
index 8a61820..5f528b8 100644
--- a/src/Plugin/SectionStorage/Library.php
+++ b/src/Plugin/SectionStorage/Library.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\layout_library\Plugin\SectionStorage;
 
+use Drupal\layout_builder\SectionListInterface;
+use Drupal\layout_library\Entity\Layout;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Component\Plugin\Context\ContextInterface as ComponentContextInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
@@ -41,14 +44,14 @@ class Library extends SectionStorageBase implements ContainerFactoryPluginInterf
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Sample entity generation.
    *
-   * @var \Drupal\layout_builder\Entity\LayoutBuilderSampleEntityGenerator
+   * @var LayoutBuilderSampleEntityGenerator
    */
   protected $sampleEntityGenerator;
 
@@ -61,9 +64,9 @@ class Library extends SectionStorageBase implements ContainerFactoryPluginInterf
    *   ID.
    * @param mixed $plugin_definition
    *   Definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\layout_builder\Entity\LayoutBuilderSampleEntityGenerator $sampleEntityGenerator
+   * @param LayoutBuilderSampleEntityGenerator $sampleEntityGenerator
    *   Sample entity generator.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entityTypeManager, LayoutBuilderSampleEntityGenerator $sampleEntityGenerator) {
@@ -88,7 +91,7 @@ class Library extends SectionStorageBase implements ContainerFactoryPluginInterf
   /**
    * Gets the layout.
    *
-   * @return \Drupal\layout_builder\SectionListInterface|\Drupal\layout_library\Entity\Layout
+   * @return SectionListInterface|Layout
    *   Layout.
    */
   protected function getLayout() {
@@ -176,7 +179,7 @@ class Library extends SectionStorageBase implements ContainerFactoryPluginInterf
   /**
    * Returns an array of relevant entity types.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface[]
+   * @return EntityTypeInterface[]
    *   An array of entity types.
    */
   protected function getEntityTypes() {
@@ -215,7 +218,7 @@ class Library extends SectionStorageBase implements ContainerFactoryPluginInterf
    * @param array $defaults
    *   The route defaults array.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity for the route, or NULL if none exist.
    */
   protected function extractEntityFromRoute($value, array $defaults) {
diff --git a/tests/src/Functional/AddLayoutTest.php b/tests/src/Functional/AddLayoutTest.php
index 76b273f..5929c91 100644
--- a/tests/src/Functional/AddLayoutTest.php
+++ b/tests/src/Functional/AddLayoutTest.php
@@ -29,7 +29,7 @@ class AddLayoutTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_actions_block');
diff --git a/tests/src/Functional/LayoutDisplayTest.php b/tests/src/Functional/LayoutDisplayTest.php
index f221e19..4726862 100644
--- a/tests/src/Functional/LayoutDisplayTest.php
+++ b/tests/src/Functional/LayoutDisplayTest.php
@@ -29,7 +29,7 @@ class LayoutDisplayTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_actions_block');
diff --git a/tests/src/Functional/LayoutLibraryTest.php b/tests/src/Functional/LayoutLibraryTest.php
index 32ac38d..7f8678b 100644
--- a/tests/src/Functional/LayoutLibraryTest.php
+++ b/tests/src/Functional/LayoutLibraryTest.php
@@ -29,7 +29,7 @@ class LayoutLibraryTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_actions_block');
diff --git a/tests/src/Functional/LayoutSelectionTest.php b/tests/src/Functional/LayoutSelectionTest.php
index 6be17fe..bdd89cf 100644
--- a/tests/src/Functional/LayoutSelectionTest.php
+++ b/tests/src/Functional/LayoutSelectionTest.php
@@ -27,7 +27,7 @@ class LayoutSelectionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'alpha']);
diff --git a/tests/src/Functional/LibraryAccessTest.php b/tests/src/Functional/LibraryAccessTest.php
index b6fa87e..c1ed84b 100644
--- a/tests/src/Functional/LibraryAccessTest.php
+++ b/tests/src/Functional/LibraryAccessTest.php
@@ -26,7 +26,7 @@ class LibraryAccessTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->layoutAdmin = $this->drupalCreateUser(['configure any layout']);
diff --git a/tests/src/Kernel/LayoutSelectionFieldTest.php b/tests/src/Kernel/LayoutSelectionFieldTest.php
index 7ffd4c7..fae65ef 100644
--- a/tests/src/Kernel/LayoutSelectionFieldTest.php
+++ b/tests/src/Kernel/LayoutSelectionFieldTest.php
@@ -34,7 +34,7 @@ class LayoutSelectionFieldTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('node');
     $this->installSchema('system', ['key_value_expire']);
@@ -45,7 +45,7 @@ class LayoutSelectionFieldTest extends KernelTestBase {
    * Tests that the layout_selection persists if multiple displays are using it.
    */
   public function testFieldPersistsForMultipleDisplays() {
-    /** @var \Drupal\layout_builder\Entity\LayoutEntityDisplayInterface $full_display */
+    /** @var LayoutEntityDisplayInterface $full_display */
     $full_display = \Drupal::service('entity_display.repository')->getViewDisplay('node', 'test', 'full');
     $this->assertInstanceOf(LayoutEntityDisplayInterface::class, $full_display);
     $full_display->enableLayoutBuilder()
@@ -53,7 +53,7 @@ class LayoutSelectionFieldTest extends KernelTestBase {
       ->save();
     $this->assertFieldExists();
 
-    /** @var \Drupal\layout_builder\Entity\LayoutEntityDisplayInterface $teaser_display */
+    /** @var LayoutEntityDisplayInterface $teaser_display */
     $teaser_display = \Drupal::service('entity_display.repository')->getViewDisplay('node', 'test', 'teaser');
     $this->assertInstanceOf(LayoutEntityDisplayInterface::class, $teaser_display);
     $teaser_display->enableLayoutBuilder()
