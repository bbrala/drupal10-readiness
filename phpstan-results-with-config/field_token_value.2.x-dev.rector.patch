diff --git a/field_token_value.api.php b/field_token_value.api.php
index 3f2bb9c..97fb084 100644
--- a/field_token_value.api.php
+++ b/field_token_value.api.php
@@ -21,7 +21,7 @@
 function hook_field_token_value_output_alter(&$element, $wrapper_info) {
   // Attach a CSS file if the paragraph wrapper is being used.
   if ($wrapper_info['tag'] == 'p') {
-    $element['#attached']['css'][] = drupal_get_path('module', 'my_module') . '/css/my-styles.css';
+    $element['#attached']['css'][] = \Drupal::service('extension.list.module')->getPath('my_module') . '/css/my-styles.css';
   }
 }
 
diff --git a/field_token_value.info.yml b/field_token_value.info.yml
index 5a5e3f4..1e474dc 100644
--- a/field_token_value.info.yml
+++ b/field_token_value.info.yml
@@ -1,8 +1,7 @@
 name: Field Token Value
 type: module
 description: Provides a field allowing the value to be set using a string containing tokens.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
   - token:token
diff --git a/src/Plugin/Field/FieldFormatter/FieldTokenValueTextFormatter.php b/src/Plugin/Field/FieldFormatter/FieldTokenValueTextFormatter.php
index 2a8c114..b9b97b8 100644
--- a/src/Plugin/Field/FieldFormatter/FieldTokenValueTextFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FieldTokenValueTextFormatter.php
@@ -28,7 +28,7 @@ class FieldTokenValueTextFormatter extends FormatterBase implements ContainerFac
   /**
    * The field token value wrapper manager.
    *
-   * @var \Drupal\field_token_value\WrapperManagerInterface
+   * @var WrapperManagerInterface
    */
   protected $wrappers;
 
@@ -55,7 +55,7 @@ class FieldTokenValueTextFormatter extends FormatterBase implements ContainerFac
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -65,7 +65,7 @@ class FieldTokenValueTextFormatter extends FormatterBase implements ContainerFac
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\field_token_value\WrapperManagerInterface $wrappers
+   * @param WrapperManagerInterface $wrappers
    *   The field token value wrapper service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, WrapperManagerInterface $wrappers) {
@@ -160,7 +160,7 @@ class FieldTokenValueTextFormatter extends FormatterBase implements ContainerFac
 
       if ($output_as_link && isset($uri) && !$entity->isNew()) {
         $link = Link::fromTextAndUrl($element[0]['#value'], $uri)->toRenderable();
-        $element[0]['#value'] = render($link);
+        $element[0]['#value'] = \Drupal::service('renderer')->render($link);
       }
 
       if (!empty($selected)) {
diff --git a/src/WrapperManager.php b/src/WrapperManager.php
index 4823c49..8c5fe50 100644
--- a/src/WrapperManager.php
+++ b/src/WrapperManager.php
@@ -69,11 +69,11 @@ class WrapperManager extends DefaultPluginManager implements WrapperManagerInter
   /**
    * Constructs a new WrapperManager instance.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler, CacheBackendInterface $cache_backend) {
