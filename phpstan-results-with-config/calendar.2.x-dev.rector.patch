diff --git a/calendar.info.yml b/calendar.info.yml
index 2bf89e8..88b697a 100755
--- a/calendar.info.yml
+++ b/calendar.info.yml
@@ -1,8 +1,7 @@
 name: 'Calendar'
 type: module
 description: 'Calendar V2'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'Views'
 dependencies:
   - drupal:views
diff --git a/src/CalendarEvent.php b/src/CalendarEvent.php
index 1129f5a..37f9e95 100644
--- a/src/CalendarEvent.php
+++ b/src/CalendarEvent.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\calendar;
 
+use Drupal\Core\Datetime\DrupalDateTime;
+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * Defines a calendar event object.
  */
@@ -10,7 +12,7 @@ class CalendarEvent {
   /**
    * Startdate for the event.
    *
-   * @var \Drupal\Core\Datetime\DrupalDateTime
+   * @var DrupalDateTime
    *   The start date for the event.
    */
   protected $startDate;
@@ -18,7 +20,7 @@ class CalendarEvent {
   /**
    * Enddate for the event.
    *
-   * @var \Drupal\Core\Datetime\DrupalDateTime
+   * @var DrupalDateTime
    *   The end date for the event.
    */
   protected $endDate;
@@ -86,7 +88,7 @@ class CalendarEvent {
   /**
    * Entity.
    *
-   * @var \Drupal\Core\Entity\ContentEntityInterface
+   * @var ContentEntityInterface
    */
   protected $entity;
 
@@ -207,7 +209,7 @@ class CalendarEvent {
   /**
    * Get the complete entity.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *   Tthe event entity.
    */
   public function getEntity() {
@@ -247,7 +249,7 @@ class CalendarEvent {
   /**
    * Getter for the start date.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime
+   * @return DrupalDateTime
    *   The start date.
    */
   public function getStartDate() {
@@ -257,7 +259,7 @@ class CalendarEvent {
   /**
    * Setter for the start date.
    *
-   * @param \Drupal\Core\Datetime\DrupalDateTime $startDate
+   * @param DrupalDateTime $startDate
    *   The start date.
    */
   public function setStartDate($startDate) {
@@ -307,7 +309,7 @@ class CalendarEvent {
   /**
    * Getter for the end date.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime
+   * @return DrupalDateTime
    *   The end date.
    */
   public function getEndDate() {
@@ -317,7 +319,7 @@ class CalendarEvent {
   /**
    * Setter for the end date.
    *
-   * @param \Drupal\Core\Datetime\DrupalDateTime $endDate
+   * @param DrupalDateTime $endDate
    *   The end date.
    */
   public function setEndDate($endDate) {
diff --git a/src/CalendarHelper.php b/src/CalendarHelper.php
index 7cb199a..747bda8 100644
--- a/src/CalendarHelper.php
+++ b/src/CalendarHelper.php
@@ -20,7 +20,7 @@ class CalendarHelper extends DateHelper {
   /**
    * Returns an array for day.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *  The view.
    *
    * @return array
@@ -53,7 +53,7 @@ class CalendarHelper extends DateHelper {
   /**
    * Returns an array for week.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *  The view.
    *
    * @return array
@@ -223,7 +223,7 @@ class CalendarHelper extends DateHelper {
   /**
    * Helper function to find the calendar date argument handlers for a view.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *  The view.
    *
    * @return array|false
@@ -360,7 +360,7 @@ class CalendarHelper extends DateHelper {
    * Get views that (may) act as Calendar Display.
    * Used to select views with other granularity to link to.
    *
-   * @param \Drupal\views\ViewExecutable|NULL $view
+   * @param ViewExecutable|NULL $view
    *  The view.
    *
    * @return array
diff --git a/src/Plugin/views/area/CalendarHeader.php b/src/Plugin/views/area/CalendarHeader.php
index 3bb3e28..4bdbe77 100755
--- a/src/Plugin/views/area/CalendarHeader.php
+++ b/src/Plugin/views/area/CalendarHeader.php
@@ -52,7 +52,7 @@ class CalendarHeader extends TokenizeAreaPluginBase implements ContainerFactoryP
 
   /**
    * Create function for Date query
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The service container.
    * @param array $configuration
    *   The configuration.
@@ -61,7 +61,6 @@ class CalendarHeader extends TokenizeAreaPluginBase implements ContainerFactoryP
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
    * @return static
-   *
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
diff --git a/src/Plugin/views/argument/CalendarDayDate.php b/src/Plugin/views/argument/CalendarDayDate.php
index 81d265d..84e3462 100755
--- a/src/Plugin/views/argument/CalendarDayDate.php
+++ b/src/Plugin/views/argument/CalendarDayDate.php
@@ -26,7 +26,7 @@ class CalendarDayDate extends Date {
   /**
    * Inject CalendarHelper class.
    *
-   * @var \Drupal\Calendar\CalendarHelper
+   * @var CalendarHelper
    */
   protected $calendarHelper;
 
@@ -39,11 +39,11 @@ class CalendarDayDate extends Date {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter
-   * @param \Drupal\Calendar\CalendarHelper $calendarHelper
+   * @param CalendarHelper $calendarHelper
    *   Calendar helper service.
    */
   public function __construct(
@@ -62,7 +62,7 @@ class CalendarDayDate extends Date {
 
   /**
    * Create function for Date query
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The service container.
    * @param array $configuration
    *   The configuration.
@@ -75,7 +75,6 @@ class CalendarDayDate extends Date {
    * @param DateFormatterInterface $date_formatter
    *   The plugin implementation definition.
    * @return static
-   *
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
diff --git a/src/Plugin/views/argument/CalendarYearMonthDate.php b/src/Plugin/views/argument/CalendarYearMonthDate.php
index de334a8..50acd49 100755
--- a/src/Plugin/views/argument/CalendarYearMonthDate.php
+++ b/src/Plugin/views/argument/CalendarYearMonthDate.php
@@ -41,9 +41,9 @@ class CalendarYearMonthDate extends Date implements ContainerFactoryPluginInterf
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter
    * @param \Drupal\Calendar\CalendarHelper $calendarHelper
    *   Calendar helper service.
@@ -63,22 +63,21 @@ class CalendarYearMonthDate extends Date implements ContainerFactoryPluginInterf
   }
 
   /**
-  * Create function for Date query
-  * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
-  *   The service container.
-  * @param array $configuration
-  *   The configuration.
-  * @param string $plugin_id
-  *   The plugin.
-  * @param mixed $plugin_definition
-  *   The plugin implementation definition.
-  * @param RouteMatchInterface $route_match
-  *   The plugin.
-  * @param DateFormatterInterface $date_formatter
-  *   The plugin implementation definition.
-  * @return static
-  *
-  */
+   * Create function for Date query
+   * @param ContainerInterface $container
+   *   The service container.
+   * @param array $configuration
+   *   The configuration.
+   * @param string $plugin_id
+   *   The plugin.
+   * @param mixed $plugin_definition
+   *   The plugin implementation definition.
+   * @param RouteMatchInterface $route_match
+   *   The plugin.
+   * @param DateFormatterInterface $date_formatter
+   *   The plugin implementation definition.
+   * @return static
+   */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
       $configuration,
diff --git a/src/Plugin/views/argument/CalendarYearWeekDate.php b/src/Plugin/views/argument/CalendarYearWeekDate.php
index 5bbf103..ca91e69 100755
--- a/src/Plugin/views/argument/CalendarYearWeekDate.php
+++ b/src/Plugin/views/argument/CalendarYearWeekDate.php
@@ -38,9 +38,9 @@ class CalendarYearWeekDate extends Date {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter
    * @param \Drupal\Calendar\CalendarHelper $calendarHelper
    *   Calendar helper service.
@@ -61,7 +61,7 @@ class CalendarYearWeekDate extends Date {
 
   /**
    * Create function for Date query
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The service container.
    * @param array $configuration
    *   The configuration.
@@ -74,7 +74,6 @@ class CalendarYearWeekDate extends Date {
    * @param DateFormatterInterface $date_formatter
    *   The plugin implementation definition.
    * @return static
-   *
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
diff --git a/src/Plugin/views/pager/CalendarPager.php b/src/Plugin/views/pager/CalendarPager.php
index 0f3a7e8..92026d1 100755
--- a/src/Plugin/views/pager/CalendarPager.php
+++ b/src/Plugin/views/pager/CalendarPager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\calendar\Plugin\views\pager;
 
+use Drupal\Calendar\CalendarStyleInfo;
+use Drupal\views\Plugin\views\argument\ArgumentPluginBase;
 use Drupal\calendar\CalendarHelper;
 use Drupal\calendar\Plugin\views\area\CalendarHeader;
 use Drupal\calendar\Plugin\views\argument\CalendarYearMonthDate;
@@ -43,7 +45,7 @@ class CalendarPager extends PagerPluginBase implements ContainerFactoryPluginInt
   /**
    * The style info for this calendar.
    *
-   * @var \Drupal\Calendar\CalendarStyleInfo
+   * @var CalendarStyleInfo
    *   The calendar style info object.
    */
   protected $styleInfo;
@@ -79,7 +81,7 @@ class CalendarPager extends PagerPluginBase implements ContainerFactoryPluginInt
 
   /**
    * Create function for Date query
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The service container.
    * @param array $configuration
    *   The configuration.
@@ -88,7 +90,6 @@ class CalendarPager extends PagerPluginBase implements ContainerFactoryPluginInt
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
    * @return static
-   *
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
@@ -163,7 +164,7 @@ class CalendarPager extends PagerPluginBase implements ContainerFactoryPluginInt
     $current_position = 0;
     $arg_vals = [];
     /**
-     * @var \Drupal\views\Plugin\views\argument\ArgumentPluginBase $handler
+     * @var ArgumentPluginBase $handler
      */
     foreach ($this->view->argument as $name => $argument) {
       if (!$argument instanceof Date) {
diff --git a/src/Plugin/views/style/Calendar.php b/src/Plugin/views/style/Calendar.php
index 839c0f9..e08cdac 100755
--- a/src/Plugin/views/style/Calendar.php
+++ b/src/Plugin/views/style/Calendar.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\calendar\Plugin\views\style;
 
+use Drupal\Calendar\CalendarHelper;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\calendar\CalendarStyleInfo;
 use Drupal\calendar\CalendarEvent;
 use Drupal\Core\Form\FormStateInterface;
@@ -50,7 +52,7 @@ class Calendar extends StylePluginBase implements ContainerFactoryPluginInterfac
   /**
    * Use CalendarHelper class.
    *
-   * @var \Drupal\Calendar\CalendarHelper
+   * @var CalendarHelper
    */
   protected $calendarHelper;
 
@@ -71,7 +73,7 @@ class Calendar extends StylePluginBase implements ContainerFactoryPluginInterfac
   /**
    * Define account of current logged in user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
@@ -99,11 +101,11 @@ class Calendar extends StylePluginBase implements ContainerFactoryPluginInterfac
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   Account for current logged in user as this defines user timezone.
    * @param \Drupal\Calendar\CalendarStyleInfo $styleInfo
    *   Calendar style info service.
-   * @param \Drupal\Calendar\CalendarHelper $calendarHelper
+   * @param CalendarHelper $calendarHelper
    *   Calendar helper service.
    */
   public function __construct(
@@ -121,26 +123,25 @@ class Calendar extends StylePluginBase implements ContainerFactoryPluginInterfac
   }
 
   /**
-   * Create function for Calendar object.
-   *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
-   *   The service container.
-   * @param array $configuration
-   *   The configuration.
-   * @param string $plugin_id
-   *   The plugin.
-   * @param mixed $plugin_definition
-   *   The plugin implementation definition.
-//   * @param \Drupal\Core\Session\AccountInterface $account
-//   *   The account interface.
-//   * @param \Drupal\Calendar\CalendarStyleInfo $styleInfo
-//   *   Calendar style info service.
-//   * @param \Drupal\Calendar\CalendarHelper $calendarHelper
-//   *   The CalendarHelper class.
-   *
-   * @return static
-   *
-   */
+  * Create function for Calendar object.
+  *
+   * @param ContainerInterface $container
+  *   The service container.
+  * @param array $configuration
+  *   The configuration.
+  * @param string $plugin_id
+  *   The plugin.
+  * @param mixed $plugin_definition
+  *   The plugin implementation definition.
+  //   * @param \Drupal\Core\Session\AccountInterface $account
+  //   *   The account interface.
+  //   * @param \Drupal\Calendar\CalendarStyleInfo $styleInfo
+  //   *   Calendar style info service.
+  //   * @param \Drupal\Calendar\CalendarHelper $calendarHelper
+  //   *   The CalendarHelper class.
+  *
+  * @return static
+  */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
       $configuration,
@@ -182,7 +183,7 @@ class Calendar extends StylePluginBase implements ContainerFactoryPluginInterfac
       $view_builder = \Drupal::entityTypeManager()
         ->getViewBuilder($entity_type);
       $pre_render = $view_builder->view($entity, $view_mode);
-      return render($pre_render);
+      return \Drupal::service('renderer')->render($pre_render);
     }
     else {
       if ($this->options['multi_allday_title'] === "1") {
@@ -410,7 +411,7 @@ class Calendar extends StylePluginBase implements ContainerFactoryPluginInterfac
       $view_builder = \Drupal::entityTypeManager()
         ->getViewBuilder($entity_type);
       $pre_render = $view_builder->view($entity, $view_mode);
-      return render($pre_render);
+      return \Drupal::service('renderer')->render($pre_render);
     }
     else {
       if ($this->options['multi_allday_title'] === "1") {
