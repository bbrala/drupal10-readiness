diff --git a/modules/stripe_webhooks_example/src/EventSubscriber/StripeWebhookSubscriptionSubscriber.php b/modules/stripe_webhooks_example/src/EventSubscriber/StripeWebhookSubscriptionSubscriber.php
index 03f40d7..cda6a7b 100644
--- a/modules/stripe_webhooks_example/src/EventSubscriber/StripeWebhookSubscriptionSubscriber.php
+++ b/modules/stripe_webhooks_example/src/EventSubscriber/StripeWebhookSubscriptionSubscriber.php
@@ -17,14 +17,14 @@ class StripeWebhookSubscriptionSubscriber implements EventSubscriberInterface {
   /**
    * Stripe Webhooks logging channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $logger;
 
   /**
    * The mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
@@ -36,7 +36,7 @@ class StripeWebhookSubscriptionSubscriber implements EventSubscriberInterface {
   /**
    * Notify user about the new subscription.
    *
-   * @param \Drupal\stripe_webhooks\Event\SubscriptionEvent $event
+   * @param SubscriptionEvent $event
    */
   public function notifyNewSubscription(SubscriptionEvent $event) {
     try {
diff --git a/src/Controller/StripeWebhooksEndPoint.php b/src/Controller/StripeWebhooksEndPoint.php
index 493b8f4..421b8ae 100644
--- a/src/Controller/StripeWebhooksEndPoint.php
+++ b/src/Controller/StripeWebhooksEndPoint.php
@@ -46,32 +46,32 @@ class StripeWebhooksEndPoint extends ControllerBase implements ContainerInjectio
   /**
    * The event_dispatcher object.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Stripe Webhooks logging channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The settings object.
    *
-   * @var \Drupal\Core\Site\Settings
+   * @var Settings
    */
   private $settings;
 
   /**
    * StripeWebhooksEndPoint constructor.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger_channel
+   * @param LoggerChannelInterface $logger_channel
    *   Stripe Webhooks logging channel.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    * The settings object.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    */
   public function __construct(LoggerChannelInterface $logger_channel, Settings $settings, EventDispatcherInterface $event_dispatcher) {
     $this->logger = $logger_channel;
@@ -93,10 +93,10 @@ class StripeWebhooksEndPoint extends ControllerBase implements ContainerInjectio
   /**
    * Captures webhook notification.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The response object.
    */
   public function captureNotification(Request $request) {
@@ -201,7 +201,7 @@ class StripeWebhooksEndPoint extends ControllerBase implements ContainerInjectio
       }
 
       $this->logger->debug('Received event ID: @id of type: @type.', ['@id' => $notification->id, '@type' => $notification->type]);
-      $this->eventDispatcher->dispatch('stripe.webhooks.' . $notification->type, $event);
+      $this->eventDispatcher->dispatch($event, 'stripe.webhooks.' . $notification->type);
     }
     catch (\Exception $e) {
       watchdog_exception('stripe_webhooks', $e);
diff --git a/src/Event/AccountEvent.php b/src/Event/AccountEvent.php
index 0ec6442..92b6cd0 100644
--- a/src/Event/AccountEvent.php
+++ b/src/Event/AccountEvent.php
@@ -3,14 +3,13 @@
 namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the account event.
  *
  * @see https://stripe.com/docs/api#account_object
  */
-class AccountEvent extends Event {
+class AccountEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The account.
diff --git a/src/Event/BalanceEvent.php b/src/Event/BalanceEvent.php
index f29844d..40db388 100644
--- a/src/Event/BalanceEvent.php
+++ b/src/Event/BalanceEvent.php
@@ -3,14 +3,13 @@
 namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the balance event.
  *
  * @see https://stripe.com/docs/api#balance_object
  */
-class BalanceEvent extends Event {
+class BalanceEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The balance.
diff --git a/src/Event/BitcoinEvent.php b/src/Event/BitcoinEvent.php
index 9f8f5a1..ef056ba 100644
--- a/src/Event/BitcoinEvent.php
+++ b/src/Event/BitcoinEvent.php
@@ -3,14 +3,13 @@
 namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the bitcoin event.
  *
  * @see https://stripe.com/docs/api/php#bitcoin_receiver_object
  */
-class BitcoinEvent extends Event {
+class BitcoinEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The bitcoin.
diff --git a/src/Event/ChargeEvent.php b/src/Event/ChargeEvent.php
index bec883c..547a018 100644
--- a/src/Event/ChargeEvent.php
+++ b/src/Event/ChargeEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Balance;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the charge event.
  *
  * @see https://stripe.com/docs/api#charge_object
  */
-class ChargeEvent extends Event {
+class ChargeEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The charge.
@@ -33,7 +32,7 @@ class ChargeEvent extends Event {
   /**
    * Gets the balance of the charge.
    *
-   * @return \Stripe\Balance
+   * @return Balance
    *   Returns the balance of the charge.
    */
   public function getBalance() {
diff --git a/src/Event/CouponEvent.php b/src/Event/CouponEvent.php
index 0b04c27..c923a1c 100644
--- a/src/Event/CouponEvent.php
+++ b/src/Event/CouponEvent.php
@@ -3,14 +3,13 @@
 namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the coupon event.
  *
  * @see https://stripe.com/docs/api#coupon_object
  */
-class CouponEvent extends Event {
+class CouponEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The coupon.
diff --git a/src/Event/CustomerEvent.php b/src/Event/CustomerEvent.php
index 843375b..1edd087 100644
--- a/src/Event/CustomerEvent.php
+++ b/src/Event/CustomerEvent.php
@@ -3,14 +3,13 @@
 namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the customer event.
  *
  * @see https://stripe.com/docs/api#customer_object
  */
-class CustomerEvent extends Event {
+class CustomerEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The customer.
diff --git a/src/Event/CustomerSourceEvent.php b/src/Event/CustomerSourceEvent.php
index fddfff1..7339549 100644
--- a/src/Event/CustomerSourceEvent.php
+++ b/src/Event/CustomerSourceEvent.php
@@ -3,14 +3,13 @@
 namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the source event.
  *
  * @see https://stripe.com/docs/api#source_object
  */
-class CustomerSourceEvent extends Event {
+class CustomerSourceEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The customer source.
diff --git a/src/Event/DiscountEvent.php b/src/Event/DiscountEvent.php
index d827d45..6e74425 100644
--- a/src/Event/DiscountEvent.php
+++ b/src/Event/DiscountEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the discount event.
  *
  * @see https://stripe.com/docs/api#discount_object
  */
-class DiscountEvent extends Event {
+class DiscountEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The discount.
@@ -33,7 +32,7 @@ class DiscountEvent extends Event {
   /**
    * Gets the owner of the applied coupon.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the applied coupon.
    */
   public function getCustomer() {
diff --git a/src/Event/DisputeEvent.php b/src/Event/DisputeEvent.php
index f3ba959..a64d853 100644
--- a/src/Event/DisputeEvent.php
+++ b/src/Event/DisputeEvent.php
@@ -5,14 +5,13 @@ namespace Drupal\stripe_webhooks\Event;
 use Stripe\Balance;
 use Stripe\Charge;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the dispute event.
  *
  * @see https://stripe.com/docs/api#dispute_object
  */
-class DisputeEvent extends Event {
+class DisputeEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The dispute.
@@ -34,7 +33,7 @@ class DisputeEvent extends Event {
   /**
    * Gets the balance of the dispute.
    *
-   * @return \Stripe\Balance
+   * @return Balance
    *   Returns the balance of the dispute.
    */
   public function getBalance() {
@@ -44,7 +43,7 @@ class DisputeEvent extends Event {
   /**
    * Gets the charge of the dispute.
    *
-   * @return \Stripe\Charge
+   * @return Charge
    *   Returns the charge of the dispute.
    */
   public function getCharge() {
diff --git a/src/Event/ExternalAccountEvent.php b/src/Event/ExternalAccountEvent.php
index 0729adf..853138b 100644
--- a/src/Event/ExternalAccountEvent.php
+++ b/src/Event/ExternalAccountEvent.php
@@ -4,7 +4,6 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Account;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the external account event.
@@ -12,7 +11,7 @@ use Symfony\Component\EventDispatcher\Event;
  * @see https://stripe.com/docs/api#account_card_object
  * @see https://stripe.com/docs/api#account_bank_account_object
  */
-class ExternalAccountEvent extends Event {
+class ExternalAccountEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The external account.
@@ -34,7 +33,7 @@ class ExternalAccountEvent extends Event {
   /**
    * Gets the account of the external account.
    *
-   * @return \Stripe\Account
+   * @return Account
    *   Returns the account of the external account.
    */
   public function getAccount() {
diff --git a/src/Event/InvoiceEvent.php b/src/Event/InvoiceEvent.php
index 627d6bd..5b8910b 100644
--- a/src/Event/InvoiceEvent.php
+++ b/src/Event/InvoiceEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the invoice event.
  *
  * @see https://stripe.com/docs/api#invoice_object
  */
-class InvoiceEvent extends Event {
+class InvoiceEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The invoice.
@@ -33,7 +32,7 @@ class InvoiceEvent extends Event {
   /**
    * Gets the owner of the invoice.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the invoice.
    */
   public function getCustomer() {
diff --git a/src/Event/InvoiceItemEvent.php b/src/Event/InvoiceItemEvent.php
index 7d7e07b..6079e65 100644
--- a/src/Event/InvoiceItemEvent.php
+++ b/src/Event/InvoiceItemEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the invoice item event.
  *
  * @see https://stripe.com/docs/api#invoiceitem_object
  */
-class InvoiceItemEvent extends Event {
+class InvoiceItemEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The invoice item.
@@ -33,7 +32,7 @@ class InvoiceItemEvent extends Event {
   /**
    * Gets the owner of the invoice.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the invoice.
    */
   public function getCustomer() {
diff --git a/src/Event/OrderEvent.php b/src/Event/OrderEvent.php
index 21b78ef..854b00f 100644
--- a/src/Event/OrderEvent.php
+++ b/src/Event/OrderEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the order event.
  *
  * @see https://stripe.com/docs/api#order_object
  */
-class OrderEvent extends Event {
+class OrderEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The order.
@@ -33,7 +32,7 @@ class OrderEvent extends Event {
   /**
    * Gets the owner of the order.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the order.
    */
   public function getCustomer() {
diff --git a/src/Event/OrderReturnEvent.php b/src/Event/OrderReturnEvent.php
index cba8ecd..dfbce9a 100644
--- a/src/Event/OrderReturnEvent.php
+++ b/src/Event/OrderReturnEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the order return event.
  *
  * @see https://stripe.com/docs/api#order_return_object
  */
-class OrderReturnEvent extends Event {
+class OrderReturnEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The order return.
@@ -33,7 +32,7 @@ class OrderReturnEvent extends Event {
   /**
    * Gets the owner of the order return.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the order return.
    */
   public function getCustomer() {
diff --git a/src/Event/PayoutEvent.php b/src/Event/PayoutEvent.php
index b943032..0119ad2 100644
--- a/src/Event/PayoutEvent.php
+++ b/src/Event/PayoutEvent.php
@@ -2,16 +2,16 @@
 
 namespace Drupal\stripe_webhooks\Event;
 
+use Stripe\Customer;
 use Stripe\Balance;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the payout event.
  *
  * @see https://stripe.com/docs/api#payout_object
  */
-class PayoutEvent extends Event {
+class PayoutEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The payout.
@@ -33,7 +33,7 @@ class PayoutEvent extends Event {
   /**
    * Gets the payout balance.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the payout balance.
    */
   public function getBalance() {
diff --git a/src/Event/PlanEvent.php b/src/Event/PlanEvent.php
index 0b91484..1d97656 100644
--- a/src/Event/PlanEvent.php
+++ b/src/Event/PlanEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the plan event.
  *
  * @see https://stripe.com/docs/api#plan_object
  */
-class PlanEvent extends Event {
+class PlanEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The plan.
diff --git a/src/Event/ProductEvent.php b/src/Event/ProductEvent.php
index 039a312..cb770fa 100644
--- a/src/Event/ProductEvent.php
+++ b/src/Event/ProductEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the product event.
  *
  * @see https://stripe.com/docs/api#product_object
  */
-class ProductEvent extends Event {
+class ProductEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The product.
diff --git a/src/Event/RecipientEvent.php b/src/Event/RecipientEvent.php
index c6992ad..1e81047 100644
--- a/src/Event/RecipientEvent.php
+++ b/src/Event/RecipientEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the recipient event.
  *
  * @see https://stripe.com/docs/api#recipient_object
  */
-class RecipientEvent extends Event {
+class RecipientEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The recipient.
diff --git a/src/Event/RefundEvent.php b/src/Event/RefundEvent.php
index eda3309..c84dd5b 100644
--- a/src/Event/RefundEvent.php
+++ b/src/Event/RefundEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Charge;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the refund event.
  *
  * @see https://stripe.com/docs/api#refund_object
  */
-class RefundEvent extends Event {
+class RefundEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The refund.
@@ -33,7 +32,7 @@ class RefundEvent extends Event {
   /**
    * Gets the charge of the refund.
    *
-   * @return \Stripe\Charge
+   * @return Charge
    *   Returns the charge of the refund.
    */
   public function getCharge() {
diff --git a/src/Event/ReviewEvent.php b/src/Event/ReviewEvent.php
index 5d46036..e11822c 100644
--- a/src/Event/ReviewEvent.php
+++ b/src/Event/ReviewEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the review event.
  *
  * @see https://stripe.com/docs/api#review_object
  */
-class ReviewEvent extends Event {
+class ReviewEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The review.
diff --git a/src/Event/SkuEvent.php b/src/Event/SkuEvent.php
index cb44fc2..5267a69 100644
--- a/src/Event/SkuEvent.php
+++ b/src/Event/SkuEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the sku event.
  *
  * @see https://stripe.com/docs/api#sku_object
  */
-class SkuEvent extends Event {
+class SkuEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The sku.
diff --git a/src/Event/SourceEvent.php b/src/Event/SourceEvent.php
index 2fac70b..588ce2c 100644
--- a/src/Event/SourceEvent.php
+++ b/src/Event/SourceEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the source event.
  *
  * @see https://stripe.com/docs/api#card_object
  */
-class SourceEvent extends Event {
+class SourceEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The source.
@@ -33,7 +32,7 @@ class SourceEvent extends Event {
   /**
    * Gets the owner of the source.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the source.
    */
   public function getCustomer() {
diff --git a/src/Event/SourceTransactionEvent.php b/src/Event/SourceTransactionEvent.php
index 2b903ae..ba38a57 100644
--- a/src/Event/SourceTransactionEvent.php
+++ b/src/Event/SourceTransactionEvent.php
@@ -3,14 +3,13 @@
 namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the source event.
  *
  * @see https://stripe.com/docs/api#transaction_object
  */
-class SourceTransactionEvent extends Event {
+class SourceTransactionEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The source.
diff --git a/src/Event/SubscriptionEvent.php b/src/Event/SubscriptionEvent.php
index aa0e247..0eaf03a 100644
--- a/src/Event/SubscriptionEvent.php
+++ b/src/Event/SubscriptionEvent.php
@@ -4,14 +4,13 @@ namespace Drupal\stripe_webhooks\Event;
 
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the subscription event.
  *
  * @see https://stripe.com/docs/api/php#subscription_object
  */
-class SubscriptionEvent extends Event {
+class SubscriptionEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The subscription.
@@ -33,7 +32,7 @@ class SubscriptionEvent extends Event {
   /**
    * Gets the owner of the subscription.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the subscription.
    */
   public function getCustomer() {
diff --git a/src/Event/TransferEvent.php b/src/Event/TransferEvent.php
index 2db8496..b56407c 100644
--- a/src/Event/TransferEvent.php
+++ b/src/Event/TransferEvent.php
@@ -5,14 +5,13 @@ namespace Drupal\stripe_webhooks\Event;
 use Stripe\Balance;
 use Stripe\Customer;
 use Stripe\Event as StripeEvent;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the transfer event.
  *
  * @see https://stripe.com/docs/api#transfer_object
  */
-class TransferEvent extends Event {
+class TransferEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * The transfer.
@@ -34,7 +33,7 @@ class TransferEvent extends Event {
   /**
    * Gets the owner of the applied coupon.
    *
-   * @return \Stripe\Customer
+   * @return Customer
    *    Returns the owner of the applied coupon.
    */
   public function getCustomer() {
@@ -44,7 +43,7 @@ class TransferEvent extends Event {
   /**
    * Gets the balance of the transfer.
    *
-   * @return \Stripe\Balance
+   * @return Balance
    *   Returns the balance of the transfer.
    */
   public function getBalance() {
