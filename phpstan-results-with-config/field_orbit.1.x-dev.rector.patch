diff --git a/field_orbit.info.yml b/field_orbit.info.yml
index 4bb86fa..66938bb 100644
--- a/field_orbit.info.yml
+++ b/field_orbit.info.yml
@@ -1,8 +1,7 @@
 name: Field Orbit
 type: module
 description: 'Provides a Slideshow format for displaying Image or Media fields, rendered in the Zurb Foundation 5 Orbit plugin.'
-core: '8.x'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Fields
 dependencies:
   - drupal:image
diff --git a/src/Plugin/Field/FieldFormatter/OrbitFormatter.php b/src/Plugin/Field/FieldFormatter/OrbitFormatter.php
index 8f8c53b..aa67789 100644
--- a/src/Plugin/Field/FieldFormatter/OrbitFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/OrbitFormatter.php
@@ -279,7 +279,9 @@ class OrbitFormatter extends ImageFormatter {
             case 'content':
               $entity = $item->getEntity();
               if (!$entity->isNew()) {
-                $uri = $entity->urlInfo();
+                // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+                // Please confirm that `$entity` is an instance of `Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+                $uri = $entity->toUrl();
                 $uri = !empty($uri) ? $uri : '';
                 $item->set($path, $uri);
               }
@@ -288,7 +290,7 @@ class OrbitFormatter extends ImageFormatter {
             case 'file':
               foreach ($files as $file_delta => $file) {
                 $image_uri = $file->getFileUri();
-                $uri = Url::fromUri(file_create_url($image_uri));
+                $uri = \Drupal::service('file_url_generator')->generate($image_uri);
                 $uri = !empty($uri) ? $uri : '';
                 $items[$file_delta]->set($path, $uri);
               }
diff --git a/src/Plugin/Field/FieldFormatter/OrbitMediaFormatter.php b/src/Plugin/Field/FieldFormatter/OrbitMediaFormatter.php
index f117e6e..9e23605 100644
--- a/src/Plugin/Field/FieldFormatter/OrbitMediaFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/OrbitMediaFormatter.php
@@ -28,7 +28,7 @@ class OrbitMediaFormatter extends OrbitFormatter {
   /**
    * The typed data manager.
    *
-   * @var \Drupal\Core\TypedData\TypedDataManagerInterface
+   * @var TypedDataManagerInterface
    */
   protected $typedDataManager;
 
@@ -39,7 +39,7 @@ class OrbitMediaFormatter extends OrbitFormatter {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -49,9 +49,9 @@ class OrbitMediaFormatter extends OrbitFormatter {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The image style storage.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, $settings, $label, $view_mode, $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage, TypedDataManagerInterface $typed_data_manager) {
@@ -113,7 +113,7 @@ class OrbitMediaFormatter extends OrbitFormatter {
 
     // Initialize the list definition type to mock image field values.
     $list_definition = ListDataDefinition::create('field_item:image');
-    /** @var \Drupal\Core\Field\FieldItemListInterface $items_list */
+    /** @var FieldItemListInterface $items_list */
     $items_list = $this->typedDataManager->create($list_definition);
     foreach ($media_items as $key => $item) {
 
@@ -134,7 +134,7 @@ class OrbitMediaFormatter extends OrbitFormatter {
         '#item' => $image_item,
         '#item_attributes' => [],
         '#image_style' => $this->getSetting('image_style'),
-        '#url' => Url::fromUri(file_create_url($image_item->entity->get('uri')->value)),
+        '#url' => \Drupal::service('file_url_generator')->generate($image_item->entity->get('uri')->value),
       ];
     }
 
@@ -169,7 +169,9 @@ class OrbitMediaFormatter extends OrbitFormatter {
             case 'content':
               $entity = $items[$delta]->getEntity();
               if (!$entity->isNew()) {
-                $uri = $entity->urlInfo();
+                // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+                // Please confirm that `$entity` is an instance of `Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+                $uri = $entity->toUrl();
                 $uri = !empty($uri) ? $uri : '';
                 $item->set($path, $uri);
                 $images[$delta]['#url'] = $uri;
@@ -179,7 +181,7 @@ class OrbitMediaFormatter extends OrbitFormatter {
             case 'file':
               foreach ($files as $file_delta => $file) {
                 $image_uri = $file->getFileUri();
-                $uri = Url::fromUri(file_create_url($image_uri));
+                $uri = \Drupal::service('file_url_generator')->generate($image_uri);
                 $uri = !empty($uri) ? $uri : '';
                 $items_list[$file_delta]->set($path, $uri);
               }
