modules/contrib/cron_service/cron_service.module
modules/contrib/cron_service/modules/cron_service_ui/src/Controller/ServiceListController.php
modules/contrib/cron_service/modules/cron_service_ui/src/Form/ForceServiceForm.php
modules/contrib/cron_service/modules/cron_service_ui/src/ServiceListBuilder.php
modules/contrib/cron_service/modules/cron_service_ui/src/ServiceListBuilderInterface.php
modules/contrib/cron_service/modules/cron_service_ui/tests/modules/cron_service_testing/src/Scheduled.php
modules/contrib/cron_service/modules/cron_service_ui/tests/modules/cron_service_testing/src/Simple.php
modules/contrib/cron_service/modules/cron_service_ui/tests/modules/cron_service_testing/src/TimeControlling.php
modules/contrib/cron_service/modules/cron_service_ui/tests/src/Functional/ServiceListBuilderTest.php
modules/contrib/cron_service/src/CronServiceInterface.php
modules/contrib/cron_service/src/CronServiceManager.php
modules/contrib/cron_service/src/CronServiceManagerInterface.php
modules/contrib/cron_service/src/ScheduledCronServiceInterface.php
modules/contrib/cron_service/src/TimeControllingCronServiceInterface.php
modules/contrib/cron_service/tests/src/Kernel/CronServiceManagerTest.php
modules/contrib/cron_service/tests/src/Traits/QueueMockTrait.php
modules/contrib/cron_service/tests/src/Unit/CronServiceManagerTest.php
modules/contrib/cron_service/tests/src/Unit/StateMock.php

9 files with changes
====================

1) modules/contrib/cron_service/tests/src/Unit/CronServiceManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cron_service\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\State\StateInterface;
 use Drupal\cron_service\CronServiceInterface;
@@ @@
   /**
    * Service injection.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject
+   * @var MockObject
    */
   protected $stateSvc;

@@ @@
   /**
    * Service injection.
    *
-   * @var \PHPUnit\Framework\MockObject\MockObject
+   * @var MockObject
    */
   protected $logger;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->stateSvc = $this
-      ->getMockBuilder(StateInterface::class)
-      ->getMock();
-    $this->logger = $this
-      ->getMockBuilder(LoggerChannelInterface::class)
-      ->getMock();
+    $this->stateSvc = $this->createMock(StateInterface::class);
+    $this->logger = $this->createMock(LoggerChannelInterface::class);
   }

   /**
@@ @@
    * @param string $interface
    *   Service interface.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject|\Drupal\cron_service\CronServiceInterface
+   * @return MockObject|CronServiceInterface
    *   Mocked cron service.
    */
   protected function getService(string $interface = CronServiceInterface::class) {
-    return $this
-      ->getMockBuilder($interface)
-      ->getMock();
+    return $this->createMock($interface);
   }

   /**
@@ @@
    * @param array|null $methods
    *   Methods to mock.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject|\Drupal\cron_service\CronServiceManager
+   * @return MockObject|CronServiceManager
    *   Mocked test object.
    */
   protected function getTestObject(array $methods = NULL) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/cron_service/tests/src/Traits/QueueMockTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cron_service\Traits;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Queue\DatabaseQueue;
 use Drupal\Core\Queue\QueueFactory;

@@ @@
    * @param string $class
    *   Queue class/interface to mock.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    *   Mocked queue.
    */
   protected function mockQueue(string $name = '', bool $updateContainer = TRUE, $class = DatabaseQueue::class) {
-    $queue = $this->getMockBuilder($class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $queue = $this->createMock($class);

     $method = $this
       ->mockQueueFactory($updateContainer)
@@ @@
    * @param bool $updateContainer
    *   If true the 'queue' service will be replaced by the mocked queue factory.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    *   Mocked queue factory.
    */
   protected function mockQueueFactory(bool $updateContainer = TRUE) {
-    /** @var \PHPUnit\Framework\MockObject\MockObject $queueFactory */
-    $queueFactory = $this->getMockBuilder(QueueFactory::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    /** @var MockObject $queueFactory */
+    $queueFactory = $this->createMock(QueueFactory::class);
     if ($updateContainer) {
       $this->container->set('queue', $queueFactory);
     }
    ----------- end diff -----------

Applied rules:
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/cron_service/tests/src/Kernel/CronServiceManagerTest.php:24

    ---------- begin diff ----------
@@ @@
    * Test that hook_cron executes the service.
    */
   public function testCronExecutesTheService() {
-    $test_object = $this->getMockBuilder(CronServiceManagerInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $test_object = $this->createMock(CronServiceManagerInterface::class);
     $test_object->expects(self::atLeastOnce())
       ->method('execute');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/cron_service/src/CronServiceManagerInterface.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * Adds service to services list.
    *
-   * @param \Drupal\cron_service\CronServiceInterface $instance
+   * @param CronServiceInterface $instance
    *   Service to add.
    * @param string $id
    *   Service id.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/cron_service/src/CronServiceManager.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Injected state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * Injected logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $log;

@@ @@
   /**
    * Services list.
    *
-   * @var \Drupal\cron_service\CronServiceInterface[]
+   * @var CronServiceInterface[]
    */
   protected $handlers = [];

@@ @@
   /**
    * CronServiceManager constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   Drupal State.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   Drupal logger.
    */
   public function __construct(StateInterface $state, LoggerChannelInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/cron_service/modules/cron_service_ui/tests/src/Functional/ServiceListBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cron_service_ui\Functional;

+use Drupal\user\Entity\User;
+use Drupal\cron_service\CronServiceManager;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * Test user.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $webUser;

@@ @@
   /**
    * Test service.
    *
-   * @var \Drupal\cron_service\CronServiceManager
+   * @var CronServiceManager
    */
   protected $cronManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->webUser = $this->drupalCreateUser(
       [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/cron_service/modules/cron_service_ui/src/ServiceListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\cron_service_ui;

+use Drupal\cron_service\CronServiceManagerInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Drupal\cron_service\TimeControllingCronServiceInterface;
@@ @@
   /**
    * The cron service manager.
    *
-   * @var \Drupal\cron_service\CronServiceManagerInterface
+   * @var CronServiceManagerInterface
    */
   protected $cronServiceManager;

@@ @@
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Service container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;

@@ @@
   /**
    * A constructor.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Service container.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/cron_service/modules/cron_service_ui/src/Form/ForceServiceForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\cron_service_ui\Form;

+use Drupal\cron_service\CronServiceManagerInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The cron service manager.
    *
-   * @var \Drupal\cron_service\CronServiceManagerInterface
+   * @var CronServiceManagerInterface
    */
   protected $cronServiceManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/cron_service/modules/cron_service_ui/src/Controller/ServiceListController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\cron_service_ui\Controller;

+use Drupal\cron_service_ui\ServiceListBuilderInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;

@@ @@
   /**
    * The cron service list builder.
    *
-   * @var \Drupal\cron_service_ui\ServiceListBuilderInterface
+   * @var ServiceListBuilderInterface
    */
   protected $serviceListBuilder;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

