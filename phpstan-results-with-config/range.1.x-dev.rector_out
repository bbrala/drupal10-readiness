modules/contrib/range/range.install
modules/contrib/range/range.module
modules/contrib/range/range.views.inc
modules/contrib/range/src/D8Compatibility/ViewsSqlQueryGetConnectionTrait.php
modules/contrib/range/src/Plugin/Field/FieldFormatter/RangeDecimalFormatter.php
modules/contrib/range/src/Plugin/Field/FieldFormatter/RangeDecimalSprintfFormatter.php
modules/contrib/range/src/Plugin/Field/FieldFormatter/RangeFormatterBase.php
modules/contrib/range/src/Plugin/Field/FieldFormatter/RangeIntegerFormatter.php
modules/contrib/range/src/Plugin/Field/FieldFormatter/RangeIntegerSprintfFormatter.php
modules/contrib/range/src/Plugin/Field/FieldFormatter/RangeUnformattedFormatter.php
modules/contrib/range/src/Plugin/Field/FieldType/RangeDecimalItem.php
modules/contrib/range/src/Plugin/Field/FieldType/RangeFloatItem.php
modules/contrib/range/src/Plugin/Field/FieldType/RangeIntegerItem.php
modules/contrib/range/src/Plugin/Field/FieldType/RangeItemBase.php
modules/contrib/range/src/Plugin/Field/FieldWidget/RangeWidget.php
modules/contrib/range/src/Plugin/Validation/Constraint/RangeBothValuesRequiredConstraint.php
modules/contrib/range/src/Plugin/Validation/Constraint/RangeBothValuesRequiredConstraintValidator.php
modules/contrib/range/src/Plugin/Validation/Constraint/RangeFromGreaterToConstraint.php
modules/contrib/range/src/Plugin/Validation/Constraint/RangeFromGreaterToConstraintValidator.php
modules/contrib/range/src/Plugin/migrate/field/d6/RangeField.php
modules/contrib/range/src/Plugin/migrate/field/d7/RangeField.php
modules/contrib/range/src/Plugin/migrate/process/d6/RangeField.php
modules/contrib/range/src/Plugin/migrate/process/d6/RangeFieldFormatterSettings.php
modules/contrib/range/src/Plugin/migrate/process/d6/RangeFieldInstanceDefaults.php
modules/contrib/range/src/Plugin/migrate/process/d6/RangeFieldInstanceSettings.php
modules/contrib/range/src/Plugin/migrate/process/d6/RangeFieldSettings.php
modules/contrib/range/src/Plugin/migrate/process/d7/RangeFieldInstanceSettings.php
modules/contrib/range/src/Plugin/migrate/process/d7/RangeFieldInstanceWidgetSettings.php
modules/contrib/range/src/Plugin/views/argument/Range.php
modules/contrib/range/src/Plugin/views/filter/Range.php
modules/contrib/range/src/RangeItemInterface.php
modules/contrib/range/tests/fixtures/drupal6.php
modules/contrib/range/tests/fixtures/drupal7.php
modules/contrib/range/tests/fixtures/update/drupal-8.range-8100.php
modules/contrib/range/tests/src/Functional/Formatter/RangeDecimalFormatterUiTest.php
modules/contrib/range/tests/src/Functional/Formatter/RangeDecimalSprintfFormatterUiTest.php
modules/contrib/range/tests/src/Functional/Formatter/RangeFormatterUiTestBase.php
modules/contrib/range/tests/src/Functional/Formatter/RangeIntegerFormatterUiTest.php
modules/contrib/range/tests/src/Functional/Formatter/RangeIntegerSprintfFormatterUiTest.php
modules/contrib/range/tests/src/Functional/Formatter/RangeUnformattedFormatterUiTest.php
modules/contrib/range/tests/src/Functional/RangeBrowserTestBase.php
modules/contrib/range/tests/src/Functional/RangeFieldUiTest.php
modules/contrib/range/tests/src/Functional/RangeFieldValidationTest.php
modules/contrib/range/tests/src/Functional/Update/RangeUpdatePathTest.php
modules/contrib/range/tests/src/Functional/Views/RangeViewsArgumentTest.php
modules/contrib/range/tests/src/Functional/Views/RangeViewsFilterTest.php
modules/contrib/range/tests/src/Functional/Views/RangeViewsTestBase.php
modules/contrib/range/tests/src/Functional/Widget/RangeWidgetUiTest.php
modules/contrib/range/tests/src/Kernel/Formatter/DecimalFormatterTest.php
modules/contrib/range/tests/src/Kernel/Formatter/DecimalSprintfFormatterTest.php
modules/contrib/range/tests/src/Kernel/Formatter/FormatterTestBase.php
modules/contrib/range/tests/src/Kernel/Formatter/IntegerFormatterTest.php
modules/contrib/range/tests/src/Kernel/Formatter/IntegerSprintfFormatterTest.php
modules/contrib/range/tests/src/Kernel/Formatter/UnformattedlFormatterTest.php
modules/contrib/range/tests/src/Kernel/Migrate/d6/MigrateRangeFieldTest.php
modules/contrib/range/tests/src/Kernel/Migrate/d7/MigrateRangeFieldTest.php
modules/contrib/range/tests/src/Kernel/Widget/WidgetTest.php
modules/contrib/range/tests/src/Traits/RangeTestTrait.php
modules/contrib/range/tests/src/Unit/Plugin/Validation/Constraint/RangeBothValuesRequiredConstraintValidatorTest.php
modules/contrib/range/tests/src/Unit/Plugin/Validation/Constraint/RangeFromGreaterToConstraintValidatorTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/field/d6/RangeFieldTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/field/d7/RangeFieldTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/process/d6/RangeFieldFormatterSettingsTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/process/d6/RangeFieldInstanceDefaultsTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/process/d6/RangeFieldInstanceSettingsTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/process/d6/RangeFieldSettingsTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/process/d6/RangeFieldTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/process/d7/RangeFieldInstanceSettingsTest.php
modules/contrib/range/tests/src/Unit/Plugin/migrate/process/d7/RangeFieldInstanceWidgetSettingsTest.php

22 files with changes
=====================

1) modules/contrib/range/tests/src/Unit/Plugin/migrate/field/d7/RangeFieldTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Unit\Plugin\migrate\field\d7;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\migrate\Plugin\MigrateSourceInterface;
 use Drupal\migrate\Plugin\Migration;
 use Drupal\migrate\Row;
@@ @@
   /**
    * Current migration row.
    *
-   * @var \Drupal\migrate\Row|\PHPUnit\Framework\MockObject\MockObject
+   * @var Row|MockObject
    */
   protected $row;

@@ @@
   /**
    * Migration source.
    *
-   * @var \Drupal\migrate\Plugin\MigrateSourceInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var MigrateSourceInterface|MockObject
    */
   protected $migrationSource;

@@ @@
   /**
    * Migration itself.
    *
-   * @var \Drupal\migrate\Plugin\Migration|\PHPUnit\Framework\MockObject\MockObject
+   * @var Migration|MockObject
    */
   protected $migration;

@@ @@
   /**
    * RangeField migration plugin.
    *
-   * @var \Drupal\range\Plugin\migrate\field\d7\RangeField
+   * @var RangeField
    */
   protected $plugin;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/range/tests/src/Unit/Plugin/migrate/field/d6/RangeFieldTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Unit\Plugin\migrate\field\d6;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\migrate\Plugin\MigrateSourceInterface;
 use Drupal\migrate\Plugin\Migration;
 use Drupal\migrate\Row;
@@ @@
   /**
    * Current migration row.
    *
-   * @var \Drupal\migrate\Row|\PHPUnit\Framework\MockObject\MockObject
+   * @var Row|MockObject
    */
   protected $row;

@@ @@
   /**
    * Migration source.
    *
-   * @var \Drupal\migrate\Plugin\MigrateSourceInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var MigrateSourceInterface|MockObject
    */
   protected $migrationSource;

@@ @@
   /**
    * Migration itself.
    *
-   * @var \Drupal\migrate\Plugin\Migration|\PHPUnit\Framework\MockObject\MockObject
+   * @var Migration|MockObject
    */
   protected $migration;

@@ @@
   /**
    * RangeField migration plugin.
    *
-   * @var \Drupal\range\Plugin\migrate\field\d6\RangeField
+   * @var RangeField
    */
   protected $plugin;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/range/tests/src/Unit/Plugin/Validation/Constraint/RangeFromGreaterToConstraintValidatorTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Tests the RangeFromGreaterToConstraintValidator::validate() method.
    *
-   * @param \Drupal\range\RangeItemInterface $value
+   * @param RangeItemInterface $value
    *   Range item.
    * @param bool $valid
    *   A boolean indicating if the combination is expected to be valid.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/range/tests/src/Unit/Plugin/Validation/Constraint/RangeBothValuesRequiredConstraintValidatorTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Tests the RangeBothValuesRequiredConstraintValidator::validate() method.
    *
-   * @param \Drupal\range\RangeItemInterface $value
+   * @param RangeItemInterface $value
    *   Range item.
    * @param bool $valid
    *   A boolean indicating if the combination is expected to be valid.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/range/tests/src/Traits/RangeTestTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Traits;

+use Drupal\Core\Field\FieldStorageDefinitionInterface;
+use Drupal\Core\Field\FieldConfigInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;

@@ @@
   /**
    * Field storage used for tests.
    *
-   * @var \Drupal\Core\Field\FieldStorageDefinitionInterface
+   * @var FieldStorageDefinitionInterface
    */
   protected $fieldStorage;

@@ @@
   /**
    * Field used for tests.
    *
-   * @var \Drupal\Core\Field\FieldConfigInterface
+   * @var FieldConfigInterface
    */
   protected $field;

@@ @@
   /**
    * Form display to test.
    *
-   * @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface
+   * @var EntityFormDisplayInterface
    */
   protected $formDisplay;

@@ @@
   /**
    * View display to test.
    *
-   * @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface
+   * @var EntityViewDisplayInterface
    */
   protected $viewDisplay;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/range/tests/src/Kernel/Widget/WidgetTest.php:110

    ---------- begin diff ----------
@@ @@
   /**
    * Renders a given entity form.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity object with attached fields to render.
    */
   protected function renderEntityForm(FieldableEntityInterface $entity) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/range/tests/src/Kernel/Migrate/d7/MigrateRangeFieldTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Kernel\Migrate\d7;

+use Drupal\Core\Field\FieldConfigInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
@@ @@
    * @dataProvider fieldMigrationDataProvider
    */
   public function testFieldMigration($id, $type, $settings) {
-    /** @var \Drupal\field\FieldStorageConfigInterface $field */
+    /** @var FieldStorageConfigInterface $field */
     $field = FieldStorageConfig::load($id);
     $this->assertInstanceOf(FieldStorageConfigInterface::class, $field);
     $this->assertSame($type, $field->getType());
@@ @@
    * @dataProvider fieldInstanceMigrationDataProvider
    */
   public function testFieldInstanceMigration($id, $default_value, $settings) {
-    /** @var \Drupal\Core\Field\FieldConfigInterface $field */
+    /** @var FieldConfigInterface $field */
     $field = FieldConfig::load($id);
     $this->assertSame($default_value, $field->getDefaultValueLiteral());
     $this->assertSame($settings, $field->getSettings());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/range/tests/src/Kernel/Migrate/d6/MigrateRangeFieldTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Kernel\Migrate\d6;

+use Drupal\Core\Field\FieldConfigInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
@@ @@
    * @dataProvider fieldMigrationDataProvider
    */
   public function testFieldMigration($id, $type, $settings) {
-    /** @var \Drupal\field\FieldStorageConfigInterface $field */
+    /** @var FieldStorageConfigInterface $field */
     $field = FieldStorageConfig::load($id);
     $this->assertInstanceOf(FieldStorageConfigInterface::class, $field);
     $this->assertSame($type, $field->getType());
@@ @@
    * @dataProvider fieldInstanceMigrationDataProvider
    */
   public function testFieldInstanceMigration($id, $default_value, $settings) {
-    /** @var \Drupal\Core\Field\FieldConfigInterface $field */
+    /** @var FieldConfigInterface $field */
     $field = FieldConfig::load($id);
     $this->assertSame($default_value, $field->getDefaultValueLiteral());
     $this->assertSame($settings, $field->getSettings());
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/range/tests/src/Kernel/Formatter/FormatterTestBase.php:55

    ---------- begin diff ----------
@@ @@
   /**
    * Entity, used for testing.
    *
-   * @var \Drupal\entity_test\Entity\EntityTest
+   * @var EntityTest
    */
   protected $entity;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/range/tests/src/Functional/Views/RangeViewsTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Functional\Views;

+use Drupal\node\NodeInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\node\Entity\NodeType;
@@ @@
   /**
    * Nodes to test.
    *
-   * @var \Drupal\node\NodeInterface[]
+   * @var NodeInterface[]
    */
   protected $nodes = [];
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/range/tests/src/Functional/RangeFieldValidationTest.php:78

    ---------- begin diff ----------
@@ @@

   /**
    * Tests range field validation.
+   * @doesNotPerformAssertions
    */
   public function testRangeValidation() {
     foreach (['range_integer', 'range_float', 'range_decimal'] as $field_type) {
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/range/tests/src/Functional/RangeFieldUiTest.php:271

    ---------- begin diff ----------
@@ @@

   /**
    * Tests adding range fields and their settings via field UI.
+   * @doesNotPerformAssertions
    */
   public function testRangeFieldsUi() {
     foreach (['range_integer', 'range_float', 'range_decimal'] as $field_type) {
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/range/tests/src/Functional/RangeBrowserTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Functional;

+use Drupal\user\UserInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   /**
    * A user that can edit content types.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/range/tests/src/Functional/Formatter/RangeFormatterUiTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\range\Functional\Formatter;

+use Drupal\Tests\WebAssert;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\range\Traits\RangeTestTrait;

@@ @@
   /**
    * WebAssert object.
    *
-   * @var \Drupal\Tests\WebAssert
+   * @var WebAssert
    */
   protected $session;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/range/src/RangeItemInterface.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Helper function. Returns Schema API column specification.
    *
-   * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $field_definition
+   * @param FieldStorageDefinitionInterface $field_definition
    *   The field definition.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


16) modules/contrib/range/src/Plugin/migrate/field/d7/RangeField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\range\Plugin\migrate\field\d7;

+use Drupal\migrate\Row;
 use Drupal\migrate_drupal\Plugin\migrate\field\FieldPluginBase;
 use Drupal\migrate\Plugin\MigrationInterface;

@@ @@
    * {@inheritdoc}
    */
   public function alterFieldInstanceMigration(MigrationInterface $migration) {
-    /** @var \Drupal\migrate\Row $row */
+    /** @var Row $row */
     $row = $migration->getSourcePlugin()->current();
     if ($this->isRangeField($row->getSourceProperty('type'))) {
       $process = [
@@ @@
    * {@inheritdoc}
    */
   public function alterFieldWidgetMigration(MigrationInterface $migration) {
-    /** @var \Drupal\migrate\Row $row */
+    /** @var Row $row */
     $row = $migration->getSourcePlugin()->current();
     if ($this->isRangeField($row->getSourceProperty('type'))) {
       $process = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/range/src/Plugin/migrate/field/d6/RangeField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\range\Plugin\migrate\field\d6;

+use Drupal\migrate\Row;
 use Drupal\migrate_drupal\Plugin\migrate\field\FieldPluginBase;
 use Drupal\migrate\Plugin\MigrationInterface;

@@ @@
    * {@inheritdoc}
    */
   public function alterFieldMigration(MigrationInterface $migration) {
-    /** @var \Drupal\migrate\Row $row */
+    /** @var Row $row */
     $row = $migration->getSourcePlugin()->current();
     if ($this->isRangeField($row->getSourceProperty('type'))) {
       $process_type = [];
@@ @@
    * {@inheritdoc}
    */
   public function alterFieldInstanceMigration(MigrationInterface $migration) {
-    /** @var \Drupal\migrate\Row $row */
+    /** @var Row $row */
     $row = $migration->getSourcePlugin()->current();
     if ($this->isRangeField($row->getSourceProperty('type'))) {
       $process_settings = [
@@ @@
    * {@inheritdoc}
    */
   public function alterFieldFormatterMigration(MigrationInterface $migration) {
-    /** @var \Drupal\migrate\Row $row */
+    /** @var Row $row */
     $row = $migration->getSourcePlugin()->current();
     if ($this->isRangeField($row->getSourceProperty('type'))) {
       $process_type = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/range/src/Plugin/Field/FieldType/RangeItemBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\range\Plugin\Field\FieldType;

+use Drupal\Core\TypedData\DataDefinitionInterface;
 use Drupal\Core\Field\FieldItemBase;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
    * @param string $type
    *   Range field data type. Either 'integer', 'float' or 'string'.
    *
-   * @return \Drupal\Core\TypedData\DataDefinitionInterface[]
+   * @return DataDefinitionInterface[]
    *   An array of property definitions of contained properties, keyed by
    *   property name.
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/range/src/Plugin/Field/FieldFormatter/RangeFormatterBase.php:155

    ---------- begin diff ----------
@@ @@
    *   4. If COMBINED is disabled and both FROM/TO are enabled, show prefix
    *      from FROM and suffix from TO.
    *
-   * @param \Drupal\range\RangeItemInterface $item
+   * @param RangeItemInterface $item
    *   Range field item.
    * @param string $value
    *   Field combined value.
@@ @@
   /**
    * Helper method. Returns the separate values renderable array.
    *
-   * @param \Drupal\range\RangeItemInterface $item
+   * @param RangeItemInterface $item
    *   Range field item.
    * @param string $from_value
    *   Field FROM value.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/range/src/D8Compatibility/ViewsSqlQueryGetConnectionTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\range\D8Compatibility;

+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Database;
 use Drupal\views\Plugin\views\query\Sql;

@@ @@
    * connection. It can also be to another database connection when the view is
    * to an external database or a replica database.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   The database connection to be used for the query.
    */
   protected function getDatabaseConnection(Sql $query) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


21) modules/contrib/range/range.views.inc:26

    ---------- begin diff ----------
@@ @@
  * This function returns misc field data, that is required by various Views
  * plugins. Data includes field label and field additional fields.
  *
- * @param \Drupal\field\FieldStorageConfigInterface $field_storage
+ * @param FieldStorageConfigInterface $field_storage
  *   The field storage config entity.
  *
  * @return array
@@ @@
  *
  * @param array $data
  *   Views field data.
- * @param \Drupal\field\FieldStorageConfigInterface $field_storage
+ * @param FieldStorageConfigInterface $field_storage
  *   The field storage config entity.
  */
 function range_field_views_data_filter(array &$data, FieldStorageConfigInterface $field_storage) {
@@ @@
  *
  * @param array $data
  *   Views data array.
- * @param \Drupal\field\FieldStorageConfigInterface $field_storage
+ * @param FieldStorageConfigInterface $field_storage
  *   The field storage config entity.
  */
 function range_field_views_data_argument(array &$data, FieldStorageConfigInterface $field_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


22) modules/contrib/range/range.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 /**
  * @file
  * Install, update and uninstall functions for the range module.
@@ @@
  * @see https://www.drupal.org/node/3142758
  */
 function range_update_8101(array &$sandbox) {
-  /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $view_display */
+  /** @var EntityViewDisplayInterface $view_display */
   foreach (EntityViewDisplay::loadMultiple() as $view_display) {
     $should_be_updated = FALSE;
     foreach ($view_display->getComponents() as $name => $component) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 22 files have been changed by Rector                                      

