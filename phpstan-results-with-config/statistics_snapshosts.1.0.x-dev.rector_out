modules/contrib/statistics_snapshosts/modules/statistics_snapshots_ui/src/Form/GenerateStatisticsForm.php
modules/contrib/statistics_snapshosts/src/Annotation/StatisticsSnapshotsCalculator.php
modules/contrib/statistics_snapshosts/src/Controller/StatisticsController.php
modules/contrib/statistics_snapshosts/src/Entity/StatisticsSnapshot.php
modules/contrib/statistics_snapshosts/src/Entity/StatisticsSnapshotInterface.php
modules/contrib/statistics_snapshosts/src/Entity/StatisticsSnapshotViewsData.php
modules/contrib/statistics_snapshosts/src/Event/SnapshotCreatedEvent.php
modules/contrib/statistics_snapshosts/src/Form/SettingsForm.php
modules/contrib/statistics_snapshosts/src/Plugin/QueueWorker/StatisticsRunPluginQueueWorker.php
modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculator/NodeStatsCalculator.php
modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculator/UserStatsCalculator.php
modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculatorBase.php
modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculatorInterface.php
modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculatorManager.php
modules/contrib/statistics_snapshosts/src/StatisticsSnapshotAccessControlHandler.php
modules/contrib/statistics_snapshosts/src/StatisticsSnapshotListBuilder.php
modules/contrib/statistics_snapshosts/statistics_snapshots.install
modules/contrib/statistics_snapshosts/statistics_snapshots.module

8 files with changes
====================

1) modules/contrib/statistics_snapshosts/src/StatisticsSnapshotAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\statistics_snapshots;

+use Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $entity */
-
+    /** @var StatisticsSnapshotInterface $entity */
     switch ($operation) {

       case 'view':
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculatorManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculatorInterface.php:28

    ---------- begin diff ----------
@@ @@
    *
    * This is a private function - all calculations should be initiated via runCalculation()
    *
-   * @param \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $snapshot
+   * @param StatisticsSnapshotInterface $snapshot
    *   Snapshot to save it to.
    * @param array $segment_data
    *   Data to process if we are doing a split/segmented calculation.
@@ @@
    *
    * By chunking the dataset. A bit like the Batch API.
    *
-   * @param \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $snapshot
+   * @param StatisticsSnapshotInterface $snapshot
    * @param array $dataset
    */
   public function splitIntoQueues(StatisticsSnapshotInterface $snapshot, array $dataset);
@@ @@
    *
    * Always do this instead of calculate to ensure fields etc.
    *
-   * @param \Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface $snapshot
+   * @param StatisticsSnapshotInterface $snapshot
    *   Snapshot to save it to.
    * @param null $segment_data
    *   Data to process if we are doing a split/segmented calculation.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/statistics_snapshosts/src/Plugin/StatisticsSnapshotsCalculatorBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\statistics_snapshots\Plugin;

+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\field\Entity\FieldConfig;
@@ @@
         ]);
         $field->save();

-        /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
+        /** @var EntityDisplayRepositoryInterface $display_repository */
         $display_repository = \Drupal::service('entity_display.repository');
         $display_repository->getViewDisplay('statistics_snapshot', 'statistics_snapshot')
           ->setComponent($fieldName, [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/statistics_snapshosts/src/Plugin/QueueWorker/StatisticsRunPluginQueueWorker.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/statistics_snapshosts/src/Event/SnapshotCreatedEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\statistics_snapshots\Event;

+use Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface;
 use Druapl\Component\EventDispatcher\Event;
 use Drupal\statistics_snapshots\Entity\StatisticsSnapshotInterface;
 use Drupal\user\UserInterface;
@@ @@
 /**
  * Event that is fired when a user logs in.
  */
-class SnapshotCreatedEvent extends EventDispatcherEvent {
+class SnapshotCreatedEvent extends \Symfony\Contracts\EventDispatcher\Event {

   const EVENT_NAME = 'statistics_snapshots_snapshot_created';

@@ @@
   /**
    * Constructs the object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of the user logged in.
    */
   public function __construct(StatisticsSnapshotInterface $snapshot) {
@@ @@
   }

   /**
-   * @return \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface
+   * @return StatisticsSnapshotsCalculatorInterface
    *   Snapshot entity.
    */
   public function getSnapshot() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/statistics_snapshosts/src/Entity/StatisticsSnapshotInterface.php:38

    ---------- begin diff ----------
@@ @@
    * to allow the plugins to have useful fieldnames (for DX),
    * but not exceed 32 characters for field name length.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Statistic full fieldname.
@@ @@
    * to allow the plugins to have useful fieldnames (for DX),
    * but not exceed 32 characters for field name length.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Statistic full fieldname.
@@ @@
   /**
    * Convert a friendly plugin fieldname to a hash for use as drupal fieldname.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Field name.
@@ @@
   /**
    * Get the value of a statistic.
    *
-   * @param \Drupal\statistics_snapshots\Plugin\StatisticsSnapshotsCalculatorInterface $plugin
+   * @param StatisticsSnapshotsCalculatorInterface $plugin
    *   Plugin instance.
    * @param string $fieldName
    *   Field name.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/statistics_snapshosts/src/Annotation/StatisticsSnapshotsCalculator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\statistics_snapshots\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 8 files have been changed by Rector                                       

