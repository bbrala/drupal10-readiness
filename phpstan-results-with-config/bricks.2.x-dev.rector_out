modules/contrib/bricks/bricks.module
modules/contrib/bricks/modules/bricks_default_blocks/bricks_default_blocks.install
modules/contrib/bricks/modules/bricks_default_paragraphs/bricks_default_paragraphs.install
modules/contrib/bricks/modules/bricks_dynamic/bricks_dynamic.module
modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldFormatter/BricksNestedDynamicFormatter.php
modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldType/BricksTreeDynamicItem.php
modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldWidget/BricksTreeDynamicInlineWidget.php
modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldWidget/BricksTreeDynamicWidget.php
modules/contrib/bricks/modules/bricks_inline/bricks_inline.module
modules/contrib/bricks/modules/bricks_inline/src/Plugin/Field/FieldWidget/BricksTreeInlineWidget.php
modules/contrib/bricks/modules/bricks_revisions/src/Plugin/Field/FieldFormatter/BricksRevisionsNestedFormatter.php
modules/contrib/bricks/modules/bricks_revisions/src/Plugin/Field/FieldType/BricksTreeRevisionedItem.php
modules/contrib/bricks/src/BricksFieldItemInterface.php
modules/contrib/bricks/src/BricksFieldTypeTrait.php
modules/contrib/bricks/src/BricksServiceProvider.php
modules/contrib/bricks/src/EventSubscriber/ReplicateFieldSubscriber.php
modules/contrib/bricks/src/Plugin/EntityUsage/Track/BricksField.php
modules/contrib/bricks/src/Plugin/Field/FieldFormatter/BricksNestedFormatter.php
modules/contrib/bricks/src/Plugin/Field/FieldType/BricksTreeItem.php
modules/contrib/bricks/src/Plugin/Field/FieldWidget/BricksTreeAutocompleteWidget.php
modules/contrib/bricks/tests/src/Functional/BricksTest.php
modules/contrib/bricks/tests/src/Kernel/BricksTest.php

6 files with changes
====================

1) modules/contrib/bricks/tests/src/Kernel/BricksTest.php:28

    ---------- begin diff ----------
@@ @@
     'bricks_test',
   ];

-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('system', 'sequences');
     $this->installSchema('node', 'node_access');
@@ @@

   /**
    * @param array $tree
-   * @param \Symfony\Component\DomCrawler\Crawler $bricks
+   * @param Crawler $bricks
    * @return int
    */
   protected function recurseBricks(array $tree, Crawler $bricks): int {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bricks/tests/src/Functional/BricksTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\bricks\Functional;

+use Drupal\taxonomy\VocabularyInterface;
 use Drupal\node\Entity\Node;
 use Drupal\paragraphs\Entity\Paragraph;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   public static $modules = ['field_ui', 'block', 'node', 'taxonomy', 'bricks'];

   /**
-   * @var \Drupal\taxonomy\VocabularyInterface
+   * @var VocabularyInterface
    */
   protected $vocabulary;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->rootUser);

@@ @@
       'label' => 'Brick field',
       'field_name' => 'brick',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save and continue');
+    $this->submitForm($edit, 'Save and continue');
     $edit = [
       'cardinality' => -1,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save field settings');
+    $this->submitForm($edit, 'Save field settings');

     $edit = [
       'settings[handler_settings][auto_create]' => TRUE,
       'settings[handler_settings][target_bundles][' . $this->vocabulary->id() . ']' => TRUE,
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save settings');
+    $this->submitForm($edit, 'Save settings');
   }

   /**
@@ @@
     $edit = [];
     $edit['title[0][value]'] = 'Llamas are cool';
     $edit['field_brick[0][target_id]'] = 'Camelid';
-    $this->drupalPostForm("node/add/article", $edit, 'Save');
-    $this->assertText('Article Llamas are cool has been created.');
+    $this->drupalGet("node/add/article");
+    $this->submitForm($edit, 'Save');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Article Llamas are cool has been created.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bricks/modules/bricks_inline/bricks_inline.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\FieldableEntityInterface;
 /**
  * @file
  * {@inheritdoc}
@@ @@
  * Implements hook_theme_registry_alter().
  */
 function bricks_inline_theme_registry_alter(&$theme_registry) {
-  $theme_registry['inline_entity_form_entity_table']['theme path'] = drupal_get_path('module', 'bricks_inline');
+  $theme_registry['inline_entity_form_entity_table']['theme path'] = \Drupal::service('extension.list.module')->getPath('bricks_inline');
   $theme_registry['inline_entity_form_entity_table']['function'] = 'bricks_inline_inline_entity_form_entity_table';
 }

@@ @@
   // Build an array of entity rows for the table.
   $rows = [];
   foreach (Element::children($form) as $key) {
-    /** @var \Drupal\Core\Entity\FieldableEntityInterface $entity */
+    /** @var FieldableEntityInterface $entity */
     $entity = $form[$key]['#entity'];
     $row_classes = ['ief-row-entity'];
     $cells = [];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


4) modules/contrib/bricks/modules/bricks_dynamic/bricks_dynamic.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\field\Entity\FieldConfig;
 use Drupal\Component\Utility\NestedArray;

 /**
@@ @@

   $labels = $reference_form['#ief_labels'];
   $ief_id = $reference_form['#ief_id'];
-  /** @var \Drupal\field\Entity\FieldConfig $instance */
+  /** @var FieldConfig $instance */
   $instance = $form_state->get(['inline_entity_form', $ief_id, 'instance']);
   $settings = $instance->getSettings();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) modules/contrib/bricks/modules/bricks_default_paragraphs/bricks_default_paragraphs.install:15

    ---------- begin diff ----------
@@ @@
   ]);
   $layout->save();

-  $data = file_get_contents(drupal_get_path('theme', 'bartik') . '/screenshot.png');
-  $file = file_save_data($data, 'public://bartik.png');
+  $data = file_get_contents(\Drupal::service('extension.list.theme')->getPath('bartik') . '/screenshot.png');
+  $file = \Drupal::service('file.repository')->writeData($data, 'public://bartik.png');
   $image = $entity_type_manager->getStorage('paragraph')->create([
     'type' => 'images',
     'field_images_demo' => [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileSaveDataRector
 * ArgumentRemoverRector


6) modules/contrib/bricks/modules/bricks_default_blocks/bricks_default_blocks.install:16

    ---------- begin diff ----------
@@ @@
   ]);
   $layout->save();

-  $data = file_get_contents(drupal_get_path('theme', 'bartik') . '/screenshot.png');
-  $file = file_save_data($data, 'public://bartik.png');
+  $data = file_get_contents(\Drupal::service('extension.list.theme')->getPath('bartik') . '/screenshot.png');
+  $file = \Drupal::service('file.repository')->writeData($data, 'public://bartik.png');
   $image = $entity_type_manager->getStorage('block_content')->create([
     'type' => 'image',
     'info' => 'Image',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileSaveDataRector
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/bricks/src/Plugin/EntityUsage/Track/BricksField.php"  
         file, due to:                                                          
         "Analyze error: "Class                                                 
         Drupal\entity_usage\Plugin\EntityUsage\Track\EntityReference not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/src/EventSubscriber/ReplicateFieldSubscriber.php"
         file, due to:                                                          
         "Analyze error: "Class                                                 
         Drupal\paragraphs\EventSubscriber\ReplicateFieldSubscriber not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/modules/bricks_revisions/src/Plugin/Field/FieldTy
         pe/BricksTreeRevisionedItem.php" file, due to:                         
         "Analyze error: "Class                                                 
         Drupal\entity_reference_revisions\Plugin\Field\FieldType\EntityReferenceR
         evisionsItem not found.". Include your files in                        
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/modules/bricks_revisions/src/Plugin/Field/FieldFo
         rmatter/BricksRevisionsNestedFormatter.php" file, due to:              
         "Analyze error: "Class                                                 
         Drupal\entity_reference_revisions\Plugin\Field\FieldFormatter\EntityRefer
         enceRevisionsEntityFormatter not found.". Include your files in        
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/modules/bricks_inline/src/Plugin/Field/FieldWidge
         t/BricksTreeInlineWidget.php" file, due to:                            
         "Analyze error: "Class                                                 
         Drupal\inline_entity_form\Plugin\Field\FieldWidget\InlineEntityFormComple
         x not found.". Include your files in                                   
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldWidg
         et/BricksTreeDynamicWidget.php" file, due to:                          
         "Analyze error: "Class                                                 
         Drupal\dynamic_entity_reference\Plugin\Field\FieldWidget\DynamicEntityRef
         erenceWidget not found.". Include your files in                        
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldWidg
         et/BricksTreeDynamicInlineWidget.php" file, due to:                    
         "Analyze error: "Class                                                 
         Drupal\inline_entity_form\Plugin\Field\FieldWidget\InlineEntityFormComple
         x not found.". Include your files in                                   
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldType
         /BricksTreeDynamicItem.php" file, due to:                              
         "Analyze error: "Class                                                 
         Drupal\dynamic_entity_reference\Plugin\Field\FieldType\DynamicEntityRefer
         enceItem not found.". Include your files in                            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/bricks/modules/bricks_dynamic/src/Plugin/Field/FieldForm
         atter/BricksNestedDynamicFormatter.php" file, due to:                  
         "Analyze error: "Class                                                 
         Drupal\dynamic_entity_reference\Plugin\Field\FieldFormatter\DynamicEntity
         ReferenceEntityFormatter not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

