diff --git a/modules/tealiumiq_context/src/EventSubscriber/AlterUdoProperties.php b/modules/tealiumiq_context/src/EventSubscriber/AlterUdoProperties.php
index f1fccea..d807d58 100644
--- a/modules/tealiumiq_context/src/EventSubscriber/AlterUdoProperties.php
+++ b/modules/tealiumiq_context/src/EventSubscriber/AlterUdoProperties.php
@@ -36,7 +36,7 @@ class AlterUdoProperties implements EventSubscriberInterface {
   /**
    * Alter the UDO.
    *
-   * @param \Drupal\tealiumiq\Event\AlterUdoPropertiesEvent $event
+   * @param AlterUdoPropertiesEvent $event
    *   Alter Udo Properties Event.
    */
   public function doAlterUdoProperties(AlterUdoPropertiesEvent $event) {
diff --git a/src/Annotation/TealiumiqGroup.php b/src/Annotation/TealiumiqGroup.php
index 5dc7392..9a65604 100644
--- a/src/Annotation/TealiumiqGroup.php
+++ b/src/Annotation/TealiumiqGroup.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tealiumiq\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class TealiumiqGroup extends Plugin {
   /**
    * The name of the group.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/TealiumiqTag.php b/src/Annotation/TealiumiqTag.php
index cdee41a..0407990 100644
--- a/src/Annotation/TealiumiqTag.php
+++ b/src/Annotation/TealiumiqTag.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tealiumiq\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class TealiumiqTag extends Plugin {
   /**
    * The display label/name of the tealiumiq tag plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +31,7 @@ class TealiumiqTag extends Plugin {
   /**
    * A longer explanation of what the field is for.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Event/AlterUdoPropertiesEvent.php b/src/Event/AlterUdoPropertiesEvent.php
index 9e618b4..a0580ec 100644
--- a/src/Event/AlterUdoPropertiesEvent.php
+++ b/src/Event/AlterUdoPropertiesEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\tealiumiq\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class SetUdoProperties.
diff --git a/src/Event/FinalAlterUdoPropertiesEvent.php b/src/Event/FinalAlterUdoPropertiesEvent.php
index 41f1da9..ce8f96f 100644
--- a/src/Event/FinalAlterUdoPropertiesEvent.php
+++ b/src/Event/FinalAlterUdoPropertiesEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\tealiumiq\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class SetUdoProperties.
diff --git a/src/EventSubscriber/AlterUdoProperties.php b/src/EventSubscriber/AlterUdoProperties.php
index d191358..d90a065 100644
--- a/src/EventSubscriber/AlterUdoProperties.php
+++ b/src/EventSubscriber/AlterUdoProperties.php
@@ -21,7 +21,7 @@ class AlterUdoProperties implements EventSubscriberInterface {
   /**
    * Alter the UDO.
    *
-   * @param \Drupal\tealiumiq\Event\AlterUdoPropertiesEvent $event
+   * @param AlterUdoPropertiesEvent $event
    *   Alter Udo Properties Event.
    */
   public function doAlterUdoProperties(AlterUdoPropertiesEvent $event) {
diff --git a/src/EventSubscriber/FinalAlterUdoProperties.php b/src/EventSubscriber/FinalAlterUdoProperties.php
index 4ac951e..26043d8 100644
--- a/src/EventSubscriber/FinalAlterUdoProperties.php
+++ b/src/EventSubscriber/FinalAlterUdoProperties.php
@@ -21,7 +21,7 @@ class FinalAlterUdoProperties implements EventSubscriberInterface {
   /**
    * Final Alter the UDO.
    *
-   * @param \Drupal\tealiumiq\Event\FinalAlterUdoPropertiesEvent $event
+   * @param FinalAlterUdoPropertiesEvent $event
    *   Final Alter Udo Properties Event.
    */
   public function doFinalUdoProperties(FinalAlterUdoPropertiesEvent $event) {
diff --git a/src/Form/Defaults.php b/src/Form/Defaults.php
index 64bfe87..2af247e 100644
--- a/src/Form/Defaults.php
+++ b/src/Form/Defaults.php
@@ -16,16 +16,16 @@ class Defaults extends ConfigFormBase {
   /**
    * Tealiumiq Service.
    *
-   * @var \Drupal\tealiumiq\Service\Tealiumiq
+   * @var Tealiumiq
    */
   protected $tealiumiq;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   ConfigFactoryInterface.
-   * @param \Drupal\tealiumiq\Service\Tealiumiq $tealiumiq
+   * @param Tealiumiq $tealiumiq
    *   Tealiumiq Service.
    */
   public function __construct(ConfigFactoryInterface $configFactory,
diff --git a/src/Plugin/Field/FieldWidget/TealiumiqWidget.php b/src/Plugin/Field/FieldWidget/TealiumiqWidget.php
index a4cada4..7120ec3 100644
--- a/src/Plugin/Field/FieldWidget/TealiumiqWidget.php
+++ b/src/Plugin/Field/FieldWidget/TealiumiqWidget.php
@@ -28,21 +28,21 @@ class TealiumiqWidget extends WidgetBase implements ContainerFactoryPluginInterf
   /**
    * Tealium iQ service.
    *
-   * @var \Drupal\tealiumiq\Service\Tealiumiq
+   * @var Tealiumiq
    */
   private $tealiumiq;
 
   /**
    * TagPluginManager.
    *
-   * @var \Drupal\tealiumiq\Service\TagPluginManager
+   * @var TagPluginManager
    */
   private $tagPluginManager;
 
   /**
    * ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
 
diff --git a/src/Plugin/tealium/Group/GroupBase.php b/src/Plugin/tealium/Group/GroupBase.php
index 1bca0e1..496be84 100644
--- a/src/Plugin/tealium/Group/GroupBase.php
+++ b/src/Plugin/tealium/Group/GroupBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tealiumiq\Plugin\tealium\Group;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Plugin\PluginBase;
 
 /**
@@ -19,7 +20,7 @@ abstract class GroupBase extends PluginBase {
   /**
    * The name of the group.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/tealium/Tag/TagBase.php b/src/Plugin/tealium/Tag/TagBase.php
index 46ac6f7..2884cc7 100644
--- a/src/Plugin/tealium/Tag/TagBase.php
+++ b/src/Plugin/tealium/Tag/TagBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\tealiumiq\Plugin\tealium\Tag;
 
+use Drupal\Core\Annotation\Translation;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -30,7 +32,7 @@ abstract class TagBase extends PluginBase {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -39,7 +41,7 @@ abstract class TagBase extends PluginBase {
   /**
    * A longer explanation of what the field is for.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -83,7 +85,7 @@ abstract class TagBase extends PluginBase {
   /**
    * Retrieves the currently active request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
@@ -358,7 +360,7 @@ abstract class TagBase extends PluginBase {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateTag(array &$element, FormStateInterface $form_state) {
diff --git a/src/Service/Helper.php b/src/Service/Helper.php
index 85365d1..e4862c9 100644
--- a/src/Service/Helper.php
+++ b/src/Service/Helper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tealiumiq\Service;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Component\Render\PlainTextOutput;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\ContentEntityType;
@@ -24,86 +25,86 @@ class Helper {
   /**
    * EntityTypeManagerInterface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
    * GroupPluginManager.
    *
-   * @var \Drupal\tealiumiq\Service\GroupPluginManager
+   * @var GroupPluginManager
    */
   private $groupPluginManager;
 
   /**
    * TagPluginManager.
    *
-   * @var \Drupal\tealiumiq\Service\TagPluginManager
+   * @var TagPluginManager
    */
   private $tagPluginManager;
 
   /**
    * LoggerChannelFactoryInterface.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $logger;
 
   /**
    * Request Stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   private $requestStack;
 
   /**
    * Language Manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   private $languageManager;
 
   /**
    * Token Service.
    *
-   * @var \Drupal\tealiumiq\Service\TealiumiqToken
+   * @var TealiumiqToken
    */
   private $tokenService;
 
   /**
    * RouteMatchInterface.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   private $routeMatch;
 
   /**
    * EntityTypeBundleInfoInterface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   private $entityTypeBundleInfo;
 
   /**
    * Helper constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity Type Manager Interface.
-   * @param \Drupal\tealiumiq\Service\GroupPluginManager $groupPluginManager
+   * @param GroupPluginManager $groupPluginManager
    *   Group Plugin Manager.
-   * @param \Drupal\tealiumiq\Service\TagPluginManager $tagPluginManager
+   * @param TagPluginManager $tagPluginManager
    *   Tealiumiq Tag Plugin Manager.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $channelFactory
+   * @param LoggerChannelFactoryInterface $channelFactory
    *   Logger Channel Factory Interface.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request Stack.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   Language Manager Interface.
-   * @param \Drupal\tealiumiq\Service\TealiumiqToken $token
+   * @param TealiumiqToken $token
    *   Tealiumiq Token.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   RouteMatchInterface.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entityTypeBundleInfo
+   * @param EntityTypeBundleInfoInterface $entityTypeBundleInfo
    *   EntityTypeBundleInfoInterface.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager,
@@ -146,7 +147,7 @@ class Helper {
   /**
    * Returns a list of the Tealium fields on an entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to examine.
    *
    * @return array
@@ -180,7 +181,7 @@ class Helper {
   /**
    * Returns a list of the meta tags with values from a field.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The ContentEntityInterface object.
    * @param string $field_name
    *   The name of the field to work on.
@@ -572,7 +573,7 @@ class Helper {
   /**
    * Returns the text label for the entity type specified.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   The entity type to process.
    *
    * @return string
@@ -582,7 +583,7 @@ class Helper {
     $label = $entityType->getLabel();
 
     if (is_a($label, 'Drupal\Core\StringTranslation\TranslatableMarkup')) {
-      /** @var \Drupal\Core\StringTranslation\TranslatableMarkup $label */
+      /** @var TranslatableMarkup $label */
       $label = $label->render();
     }
 
diff --git a/src/Service/Tealiumiq.php b/src/Service/Tealiumiq.php
index 51605e2..623c9ad 100644
--- a/src/Service/Tealiumiq.php
+++ b/src/Service/Tealiumiq.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tealiumiq\Service;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -22,95 +23,95 @@ class Tealiumiq {
   /**
    * Config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * UDO.
    *
-   * @var \Drupal\tealiumiq\Service\Udo
+   * @var Udo
    */
   public $udo;
 
   /**
    * Tag Plugin Manager.
    *
-   * @var \Drupal\tealiumiq\Service\TagPluginManager
+   * @var TagPluginManager
    */
   protected $tagPluginManager;
 
   /**
    * Token Service.
    *
-   * @var \Drupal\tealiumiq\Service\TealiumiqToken
+   * @var TealiumiqToken
    */
   private $tokenService;
 
   /**
    * Request Stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   private $requestStack;
 
   /**
    * Language Manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   private $languageManager;
 
   /**
    * Group Plugin Manager.
    *
-   * @var \Drupal\tealiumiq\Service\GroupPluginManager
+   * @var GroupPluginManager
    */
   private $groupPluginManager;
 
   /**
    * LoggerChannelFactoryInterface.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $logger;
 
   /**
    * Tealium Helper.
    *
-   * @var \Drupal\tealiumiq\Service\Helper
+   * @var Helper
    */
   public $helper;
 
   /**
    * EventDispatcherInterface.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   private $eventDispatcher;
 
   /**
    * Tealiumiq constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config Factory.
-   * @param \Drupal\tealiumiq\Service\Udo $udo
+   * @param Udo $udo
    *   UDO Service.
-   * @param \Drupal\tealiumiq\Service\TealiumiqToken $token
+   * @param TealiumiqToken $token
    *   Tealiumiq Token.
-   * @param \Drupal\tealiumiq\Service\GroupPluginManager $groupPluginManager
+   * @param GroupPluginManager $groupPluginManager
    *   Group Plugin Manager.
-   * @param \Drupal\tealiumiq\Service\TagPluginManager $tagPluginManager
+   * @param TagPluginManager $tagPluginManager
    *   Tealiumiq Tag Plugin Manager.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request Stack.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   Language Manager Interface.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $channelFactory
+   * @param LoggerChannelFactoryInterface $channelFactory
    *   Logger Channel Factory Interface.
-   * @param \Drupal\tealiumiq\Service\Helper $helper
+   * @param Helper $helper
    *   Tealium Helper.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   EventDispatcherInterface.
    */
   public function __construct(ConfigFactory $config,
@@ -274,7 +275,7 @@ class Tealiumiq {
   /**
    * Set all data values.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity.
    */
   public function setUdoPropertiesFromEntity(ContentEntityInterface $entity) {
@@ -288,7 +289,7 @@ class Tealiumiq {
    *
    * @param array $properties
    *   Tags array.
-   * @param \Drupal\Core\Entity\ContentEntityInterface|null $entity
+   * @param ContentEntityInterface|null $entity
    *   Entity.
    */
   public function setProperties(array $properties = [], ContentEntityInterface $entity = NULL) {
@@ -313,8 +314,8 @@ class Tealiumiq {
     );
 
     $event = $this->eventDispatcher->dispatch(
-      AlterUdoPropertiesEvent::UDO_ALTER_PROPERTIES,
-      $alterUDOPropertiesEvent
+      $alterUDOPropertiesEvent,
+      AlterUdoPropertiesEvent::UDO_ALTER_PROPERTIES
     );
 
     // Altered properties.
@@ -355,8 +356,8 @@ class Tealiumiq {
     );
 
     $finalEvent = $this->eventDispatcher->dispatch(
-      FinalAlterUdoPropertiesEvent::FINAL_UDO_ALTER_PROPERTIES,
-      $finalAlterUDOPropertiesEvent
+      $finalAlterUDOPropertiesEvent,
+      FinalAlterUdoPropertiesEvent::FINAL_UDO_ALTER_PROPERTIES
     );
 
     // Final Altered properties.
diff --git a/src/Service/TealiumiqToken.php b/src/Service/TealiumiqToken.php
index 0f985b4..15efe92 100644
--- a/src/Service/TealiumiqToken.php
+++ b/src/Service/TealiumiqToken.php
@@ -16,14 +16,14 @@ class TealiumiqToken {
   /**
    * Token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * Constructs a new TealiumiqToken object.
    *
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   Token service.
    */
   public function __construct(Token $token) {
@@ -39,7 +39,7 @@ class TealiumiqToken {
    *   Arguments for token->replace().
    * @param array $options
    *   Any additional options necessary.
-   * @param \Drupal\Core\Render\BubbleableMetadata|null $bubbleable_metadata
+   * @param BubbleableMetadata|null $bubbleable_metadata
    *   (optional) An object to which static::generate() and the hooks and
    *   functions that it invokes will add their required bubbleable metadata.
    *
