diff --git a/src/Annotation/EntityBuilder.php b/src/Annotation/EntityBuilder.php
index 0aebda4..44bd3e1 100755
--- a/src/Annotation/EntityBuilder.php
+++ b/src/Annotation/EntityBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_entity_builder\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class EntityBuilder extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -33,7 +34,7 @@ class EntityBuilder extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Event/EntityBuildEvent.php b/src/Event/EntityBuildEvent.php
index 5ccba22..020ee91 100755
--- a/src/Event/EntityBuildEvent.php
+++ b/src/Event/EntityBuildEvent.php
@@ -8,6 +8,7 @@
 
 namespace Drupal\webform_entity_builder\Event;
 
+use Psr\Log\LoggerInterface;
 use Drupal\Component\EventDispatcher\Event;
 use Drupal\Core\Logger\LoggerChannelTrait;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -110,7 +111,7 @@ class EntityBuildEvent extends Event implements EventDelayInterface, EntityBuild
   }
 
   /**
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    */
   protected static function slogger() {
     $bits = explode('\\', static::class);
@@ -118,7 +119,7 @@ class EntityBuildEvent extends Event implements EventDelayInterface, EntityBuild
   }
 
   /**
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    */
   protected function logger() {
     $bits = explode('\\', get_class($this));
diff --git a/src/Plugin/EntityBuilderBase.php b/src/Plugin/EntityBuilderBase.php
index 71284d0..a2b92e9 100755
--- a/src/Plugin/EntityBuilderBase.php
+++ b/src/Plugin/EntityBuilderBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\webform_entity_builder\Plugin;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Datetime\Time;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\EntityInterface;
@@ -73,8 +75,8 @@ abstract class EntityBuilderBase extends PluginBase implements EntityBuilderInte
    * @param string $plugin_id
    * @param array $plugin_definition
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(
     FileUsageInterface      $fileUsage,
@@ -101,8 +103,8 @@ abstract class EntityBuilderBase extends PluginBase implements EntityBuilderInte
    *
    * @return EntityBuilderBase
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
