diff --git a/src/Cache/MemoryCacheFactory.php b/src/Cache/MemoryCacheFactory.php
index c93adb7..f9a7a0a 100644
--- a/src/Cache/MemoryCacheFactory.php
+++ b/src/Cache/MemoryCacheFactory.php
@@ -15,7 +15,7 @@ class MemoryCacheFactory implements CacheFactoryInterface {
   /**
    * Instantiated memory cache bins.
    *
-   * @var \Drupal\Core\Cache\MemoryCache\MemoryCache[]
+   * @var MemoryCache[]
    */
   protected $bins = [];
 
diff --git a/src/CalculatedPermissions.php b/src/CalculatedPermissions.php
index 35cce54..2ac11e0 100644
--- a/src/CalculatedPermissions.php
+++ b/src/CalculatedPermissions.php
@@ -17,7 +17,7 @@ class CalculatedPermissions implements CalculatedPermissionsInterface {
   /**
    * Constructs a new CalculatedPermissions.
    *
-   * @param \Drupal\flexible_permissions\CalculatedPermissionsInterface $source
+   * @param CalculatedPermissionsInterface $source
    *   The calculated permission to create a value object from.
    */
   public function __construct(CalculatedPermissionsInterface $source) {
diff --git a/src/CalculatedPermissionsInterface.php b/src/CalculatedPermissionsInterface.php
index bdce148..b72b9c8 100644
--- a/src/CalculatedPermissionsInterface.php
+++ b/src/CalculatedPermissionsInterface.php
@@ -17,7 +17,7 @@ interface CalculatedPermissionsInterface extends CacheableDependencyInterface {
    * @param string|int $identifier
    *   The scope identifier to retrieve the item for.
    *
-   * @return \Drupal\flexible_permissions\CalculatedPermissionsItemInterface|false
+   * @return CalculatedPermissionsItemInterface|false
    *   The calculated permission item or FALSE if it could not be found.
    */
   public function getItem($scope, $identifier);
@@ -25,7 +25,7 @@ interface CalculatedPermissionsInterface extends CacheableDependencyInterface {
   /**
    * Retrieves all of the calculated permission items, regardless of scope.
    *
-   * @return \Drupal\flexible_permissions\CalculatedPermissionsItemInterface[]
+   * @return CalculatedPermissionsItemInterface[]
    *   A list of calculated permission items.
    */
   public function getItems();
@@ -44,7 +44,7 @@ interface CalculatedPermissionsInterface extends CacheableDependencyInterface {
    * @param string $scope
    *   The scope name to retrieve the items for.
    *
-   * @return \Drupal\flexible_permissions\CalculatedPermissionsItemInterface[]
+   * @return CalculatedPermissionsItemInterface[]
    *   A list of calculated permission items for the given scope.
    */
   public function getItemsByScope($scope);
diff --git a/src/ChainPermissionCalculator.php b/src/ChainPermissionCalculator.php
index 81a8077..f519bc0 100644
--- a/src/ChainPermissionCalculator.php
+++ b/src/ChainPermissionCalculator.php
@@ -16,48 +16,48 @@ class ChainPermissionCalculator implements ChainPermissionCalculatorInterface {
   /**
    * The calculators.
    *
-   * @var \Drupal\flexible_permissions\PermissionCalculatorInterface[]
+   * @var PermissionCalculatorInterface[]
    */
   protected $calculators = [];
 
   /**
    * The variation cache backend to use as a persistent cache.
    *
-   * @var \Drupal\variationcache\Cache\VariationCacheInterface
+   * @var VariationCacheInterface
    */
   protected $cache;
 
   /**
    * The variation cache backend to use as a static cache.
    *
-   * @var \Drupal\variationcache\Cache\VariationCacheInterface
+   * @var VariationCacheInterface
    */
   protected $static;
 
   /**
    * The regular cache backend to use as a static cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $regularStatic;
 
   /**
    * The account switcher service.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
   /**
    * Constructs a ChainPermissionCalculator object.
    *
-   * @param \Drupal\variationcache\Cache\VariationCacheInterface $cache
+   * @param VariationCacheInterface $cache
    *   The variation cache to use as a persistent cache.
-   * @param \Drupal\variationcache\Cache\VariationCacheInterface $static
+   * @param VariationCacheInterface $static
    *   The variation cache to use as a static cache.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $regular_static
+   * @param CacheBackendInterface $regular_static
    *   The regular cache backend to use as a static cache.
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $account_switcher
+   * @param AccountSwitcherInterface $account_switcher
    *   The account switcher service.
    */
   public function __construct(VariationCacheInterface $cache, VariationCacheInterface $static, CacheBackendInterface $regular_static, AccountSwitcherInterface $account_switcher) {
diff --git a/src/ChainPermissionCalculatorInterface.php b/src/ChainPermissionCalculatorInterface.php
index 17a2fc5..931c66b 100644
--- a/src/ChainPermissionCalculatorInterface.php
+++ b/src/ChainPermissionCalculatorInterface.php
@@ -15,7 +15,7 @@ interface ChainPermissionCalculatorInterface extends PermissionCalculatorInterfa
   /**
    * Adds a calculator.
    *
-   * @param \Drupal\flexible_permissions\PermissionCalculatorInterface $calculator
+   * @param PermissionCalculatorInterface $calculator
    *   The calculator.
    *
    * @return mixed
@@ -25,7 +25,7 @@ interface ChainPermissionCalculatorInterface extends PermissionCalculatorInterfa
   /**
    * Gets all added calculators.
    *
-   * @return \Drupal\flexible_permissions\PermissionCalculatorInterface[]
+   * @return PermissionCalculatorInterface[]
    *   The calculators.
    */
   public function getCalculators();
diff --git a/src/PermissionCalculatorInterface.php b/src/PermissionCalculatorInterface.php
index b87a0ba..dbe7db8 100644
--- a/src/PermissionCalculatorInterface.php
+++ b/src/PermissionCalculatorInterface.php
@@ -26,12 +26,12 @@ interface PermissionCalculatorInterface {
   /**
    * Calculates the permissions for an account within a given scope.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account for which to calculate the outsider permissions.
    * @param string $scope
    *   The scope to calculate the permissions for.
    *
-   * @return \Drupal\flexible_permissions\CalculatedPermissionsInterface
+   * @return CalculatedPermissionsInterface
    *   An object representing the permissions within the given scope.
    */
   public function calculatePermissions(AccountInterface $account, $scope);
diff --git a/src/PermissionChecker.php b/src/PermissionChecker.php
index 558f666..96fd0f6 100644
--- a/src/PermissionChecker.php
+++ b/src/PermissionChecker.php
@@ -12,14 +12,14 @@ class PermissionChecker implements PermissionCheckerInterface {
   /**
    * The permission calculator.
    *
-   * @var \Drupal\flexible_permissions\ChainPermissionCalculatorInterface
+   * @var ChainPermissionCalculatorInterface
    */
   protected $permissionCalculator;
 
   /**
    * Constructs a PermissionChecker object.
    *
-   * @param \Drupal\flexible_permissions\ChainPermissionCalculatorInterface $permission_calculator
+   * @param ChainPermissionCalculatorInterface $permission_calculator
    *   The permission calculator.
    */
   public function __construct(ChainPermissionCalculatorInterface $permission_calculator) {
diff --git a/src/PermissionCheckerInterface.php b/src/PermissionCheckerInterface.php
index b7fa187..04aaea9 100644
--- a/src/PermissionCheckerInterface.php
+++ b/src/PermissionCheckerInterface.php
@@ -18,7 +18,7 @@ interface PermissionCheckerInterface {
    *   The name of the scope to check in.
    * @param string|int $identifier
    *   The identifier in the provided scope.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account for which to check the permissions.
    *
    * @return bool
diff --git a/src/RefinableCalculatedPermissions.php b/src/RefinableCalculatedPermissions.php
index a841a6b..d12ed9f 100644
--- a/src/RefinableCalculatedPermissions.php
+++ b/src/RefinableCalculatedPermissions.php
@@ -63,12 +63,12 @@ class RefinableCalculatedPermissions implements RefinableCalculatedPermissionsIn
   /**
    * Merges two items of identical scope and identifier.
    *
-   * @param \Drupal\flexible_permissions\CalculatedPermissionsItemInterface $a
+   * @param CalculatedPermissionsItemInterface $a
    *   The first item to merge.
-   * @param \Drupal\flexible_permissions\CalculatedPermissionsItemInterface $b
+   * @param CalculatedPermissionsItemInterface $b
    *   The second item to merge.
    *
-   * @return \Drupal\flexible_permissions\CalculatedPermissionsItemInterface
+   * @return CalculatedPermissionsItemInterface
    *   A new item representing the merger of both items.
    *
    * @throws \LogicException
diff --git a/src/RefinableCalculatedPermissionsInterface.php b/src/RefinableCalculatedPermissionsInterface.php
index c47d9ea..b4ed0f9 100644
--- a/src/RefinableCalculatedPermissionsInterface.php
+++ b/src/RefinableCalculatedPermissionsInterface.php
@@ -12,7 +12,7 @@ interface RefinableCalculatedPermissionsInterface extends RefinableCacheableDepe
   /**
    * Adds a calculated permission item.
    *
-   * @param \Drupal\flexible_permissions\CalculatedPermissionsItemInterface $item
+   * @param CalculatedPermissionsItemInterface $item
    *   The calculated permission item.
    * @param bool $overwrite
    *   (optional) Whether to overwrite an item if there already is one for the
@@ -57,7 +57,7 @@ interface RefinableCalculatedPermissionsInterface extends RefinableCacheableDepe
    *
    * This merges (not replaces) all permissions and cacheable metadata.
    *
-   * @param \Drupal\flexible_permissions\CalculatedPermissionsInterface $other
+   * @param CalculatedPermissionsInterface $other
    *   The other calculated permissions object to merge into this one.
    *
    * @return $this
diff --git a/tests/src/Unit/CalculatedPermissionsTest.php b/tests/src/Unit/CalculatedPermissionsTest.php
index df003b8..d9ed9ba 100644
--- a/tests/src/Unit/CalculatedPermissionsTest.php
+++ b/tests/src/Unit/CalculatedPermissionsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\flexible_permissions\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\flexible_permissions\CalculatedPermissions;
 use Drupal\flexible_permissions\CalculatedPermissionsInterface;
 use Drupal\flexible_permissions\CalculatedPermissionsItem;
@@ -15,6 +16,7 @@ use Drupal\Tests\UnitTestCase;
  */
 class CalculatedPermissionsTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Tests that the object values were set in the constructor.
    *
diff --git a/tests/src/Unit/ChainPermissionCalculatorTest.php b/tests/src/Unit/ChainPermissionCalculatorTest.php
index be7dc59..0534243 100644
--- a/tests/src/Unit/ChainPermissionCalculatorTest.php
+++ b/tests/src/Unit/ChainPermissionCalculatorTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\flexible_permissions\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\flexible_permissions\ChainPermissionCalculatorInterface;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\Session\AccountInterface;
@@ -27,10 +29,11 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  */
 class ChainPermissionCalculatorTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $cache_context_manager = $this->prophesize(CacheContextsManager::class);
@@ -124,7 +127,7 @@ class ChainPermissionCalculatorTest extends UnitTestCase {
   /**
    * Sets up the chain calculator.
    *
-   * @return \Drupal\flexible_permissions\ChainPermissionCalculatorInterface
+   * @return ChainPermissionCalculatorInterface
    */
   protected function setUpChainCalculator() {
     $variation_cache = $this->prophesize(VariationCacheInterface::class);
diff --git a/tests/src/Unit/RefinableCalculatedPermissionsTest.php b/tests/src/Unit/RefinableCalculatedPermissionsTest.php
index 165d4d2..9c4dc38 100644
--- a/tests/src/Unit/RefinableCalculatedPermissionsTest.php
+++ b/tests/src/Unit/RefinableCalculatedPermissionsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\flexible_permissions\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\flexible_permissions\CalculatedPermissionsItem;
 use Drupal\flexible_permissions\RefinableCalculatedPermissions;
@@ -17,6 +18,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  */
 class RefinableCalculatedPermissionsTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Tests the addition of a calculated permissions item.
    *
