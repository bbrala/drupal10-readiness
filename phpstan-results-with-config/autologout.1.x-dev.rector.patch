diff --git a/autologout.info.yml b/autologout.info.yml
index 7980b41..b69ed09 100644
--- a/autologout.info.yml
+++ b/autologout.info.yml
@@ -1,6 +1,5 @@
 name: Automated Logout
 type: module
 description: 'Adds automated timed logout.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: autologout.set_admin
diff --git a/src/AutologoutManager.php b/src/AutologoutManager.php
index dc8b62a..e9d3304 100644
--- a/src/AutologoutManager.php
+++ b/src/AutologoutManager.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\autologout;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\user\UserDataInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,101 +30,101 @@ class AutologoutManager implements AutologoutManagerInterface {
   /**
    * The module manager service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The config object for 'autologout.settings'.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $autoLogoutSettings;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The session.
    *
-   * @var \Drupal\Core\Session\SessionManager
+   * @var SessionManager
    */
   protected $session;
 
   /**
    * Data of the user.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * The Time Service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $stringTranslation;
 
   /**
    * Constructs an AutologoutManager object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Data of the user.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   Logger service.
-   * @param \Drupal\Core\Session\SessionManager $sessionManager
+   * @param SessionManager $sessionManager
    *   The session.
-   * @param \Drupal\user\UserData $userData
+   * @param UserData $userData
    *   Data of the user.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The string translation service.
    */
   public function __construct(
diff --git a/src/AutologoutManagerInterface.php b/src/AutologoutManagerInterface.php
index 7b69f2f..9509560 100644
--- a/src/AutologoutManagerInterface.php
+++ b/src/AutologoutManagerInterface.php
@@ -76,7 +76,7 @@ interface AutologoutManagerInterface {
   /**
    * Helper to determine if a given user should be autologged out.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User entity.
    *
    * @return bool
diff --git a/src/Controller/AutologoutController.php b/src/Controller/AutologoutController.php
index 07368a3..2bd9c64 100644
--- a/src/Controller/AutologoutController.php
+++ b/src/Controller/AutologoutController.php
@@ -20,7 +20,7 @@ class AutologoutController extends ControllerBase {
   /**
    * The autologout manager service.
    *
-   * @var \Drupal\autologout\AutologoutManagerInterface
+   * @var AutologoutManagerInterface
    */
   protected $autoLogoutManager;
 
@@ -28,16 +28,16 @@ class AutologoutController extends ControllerBase {
   /**
    * The Time Service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs an AutologoutSubscriber object.
    *
-   * @param \Drupal\autologout\AutologoutManagerInterface $autologout
+   * @param AutologoutManagerInterface $autologout
    *   The autologout manager service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(
diff --git a/src/EventSubscriber/AutologoutSubscriber.php b/src/EventSubscriber/AutologoutSubscriber.php
index 0ee8c0c..8549f03 100644
--- a/src/EventSubscriber/AutologoutSubscriber.php
+++ b/src/EventSubscriber/AutologoutSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\autologout\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\autologout\AutologoutManagerInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\ConfigFactory;
@@ -9,7 +10,6 @@ use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Theme\ThemeManager;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -20,59 +20,59 @@ class AutologoutSubscriber implements EventSubscriberInterface {
   /**
    * The autologout manager service.
    *
-   * @var \Drupal\autologout\AutologoutManagerInterface
+   * @var AutologoutManagerInterface
    */
   protected $autoLogoutManager;
 
   /**
    * The user account service.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The Config service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $config;
 
   /**
    * The theme manager service.
    *
-   * @var \Drupal\Core\Theme\ThemeManager
+   * @var ThemeManager
    */
   protected $theme;
 
   /**
    * The Time Service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The request stacks service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Constructs an AutologoutSubscriber object.
    *
-   * @param \Drupal\autologout\AutologoutManagerInterface $autologout
+   * @param AutologoutManagerInterface $autologout
    *   The autologout manager service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account service.
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   The Config service.
-   * @param \Drupal\Core\Theme\ThemeManager $theme
+   * @param ThemeManager $theme
    *   The theme manager service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack service.
    */
   public function __construct(AutologoutManagerInterface $autologout, AccountInterface $account, ConfigFactory $config, ThemeManager $theme, TimeInterface $time, RequestStack $requestStack) {
@@ -87,10 +87,10 @@ class AutologoutSubscriber implements EventSubscriberInterface {
   /**
    * Check for autologout JS.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The request event.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     $autologout_manager = $this->autoLogoutManager;
 
     $uid = $this->currentUser->id();
diff --git a/src/Form/AutologoutBlockForm.php b/src/Form/AutologoutBlockForm.php
index 7015635..8a3c2a4 100644
--- a/src/Form/AutologoutBlockForm.php
+++ b/src/Form/AutologoutBlockForm.php
@@ -15,7 +15,7 @@ class AutologoutBlockForm extends FormBase {
   /**
    * The autologout manager service.
    *
-   * @var \Drupal\autologout\AutologoutManagerInterface
+   * @var AutologoutManagerInterface
    */
   protected $autoLogoutManager;
 
@@ -29,7 +29,7 @@ class AutologoutBlockForm extends FormBase {
   /**
    * Constructs an AutologoutBlockForm object.
    *
-   * @param \Drupal\autologout\AutologoutManagerInterface $autologout
+   * @param AutologoutManagerInterface $autologout
    *   The autologout manager service.
    */
   public function __construct(AutologoutManagerInterface $autologout) {
diff --git a/src/Form/AutologoutSettingsForm.php b/src/Form/AutologoutSettingsForm.php
index 32cc8b9..6e389ab 100644
--- a/src/Form/AutologoutSettingsForm.php
+++ b/src/Form/AutologoutSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\autologout\Form;
 
+use Drupal\user\UserDataInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,25 +19,25 @@ class AutologoutSettingsForm extends ConfigFormBase {
   /**
    * The module manager service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The user.data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * Constructs an AutologoutSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module manager service.
-   * @param \Drupal\user\UserData $user_data
+   * @param UserData $user_data
    *   The user.data service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, UserData $user_data) {
diff --git a/src/Plugin/Block/AutologoutWarningBlock.php b/src/Plugin/Block/AutologoutWarningBlock.php
index 1ef2026..fdbe190 100644
--- a/src/Plugin/Block/AutologoutWarningBlock.php
+++ b/src/Plugin/Block/AutologoutWarningBlock.php
@@ -25,35 +25,35 @@ class AutologoutWarningBlock extends BlockBase implements ContainerFactoryPlugin
   /**
    * The module manager service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The config object for 'autologout.settings'.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $autoLogoutSettings;
 
   /**
    * The AutologoutManager service.
    *
-   * @var \Drupal\autologout\AutologoutManager
+   * @var AutologoutManager
    */
   protected $manager;
 
   /**
    * The FormBuilder service.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $builder;
 
@@ -66,15 +66,15 @@ class AutologoutWarningBlock extends BlockBase implements ContainerFactoryPlugin
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module manager service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Config\Config $autologout_settings
+   * @param Config $autologout_settings
    *   The config object for 'autologout.settings'.
-   * @param \Drupal\autologout\AutologoutManager $manager
+   * @param AutologoutManager $manager
    *   The AutologoutManager service.
-   * @param \Drupal\Core\Form\FormBuilder $builder
+   * @param FormBuilder $builder
    *   The FormBuilder service.
    */
   public function __construct(
diff --git a/tests/src/Functional/AutologoutAjaxTest.php b/tests/src/Functional/AutologoutAjaxTest.php
index 2ebfc24..1df77e8 100644
--- a/tests/src/Functional/AutologoutAjaxTest.php
+++ b/tests/src/Functional/AutologoutAjaxTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\autologout\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Config\Config;
 use Drupal\Component\Serialization\Json;
 use Drupal\Tests\BrowserTestBase;
 
@@ -31,21 +33,21 @@ class AutologoutAjaxTest extends BrowserTestBase {
   /**
    * User with admin rights.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $privilegedUser;
 
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $moduleConfig;
 
   /**
    * SetUp() performs any pre-requisite tasks that need to happen.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
diff --git a/tests/src/Functional/AutologoutSessionCleanupOnLoginTest.php b/tests/src/Functional/AutologoutSessionCleanupOnLoginTest.php
index 98a88ec..f40f797 100644
--- a/tests/src/Functional/AutologoutSessionCleanupOnLoginTest.php
+++ b/tests/src/Functional/AutologoutSessionCleanupOnLoginTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\autologout\Functional;
 
+use Drupal\Core\Database\Connection;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Behat\Mink\Driver\GoutteDriver;
 use Behat\Mink\Session;
 use Drupal\Tests\BrowserTestBase;
@@ -33,28 +35,28 @@ class AutologoutSessionCleanupOnLoginTest extends BrowserTestBase {
   /**
    * User with admin rights.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $privilegedUser;
 
   /**
    * Database service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Performs any pre-requisite tasks that need to happen.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
@@ -139,7 +141,7 @@ class AutologoutSessionCleanupOnLoginTest extends BrowserTestBase {
   /**
    * Gets active sessions for given user.
    *
-   * @param \Drupal\user\Entity\User $account
+   * @param User $account
    *   User account object.
    *
    * @return array
diff --git a/tests/src/Functional/AutologoutTest.php b/tests/src/Functional/AutologoutTest.php
index 7993da8..66df485 100644
--- a/tests/src/Functional/AutologoutTest.php
+++ b/tests/src/Functional/AutologoutTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\autologout\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\user\UserDataInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
 
@@ -33,28 +36,28 @@ class AutologoutTest extends BrowserTestBase {
   /**
    * User with admin rights.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $privilegedUser;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Stores the user data service used by the test.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   public $userData;
 
   /**
    * Performs any pre-requisite tasks that need to happen.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
diff --git a/tests/src/FunctionalJavascript/CyclicAjaxTest.php b/tests/src/FunctionalJavascript/CyclicAjaxTest.php
index d67c612..a414e0e 100644
--- a/tests/src/FunctionalJavascript/CyclicAjaxTest.php
+++ b/tests/src/FunctionalJavascript/CyclicAjaxTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\autologout\FunctionalJavascript;
 
+use Drupal\Core\Config\ConfigFactory;
+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Url;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 
@@ -30,23 +33,23 @@ class CyclicAjaxTest extends WebDriverTestBase {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory|object|null
+   * @var ConfigFactory|object|null
    */
   protected $configFactory;
 
   /**
    * User to logout.
    *
-   * @var bool|\Drupal\user\Entity\User|false
+   * @var bool|User|false
    */
   protected $privilegedUser;
 
   /**
    * {@inheritDoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create and log in our privileged user.
     $this->privilegedUser = $this->drupalCreateUser([
diff --git a/tests/src/Kernel/SettingsFormTest.php b/tests/src/Kernel/SettingsFormTest.php
index 0a3c20f..f7a1b3e 100644
--- a/tests/src/Kernel/SettingsFormTest.php
+++ b/tests/src/Kernel/SettingsFormTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\autologout\Kernel;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\user\UserData;
 use Drupal\autologout\Form\AutologoutSettingsForm;
 use Drupal\Core\Form\FormState;
 use Drupal\KernelTests\KernelTestBase;
@@ -32,35 +35,35 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * User with admin rights.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $privilegedUser;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserData
+   * @var UserData
    */
   public $userData;
 
   /**
    * The autologout settings form.
    *
-   * @var \Drupal\autologout\Form\AutologoutSettingsForm
+   * @var AutologoutSettingsForm
    */
   protected $settingsForm;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('user');
     $this->installSchema('user', ['users_data']);
