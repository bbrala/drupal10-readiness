diff --git a/gopay.install b/gopay.install
index 592b43c..1a83d81 100644
--- a/gopay.install
+++ b/gopay.install
@@ -1,10 +1,10 @@
 <?php
 
+use Drupal\gopay\GoPayApiInterface;
 /**
  * @file
  * GoPay module install file.
  */
-
 /**
  * Implements hook_requirements().
  */
@@ -12,7 +12,7 @@ function gopay_requirements($phase) {
   $requirements = [];
 
   if ($phase == 'runtime') {
-    /** @var \Drupal\gopay\GoPayApiInterface $gopay */
+    /** @var GoPayApiInterface $gopay */
     $gopay = \Drupal::service('gopay.api');
     $results = $gopay->runTests();
 
diff --git a/gopay.module b/gopay.module
index a4ff379..4baba53 100644
--- a/gopay.module
+++ b/gopay.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ModuleExtensionList;
 /**
  * @file
  * Contains gopay.module.
@@ -27,7 +28,7 @@ function gopay_help($route_name, RouteMatchInterface $route_match) {
  * Implements hook_theme().
  */
 function gopay_theme($existing, $type, $theme, $path) {
-  /** @var \Drupal\Core\Extension\ModuleExtensionList $resolver */
+  /** @var ModuleExtensionList $resolver */
   $resolver = \Drupal::service('extension.list.module');
 
   return [
diff --git a/src/Controller/GoPayController.php b/src/Controller/GoPayController.php
index bfe97c9..adcfe49 100644
--- a/src/Controller/GoPayController.php
+++ b/src/Controller/GoPayController.php
@@ -20,23 +20,23 @@ class GoPayController extends ControllerBase {
   /**
    * GoPay Api.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;
 
   /**
    * GoPay Factory.
    *
-   * @var \Drupal\gopay\GoPayFactoryInterface
+   * @var GoPayFactoryInterface
    */
   protected $goPayFactory;
 
   /**
    * GopPayController constructor.
    *
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi Service.
-   * @param \Drupal\gopay\GoPayFactoryInterface $go_pay_factory
+   * @param GoPayFactoryInterface $go_pay_factory
    *   GoPayFactory Service.
    */
   public function __construct(GoPayApiInterface $go_pay_api, GoPayFactoryInterface $go_pay_factory) {
@@ -57,7 +57,7 @@ class GoPayController extends ControllerBase {
   /**
    * Default return callback page for GoPay.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request.
    *
    * @return array
diff --git a/src/Form/AdminSettingsForm.php b/src/Form/AdminSettingsForm.php
index 93a900a..0e17fd6 100644
--- a/src/Form/AdminSettingsForm.php
+++ b/src/Form/AdminSettingsForm.php
@@ -16,16 +16,16 @@ class AdminSettingsForm extends ConfigFormBase {
   /**
    * GoPayApi service.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory service.
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, GoPayApiInterface $go_pay_api) {
diff --git a/src/GoPayApi.php b/src/GoPayApi.php
index bcff394..f8c3b73 100644
--- a/src/GoPayApi.php
+++ b/src/GoPayApi.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gopay;
 
+use GoPay\Payments;
 use Drupal\gopay\Exception\GoPayException;
 use GoPay\Api;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -21,30 +22,30 @@ class GoPayApi implements GoPayApiInterface {
   /**
    * ConfigFactory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Logger Service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $logger;
 
   /**
    * Payments object created on GoPay init.
    *
-   * @var \GoPay\Payments
+   * @var Payments
    */
   protected $goPay;
 
   /**
    * GoPayApi constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory Service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger
+   * @param LoggerChannelFactory $logger
    *   Logger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LoggerChannelFactory $logger) {
diff --git a/src/GoPayApiInterface.php b/src/GoPayApiInterface.php
index ea2a6ed..85321e6 100644
--- a/src/GoPayApiInterface.php
+++ b/src/GoPayApiInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\gopay;
 
+use GoPay\Payments;
+use GoPay\Http\Response;
 use Drupal\gopay\Payment\PaymentInterface;
 
 /**
@@ -33,7 +35,7 @@ interface GoPayApiInterface {
    * @param array $user_services
    *   List additional of services.
    *
-   * @return \GoPay\Payments
+   * @return Payments
    *   Payments object.
    */
   public function config(array $user_config, array $user_services = []);
@@ -59,10 +61,10 @@ interface GoPayApiInterface {
   /**
    * Creates link for GoPay gateway.
    *
-   * @param \Drupal\gopay\Payment\PaymentInterface $payment
+   * @param PaymentInterface $payment
    *   Payment object.
    *
-   * @return \GoPay\Http\Response
+   * @return Response
    *   Response object corresponding to the created GoPay payment.
    */
   public function createGoPayPayment(PaymentInterface $payment);
@@ -70,7 +72,7 @@ interface GoPayApiInterface {
   /**
    * Creates link for GoPay gateway.
    *
-   * @param \Drupal\gopay\Payment\PaymentInterface $payment
+   * @param PaymentInterface $payment
    *   Payment object.
    * @param string $text
    *   Text of link.
@@ -83,7 +85,7 @@ interface GoPayApiInterface {
   /**
    * Creates inline form as GoPay gateway.
    *
-   * @param \Drupal\gopay\Payment\PaymentInterface $payment
+   * @param PaymentInterface $payment
    *   Payment object.
    * @param string $text
    *   Text of link.
@@ -99,7 +101,7 @@ interface GoPayApiInterface {
    * @param int $id
    *   Payment Id.
    *
-   * @return \GoPay\Http\Response
+   * @return Response
    *   Response object.
    */
   public function getPaymentStatus($id);
diff --git a/src/GoPayFactory.php b/src/GoPayFactory.php
index 48f0a80..08c642e 100644
--- a/src/GoPayFactory.php
+++ b/src/GoPayFactory.php
@@ -19,23 +19,23 @@ class GoPayFactory implements GoPayFactoryInterface {
   /**
    * ConfigFactory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * GoPayApi Service.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;
 
   /**
    * GoPayFactory constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory service.
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, GoPayApiInterface $go_pay_api) {
diff --git a/src/GoPayFactoryInterface.php b/src/GoPayFactoryInterface.php
index 88687a5..dcc9ff6 100644
--- a/src/GoPayFactoryInterface.php
+++ b/src/GoPayFactoryInterface.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\gopay;
 
+use Drupal\gopay\Contact\ContactInterface;
+use Drupal\gopay\Item\ItemInterface;
+use Drupal\gopay\Eet\Eet;
+use Drupal\gopay\Payment\PaymentInterface;
+use Drupal\gopay\Response\PaymentResponseInterface;
 /**
  * Interface GoPayFactoryInterface.
  *
@@ -12,7 +17,7 @@ interface GoPayFactoryInterface {
   /**
    * Creates instance of payer contact.
    *
-   * @return \Drupal\gopay\Contact\ContactInterface
+   * @return ContactInterface
    *   Contact object.
    */
   public function createContact();
@@ -20,7 +25,7 @@ interface GoPayFactoryInterface {
   /**
    * Creates instance of item.
    *
-   * @return \Drupal\gopay\Item\ItemInterface
+   * @return ItemInterface
    *   Item object.
    */
   public function createItem();
@@ -28,7 +33,7 @@ interface GoPayFactoryInterface {
   /**
    * Creates instance of Eet.
    *
-   * @return \Drupal\gopay\Eet\Eet
+   * @return Eet
    *   Eet object.
    */
   public function createEet();
@@ -39,7 +44,7 @@ interface GoPayFactoryInterface {
    * @param array $config_override
    *   Configuration override.
    *
-   * @return \Drupal\gopay\Payment\PaymentInterface
+   * @return PaymentInterface
    *   StandardPayment object.
    */
   public function createStandardPayment(array $config_override = []);
@@ -50,7 +55,7 @@ interface GoPayFactoryInterface {
    * @param int $id
    *   Payment Id.
    *
-   * @return \Drupal\gopay\Response\PaymentResponseInterface
+   * @return PaymentResponseInterface
    *   Response object.
    */
   public function createResponseStatus($id);
diff --git a/src/Item/ItemInterface.php b/src/Item/ItemInterface.php
index 5735638..f4c7530 100644
--- a/src/Item/ItemInterface.php
+++ b/src/Item/ItemInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gopay\Item;
 
+use Drupal\gopay\Exception\GoPayInvalidSettingsException;
 /**
  * Interface ItemInterface.
  *
@@ -101,7 +102,7 @@ interface ItemInterface {
    * @return array
    *   Configuration of this item
    *
-   * @throws \Drupal\gopay\Exception\GoPayInvalidSettingsException
+   * @throws GoPayInvalidSettingsException
    */
   public function toArray();
 
diff --git a/src/Payment/PaymentInterface.php b/src/Payment/PaymentInterface.php
index 9848bb3..0da7cfa 100644
--- a/src/Payment/PaymentInterface.php
+++ b/src/Payment/PaymentInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\gopay\Payment;
 
+use Drupal\gopay\Exception\GoPayInvalidSettingsException;
 use Drupal\gopay\Contact\ContactInterface;
 use Drupal\gopay\Eet\Eet;
 use Drupal\gopay\Item\ItemInterface;
@@ -64,7 +65,7 @@ interface PaymentInterface {
   /**
    * Sets payer contact.
    *
-   * @param \Drupal\gopay\Contact\ContactInterface $contact
+   * @param ContactInterface $contact
    *   Contact object.
    *
    * @return \Drupal\gopay\Payment\PaymentInterface
@@ -88,7 +89,7 @@ interface PaymentInterface {
   /**
    * Adds item in payment.
    *
-   * @param \Drupal\gopay\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   Item object.
    *
    * @return \Drupal\gopay\Payment\PaymentInterface
@@ -113,7 +114,7 @@ interface PaymentInterface {
     /**
      * Sets EET object.
      *
-     * @param \Drupal\gopay\Eet\Eet $eet
+     * @param Eet $eet
      *   EET object.
      *
      * @return \Drupal\gopay\Payment\PaymentInterface
@@ -177,7 +178,7 @@ interface PaymentInterface {
    * @return array
    *   Configuration of this Payment
    *
-   * @throws \Drupal\gopay\Exception\GoPayInvalidSettingsException
+   * @throws GoPayInvalidSettingsException
    */
   public function toArray();
 
diff --git a/src/Payment/StandardPayment.php b/src/Payment/StandardPayment.php
index 1bc08ca..d917a00 100644
--- a/src/Payment/StandardPayment.php
+++ b/src/Payment/StandardPayment.php
@@ -23,14 +23,14 @@ class StandardPayment implements PaymentInterface {
   /**
    * ConfigFactory Service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * GoPayApi Service.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApi;
 
@@ -65,7 +65,7 @@ class StandardPayment implements PaymentInterface {
   /**
    * Payer contact object.
    *
-   * @var \Drupal\gopay\Contact\ContactInterface
+   * @var ContactInterface
    */
   protected $payerContact;
 
@@ -79,7 +79,7 @@ class StandardPayment implements PaymentInterface {
   /**
    * Items in payment.
    *
-   * @var array|\Drupal\gopay\Item\ItemInterface
+   * @var array|ItemInterface
    */
   protected $items;
 
@@ -93,7 +93,7 @@ class StandardPayment implements PaymentInterface {
   /**
    * EET object.
    *
-   * @var \Drupal\gopay\Eet\Eet
+   * @var Eet
    */
   protected $eet;
 
@@ -130,9 +130,9 @@ class StandardPayment implements PaymentInterface {
   /**
    * GoPayFactory constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   ConfigFactory service.
-   * @param \Drupal\gopay\GoPayApiInterface $go_pay_api
+   * @param GoPayApiInterface $go_pay_api
    *   GoPayApi service.
    * @param array $config_override
    *   Config override.
@@ -372,7 +372,7 @@ class StandardPayment implements PaymentInterface {
    *
    * @param string $key
    *   Config key.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   Config object.
    * @param array $config_override
    *   Config override values indexed by config key.
diff --git a/src/Response/PaymentResponse.php b/src/Response/PaymentResponse.php
index faf5ae9..64f1897 100644
--- a/src/Response/PaymentResponse.php
+++ b/src/Response/PaymentResponse.php
@@ -15,14 +15,14 @@ class PaymentResponse implements PaymentResponseInterface {
   /**
    * GoPay Response object.
    *
-   * @var \GoPay\Http\Response
+   * @var Response
    */
   protected $response;
 
   /**
    * GoPayFactory constructor.
    *
-   * @param \GoPay\Http\Response $response
+   * @param Response $response
    *   GoPay response object.
    */
   public function __construct(Response $response) {
diff --git a/tests/src/Unit/Item/ItemTest.php b/tests/src/Unit/Item/ItemTest.php
index 4f0d014..11fe00f 100644
--- a/tests/src/Unit/Item/ItemTest.php
+++ b/tests/src/Unit/Item/ItemTest.php
@@ -79,7 +79,7 @@ class ItemTest extends UnitTestCase {
    * Test missing name property.
    */
   public function testMissingName() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $item = new Item();
     $item->setAmount(1);
     $item->toArray();
@@ -89,7 +89,7 @@ class ItemTest extends UnitTestCase {
    * Test missing amount property.
    */
   public function testMissingAmount() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $item = new Item();
     $item->setName('name');
     $item->toArray();
diff --git a/tests/src/Unit/Payment/StandardPaymentTest.php b/tests/src/Unit/Payment/StandardPaymentTest.php
index c242ede..64ccc14 100644
--- a/tests/src/Unit/Payment/StandardPaymentTest.php
+++ b/tests/src/Unit/Payment/StandardPaymentTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\gopay\Unit\Payment;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\gopay\GoPayApiInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\gopay\Contact\Contact;
 use Drupal\gopay\Exception\GoPayInvalidSettingsException;
@@ -19,24 +22,25 @@ use GoPay\Definition\Payment\PaymentInstrument;
  */
 class StandardPaymentTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * ConfigFactoryMock.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactoryMock;
 
   /**
    * GoPay Api.
    *
-   * @var \Drupal\gopay\GoPayApiInterface
+   * @var GoPayApiInterface
    */
   protected $goPayApiMock;
 
   /**
    * Setup Mocks.
    */
-  public function setUp() {
+  public function setUp(): void {
     // Set config mock.
     $confingProphecy = $this->prophesize(ImmutableConfig::class);
     $confingProphecy->get('go_id')->willReturn('testgoid');
@@ -195,7 +199,7 @@ class StandardPaymentTest extends UnitTestCase {
    * Test missing amount property.
    */
   public function testMissingAmount() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $payment = new StandardPayment($this->configFactoryMock, $this->goPayApiMock);
     $payment->setCurrency(Currency::EUROS);
     $payment->toArray();
@@ -205,7 +209,7 @@ class StandardPaymentTest extends UnitTestCase {
    * Test missing currency property.
    */
   public function testMissingCurrency() {
-    $this->setExpectedException(GoPayInvalidSettingsException::class);
+    $this->expectException(GoPayInvalidSettingsException::class);
     $payment = new StandardPayment($this->configFactoryMock, $this->goPayApiMock);
     $payment->setAmount(100);
     $payment->toArray();
