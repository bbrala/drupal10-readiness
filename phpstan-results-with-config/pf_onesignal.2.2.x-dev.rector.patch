diff --git a/pf_onesignal.module b/pf_onesignal.module
index 10be730..e377980 100644
--- a/pf_onesignal.module
+++ b/pf_onesignal.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\pf_onesignal\PrivateStore;
 use Drupal\Core\Url;
 
 /**
@@ -9,7 +10,7 @@ function pf_onesignal_page_bottom(array &$page_bottom) {
   if (Drupal::currentUser()->isAnonymous()) {
     return;
   }
-  /** @var \Drupal\pf_onesignal\PrivateStore $privateStore */
+  /** @var PrivateStore $privateStore */
   $privateStore= \Drupal::service('onesignal.private_store');
   if ($privateStore->getValue('onsignal_device_registered')) {
     return;
diff --git a/src/Controller/AppleId.php b/src/Controller/AppleId.php
index 44b8f7c..2d14db7 100644
--- a/src/Controller/AppleId.php
+++ b/src/Controller/AppleId.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\pf_onesignal\Controller;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -13,14 +14,14 @@ use Symfony\Component\HttpFoundation\JsonResponse;
 class AppleId extends ControllerBase {
 
   /**
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * AppleId constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
     $this->config = $config_factory->get('pf_onesignal.settings');
@@ -36,7 +37,7 @@ class AppleId extends ControllerBase {
   }
 
   /**
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    */
   public function execute(): JsonResponse {
     return new JsonResponse([
diff --git a/src/Controller/Register.php b/src/Controller/Register.php
index 8d5cfd8..3c70d4e 100644
--- a/src/Controller/Register.php
+++ b/src/Controller/Register.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\pf_onesignal\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Controller\ControllerBase;
@@ -19,16 +22,16 @@ use Symfony\Component\HttpFoundation\Response;
 class Register extends ControllerBase {
 
   /**
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * Register constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
-   * @param \Drupal\Core\Session\AccountInterface $account
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param EntityTypeManagerInterface $entityTypeManager
+   * @param AccountInterface $account
+   * @param Request $request
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, AccountInterface $account, Request $request) {
     $this->entityTypeManager = $entityTypeManager;
@@ -48,14 +51,14 @@ class Register extends ControllerBase {
   }
 
   /**
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    */
   public function title(): TranslatableMarkup {
     return $this->t('System endpoint');
   }
 
   /**
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    */
   public function access(): AccessResultInterface {
     if ($this->currentUser()->isAuthenticated()) {
@@ -65,10 +68,10 @@ class Register extends ControllerBase {
   }
 
   /**
-   * @return \Symfony\Component\HttpFoundation\Response
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @return Response
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function execute(): Response {
     $info = json_decode($this->request->getContent(), TRUE);
diff --git a/src/Plugin/PushFrameworkChannel/OneSignal.php b/src/Plugin/PushFrameworkChannel/OneSignal.php
index eb08904..a9fa7bb 100644
--- a/src/Plugin/PushFrameworkChannel/OneSignal.php
+++ b/src/Plugin/PushFrameworkChannel/OneSignal.php
@@ -104,7 +104,7 @@ class OneSignal extends ChannelBase {
   }
 
   /**
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *
    * @return int[]
    */
diff --git a/src/PrivateStore.php b/src/PrivateStore.php
index f6a5006..e4a655d 100644
--- a/src/PrivateStore.php
+++ b/src/PrivateStore.php
@@ -15,7 +15,7 @@ class PrivateStore {
   /**
    * Constructs a PrivateStore object.
    *
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_service
+   * @param PrivateTempStoreFactory $temp_store_service
    */
   public function __construct(PrivateTempStoreFactory $temp_store_service) {
     $this->store = $temp_store_service->get('onesignal');
