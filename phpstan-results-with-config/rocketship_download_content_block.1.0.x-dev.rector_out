modules/contrib/rocketship_download_content_block/rocketship_download_content_block.install
modules/contrib/rocketship_download_content_block/rocketship_download_content_block.module
modules/contrib/rocketship_download_content_block/src/Form/RemoteFileUploadForm.php
modules/contrib/rocketship_download_content_block/src/Plugin/media/Source/RemoteFile.php

2 files with changes
====================

1) modules/contrib/rocketship_download_content_block/src/Form/RemoteFileUploadForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rocketship_download_content_block\Form;

+use Drupal\media_library\MediaLibraryState;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\TypedData\FieldItemDataDefinition;
@@ @@
   /**
    * The element info manager.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $renderer;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * The file usage service.
    *
-   * @var \Drupal\file\FileUsage\FileUsageInterface
+   * @var FileUsageInterface
    */
   protected $fileUsage;

   /**
-   * @var \Drupal\media\OEmbed\UrlResolverInterface
+   * @var UrlResolverInterface
    */
   protected $urlResolver;

   /**
-   * @var \Drupal\media\OEmbed\ResourceFetcherInterface
+   * @var ResourceFetcherInterface
    */
   protected $resourceFetcher;

   /**
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Constructs a new FileUploadForm.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\media_library\MediaLibraryUiBuilder $library_ui_builder
+   * @param MediaLibraryUiBuilder $library_ui_builder
    *   The media library UI builder.
-   * @param \Drupal\Core\Render\ElementInfoManagerInterface $element_info
+   * @param ElementInfoManagerInterface $element_info
    *   The element info manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\media_library\OpenerResolverInterface $opener_resolver
+   * @param OpenerResolverInterface $opener_resolver
    *   The opener resolver.
-   * @param \Drupal\file\FileUsage\FileUsageInterface $file_usage
+   * @param FileUsageInterface $file_usage
    *   The file usage service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, MediaLibraryUiBuilder $library_ui_builder, ElementInfoManagerInterface $element_info, RendererInterface $renderer, FileSystemInterface $file_system, OpenerResolverInterface $opener_resolver, FileUsageInterface $file_usage, UrlResolverInterface $url_resolver, ResourceFetcherInterface $resource_fetcher, AccountProxyInterface $currentUser) {
@@ @@
    * {@inheritdoc}
    */
   protected function buildInputElement(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\media_library\MediaLibraryState $state */
+    /** @var MediaLibraryState $state */
     $state = $this->getMediaLibraryState($form_state);
     if (!$state->hasSlotsAvailable()) {
       return $form;
@@ @@
    *
    * @param array $form
    *   The complete form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current form state.
    */
   public function validateUrl(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addButtonSubmit(array $form, FormStateInterface $form_state) {
@@ @@

     $value = $form_state->getValue('upload');

-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $files = $fileStorage->loadByProperties(['uri' => $value]);
     $file = reset($files);
     if (!$file) {
@@ @@
   /**
    * Create a file field item.
    *
-   * @param \Drupal\media\MediaTypeInterface $media_type
+   * @param MediaTypeInterface $media_type
    *   The media type of the media item.
    *
-   * @return \Drupal\file\Plugin\Field\FieldType\FileItem
+   * @return FileItem
    *   A created file item.
    */
   protected function createFileItem(MediaTypeInterface $media_type) {
@@ @@
    * {@inheritdoc}
    */
   protected function prepareMediaEntityForSave(MediaInterface $media) {
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $media->get($this->getSourceFieldName($media->bundle->entity))->entity;
     $file->setPermanent();
     $file->save();
@@ @@
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function removeButtonSubmit(array $form, FormStateInterface $form_state) {
@@ @@
     $triggering_element = $form_state->getTriggeringElement();
     $delta = array_slice($triggering_element['#array_parents'], -2, 1)[0];

-    /** @var \Drupal\media\MediaInterface $removed_media */
+    /** @var MediaInterface $removed_media */
     $removed_media = $form_state->get(['media', $delta]);

     $file = $removed_media->get($this->getSourceFieldName($removed_media->bundle->entity))->entity;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/rocketship_download_content_block/rocketship_download_content_block.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityStorageException;
 /**
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function rocketship_download_content_block_install() {
   Rocketship::updateRolePermissionsForModule('rocketship_download_content_block');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

