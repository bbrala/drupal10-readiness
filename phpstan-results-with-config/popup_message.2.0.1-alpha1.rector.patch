diff --git a/src/Controller/PopupMessageStatus.php b/src/Controller/PopupMessageStatus.php
index 31b1d0a..2bbb891 100644
--- a/src/Controller/PopupMessageStatus.php
+++ b/src/Controller/PopupMessageStatus.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\popup_message\Controller;
 
+use Drupal\Core\Path\PathMatcher;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Path\PathMatcherInterface;
@@ -19,23 +20,23 @@ class PopupMessageStatus extends ControllerBase {
   /**
    * Provides a path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcher
+   * @var PathMatcher
    */
   protected $pathMatcher;
 
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * PopupMessageStatus constructor.
    *
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   Path matcher services.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
    */
   public function __construct(PathMatcherInterface $path_matcher, ConfigFactoryInterface $config_factory) {
@@ -56,10 +57,10 @@ class PopupMessageStatus extends ControllerBase {
   /**
    * Check and send popup status to js.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Popup status in json.
    */
   public function check(Request $request) {
diff --git a/src/EventSubscriber/PopupMessageSubscriber.php b/src/EventSubscriber/PopupMessageSubscriber.php
index 549bb28..b23f434 100644
--- a/src/EventSubscriber/PopupMessageSubscriber.php
+++ b/src/EventSubscriber/PopupMessageSubscriber.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\popup_message\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -9,7 +12,6 @@ use Drupal\Core\Path\PathMatcher;
 use Drupal\Core\Render\AttachmentsInterface;
 use Drupal\Core\Session\AccountInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
@@ -23,50 +25,50 @@ class PopupMessageSubscriber implements EventSubscriberInterface {
   /**
    * The PopupMessage config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Current Request.
    *
-   * @var null|\Symfony\Component\HttpFoundation\Request
+   * @var null|Request
    */
   protected $requestStack;
 
   /**
    * Path matcher services.
    *
-   * @var \Drupal\Core\Path\PathMatcher
+   * @var PathMatcher
    */
   protected $pathMatcher;
 
   /**
    * User account service.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * PopupMessageSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   Popup_message config.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Current Request.
-   * @param \Drupal\Core\Path\PathMatcher $pathMatcher
+   * @param PathMatcher $pathMatcher
    *   Path matcher services.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   User account service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Module handler service.
    */
   public function __construct(ConfigFactoryInterface $config, RequestStack $requestStack, PathMatcher $pathMatcher, AccountInterface $account, ModuleHandlerInterface $moduleHandler) {
@@ -80,10 +82,10 @@ class PopupMessageSubscriber implements EventSubscriberInterface {
   /**
    * Init PopupMessage.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   PopupMessage event.
    */
-  public function showPopupMessage(FilterResponseEvent $event) {
+  public function showPopupMessage(ResponseEvent $event) {
 
     // Check permissions to display message.
     $response = $event->getResponse();
diff --git a/src/Form/PopupMessageSettingsForm.php b/src/Form/PopupMessageSettingsForm.php
index aa664c9..a250637 100644
--- a/src/Form/PopupMessageSettingsForm.php
+++ b/src/Form/PopupMessageSettingsForm.php
@@ -23,32 +23,32 @@ class PopupMessageSettingsForm extends ConfigFormBase {
   /**
    * CssCollectionOptimizer service.
    *
-   * @var \Drupal\Core\Asset\CssCollectionOptimizer
+   * @var CssCollectionOptimizer
    */
   protected $cssOptimizer;
 
   /**
    * JsCollectionOptimizer service.
    *
-   * @var \Drupal\Core\Asset\JsCollectionOptimizer
+   * @var JsCollectionOptimizer
    */
   protected $jsOptimizer;
 
   /**
    * Drupal\Core\Entity\EntityRepositoryInterface service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * PopupMessageSettingsForm constructor.
    *
-   * @param \Drupal\Core\Asset\CssCollectionOptimizer $cssOptimizer
+   * @param CssCollectionOptimizer $cssOptimizer
    *   Load service css collection optimizer.
-   * @param \Drupal\Core\Asset\JsCollectionOptimizer $jsOptimizer
+   * @param JsCollectionOptimizer $jsOptimizer
    *   Load service js collection optimizer.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param EntityRepositoryInterface $entityRepository
    *   Entity repository.
    */
   public function __construct(CssCollectionOptimizer $cssOptimizer, JsCollectionOptimizer $jsOptimizer, EntityRepositoryInterface $entityRepository) {
@@ -175,7 +175,7 @@ class PopupMessageSettingsForm extends ConfigFormBase {
 
     // Styles.
     // Find styles in module directory.
-    $directory = drupal_get_path('module', 'popup_message') . '/styles';
+    $directory = \Drupal::service('extension.list.module')->getPath('popup_message') . '/styles';
     $subdirectories = scandir($directory);
     $styles = [];
 
