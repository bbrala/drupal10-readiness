modules/contrib/webform_cart/src/Ajax/DataLayerPush.php
modules/contrib/webform_cart/src/Controller/WebformCartCheckoutController.php
modules/contrib/webform_cart/src/Controller/WebformCartController.php
modules/contrib/webform_cart/src/Element/WebformCart.php
modules/contrib/webform_cart/src/Entity/WebformCartItem.php
modules/contrib/webform_cart/src/Entity/WebformCartItemInterface.php
modules/contrib/webform_cart/src/Entity/WebformCartItemType.php
modules/contrib/webform_cart/src/Entity/WebformCartItemTypeInterface.php
modules/contrib/webform_cart/src/Entity/WebformCartOrder.php
modules/contrib/webform_cart/src/Entity/WebformCartOrderInterface.php
modules/contrib/webform_cart/src/Entity/WebformCartOrderType.php
modules/contrib/webform_cart/src/Entity/WebformCartOrderTypeInterface.php
modules/contrib/webform_cart/src/Form/AddToCartForm.php
modules/contrib/webform_cart/src/Form/UpdateCartForm.php
modules/contrib/webform_cart/src/Form/WebformCartItemDeleteForm.php
modules/contrib/webform_cart/src/Form/WebformCartItemForm.php
modules/contrib/webform_cart/src/Form/WebformCartItemSettingsForm.php
modules/contrib/webform_cart/src/Form/WebformCartItemTypeDeleteForm.php
modules/contrib/webform_cart/src/Form/WebformCartItemTypeForm.php
modules/contrib/webform_cart/src/Form/WebformCartOrderDeleteForm.php
modules/contrib/webform_cart/src/Form/WebformCartOrderForm.php
modules/contrib/webform_cart/src/Form/WebformCartOrderSettingsForm.php
modules/contrib/webform_cart/src/Form/WebformCartOrderTypeDeleteForm.php
modules/contrib/webform_cart/src/Form/WebformCartOrderTypeForm.php
modules/contrib/webform_cart/src/Plugin/Block/WebformCartBlock.php
modules/contrib/webform_cart/src/Plugin/Block/WebformCartCheckoutBlock.php
modules/contrib/webform_cart/src/Plugin/WebformElement/WebformCart.php
modules/contrib/webform_cart/src/Plugin/views/field/AddToCart.php
modules/contrib/webform_cart/src/WebformCart.php
modules/contrib/webform_cart/src/WebformCartInterface.php
modules/contrib/webform_cart/src/WebformCartItemAccessControlHandler.php
modules/contrib/webform_cart/src/WebformCartItemHtmlRouteProvider.php
modules/contrib/webform_cart/src/WebformCartItemListBuilder.php
modules/contrib/webform_cart/src/WebformCartItemTypeHtmlRouteProvider.php
modules/contrib/webform_cart/src/WebformCartItemTypeListBuilder.php
modules/contrib/webform_cart/src/WebformCartOrderAccessControlHandler.php
modules/contrib/webform_cart/src/WebformCartOrderHtmlRouteProvider.php
modules/contrib/webform_cart/src/WebformCartOrderListBuilder.php
modules/contrib/webform_cart/src/WebformCartOrderTypeHtmlRouteProvider.php
modules/contrib/webform_cart/src/WebformCartOrderTypeListBuilder.php
modules/contrib/webform_cart/src/WebformCartSession.php
modules/contrib/webform_cart/src/WebformCartSessionInterface.php
modules/contrib/webform_cart/tests/src/Functional/LoadTest.php
modules/contrib/webform_cart/webform_cart.module
modules/contrib/webform_cart/webform_cart.views.inc
modules/contrib/webform_cart/webform_cart_item.page.inc
modules/contrib/webform_cart/webform_cart_order.page.inc

17 files with changes
=====================

1) modules/contrib/webform_cart/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\webform_cart\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/webform_cart/src/WebformCartSession.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * The session.
    *
-   * @var \Symfony\Component\HttpFoundation\Session\SessionInterface
+   * @var SessionInterface
    */
   protected $session;

@@ @@
   /**
    * Constructs a new CartSession object.
    *
-   * @param \Symfony\Component\HttpFoundation\Session\SessionInterface $session
+   * @param SessionInterface $session
    *   The session.
    */
   public function __construct(SessionInterface $session) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/webform_cart/src/WebformCartOrderHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/webform_cart/src/WebformCartOrderAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_cart;

+use Drupal\webform_cart\Entity\WebformCartOrderInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\webform_cart\Entity\WebformCartOrderInterface $entity */
+    /** @var WebformCartOrderInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/webform_cart/src/WebformCartItemHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/webform_cart/src/WebformCartItemAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_cart;

+use Drupal\webform_cart\Entity\WebformCartItemInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\webform_cart\Entity\WebformCartItemInterface $entity */
+    /** @var WebformCartItemInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/webform_cart/src/WebformCart.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_cart;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * WebformCart constructor.
    *
-   * @param \Drupal\webform_cart\WebformCartSessionInterface $webform_cart_session
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param WebformCartSessionInterface $webform_cart_session
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    */
   public function __construct(WebformCartSessionInterface $webform_cart_session,
                               EntityTypeManagerInterface $entity_type_manager,
@@ @@
    * @param $orderItem
    *
    * @return int|mixed
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function setCart($orderItem) {
     $cartId = $this->webformCartSession->getCartIds();
@@ @@

   /**
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getCheckout() {
     $orders = 'Order is empty';
@@ @@
    * @param $itemId
    *
    * @return mixed
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function removeItem($itemId) {

@@ @@
    * @param $orderEntity
    * @param $orderItem
    *
-   * @return \Drupal\Core\Entity\EntityInterface
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @return EntityInterface
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   private function addLineItem($orderEntity, $orderItem) {

@@ @@

   /**
    * @return int
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   private function cartCount() {
     $cartId = $this->webformCartSession->getCartIds();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/webform_cart/src/Plugin/views/field/AddToCart.php:25

    ---------- begin diff ----------
@@ @@
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\webform_cart\WebformCartInterface $webform_cart
-   * @param \Drupal\webform_cart\Form\AddToCartForm $addto_cart_form
+   * @param WebformCartInterface $webform_cart
+   * @param AddToCartForm $addto_cart_form
    */
   public function __construct(array $configuration,
                                  $plugin_id,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/webform_cart/src/Plugin/WebformElement/WebformCart.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_cart\Plugin\WebformElement;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Drupal\webform_cart\WebformCartSessionInterface definition.
    *
-   * @var \Drupal\webform_cart\WebformCartSessionInterface
+   * @var WebformCartSessionInterface
    */
   protected $webformCartSession;

@@ @@


   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
    *
-   * @return \Drupal\webform\Plugin\WebformElement\WebformCompositeBase|\Drupal\webform_cart\Plugin\WebformElement\WebformCart
+   * @return WebformCompositeBase|\Drupal\webform_cart\Plugin\WebformElement\WebformCart
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
@@ @@

   /**
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
    * @return array
    */
@@ @@

   /**
    * @param array $element
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function preSave(array &$element, WebformSubmissionInterface $webform_submission) {
     if ($element['#type'] == 'webform_cart') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/webform_cart/src/Plugin/Block/WebformCartCheckoutBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_cart\Plugin\Block;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\webform_cart\WebformCartSessionInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\webform_cart\WebformCartInterface;
@@ @@
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\webform_cart\WebformCartSessionInterface $webform_cart_session
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param WebformCartSessionInterface $webform_cart_session
    */
   public function __construct(array $configuration,
                               $plugin_id,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/webform_cart/src/Plugin/Block/WebformCartBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_cart\Plugin\Block;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\webform_cart\WebformCartSessionInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\webform_cart\WebformCartInterface;
@@ @@
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\webform_cart\WebformCartSessionInterface $webform_cart_session
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param WebformCartSessionInterface $webform_cart_session
    */
   public function __construct(array $configuration,
                               $plugin_id,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/webform_cart/src/Form/WebformCartOrderSettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/webform_cart/src/Form/WebformCartItemSettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/webform_cart/src/Form/UpdateCartForm.php:136

    ---------- begin diff ----------
@@ @@
   }
   /**
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
-   * @return array|\Drupal\Core\Ajax\AjaxResponse
+   * @return array|AjaxResponse
    */
   public function ajaxSubmit(array &$form, FormStateInterface $form_state) {
     if ($form_state::hasAnyErrors() == TRUE) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/webform_cart/src/Form/AddToCartForm.php:166

    ---------- begin diff ----------
@@ @@
   }
   /**
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
-   * @return array|\Drupal\Core\Ajax\AjaxResponse
+   * @return array|AjaxResponse
    */
   public function ajaxSubmit(array &$form, FormStateInterface $form_state) {
     if ($form_state::hasAnyErrors() == TRUE) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/webform_cart/src/Controller/WebformCartController.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * WebformCartController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\webform_cart\WebformCartSessionInterface $webform_cart_session
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param WebformCartSessionInterface $webform_cart_session
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, WebformCartSessionInterface $webform_cart_session) {
     $this->entityTypeManager = $entity_type_manager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/webform_cart/src/Controller/WebformCartCheckoutController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_cart\Controller;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\webform_cart\WebformCartSessionInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\webform_cart\WebformCartInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * WebformCartCheckoutController constructor.
    *
-   * @param \Drupal\webform_cart\WebformCartInterface $webform_cart
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\webform_cart\WebformCartSessionInterface $webform_cart_session
+   * @param WebformCartInterface $webform_cart
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param WebformCartSessionInterface $webform_cart_session
    */
   public function __construct(WebformCartInterface $webform_cart) {
     $this->webformCart = $webform_cart;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 17 files have been changed by Rector                                      

