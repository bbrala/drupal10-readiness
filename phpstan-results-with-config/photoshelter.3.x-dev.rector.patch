diff --git a/photoshelter.info.yml b/photoshelter.info.yml
index fb9147d..e7b6c5f 100644
--- a/photoshelter.info.yml
+++ b/photoshelter.info.yml
@@ -4,8 +4,7 @@ package: Media
 php: 7.0
 
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
   - drupal:media
diff --git a/src/Form/PhotoShelterConfigForm.php b/src/Form/PhotoShelterConfigForm.php
index 42c0893..1c1a571 100644
--- a/src/Form/PhotoShelterConfigForm.php
+++ b/src/Form/PhotoShelterConfigForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\photoshelter\Form;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use DateTime;
 use DateTimeZone;
 use Drupal\Core\Form\ConfigFormBase;
@@ -196,7 +198,7 @@ class PhotoShelterConfigForm extends ConfigFormBase {
    * @param FormStateInterface $form_state
    *   The form state object.
    *
-   * @return \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @return Config|ImmutableConfig
    *   The configuration object.
    */
   private function saveConfig(FormStateInterface $form_state) {
diff --git a/src/Form/PhotoShelterDeleteForm.php b/src/Form/PhotoShelterDeleteForm.php
index 6f9a653..5d20838 100644
--- a/src/Form/PhotoShelterDeleteForm.php
+++ b/src/Form/PhotoShelterDeleteForm.php
@@ -71,7 +71,7 @@ class PhotoShelterDeleteForm extends FormBase {
         'title' => t('PhotoShelter delete data'),
         'operations' => $operations,
         'finished' => 'photoshelter_delete_finished',
-        'file' => drupal_get_path('module', 'photoshelter') . '/photoshelter.batch.inc',
+        'file' => \Drupal::service('extension.list.module')->getPath('photoshelter') . '/photoshelter.batch.inc',
       );
 
       batch_set($batch);
diff --git a/src/PhotoShelterService.php b/src/PhotoShelterService.php
index 3698d84..db0e317 100644
--- a/src/PhotoShelterService.php
+++ b/src/PhotoShelterService.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\photoshelter;
 
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use DateTime;
 use DateTimeZone;
 use Drupal\Core\Config\Config;
@@ -107,7 +110,7 @@ class PhotoShelterService {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -361,7 +364,7 @@ class PhotoShelterService {
    * @param bool $update
    *   If update or full sync.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function getData(DateTime $time, $update = FALSE) {
     if ($this->token == 'error') {
@@ -396,7 +399,7 @@ class PhotoShelterService {
       'title' => t('PhotoShelter synchronization'),
       'operations' => $operations,
       'finished' => 'photoshelter_sync_finished',
-      'file' => drupal_get_path('module', 'photoshelter') . '/photoshelter.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('photoshelter') . '/photoshelter.batch.inc',
     );
 
     batch_set($batch);
@@ -416,7 +419,7 @@ class PhotoShelterService {
    * @param string|null $parentId
    *   Parent collection ID.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function getCollection($collection_id, DateTime $time, $update, $process, $parentId = NULL) {
     $endpoint = 'collection/' . $collection_id;
@@ -488,7 +491,7 @@ class PhotoShelterService {
    * @param string|null $parentTermId
    *   Parent container term ID.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function getGallery($gallery_id, DateTime $time, $update, $process, $parentTermId = NULL) {
 
@@ -552,7 +555,7 @@ class PhotoShelterService {
    * @param string|null $parentId
    *   Parent collection ID.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function saveCollection(array $collection, DateTime $time, $update, $collectionVisibility, $process, $parentId = NULL) {
     $collectionId   = $collection['collection_id'];
@@ -678,7 +681,7 @@ class PhotoShelterService {
           'title' => t('Synchronization of ') . $collectionName,
           'operations' => $operations,
           'finished' => 'photoshelter_sync_finished',
-          'file' => drupal_get_path('module', 'photoshelter') . '/photoshelter.batch.inc',
+          'file' => \Drupal::service('extension.list.module')->getPath('photoshelter') . '/photoshelter.batch.inc',
         );
 
         batch_set($batch);
@@ -725,7 +728,7 @@ class PhotoShelterService {
    * @param string|null $parentTermId
    *   Parent container term ID.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function saveGallery(array $gallery, DateTime $time, $update, $galleryVisibility, $process, $parentTermId = NULL) {
     $galleryId          = $gallery['gallery_id'];
@@ -894,7 +897,7 @@ class PhotoShelterService {
         'title' => t('Photos import'),
         'operations' => $operations,
         'finished' => 'photoshelter_sync_photo_finished',
-        'file' => drupal_get_path('module', 'photoshelter') . '/photoshelter.batch.inc',
+        'file' => \Drupal::service('extension.list.module')->getPath('photoshelter') . '/photoshelter.batch.inc',
       );
 
       batch_set($batch);
@@ -915,9 +918,9 @@ class PhotoShelterService {
    * @param string $parentVisibility
    *   Parent gallery visibility.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function getPhoto(array $image, $parentVisibility) {
 
@@ -1077,8 +1080,8 @@ class PhotoShelterService {
    * @return bool
    *   True or False.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   private function termExists($name = NULL, $vid = NULL) {
     $properties = [];
@@ -1097,7 +1100,7 @@ class PhotoShelterService {
   /**
    * Update the photoshelter config last synchronization date.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration object.
    */
   public function updateConfigPostSync(Config &$config) {
