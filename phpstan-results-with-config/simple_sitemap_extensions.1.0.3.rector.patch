diff --git a/modules/sse_dynamic_monthly/src/Plugin/simple_sitemap/UrlGenerator/MonthlySitemapUrlGenerator.php b/modules/sse_dynamic_monthly/src/Plugin/simple_sitemap/UrlGenerator/MonthlySitemapUrlGenerator.php
index 395cb02..1fb0938 100644
--- a/modules/sse_dynamic_monthly/src/Plugin/simple_sitemap/UrlGenerator/MonthlySitemapUrlGenerator.php
+++ b/modules/sse_dynamic_monthly/src/Plugin/simple_sitemap/UrlGenerator/MonthlySitemapUrlGenerator.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\sse_dynamic_monthly\Plugin\simple_sitemap\UrlGenerator;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Cache\MemoryCache\MemoryCacheInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Datetime\DrupalDateTime;
@@ -30,14 +32,14 @@ class MonthlySitemapUrlGenerator extends EntityUrlGenerator {
   /**
    * Drupal datetime formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -174,8 +176,8 @@ class MonthlySitemapUrlGenerator extends EntityUrlGenerator {
    * @return mixed
    *   Usually a timestamp.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getOldestEntityCreatedDate($bundle_settings) {
     $oldest = NULL;
diff --git a/simple_sitemap_extensions.api.php b/simple_sitemap_extensions.api.php
index 9c9ad2d..5ddea0d 100644
--- a/simple_sitemap_extensions.api.php
+++ b/simple_sitemap_extensions.api.php
@@ -11,9 +11,9 @@ use Drupal\simple_sitemap\Plugin\simple_sitemap\UrlGenerator\EntityUrlGenerator;
 /**
  * Allows altering of the entity query when generating the dataset.
  *
- * @param \Drupal\simple_sitemap\Plugin\simple_sitemap\UrlGenerator\EntityUrlGenerator $generator
+ * @param EntityUrlGenerator $generator
  *   The generator.
- * @param \Drupal\Core\Entity\Query\QueryInterface $query
+ * @param QueryInterface $query
  *   The query which selects the entities to be put on the sitemap.
  */
 function hook_simple_sitemap_extensions_alter_dataset_entity_query(EntityUrlGenerator $generator, QueryInterface $query) {
diff --git a/simple_sitemap_extensions.install b/simple_sitemap_extensions.install
index c3b1f1f..0fc2866 100644
--- a/simple_sitemap_extensions.install
+++ b/simple_sitemap_extensions.install
@@ -16,7 +16,7 @@ function simple_sitemap_extensions_update_8001() {
 
   $sitemap_manager = NULL;
   if (\Drupal::service('module_handler')->moduleExists('simple_sitemap')) {
-    /** @var \Drupal\simple_sitemap\SimplesitemapManager $sitemap_manager */
+    /** @var SimplesitemapManager $sitemap_manager */
     $sitemap_manager = \Drupal::service('simple_sitemap.manager');
   }
 
diff --git a/src/Controller/DynamicSimplesitemapController.php b/src/Controller/DynamicSimplesitemapController.php
index d1f4eb0..fb69908 100644
--- a/src/Controller/DynamicSimplesitemapController.php
+++ b/src/Controller/DynamicSimplesitemapController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\simple_sitemap_extensions\Controller;
 
+use Drupal\simple_sitemap\Plugin\simple_sitemap\SitemapGenerator\SitemapGeneratorBase;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\State\StateInterface;
 use Drupal\simple_sitemap\Controller\SimplesitemapController;
 use Drupal\simple_sitemap\Simplesitemap;
@@ -19,16 +21,16 @@ class DynamicSimplesitemapController extends SimplesitemapController {
   /**
    * State service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * MonthlySitemapController constructor.
    *
-   * @param \Drupal\simple_sitemap\Simplesitemap $generator
+   * @param Simplesitemap $generator
    *   Simple sitemap generator service.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State service.
    */
   public function __construct(Simplesitemap $generator, StateInterface $state) {
@@ -76,10 +78,10 @@ class DynamicSimplesitemapController extends SimplesitemapController {
    * @param string $variant
    *   Current sitemap variant.
    *
-   * @return \Drupal\simple_sitemap\Plugin\simple_sitemap\SitemapGenerator\SitemapGeneratorBase
+   * @return SitemapGeneratorBase
    *   Sitemap generator plugin with variant configured.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected function getGeneratorFromVariant(string $variant) {
     $sitemap_manager = $this->generator->getSitemapManager();
diff --git a/src/DynamicSitemapQueueWorker.php b/src/DynamicSitemapQueueWorker.php
index a2b4d1e..0e43d64 100644
--- a/src/DynamicSitemapQueueWorker.php
+++ b/src/DynamicSitemapQueueWorker.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_sitemap_extensions;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\simple_sitemap_extensions\Plugin\simple_sitemap\SitemapGenerator\DynamicSitemapGeneratorInterface;
 use Drupal\simple_sitemap\Queue\QueueWorker;
 
@@ -18,7 +19,7 @@ class DynamicSitemapQueueWorker extends QueueWorker {
    * @param bool $complete
    *   All the links has been processed.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected function generateVariantChunksFromResults($complete = FALSE) {
     $generator = $this->manager->getSitemapGenerator($this->generatorProcessedNow)
diff --git a/src/Form/SitemapIndexForm.php b/src/Form/SitemapIndexForm.php
index 92409e3..1387a62 100644
--- a/src/Form/SitemapIndexForm.php
+++ b/src/Form/SitemapIndexForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_sitemap_extensions\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\simple_sitemap\Form\FormHelper;
@@ -20,32 +21,32 @@ class SitemapIndexForm extends ConfigFormBase {
   /**
    * Sitemap generator.
    *
-   * @var \Drupal\simple_sitemap\Simplesitemap
+   * @var Simplesitemap
    */
   protected $generator;
 
   /**
    * Sitemap manager.
    *
-   * @var \Drupal\simple_sitemap\SimplesitemapManager
+   * @var SimplesitemapManager
    */
   protected $manager;
 
   /**
    * Form helper.
    *
-   * @var \Drupal\simple_sitemap\Form\FormHelper
+   * @var FormHelper
    */
   protected $formHelper;
 
   /**
    * SitemapIndexForm constructor.
    *
-   * @param \Drupal\simple_sitemap\Simplesitemap $generator
+   * @param Simplesitemap $generator
    *   Sitemap generator.
-   * @param \Drupal\simple_sitemap\SimplesitemapManager $manager
+   * @param SimplesitemapManager $manager
    *   Sitemap manager.
-   * @param \Drupal\simple_sitemap\Form\FormHelper $form_helper
+   * @param FormHelper $form_helper
    *   Form helper.
    */
   public function __construct(
@@ -79,7 +80,7 @@ class SitemapIndexForm extends ConfigFormBase {
   /**
    * Gets the configuration for sitemap index.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   The config.
    */
   protected function getEditableConfig() {
@@ -152,7 +153,7 @@ class SitemapIndexForm extends ConfigFormBase {
   /**
    * Gets enabled variants from the form submission.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Formstate.
    *
    * @return string[]
diff --git a/src/Plugin/simple_sitemap/SitemapGenerator/AbstractDynamicSitemapGenerator.php b/src/Plugin/simple_sitemap/SitemapGenerator/AbstractDynamicSitemapGenerator.php
index 6f5b97b..eda9967 100644
--- a/src/Plugin/simple_sitemap/SitemapGenerator/AbstractDynamicSitemapGenerator.php
+++ b/src/Plugin/simple_sitemap/SitemapGenerator/AbstractDynamicSitemapGenerator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\simple_sitemap_extensions\Plugin\simple_sitemap\SitemapGenerator;
 
+use Drupal\simple_sitemap\Plugin\simple_sitemap\SitemapGenerator\SitemapGeneratorBase;
 use Drupal\Component\Datetime\Time;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Extension\ModuleHandler;
@@ -26,7 +27,7 @@ abstract class AbstractDynamicSitemapGenerator extends DefaultSitemapGenerator i
   /**
    * Drupal state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -53,17 +54,17 @@ abstract class AbstractDynamicSitemapGenerator extends DefaultSitemapGenerator i
    *   Plugin id.
    * @param mixed $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Drupal database connection service.
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   Module handler service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   Language manager service.
-   * @param \Drupal\Component\Datetime\Time $time
+   * @param Time $time
    *   Time service.
-   * @param \Drupal\simple_sitemap\Plugin\simple_sitemap\SitemapGenerator\SitemapWriter $sitemap_writer
+   * @param SitemapWriter $sitemap_writer
    *   Sitemap writer service.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   Drupal state service.
    */
   public function __construct(
@@ -84,7 +85,7 @@ abstract class AbstractDynamicSitemapGenerator extends DefaultSitemapGenerator i
   /**
    * Poor man's dependency injection.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Service container.
    * @param array $configuration
    *   Configuration.
@@ -93,7 +94,7 @@ abstract class AbstractDynamicSitemapGenerator extends DefaultSitemapGenerator i
    * @param mixed $plugin_definition
    *   Plugin definition.
    *
-   * @return AbstractDynamicSitemapGenerator|\Drupal\simple_sitemap\Plugin\simple_sitemap\SitemapGenerator\SitemapGeneratorBase|static
+   * @return AbstractDynamicSitemapGenerator|SitemapGeneratorBase|static
    *   Constructor parameters.
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
diff --git a/src/Plugin/simple_sitemap/UrlGenerator/ExtendedEntityUrlGenerator.php b/src/Plugin/simple_sitemap/UrlGenerator/ExtendedEntityUrlGenerator.php
index 4e41ccb..f59e727 100644
--- a/src/Plugin/simple_sitemap/UrlGenerator/ExtendedEntityUrlGenerator.php
+++ b/src/Plugin/simple_sitemap/UrlGenerator/ExtendedEntityUrlGenerator.php
@@ -37,7 +37,7 @@ class ExtendedEntityUrlGenerator extends EntityUrlGenerator {
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -182,7 +182,7 @@ class ExtendedEntityUrlGenerator extends EntityUrlGenerator {
   /**
    * Traverses the entity according to path configuration to fetch image data.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   A fieldable entity.
    * @param array $image_paths
    *   Configuration of image paths.
@@ -234,7 +234,7 @@ class ExtendedEntityUrlGenerator extends EntityUrlGenerator {
   /**
    * Gets the image data for an image field.
    *
-   * @param \Drupal\file\Plugin\Field\FieldType\FileFieldItemList $field
+   * @param FileFieldItemList $field
    *   Image field.
    *
    * @return array
@@ -245,7 +245,7 @@ class ExtendedEntityUrlGenerator extends EntityUrlGenerator {
     foreach ($field->getValue() as $value) {
       $id = $value['target_id'];
       $image_data[$id] = [
-        'path' => file_create_url(File::load($value['target_id'])->getFileUri()),
+        'path' => \Drupal::service('file_url_generator')->generateAbsoluteString(File::load($value['target_id'])->getFileUri()),
         'alt' => $value['alt'],
         'title' => $value['title'],
       ];
diff --git a/src/Plugin/simple_sitemap/UrlGenerator/SitemapVariantUrlGenerator.php b/src/Plugin/simple_sitemap/UrlGenerator/SitemapVariantUrlGenerator.php
index 05d950b..71bb198 100644
--- a/src/Plugin/simple_sitemap/UrlGenerator/SitemapVariantUrlGenerator.php
+++ b/src/Plugin/simple_sitemap/UrlGenerator/SitemapVariantUrlGenerator.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\simple_sitemap_extensions\Plugin\simple_sitemap\UrlGenerator;
 
+use Drupal\simple_sitemap\SimplesitemapManager;
+use Drupal\simple_sitemap\Plugin\simple_sitemap\SitemapGenerator\SitemapGeneratorBase;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Url;
@@ -32,35 +35,35 @@ class SitemapVariantUrlGenerator extends UrlGeneratorBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Sitemap manager.
    *
-   * @var \Drupal\simple_sitemap\SimplesitemapManager
+   * @var SimplesitemapManager
    */
   protected $sitemapManager;
 
   /**
    * Language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The database.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -73,17 +76,17 @@ class SitemapVariantUrlGenerator extends UrlGeneratorBase {
    *   Plugin id.
    * @param string $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\simple_sitemap\Simplesitemap $generator
+   * @param Simplesitemap $generator
    *   Sitemap generator.
-   * @param \Drupal\simple_sitemap\Logger $logger
+   * @param Logger $logger
    *   Logger.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   Language manager.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database.
    */
   public function __construct(
@@ -115,7 +118,7 @@ class SitemapVariantUrlGenerator extends UrlGeneratorBase {
   /**
    * The static create function.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container.
    * @param array $configuration
    *   The configuration.
@@ -124,7 +127,7 @@ class SitemapVariantUrlGenerator extends UrlGeneratorBase {
    * @param mixed $plugin_definition
    *   The plugin definition.
    *
-   * @return \Drupal\simple_sitemap\Plugin\simple_sitemap\UrlGenerator\UrlGeneratorBase|\Drupal\simple_sitemap_extensions\Plugin\simple_sitemap\UrlGenerator\SitemapVariantUrlGenerator|static
+   * @return UrlGeneratorBase|\Drupal\simple_sitemap_extensions\Plugin\simple_sitemap\UrlGenerator\SitemapVariantUrlGenerator|static
    *   Instance of this class.
    */
   public static function create(
@@ -269,10 +272,10 @@ class SitemapVariantUrlGenerator extends UrlGeneratorBase {
    * @param string $variant
    *   Current sitemap variant.
    *
-   * @return \Drupal\simple_sitemap\Plugin\simple_sitemap\SitemapGenerator\SitemapGeneratorBase
+   * @return SitemapGeneratorBase
    *   Sitemap generator plugin with variant configured.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected function getGeneratorFromVariant(string $variant) {
     $sitemap_variants = $this->sitemapManager->getSitemapVariants();
diff --git a/src/SitemapIndexTrait.php b/src/SitemapIndexTrait.php
index 5c3e160..dfe7bd1 100644
--- a/src/SitemapIndexTrait.php
+++ b/src/SitemapIndexTrait.php
@@ -12,7 +12,7 @@ trait SitemapIndexTrait {
   /**
    * Gets variants that are sitemap index variants.
    *
-   * @param \Drupal\simple_sitemap\SimplesitemapManager $manager
+   * @param SimplesitemapManager $manager
    *   Sitemap manager.
    *
    * @return array
@@ -30,7 +30,7 @@ trait SitemapIndexTrait {
   /**
    * Gets variants that are not sitemap index variants.
    *
-   * @param \Drupal\simple_sitemap\SimplesitemapManager $manager
+   * @param SimplesitemapManager $manager
    *   Sitemap manager.
    *
    * @return array
