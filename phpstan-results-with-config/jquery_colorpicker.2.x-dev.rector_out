modules/contrib/jquery_colorpicker/includes/jquery_colorpicker.theme.inc
modules/contrib/jquery_colorpicker/jquery_colorpicker.install
modules/contrib/jquery_colorpicker/jquery_colorpicker.module
modules/contrib/jquery_colorpicker/src/Element/JQueryColorpickerElement.php
modules/contrib/jquery_colorpicker/src/Plugin/Field/FieldFormatter/JqueryColorpickerColorDisplayFormatter.php
modules/contrib/jquery_colorpicker/src/Plugin/Field/FieldFormatter/JqueryColorpickerDisplayFormatterBase.php
modules/contrib/jquery_colorpicker/src/Plugin/Field/FieldFormatter/JqueryColorpickerRawHexDisplayFormatter.php
modules/contrib/jquery_colorpicker/src/Plugin/Field/FieldFormatter/JqueryColorpickerRawRgbDisplayFormatter.php
modules/contrib/jquery_colorpicker/src/Plugin/Field/FieldFormatter/JqueryColorpickerTextDisplayFormatter.php
modules/contrib/jquery_colorpicker/src/Plugin/Field/FieldType/JqueryColorpickerColorItem.php
modules/contrib/jquery_colorpicker/src/Plugin/Field/FieldWidget/JQueryColorpickerWidget.php
modules/contrib/jquery_colorpicker/tests/src/Unit/Element/JQueryColorpickerTest.php
modules/contrib/jquery_colorpicker/tests/src/Unit/Service/jQueryColorpickerServiceTest.php

4 files with changes
====================

1) modules/contrib/jquery_colorpicker/tests/src/Unit/Service/jQueryColorpickerServiceTest.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $container = new ContainerBuilder();
     $container->set('string_translation', $this->getStringTranslationStub());
     \Drupal::setContainer($container);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/jquery_colorpicker/tests/src/Unit/Element/JQueryColorpickerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Test\jquery_colorpicker\Element;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Tests\UnitTestCase;
 use Drupal\jquery_colorpicker\Element\JQueryColorpickerElement;
@@ @@
  */
 class JQueryColorpickerTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::valueCallback
    *
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/jquery_colorpicker/src/Element/JQueryColorpickerElement.php:111

    ---------- begin diff ----------
@@ @@

     // Since we know the background, we can then get the URL of it to pass to
     // the javascript function.
-    $background_url = file_create_url('vendor://jaypan/jquery-colorpicker/images/' . $background);
+    $background_url = \Drupal::service('file_url_generator')->generateAbsoluteString('vendor://jaypan/jquery-colorpicker/images/' . $background);

     // Next we determine what the default value for the form element is. This
     // will also be passed to the javascript function.
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/jquery_colorpicker/jquery_colorpicker.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\field\FieldStorageConfigInterface;
+use Drupal\field\FieldConfigInterface;
 /**
  * @file
  * Holds install hooks for the jQuery Colorpicker module.
@@ @@
   $database = \Drupal::database();

   if ($field_storage_configs = $entity_manager->getStorage('field_storage_config')->loadByProperties(['type' => 'jquery_colorpicker'])) {
-    /** @var \Drupal\field\FieldStorageConfigInterface $field_storage */
+    /** @var FieldStorageConfigInterface $field_storage */
     // Update the field storage settings.
     foreach ($field_storage_configs as $field_storage) {
       $entity_type_id = $field_storage->getTargetEntityTypeId();
@@ @@
       // Update the field settings.
       $field_name = $field_storage->getName();
       if ($fields = $entity_manager->getStorage('field_config')->loadByProperties(['field_name' => $field_name, 'entity_type' => $field_storage->getTargetEntityTypeId()])) {
-        /** @var \Drupal\field\FieldConfigInterface $field */
+        /** @var FieldConfigInterface $field */
         // Update the field settings.
         foreach ($fields as $field) {
           $new_field = $field->toArray();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

