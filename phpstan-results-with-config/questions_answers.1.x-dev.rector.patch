diff --git a/questions_answers.tokens.inc b/questions_answers.tokens.inc
index dc78135..83f1a55 100644
--- a/questions_answers.tokens.inc
+++ b/questions_answers.tokens.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\questions_answers\QuestionInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for questions and answers data.
@@ -153,7 +154,7 @@ function questions_answers_tokens($type, $tokens, array $data, array $options, B
   }
   // Handle question types.
   elseif ($type == 'question' && !empty($data['question'])) {
-    /** @var \Drupal\questions_answers\QuestionInterface $question */
+    /** @var QuestionInterface $question */
     $question = $data['question'];
 
     foreach ($tokens as $name => $original) {
@@ -223,7 +224,7 @@ function questions_answers_tokens($type, $tokens, array $data, array $options, B
   }
   // Handle answer types.
   elseif ($type == 'answer' && !empty($data['answer'])) {
-    /** @var \Drupal\questions_answers\QuestionInterface $question */
+    /** @var QuestionInterface $question */
     $answer = $data['answer'];
 
     foreach ($tokens as $name => $original) {
diff --git a/src/AnswerInterface.php b/src/AnswerInterface.php
index 0c7bd62..9a2137a 100644
--- a/src/AnswerInterface.php
+++ b/src/AnswerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\questions_answers;
 
+use Drupal\questions_answers\Entity\Question;
 /**
  * Provides an interface defining a question entity.
  */
@@ -66,7 +67,7 @@ interface AnswerInterface extends QuestionAnswerInterface {
   /**
    * Get the question this answer is associated with.
    *
-   * @return Drupal\questions_answers\Entity\Question
+   * @return Question
    *   The question associated with this answer.
    */
   public function getQuestion();
diff --git a/src/Controller/QuestionsAnswersController.php b/src/Controller/QuestionsAnswersController.php
index 676d961..6f25aab 100644
--- a/src/Controller/QuestionsAnswersController.php
+++ b/src/Controller/QuestionsAnswersController.php
@@ -14,14 +14,14 @@ class QuestionsAnswersController extends ControllerBase {
   /**
    * System Manager Service.
    *
-   * @var \Drupal\system\SystemManager
+   * @var SystemManager
    */
   protected $systemManager;
 
   /**
    * Constructs a new QuestionsAnswersController.
    *
-   * @param \Drupal\system\SystemManager $systemManager
+   * @param SystemManager $systemManager
    *   System manager service.
    */
   public function __construct(SystemManager $systemManager) {
diff --git a/src/Entity/Answer.php b/src/Entity/Answer.php
index abea7aa..c261d50 100644
--- a/src/Entity/Answer.php
+++ b/src/Entity/Answer.php
@@ -261,7 +261,7 @@ class Answer extends ContentEntityBase implements AnswerInterface {
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+    /** @var BaseFieldDefinition[] $fields */
     $fields = parent::baseFieldDefinitions($entity_type);
     $fields += static::publishedBaseFieldDefinitions($entity_type);
 
diff --git a/src/Entity/Question.php b/src/Entity/Question.php
index 7f3508a..cac737f 100644
--- a/src/Entity/Question.php
+++ b/src/Entity/Question.php
@@ -265,7 +265,7 @@ class Question extends ContentEntityBase implements QuestionInterface {
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+    /** @var BaseFieldDefinition[] $fields */
     $fields = parent::baseFieldDefinitions($entity_type);
     $fields += static::publishedBaseFieldDefinitions($entity_type);
 
diff --git a/src/Form/AnswerForm.php b/src/Form/AnswerForm.php
index 4949912..cdaa943 100644
--- a/src/Form/AnswerForm.php
+++ b/src/Form/AnswerForm.php
@@ -22,42 +22,42 @@ class AnswerForm extends FormBase {
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Mail\MailManager
+   * @var MailManager
    */
   protected $mailManager;
 
   /**
    * Drupal renderer service.
    *
-   * @var Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $rendererService;
 
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $languageManager;
 
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $tokenService;
 
   /**
    * Question being answered.
    *
-   * @var Drupal\questions_answers\Entity\Question
+   * @var Question
    */
   protected $question;
 
@@ -71,7 +71,7 @@ class AnswerForm extends FormBase {
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -104,7 +104,7 @@ class AnswerForm extends FormBase {
   /**
    * Sets the question being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Question $question
+   * @param Question $question
    *   The question we are building the form for.
    */
   public function setQuestion(Question $question) {
diff --git a/src/Form/HelpfulForm.php b/src/Form/HelpfulForm.php
index 6e8d1ab..12321b0 100644
--- a/src/Form/HelpfulForm.php
+++ b/src/Form/HelpfulForm.php
@@ -17,21 +17,21 @@ class HelpfulForm extends FormBase {
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal session manager service container.
    *
-   * @var Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;
 
   /**
    * Answer generating a help form for.
    *
-   * @var Drupal\questions_answers\Entity\Answer
+   * @var Answer
    */
   protected $answer;
 
@@ -56,7 +56,7 @@ class HelpfulForm extends FormBase {
   /**
    * Sets the answer being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Answer $answer
+   * @param Answer $answer
    *   The answer we are building the form for.
    */
   public function setAnswer(Answer $answer) {
diff --git a/src/Form/ModerationQueueForm.php b/src/Form/ModerationQueueForm.php
index e3fcaa4..6fbdae6 100644
--- a/src/Form/ModerationQueueForm.php
+++ b/src/Form/ModerationQueueForm.php
@@ -18,14 +18,14 @@ class ModerationQueueForm extends FormBase {
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
diff --git a/src/Form/QuestionForm.php b/src/Form/QuestionForm.php
index 74449ad..4cba8b5 100644
--- a/src/Form/QuestionForm.php
+++ b/src/Form/QuestionForm.php
@@ -21,35 +21,35 @@ class QuestionForm extends FormBase {
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Mail\MailManager
+   * @var MailManager
    */
   protected $mailManager;
 
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * Drupal renderer service.
    *
-   * @var Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $rendererService;
 
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $tokenService;
 
diff --git a/src/Form/ReportAnswerForm.php b/src/Form/ReportAnswerForm.php
index 7771a81..401d3b2 100644
--- a/src/Form/ReportAnswerForm.php
+++ b/src/Form/ReportAnswerForm.php
@@ -17,21 +17,21 @@ class ReportAnswerForm extends FormBase {
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal session manager service container.
    *
-   * @var Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;
 
   /**
    * Answer being reported.
    *
-   * @var Drupal\questions_answers\Entity\Answer
+   * @var Answer
    */
   protected $answer;
 
@@ -56,7 +56,7 @@ class ReportAnswerForm extends FormBase {
   /**
    * Sets the answer being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Answer $answer
+   * @param Answer $answer
    *   The answer we are building the form for.
    */
   public function setAnswer(Answer $answer) {
diff --git a/src/Form/ReportQuestionForm.php b/src/Form/ReportQuestionForm.php
index b2f7a4d..5ee7140 100644
--- a/src/Form/ReportQuestionForm.php
+++ b/src/Form/ReportQuestionForm.php
@@ -17,21 +17,21 @@ class ReportQuestionForm extends FormBase {
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal session manager service container.
    *
-   * @var Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;
 
   /**
    * Question being reported.
    *
-   * @var Drupal\questions_answers\Entity\Question
+   * @var Question
    */
   protected $question;
 
@@ -56,7 +56,7 @@ class ReportQuestionForm extends FormBase {
   /**
    * Sets the question being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Question $question
+   * @param Question $question
    *   The question we are building the form for.
    */
   public function setQuestion(Question $question) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index e253670..4b0fcd6 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -15,7 +15,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
diff --git a/src/Form/SubscribeForm.php b/src/Form/SubscribeForm.php
index a1441f9..3ce9518 100644
--- a/src/Form/SubscribeForm.php
+++ b/src/Form/SubscribeForm.php
@@ -16,14 +16,14 @@ class SubscribeForm extends FormBase {
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Question being reported.
    *
-   * @var Drupal\questions_answers\Entity\Question
+   * @var Question
    */
   protected $question;
 
@@ -46,7 +46,7 @@ class SubscribeForm extends FormBase {
   /**
    * Sets the question being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Question $question
+   * @param Question $question
    *   The question we are building the form for.
    */
   public function setQuestion(Question $question) {
diff --git a/src/Form/UnsubscribeForm.php b/src/Form/UnsubscribeForm.php
index 49d2b8b..de76e2c 100644
--- a/src/Form/UnsubscribeForm.php
+++ b/src/Form/UnsubscribeForm.php
@@ -21,21 +21,21 @@ class UnsubscribeForm extends ConfirmFormBase {
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -62,7 +62,7 @@ class UnsubscribeForm extends ConfirmFormBase {
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    */
   public function access(AccountInterface $account) {
diff --git a/src/Plugin/Block/ModerationAlerts.php b/src/Plugin/Block/ModerationAlerts.php
index 739bbb5..11e4de4 100644
--- a/src/Plugin/Block/ModerationAlerts.php
+++ b/src/Plugin/Block/ModerationAlerts.php
@@ -23,7 +23,7 @@ class ModerationAlerts extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
diff --git a/src/Plugin/Field/FieldFormatter/QuestionsAnswersFormatter.php b/src/Plugin/Field/FieldFormatter/QuestionsAnswersFormatter.php
index 633ba20..5b336fd 100644
--- a/src/Plugin/Field/FieldFormatter/QuestionsAnswersFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/QuestionsAnswersFormatter.php
@@ -41,42 +41,42 @@ class QuestionsAnswersFormatter extends FormatterBase implements ContainerFactor
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;
 
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Drupal container.
    *
-   * @var Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;
 
diff --git a/src/Plugin/Field/FieldWidget/QuestionsAnswersWidget.php b/src/Plugin/Field/FieldWidget/QuestionsAnswersWidget.php
index c060802..802176b 100644
--- a/src/Plugin/Field/FieldWidget/QuestionsAnswersWidget.php
+++ b/src/Plugin/Field/FieldWidget/QuestionsAnswersWidget.php
@@ -32,21 +32,21 @@ class QuestionsAnswersWidget extends WidgetBase implements ContainerFactoryPlugi
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * Drupal entity type manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
diff --git a/src/Plugin/views/field/AnswerList.php b/src/Plugin/views/field/AnswerList.php
index b80d3cc..3097d07 100644
--- a/src/Plugin/views/field/AnswerList.php
+++ b/src/Plugin/views/field/AnswerList.php
@@ -36,7 +36,7 @@ class AnswerList extends FieldPluginBase {
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
diff --git a/src/Plugin/views/field/AuthorName.php b/src/Plugin/views/field/AuthorName.php
index fbaadb9..ff14277 100644
--- a/src/Plugin/views/field/AuthorName.php
+++ b/src/Plugin/views/field/AuthorName.php
@@ -51,7 +51,7 @@ class AuthorName extends FieldPluginBase {
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
diff --git a/src/Plugin/views/field/HelpfulVotes.php b/src/Plugin/views/field/HelpfulVotes.php
index 43dbd1e..089e7c2 100644
--- a/src/Plugin/views/field/HelpfulVotes.php
+++ b/src/Plugin/views/field/HelpfulVotes.php
@@ -54,7 +54,7 @@ class HelpfulVotes extends FieldPluginBase {
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
diff --git a/src/Plugin/views/field/ParentEntity.php b/src/Plugin/views/field/ParentEntity.php
index 7e0f094..c667d2a 100644
--- a/src/Plugin/views/field/ParentEntity.php
+++ b/src/Plugin/views/field/ParentEntity.php
@@ -34,7 +34,7 @@ class ParentEntity extends FieldPluginBase {
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
diff --git a/src/Plugin/views/field/Reported.php b/src/Plugin/views/field/Reported.php
index a858feb..63a6569 100644
--- a/src/Plugin/views/field/Reported.php
+++ b/src/Plugin/views/field/Reported.php
@@ -55,7 +55,7 @@ class Reported extends FieldPluginBase {
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
diff --git a/src/Plugin/views/field/Subscribed.php b/src/Plugin/views/field/Subscribed.php
index 06c7630..f343a07 100644
--- a/src/Plugin/views/field/Subscribed.php
+++ b/src/Plugin/views/field/Subscribed.php
@@ -55,7 +55,7 @@ class Subscribed extends FieldPluginBase {
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
diff --git a/src/QuestionViewsData.php b/src/QuestionViewsData.php
index fb9987e..d480d84 100644
--- a/src/QuestionViewsData.php
+++ b/src/QuestionViewsData.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\questions_answers;
 
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\views\EntityViewsData;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ -27,66 +28,66 @@ class QuestionViewsData extends EntityViewsData {
   /**
    * Entity type for this views data handler instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface
+   * @var EntityTypeInterface
    */
   protected $entityType;
 
   /**
    * The storage used for this entity type.
    *
-   * @var \Drupal\Core\Entity\Sql\SqlEntityStorageInterface
+   * @var SqlEntityStorageInterface
    */
   protected $storage;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The translation manager.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translationManager;
 
   /**
    * The field storage definitions for all base fields of the entity type.
    *
-   * @var \Drupal\Core\Field\FieldStorageDefinitionInterface[]
+   * @var FieldStorageDefinitionInterface[]
    */
   protected $fieldStorageDefinitions;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Constructs an EntityViewsData object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type to provide views integration for.
-   * @param \Drupal\Core\Entity\Sql\SqlEntityStorageInterface $storage_controller
+   * @param SqlEntityStorageInterface $storage_controller
    *   The storage handler used for this entity type.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The translation manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(EntityTypeInterface $entity_type, SqlEntityStorageInterface $storage_controller, EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, TranslationInterface $translation_manager, EntityFieldManagerInterface $entity_field_manager = NULL) {
