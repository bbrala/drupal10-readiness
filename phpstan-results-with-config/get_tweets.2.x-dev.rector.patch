diff --git a/get_tweets.info.yml b/get_tweets.info.yml
index 09aeea6..95a51e8 100644
--- a/get_tweets.info.yml
+++ b/get_tweets.info.yml
@@ -1,6 +1,6 @@
 name: Get Tweets
 description: 'Provides functionality for import tweets in Drupal nodes.'
-core_version_requirement: ^8.8.3 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Social
 type: module
 configure: get_tweets.config_form
diff --git a/src/Form/GetTweetsSettings.php b/src/Form/GetTweetsSettings.php
index 6428636..4e7d0ec 100644
--- a/src/Form/GetTweetsSettings.php
+++ b/src/Form/GetTweetsSettings.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\get_tweets\Form;
 
+use Drupal\core\datetime\DateFormatter;
 use Abraham\TwitterOAuth\TwitterOAuth;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
@@ -17,16 +18,16 @@ class GetTweetsSettings extends ConfigFormBase {
   /**
    * Date formatter.
    *
-   * @var \Drupal\core\datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, DateFormatterInterface $date_formatter) {
@@ -185,7 +186,7 @@ class GetTweetsSettings extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addMore(array &$form, FormStateInterface $form_state) {
@@ -200,7 +201,7 @@ class GetTweetsSettings extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function removeCallback(array &$form, FormStateInterface $form_state) {
@@ -216,7 +217,7 @@ class GetTweetsSettings extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/GetTweetsBase.php b/src/GetTweetsBase.php
index 6dbe5c3..e53de11 100644
--- a/src/GetTweetsBase.php
+++ b/src/GetTweetsBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\get_tweets;
 
+use Drupal\node\NodeStorage;
+use Drupal\Core\Config\Config;
 use Abraham\TwitterOAuth\TwitterOAuth;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -18,50 +20,50 @@ class GetTweetsBase {
   /**
    * The node storage.
    *
-   * @var \Drupal\node\NodeStorage
+   * @var NodeStorage
    */
   protected $nodeStorage;
 
   /**
    * The GetTweets settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $getTweetsSettings;
 
   /**
    * Drupal logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructs a GetTweetsBase object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   The logger.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   A Database connection to use for reading and writing configuration data.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger, FileSystemInterface $file_system, Connection $connection) {
@@ -84,7 +86,7 @@ class GetTweetsBase {
    * @param string|null $oauth_token_secret
    *   The Client Token Secret (optional).
    *
-   * @return \Abraham\TwitterOAuth\TwitterOAuth|null
+   * @return TwitterOAuth|null
    *   Returns TwitterOAuth object or null.
    */
   public function getTwitterConnection($consumer_key, $consumer_secret, $oauth_token = NULL, $oauth_token_secret = NULL) {
@@ -167,7 +169,7 @@ class GetTweetsBase {
   public function createNode(\stdClass $tweet, $tweet_type = 'statuses/user_timeline', $query_name = '') {
     $render_tweet = new RenderTweet($tweet);
 
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $this->nodeStorage->create([
       'type' => 'tweet',
       'field_tweet_id' => $tweet->id,
@@ -286,7 +288,7 @@ class GetTweetsBase {
   /**
    * Saves the twitter asset on a node field.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node instance.
    * @param \stdClass $media
    *   Twitter media obj.
@@ -301,7 +303,7 @@ class GetTweetsBase {
         $data &&
         $this->fileSystem->prepareDirectory($dir, FileSystemInterface::CREATE_DIRECTORY)
       ) {
-        $file = file_save_data($data, $dir . $path_info['basename'], FileSystemInterface::EXISTS_RENAME);
+        $file = \Drupal::service('file.repository')->writeData($data, $dir . $path_info['basename'], FileSystemInterface::EXISTS_RENAME);
         $node->set('field_tweet_local_image', $file);
       }
     }
diff --git a/src/RenderTweet.php b/src/RenderTweet.php
index 6ae6a59..a80b79c 100644
--- a/src/RenderTweet.php
+++ b/src/RenderTweet.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\get_tweets;
 
+use Drupal\Core\GeneratedLink;
 use Drupal\Core\Url;
 use Drupal\Core\Link;
 
@@ -69,7 +70,7 @@ class RenderTweet {
    * @param string $uri
    *   Link for replace.
    *
-   * @return \Drupal\Core\GeneratedLink
+   * @return GeneratedLink
    *   Link object.
    */
   private function createLink($text, $uri) {
diff --git a/tests/src/Functional/GetTweetsTest.php b/tests/src/Functional/GetTweetsTest.php
index 8103527..bdd22b0 100644
--- a/tests/src/Functional/GetTweetsTest.php
+++ b/tests/src/Functional/GetTweetsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\get_tweets\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -14,7 +15,7 @@ class GetTweetsTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -33,7 +34,7 @@ class GetTweetsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer site configuration',
@@ -62,9 +63,10 @@ class GetTweetsTest extends BrowserTestBase {
       'consumer_key' => 'invalid',
       'consumer_secret' => 'invalid',
     ];
+    $this->drupalGet('admin/config/services/get-tweets');
 
     // Post the form.
-    $this->drupalPostForm('admin/config/services/get-tweets', $edit, t('Save configuration'));
+    $this->submitForm($edit, t('Save configuration'));
 
     $this->assertSession()->pageTextContains(t('Error: "Could not authenticate you." on query: "@query"', [
       '@query' => $test_query,
