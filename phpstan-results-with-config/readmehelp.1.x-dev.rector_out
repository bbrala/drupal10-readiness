modules/contrib/readmehelp/readmehelp.install
modules/contrib/readmehelp/readmehelp.module
modules/contrib/readmehelp/src/Controller/ReadmeHelpController.php
modules/contrib/readmehelp/src/Plugin/Filter/ReadmehelpMarkdown.php
modules/contrib/readmehelp/src/Plugin/HelpSection/ReadmeHookHelpSection.php
modules/contrib/readmehelp/src/ReadmeHelpInterface.php
modules/contrib/readmehelp/src/ReadmeHelpMarkdownConverter.php
modules/contrib/readmehelp/tests/modules/readmehelp_test/readmehelp_test.module
modules/contrib/readmehelp/tests/src/Functional/ReadmeHelpTest.php

3 files with changes
====================

1) modules/contrib/readmehelp/tests/src/Functional/ReadmeHelpTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\readmehelp\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * The admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser(['access administration pages']);
   }
@@ @@
     $this->getSession()->getPage()->clickLink('README Help test');
     $this->assertSession()->addressMatches('/\/admin\/help\/readmehelp_test$/');
     // Ensure the actual help page is displayed to avoid a false positive.
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     $this->assertSession()->responseContains('<h1 class="h-1"><a id="readme-help-test-module" href="#readme-help-test-module" class="anchor">#</a> README Help Test module</h1>');
     $this->assertSession()->responseContains('<strong>Asterisk Bold</strong>');
@@ @@
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('admin/help/readmehelp_test');
     // Ensure the actual help page is displayed to avoid a false positive.
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // The PHP file tokens should be replaced by the specified snippets.
     $this->assertSession()->pageTextNotContains('@PHPFILE: readmehelp_test/readmehelp_test.module LINE:19 PADD:1 :PHPFILE@');
     $this->assertSession()->pageTextNotContains('@PHPFILE: readmehelp_test/readmehelp_test.module :PHPFILE@');
    ----------- end diff -----------

Applied rules:
 * AssertNoEscapedRector
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/readmehelp/src/ReadmeHelpMarkdownConverter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\readmehelp;

+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Render\Markup;
 use Drupal\Component\Utility\Xss;
 use Drupal\Component\Utility\Html;
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   public $moduleHandler;

@@ @@
   /**
    * The request context.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   public $requestContext;

@@ @@
   /**
    * The filter plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $filterManager;

@@ @@
   /**
    * Constructs a new ReadmeHelpMarkdownConverter object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Routing\RequestContext $request_context
+   * @param RequestContext $request_context
    *   The request context.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $filter_manager
+   * @param PluginManagerInterface $filter_manager
    *   The filter manager.
    * @param string $app_root
    *   The app root.
@@ @@
    * @param string $file
    *   (optional) The alternative directory or file path.
    *
-   * @return string|\Drupal\Component\Render\MarkupInterface
+   * @return string|MarkupInterface
    *   A safe string.
    *
    * @see ::convertMarkdownText()
@@ @@
    * @param bool $markup
    *   Whether to return the markup object instead of a string.
    *
-   * @return string|\Drupal\Component\Render\MarkupInterface
+   * @return string|MarkupInterface
    *   A safe highlighted snippet.
    *
    * @see http://php.net/manual/en/function.highlight-file.php
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/readmehelp/readmehelp.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\readmehelp\ReadmeHelpMarkdownConverter;
 /**
  * @file
  * Contains readmehelp.module.
@@ @@
  * @param string $file_path
  *   (optional) The alternative file path.
  *
- * @return \Drupal\readmehelp\ReadmeHelpMarkdownConverter|string
+ * @return ReadmeHelpMarkdownConverter|string
  *   The markdown converter service or markup generated for a file.
  */
 function readmehelp_converter_service($module_name = NULL, $file_path = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

