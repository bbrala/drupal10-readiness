diff --git a/modules/video_sitemap_video_embed/src/Plugin/video_sitemap/VideoLocation/VideoEmbed.php b/modules/video_sitemap_video_embed/src/Plugin/video_sitemap/VideoLocation/VideoEmbed.php
index ade0368..567c679 100644
--- a/modules/video_sitemap_video_embed/src/Plugin/video_sitemap/VideoLocation/VideoEmbed.php
+++ b/modules/video_sitemap_video_embed/src/Plugin/video_sitemap/VideoLocation/VideoEmbed.php
@@ -93,7 +93,7 @@ class VideoEmbed extends VideoLocationPluginBase {
   /**
    * Get Media video provider.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media entity.
    *
    * @return mixed
@@ -107,7 +107,7 @@ class VideoEmbed extends VideoLocationPluginBase {
   /**
    * Get the primary value stored in the Media source field.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media entity..
    *
    * @return mixed
diff --git a/src/Annotation/VideoLocation.php b/src/Annotation/VideoLocation.php
index 716ffbd..e64e1c5 100644
--- a/src/Annotation/VideoLocation.php
+++ b/src/Annotation/VideoLocation.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video_sitemap\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class VideoLocation extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/BatchTrait.php b/src/BatchTrait.php
index 350e357..abd5f89 100644
--- a/src/BatchTrait.php
+++ b/src/BatchTrait.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\video_sitemap;
 
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Core\Queue\QueueWorkerManagerInterface;
+use Drupal\Core\Queue\QueueFactory;
 use Drupal\Core\Queue\RequeueException;
 use Drupal\Core\Queue\SuspendQueueException;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -57,12 +60,12 @@ trait BatchTrait {
    * @param array $context
    *   The batch context.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public static function processQueue(array &$context) {
-    /** @var \Drupal\Core\Queue\QueueWorkerManagerInterface $queue_manager */
+    /** @var QueueWorkerManagerInterface $queue_manager */
     $queue_manager = \Drupal::service('plugin.manager.queue_worker');
-    /** @var \Drupal\Core\Queue\QueueFactory $queue_factory */
+    /** @var QueueFactory $queue_factory */
     $queue_factory = \Drupal::service('queue');
     $queue_name = 'node_with_video_queue';
 
@@ -111,7 +114,7 @@ trait BatchTrait {
    *   The batch context.
    */
   public static function generateSitemapFromIndex(array &$context) {
-    /** @var \Drupal\video_sitemap\VideoSitemapGenerator $generator */
+    /** @var VideoSitemapGenerator $generator */
     $generator = \Drupal::service('video_sitemap.generator');
     $generator->writeSitemap();
   }
diff --git a/src/Controller/VideoSitemapController.php b/src/Controller/VideoSitemapController.php
index b09d5b6..81845ad 100644
--- a/src/Controller/VideoSitemapController.php
+++ b/src/Controller/VideoSitemapController.php
@@ -19,14 +19,14 @@ class VideoSitemapController extends ControllerBase {
   /**
    * The video sitemap generator service.
    *
-   * @var \Drupal\video_sitemap\VideoSitemapGenerator
+   * @var VideoSitemapGenerator
    */
   protected $generator;
 
   /**
    * VideoSitemapController constructor.
    *
-   * @param \Drupal\video_sitemap\VideoSitemapGenerator $generator
+   * @param VideoSitemapGenerator $generator
    *   The video sitemap generator service.
    */
   public function __construct(VideoSitemapGenerator $generator) {
@@ -45,7 +45,7 @@ class VideoSitemapController extends ControllerBase {
   /**
    * Returns the whole sitemap or its requested chunk.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @throws NotFoundHttpException
diff --git a/src/Form/VideoSitemapGenerateForm.php b/src/Form/VideoSitemapGenerateForm.php
index 05042c9..3d952a7 100644
--- a/src/Form/VideoSitemapGenerateForm.php
+++ b/src/Form/VideoSitemapGenerateForm.php
@@ -15,14 +15,14 @@ class VideoSitemapGenerateForm extends FormBase {
   /**
    * The Video Sitemap generator service.
    *
-   * @var \Drupal\video_sitemap\VideoSitemapGenerator
+   * @var VideoSitemapGenerator
    */
   protected $generator;
 
   /**
    * Constructs a new VideoSitemapGenerateForm object.
    *
-   * @param \Drupal\video_sitemap\VideoSitemapGenerator $video_sitemap_generator
+   * @param VideoSitemapGenerator $video_sitemap_generator
    *   The Video Sitemap generator service.
    */
   public function __construct(VideoSitemapGenerator $video_sitemap_generator) {
diff --git a/src/Form/VideoSitemapSettingsForm.php b/src/Form/VideoSitemapSettingsForm.php
index b8c87fb..83deed6 100644
--- a/src/Form/VideoSitemapSettingsForm.php
+++ b/src/Form/VideoSitemapSettingsForm.php
@@ -24,41 +24,41 @@ class VideoSitemapSettingsForm extends ConfigFormBase {
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * Video location plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $locationManager;
 
   /**
    * Entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * VideoSitemapSettingsForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $location_manager
+   * @param PluginManagerInterface $location_manager
    *   Video location plugin manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeBundleInfoInterface $entity_type_bundle_info, PluginManagerInterface $location_manager, EntityFieldManagerInterface $entity_field_manager, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/QueueWorker/NodeWithVideoQueue.php b/src/Plugin/QueueWorker/NodeWithVideoQueue.php
index 0a68bb5..5405999 100755
--- a/src/Plugin/QueueWorker/NodeWithVideoQueue.php
+++ b/src/Plugin/QueueWorker/NodeWithVideoQueue.php
@@ -22,14 +22,14 @@ class NodeWithVideoQueue extends QueueWorkerBase implements ContainerFactoryPlug
   /**
    * The Video Sitemap generator service.
    *
-   * @var \Drupal\video_sitemap\VideoSitemapGenerator
+   * @var VideoSitemapGenerator
    */
   protected $generator;
 
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -42,9 +42,9 @@ class NodeWithVideoQueue extends QueueWorkerBase implements ContainerFactoryPlug
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\video_sitemap\VideoSitemapGenerator $video_sitemap_generator
+   * @param VideoSitemapGenerator $video_sitemap_generator
    *   The Video Sitemap generator service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, VideoSitemapGenerator $video_sitemap_generator, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/video_sitemap/VideoLocation/VideoFile.php b/src/Plugin/video_sitemap/VideoLocation/VideoFile.php
index 70e3b1a..af1988d 100644
--- a/src/Plugin/video_sitemap/VideoLocation/VideoFile.php
+++ b/src/Plugin/video_sitemap/VideoLocation/VideoFile.php
@@ -20,7 +20,7 @@ class VideoFile extends VideoLocationPluginBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -33,7 +33,7 @@ class VideoFile extends VideoLocationPluginBase {
    *   The plugin id.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
@@ -63,7 +63,7 @@ class VideoFile extends VideoLocationPluginBase {
     if (is_numeric($target_id)) {
       $file = $storage->load($target_id);
       if (!empty($file)) {
-        return file_create_url($file->getFileUri());
+        return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       }
     }
     return '';
@@ -85,7 +85,7 @@ class VideoFile extends VideoLocationPluginBase {
     if (is_numeric($target_id)) {
       $file = $storage->load($target_id);
       if (!empty($file)) {
-        return file_create_url($file->getFileUri());
+        return \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       }
     }
     return '';
@@ -94,7 +94,7 @@ class VideoFile extends VideoLocationPluginBase {
   /**
    * Get the primary value stored in the Media source field.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media entity..
    *
    * @return mixed
diff --git a/src/VideoLocationPluginInterface.php b/src/VideoLocationPluginInterface.php
index 27f1189..976e482 100644
--- a/src/VideoLocationPluginInterface.php
+++ b/src/VideoLocationPluginInterface.php
@@ -15,7 +15,7 @@ interface VideoLocationPluginInterface extends PluginInspectionInterface {
    *
    * This is used for <video:thumbnail_loc> sitemap tag.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   A media item..
    *
    * @return string
@@ -28,7 +28,7 @@ interface VideoLocationPluginInterface extends PluginInspectionInterface {
    *
    * This is used for <video:player_loc> sitemap tag.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   A media item.
    *
    * @return string
@@ -41,7 +41,7 @@ interface VideoLocationPluginInterface extends PluginInspectionInterface {
    *
    * This is used for <video:content_loc> sitemap tag.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   A media item.
    *
    * @return string
diff --git a/src/VideoSitemapEntityManager.php b/src/VideoSitemapEntityManager.php
index cef6d7c..ce2e6c6 100644
--- a/src/VideoSitemapEntityManager.php
+++ b/src/VideoSitemapEntityManager.php
@@ -16,23 +16,23 @@ class VideoSitemapEntityManager {
   /**
    * The queue service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructs a VideoSitemapGenerator object.
    *
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The Database connection.
    */
   public function __construct(QueueFactory $queue_factory, Connection $connection) {
@@ -43,7 +43,7 @@ class VideoSitemapEntityManager {
   /**
    * Add entity item to the index queue.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity object.
    */
   public function addEntityToQueue(EntityInterface $entity) {
@@ -54,7 +54,7 @@ class VideoSitemapEntityManager {
   /**
    * Deletes entity record from index table.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity object.
    */
   public function deleteLocRecord(EntityInterface $entity) {
diff --git a/src/VideoSitemapGenerator.php b/src/VideoSitemapGenerator.php
index 5579a10..721810b 100644
--- a/src/VideoSitemapGenerator.php
+++ b/src/VideoSitemapGenerator.php
@@ -2,6 +2,13 @@
 
 namespace Drupal\video_sitemap;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Field\FieldDefinitionInterface;
+use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Component\Utility\Xss;
@@ -49,93 +56,93 @@ class VideoSitemapGenerator {
   /**
    * The queue service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * The queue plugin manager.
    *
-   * @var \Drupal\Core\Queue\QueueWorkerManagerInterface
+   * @var QueueWorkerManagerInterface
    */
   protected $queueManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Video location plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $locationManager;
 
   /**
    * The module config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The Sitemap writer service.
    *
-   * @var \Drupal\video_sitemap\SitemapWriter
+   * @var SitemapWriter
    */
   protected $writer;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
    * Constructs a VideoSitemapGenerator object.
    *
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue service.
-   * @param \Drupal\Core\Queue\QueueWorkerManagerInterface $queue_manager
+   * @param QueueWorkerManagerInterface $queue_manager
    *   The queue plugin manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $location_manager
+   * @param PluginManagerInterface $location_manager
    *   Video location plugin manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The config factory.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The Database connection.
-   * @param \Drupal\video_sitemap\SitemapWriter $sitemap_writer
+   * @param SitemapWriter $sitemap_writer
    *   The Sitemap writer service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   The module handler service.
    */
   public function __construct(
@@ -339,10 +346,10 @@ class VideoSitemapGenerator {
   /**
    * Stores videos used on a node as a sitemap index data.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node entity.
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    * @throws \Exception
    */
   public function processVideoUsageOnNode(NodeInterface $node) {
@@ -368,15 +375,15 @@ class VideoSitemapGenerator {
   /**
    * Searches for videos used on a node.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity item.
    *
    * @return array
    *   Sitemap index data for a give node.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
    */
   private function getMediaValuesFromEntity(EntityInterface $entity) {
     $records = [];
@@ -427,14 +434,14 @@ class VideoSitemapGenerator {
   /**
    * Callback to find any children referenced entities.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity item.
    *
    * @return array
    *   Child items.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getChildren(EntityInterface $entity) {
     $children = [];
@@ -457,7 +464,7 @@ class VideoSitemapGenerator {
   /**
    * Gets an entity type fields of entity reference type.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity item.
    * @param boolean $target_media
    *   Flag if the searched type is Media.
@@ -474,12 +481,12 @@ class VideoSitemapGenerator {
       return $fields;
     }
 
-    /** @var \Drupal\Core\Field\FieldDefinitionInterface[] $fields */
+    /** @var FieldDefinitionInterface[] $fields */
     $fields_defintion = \Drupal::getContainer()
       ->get('entity_field.manager')
       ->getFieldDefinitions($entity->getEntityTypeId(), $entity->bundle());
     foreach ($fields_defintion as $key => $field) {
-      /** @var \Drupal\Core\Field\BaseFieldDefinition $field */
+      /** @var BaseFieldDefinition $field */
       if (!in_array($field->getType(), ['entity_reference', 'entity_reference_revisions'])) {
         continue;
       }
@@ -500,7 +507,7 @@ class VideoSitemapGenerator {
   /**
    * Gets Media entity description field value.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media item.
    *
    * @return string
diff --git a/video_sitemap.module b/video_sitemap.module
index 18ccbe7..2ce30db 100644
--- a/video_sitemap.module
+++ b/video_sitemap.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\video_sitemap\VideoSitemapGenerator;
+use Drupal\video_sitemap\VideoSitemapEntityManager;
 /**
  * @file
  * Main module file.
@@ -15,7 +17,7 @@ function video_sitemap_cron() {
   if (!$config->get('cron_generate')) {
     return;
   }
-  /** @var \Drupal\video_sitemap\VideoSitemapGenerator $generator */
+  /** @var VideoSitemapGenerator $generator */
   $generator = \Drupal::service('video_sitemap.generator');
   // If the minimum sitemap lifetime hasn't been passed, skip.
   $last_generated = $generator->getLastGenerated();
@@ -32,7 +34,7 @@ function video_sitemap_cron() {
  * Implements hook_ENTITY_TYPE_insert().
  */
 function video_sitemap_node_insert(EntityInterface $entity) {
-  /** @var \Drupal\video_sitemap\VideoSitemapEntityManager $entity_manager */
+  /** @var VideoSitemapEntityManager $entity_manager */
   $entity_manager = \Drupal::service('video_sitemap.entity_manager');
   $entity_manager->addEntityToQueue($entity);
 }
@@ -41,7 +43,7 @@ function video_sitemap_node_insert(EntityInterface $entity) {
  * Implements hook_ENTITY_TYPE_update().
  */
 function video_sitemap_node_update(EntityInterface $entity) {
-  /** @var \Drupal\video_sitemap\VideoSitemapEntityManager $entity_manager */
+  /** @var VideoSitemapEntityManager $entity_manager */
   $entity_manager = \Drupal::service('video_sitemap.entity_manager');
   $entity_manager->addEntityToQueue($entity);
 }
@@ -52,7 +54,7 @@ function video_sitemap_node_update(EntityInterface $entity) {
  * Removes node for video sitemap index table..
  */
 function video_sitemap_node_delete(EntityInterface $entity) {
-  /** @var \Drupal\video_sitemap\VideoSitemapEntityManager $entity_manager */
+  /** @var VideoSitemapEntityManager $entity_manager */
   $entity_manager = \Drupal::service('video_sitemap.entity_manager');
   $entity_manager->deleteLocRecord($entity);
 }
