diff --git a/src/Normalizer/EntityReferenceFieldItemNormalizer.php b/src/Normalizer/EntityReferenceFieldItemNormalizer.php
index defd378..a3e9da5 100644
--- a/src/Normalizer/EntityReferenceFieldItemNormalizer.php
+++ b/src/Normalizer/EntityReferenceFieldItemNormalizer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\value\Normalizer;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Config\Entity\EntityBundleWithPluralLabelsInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem;
@@ -14,7 +15,7 @@ class EntityReferenceFieldItemNormalizer extends NormalizerBase {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -36,7 +37,7 @@ class EntityReferenceFieldItemNormalizer extends NormalizerBase {
   public function normalize($object, $format = NULL, array $context = []) {
     $attributes = [];
 
-    /** @var \Drupal\Core\Entity\EntityInterface $entity */
+    /** @var EntityInterface $entity */
     if ($entity = $object->get('entity')->getValue()) {
       $attributes['label'] = $entity->label();
       if ($entity instanceof EntityBundleWithPluralLabelsInterface) {
diff --git a/src/Normalizer/FileFieldItemNormalizer.php b/src/Normalizer/FileFieldItemNormalizer.php
index 094ed59..c4b1e2d 100644
--- a/src/Normalizer/FileFieldItemNormalizer.php
+++ b/src/Normalizer/FileFieldItemNormalizer.php
@@ -21,7 +21,7 @@ class FileFieldItemNormalizer extends FieldItemNormalizer {
     /** @var FileInterface $file */
     if ($file = $object->get('entity')->getValue()) {
       $attributes['uri'] = $file->getFileUri();
-      $attributes['url'] = file_create_url($attributes['uri']);
+      $attributes['url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($attributes['uri']);
     }
 
     return $attributes;
diff --git a/src/ThemeManager.php b/src/ThemeManager.php
index 0a20ec9..edf0edc 100644
--- a/src/ThemeManager.php
+++ b/src/ThemeManager.php
@@ -23,7 +23,7 @@ class ThemeManager extends CoreThemeManager {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -70,7 +70,7 @@ class ThemeManager extends CoreThemeManager {
    * @param $hook
    * @param $variables
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    */
   protected function getEntity($hook, $variables) {
     if (is_string($hook)) {
diff --git a/src/Twig/TwigExtension.php b/src/Twig/TwigExtension.php
index d3ea81d..e15a512 100644
--- a/src/Twig/TwigExtension.php
+++ b/src/Twig/TwigExtension.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\value\Twig;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\image\ImageStyleInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Symfony\Component\Serializer\SerializerInterface;
@@ -9,26 +12,26 @@ use Symfony\Component\Serializer\SerializerInterface;
 class TwigExtension extends \Twig_Extension {
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
-   * @var \Symfony\Component\Serializer\SerializerInterface
+   * @var SerializerInterface
    */
   protected $serializer;
 
   /**
    * TwigExtension constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
-   * @param \Symfony\Component\Serializer\SerializerInterface $serializer
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param ModuleHandlerInterface $module_handler
+   * @param SerializerInterface $serializer
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, SerializerInterface $serializer) {
     $this->entityTypeManager = $entity_type_manager;
@@ -156,12 +159,12 @@ class TwigExtension extends \Twig_Extension {
    * @return null|string
    *   The URL of the image with the style or NULL if not found.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function imageStyle($uri, $image_style) {
     $storage = $this->entityTypeManager->getStorage('image_style');
-    /** @var \Drupal\image\ImageStyleInterface $style */
+    /** @var ImageStyleInterface $style */
     if ($style = $storage->load($image_style)) {
       return $style->buildUrl($uri);
     }
@@ -176,8 +179,8 @@ class TwigExtension extends \Twig_Extension {
    * @return array|null
    *   The normalized entity array or null.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function value(array $field) {
     // Check for target_id and target_type.
