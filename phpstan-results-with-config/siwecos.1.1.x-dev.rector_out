modules/contrib/siwecos/siwecos.module
modules/contrib/siwecos/src/Controller/SiwecosController.php
modules/contrib/siwecos/src/EventSubscriber/SiwecosSubscriber.php
modules/contrib/siwecos/src/Form/SettingsForm.php
modules/contrib/siwecos/src/Plugin/Block/SealBlock.php
modules/contrib/siwecos/src/SiwecosService.php

6 files with changes
====================

1) modules/contrib/siwecos/src/SiwecosService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\siwecos;

+use Drupal\Core\Config\ImmutableConfig;
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Psr7\Request;
@@ @@
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * Constructs a SiwecosService object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory object.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The http client object.
    */
   public function __construct(
@@ @@
    * @return string
    *   The domain token string.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function getDomainToken(bool $update = FALSE): string {
     if ($this->domainToken && !$update) {
@@ @@
    * @return object|false
    *   Return a data object on success or false on error.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function login() {
     try {
@@ @@
    * @return array|false
    *   An array of registered domains.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function getDomains() {
     try {
@@ @@
    * @return bool
    *   Boolean whether verification was successful.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function verifyDomain() {
     try {
@@ @@
    * @return bool
    *   True on success or false on failure.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function startScan() {
     try {
@@ @@
    * @return string|false
    *   A domain token string or false.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function registerDomain() {
     try {
@@ @@
    * @return object|false
    *   Return a data object on success or false on error.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function getScanResult() {
     $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/siwecos/src/Plugin/Block/SealBlock.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/siwecos/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\siwecos\Form;

+use Drupal\siwecos\SiwecosService;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
    * {@inheritdoc}
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\siwecos\SiwecosService $siwecosService */
+    /** @var SiwecosService $siwecosService */
     $siwecosService = \Drupal::service('siwecos.service');
     $response = $siwecosService
       ->setDomain($form_state->getValue('domain'))
@@ @@
     $cid = (new Url('<front>'))->setAbsolute()->toString() . ':';
     \Drupal::cache('page')->delete($cid);

-    /** @var \Drupal\siwecos\SiwecosService $siwecosService */
+    /** @var SiwecosService $siwecosService */
     $siwecosService = \Drupal::service('siwecos.service');
     $siwecosService->validateDomain(TRUE);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/siwecos/src/EventSubscriber/SiwecosSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\siwecos\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Messenger\MessengerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs event subscriber.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(MessengerInterface $messenger) {
@@ @@
   /**
    * Kernel response event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   Response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/siwecos/src/Controller/SiwecosController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\siwecos\Controller;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
@@ @@
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The siwecos.service service.
    *
-   * @var \Drupal\siwecos\SiwecosService
+   * @var SiwecosService
    */
   protected $siwecosService;

@@ @@
   /**
    * The controller constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\siwecos\SiwecosService $siwecos_service
+   * @param SiwecosService $siwecos_service
    *   The siwecos service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/siwecos/siwecos.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\siwecos\SiwecosService;
 /**
  * @file
  * Primary module hooks for Siwecos module.
@@ @@
  * Implements hook_requirements().
  */
 function siwecos_requirements($phase) {
-  /** @var \Drupal\siwecos\SiwecosService $siwecosService */
+  /** @var SiwecosService $siwecosService */
   $siwecosService = \Drupal::service('siwecos.service');
   $result = $siwecosService->getScanResult();
   list($total_score, ) = array_values(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

