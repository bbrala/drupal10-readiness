diff --git a/src/Controller/OperationsHandler.php b/src/Controller/OperationsHandler.php
index e231c56..d46d48a 100644
--- a/src/Controller/OperationsHandler.php
+++ b/src/Controller/OperationsHandler.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\jsonapi_operations\Controller;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface;
+use Drupal\Core\Database\Connection;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Url;
 use Drupal\jsonapi\JsonApiResource\ErrorCollection;
@@ -26,22 +29,22 @@ use Symfony\Component\HttpKernel\HttpKernelInterface;
  */
 class OperationsHandler {
 
-  /** @var \Drupal\Core\Entity\EntityTypeManagerInterface */
+  /** @var EntityTypeManagerInterface */
   protected $entityTypeManager;
 
-  /** @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface */
+  /** @var ResourceTypeRepositoryInterface */
   protected $resourceTypeRepository;
 
-  /** @var \Drupal\Core\Database\Connection */
+  /** @var Connection */
   protected $databaseConnection;
 
-  /** @var \Symfony\Component\HttpKernel\HttpKernelInterface */
+  /** @var HttpKernelInterface */
   protected $httpKernel;
 
   /**
    * Construct a new OperationsHandler.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   the Drupal entity type manager
    * @param $resourceTypeRepository
    *   the JSON:API resource type repository
@@ -60,10 +63,10 @@ class OperationsHandler {
   /**
    * Handles JSON:API Operations incoming HTTP requests.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   the HTTP request
    *
-   * @return \Drupal\jsonapi\ResourceResponse|\Symfony\Component\HttpFoundation\Response
+   * @return ResourceResponse|Response
    *   the HTTP response
    */
   function handleOperations(Request $request) {
diff --git a/tests/src/Functional/OperationsHandlerTransactionalTest.php b/tests/src/Functional/OperationsHandlerTransactionalTest.php
index 178e32d..f0e3105 100644
--- a/tests/src/Functional/OperationsHandlerTransactionalTest.php
+++ b/tests/src/Functional/OperationsHandlerTransactionalTest.php
@@ -19,7 +19,7 @@ class OperationsHandlerTransactionalTest extends JsonApiFunctionalTestBase {
     'jsonapi_operations',
   ];
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->grantPermissions(Role::load(RoleInterface::ANONYMOUS_ID), [
       'create article content',
diff --git a/tests/src/Kernel/OperationsHandlerTest.php b/tests/src/Kernel/OperationsHandlerTest.php
index 633314e..6275486 100644
--- a/tests/src/Kernel/OperationsHandlerTest.php
+++ b/tests/src/Kernel/OperationsHandlerTest.php
@@ -35,7 +35,7 @@ class OperationsHandlerTest extends KernelTestBase {
   /**
    * The user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
@@ -55,7 +55,7 @@ class OperationsHandlerTest extends KernelTestBase {
    */
   protected $operationHandler;
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Add the entity schemas.
@@ -176,7 +176,7 @@ class OperationsHandlerTest extends KernelTestBase {
     $this->assertEquals(200, $response->getStatusCode());
     $node = Node::load(count(static::$nodeUuid)+1);
     $this->assertNotNull($node);
-    $this->assertEqual('JSON:API', $node->getTitle());
+    $this->assertEquals('JSON:API', $node->getTitle());
   }
 
   function testUpdate(){
@@ -203,7 +203,7 @@ class OperationsHandlerTest extends KernelTestBase {
     $this->assertEquals(200, $response->getStatusCode());
     $node = Node::load(1);
     $this->assertNotNull($node);
-    $this->assertEqual('JSON:API Operations', $node->getTitle());
+    $this->assertEquals('JSON:API Operations', $node->getTitle());
   }
 
   function testDelete(){
@@ -258,10 +258,10 @@ class OperationsHandlerTest extends KernelTestBase {
     $this->assertEquals(200, $response->getStatusCode());
     $node = Node::load(count(static::$nodeUuid)+1);
     $this->assertNotNull($node);
-    $this->assertEqual('JSON:API', $node->getTitle());
+    $this->assertEquals('JSON:API', $node->getTitle());
     $node = Node::load(count(static::$nodeUuid)+2);
     $this->assertNotNull($node);
-    $this->assertEqual('GraphQL', $node->getTitle());
+    $this->assertEquals('GraphQL', $node->getTitle());
   }
 
 }
