modules/contrib/views_merge_rows/src/HookHandler/ViewsPreRenderHookHandler.php
modules/contrib/views_merge_rows/src/Plugin/views/display_extender/ViewsMergeRowsDisplayExtenderPlugin.php
modules/contrib/views_merge_rows/views_merge_rows.install
modules/contrib/views_merge_rows/views_merge_rows.module

2 files with changes
====================

1) modules/contrib/views_merge_rows/views_merge_rows.module:26

    ---------- begin diff ----------
@@ @@
  * Merges the rows according to the settings for current display.
  */
 function views_merge_rows_views_pre_render(ViewExecutable $view) : void {
-  /** @var \Drupal\views_merge_rows\HookHandler\ViewsPreRenderHookHandler $instance */
+  /** @var ViewsPreRenderHookHandler $instance */
   $instance = \Drupal::service('class_resolver')
     ->getInstanceFromDefinition(ViewsPreRenderHookHandler::class);
   $instance->process($view);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/views_merge_rows/src/HookHandler/ViewsPreRenderHookHandler.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\views_merge_rows\HookHandler;

+use Drupal\views_merge_rows\Plugin\views\display_extender\ViewsMergeRowsDisplayExtenderPlugin;
+use Drupal\views\Plugin\views\pager\PagerPluginBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Pager\PagerManagerInterface;
 use Drupal\views\ViewExecutable;
@@ @@
   /**
    * The pager manager service.
    *
-   * @var \Drupal\Core\Pager\PagerManagerInterface
+   * @var PagerManagerInterface
    */
   protected $pagerManager;

@@ @@
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Pager\PagerManagerInterface $pagerManager
+   * @param PagerManagerInterface $pagerManager
    *   The pager manager service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack service.
    */
   public function __construct(
@@ @@
   /**
    * Alter the view according to merge rows configuration.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view to alter.
    */
   public function process(ViewExecutable $view): void {
@@ @@
       // If the ID of the plugin is not in the list then do nothing.
       return;
     }
-    /** @var \Drupal\views_merge_rows\Plugin\views\display_extender\ViewsMergeRowsDisplayExtenderPlugin $extender */
+    /** @var ViewsMergeRowsDisplayExtenderPlugin $extender */
     $extender = $extenders['views_merge_rows'];

     $options = $extender->getOptions();
@@ @@
   /**
    * Manipulates data if merge option is 'count_unique'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'count'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'count_minus_count_unique'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows. Used for 'count_unique' data manipulation.
@@ @@
   /**
    * Manipulates data if merge option is 'merge_unique'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'merge'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'sum'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'average'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'std_deviation'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'filter'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'first_value'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'highest_value'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
   /**
    * Manipulates data if merge option is 'lowest_value'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_rows
    *   Array of merged rows.
@@ @@
    *
    * If merge option is 'merge' or 'merge_unique'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_row
    *   Current merged row.
@@ @@
    *
    * If merge option is 'sum'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_row
    *   Current merged row.
@@ @@
    *
    * If merge option is 'average'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_row
    *   Current merged row.
@@ @@
    *
    * If merge option is 'std_deviation'.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_row
    *   Current merged row.
@@ @@
   /**
    * Unsets the given row from the current display.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param int $row_index
    *   Supplied row index value.
@@ @@
   /**
    * Update array indexes.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   View object.
    * @param array $merged_row
    *   Current merged row.
@@ @@

     if ($items_per_page > 0 && $merged_rows_total_num > $items_per_page) {
       $current_page_num = 0;
-      /** @var \Drupal\views\Plugin\views\pager\PagerPluginBase|null $pager */
+      /** @var PagerPluginBase|null $pager */
       $pager = $view->getPager();
       if ($pager !== NULL && $pager->getCurrentPage() !== NULL) {
         $current_page_num = $pager->getCurrentPage();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

