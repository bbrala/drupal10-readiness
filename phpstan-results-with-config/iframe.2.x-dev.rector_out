modules/contrib/iframe/iframe.install
modules/contrib/iframe/iframe.module
modules/contrib/iframe/src/Feeds/Target/Iframe.php
modules/contrib/iframe/src/Plugin/Field/FieldFormatter/IframeAsurlFormatter.php
modules/contrib/iframe/src/Plugin/Field/FieldFormatter/IframeAsurlwithuriFormatter.php
modules/contrib/iframe/src/Plugin/Field/FieldFormatter/IframeDefaultFormatter.php
modules/contrib/iframe/src/Plugin/Field/FieldFormatter/IframeOnlyFormatter.php
modules/contrib/iframe/src/Plugin/Field/FieldType/IframeItem.php
modules/contrib/iframe/src/Plugin/Field/FieldWidget/IframeUrlWidget.php
modules/contrib/iframe/src/Plugin/Field/FieldWidget/IframeUrlheightWidget.php
modules/contrib/iframe/src/Plugin/Field/FieldWidget/IframeUrlwidthheightWidget.php
modules/contrib/iframe/src/Plugin/Field/FieldWidget/IframeWidgetBase.php
modules/contrib/iframe/src/Plugin/migrate/field/IframeField.php
modules/contrib/iframe/src/Plugin/migrate/process/d6/CckIframe.php
modules/contrib/iframe/src/Plugin/migrate/process/d7/CckIframe.php
modules/contrib/iframe/tests/src/Kernel/IframeSchemaTest.php

3 files with changes
====================

1) modules/contrib/iframe/tests/src/Kernel/IframeSchemaTest.php:38

    ---------- begin diff ----------
@@ @@
     $url = 'https://www.drupal.org/';
     $typed_config = \Drupal::service('config.typed');
     // Test the field storage schema.
-    /** @var \Drupal\field\Entity\FieldStorageConfig $field */
+    /** @var FieldStorageConfig $field */
     $field_storage = FieldStorageConfig::create([
       'entity_type' => 'entity_test',
       'field_name' => 'field_test',
@@ @@
     $this->assertConfigSchema($typed_config, 'field.storage.' . $field_storage->id(), $field_storage->toArray());

     // Test the field schema.
-    /** @var \Drupal\field\Entity\FieldConfig $field */
+    /** @var FieldConfig $field */
     $field = FieldConfig::create([
       'entity_type' => 'entity_test',
       'field_name' => 'field_test',
@@ @@
     $this->assertConfigSchema($typed_config, 'field.field.' . $field->id(), $field->toArray());

     // Test the field widget schema.
-    /** @var \Drupal\Core\Entity\Entity\EntityFormDisplay $form_display */
+    /** @var EntityFormDisplay $form_display */
     $form_display = EntityFormDisplay::create([
       'targetEntityType' => 'entity_test',
       'bundle' => 'entity_test',
@@ @@
     $this->assertConfigSchema($typed_config, 'core.entity_form_display.' . $form_display->id(), $form_display->toArray());

     // Test all the field formatters schema.
-    /** @var \Drupal\Core\Entity\Entity\EntityViewDisplay $view_display */
+    /** @var EntityViewDisplay $view_display */
     $view_display = EntityViewDisplay::create([
       'targetEntityType' => 'entity_test',
       'bundle' => 'entity_test',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/iframe/src/Plugin/Field/FieldWidget/IframeWidgetBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\iframe\Plugin\Field\FieldWidget;

+use Drupal\iframe\Plugin\Field\FieldType\IframeItem;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\WidgetBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
     // \iframe_debug(0, 'formElement widget_settings', $widget_settings);
     // \iframe_debug(0, 'formElement field_settings', $field_settings);
     // \iframe_debug(0, 'formElement defaultSettings', self::defaultSettings());
-
-    /** @var \Drupal\iframe\Plugin\Field\FieldType\IframeItem $item */
+    /** @var IframeItem $item */
     $item =& $items[$delta];
     $field_definition = $item->getFieldDefinition();
     /* on_admin_page TRUE only if on field edit page, not on widget-edit */
@@ @@
    * @param array $form
    *   The form structure where widgets are being attached to. This might be a
    *   full form structure, or a sub-element of a larger form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/iframe/iframe.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityFieldManagerInterface;
 /**
  * @file
  * Contains install, uninstall and update functions for IFrame.
@@ @@
   // code.
   drupal_flush_all_caches();

-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+  /** @var EntityFieldManagerInterface $entityFieldManager */
   $entityFieldManager = \Drupal::service('entity_field.manager');
   $entityDefinitionUpdateManager = \Drupal::entityDefinitionUpdateManager();
   $entityTypeManager = \Drupal::entityTypeManager();
@@ @@
  * Add a headerlevel column to iframe fields that do not have it yet.
  */
 function iframe_update_8201(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+  /** @var EntityFieldManagerInterface $entityFieldManager */
   $entityFieldManager = \Drupal::service('entity_field.manager');
   $entityDefinitionUpdateManager = \Drupal::entityDefinitionUpdateManager();
   $entityTypeManager = \Drupal::entityTypeManager();
@@ @@
   // code.
   drupal_flush_all_caches();

-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+  /** @var EntityFieldManagerInterface $entityFieldManager */
   $entityFieldManager = \Drupal::service('entity_field.manager');
   $entityDefinitionUpdateManager = \Drupal::entityDefinitionUpdateManager();
   $entityTypeManager = \Drupal::entityTypeManager();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [ERROR] Could not process "modules/contrib/iframe/src/Feeds/Target/Iframe.php" 
         file, due to:                                                          
         "Analyze error: "Class Drupal\feeds\Plugin\Type\Target\FieldTargetBase 
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

