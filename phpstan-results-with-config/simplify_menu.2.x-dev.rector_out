modules/contrib/simplify_menu/modules/simplify_menu_test/simplify_menu_test.module
modules/contrib/simplify_menu/src/MenuItems.php
modules/contrib/simplify_menu/src/Tests/SimplifyMenuTest.php
modules/contrib/simplify_menu/src/TwigExtension/MenuItemsTwigExtension.php

4 files with changes
====================

1) modules/contrib/simplify_menu/src/TwigExtension/MenuItemsTwigExtension.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * MenuItems definition.
    *
-   * @var \Drupal\simplify_menu\MenuItems
+   * @var MenuItems
    */
   protected $menuItems;

@@ @@
   /**
    * MenuItemsTwigExtension constructor.
    *
-   * @param \Drupal\simplify_menu\MenuItems $menuItems
+   * @param MenuItems $menuItems
    *   The MenuItems service.
    */
   public function __construct(MenuItems $menuItems) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/simplify_menu/src/Tests/SimplifyMenuTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\simplify_menu\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * The admin user used for this test.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/simplify_menu/src/MenuItems.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\simplify_menu;

+use Drupal\Core\Menu\MenuLinkInterface;
 use Drupal\Core\Menu\MenuLinkTreeInterface;
 use Drupal\Core\Menu\MenuTreeParameters;
 use Drupal\Core\Access\AccessResultInterface;
@@ @@
   /**
    * MenuLinkTree definition.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;

@@ @@
   /**
    * Active menu tree definition.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface[]
+   * @var MenuLinkTreeInterface[]
    */
   protected $activeMenuTree;

@@ @@
   /**
    * MenuItems constructor.
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree
+   * @param MenuLinkTreeInterface $menu_link_tree
    *   The MenuLinkTree service.
    */
   public function __construct(MenuLinkTreeInterface $menu_link_tree) {
@@ @@
       // getMenuTree, "inaccessible links are *not* removed; it's up to the code
       // doing something with the tree to exclude inaccessible links, just like
       // MenuLinkTree::build() does" - whose code we replicate here.
-
-      /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+      /** @var MenuLinkInterface $link */
       $link = $item->link;
       // Generally we only deal with visible links, but just in case.
       if (!$link->isEnabled()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/simplify_menu/modules/simplify_menu_test/simplify_menu_test.module:19

    ---------- begin diff ----------
@@ @@
 function simplify_menu_test_theme() {
   return [
     'simplify_menu_test' => [
-      'path' => drupal_get_path('module', 'simplify_menu_test') . '/templates',
+      'path' => \Drupal::service('extension.list.module')->getPath('simplify_menu_test') . '/templates',
       'variables' => [
         'content' => NULL,
       ],
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

