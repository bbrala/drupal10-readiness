modules/contrib/paragraph_types/paragraph_types.module
modules/contrib/paragraph_types/tests/src/Functional/LoadTest.php

2 files with changes
====================

1) modules/contrib/paragraph_types/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\paragraph_types\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/paragraph_types/paragraph_types.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\paragraphs\ParagraphInterface;
+use Drupal\node\NodeInterface;
+use Drupal\node\Entity\Node;
 /**
  * @file
  * Contains paragraph_types.module.
@@ @@
  * @param $variables
  */
 function paragraph_types_preprocess_paragraph(&$variables) {
-  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
+  /** @var ParagraphInterface $paragraph */
   $paragraph = $variables['paragraph'];
   $type = $paragraph->bundle();
   switch ($type) {
@@ @@
       else
         $image_uri = '';

-      $variables['image_url'] = file_create_url($image_uri);
+      $variables['image_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
       $variables['image_alt'] = $variables['paragraph']->get('field_image')->alt;
       $variables['image_title'] = $variables['paragraph']->get('field_image')->title;
       $variables['link_url'] = $variables['paragraph']->get('field_link')->uri;
@@ @@
       else
         $image_uri = '';

-      $variables['image_url'] = file_create_url($image_uri);
+      $variables['image_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
       $variables['image_alt'] = $variables['paragraph']->get('field_image')->alt;
       $variables['image_title'] = $variables['paragraph']->get('field_image')->title;
       $variables['link_url'] = $variables['paragraph']->get('field_link')->uri;
@@ @@
       $variables['subtitle'] = $paragraph->field_subtitle->value;

       $variables['chess_rows'] = [];
-      /** @var \Drupal\paragraphs\ParagraphInterface[] $chess_rows */
+      /** @var ParagraphInterface[] $chess_rows */
       $chess_rows = $paragraph->get('field_chess_rows')->referencedEntities();
       foreach ($chess_rows as $chess_row) {

@@ @@
           'text' => $chess_row->field_text->value,
           'image_position' => $chess_row->field_image_position->value,
           'linked_image' => [
-            'image_url' => file_create_url($image_uri),
+            'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
             'image_alt' => $chess_row->get('field_image')->alt,
             'image_title' => $chess_row->get('field_image')->title,
             'link_url' => $chess_row->get('field_link')->uri,
@@ @@
       $variables['text'] = $paragraph->field_text->value;
       // prepare grid items.
       $variables['mix_items'] = [];
-      /** @var \Drupal\paragraphs\ParagraphInterface[] $mix_items */
+      /** @var ParagraphInterface[] $mix_items */
       $mix_items = $paragraph->get('field_mix_items')->referencedEntities();
       foreach ($mix_items as $mix_item) {

@@ @@
           $files = $linked_images[0]->get('field_image')->referencedEntities();
           if (count($files)) $image_uri = $files[0]->uri[0]->value;
           $linked_image_data = [
-            'image_url' => file_create_url($image_uri),
+            'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
             'image_alt' => $linked_images[0]->get('field_image')->alt,
             'image_title' => $linked_images[0]->get('field_image')->title,
             'link_url' => $linked_images[0]->get('field_link')->uri,
@@ @@
       $variables['text'] = $paragraph->field_text->value;
       // prepare slide items.
       $variables['linked_images'] = [];
-      /** @var \Drupal\paragraphs\ParagraphInterface[] $linked_images */
+      /** @var ParagraphInterface[] $linked_images */
       $linked_images = $paragraph->get('field_linked_images')->referencedEntities();
       foreach ($linked_images as $linked_image) {

@@ @@
           $image_uri = '';

         $variables['linked_images'][] = [
-          'image_url' => file_create_url($image_uri),
+          'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
           'image_alt' => $linked_image->get('field_image')->alt,
           'image_title' => $linked_image->get('field_image')->title,
           'link_url' => $linked_image->get('field_link')->uri,
@@ @@
       }

       $variables['linked_images'] = [];
-      /** @var \Drupal\paragraphs\ParagraphInterface[] $linked_images */
+      /** @var ParagraphInterface[] $linked_images */
       $linked_images = $paragraph->get('field_linked_images')->referencedEntities();
       foreach ($linked_images as $linked_image) {

@@ @@
           $image_uri = '';

         $variables['linked_images'][] = [
-          'image_url' => file_create_url($image_uri),
+          'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
           'image_alt' => $linked_image->get('field_image')->alt,
           'image_title' => $linked_image->get('field_image')->title,
           'link_url' => $linked_image->get('field_link')->uri,
@@ @@
       break;
     case 'counter':
       $variables['counter_items'] = [];
-      /** @var \Drupal\paragraphs\ParagraphInterface[] $counter_items */
+      /** @var ParagraphInterface[] $counter_items */
       $counter_items = $paragraph->get('field_counter_items')->referencedEntities();
       foreach ($counter_items as $counter_item) {
         $linked_image = $counter_item->get('field_linked_image')->referencedEntities()[0];
@@ @@
           'headline' => $counter_item->field_headline->value,
           'number' => (int)$counter_item->field_number->value,
           'linked_image' => [
-            'image_url' => file_create_url($image_uri),
+            'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
             'image_alt' => $linked_image->get('field_image')->alt,
             'image_title' => $linked_image->get('field_image')->title,
             'link_url' => $linked_image->get('field_link')->uri,
@@ @@
         'headline' => $counter_item->field_headline->value,
         'number' => (int)$counter_item->field_number->value,
         'linked_image' => [
-          'image_url' => file_create_url($image_uri),
+          'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
           'image_alt' => $counter_item->get('field_image')->alt,
           'image_title' => $counter_item->get('field_image')->title,
           'link_url' => $counter_item->get('field_link')->uri,
@@ @@
       else
         $image_uri = '';

-      $variables['image_url'] = file_create_url($image_uri);
+      $variables['image_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
       $variables['image_alt'] = $paragraph->get('field_image')->alt;
       $variables['image_title'] = $paragraph->get('field_image')->title;

       $variables['client_items'] = [];
-      /** @var \Drupal\paragraphs\ParagraphInterface[] $counter_items */
+      /** @var ParagraphInterface[] $counter_items */
       $client_items = $paragraph->get('field_client_items')->referencedEntities();
       foreach ($client_items as $client_item) {

@@ @@
           'position_title' => $client_item->field_position_title->value,
           'text' => $client_item->field_text->value,
           'avatar' => [
-            'image_url' => file_create_url($avatar_image_uri),
+            'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($avatar_image_uri),
             'image_alt' => $client_item->get('field_avatar')->alt,
             'image_title' => $client_item->get('field_avatar')->title,
           ],
           'organization' => [
-            'image_url' => file_create_url($image_uri),
+            'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
             'image_alt' => $linked_image ? $linked_image->get('field_image')->alt : '',
             'image_title' => $linked_image ? $linked_image->get('field_image')->title : '',
             'link_url' => $linked_image ? $linked_image->get('field_link')->uri : '',
@@ @@
         'position_title' => $client_item->field_position_title->value,
         'text' => $client_item->field_text->value,
         'avatar' => [
-          'image_url' => file_create_url($avatar_image_uri),
+          'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($avatar_image_uri),
           'image_alt' => $client_item->get('field_avatar')->alt,
           'image_title' => $client_item->get('field_avatar')->title,
         ],
         'organization' => [
-          'image_url' => file_create_url($image_uri),
+          'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri),
           'image_alt' => $linked_image ? $linked_image->get('field_image')->alt : '',
           'image_title' => $linked_image ? $linked_image->get('field_image')->title : '',
           'link_url' => $linked_image ? $linked_image->get('field_link')->uri : '',
@@ @@
       $variables['subtitle'] = $paragraph->field_subtitle->value;

       $variables['members'] = [];
-      /** @var \Drupal\paragraphs\ParagraphInterface[] $counter_items */
+      /** @var ParagraphInterface[] $counter_items */
       $members = $paragraph->get('field_members')->referencedEntities();
       foreach ($members as $member) {

@@ @@
           'name' => $member->field_name->value,
           'position_title' => $member->field_position_title->value,
           'photo' => [
-            'image_url' => file_create_url($photo_image_uri),
+            'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($photo_image_uri),
             'image_alt' => $member->get('field_photo')->alt,
             'image_title' => $member->get('field_photo')->title,
           ],
@@ @@
         'name' => $member->field_name->value,
         'position_title' => $member->field_position_title->value,
         'photo' => [
-          'image_url' => file_create_url($photo_image_uri),
+          'image_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($photo_image_uri),
           'image_alt' => $member->get('field_photo')->alt,
           'image_title' => $member->get('field_photo')->title,
         ],
@@ @@
         ->sort('created', 'DESC')
         ->range(0, 3)
         ->execute();
-      /** @var \Drupal\node\NodeInterface[] $blog_posts */
-      $blog_posts = \Drupal\node\Entity\Node::loadMultiple($ids);
+      /** @var NodeInterface[] $blog_posts */
+      $blog_posts = Node::loadMultiple($ids);
       $view_builder = \Drupal::entityTypeManager()->getViewBuilder('node');
       foreach ($blog_posts as $blog_post) {
         $variables['articles'][] = [
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

