diff --git a/src/Controller/StripeApiWebhook.php b/src/Controller/StripeApiWebhook.php
index 51574bd..e0c9253 100644
--- a/src/Controller/StripeApiWebhook.php
+++ b/src/Controller/StripeApiWebhook.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\stripe_api\Controller;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\stripe_api\Event\StripeApiWebhookEvent;
 use Drupal\stripe_api\StripeApiService;
@@ -27,7 +28,7 @@ class StripeApiWebhook extends ControllerBase {
   /**
    * Stripe API service.
    *
-   * @var \Drupal\stripe_api\StripeApiService
+   * @var StripeApiService
    */
   protected $stripeApi;
 
@@ -50,10 +51,10 @@ class StripeApiWebhook extends ControllerBase {
   /**
    * Captures the incoming webhook request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A Response object.
    */
   public function handleIncomingWebhook(Request $request) {
@@ -74,7 +75,7 @@ class StripeApiWebhook extends ControllerBase {
     }
 
     if ($config->get('log_webhooks')) {
-       /** @var \Drupal\Core\Logger\LoggerChannelInterface $logger */
+       /** @var LoggerChannelInterface $logger */
        $logger = $this->getLogger('stripe_api');
        $logger->info("Stripe webhook received event:\n @event", ['@event' => (string)$event]);
     }
@@ -93,7 +94,7 @@ class StripeApiWebhook extends ControllerBase {
    * @param object $event_json
    *   Stripe event object parsed from JSON.
    *
-   * @return bool|\Stripe\Event
+   * @return bool|Event
    *   Returns a Stripe Event object or false if validation fails.
    */
   private function isValidWebhook(object $event_json) {
diff --git a/src/Controller/StripeApiWebhookRedirect.php b/src/Controller/StripeApiWebhookRedirect.php
index b467d8b..c17271d 100644
--- a/src/Controller/StripeApiWebhookRedirect.php
+++ b/src/Controller/StripeApiWebhookRedirect.php
@@ -14,7 +14,7 @@ class StripeApiWebhookRedirect extends ControllerBase {
   /**
    * Redirects the user to home page and show the message.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect response object.
    */
   public function webhookRedirect() {
diff --git a/src/Event/StripeApiWebhookEvent.php b/src/Event/StripeApiWebhookEvent.php
index 2872195..8215a0e 100644
--- a/src/Event/StripeApiWebhookEvent.php
+++ b/src/Event/StripeApiWebhookEvent.php
@@ -10,7 +10,7 @@ use Symfony\Component\EventDispatcher\Event as SymfonyEvent;
  *
  * Provides the Stripe API Webhook Event.
  */
-class StripeApiWebhookEvent extends SymfonyEvent {
+class StripeApiWebhookEvent extends \Symfony\Contracts\EventDispatcher\Event {
 
   /**
    * Webhook event type.
diff --git a/src/Event/StripeApiWebhookSubscriber.php b/src/Event/StripeApiWebhookSubscriber.php
index bd6154f..d63e46b 100644
--- a/src/Event/StripeApiWebhookSubscriber.php
+++ b/src/Event/StripeApiWebhookSubscriber.php
@@ -23,7 +23,7 @@ class StripeApiWebhookSubscriber implements EventSubscriberInterface {
   /**
    * Process an incoming webhook.
    *
-   * @param \Drupal\stripe_api\Event\StripeApiWebhookEvent $event
+   * @param StripeApiWebhookEvent $event
    *   Logs an incoming webhook of the setting is on.
    */
   public function onIncomingWebhook(StripeApiWebhookEvent $event) {
diff --git a/src/Form/StripeApiAdminForm.php b/src/Form/StripeApiAdminForm.php
index 0708226..6d15e9b 100644
--- a/src/Form/StripeApiAdminForm.php
+++ b/src/Form/StripeApiAdminForm.php
@@ -20,16 +20,16 @@ class StripeApiAdminForm extends ConfigFormBase {
   /**
    * Stripe API service.
    *
-   * @var \Drupal\stripe_api\StripeApiService
+   * @var StripeApiService
    */
   protected $stripeApi;
 
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\stripe_api\StripeApiService $stripe_api
+   * @param StripeApiService $stripe_api
    *   Stripe API service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StripeApiService $stripe_api) {
@@ -185,7 +185,7 @@ class StripeApiAdminForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/StripeApiService.php b/src/StripeApiService.php
index 6acca1d..9895106 100644
--- a/src/StripeApiService.php
+++ b/src/StripeApiService.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\stripe_api;
 
+use Drupal\Core\Config\ConfigFactory;
+use Stripe\ApiResource;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -19,28 +21,28 @@ class StripeApiService {
   /**
    * Drupal\Core\Config\ConfigFactory definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The Key Repository.
    *
-   * @var \Drupal\key\KeyRepositoryInterface
+   * @var KeyRepositoryInterface
    */
   protected $key;
 
@@ -133,7 +135,7 @@ class StripeApiService {
    * @param ...
    *   Additional params to pass to the method. Can be an array, string.
    *
-   * @return \Stripe\ApiResource|string|null
+   * @return ApiResource|string|null
    *   Returns the ApiResource or NULL on error or string which contains called
    *   class if method not exist.
    */
diff --git a/stripe_api.info.yml b/stripe_api.info.yml
index 799242d..e076178 100644
--- a/stripe_api.info.yml
+++ b/stripe_api.info.yml
@@ -1,7 +1,6 @@
 name: 'Stripe API'
 description: 'Provides an integration to use the Stripe API library'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 type: module
 package: Stripe
 configure: stripe_api.admin
diff --git a/stripe_api.module b/stripe_api.module
index 2365b3c..34b600a 100644
--- a/stripe_api.module
+++ b/stripe_api.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Messenger\MessengerInterface;
 /**
  * Implements hook_preprocess_HOOK().
  */
@@ -9,6 +10,6 @@ function stripe_api_preprocess_page(&$variables) {
   if ($stripe_api->getMode() === 'test') {
     \Drupal::messenger()
       ->addMessage(t('Stripe API is running in test mode.'),
-        \Drupal\Core\Messenger\MessengerInterface::TYPE_WARNING);
+        MessengerInterface::TYPE_WARNING);
   }
 }
