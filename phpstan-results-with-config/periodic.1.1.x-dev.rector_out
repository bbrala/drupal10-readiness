modules/contrib/periodic/periodic.install
modules/contrib/periodic/periodic.module
modules/contrib/periodic/src/Event/PeriodicEvent.php
modules/contrib/periodic/src/PeriodicEvents.php
modules/contrib/periodic/src/PeriodicManager.php
modules/contrib/periodic/tests/src/Functional/CronTest.php
modules/contrib/periodic/tests/src/Unit/CronTest.php
modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php

5 files with changes
====================

1) modules/contrib/periodic/tests/src/Unit/PeriodicManagerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\periodic\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Component\Datetime\Time;
 use Drupal\Core\State\State;
 use Drupal\periodic\Event\PeriodicEvent;
@@ @@
   /**
    * Mock Time service.
    *
-   * @var \Drupal\Component\Datetime\Time|\PHPUnit\Framework\MockObject\MockObject
+   * @var Time|MockObject
    */
   private $time;

@@ @@
   /**
    * Mock State service.
    *
-   * @var \Drupal\Core\State\State|\PHPUnit\Framework\MockObject\MockObject
+   * @var State|MockObject
    */
   private $state;

@@ @@
   /**
    * A Periodic Manager instance for testing.
    *
-   * @var \Drupal\periodic\PeriodicManager
+   * @var PeriodicManager
    */
   private $manager;

@@ @@
   public function setUp(): void {
     parent::setUp();

-    $this->time = $this->getMockBuilder(Time::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->time = $this->createMock(Time::class);
     $this->time->expects($this->any())
       ->method('getRequestTime')
       ->willReturn(946684800);

-    $this->state = $this->getMockBuilder(State::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->state = $this->createMock(State::class);

     $this->manager = new PeriodicManager($this->state, $this->time);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/periodic/tests/src/Unit/CronTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\periodic\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Prophecy\Prophecy\ObjectProphecy;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\periodic\PeriodicEvents;
 use Drupal\periodic\PeriodicManager;
 use Drupal\Tests\UnitTestCase;
 use Prophecy\Argument;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;

 require __DIR__ . '/../../../periodic.module';
@@ @@
  */
 class CronTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Mocked Event Dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface|\Prophecy\Prophecy\ObjectProphecy
+   * @var EventDispatcherInterface|ObjectProphecy
    */
   private $eventDispatcher;

@@ @@
   /**
    * Mocked Periodic Manager.
    *
-   * @var \Drupal\periodic\PeriodicManager|\Prophecy\Prophecy\ObjectProphecy
+   * @var PeriodicManager|ObjectProphecy
    */
   private $periodicManager;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/periodic/src/PeriodicManager.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The State service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The Time service.
    *
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;

@@ @@
   /**
    * Initialize Period Manager service.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The State service.
-   * @param \Drupal\Component\Datetime\Time $time
+   * @param Time $time
    *   The Time service.
    */
   public function __construct(StateInterface $state, Time $time) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/periodic/src/Event/PeriodicEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\periodic\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Event for periodic tasks.
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector


5) modules/contrib/periodic/periodic.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\periodic\PeriodicManager;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 /**
  * @file
  * Periodic module hook implementations.
@@ @@
  * Implements hook_cron().
  */
 function periodic_cron() {
-  /** @var \Drupal\periodic\PeriodicManager $periodManager */
+  /** @var PeriodicManager $periodManager */
   $periodManager = \Drupal::service('periodic.manager');
-  /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher */
+  /** @var EventDispatcherInterface $eventDispatcher */
   $eventDispatcher = Drupal::service('event_dispatcher');

   $periods = [
@@ @@
       // Argument order is set for compatibility with Drupal 8.9.
       // Will be updated when compatibility is updated to ^9.1.
       // @see https://www.drupal.org/node/3154407
-      $eventDispatcher->dispatch($name, new PeriodicEvent());
+      $eventDispatcher->dispatch(new PeriodicEvent(), $name);
     }
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector


 [WARNING] 5 nodes were removed                                                 

 [OK] 5 files have been changed by Rector                                       

