modules/contrib/url_restriction_by_role/src/EventSubscriber/UrlRestrictionByRole.php
modules/contrib/url_restriction_by_role/src/Form/UrlRestrictionByRoleSettingsForm.php
modules/contrib/url_restriction_by_role/tests/src/Functional/CrudFormTest.php

3 files with changes
====================

1) modules/contrib/url_restriction_by_role/tests/src/Functional/CrudFormTest.php:34

    ---------- begin diff ----------
@@ @@

     $this->drupalLogin($account);
     $this->drupalGet('/admin/config/search/path/url-restriction-by-role');
-    $this->assertText('Url Restriction by Role');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Url Restriction by Role');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/url_restriction_by_role/src/Form/UrlRestrictionByRoleSettingsForm.php:64

    ---------- begin diff ----------
@@ @@
   /**
    * The role storage used.
    *
-   * @var \Drupal\user\RoleStorageInterface
+   * @var RoleStorageInterface
    */
   protected $roleStorage;

@@ @@
   /**
    * Constructs a new UrlRestrictionByRoleSettingsForm.
    *
-   * @param \Drupal\user\RoleStorageInterface $role_storage
+   * @param RoleStorageInterface $role_storage
    *   The role storage.
    */
   public function __construct(RoleStorageInterface $role_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/url_restriction_by_role/src/EventSubscriber/UrlRestrictionByRole.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\url_restriction_by_role\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Session\AccountProxyInterface;
@@ @@
   /**
    * Request object.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;

@@ @@
   /**
    * Configuration object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * User object.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Language object.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The config service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(AccountProxyInterface $currentUser,
@@ @@
   /**
    * Restrict access to URLs defined.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     $error_message = $this->config->get(static::SETTINGS)->get(static::ERROR_MESSAGE);
     $use_custom_error_message = $this->config->get(static::SETTINGS)->get(static::USE_CUSTOM_ERROR_MESSAGE);
     $roles = $this->currentUser->getRoles();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

