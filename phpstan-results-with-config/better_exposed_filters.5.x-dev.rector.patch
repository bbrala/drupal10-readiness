diff --git a/includes/better_exposed_filters.theme.inc b/includes/better_exposed_filters.theme.inc
index 8a8dffa..a14c4e3 100644
--- a/includes/better_exposed_filters.theme.inc
+++ b/includes/better_exposed_filters.theme.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Url;
 /**
  * @file
  * Theme hooks, preprocessor, and suggestions.
@@ -205,7 +206,7 @@ function template_preprocess_bef_links(array &$variables) {
   foreach ($options as $optionValue => $optionLabel) {
     // Build a new Url object for each link since the query string changes with
     // each option.
-    /** @var Drupal\Core\Url $url */
+    /** @var Url $url */
     $url = clone($element['#bef_path']);
 
     // Allow visitors to toggle a filter setting on and off. This is not as
diff --git a/src/Annotation/BetterExposedFiltersFilterWidget.php b/src/Annotation/BetterExposedFiltersFilterWidget.php
index 7c56ca1..b1f01eb 100644
--- a/src/Annotation/BetterExposedFiltersFilterWidget.php
+++ b/src/Annotation/BetterExposedFiltersFilterWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class BetterExposedFiltersFilterWidget extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/BetterExposedFiltersPagerWidget.php b/src/Annotation/BetterExposedFiltersPagerWidget.php
index d5ce55b..4b62837 100644
--- a/src/Annotation/BetterExposedFiltersPagerWidget.php
+++ b/src/Annotation/BetterExposedFiltersPagerWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class BetterExposedFiltersPagerWidget extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/BetterExposedFiltersSortWidget.php b/src/Annotation/BetterExposedFiltersSortWidget.php
index 24e3940..30e392f 100644
--- a/src/Annotation/BetterExposedFiltersSortWidget.php
+++ b/src/Annotation/BetterExposedFiltersSortWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class BetterExposedFiltersSortWidget extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/BetterExposedFiltersWidgetBase.php b/src/Plugin/BetterExposedFiltersWidgetBase.php
index cc2246f..bf099f0 100644
--- a/src/Plugin/BetterExposedFiltersWidgetBase.php
+++ b/src/Plugin/BetterExposedFiltersWidgetBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Plugin;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Form\FormStateInterface;
@@ -20,14 +21,14 @@ abstract class BetterExposedFiltersWidgetBase extends PluginBase implements Bett
   /**
    * The views executable object.
    *
-   * @var \Drupal\views\ViewExecutable
+   * @var ViewExecutable
    */
   protected $view;
 
   /**
    * The views plugin this configuration will affect when exposed.
    *
-   * @var \Drupal\views\Plugin\views\ViewsHandlerInterface
+   * @var ViewsHandlerInterface
    */
   protected $handler;
 
@@ -127,14 +128,14 @@ abstract class BetterExposedFiltersWidgetBase extends PluginBase implements Bett
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Exposed views form state.
    * @param string $element
    *   The key of the form element.
    * @param string $group
    *   The name of the group element.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   If the instance cannot be created, such as if the ID is invalid.
    */
   protected function addElementToGroup(array &$form, FormStateInterface $form_state, $element, $group) {
@@ -169,14 +170,14 @@ abstract class BetterExposedFiltersWidgetBase extends PluginBase implements Bett
   /**
    * Returns exposed form action URL object.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Exposed views form state.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Url object.
    */
   protected function getExposedFormActionUrl(FormStateInterface $form_state) {
-    /** @var \Drupal\views\ViewExecutable $view */
+    /** @var ViewExecutable $view */
     $view = $form_state->get('view');
     $display = $form_state->get('display');
 
diff --git a/src/Plugin/BetterExposedFiltersWidgetInterface.php b/src/Plugin/BetterExposedFiltersWidgetInterface.php
index 61ec777..97671cd 100644
--- a/src/Plugin/BetterExposedFiltersWidgetInterface.php
+++ b/src/Plugin/BetterExposedFiltersWidgetInterface.php
@@ -17,7 +17,7 @@ interface BetterExposedFiltersWidgetInterface extends PluginFormInterface, Plugi
   /**
    * Sets the view object.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The views executable object.
    */
   public function setView(ViewExecutable $view);
@@ -25,7 +25,7 @@ interface BetterExposedFiltersWidgetInterface extends PluginFormInterface, Plugi
   /**
    * Sets the exposed view handler plugin.
    *
-   * @param \Drupal\views\Plugin\views\ViewsHandlerInterface $handler
+   * @param ViewsHandlerInterface $handler
    *   The views handler plugin this configuration will affect when exposed.
    */
   public function setViewsHandler(ViewsHandlerInterface $handler);
@@ -48,7 +48,7 @@ interface BetterExposedFiltersWidgetInterface extends PluginFormInterface, Plugi
    *
    * @param array $form
    *   The views configuration form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function exposedFormAlter(array &$form, FormStateInterface $form_state);
diff --git a/src/Plugin/BetterExposedFiltersWidgetManager.php b/src/Plugin/BetterExposedFiltersWidgetManager.php
index 540d30e..bf8730d 100644
--- a/src/Plugin/BetterExposedFiltersWidgetManager.php
+++ b/src/Plugin/BetterExposedFiltersWidgetManager.php
@@ -27,9 +27,9 @@ class BetterExposedFiltersWidgetManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct($type, \Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/better_exposed_filters/filter/DatePickers.php b/src/Plugin/better_exposed_filters/filter/DatePickers.php
index 4f9c29e..a7a9663 100644
--- a/src/Plugin/better_exposed_filters/filter/DatePickers.php
+++ b/src/Plugin/better_exposed_filters/filter/DatePickers.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Plugin\better_exposed_filters\filter;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
@@ -18,7 +19,7 @@ class DatePickers extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public static function isApplicable($filter = NULL, array $filter_options = []) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $is_applicable = FALSE;
 
     if ((is_a($filter, 'Drupal\views\Plugin\views\filter\Date') || !empty($filter->date_handler)) && !$filter->isAGroup()) {
diff --git a/src/Plugin/better_exposed_filters/filter/FilterWidgetBase.php b/src/Plugin/better_exposed_filters/filter/FilterWidgetBase.php
index 3f345fd..a0fefa6 100644
--- a/src/Plugin/better_exposed_filters/filter/FilterWidgetBase.php
+++ b/src/Plugin/better_exposed_filters/filter/FilterWidgetBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Plugin\better_exposed_filters\filter;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\better_exposed_filters\BetterExposedFiltersHelper;
 use Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetBase;
 use Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface;
@@ -22,7 +23,7 @@ abstract class FilterWidgetBase extends BetterExposedFiltersWidgetBase implement
    * {@inheritdoc}
    */
   public static function isApplicable($filter = NULL, array $filter_options = []) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $is_applicable = FALSE;
 
     // Sanity check to ensure we have a filter to work with.
@@ -85,7 +86,7 @@ abstract class FilterWidgetBase extends BetterExposedFiltersWidgetBase implement
    * {@inheritdoc}
    */
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
     $filter_widget_type = $this->getExposedFilterWidgetType();
 
@@ -165,7 +166,7 @@ abstract class FilterWidgetBase extends BetterExposedFiltersWidgetBase implement
    * {@inheritdoc}
    */
   public function exposedFormAlter(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
     $filter_id = $filter->options['expose']['identifier'];
     $field_id = $this->getExposedFilterFieldId();
@@ -262,7 +263,7 @@ abstract class FilterWidgetBase extends BetterExposedFiltersWidgetBase implement
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return array
@@ -306,7 +307,7 @@ abstract class FilterWidgetBase extends BetterExposedFiltersWidgetBase implement
    * Takes into account grouped filters with custom identifiers.
    */
   protected function getExposedFilterFieldId() {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
     $field_id = $filter->options['expose']['identifier'];
     $is_grouped_filter = $filter->options['is_grouped'] ?: FALSE;
@@ -331,7 +332,7 @@ abstract class FilterWidgetBase extends BetterExposedFiltersWidgetBase implement
     $form = [];
     $form_state = new FormState();
     $form_state->set('exposed', TRUE);
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
     $filter->buildExposedForm($form, $form_state);
     $filter_id = $filter->options['expose']['identifier'];
diff --git a/src/Plugin/better_exposed_filters/filter/Links.php b/src/Plugin/better_exposed_filters/filter/Links.php
index 3585031..ef9b4a1 100644
--- a/src/Plugin/better_exposed_filters/filter/Links.php
+++ b/src/Plugin/better_exposed_filters/filter/Links.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Plugin\better_exposed_filters\filter;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\better_exposed_filters\BetterExposedFiltersHelper;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -28,7 +29,7 @@ class Links extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
 
     $form = parent::buildConfigurationForm($form, $form_state);
@@ -49,7 +50,7 @@ class Links extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public function exposedFormAlter(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
     $field_id = $this->getExposedFilterFieldId();
 
diff --git a/src/Plugin/better_exposed_filters/filter/RadioButtons.php b/src/Plugin/better_exposed_filters/filter/RadioButtons.php
index 4c4a742..e1be978 100644
--- a/src/Plugin/better_exposed_filters/filter/RadioButtons.php
+++ b/src/Plugin/better_exposed_filters/filter/RadioButtons.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Plugin\better_exposed_filters\filter;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\better_exposed_filters\BetterExposedFiltersHelper;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -30,7 +31,7 @@ class RadioButtons extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
 
     $form = parent::buildConfigurationForm($form, $form_state);
@@ -68,7 +69,7 @@ class RadioButtons extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public function exposedFormAlter(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
     // Form element is designated by the element ID which is user-
     // configurable.
diff --git a/src/Plugin/better_exposed_filters/filter/Single.php b/src/Plugin/better_exposed_filters/filter/Single.php
index f2bc094..b72e76d 100644
--- a/src/Plugin/better_exposed_filters/filter/Single.php
+++ b/src/Plugin/better_exposed_filters/filter/Single.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Plugin\better_exposed_filters\filter;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
@@ -18,7 +19,7 @@ class Single extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public static function isApplicable($filter = NULL, array $filter_options = []) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $is_applicable = FALSE;
 
     // Sanity check to ensure we have a filter to work with.
@@ -37,7 +38,7 @@ class Single extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public function exposedFormAlter(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
     // Form element is designated by the element ID which is user-
     // configurable, and stored differently for grouped filters.
diff --git a/src/Plugin/better_exposed_filters/filter/Sliders.php b/src/Plugin/better_exposed_filters/filter/Sliders.php
index 19267b5..b318ca0 100644
--- a/src/Plugin/better_exposed_filters/filter/Sliders.php
+++ b/src/Plugin/better_exposed_filters/filter/Sliders.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\better_exposed_filters\Plugin\better_exposed_filters\filter;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -44,7 +45,7 @@ class Sliders extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public static function isApplicable($filter = NULL, array $filter_options = []) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $is_applicable = FALSE;
 
     // The date filter handler extends the numeric filter handler so we have
@@ -63,7 +64,7 @@ class Sliders extends FilterWidgetBase {
    * {@inheritdoc}
    */
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     $filter = $this->handler;
 
     $form = parent::buildConfigurationForm($form, $form_state);
diff --git a/src/Plugin/better_exposed_filters/sort/SortWidgetBase.php b/src/Plugin/better_exposed_filters/sort/SortWidgetBase.php
index 5c3b309..13479ab 100644
--- a/src/Plugin/better_exposed_filters/sort/SortWidgetBase.php
+++ b/src/Plugin/better_exposed_filters/sort/SortWidgetBase.php
@@ -260,7 +260,7 @@ Title Desc|Z -> A</pre> Leave the replacement text blank to remove an option alt
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function sortCombineSubmitForm(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/views/exposed_form/BetterExposedFilters.php b/src/Plugin/views/exposed_form/BetterExposedFilters.php
index a7b9318..ad3a3a9 100644
--- a/src/Plugin/views/exposed_form/BetterExposedFilters.php
+++ b/src/Plugin/views/exposed_form/BetterExposedFilters.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\better_exposed_filters\Plugin\views\exposed_form;
 
+use Drupal\views\Plugin\views\HandlerBase;
+use Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface;
+use Drupal\Core\Render\ElementInfoManager;
 use Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetManager;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -28,28 +31,28 @@ class BetterExposedFilters extends InputRequired {
   /**
    * BEF filters widget plugin manager.
    *
-   * @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetManager
+   * @var BetterExposedFiltersWidgetManager
    */
   public $filterWidgetManager;
 
   /**
    * BEF pager widget plugin manager.
    *
-   * @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetManager
+   * @var BetterExposedFiltersWidgetManager
    */
   public $pagerWidgetManager;
 
   /**
    * BEF sort widget plugin manager.
    *
-   * @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetManager
+   * @var BetterExposedFiltersWidgetManager
    */
   public $sortWidgetManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -62,13 +65,13 @@ class BetterExposedFilters extends InputRequired {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetManager $filter_widget_manager
+   * @param BetterExposedFiltersWidgetManager $filter_widget_manager
    *   The better exposed filter widget manager for filter widgets.
-   * @param \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetManager $pager_widget_manager
+   * @param BetterExposedFiltersWidgetManager $pager_widget_manager
    *   The better exposed filter widget manager for pager widgets.
-   * @param \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetManager $sort_widget_manager
+   * @param BetterExposedFiltersWidgetManager $sort_widget_manager
    *   The better exposed filter widget manager for sort widgets.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Manage drupal modules.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, BetterExposedFiltersWidgetManager $filter_widget_manager, BetterExposedFiltersWidgetManager $pager_widget_manager, BetterExposedFiltersWidgetManager $sort_widget_manager, ModuleHandlerInterface $module_handler) {
@@ -121,7 +124,7 @@ class BetterExposedFilters extends InputRequired {
     // Initialize options if any sort is exposed.
     // Iterate over each sort and determine if any sorts are exposed.
     $is_sort_exposed = FALSE;
-    /** @var \Drupal\views\Plugin\views\HandlerBase $sort */
+    /** @var HandlerBase $sort */
     foreach ($this->view->display_handler->getHandlers('sort') as $sort) {
       if ($sort->isExposed()) {
         $is_sort_exposed = TRUE;
@@ -139,7 +142,7 @@ class BetterExposedFilters extends InputRequired {
     }
 
     // Go through each exposed filter and set default format.
-    /** @var \Drupal\views\Plugin\views\HandlerBase $filter */
+    /** @var HandlerBase $filter */
     foreach ($this->view->display_handler->getHandlers('filter') as $filter_id => $filter) {
       if (!$filter->isExposed()) {
         continue;
@@ -336,7 +339,7 @@ class BetterExposedFilters extends InputRequired {
 
     // Iterate over each sort and determine if any sorts are exposed.
     $is_sort_exposed = FALSE;
-    /** @var \Drupal\views\Plugin\views\HandlerBase $sort */
+    /** @var HandlerBase $sort */
     foreach ($this->view->display_handler->getHandlers('sort') as $sort) {
       if ($sort->isExposed()) {
         $is_sort_exposed = TRUE;
@@ -394,7 +397,7 @@ class BetterExposedFilters extends InputRequired {
 
       if ($selected_plugin_id) {
         $plugin_configuration = $bef_options['sort'] ?? [];
-        /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+        /** @var BetterExposedFiltersWidgetInterface $plugin */
         $plugin = $this->sortWidgetManager->createInstance($selected_plugin_id, $plugin_configuration);
         $plugin->setView($this->view);
 
@@ -459,7 +462,7 @@ class BetterExposedFilters extends InputRequired {
 
       if ($selected_plugin_id) {
         $plugin_configuration = $bef_options['pager'] ?? [];
-        /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+        /** @var BetterExposedFiltersWidgetInterface $plugin */
         $plugin = $this->pagerWidgetManager->createInstance($selected_plugin_id, $plugin_configuration);
         $plugin->setView($this->view);
 
@@ -478,7 +481,7 @@ class BetterExposedFilters extends InputRequired {
     ];
 
     // Iterate over each filter and add BEF filter options.
-    /** @var \Drupal\views\Plugin\views\HandlerBase $filter */
+    /** @var HandlerBase $filter */
     foreach ($this->view->display_handler->getHandlers('filter') as $filter_id => $filter) {
       if (!$filter->isExposed()) {
         continue;
@@ -539,7 +542,7 @@ class BetterExposedFilters extends InputRequired {
 
       if ($selected_plugin_id) {
         $plugin_configuration = $bef_options['filter'][$filter_id] ?? [];
-        /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+        /** @var BetterExposedFiltersWidgetInterface $plugin */
         $plugin = $this->filterWidgetManager->createInstance($selected_plugin_id, $plugin_configuration);
         $plugin->setView($this->view);
         $plugin->setViewsHandler($filter);
@@ -556,7 +559,7 @@ class BetterExposedFilters extends InputRequired {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -588,7 +591,7 @@ class BetterExposedFilters extends InputRequired {
     }
 
     // Shorthand for all filter handlers in this view.
-    /** @var \Drupal\views\Plugin\views\HandlerBase[] $filters */
+    /** @var HandlerBase[] $filters */
     $filters = $this->view->display_handler->handlers['filter'];
 
     // Iterate over all filter, sort and pager plugins.
@@ -600,7 +603,7 @@ class BetterExposedFilters extends InputRequired {
           if (!$plugin_id) {
             continue;
           }
-          /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+          /** @var BetterExposedFiltersWidgetInterface $plugin */
           $plugin = $this->filterWidgetManager->createInstance($plugin_id);
           $subform = &$bef_form[$type][$filter_id]['configuration'];
           $subform_state = SubformState::createForSubform($subform, $parent_form, $form_state);
@@ -618,11 +621,11 @@ class BetterExposedFilters extends InputRequired {
 
         // Use the correct widget manager.
         if ($type === 'pager') {
-          /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+          /** @var BetterExposedFiltersWidgetInterface $plugin */
           $plugin = $this->pagerWidgetManager->createInstance($plugin_id);
         }
         else {
-          /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+          /** @var BetterExposedFiltersWidgetInterface $plugin */
           $plugin = $this->sortWidgetManager->createInstance($plugin_id);
         }
 
@@ -652,7 +655,7 @@ class BetterExposedFilters extends InputRequired {
     $bef_options = &$options['bef'];
 
     // Shorthand for all filter handlers in this view.
-    /** @var \Drupal\views\Plugin\views\HandlerBase[] $filters */
+    /** @var HandlerBase[] $filters */
     $filters = $this->view->display_handler->handlers['filter'];
 
     parent::submitOptionsForm($form, $form_state);
@@ -663,7 +666,7 @@ class BetterExposedFilters extends InputRequired {
       if ($type === 'filter') {
         foreach ($config as $filter_id => $filter_options) {
           $plugin_id = $filter_options['configuration']['plugin_id'] ?? NULL;
-          /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+          /** @var BetterExposedFiltersWidgetInterface $plugin */
           if (!$plugin_id) {
             unset($bef_options['filter'][$filter_id]);
             continue;
@@ -690,11 +693,11 @@ class BetterExposedFilters extends InputRequired {
 
         // Use the correct widget manager.
         if ($type === 'pager') {
-          /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+          /** @var BetterExposedFiltersWidgetInterface $plugin */
           $plugin = $this->pagerWidgetManager->createInstance($plugin_id);
         }
         else {
-          /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+          /** @var BetterExposedFiltersWidgetInterface $plugin */
           $plugin = $this->sortWidgetManager->createInstance($plugin_id);
         }
 
@@ -781,7 +784,7 @@ class BetterExposedFilters extends InputRequired {
       $plugin_id = $bef_options['sort']['plugin_id'];
       $plugin_configuration = $bef_options['sort'];
 
-      /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+      /** @var BetterExposedFiltersWidgetInterface $plugin */
       $plugin = $this->sortWidgetManager->createInstance($plugin_id, $plugin_configuration);
       $plugin->setView($this->view);
       $plugin->exposedFormAlter($form, $form_state);
@@ -796,7 +799,7 @@ class BetterExposedFilters extends InputRequired {
       $plugin_id = $bef_options['pager']['plugin_id'];
       $plugin_configuration = $bef_options['pager'];
 
-      /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+      /** @var BetterExposedFiltersWidgetInterface $plugin */
       $plugin = $this->pagerWidgetManager->createInstance($plugin_id, $plugin_configuration);
       $plugin->setView($this->view);
       $plugin->exposedFormAlter($form, $form_state);
@@ -805,9 +808,8 @@ class BetterExposedFilters extends InputRequired {
     /*
      * Handle exposed filters.
      */
-
     // Shorthand for all filter handlers in this view.
-    /** @var \Drupal\views\Plugin\views\HandlerBase[] $filters */
+    /** @var HandlerBase[] $filters */
     $filters = $this->view->display_handler->handlers['filter'];
 
     // Iterate over all exposed filters.
@@ -820,7 +822,7 @@ class BetterExposedFilters extends InputRequired {
 
         $plugin_id = $filter_options['plugin_id'];
         if ($plugin_id) {
-          /** @var \Drupal\better_exposed_filters\Plugin\BetterExposedFiltersWidgetInterface $plugin */
+          /** @var BetterExposedFiltersWidgetInterface $plugin */
           $plugin = $this->filterWidgetManager->createInstance($plugin_id, $filter_options);
           $plugin->setView($this->view);
           $plugin->setViewsHandler($filters[$filter_id]);
@@ -898,7 +900,7 @@ class BetterExposedFilters extends InputRequired {
    * @see https://www.drupal.org/project/drupal/issues/2190333
    */
   protected function addDefaultElementInfo(array &$element) {
-    /** @var \Drupal\Core\Render\ElementInfoManager $element_info_manager */
+    /** @var ElementInfoManager $element_info_manager */
     $element_info = \Drupal::service('element_info');
     if (isset($element['#type']) && empty($element['#defaults_loaded']) && ($info = $element_info->getInfo($element['#type']))) {
       $element['#process'] = $element['#process'] ?? [];
diff --git a/tests/modules/bef_test/bef_test.install b/tests/modules/bef_test/bef_test.install
index 0ce4eea..5823626 100644
--- a/tests/modules/bef_test/bef_test.install
+++ b/tests/modules/bef_test/bef_test.install
@@ -1,18 +1,20 @@
 <?php
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * Provides install hooks for the BEF Test module.
  */
-
 /**
  * Adds terms to the hierarchical "location" vocabulary.
  *
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws PluginNotFoundException
  *   Thrown if the entity type doesn't exist.
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+ * @throws InvalidPluginDefinitionException
  *   Thrown if the storage handler couldn't be loaded.
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  *   In case of failures an exception is thrown.
  */
 function bef_test_install() {
@@ -77,11 +79,11 @@ function bef_test_install() {
  * @return int
  *   TID of the newly created term.
  *
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws PluginNotFoundException
  *   Thrown if the entity type doesn't exist.
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+ * @throws InvalidPluginDefinitionException
  *   Thrown if the storage handler couldn't be loaded.
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  *   In case of failures an exception is thrown.
  */
 function _bef_test_add_term($name, $parent = 0) {
diff --git a/tests/src/Kernel/BetterExposedFiltersKernelTestBase.php b/tests/src/Kernel/BetterExposedFiltersKernelTestBase.php
index e2b0f1d..00eeab2 100644
--- a/tests/src/Kernel/BetterExposedFiltersKernelTestBase.php
+++ b/tests/src/Kernel/BetterExposedFiltersKernelTestBase.php
@@ -33,7 +33,7 @@ abstract class BetterExposedFiltersKernelTestBase extends ViewsKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp();
 
     $this->installSchema('node', ['node_access']);
@@ -51,7 +51,7 @@ abstract class BetterExposedFiltersKernelTestBase extends ViewsKernelTestBase {
   /**
    * Gets the render array for the views exposed form.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view object.
    *
    * @return array
@@ -66,7 +66,7 @@ abstract class BetterExposedFiltersKernelTestBase extends ViewsKernelTestBase {
   /**
    * Renders the views exposed form.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view object.
    */
   protected function renderExposedForm(ViewExecutable $view) {
diff --git a/tests/src/Kernel/Plugin/filter/FilterWidgetKernelTest.php b/tests/src/Kernel/Plugin/filter/FilterWidgetKernelTest.php
index 45f3f9a..3cc3a4d 100644
--- a/tests/src/Kernel/Plugin/filter/FilterWidgetKernelTest.php
+++ b/tests/src/Kernel/Plugin/filter/FilterWidgetKernelTest.php
@@ -88,7 +88,7 @@ class FilterWidgetKernelTest extends BetterExposedFiltersKernelTestBase {
     $sorted_options = $options = $output['field_bef_integer_value']['#options'];
     asort($sorted_options);
 
-    $this->assertNotEqual(array_keys($options), array_keys($sorted_options), '"Field BEF integer" options are not sorted alphabetically.');
+    $this->assertNotEquals(array_keys($options), array_keys($sorted_options), '"Field BEF integer" options are not sorted alphabetically.');
 
     $view->destroy();
 
@@ -112,7 +112,7 @@ class FilterWidgetKernelTest extends BetterExposedFiltersKernelTestBase {
     asort($sorted_options);
 
     // Assert our "collapsible" options detail is visible.
-    $this->assertEqual(array_keys($options), array_keys($sorted_options), '"Field BEF integer" options are sorted alphabetically.');
+    $this->assertEquals(array_keys($options), array_keys($sorted_options), '"Field BEF integer" options are sorted alphabetically.');
 
     $view->destroy();
   }
diff --git a/tests/src/Kernel/Plugin/sort/SortWidgetKernelTest.php b/tests/src/Kernel/Plugin/sort/SortWidgetKernelTest.php
index b6adf08..60994cd 100644
--- a/tests/src/Kernel/Plugin/sort/SortWidgetKernelTest.php
+++ b/tests/src/Kernel/Plugin/sort/SortWidgetKernelTest.php
@@ -51,7 +51,7 @@ class SortWidgetKernelTest extends BetterExposedFiltersKernelTestBase {
     ];
 
     // Assert our combined sort options are added.
-    $this->assertEqual($options, $assert, 'Sort options are combined.');
+    $this->assertEquals($options, $assert, 'Sort options are combined.');
 
     $view->destroy();
   }
@@ -89,7 +89,7 @@ class SortWidgetKernelTest extends BetterExposedFiltersKernelTestBase {
     ];
 
     // Assert our combined sort options are added.
-    $this->assertEqual($options, $assert, 'Sort options are combined and rewritten.');
+    $this->assertEquals($options, $assert, 'Sort options are combined and rewritten.');
 
     $view->destroy();
   }
@@ -128,7 +128,7 @@ class SortWidgetKernelTest extends BetterExposedFiltersKernelTestBase {
     ];
 
     // Assert our combined sort options are added.
-    $this->assertEqual($options, $assert, 'Reset sort option was added.');
+    $this->assertEquals($options, $assert, 'Reset sort option was added.');
 
     $view->destroy();
   }
diff --git a/tests/src/Traits/BetterExposedFiltersTrait.php b/tests/src/Traits/BetterExposedFiltersTrait.php
index 5926298..690f144 100644
--- a/tests/src/Traits/BetterExposedFiltersTrait.php
+++ b/tests/src/Traits/BetterExposedFiltersTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\better_exposed_filters\Traits;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\views\ViewExecutable;
 
@@ -13,7 +14,7 @@ trait BetterExposedFiltersTrait {
   /**
    * Returns the configured BEF options.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view object.
    *
    * @return array
@@ -26,12 +27,12 @@ trait BetterExposedFiltersTrait {
   /**
    * Merges options into existing BEF configuration.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view object.
    * @param array $options
    *   The list of options (e.g. ['sort' => ['plugin_id' => 'default']]).
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   In case of failures an exception is thrown.
    */
   protected function setBetterExposedOptions(ViewExecutable $view, array $options) {
