modules/contrib/user_referral/includes/UserReferralWrapper.php
modules/contrib/user_referral/modules/user_referral_domain/user_referral_domain.module
modules/contrib/user_referral/src/Access/UserReferralAccess.php
modules/contrib/user_referral/src/Controller/UserReferralController.php
modules/contrib/user_referral/src/Element/ReferralLink.php
modules/contrib/user_referral/src/Entity/UserReferralType.php
modules/contrib/user_referral/src/Form/SettingsForm.php
modules/contrib/user_referral/src/Form/UserReferralTypeDeleteConfirm.php
modules/contrib/user_referral/src/Plugin/views/field/UserReferralType.php
modules/contrib/user_referral/src/UserReferralPermissions.php
modules/contrib/user_referral/src/UserReferralTypeAccessControlHandler.php
modules/contrib/user_referral/src/UserReferralTypeForm.php
modules/contrib/user_referral/src/UserReferralTypeInterface.php
modules/contrib/user_referral/src/UserReferralTypeListBuilder.php
modules/contrib/user_referral/user_referral.install
modules/contrib/user_referral/user_referral.module
modules/contrib/user_referral/user_referral.rules.inc
modules/contrib/user_referral/user_referral.tokens.inc
modules/contrib/user_referral/user_referral.variable.inc
modules/contrib/user_referral/user_referral.views.inc

6 files with changes
====================

1) modules/contrib/user_referral/user_referral.tokens.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user_referral\UserReferralTypeInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for user referral related data.
@@ @@
   $replacements = [];

   if ($type == 'user_referral_type' && !empty($data['user_referral_type'])) {
-    /** @var \Drupal\user_referral\UserReferralTypeInterface; $user_referral_type */
+    /** @var UserReferralTypeInterface ; $user_referral_type */
     $user_referral_type = $data['user_referral_type'];

     foreach ($tokens as $name => $original) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/user_referral/user_referral.rules.inc:74

    ---------- begin diff ----------
@@ @@
 }

 function user_referral_get_referer($account) {
-  $referral = db_query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $account->uid))
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $referral = \Drupal::database()->query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $account->uid))
     ->fetchObject();
   if ($referral) {
     $referral->data = unserialize($referral->data);
    ----------- end diff -----------

Applied rules:
 * DBQueryRector
 * ArgumentRemoverRector


3) modules/contrib/user_referral/src/UserReferralPermissions.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Returns a list of permissions for a given user referral type.
    *
-   * @param \Drupal\user_referral\Entity\UserReferralType $type
+   * @param UserReferralType $type
    *   The user referral type.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/user_referral/src/Controller/UserReferralController.php:20

    ---------- begin diff ----------
@@ @@
    * In order to never disclose a reset link via a referrer header this
    * controller must always return a redirect response.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    * @param int $uid
    *   User ID of the user requesting reset.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect response.
    */
   public function referralLinkProcess(Request $request, $uid, $type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/user_referral/src/Access/UserReferralAccess.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_referral\Access;

+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;

@@ @@
   /**
    * Check whether the user can view referral link list.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public static function checkUserReferrralLinksListAccess(AccountInterface $user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/user_referral/includes/UserReferralWrapper.php:22

    ---------- begin diff ----------
@@ @@
    * {@inheritDoc}
    */
   protected function load($uid) {
-    $referral = db_query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $uid))
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $referral = \Drupal::database()->query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $uid))
       ->fetchObject();
     if ($referral) {
       $referral->data = unserialize($referral->data);
    ----------- end diff -----------

Applied rules:
 * DBQueryRector
 * ArgumentRemoverRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [ERROR] Could not process                                                      
         "modules/contrib/user_referral/src/Element/ReferralLink.php" file, due 
         to:                                                                    
         "Analyze error: "Class Drupal\core\Render\Element\RenderElement not    
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

