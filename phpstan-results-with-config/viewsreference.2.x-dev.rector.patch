diff --git a/src/Annotation/ViewsReferenceSetting.php b/src/Annotation/ViewsReferenceSetting.php
index 6d42951..c93aa13 100644
--- a/src/Annotation/ViewsReferenceSetting.php
+++ b/src/Annotation/ViewsReferenceSetting.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\viewsreference\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class ViewsReferenceSetting extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/Field/FieldWidget/ViewsReferenceTrait.php b/src/Plugin/Field/FieldWidget/ViewsReferenceTrait.php
index 73a30b1..1301bb9 100644
--- a/src/Plugin/Field/FieldWidget/ViewsReferenceTrait.php
+++ b/src/Plugin/Field/FieldWidget/ViewsReferenceTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\viewsreference\Plugin\Field\FieldWidget;
 
+use Drupal\viewsreference\Plugin\ViewsReferenceSettingInterface;
+use Drupal\views\Entity\View;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -16,7 +18,7 @@ trait ViewsReferenceTrait {
   /**
    * Build a field element for a viewsreference field.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   Array of default values for this field.
    * @param int $delta
    *   The order of this item in the array of sub-elements (0, 1, 2, etc.).
@@ -24,7 +26,7 @@ trait ViewsReferenceTrait {
    *   The field item element.
    * @param array $form
    *   The overall form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Array of default values for this field.
    *
    * @return array
@@ -154,7 +156,7 @@ trait ViewsReferenceTrait {
     foreach ($enabled_settings as $enabled_setting) {
       if (!empty($plugin_definitions[$enabled_setting])) {
         $plugin_definition = $plugin_definitions[$enabled_setting];
-        /** @var \Drupal\viewsreference\Plugin\ViewsReferenceSettingInterface $plugin_instance */
+        /** @var ViewsReferenceSettingInterface $plugin_instance */
         $plugin_instance = $viewsreference_plugin_manager->createInstance($plugin_definition['id'], [
           'view_name' => $view_name,
           'display_id' => $display_id,
@@ -196,7 +198,7 @@ trait ViewsReferenceTrait {
   /**
    * Build a field element for a viewsreference field.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   Array of default values for this field.
    * @param int $delta
    *   The order of this item in the array of sub-elements (0, 1, 2, etc.).
@@ -204,7 +206,7 @@ trait ViewsReferenceTrait {
    *   The field item element.
    * @param array $form
    *   The overall form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Array of default values for this field.
    *
    * @return array
@@ -317,7 +319,7 @@ trait ViewsReferenceTrait {
   protected function getViewDisplays($view_id) {
     $options = [];
     $view_plugins = array_diff($this->getFieldSetting('plugin_types'), ['0']);
-    /** @var \Drupal\views\Entity\View $view */
+    /** @var View $view */
     if ($view = \Drupal::service('entity_type.manager')->getStorage('view')->load($view_id)) {
       if ($displays = $view->get('display')) {
         usort($displays, function($a, $b) {
@@ -363,7 +365,7 @@ trait ViewsReferenceTrait {
    * @param array $form
    *   The form structure where field elements are attached to. This might be a
    *   full form structure, or a sub-element of a larger form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
diff --git a/src/Plugin/ViewsReferenceSettingInterface.php b/src/Plugin/ViewsReferenceSettingInterface.php
index 9b907c1..f7a1ccd 100644
--- a/src/Plugin/ViewsReferenceSettingInterface.php
+++ b/src/Plugin/ViewsReferenceSettingInterface.php
@@ -21,7 +21,7 @@ interface ViewsReferenceSettingInterface extends PluginInspectionInterface {
   /**
    * Alter the view object.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view object to alter.
    * @param mixed $value
    *   The field value.
diff --git a/src/Plugin/ViewsReferenceSettingManager.php b/src/Plugin/ViewsReferenceSettingManager.php
index 52d9111..94db08e 100644
--- a/src/Plugin/ViewsReferenceSettingManager.php
+++ b/src/Plugin/ViewsReferenceSettingManager.php
@@ -17,9 +17,9 @@ class ViewsReferenceSettingManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/viewsreference.info.yml b/viewsreference.info.yml
index 62e7722..cb1155a 100644
--- a/viewsreference.info.yml
+++ b/viewsreference.info.yml
@@ -1,5 +1,5 @@
 name: 'Views Reference Field'
 description: 'Defines the viewsreference field type to embed views in an entity reference field.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Views
 type: module
diff --git a/viewsreference.install b/viewsreference.install
index c5487c2..4ccd4f3 100644
--- a/viewsreference.install
+++ b/viewsreference.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\core\Field\FieldConfigInterface;
 /**
  * @file
  * Install, update and uninstall functions for the viewsreference module.
@@ -86,7 +87,7 @@ function viewsreference_update_8103() {
       // Update field definition settings to enable the title/argument plugins.
       foreach ($field['bundles'] as $bundle) {
         $bundle_fields = $entity_field_manager->getFieldDefinitions($entity_type_id, $bundle);
-        /** @var \Drupal\core\Field\FieldConfigInterface $field_definition */
+        /** @var FieldConfigInterface $field_definition */
         $field_definition = $bundle_fields[$field_name];
         $settings = $field_definition->getSettings();
         $settings['enabled_settings'] = [
diff --git a/viewsreference.module b/viewsreference.module
index 3e08a50..636ab7c 100644
--- a/viewsreference.module
+++ b/viewsreference.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\viewsreference\Plugin\ViewsReferenceSettingInterface;
 use Drupal\Component\Utility\Xss;
 use Drupal\Component\Utility\Html;
 /**
@@ -15,7 +16,7 @@ use \Drupal\views\ViewExecutable;
  */
 function viewsreference_help($route_name, RouteMatchInterface $arg) {
   if ($route_name === 'help.page.viewsreference') {
-    $output = file_get_contents(drupal_get_path('module', 'viewsreference') . '/README.md');
+    $output = file_get_contents(\Drupal::service('extension.list.module')->getPath('viewsreference') . '/README.md');
     return \Drupal::moduleHandler()->moduleExists('markdown') ? Xss::filterAdmin(\Drupal::moduleHandler()->invoke('markdown', 'filter', ['process', 0, -1, $output])) : '<h3>viewsreference README</h3><pre>' . Html::escape($output) . '</pre>';
   }
 }
@@ -74,7 +75,7 @@ function viewsreference_views_pre_view(ViewExecutable $view, $display_id, array
     foreach ($view->element['#viewsreference']['enabled_settings'] as $enabled_setting) {
       if (!empty($plugin_definitions[$enabled_setting])) {
         $plugin_definition = $plugin_definitions[$enabled_setting];
-        /** @var \Drupal\viewsreference\Plugin\ViewsReferenceSettingInterface $plugin_instance */
+        /** @var ViewsReferenceSettingInterface $plugin_instance */
         $plugin_instance = $viewsreference_plugin_manager->createInstance($plugin_definition['id']);
         $value = isset($view->element['#viewsreference']['data'][$plugin_definition['id']]) ? $view->element['#viewsreference']['data'][$plugin_definition['id']] : $plugin_definition['default_value'];
         $plugin_instance->alterView($view, $value);
