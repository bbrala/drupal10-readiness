diff --git a/editablefields.module b/editablefields.module
index de446c5..d45f91e 100644
--- a/editablefields.module
+++ b/editablefields.module
@@ -1,15 +1,15 @@
 <?php
 
+use Drupal\editablefields\services\EditableFieldsHelper;
 /**
  * @file
  * Contains editablefields.module.
  */
-
 /**
  * Implements hook_field_formatter_info_alter().
  */
 function editablefields_field_formatter_info_alter(array &$info) {
-  /** @var \Drupal\editablefields\services\EditableFieldsHelper $service */
+  /** @var EditableFieldsHelper $service */
   $service = \Drupal::service('editablefields.helper');
   $service->formatterInfoAlter($info);
 }
diff --git a/src/Form/EditableFieldsForm.php b/src/Form/EditableFieldsForm.php
index 66519b4..a0818bd 100644
--- a/src/Form/EditableFieldsForm.php
+++ b/src/Form/EditableFieldsForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\editablefields\Form;
 
+use Drupal\editablefields\services\EditableFieldsHelperInterface;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\BaseFormIdInterface;
 use Drupal\Core\Form\FormBase;
@@ -16,7 +18,7 @@ class EditableFieldsForm extends FormBase implements BaseFormIdInterface {
   /**
    * Entity updated in the form.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $entity;
 
@@ -37,7 +39,7 @@ class EditableFieldsForm extends FormBase implements BaseFormIdInterface {
   /**
    * Drupal\editablefields\services\EditableFieldsHelperInterface definition.
    *
-   * @var \Drupal\editablefields\services\EditableFieldsHelperInterface
+   * @var EditableFieldsHelperInterface
    */
   protected $editablefieldsHelper;
 
@@ -150,7 +152,7 @@ class EditableFieldsForm extends FormBase implements BaseFormIdInterface {
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state object.
    *
    * @return array
@@ -168,7 +170,7 @@ class EditableFieldsForm extends FormBase implements BaseFormIdInterface {
   /**
    * Loads a form display mode.
    *
-   * @return \Drupal\Core\Entity\Display\EntityFormDisplayInterface|NULL
+   * @return EntityFormDisplayInterface|NULL
    *   Display mode.
    */
   public function getFormDisplay() {
@@ -181,7 +183,7 @@ class EditableFieldsForm extends FormBase implements BaseFormIdInterface {
   /**
    * Set defaults to be used for unique form ID.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Edited entity.
    * @param $field_name
    *   Field name.
diff --git a/src/Plugin/Field/FieldFormatter/EditableFieldsFieldFormatter.php b/src/Plugin/Field/FieldFormatter/EditableFieldsFieldFormatter.php
index 6f6bef2..c8e2a88 100644
--- a/src/Plugin/Field/FieldFormatter/EditableFieldsFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/EditableFieldsFieldFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\editablefields\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ -24,7 +25,7 @@ class EditableFieldsFieldFormatter extends FormatterBase implements ContainerFac
   /**
    * Drupal\editablefields\services\EditableFieldsHelperInterface definition.
    *
-   * @var \Drupal\editablefields\services\EditableFieldsHelperInterface
+   * @var EditableFieldsHelperInterface
    */
   protected $editablefieldsHelper;
 
@@ -48,7 +49,7 @@ class EditableFieldsFieldFormatter extends FormatterBase implements ContainerFac
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
-    /** @var \Drupal\editablefields\services\EditableFieldsHelperInterface $editablefields_helper */
+    /** @var EditableFieldsHelperInterface $editablefields_helper */
     $editablefields_helper = $container->get('editablefields.helper');
     return new static(
       $plugin_id,
@@ -102,7 +103,7 @@ class EditableFieldsFieldFormatter extends FormatterBase implements ContainerFac
    * {@inheritdoc}
    */
   public function viewElements(FieldItemListInterface $items, $langcode) {
-    /** @var \Drupal\Core\Entity\EntityInterface $entity */
+    /** @var EntityInterface $entity */
     $entity = $items->getEntity();
 
     if (!$this->editablefieldsHelper->checkAccess($entity)) {
diff --git a/src/services/EditableFieldsHelper.php b/src/services/EditableFieldsHelper.php
index 32fd75d..350546f 100644
--- a/src/services/EditableFieldsHelper.php
+++ b/src/services/EditableFieldsHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\editablefields\services;
 
+use Drupal\editablefields\Form\EditableFieldsForm;
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\FieldTypePluginManagerInterface;
 use Drupal\Core\Form\FormBuilderInterface;
@@ -19,35 +21,35 @@ class EditableFieldsHelper implements EditableFieldsHelperInterface {
   /**
    * Drupal\Core\Field\FieldTypePluginManagerInterface definition.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $pluginManagerFieldFieldType;
 
   /**
    * Drupal\Core\Form\FormBuilderInterface definition.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * Drupal\Core\DependencyInjection\ClassResolverInterface definition.
    *
-   * @var \Drupal\Core\DependencyInjection\ClassResolverInterface
+   * @var ClassResolverInterface
    */
   protected $classResolver;
 
   /**
    * Drupal\Core\Session\AccountProxyInterface definition.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Drupal\Core\Entity\EntityDisplayRepositoryInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
@@ -100,7 +102,7 @@ class EditableFieldsHelper implements EditableFieldsHelperInterface {
    * {@inheritDoc}
    */
   public function getForm(EntityInterface $entity, string $field_name, string $form_mode) {
-    /** @var \Drupal\editablefields\Form\EditableFieldsForm $form_object */
+    /** @var EditableFieldsForm $form_object */
     $form_object = $this->classResolver->getInstanceFromDefinition(
       self::FORM_CLASS
     );
@@ -126,7 +128,7 @@ class EditableFieldsHelper implements EditableFieldsHelperInterface {
     $options[self::DEFAULT_FORM_MODE] = self::DEFAULT_FORM_MODE;
     $form_modes = $this->entityDisplayRepository->getAllFormModes();
 
-    /** @var \Drupal\Core\Entity\Display\EntityFormDisplayInterface[] $modes */
+    /** @var EntityFormDisplayInterface[] $modes */
     foreach ($form_modes as $entity_type => $modes) {
       foreach ($modes as $mode) {
         $label = explode('.', $mode['id']);
diff --git a/src/services/EditableFieldsHelperInterface.php b/src/services/EditableFieldsHelperInterface.php
index 92e0482..1f0d74a 100644
--- a/src/services/EditableFieldsHelperInterface.php
+++ b/src/services/EditableFieldsHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\editablefields\services;
 
+use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
 
 /**
@@ -54,7 +55,7 @@ interface EditableFieldsHelperInterface {
   /**
    * Checks if the user can use "editablefields" formatter.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity object.
    *
    * @return bool
@@ -73,7 +74,7 @@ interface EditableFieldsHelperInterface {
   /**
    * Prepares a render array of the editable field form.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity object.
    * @param string $field_name
    *   Field name.
@@ -88,12 +89,12 @@ interface EditableFieldsHelperInterface {
   /**
    * Loads entity form display.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity object.
    * @param $form_mode
    *   Form mode.
    *
-   * @return \Drupal\Core\Entity\Display\EntityFormDisplayInterface|NULL
+   * @return EntityFormDisplayInterface|NULL
    */
   public function getFormDisplay(EntityInterface $entity, $form_mode);
 
