diff --git a/shutdown.info.yml b/shutdown.info.yml
index 6bfce09..f926d1a 100644
--- a/shutdown.info.yml
+++ b/shutdown.info.yml
@@ -1,7 +1,6 @@
 name: 'Website shutdown'
 description: 'Provides ability to shut down a website.'
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: shutdown.settings
 package: Other
diff --git a/src/EventSubscriber/ShutdownSubscriber.php b/src/EventSubscriber/ShutdownSubscriber.php
index 84cb6a4..0697920 100644
--- a/src/EventSubscriber/ShutdownSubscriber.php
+++ b/src/EventSubscriber/ShutdownSubscriber.php
@@ -2,8 +2,9 @@
 
 namespace Drupal\shutdown\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Url;
@@ -27,32 +28,32 @@ class ShutdownSubscriber implements EventSubscriberInterface {
   /**
    * The current account.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $accountProxy;
 
   /**
    * Shutdown settings config object.
    *
-   * @var Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs the shutdown subscriber.
    *
-   * @param \Drupal\Core\Session\AccountProxy $account_proxy
+   * @param AccountProxy $account_proxy
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The configuration object factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler class to use for third-party modules alter calls.
    */
   public function __construct(AccountProxy $account_proxy, ConfigFactory $config_factory, ModuleHandlerInterface $module_handler) {
@@ -64,7 +65,7 @@ class ShutdownSubscriber implements EventSubscriberInterface {
   /**
    * Reacts on KernelEvents::REQUEST event.
    */
-  public function onRequest(GetResponseEvent $event) {
+  public function onRequest(RequestEvent $event) {
     if ($this->config->get('shutdown_enable') == 1 && !$this->accountProxy->hasPermission('navigate shut website') && !function_exists('drush_main')) {
       $excluded_route_names = $this->getExcludedRouteNames();
       $redirect_page = $this->config->get('shutdown_redirect_page');
diff --git a/src/ShutdownCore.php b/src/ShutdownCore.php
index 75c1b63..4ab05d2 100644
--- a/src/ShutdownCore.php
+++ b/src/ShutdownCore.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\shutdown;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 
 /**
@@ -14,14 +15,14 @@ class ShutdownCore {
   /**
    * Shutdown settings config object.
    *
-   * @var Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Constructs the shutdown core service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The factory for configuration objects.
    */
   public function __construct(ConfigFactoryInterface $config) {
diff --git a/tests/src/Functional/RedirectTest.php b/tests/src/Functional/RedirectTest.php
index 29504e6..985c1a0 100644
--- a/tests/src/Functional/RedirectTest.php
+++ b/tests/src/Functional/RedirectTest.php
@@ -44,7 +44,7 @@ class RedirectTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     // Create a page content type that we will use for testing.
     $type = $this->container->get('entity_type.manager')->getStorage('node_type')
