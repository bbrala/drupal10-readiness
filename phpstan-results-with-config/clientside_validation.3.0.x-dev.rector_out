modules/contrib/clientside_validation/clientside_validation.api.php
modules/contrib/clientside_validation/clientside_validation.module
modules/contrib/clientside_validation/clientside_validation_demo/src/Form/ClientsideValidationDemoForm.php
modules/contrib/clientside_validation/clientside_validation_jquery/clientside_validation_jquery.install
modules/contrib/clientside_validation/clientside_validation_jquery/clientside_validation_jquery.module
modules/contrib/clientside_validation/clientside_validation_jquery/src/Commands/ClientsideValidationJqueryDrush.php
modules/contrib/clientside_validation/clientside_validation_jquery/src/Form/ClientsideValidationjQuerySettingsForm.php
modules/contrib/clientside_validation/clientside_validation_jquery/src/Plugin/CvValidator/EqualTo.php
modules/contrib/clientside_validation/clientside_validation_jquery/src/Plugin/CvValidator/Pattern.php
modules/contrib/clientside_validation/src/Annotation/CvValidator.php
modules/contrib/clientside_validation/src/CvValidatorBase.php
modules/contrib/clientside_validation/src/CvValidatorInterface.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/Email.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/Max.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/MaxLength.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/Min.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/Required.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/Step.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/Url.php
modules/contrib/clientside_validation/src/Plugin/CvValidator/UrlInternalExternal.php
modules/contrib/clientside_validation/src/ValidatorManager.php
modules/contrib/clientside_validation/src/ValidatorManagerInterface.php
modules/contrib/clientside_validation/tests/src/FunctionalJavascript/ClientsideValidationTest.php

11 files with changes
=====================

1) modules/contrib/clientside_validation/tests/src/FunctionalJavascript/ClientsideValidationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\clientside_validation\FunctionalJavascript;

+use Drupal\user\UserInterface;
+use Behat\Mink\Element\DocumentElement;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;

 /**
@@ @@
   /**
    * A user with permission to access demo form.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * DocumentElement object.
    *
-   * @var \Behat\Mink\Element\DocumentElement
+   * @var DocumentElement
    */
   protected $page;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser([
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/clientside_validation/src/ValidatorManagerInterface.php:17

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element to get the validators for.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the form this element belongs to.
    */
   public function getValidators(array $element, FormStateInterface $form_state);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/clientside_validation/src/ValidatorManager.php:17

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ @@
    *
    * @param array $element
    *   The form element to get the validators for.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the form this element belongs to.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/clientside_validation/src/CvValidatorInterface.php:14

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element to validate.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the form this element belongs to.
    */
   public function addValidation(array &$element, FormStateInterface $form_state);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/clientside_validation/src/CvValidatorBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\clientside_validation;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
    * @param string $default
    *   Default value for the title.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup|mixed
+   * @return TranslatableMarkup|mixed
    *   Title value.
    */
   protected function getElementTitle(array $element, $default = '') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/clientside_validation/src/Annotation/CvValidator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\clientside_validation\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The name of the validator.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


7) modules/contrib/clientside_validation/clientside_validation_jquery/src/Commands/ClientsideValidationJqueryDrush.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Service for accessing filesystem.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * ClientsideValidationJqueryDrush Constructor.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   Service for accessing filesystem.
    */
   public function __construct(FileSystemInterface $file_system) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/clientside_validation/clientside_validation_jquery/clientside_validation_jquery.module:55

    ---------- begin diff ----------
@@ @@
  */
 function clientside_validation_jquery_library_info_alter(&$libraries, $extension) {
   if ($extension == 'clientside_validation_jquery' && isset($libraries['jquery.validate'])) {
-    $module_path = drupal_get_path('module', 'clientside_validation_jquery');
+    $module_path = \Drupal::service('extension.list.module')->getPath('clientside_validation_jquery');
     $path_in_yml = '/libraries/jquery-validation/dist/';

     // Load settings from config.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


9) modules/contrib/clientside_validation/clientside_validation_jquery/clientside_validation_jquery.install:37

    ---------- begin diff ----------
@@ @@
  */
 function clientside_validation_jquery_update_8002() {
   // Prepare the new config path.
-  $config_path = drupal_get_path('module', 'clientside_validation_jquery') . '/config/install/clientside_validation_jquery.settings.yml';
+  $config_path = \Drupal::service('extension.list.module')->getPath('clientside_validation_jquery') . '/config/install/clientside_validation_jquery.settings.yml';

   // Parse the yaml and get data from config file.
   $config_yaml = Yaml::parse(file_get_contents($config_path));
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


10) modules/contrib/clientside_validation/clientside_validation.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Extension\ModuleHandlerInterface;
 /**
  * @file
  * Hook implementations for the Clientside Validation module.
@@ @@
   $hook = 'clientside_validation_should_validate';
   $hook_args = [$element, $form_state, $form_id];

-  /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
+  /** @var ModuleHandlerInterface $module_handler */
   $module_handler = \Drupal::moduleHandler();

   $implementations = $module_handler->getImplementations($hook);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


11) modules/contrib/clientside_validation/clientside_validation.api.php:26

    ---------- begin diff ----------
@@ @@
  *
  * @param mixed $element
  *   Element array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Form State object.
  * @param string $form_id
  *   Form ID.
    ----------- end diff -----------

 [OK] 11 files have been changed by Rector                                      

