diff --git a/queue_unique.install b/queue_unique.install
index 4bf6300..60693b7 100644
--- a/queue_unique.install
+++ b/queue_unique.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\queue_unique\UniqueQueueDatabaseFactory;
 use Drupal\queue_unique\UniqueDatabaseQueue;
 
 /**
@@ -17,7 +18,7 @@ function queue_unique_update_8001() {
   }
   $temp_table = UniqueDatabaseQueue::TABLE_NAME . '_temp';
   $connection->schema()->renameTable(UniqueDatabaseQueue::TABLE_NAME, $temp_table);
-  /** @var \Drupal\queue_unique\UniqueQueueDatabaseFactory $queue_factory */
+  /** @var UniqueQueueDatabaseFactory $queue_factory */
   $queue_factory = \Drupal::service('queue_unique.database');
   $queue = $queue_factory->get(__FUNCTION__);
   // Add a dummy item to the queue so the new table is created.
diff --git a/tests/src/Kernel/UniqueQueueTest.php b/tests/src/Kernel/UniqueQueueTest.php
index 7b6fdc8..3acc43c 100644
--- a/tests/src/Kernel/UniqueQueueTest.php
+++ b/tests/src/Kernel/UniqueQueueTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\queue_unique\Kernel;
 
+use Drupal\Core\Database\Schema;
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\IntegrityConstraintViolationException;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\KernelTests\KernelTestBase;
@@ -91,7 +93,7 @@ class UniqueQueueTest extends KernelTestBase {
    */
   public function testUpdateHook8001() {
     module_load_install('queue_unique');
-    /** @var \Drupal\Core\Database\Schema $database_schema */
+    /** @var Schema $database_schema */
     $database_schema = $this->container->get('database')->schema();
     // The table should not exist yet.
     self::assertFalse($database_schema->tableExists(UniqueDatabaseQueue::TABLE_NAME));
@@ -119,7 +121,7 @@ class UniqueQueueTest extends KernelTestBase {
         $this->createItemMd5($name, $data);
       }
     }
-    /** @var \Drupal\Core\Database\Connection $connection */
+    /** @var Connection $connection */
     $connection = $this->container->get('database');
     $query = $connection->select(UniqueDatabaseQueue::TABLE_NAME)->countQuery();
     $count = $query->execute()->fetchField();
