diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index b88c8db..4f5baad 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\lazy_image_style\Form;
 
+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\Cache\CacheTagsInvalidator;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,21 +19,21 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The entity_type.manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The cache_tags.invalidator service.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidator
+   * @var CacheTagsInvalidator
    */
   protected $cacheTagsInvalidator;
 
   /**
    * Returns the module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -176,8 +181,8 @@ class SettingsForm extends ConfigFormBase {
    * @return array
    *   The all responsive image styles.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getResponsiveImageStyles() {
     $output = [];
diff --git a/src/LazyImageStyleHelper.php b/src/LazyImageStyleHelper.php
index eeeca51..cde5fbb 100644
--- a/src/LazyImageStyleHelper.php
+++ b/src/LazyImageStyleHelper.php
@@ -2,11 +2,16 @@
 
 namespace Drupal\lazy_image_style;
 
+use Symfony\Component\Mime\MimeTypesInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Template\Attribute;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\image\ImageStyleInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * The helper service for alter build image.
@@ -28,41 +33,41 @@ class LazyImageStyleHelper {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The MIME type guesser.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
   /**
    * The image style storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;
 
   /**
    * Constructs a lazyimagestylehelper object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mimeTypeGuesser
+   * @param MimeTypesInterface $mimeTypeGuesser
    *   The MIME type guesser.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(
     EntityTypeManagerInterface $entity_type_manager,
     ConfigFactoryInterface $config_factory,
-    MimeTypeGuesserInterface $mimeTypeGuesser
+    MimeTypesInterface $mimeTypeGuesser
   ) {
 
     $this->configFactory = $config_factory;
@@ -87,7 +92,7 @@ class LazyImageStyleHelper {
     }
 
     // Move source uri to data-src attribute.
-    $variables['attributes']['data-srcset'] = file_url_transform_relative($variables['attributes']['src']);
+    $variables['attributes']['data-srcset'] = \Drupal::service('file_url_generator')->transformRelative($variables['attributes']['src']);
 
     $variables['attributes']['srcset'] = $this->getTmpUrl($variables['uri']);
     $variables['attributes']['class'][] = 'lazyload';
@@ -111,7 +116,7 @@ class LazyImageStyleHelper {
     }
 
     // Move source uri to data-src attribute.
-    $variables['image']['#attributes']['data-srcset'] = file_url_transform_relative($variables['image']['#uri']);
+    $variables['image']['#attributes']['data-srcset'] = \Drupal::service('file_url_generator')->transformRelative($variables['image']['#uri']);
 
     $variables['image']['#attributes']['srcset'] = $this->getTmpUrl($variables['uri']);
     $variables['image']['#attributes']['class'][] = 'lazyload';
@@ -132,14 +137,14 @@ class LazyImageStyleHelper {
       return;
     }
 
-    /** @var \Drupal\Core\Template\Attribute $source */
+    /** @var Attribute $source */
     foreach ($variables['sources'] as $source) {
       $srcset = $source->offsetGet('srcset');
       $source->removeAttribute('srcset');
       $source->setAttribute('data-srcset', $srcset);
     }
 
-    $variables['img_element']['#attributes']['data-srcset'] = file_url_transform_relative($variables['img_element']['#uri']);
+    $variables['img_element']['#attributes']['data-srcset'] = \Drupal::service('file_url_generator')->transformRelative($variables['img_element']['#uri']);
     $variables['img_element']['#attributes']['srcset'] = $this->getTmpUrl($variables['uri']);
     $variables['img_element']['#attributes']['class'][] = 'lazyload';
     $variables['#attached'] = $this->addAttachments(isset($variables['#attached']) ? $variables['#attached'] : []);
@@ -215,7 +220,7 @@ class LazyImageStyleHelper {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @see lazy_image_style_form_image_style_delete_form_alter
@@ -253,7 +258,7 @@ class LazyImageStyleHelper {
    * @param string $style_name
    *   The Style name.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|mixed|null
+   * @return EntityInterface|mixed|null
    *   The style entity.
    */
   protected function loadStyle($style_name) {
diff --git a/src/Plugin/CKEditorPlugin/LazyImageStyle.php b/src/Plugin/CKEditorPlugin/LazyImageStyle.php
index d31889a..194ef24 100644
--- a/src/Plugin/CKEditorPlugin/LazyImageStyle.php
+++ b/src/Plugin/CKEditorPlugin/LazyImageStyle.php
@@ -20,7 +20,7 @@ class LazyImageStyle extends CKEditorPluginBase {
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'lazy_image_style') . '/assets/js/plugins/lazy-image-style/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('lazy_image_style') . '/assets/js/plugins/lazy-image-style/plugin.js';
   }
 
   /**
@@ -34,7 +34,7 @@ class LazyImageStyle extends CKEditorPluginBase {
    * {@inheritdoc}
    */
   public function getButtons() {
-    $module_path = drupal_get_path('module', 'lazy_image_style');
+    $module_path = \Drupal::service('extension.list.module')->getPath('lazy_image_style');
     return [
       'lazy-image-style' => [
         'label' => $this->t('Lazy image style'),
diff --git a/src/Plugin/Filter/LazyImageStyle.php b/src/Plugin/Filter/LazyImageStyle.php
index 22bafab..671d1f2 100644
--- a/src/Plugin/Filter/LazyImageStyle.php
+++ b/src/Plugin/Filter/LazyImageStyle.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lazy_image_style\Plugin\Filter;
 
+use Drupal\lazy_image_style\LazyImageStyleHelper;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\filter\FilterProcessResult;
@@ -24,7 +25,7 @@ class LazyImageStyle extends FilterBase implements ContainerFactoryPluginInterfa
   /**
    * The lazy image style helper service.
    *
-   * @var \Drupal\lazy_image_style\LazyImageStyleHelper
+   * @var LazyImageStyleHelper
    */
   protected $helper;
 
