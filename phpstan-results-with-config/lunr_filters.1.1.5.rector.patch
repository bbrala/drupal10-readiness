diff --git a/lunr_filters.module b/lunr_filters.module
index b9f57eb..1536022 100644
--- a/lunr_filters.module
+++ b/lunr_filters.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\views\ViewExecutable;
 /**
  * @file
  * Add filters to lunr search pages.
@@ -100,7 +101,7 @@ function lunr_filters_lunr_search_page_alter(&$build, LunrSearchInterface $lunr_
   $build['form']['#theme'] = 'lunr_filters_form';
 
   // Use our worker.
-  $build['#attached']['drupalSettings']['lunr']['workerPath'] = base_path() . drupal_get_path('module', 'lunr_filters') . '/js/search.worker.js';
+  $build['#attached']['drupalSettings']['lunr']['workerPath'] = base_path() . \Drupal::service('extension.list.module')->getPath('lunr_filters') . '/js/search.worker.js';
 
   // Get display and table headers fields.
   $display_fields = [];
@@ -211,7 +212,7 @@ function lunr_filters_library_info_alter(&$libraries, $extension) {
     return;
   }
 
-  $new_path = '/' . drupal_get_path('module', 'lunr_filters') . '/js';
+  $new_path = '/' . \Drupal::service('extension.list.module')->getPath('lunr_filters') . '/js';
   $replacements = [
     'js/search.js' => $new_path . '/search.js',
     'js/search.theme.js' => $new_path . '/search.theme.js',
@@ -245,7 +246,7 @@ function lunr_filters_library_info_alter(&$libraries, $extension) {
  * Implements hook_form_FORM_ID_form_alter().
  */
 function lunr_filters_form_views_exposed_form_alter(&$form, FormState $form_state) {
-  /** @var \Drupal\views\ViewExecutable $view */
+  /** @var ViewExecutable $view */
   $view = $form_state->get('view');
 
   // Only react on our display.
diff --git a/src/Controller/LunrFilterSearchIndexController.php b/src/Controller/LunrFilterSearchIndexController.php
index ae6a9ad..f186292 100644
--- a/src/Controller/LunrFilterSearchIndexController.php
+++ b/src/Controller/LunrFilterSearchIndexController.php
@@ -13,7 +13,7 @@ class LunrFilterSearchIndexController extends LunrSearchIndexController {
   /**
    * Provides a page to trigger the indexing process.
    *
-   * @param \Drupal\lunr\LunrSearchInterface $lunr_search
+   * @param LunrSearchInterface $lunr_search
    *   The Lunr search entity.
    *
    * @return array
diff --git a/src/EventSubscriber/TomePathSubscriber.php b/src/EventSubscriber/TomePathSubscriber.php
index ace63ae..019acee 100644
--- a/src/EventSubscriber/TomePathSubscriber.php
+++ b/src/EventSubscriber/TomePathSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\lunr_filters\EventSubscriber;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\lunr\LunrSearchInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\tome_static\Event\CollectPathsEvent;
@@ -16,23 +18,23 @@ class TomePathSubscriber implements EventSubscriberInterface {
   /**
    * The Lunr search entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $lunrSearchStorage;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs the EntityPathSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, FileSystemInterface $file_system) {
@@ -47,14 +49,14 @@ class TomePathSubscriber implements EventSubscriberInterface {
    *   The collect paths event.
    */
   public function collectPaths(CollectPathsEvent $event) {
-    /** @var \Drupal\lunr\LunrSearchInterface $search */
+    /** @var LunrSearchInterface $search */
     foreach ($this->lunrSearchStorage->loadMultiple() as $search) {
       $directory = dirname($search->getBaseIndexPath());
       foreach (array_keys($this->fileSystem->scanDirectory($directory, '/.*/')) as $filename) {
         $event->addPath(file_create_url($filename), ['language_processed' => 'language_processed']);
       }
     }
-    $event->addPath(drupal_get_path('module', 'lunr_filters') . '/js/search.worker.js', ['language_processed' => 'language_processed']);
+    $event->addPath(\Drupal::service('extension.list.module')->getPath('lunr_filters') . '/js/search.worker.js', ['language_processed' => 'language_processed']);
   }
 
   /**
diff --git a/src/Plugin/views/row/LunrFiltersSearchIndexRow.php b/src/Plugin/views/row/LunrFiltersSearchIndexRow.php
index 98caa96..ee0e42f 100644
--- a/src/Plugin/views/row/LunrFiltersSearchIndexRow.php
+++ b/src/Plugin/views/row/LunrFiltersSearchIndexRow.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lunr_filters\Plugin\views\row;
 
+use Drupal\views\ResultRow;
 use Drupal\lunr\Plugin\views\row\LunrSearchIndexRow;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\ViewExecutable;
@@ -183,7 +184,7 @@ class LunrFiltersSearchIndexRow extends LunrSearchIndexRow {
    * {@inheritdoc}
    */
   public function render($row) {
-    /** @var \Drupal\views\ResultRow $row */
+    /** @var ResultRow $row */
     $field_options = (array) $this->options['field_options'];
     $output = [];
 
