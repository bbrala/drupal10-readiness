modules/contrib/comment_approver/comment_approver.module
modules/contrib/comment_approver/src/Annotation/CommentApprover.php
modules/contrib/comment_approver/src/CommentTester.php
modules/contrib/comment_approver/src/CommentTesterInterface.php
modules/contrib/comment_approver/src/Event/CommentApproverEvent.php
modules/contrib/comment_approver/src/Form/CommentApproverSettings.php
modules/contrib/comment_approver/src/Plugin/CommentApprover/ProfanityBlocker.php
modules/contrib/comment_approver/src/Plugin/CommentApprover/SentimentApprover.php
modules/contrib/comment_approver/src/Plugin/CommentApproverBase.php
modules/contrib/comment_approver/src/Plugin/CommentApproverInterface.php
modules/contrib/comment_approver/src/Plugin/CommentApproverManager.php
modules/contrib/comment_approver/src/SentimentApi.php
modules/contrib/comment_approver/src/SentimentApiInterface.php
modules/contrib/comment_approver/tests/src/Functional/LoadTest.php

11 files with changes
=====================

1) modules/contrib/comment_approver/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\comment_approver\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/comment_approver/src/SentimentApi.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * GuzzleHttp\Client definition.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * Drupal\Core\Logger\LoggerChannelFactoryInterface definition.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/comment_approver/src/Plugin/CommentApproverManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/comment_approver/src/Plugin/CommentApproverInterface.php:48

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function settingsFormValidate(array &$form, FormStateInterface $form_state);
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function settingsFormSubmit(array &$form, FormStateInterface $form_state);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/comment_approver/src/Plugin/CommentApproverBase.php:85

    ---------- begin diff ----------
@@ @@
   /**
    * Returns all the textual data present in a comment.
    *
-   * @param Drupal\comment\CommentInterface $comment
+   * @param CommentInterface $comment
    *   Entity object of type comment.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/comment_approver/src/Plugin/CommentApprover/SentimentApprover.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Sentiment Api object.
    *
-   * @var \Drupal\comment_approver\SentimentApiInterface
+   * @var SentimentApiInterface
    */
   protected $sentimentApi;

@@ @@
    *   Plugin Id.
    * @param mixed $plugin_definition
    *   Plugin Definition.
-   * @param \Drupal\comment_approver\SentimentApiInterface $sentimentApi
+   * @param SentimentApiInterface $sentimentApi
    *   Sentiment Api object.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, SentimentApiInterface $sentimentApi) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/comment_approver/src/Form/CommentApproverSettings.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\comment_approver\Plugin\CommentApproverManager definition.
    *
-   * @var \Drupal\comment_approver\Plugin\CommentApproverManager
+   * @var CommentApproverManager
    */
   protected $pluginManagerCommentApprover;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/comment_approver/src/Event/CommentApproverEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\comment_approver\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\comment\CommentInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event that is fired when comment approver approves / blocks a comment.
@@ @@
   /**
    * The Comment object.
    *
-   * @var \Drupal\comment\CommentInterface
+   * @var CommentInterface
    */
   public $comment;

@@ @@
   /**
    * Constructs the object.
    *
-   * @param \Drupal\comment\CommentInterface $comment
+   * @param CommentInterface $comment
    *   The Comment object which has been changed by comment approver.
    */
   public function __construct(CommentInterface $comment) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/comment_approver/src/CommentTester.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\comment_approver;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\comment_approver\Plugin\CommentApproverManager;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\comment\CommentInterface;
@@ @@
   /**
    * Drupal\comment_approver\Plugin\CommentApproverManager definition.
    *
-   * @var \Drupal\comment_approver\Plugin\CommentApproverManager
+   * @var CommentApproverManager
    */
   protected $pluginManagerCommentApprover;
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
   /**
    * CommentTester configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/comment_approver/src/Annotation/CommentApprover.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\comment_approver\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


11) modules/contrib/comment_approver/comment_approver.module:17

    ---------- begin diff ----------
@@ @@
   switch ($route_name) {
     // Main module help for the comment_approver module.
     case 'help.page.comment_approver':
-      $output = '<pre>' . file_get_contents(drupal_get_path('module', 'comment_approver') . '/README.md') . '</pre>';
+      $output = '<pre>' . file_get_contents(\Drupal::service('extension.list.module')->getPath('comment_approver') . '/README.md') . '</pre>';
       return $output;

     default:
@@ @@
  *
  * @param string $event_name
  *   Name of the event.
- * @param Drupal\comment\CommentInterface $comment
+ * @param CommentInterface $comment
  *   The comment object.
  */
 function _commment_approver_dispatch_event(string $event_name, CommentInterface $comment) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 11 files have been changed by Rector                                      

