diff --git a/modules/layout_builder_restrictions_by_region/src/Form/AllowedBlocksForm.php b/modules/layout_builder_restrictions_by_region/src/Form/AllowedBlocksForm.php
index e3c7221..30566e6 100644
--- a/modules/layout_builder_restrictions_by_region/src/Form/AllowedBlocksForm.php
+++ b/modules/layout_builder_restrictions_by_region/src/Form/AllowedBlocksForm.php
@@ -30,42 +30,42 @@ class AllowedBlocksForm extends FormBase {
   /**
    * Request stack that controls the lifecycle of requests.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The layout manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutManager;
 
   /**
    * Manages entity type plugin definitions.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Creates a private temporary storage for a collection.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStoreFactory;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Turns a render array into a HTML string.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
@@ -128,17 +128,17 @@ class AllowedBlocksForm extends FormBase {
   /**
    * The ModalFormController constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Request stack that controls the lifecycle of requests.
    * @param \Drupal\Core\Block\LayoutPluginManagerInterface $layout_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   Manages entity type plugin definitions.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $private_temp_store_factory
+   * @param PrivateTempStoreFactory $private_temp_store_factory
    *   Creates a private temporary storage for a collection.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   Turns a render array into a HTML string.
    */
   public function __construct(RequestStack $request_stack, LayoutPluginManagerInterface $layout_manager, EntityTypeManager $entity_type_manager, PrivateTempStoreFactory $private_temp_store_factory, MessengerInterface $messenger, Renderer $renderer) {
@@ -321,7 +321,7 @@ class AllowedBlocksForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function ajaxSubmit(array &$form, FormStateInterface $form_state) {
diff --git a/modules/layout_builder_restrictions_by_region/src/Form/FormAlter.php b/modules/layout_builder_restrictions_by_region/src/Form/FormAlter.php
index 90eb2c9..d12a5bd 100644
--- a/modules/layout_builder_restrictions_by_region/src/Form/FormAlter.php
+++ b/modules/layout_builder_restrictions_by_region/src/Form/FormAlter.php
@@ -30,59 +30,59 @@ class FormAlter implements ContainerInjectionInterface {
   /**
    * The section storage manager.
    *
-   * @var \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface
+   * @var SectionStorageManagerInterface
    */
   protected $sectionStorageManager;
 
   /**
    * The block manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
 
   /**
    * The layout manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutManager;
 
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;
 
   /**
    * A service for generating UUIDs.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuid;
 
   /**
    * Creates a private temporary storage for a collection.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $privateTempStoreFactory;
 
   /**
    * FormAlter constructor.
    *
-   * @param \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface $section_storage_manager
+   * @param SectionStorageManagerInterface $section_storage_manager
    *   The section storage manager.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager.
    * @param \Drupal\Core\Block\LayoutPluginManagerInterface $layout_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The context handler.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   A service for generating UUIDs.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $private_temp_store_factory
+   * @param PrivateTempStoreFactory $private_temp_store_factory
    *   Creates a private temporary storage for a collection.
    */
   public function __construct(SectionStorageManagerInterface $section_storage_manager, BlockManagerInterface $block_manager, LayoutPluginManagerInterface $layout_manager, ContextHandlerInterface $context_handler, UuidInterface $uuid, PrivateTempStoreFactory $private_temp_store_factory) {
diff --git a/modules/layout_builder_restrictions_by_region/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestrictionByRegion.php b/modules/layout_builder_restrictions_by_region/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestrictionByRegion.php
index 1e97bc8..3324218 100644
--- a/modules/layout_builder_restrictions_by_region/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestrictionByRegion.php
+++ b/modules/layout_builder_restrictions_by_region/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestrictionByRegion.php
@@ -27,14 +27,14 @@ class EntityViewModeRestrictionByRegion extends LayoutBuilderRestrictionBase {
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Database connection service.
    *
-   * @var Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -47,9 +47,9 @@ class EntityViewModeRestrictionByRegion extends LayoutBuilderRestrictionBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ModuleHandlerInterface $module_handler, Connection $connection) {
diff --git a/modules/layout_builder_restrictions_by_region/src/Routing/RouteSubscriber.php b/modules/layout_builder_restrictions_by_region/src/Routing/RouteSubscriber.php
index cd279f2..feeb4ac 100644
--- a/modules/layout_builder_restrictions_by_region/src/Routing/RouteSubscriber.php
+++ b/modules/layout_builder_restrictions_by_region/src/Routing/RouteSubscriber.php
@@ -17,14 +17,14 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a RouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/modules/layout_builder_restrictions_by_region/src/Traits/LayoutBuilderRestrictionsByRegionHelperTrait.php b/modules/layout_builder_restrictions_by_region/src/Traits/LayoutBuilderRestrictionsByRegionHelperTrait.php
index 6bb29bb..68c8c8c 100644
--- a/modules/layout_builder_restrictions_by_region/src/Traits/LayoutBuilderRestrictionsByRegionHelperTrait.php
+++ b/modules/layout_builder_restrictions_by_region/src/Traits/LayoutBuilderRestrictionsByRegionHelperTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\layout_builder_restrictions_by_region\Traits;
 
+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\TempStore\PrivateTempStoreFactory;
 /**
  * Methods to help Layout Builder Restrictions By Region plugin.
  */
@@ -100,7 +102,7 @@ trait LayoutBuilderRestrictionsByRegionHelperTrait {
   /**
    * Gets the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManager
+   * @return EntityTypeManager
    *   Manages entity type plugin definitions.
    */
   protected function entityTypeManager() {
@@ -110,7 +112,7 @@ trait LayoutBuilderRestrictionsByRegionHelperTrait {
   /**
    * Gets the private tempStore.
    *
-   * @return \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @return PrivateTempStoreFactory
    *   Creates a private temporary storage for a collection.
    */
   protected function privateTempStoreFactory() {
diff --git a/src/Annotation/LayoutBuilderRestriction.php b/src/Annotation/LayoutBuilderRestriction.php
index ff7aeca..5ac833f 100644
--- a/src/Annotation/LayoutBuilderRestriction.php
+++ b/src/Annotation/LayoutBuilderRestriction.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\layout_builder_restrictions\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class LayoutBuilderRestriction extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -34,7 +35,7 @@ class LayoutBuilderRestriction extends Plugin {
   /**
    * A description of the plugin (optional).
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Form/FormAlter.php b/src/Form/FormAlter.php
index 97129aa..d34a117 100644
--- a/src/Form/FormAlter.php
+++ b/src/Form/FormAlter.php
@@ -24,41 +24,41 @@ class FormAlter implements ContainerInjectionInterface {
   /**
    * The section storage manager.
    *
-   * @var \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface
+   * @var SectionStorageManagerInterface
    */
   protected $sectionStorageManager;
 
   /**
    * The block manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
 
   /**
    * The layout manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutManager;
 
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;
 
   /**
    * FormAlter constructor.
    *
-   * @param \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface $section_storage_manager
+   * @param SectionStorageManagerInterface $section_storage_manager
    *   The section storage manager.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager.
    * @param \Drupal\Core\Block\LayoutPluginManagerInterface $layout_manager
    *   The layout plugin manager.
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The context handler.
    */
   public function __construct(SectionStorageManagerInterface $section_storage_manager, BlockManagerInterface $block_manager, LayoutPluginManagerInterface $layout_manager, ContextHandlerInterface $context_handler) {
@@ -291,7 +291,7 @@ class FormAlter implements ContainerInjectionInterface {
   /**
    * Helper function to prepare saved allowed blocks.
    *
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -327,7 +327,7 @@ class FormAlter implements ContainerInjectionInterface {
   /**
    * Helper function to prepare saved allowed layouts.
    *
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
diff --git a/src/Form/MoveBlockForm.php b/src/Form/MoveBlockForm.php
index 6d64b1b..6d2b219 100644
--- a/src/Form/MoveBlockForm.php
+++ b/src/Form/MoveBlockForm.php
@@ -43,10 +43,10 @@ class MoveBlockForm extends MoveBlockFormCore {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An AJAX response that display validation error messages or represents a
    *   successful submission.
    */
diff --git a/src/Form/RestrictionPluginConfigForm.php b/src/Form/RestrictionPluginConfigForm.php
index db43161..f278a1c 100644
--- a/src/Form/RestrictionPluginConfigForm.php
+++ b/src/Form/RestrictionPluginConfigForm.php
@@ -16,13 +16,13 @@ class RestrictionPluginConfigForm extends FormBase {
   /**
    * The UI for managing Layout Builder Restrictions Plugins.
    *
-   * @var \Drupal\layout_builder_restrictions\Plugin\LayoutBuilderRestrictionManager
+   * @var LayoutBuilderRestrictionManager
    */
   protected $pluginManagerLayoutBuilderRestriction;
   /**
    * Drupal\Core\Config\ConfigManager definition.
    *
-   * @var \Drupal\Core\Config\ConfigManager
+   * @var ConfigManager
    */
   protected $configManager;
 
diff --git a/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestriction.php b/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestriction.php
index 4947a6d..2e9e6cb 100644
--- a/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestriction.php
+++ b/src/Plugin/LayoutBuilderRestriction/EntityViewModeRestriction.php
@@ -27,14 +27,14 @@ class EntityViewModeRestriction extends LayoutBuilderRestrictionBase {
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Database connection service.
    *
-   * @var Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -47,9 +47,9 @@ class EntityViewModeRestriction extends LayoutBuilderRestrictionBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ModuleHandlerInterface $module_handler, Connection $connection) {
diff --git a/src/Plugin/LayoutBuilderRestrictionInterface.php b/src/Plugin/LayoutBuilderRestrictionInterface.php
index 7b108bd..4bb630b 100644
--- a/src/Plugin/LayoutBuilderRestrictionInterface.php
+++ b/src/Plugin/LayoutBuilderRestrictionInterface.php
@@ -51,7 +51,7 @@ interface LayoutBuilderRestrictionInterface extends PluginInspectionInterface {
   /**
    * Determine whether the block being moved is allowed to the destination.
    *
-   * @param \Drupal\layout_builder\SectionStorageInterface $section_storage
+   * @param SectionStorageInterface $section_storage
    *   The section storage.
    * @param int $delta_from
    *   The delta of the original section.
@@ -73,7 +73,7 @@ interface LayoutBuilderRestrictionInterface extends PluginInspectionInterface {
   /**
    * Returns an array of allowed inline blocks in a given context.
    *
-   * @param \Drupal\layout_builder\SectionStorageInterface $section_storage
+   * @param SectionStorageInterface $section_storage
    *   The section storage.
    * @param int $delta
    *   The delta of the section to splice.
diff --git a/src/Plugin/LayoutBuilderRestrictionManager.php b/src/Plugin/LayoutBuilderRestrictionManager.php
index 3e3d025..f56a93a 100644
--- a/src/Plugin/LayoutBuilderRestrictionManager.php
+++ b/src/Plugin/LayoutBuilderRestrictionManager.php
@@ -19,7 +19,7 @@ class LayoutBuilderRestrictionManager extends DefaultPluginManager {
    * directly. See \Drupal\Core\Form\ConfigFormBase::config() for an example of
    * this.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -29,11 +29,11 @@ class LayoutBuilderRestrictionManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory to load plugin configuration.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory) {
diff --git a/src/Traits/PluginHelperTrait.php b/src/Traits/PluginHelperTrait.php
index 77ee8f5..1493159 100644
--- a/src/Traits/PluginHelperTrait.php
+++ b/src/Traits/PluginHelperTrait.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\layout_builder_restrictions\Traits;
 
+use Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface;
+use Drupal\Core\Block\BlockManagerInterface;
+use Drupal\Core\Layout\LayoutPluginManagerInterface;
+use Drupal\Core\Plugin\Context\ContextHandlerInterface;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Plugin\Context\EntityContext;
 use Drupal\layout_builder\Context\LayoutBuilderContextTrait;
@@ -21,7 +26,7 @@ trait PluginHelperTrait {
   /**
    * Gets block definitions appropriate for an entity display.
    *
-   * @param \Drupal\layout_builder\Entity\LayoutEntityDisplayInterface $display
+   * @param LayoutEntityDisplayInterface $display
    *   The entity display being edited.
    *
    * @return array[]
@@ -331,7 +336,7 @@ trait PluginHelperTrait {
   /**
    * Gets the section storage manager.
    *
-   * @return \Drupal\layout_builder\SectionStorage\SectionStorageManagerInterface
+   * @return SectionStorageManagerInterface
    *   The section storage manager.
    */
   private function sectionStorageManager() {
@@ -341,7 +346,7 @@ trait PluginHelperTrait {
   /**
    * Gets the block manager.
    *
-   * @return \Drupal\Core\Block\BlockManagerInterface
+   * @return BlockManagerInterface
    *   The block manager.
    */
   private function blockManager() {
@@ -351,7 +356,7 @@ trait PluginHelperTrait {
   /**
    * Gets the layout plugin manager.
    *
-   * @return \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @return LayoutPluginManagerInterface
    *   The layout plugin manager.
    */
   private function layoutManager() {
@@ -361,7 +366,7 @@ trait PluginHelperTrait {
   /**
    * Gets the context handler.
    *
-   * @return \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @return ContextHandlerInterface
    *   The context handler.
    */
   private function contextHandler() {
@@ -371,7 +376,7 @@ trait PluginHelperTrait {
   /**
    * Gets the entity bundle interface.
    *
-   * @return \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @return EntityTypeBundleInfoInterface
    *   An interface for an entity type bundle info.
    */
   private function entityTypeBundleInfo() {
diff --git a/tests/src/Kernel/RestrictionManagerTest.php b/tests/src/Kernel/RestrictionManagerTest.php
index 28cdc1f..3ed33f9 100644
--- a/tests/src/Kernel/RestrictionManagerTest.php
+++ b/tests/src/Kernel/RestrictionManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\layout_builder_restrictions\Kernel;
 
+use Drupal\layout_builder_restrictions\Plugin\LayoutBuilderRestrictionManager;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -22,7 +23,7 @@ class RestrictionManagerTest extends KernelTestBase {
    * Test that we can invoke getSortedPlugins without creating a notice.
    */
   public function testNoPhpNotice() {
-    /** @var \Drupal\layout_builder_restrictions\Plugin\LayoutBuilderRestrictionManager $manager */
+    /** @var LayoutBuilderRestrictionManager $manager */
     $manager = \Drupal::service('plugin.manager.layout_builder_restriction');
     $plugins = $manager->getSortedPlugins();
     // This should be at least one item long, since we ship a plugin in the
diff --git a/tests/src/Traits/MoveBlockHelperTrait.php b/tests/src/Traits/MoveBlockHelperTrait.php
index 8cea9a6..3a870dc 100644
--- a/tests/src/Traits/MoveBlockHelperTrait.php
+++ b/tests/src/Traits/MoveBlockHelperTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\layout_builder_restrictions\Traits;
 
+use Behat\Mink\Element\NodeElement;
 use Drupal\Tests\contextual\FunctionalJavascript\ContextualLinkClickTrait;
 
 /**
@@ -22,7 +23,7 @@ trait MoveBlockHelperTrait {
     $this->assertSession()->assertWaitOnAjaxRequest();
     $block_tds = $page->findAll('css', '.layout-builder-components-table__block-label');
     $this->assertCount(count($block_tds), $expected_block_labels);
-    /** @var \Behat\Mink\Element\NodeElement $block_td */
+    /** @var NodeElement $block_td */
     foreach ($block_tds as $block_td) {
       $this->assertSame(array_shift($expected_block_labels), trim($block_td->getText()));
     }
@@ -74,7 +75,7 @@ trait MoveBlockHelperTrait {
    * @param string $block_label
    *   The block label.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The row handle element.
    */
   protected function findRowHandle($block_label) {
@@ -105,7 +106,7 @@ trait MoveBlockHelperTrait {
     $blocks = $page->findAll('css', "$region_selector [data-layout-block-uuid]");
     $this->assertCount(count($expected_block_selectors), $blocks);
 
-    /** @var \Behat\Mink\Element\NodeElement $block */
+    /** @var NodeElement $block */
     foreach ($blocks as $block) {
       $block_selector = array_shift($expected_block_selectors);
       $assert_session->elementsCount('css', "$region_selector $block_selector", 1);
