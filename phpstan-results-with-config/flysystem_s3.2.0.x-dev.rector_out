modules/contrib/flysystem_s3/flysystem_s3.module
modules/contrib/flysystem_s3/src/AwsCacheAdapter.php
modules/contrib/flysystem_s3/src/Controller/S3CorsUploadAjaxController.php
modules/contrib/flysystem_s3/src/File/FlysystemS3FileSystem.php
modules/contrib/flysystem_s3/src/Flysystem/Adapter/S3Adapter.php
modules/contrib/flysystem_s3/src/Flysystem/S3.php
modules/contrib/flysystem_s3/src/S3CorsManagedFileHelper.php
modules/contrib/flysystem_s3/tests/bootstrap.php
modules/contrib/flysystem_s3/tests/src/Functional/ModuleInstallUninstallWebTest.php
modules/contrib/flysystem_s3/tests/src/Unit/AwsCacheAdapterTest.php
modules/contrib/flysystem_s3/tests/src/Unit/Flysystem/S3Test.php

6 files with changes
====================

1) modules/contrib/flysystem_s3/tests/src/Unit/Flysystem/S3Test.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\flysystem_s3\Unit\Flysystem;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Aws\Credentials\Credentials;
 use Aws\S3\S3Client;
 use Aws\S3\S3ClientInterface;
@@ @@
  */
 class S3Test extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::__construct
    * @covers ::getExternalUrl
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/flysystem_s3/src/S3CorsManagedFileHelper.php:94

    ---------- begin diff ----------
@@ @@
    *
    * @param string $scheme
    *   A file scheme.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   A user account object.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/flysystem_s3/src/Flysystem/S3.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * The S3 client.
    *
-   * @var \Aws\S3\S3Client
+   * @var S3Client
    */
   protected $client;

@@ @@
   /**
    * Constructs an S3 object.
    *
-   * @param \Aws\S3\S3Client $client
+   * @param S3Client $client
    *   The S3 client.
-   * @param \League\Flysystem\Config $config
+   * @param Config $config
    *   The configuration.
    */
   public function __construct(S3ClientInterface $client, Config $config) {
@@ @@
   /**
    * Returns an S3 client configuration based on a Flysystem configuration.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ @@
   /**
    * Merges default Flysystem configuration.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ @@
   /**
    * Calculates the URL prefix.
    *
-   * @param \League\Flysystem\Config $config
+   * @param Config $config
    *   The configuration.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/flysystem_s3/src/File/FlysystemS3FileSystem.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\flysystem_s3\File;

+use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\File\FileSystem;
 use Drupal\Core\Site\Settings;
@@ @@
   /**
    * FlysystemS3FileSystem constructor.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system being decorated.
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $stream_wrapper_manager
+   * @param StreamWrapperManagerInterface $stream_wrapper_manager
    *   The stream wrapper manager.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The site settings.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The file logger channel.
    */
   public function __construct(StreamWrapperManagerInterface $stream_wrapper_manager, Settings $settings, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/flysystem_s3/src/Controller/S3CorsUploadAjaxController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\flysystem_s3\Controller;

+use Drupal\flysystem_s3\Flysystem\Adapter\S3Adapter;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\file\Entity\File;
 use Drupal\flysystem\FlysystemFactory;
@@ @@
   /**
    * The form builder.
    *
-   * @var \Drupal\flysystem\FlysystemFactory
+   * @var FlysystemFactory
    */
   protected $flysystemFactory;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs an S3CorsUploadAjaxController object.
    *
-   * @param \Drupal\flysystem\FlysystemFactory $flysystem_factory
+   * @param FlysystemFactory $flysystem_factory
    *   The Flysystem factory.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(FlysystemFactory $flysystem_factory, FileSystemInterface $file_system) {
@@ @@
   /**
    * Returns the signed request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JsonResponse object.
    */
   public function signRequest(Request $request) {
     $post = $request->request->all();

-    /** @var \Drupal\flysystem_s3\Flysystem\Adapter\S3Adapter $adapter */
+    /** @var S3Adapter $adapter */
     $scheme = StreamWrapperManager::getScheme($post['destination']);
     $adapter = $this->flysystemFactory->getPlugin($scheme)->getAdapter();

@@ @@
    *
    * Create a file object after the file has been successfuly uploaded to S3.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JsonResponse with the newly created file id.
    */
   public function saveFile(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/flysystem_s3/src/AwsCacheAdapter.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   private $cache;

@@ @@
   /**
    * Constructs an AwsCacheAdapter object.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The Drupal cache backend.
    * @param string $prefix
    *   (Optional) The prefix to use for cache items. Defaults to an empty
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

