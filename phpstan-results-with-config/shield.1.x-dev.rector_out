modules/contrib/shield/shield.install
modules/contrib/shield/shield.module
modules/contrib/shield/shield.post_update.php
modules/contrib/shield/src/EventSubscriber/ShieldSubscriber.php
modules/contrib/shield/src/Form/ShieldSettingsForm.php
modules/contrib/shield/src/Plugin/migrate/process/ShieldPaths.php
modules/contrib/shield/src/ShieldMiddleware.php
modules/contrib/shield/tests/fixtures/drupal7.php
modules/contrib/shield/tests/src/Functional/ShieldTest.php
modules/contrib/shield/tests/src/Kernel/ShieldMigrateTest.php

4 files with changes
====================

1) modules/contrib/shield/tests/src/Functional/ShieldTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\shield\Functional;

+use Behat\Mink\Exception\ExpectationException;
+use Behat\Mink\Exception\ResponseTextException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\key\Entity\Key;
 use Drupal\Tests\BrowserTestBase;

@@ @@
       'key_type_settings' => [],
       'key_provider' => 'file',
       'key_provider_settings' => [
-        'file_location' => drupal_get_path('module', 'shield') . '/tests/files/shield_test.key',
+        'file_location' => \Drupal::service('extension.list.module')->getPath('shield') . '/tests/files/shield_test.key',
         'strip_line_breaks' => FALSE,
       ],
     ])->save();
@@ @@
   /**
    * Validate debug_header config adds X-Shield-Status header.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testShieldHeader() {
     // Assert the response get the debug header.
@@ @@
   /**
    * Validate shield_enable config display or not the http auth prompt.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testShieldEnable() {
     // Assert we are not presented with a http auth prompt.
@@ @@
   /**
    * Validate the authentication message reflects.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testAuthMessage() {
     // Configure shield so it is enabled.
@@ @@
   /**
    * Validate the Shield credential provider.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testShieldCred() {
     // Configure shield so it is enabled.
@@ @@
   /**
    * Test shield module configuration with key module.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws ExpectationException
+   * @throws ResponseTextException
+   * @throws EntityStorageException
    */
   public function testShieldKey() {
     $path_to_test = 'user';
@@ @@
   /**
    * Validate the Shield pages exclude/include feature.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testShieldPages() {
     // Configure shield so it is enabled.
@@ @@
   /**
    * Validate the http_method_allowlist feature.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testShieldHttpMethodAllowlist() {
     // Configure shield so it is enabled.
@@ @@
   /**
    * Validate the basic_auth headers unset feature.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testShieldWithBasicAuth() {
     // Configure shield, so it is enabled and basic_auth headers are kept.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/shield/src/ShieldMiddleware.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shield;

+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\basic_auth\Authentication\Provider\BasicAuth;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The decorated kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The EntityTypeManager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;

@@ @@
   /**
    * The path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $pathAliasManager;

@@ @@
   /**
    * Language Manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Symfony\Component\HttpFoundation\RequestStack definition.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * Constructs a ShieldMiddleware object.
    *
-   * @param \Symfony\Component\HttpKernel\HttpKernelInterface $http_kernel
+   * @param HttpKernelInterface $http_kernel
    *   The decorated kernel.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The EntityTypeManager service.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher service.
-   * @param \Drupal\path_alias\AliasManagerInterface $path_alias_manager
+   * @param AliasManagerInterface $path_alias_manager
    *   The path alias manager.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   Language Manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request stack.
    */
   public function __construct(HttpKernelInterface $http_kernel,
@@ @@
       case 'key':
         $user = $config->get('credentials.key.user');

-        /** @var \Drupal\Core\Entity\EntityStorageInterface $storage */
+        /** @var EntityStorageInterface $storage */
         $storage = $this->entityTypeManager->getStorage('key');
         /** @var \Drupal\key\KeyInterface $pass_key */
         $pass_key = $storage->load($config->get('credentials.key.pass_key'));
@@ @@
         break;

       case 'multikey':
-        /** @var \Drupal\Core\Entity\EntityStorageInterface $storage */
+        /** @var EntityStorageInterface $storage */
         $storage = $this->entityTypeManager->getStorage('key');
         /** @var \Drupal\key\KeyInterface $user_pass_key */
         $user_pass_key = $storage->load($config->get('credentials.multikey.user_pass_key'));
@@ @@
   /**
    * Forward the request to the normal Kernel for processing.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    * @param int $type
    *   The type of the request.
@@ @@
    * @param bool $catch
    *   Whether to catch exceptions or not.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   A Response instance.
    *
    * @throws \Exception
@@ @@
   /**
    * Checks if the current path should be allowed to bypass shield.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The global request object.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The current Shield config.
    *
    * @return bool
@@ @@
    *
    * Call this if basic_auth is enabled.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object on which headers will be modified.
    */
   private function basicAuthRequestAuthenticate(Request $request) {
@@ @@
       // We need to push the current request to the request stack because
       // basic_auth uses a flood functionality which needs the client IP.
       $this->requestStack->push($request);
-      /** @var \Drupal\basic_auth\Authentication\Provider\BasicAuth $basicAuthService */
+      /** @var BasicAuth $basicAuthService */
       $basicAuthService = \Drupal::service('basic_auth.authentication.basic_auth');
       if ($basicAuthService->authenticate($request)) {
         // Reset request stack, as we don't need it anymore.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/shield/src/Form/ShieldSettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * ShieldSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
    * @param \Drupal\key\Plugin\KeyPluginManager|null $keyTypeManager
    *   The key plugin manager.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/shield/src/EventSubscriber/ShieldSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\shield\EventSubscriber;

+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * The shield.settings configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Constructs a new event listener.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Add shield header and cache tag.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The response event.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();

     // If configured, add the debug header calculated in ShieldMiddleware.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 4 files have been changed by Rector                                       

