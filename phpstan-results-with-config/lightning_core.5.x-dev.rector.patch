diff --git a/lightning_core.install b/lightning_core.install
index 1bc5368..8bb5f1c 100644
--- a/lightning_core.install
+++ b/lightning_core.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityViewModeInterface;
 /**
  * @file
  * Contains install and update routines for Lightning.
@@ -61,7 +62,7 @@ function lightning_core_update_8002() {
     'node.rss',
     'node.search_index',
   ]);
-  /** @var \Drupal\Core\Entity\EntityViewModeInterface $view_mode */
+  /** @var EntityViewModeInterface $view_mode */
   foreach ($view_modes as $view_mode) {
     $view_mode->setThirdPartySetting('lightning_core', 'internal', TRUE);
     $storage->save($view_mode);
diff --git a/lightning_core.module b/lightning_core.module
index 459dd65..17c4956 100644
--- a/lightning_core.module
+++ b/lightning_core.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\Core\Entity\EntityViewModeInterface;
+use Drupal\user\RoleInterface;
 /**
  * @file
  * Contains core functionality for the Lightning distribution.
@@ -31,7 +34,7 @@ use Drupal\lightning_core\UpdateManager;
  * Implements hook_entity_base_field_info_alter().
  */
 function lightning_core_entity_base_field_info_alter(array &$fields, EntityTypeInterface $entity_type) {
-  /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+  /** @var BaseFieldDefinition[] $fields */
   if ($entity_type->id() === 'user') {
     $fields['name']->setDisplayConfigurable('view', TRUE);
   }
@@ -63,9 +66,9 @@ function lightning_core_library_info_alter(array &$libraries, $extension) {
     else {
       // @todo Drop this code when Drupal 9.3 is the minimum supported version of core.
       /** @phpstan-ignore-next-line */
-      $url = file_create_url($url);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($url);
       /** @phpstan-ignore-next-line */
-      $url = file_url_transform_relative($url);
+      $url = \Drupal::service('file_url_generator')->transformRelative($url);
     }
 
     $libraries['global-styling']['css']['component'][$url] = [];
@@ -243,7 +246,7 @@ function lightning_core_modules_installed(array $modules) {
   // Record the semantic version of every module in config.
   $versions = Drupal::configFactory()->getEditable(UpdateManager::CONFIG_NAME);
 
-  /** @var \Drupal\lightning_core\UpdateManager $update_manager */
+  /** @var UpdateManager $update_manager */
   $update_manager = \Drupal::service('lightning.update_manager');
 
   foreach ($modules as $module) {
@@ -262,7 +265,7 @@ function lightning_core_modules_installed(array $modules) {
 
     $storage = Drupal::entityTypeManager()->getStorage('entity_view_mode');
     $view_modes = $storage->loadMultiple($view_modes);
-    /** @var \Drupal\Core\Entity\EntityViewModeInterface $view_mode */
+    /** @var EntityViewModeInterface $view_mode */
     foreach ($view_modes as $view_mode) {
       $view_mode->setThirdPartySetting('lightning_core', 'internal', TRUE);
       $storage->save($view_mode);
@@ -293,7 +296,7 @@ function lightning_core_form_user_form_alter(array &$form) {
     $roles = Drupal::entityTypeManager()
       ->getStorage('user_role')
       ->loadMultiple();
-    /** @var \Drupal\user\RoleInterface $role */
+    /** @var RoleInterface $role */
     foreach ($roles as $id => $role) {
       if ($role instanceof EntityDescriptionInterface) {
         $form['account']['roles']['#legend'][$id] = $role->getDescription();
diff --git a/modules/lightning_contact_form/tests/src/Functional/PathAliasTest.php b/modules/lightning_contact_form/tests/src/Functional/PathAliasTest.php
index a2242df..3028fae 100644
--- a/modules/lightning_contact_form/tests/src/Functional/PathAliasTest.php
+++ b/modules/lightning_contact_form/tests/src/Functional/PathAliasTest.php
@@ -24,7 +24,7 @@ class PathAliasTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalCreateContentType([
       'type' => 'page',
diff --git a/modules/lightning_contact_form/tests/src/Kernel/InstallTest.php b/modules/lightning_contact_form/tests/src/Kernel/InstallTest.php
index 45824cf..9f2f886 100644
--- a/modules/lightning_contact_form/tests/src/Kernel/InstallTest.php
+++ b/modules/lightning_contact_form/tests/src/Kernel/InstallTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\lightning_contact_form\Kernel;
 
+use Drupal\path_alias\AliasManagerInterface;
 use Drupal\contact\Entity\ContactForm;
 use Drupal\KernelTests\KernelTestBase;
 
@@ -37,7 +38,7 @@ class InstallTest extends KernelTestBase {
     $this->container->get('config.installer')->setSyncing(TRUE);
     lightning_contact_form_install();
 
-    /** @var \Drupal\path_alias\AliasManagerInterface $alias_manager */
+    /** @var AliasManagerInterface $alias_manager */
     $alias_manager = $this->container->get('path_alias.manager');
     $this->assertSame('/contact', $alias_manager->getPathByAlias('/contact'));
 
diff --git a/modules/lightning_page/lightning_page.module b/modules/lightning_page/lightning_page.module
index 73249c0..7d6d3a2 100644
--- a/modules/lightning_page/lightning_page.module
+++ b/modules/lightning_page/lightning_page.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 /**
  * @file
  * Contains hook implementations for Lightning Page.
@@ -44,7 +45,7 @@ function lightning_page_field_config_insert(FieldConfigInterface $field) {
     return;
   }
   elseif ($field->id() == 'node.page.field_meta_tags') {
-    /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
+    /** @var EntityDisplayRepositoryInterface $display_repository */
     $display_repository = Drupal::service('entity_display.repository');
 
     $display_repository->getViewDisplay('node', 'page')
diff --git a/modules/lightning_page/tests/src/Kernel/InstallTest.php b/modules/lightning_page/tests/src/Kernel/InstallTest.php
index 8232823..32ec424 100644
--- a/modules/lightning_page/tests/src/Kernel/InstallTest.php
+++ b/modules/lightning_page/tests/src/Kernel/InstallTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\lightning_page\Kernel;
 
+use Drupal\content_moderation\Plugin\WorkflowType\ContentModerationInterface;
 use Drupal\Core\Cache\NullBackend;
 use Drupal\Core\Extension\ModuleHandler;
 use Drupal\KernelTests\KernelTestBase;
@@ -51,13 +52,14 @@ class InstallTest extends KernelTestBase {
       'type' => 'content_moderation',
     ])->save();
 
-    /** @var \Drupal\content_moderation\Plugin\WorkflowType\ContentModerationInterface $type_plugin */
+    /** @var ContentModerationInterface $type_plugin */
     $type_plugin = Workflow::load('editorial')->getTypePlugin();
     $this->assertSame($should_apply, $type_plugin->appliesToEntityTypeAndBundle('node', 'page'));
   }
 
   /**
    * Tests installing Lightning Workflow during config sync.
+   * @doesNotPerformAssertions
    */
   public function testInstallWorkflowDuringSync() {
     $this->container->get('config.installer')->setSyncing(TRUE);
diff --git a/modules/lightning_roles/src/ContentRoleManager.php b/modules/lightning_roles/src/ContentRoleManager.php
index 836b5d2..0b0a4cf 100644
--- a/modules/lightning_roles/src/ContentRoleManager.php
+++ b/modules/lightning_roles/src/ContentRoleManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lightning_roles;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 
@@ -13,23 +14,23 @@ class ContentRoleManager {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The node type entity storage handler.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeTypeStorage;
 
   /**
    * ContentRoleManager constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/modules/lightning_roles/src/Form/SettingsForm.php b/modules/lightning_roles/src/Form/SettingsForm.php
index c062b25..2fdbe81 100644
--- a/modules/lightning_roles/src/Form/SettingsForm.php
+++ b/modules/lightning_roles/src/Form/SettingsForm.php
@@ -16,9 +16,9 @@ class SettingsForm extends ConfigFormBase {
   /**
    * SettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translator
+   * @param TranslationInterface $translator
    *   The string translation service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, TranslationInterface $translator) {
diff --git a/modules/lightning_roles/tests/src/Kernel/ContentRoleManagerTest.php b/modules/lightning_roles/tests/src/Kernel/ContentRoleManagerTest.php
index 91d1224..2dd3fe1 100644
--- a/modules/lightning_roles/tests/src/Kernel/ContentRoleManagerTest.php
+++ b/modules/lightning_roles/tests/src/Kernel/ContentRoleManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\lightning_roles\Kernel;
 
+use Drupal\user\RoleInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\node\Entity\NodeType;
 use Drupal\user\Entity\Role;
@@ -26,7 +27,7 @@ class ContentRoleManagerTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('lightning_roles');
     $this->installEntitySchema('user');
@@ -49,7 +50,7 @@ class ContentRoleManagerTest extends KernelTestBase {
 
     // Ensure the 'creator' role has all the expected OOTB permissions, plus
     // the one we just granted them.
-    /** @var \Drupal\user\RoleInterface $role */
+    /** @var RoleInterface $role */
     $role = Role::load('page_creator');
 
     $expected_creator_permissions = [
diff --git a/modules/lightning_search/lightning_search.install b/modules/lightning_search/lightning_search.install
index a053ee8..279155d 100644
--- a/modules/lightning_search/lightning_search.install
+++ b/modules/lightning_search/lightning_search.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\node\NodeTypeInterface;
 /**
  * @file
  * Contains installation and update routines for Lightning Search.
@@ -26,7 +27,7 @@ function lightning_search_install() {
     return;
   }
 
-  /** @var \Drupal\node\NodeTypeInterface $node_type */
+  /** @var NodeTypeInterface $node_type */
   $node_types = NodeType::loadMultiple();
   array_walk($node_types, 'lightning_search_node_type_insert');
 
diff --git a/modules/lightning_search/lightning_search.module b/modules/lightning_search/lightning_search.module
index de28a50..6401b9a 100644
--- a/modules/lightning_search/lightning_search.module
+++ b/modules/lightning_search/lightning_search.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\search_api\IndexInterface;
+use Drupal\lightning_core\DisplayHelper;
+use Drupal\views\ViewEntityInterface;
 /**
  * @file
  * Contains Search API integration for Lightning.
@@ -23,13 +26,13 @@ function lightning_search_node_type_insert(NodeTypeInterface $node_type) {
   $type = $node_type->id();
 
   // No point in continuing without an index to configure.
-  /** @var \Drupal\search_api\IndexInterface $index */
+  /** @var IndexInterface $index */
   $index = Index::load('content');
   if (empty($index)) {
     return;
   }
 
-  /** @var \Drupal\lightning_core\DisplayHelper $display_helper */
+  /** @var DisplayHelper $display_helper */
   $display_helper = \Drupal::service('lightning.display_helper');
 
   $field = $index->getField('rendered');
@@ -40,7 +43,7 @@ function lightning_search_node_type_insert(NodeTypeInterface $node_type) {
     $index->save();
   }
 
-  /** @var \Drupal\views\ViewEntityInterface $view */
+  /** @var ViewEntityInterface $view */
   $view = View::load('search');
   if (empty($view)) {
     return;
@@ -65,7 +68,7 @@ function lightning_search_node_type_delete(NodeTypeInterface $node_type) {
   $type = $node_type->id();
 
   // No point in continuing without an index to configure.
-  /** @var \Drupal\search_api\IndexInterface $index */
+  /** @var IndexInterface $index */
   $index = Index::load('content');
   if (empty($index)) {
     return;
@@ -79,7 +82,7 @@ function lightning_search_node_type_delete(NodeTypeInterface $node_type) {
     $index->save();
   }
 
-  /** @var \Drupal\views\ViewEntityInterface $view */
+  /** @var ViewEntityInterface $view */
   $view = View::load('search');
   if (empty($view)) {
     return;
diff --git a/modules/lightning_search/tests/src/Functional/SearchTest.php b/modules/lightning_search/tests/src/Functional/SearchTest.php
index 531ff20..354a310 100644
--- a/modules/lightning_search/tests/src/Functional/SearchTest.php
+++ b/modules/lightning_search/tests/src/Functional/SearchTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\lightning_search\Functional;
 
+use Drupal\views\ViewEntityInterface;
+use Drupal\node\NodeInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\views\Entity\View;
@@ -27,10 +29,10 @@ class SearchTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\views\ViewEntityInterface $view */
+    /** @var ViewEntityInterface $view */
     $view = View::load('search');
     $display = &$view->getDisplay('default');
     $display['display_options']['cache'] = [
@@ -54,7 +56,7 @@ class SearchTest extends BrowserTestBase {
   public function testAnonymousSearch() {
     $node_type = $this->drupalCreateContentType()->id();
 
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = Node::create([
       'type' => $node_type,
       'title' => 'Zombie 1',
diff --git a/src/Access/AdministrativeRoleCheck.php b/src/Access/AdministrativeRoleCheck.php
index 02a199a..4390349 100644
--- a/src/Access/AdministrativeRoleCheck.php
+++ b/src/Access/AdministrativeRoleCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lightning_core\Access;
 
+use Drupal\user\RoleInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -17,14 +18,14 @@ class AdministrativeRoleCheck implements AccessInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * AdministratorRoleAccessCheck constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -34,14 +35,14 @@ class AdministrativeRoleCheck implements AccessInterface {
   /**
    * Checks if the user has at least one administrative role.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route being checked.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route matcher.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account to check.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function access(Route $route, RouteMatchInterface $route_match, AccountInterface $account) {
@@ -49,7 +50,7 @@ class AdministrativeRoleCheck implements AccessInterface {
       return AccessResult::allowed();
     }
 
-    /** @var \Drupal\user\RoleInterface[] $roles */
+    /** @var RoleInterface[] $roles */
     $roles = $this->entityTypeManager
       ->getStorage('user_role')
       ->loadMultiple(
diff --git a/src/BundleEntityStorage.php b/src/BundleEntityStorage.php
index 1c96278..548b678 100644
--- a/src/BundleEntityStorage.php
+++ b/src/BundleEntityStorage.php
@@ -19,24 +19,24 @@ class BundleEntityStorage extends ConfigEntityStorage {
   /**
    * The access control handler.
    *
-   * @var \Drupal\Core\Entity\EntityAccessControlHandlerInterface
+   * @var EntityAccessControlHandlerInterface
    */
   protected $accessHandler;
 
   /**
    * BundleEntityStorage constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid_service
+   * @param UuidInterface $uuid_service
    *   The UUID generator.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Entity\EntityAccessControlHandlerInterface $access_handler
+   * @param EntityAccessControlHandlerInterface $access_handler
    *   The access control handler.
-   * @param \Drupal\Core\Cache\MemoryCache\MemoryCacheInterface $memory_cache
+   * @param MemoryCacheInterface $memory_cache
    *   The memory cache.
    */
   public function __construct(EntityTypeInterface $entity_type, ConfigFactoryInterface $config_factory, UuidInterface $uuid_service, LanguageManagerInterface $language_manager, EntityAccessControlHandlerInterface $access_handler, MemoryCacheInterface $memory_cache) {
diff --git a/src/Commands/Hooks.php b/src/Commands/Hooks.php
index a56d8e5..76a80b6 100644
--- a/src/Commands/Hooks.php
+++ b/src/Commands/Hooks.php
@@ -17,7 +17,7 @@ class Hooks extends DrushCommands {
   /**
    * The profile extension list service.
    *
-   * @var \Drupal\Core\Extension\ProfileExtensionList
+   * @var ProfileExtensionList
    */
   private $profileList;
 
@@ -31,18 +31,18 @@ class Hooks extends DrushCommands {
   /**
    * The plugin cache clearer service.
    *
-   * @var \Drupal\Core\Plugin\CachedDiscoveryClearerInterface
+   * @var CachedDiscoveryClearerInterface
    */
   private $pluginCacheClearer;
 
   /**
    * Hooks constructor.
    *
-   * @param \Drupal\Core\Extension\ProfileExtensionList $profile_list
+   * @param ProfileExtensionList $profile_list
    *   The profile extension list service.
    * @param string $install_profile
    *   The install_profile parameter.
-   * @param \Drupal\Core\Plugin\CachedDiscoveryClearerInterface $plugin_cache_clearer
+   * @param CachedDiscoveryClearerInterface $plugin_cache_clearer
    *   The plugin cache clearer service.
    */
   public function __construct(ProfileExtensionList $profile_list, $install_profile, CachedDiscoveryClearerInterface $plugin_cache_clearer) {
@@ -73,7 +73,7 @@ class Hooks extends DrushCommands {
   /**
    * Defines the base-profile field to the core:status command.
    *
-   * @param \Symfony\Component\Console\Event\ConsoleCommandEvent $event
+   * @param ConsoleCommandEvent $event
    *   The command event.
    *
    * @see ::setBaseProfileFieldValue()
@@ -93,7 +93,7 @@ class Hooks extends DrushCommands {
    *
    * @param mixed $result
    *   The result of the core:status command before alteration.
-   * @param \Consolidation\AnnotatedCommand\CommandData $command_data
+   * @param CommandData $command_data
    *   The Drush command data.
    *
    * @see ::defineExtraStatusFields()
diff --git a/src/Commands/LightningCoreCommands.php b/src/Commands/LightningCoreCommands.php
index f1db7d9..2b8dcdd 100644
--- a/src/Commands/LightningCoreCommands.php
+++ b/src/Commands/LightningCoreCommands.php
@@ -14,14 +14,14 @@ class LightningCoreCommands extends DrushCommands {
   /**
    * The update manager service.
    *
-   * @var \Drupal\lightning_core\UpdateManager
+   * @var UpdateManager
    */
   protected $updateManager;
 
   /**
    * LightningCoreCommands constructor.
    *
-   * @param \Drupal\lightning_core\UpdateManager $update_manager
+   * @param UpdateManager $update_manager
    *   The update manager service.
    */
   public function __construct(UpdateManager $update_manager) {
diff --git a/src/ComponentDiscovery.php b/src/ComponentDiscovery.php
index 043469c..fff5ed6 100644
--- a/src/ComponentDiscovery.php
+++ b/src/ComponentDiscovery.php
@@ -18,21 +18,21 @@ class ComponentDiscovery {
   /**
    * The extension discovery iterator.
    *
-   * @var \Drupal\Core\Extension\ExtensionDiscovery
+   * @var ExtensionDiscovery
    */
   protected $discovery;
 
   /**
    * The Lightning profile extension object.
    *
-   * @var \Drupal\Core\Extension\Extension
+   * @var Extension
    */
   protected $profile;
 
   /**
    * Cache of all discovered components.
    *
-   * @var \Drupal\Core\Extension\Extension[]
+   * @var Extension[]
    */
   protected $components;
 
@@ -49,7 +49,7 @@ class ComponentDiscovery {
   /**
    * Returns an extension object for the Lightning profile.
    *
-   * @return \Drupal\Core\Extension\Extension
+   * @return Extension
    *   The Lightning profile extension object.
    *
    * @throws \RuntimeException
@@ -70,7 +70,7 @@ class ComponentDiscovery {
   /**
    * Returns extension objects for all Lightning components.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   Array of extension objects for all Lightning components.
    */
   public function getAll() {
@@ -89,7 +89,7 @@ class ComponentDiscovery {
   /**
    * Returns extension objects for all main Lightning components.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   Array of extension objects for top-level Lightning components.
    */
   public function getMainComponents() {
@@ -112,7 +112,7 @@ class ComponentDiscovery {
   /**
    * Returns extension object for all Lightning sub-components.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   Array of extension objects for Lightning sub-components.
    */
   public function getSubComponents() {
diff --git a/src/ConfigHelper.php b/src/ConfigHelper.php
index 8ace513..28421ce 100644
--- a/src/ConfigHelper.php
+++ b/src/ConfigHelper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\lightning_core;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Config\Entity\ConfigEntityTypeInterface;
@@ -17,32 +19,32 @@ class ConfigHelper extends InstallStorage {
   /**
    * The extension whose default config is being manipulated by this object.
    *
-   * @var \Drupal\Core\Extension\Extension
+   * @var Extension
    */
   protected $extension;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * ConfigHelper constructor.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   The extension whose default config is being manipulated by this object.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(Extension $extension, ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager) {
@@ -85,7 +87,7 @@ class ConfigHelper extends InstallStorage {
    *   (optional) If TRUE, the entity is read from config even if it already
    *   exists. Defaults to FALSE.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The config entity, or NULL if it doesn't exist.
    */
   public function getEntity($entity_type, $id, $force = FALSE) {
@@ -109,7 +111,7 @@ class ConfigHelper extends InstallStorage {
    * @param string $id
    *   The config object ID.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   The config object.
    */
   public function get($id) {
@@ -173,7 +175,7 @@ class ConfigHelper extends InstallStorage {
   /**
    * Checks if a config entity is bundled with Lightning.
    *
-   * @param \Drupal\Core\Config\Entity\ConfigEntityInterface $entity
+   * @param ConfigEntityInterface $entity
    *   The config entity.
    *
    * @return bool
diff --git a/src/Controller/FieldUiTitleController.php b/src/Controller/FieldUiTitleController.php
index 3dfdde2..811b5b8 100644
--- a/src/Controller/FieldUiTitleController.php
+++ b/src/Controller/FieldUiTitleController.php
@@ -17,18 +17,18 @@ class FieldUiTitleController extends ControllerBase {
   /**
    * The route match service.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * FieldUiTitleController constructor.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translator
+   * @param TranslationInterface $translator
    *   The translation service.
    */
   public function __construct(RouteMatchInterface $route_match, EntityTypeManagerInterface $entity_type_manager, TranslationInterface $translator) {
diff --git a/src/DisplayHelper.php b/src/DisplayHelper.php
index 89862c4..6a44db2 100644
--- a/src/DisplayHelper.php
+++ b/src/DisplayHelper.php
@@ -14,23 +14,23 @@ class DisplayHelper {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * DisplayHelper constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager) {
@@ -69,7 +69,7 @@ class DisplayHelper {
   /**
    * Returns the components newly added to a display.
    *
-   * @param \Drupal\Core\Entity\Display\EntityDisplayInterface $display
+   * @param EntityDisplayInterface $display
    *   The display config entity.
    *
    * @return array
@@ -87,7 +87,7 @@ class DisplayHelper {
   /**
    * Returns newly added field components, optionally filtered by a function.
    *
-   * @param \Drupal\Core\Entity\Display\EntityDisplayInterface $display
+   * @param EntityDisplayInterface $display
    *   The display config entity.
    * @param callable $filter
    *   (optional) The function on which to filter the fields, accepting the
diff --git a/src/EntityDescriptionFormTrait.php b/src/EntityDescriptionFormTrait.php
index 9fcf04a..111543f 100644
--- a/src/EntityDescriptionFormTrait.php
+++ b/src/EntityDescriptionFormTrait.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\lightning_core;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityDescriptionInterface;
+use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
@@ -13,7 +16,7 @@ trait EntityDescriptionFormTrait {
    * {@inheritdoc}
    */
   public function form(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Entity\EntityInterface|\Drupal\Core\Entity\EntityDescriptionInterface $entity */
+    /** @var EntityInterface|EntityDescriptionInterface $entity */
     $entity = $this->getEntity();
 
     $form = parent::form($form, $form_state);
@@ -51,7 +54,7 @@ trait EntityDescriptionFormTrait {
   /**
    * Returns the cache tag invalidator service.
    *
-   * @return \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @return CacheTagsInvalidatorInterface
    *   The cache tag invalidator.
    */
   private function cacheTagInvalidator() {
diff --git a/src/Form/BulkCreationEntityFormTrait.php b/src/Form/BulkCreationEntityFormTrait.php
index 55801ba..3f07254 100644
--- a/src/Form/BulkCreationEntityFormTrait.php
+++ b/src/Form/BulkCreationEntityFormTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lightning_core\Form;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Exception\UndefinedLinkTemplateException;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -19,7 +20,7 @@ trait BulkCreationEntityFormTrait {
     $query = $this->getRequest()->query;
 
     if ($query->has('bulk_create')) {
-      /** @var \Drupal\Core\Entity\EntityInterface $entity */
+      /** @var EntityInterface $entity */
       $entity = $this->getEntity();
 
       // If there are more entities to create, redirect to the edit form for the
diff --git a/src/FormHelper.php b/src/FormHelper.php
index e1e3422..cf635ee 100644
--- a/src/FormHelper.php
+++ b/src/FormHelper.php
@@ -12,14 +12,14 @@ final class FormHelper {
   /**
    * The element info plugin manager.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;
 
   /**
    * FormHelper constructor.
    *
-   * @param \Drupal\Core\Render\ElementInfoManagerInterface $element_info
+   * @param ElementInfoManagerInterface $element_info
    *   The element info plugin manager.
    */
   public function __construct(ElementInfoManagerInterface $element_info) {
diff --git a/src/OverrideHelper.php b/src/OverrideHelper.php
index b8d344a..faeadd9 100644
--- a/src/OverrideHelper.php
+++ b/src/OverrideHelper.php
@@ -32,7 +32,7 @@ class OverrideHelper {
    * The replacement class is only used if its immediate parent is the class
    * specified by the entity type.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
    * @param string $replacement_class
    *   The class to use.
@@ -49,7 +49,7 @@ class OverrideHelper {
    * The replacement class is only used if its immediate parent is the form
    * class used for the specified operation.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
    * @param string $replacement_class
    *   The class to use.
@@ -68,7 +68,7 @@ class OverrideHelper {
    * The replacement class is only used if its immediate parent is the handler
    * class specified by the entity type definition.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
    * @param string $handler_type
    *   The handler type.
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index cf470c2..507d791 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -18,14 +18,14 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * RouteSubscriber constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -68,7 +68,7 @@ class RouteSubscriber extends RouteSubscriberBase {
    *
    * @param string $route_name
    *   The route name.
-   * @param \Symfony\Component\Routing\RouteCollection $collection
+   * @param RouteCollection $collection
    *   The complete route collection containing the route to alter.
    */
   private function setLoadLatestRevision($route_name, RouteCollection $collection) {
@@ -83,9 +83,9 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Checks if we are currently viewing an entity at its canonical route.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   (optional) The current route match.
    *
    * @return bool
@@ -107,7 +107,7 @@ class RouteSubscriber extends RouteSubscriberBase {
    *
    * @param string $route_name
    *   The route name.
-   * @param \Symfony\Component\Routing\RouteCollection $collection
+   * @param RouteCollection $collection
    *   The complete route collection containing the route to alter.
    */
   protected function setBundleAsTitle($route_name, RouteCollection $collection) {
diff --git a/src/Update/Update360.php b/src/Update/Update360.php
index 27a7ddc..f526ca9 100644
--- a/src/Update/Update360.php
+++ b/src/Update/Update360.php
@@ -17,14 +17,14 @@ final class Update360 implements ContainerInjectionInterface {
   /**
    * The module installer service.
    *
-   * @var \Drupal\Core\Extension\ModuleInstallerInterface
+   * @var ModuleInstallerInterface
    */
   private $moduleInstaller;
 
   /**
    * Update360 constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleInstallerInterface $module_installer
+   * @param ModuleInstallerInterface $module_installer
    *   The module installer service.
    */
   public function __construct(ModuleInstallerInterface $module_installer) {
diff --git a/src/UpdateManager.php b/src/UpdateManager.php
index 6ecbbc6..5a82296 100644
--- a/src/UpdateManager.php
+++ b/src/UpdateManager.php
@@ -34,35 +34,35 @@ class UpdateManager {
   /**
    * The update discovery object.
    *
-   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface
+   * @var DiscoveryInterface
    */
   protected $discovery;
 
   /**
    * The class resolver service.
    *
-   * @var \Drupal\Core\DependencyInjection\ClassResolverInterface
+   * @var ClassResolverInterface
    */
   protected $classResolver;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
   /**
    * The doc block factory.
    *
-   * @var \phpDocumentor\Reflection\DocBlockFactoryInterface
+   * @var DocBlockFactoryInterface
    */
   protected $docBlockFactory;
 
@@ -71,15 +71,15 @@ class UpdateManager {
    *
    * @param \Traversable $namespaces
    *   The namespaces to scan for updates.
-   * @param \Drupal\Core\DependencyInjection\ClassResolverInterface $class_resolver
+   * @param ClassResolverInterface $class_resolver
    *   The class resolver service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $module_extension_list
+   * @param ModuleExtensionList $module_extension_list
    *   The module extension list.
-   * @param \Drupal\Component\Plugin\Discovery\DiscoveryInterface $discovery
+   * @param DiscoveryInterface $discovery
    *   (optional) The update discovery handler.
-   * @param \phpDocumentor\Reflection\DocBlockFactoryInterface $doc_block_factory
+   * @param DocBlockFactoryInterface $doc_block_factory
    *   (optional) The doc block factory.
    */
   public function __construct(\Traversable $namespaces, ClassResolverInterface $class_resolver, ConfigFactoryInterface $config_factory, ModuleExtensionList $module_extension_list, DiscoveryInterface $discovery = NULL, DocBlockFactoryInterface $doc_block_factory = NULL) {
@@ -204,7 +204,7 @@ class UpdateManager {
   /**
    * Executes all available updates in a console context.
    *
-   * @param \Symfony\Component\Console\Style\StyleInterface $style
+   * @param StyleInterface $style
    *   The I/O style.
    */
   public function executeAllInConsole(StyleInterface $style) {
@@ -227,7 +227,7 @@ class UpdateManager {
       $handler = $this->classResolver
         ->getInstanceFromDefinition($update['class']);
 
-      /** @var \Drupal\lightning_core\UpdateTask $task */
+      /** @var UpdateTask $task */
       foreach ($this->getTasks($handler) as $task) {
         $task->execute($style);
       }
diff --git a/src/UpdateTask.php b/src/UpdateTask.php
index 2f1a49a..727917a 100644
--- a/src/UpdateTask.php
+++ b/src/UpdateTask.php
@@ -27,7 +27,7 @@ class UpdateTask {
   /**
    * The doc block for the task method.
    *
-   * @var \phpDocumentor\Reflection\DocBlock
+   * @var DocBlock
    */
   protected $docBlock;
 
@@ -38,7 +38,7 @@ class UpdateTask {
    *   The task handler.
    * @param \ReflectionMethod $reflector
    *   The reflector for the task method.
-   * @param \phpDocumentor\Reflection\DocBlock $doc_block
+   * @param DocBlock $doc_block
    *   The doc block for the task method.
    */
   public function __construct($handler, \ReflectionMethod $reflector, DocBlock $doc_block) {
@@ -50,7 +50,7 @@ class UpdateTask {
   /**
    * Asks for confirmation before executing the task.
    *
-   * @param \Symfony\Component\Console\Style\StyleInterface $io
+   * @param StyleInterface $io
    *   The output style.
    *
    * @return bool
@@ -68,7 +68,7 @@ class UpdateTask {
   /**
    * Prompts for confirmation and executes the task.
    *
-   * @param \Symfony\Component\Console\Style\StyleInterface $io
+   * @param StyleInterface $io
    *   The console style handler.
    * @param bool $force
    *   (optional) If TRUE, the task is executed without confirmation.
diff --git a/src/YieldToArgumentTrait.php b/src/YieldToArgumentTrait.php
index acd6f28..5015a71 100644
--- a/src/YieldToArgumentTrait.php
+++ b/src/YieldToArgumentTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\lightning_core;
 
+use Drupal\views\Plugin\views\argument\ArgumentPluginBase;
 use Drupal\Core\Form\FormStateInterface;
 
 /**
@@ -24,7 +25,7 @@ trait YieldToArgumentTrait {
 
     $argument = $this->options['expose']['argument'];
     $argument = $this->view->argument[$argument];
-    /** @var \Drupal\views\Plugin\views\argument\ArgumentPluginBase $argument */
+    /** @var ArgumentPluginBase $argument */
     $value = $argument->getValue();
 
     $key = $this->options['expose']['identifier'];
@@ -47,7 +48,7 @@ trait YieldToArgumentTrait {
     ];
     /**
      * @var string $id
-     * @var \Drupal\views\Plugin\views\argument\ArgumentPluginBase $argument
+     * @var ArgumentPluginBase $argument
      */
     foreach ($this->displayHandler->getHandlers('argument') as $id => $argument) {
       $form['expose']['argument']['#options'][$id] = $argument->adminLabel();
diff --git a/tests/contexts/AwaitTrait.inc b/tests/contexts/AwaitTrait.inc
index 120d5b6..e1485a7 100644
--- a/tests/contexts/AwaitTrait.inc
+++ b/tests/contexts/AwaitTrait.inc
@@ -2,6 +2,7 @@
 
 namespace Acquia\LightningExtension\Context;
 
+use Behat\Mink\Element\NodeElement;
 use Behat\Mink\Exception\UnsupportedDriverActionException;
 use Drupal\DrupalExtension\Context\MinkContext;
 
@@ -39,7 +40,7 @@ trait AwaitTrait {
    * @param int $timeout
    *   (optional) How long, in seconds, to wait before timing out.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The awaited element.
    */
   protected function awaitElement($selector, $timeout = 10) {
diff --git a/tests/contexts/CkEditorContext.behat.inc b/tests/contexts/CkEditorContext.behat.inc
index 48c1b18..b271779 100644
--- a/tests/contexts/CkEditorContext.behat.inc
+++ b/tests/contexts/CkEditorContext.behat.inc
@@ -63,7 +63,7 @@ final class CkEditorContext extends DrupalSubContextBase {
    * @param string $id
    *   (optional) The editor instance ID.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the editor does not contain the specified text.
    *
    * @Then CKEditor should contain :text
@@ -88,7 +88,7 @@ final class CkEditorContext extends DrupalSubContextBase {
    * @param string $id
    *   (optional) The editor instance ID.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the expression does not match.
    *
    * @Then CKEditor should match :expression
@@ -129,7 +129,7 @@ final class CkEditorContext extends DrupalSubContextBase {
    * @param mixed $data
    *   Additional data to pass to the executed command.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the command cannot be executed (i.e., returns a falsy value).
    *
    * @When I execute the :command command in CKEditor
diff --git a/tests/contexts/ElementContext.behat.inc b/tests/contexts/ElementContext.behat.inc
index bf7a5a0..b077f78 100644
--- a/tests/contexts/ElementContext.behat.inc
+++ b/tests/contexts/ElementContext.behat.inc
@@ -2,6 +2,7 @@
 
 namespace Acquia\LightningExtension\Context;
 
+use Behat\Mink\Element\NodeElement;
 use Behat\Gherkin\Node\PyStringNode;
 use Behat\Mink\Element\ElementInterface;
 use Behat\Mink\Exception\ElementNotFoundException;
@@ -26,7 +27,7 @@ final class ElementContext extends DrupalSubContextBase {
    * @param string $selector
    *   The element's CSS selector.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the element contains any HTML (leading and trailing white space is
    *   trimmed out).
    *
@@ -47,7 +48,7 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param string $field
    *   The field to clear.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element that contains the field.
    *
    * @When I clear :field
@@ -64,7 +65,7 @@ final class ElementContext extends DrupalSubContextBase {
    * @param string $field
    *   The field locator.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The form field element.
    *
    * @Then I should see a(n) :field field
@@ -79,7 +80,7 @@ final class ElementContext extends DrupalSubContextBase {
    * @param string $field
    *   The field locator.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The disabled form field element.
    *
    * @Then I should see a disabled :field field
@@ -192,10 +193,10 @@ final class ElementContext extends DrupalSubContextBase {
   /**
    * Asserts that vertical tab set exists.
    *
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element containing the vertical tab set.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The vertical tab set.
    *
    * @Then I should see a set of vertical tabs
@@ -211,10 +212,10 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param string $tab
    *   The text of the tab.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element containing the vertical tab set.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The vertical tab.
    *
    * @Then I should see a :tab vertical tab
@@ -235,7 +236,7 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param string $tab
    *   The text of the tab.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element containing the vertical tab set.
    *
    * @Then I should not see a :tab vertical tab
@@ -256,7 +257,7 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param \Behat\Gherkin\Node\PyStringNode $tabs
    *   The text of the tabs, one per line.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element containing the vertical tab set.
    *
    * @Then I should see (the )vertical tabs:
@@ -272,7 +273,7 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param \Behat\Gherkin\Node\PyStringNode $tabs
    *   The text of the tabs, one per line.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element containing the vertical tab set.
    *
    * @Then I should not see (the )vertical tabs:
@@ -288,16 +289,16 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param string $summary
    *   The summary text (case-insensitive).
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   The element in which to search for the <details> element.
    *
-   * @return \Behat\Mink\Element\NodeElement|bool
+   * @return NodeElement|bool
    *   The <details> element, or FALSE if it was not found.
    */
   private function findDetails($summary, ElementInterface $container) {
     $lowercase_summary = mb_strtolower($summary);
 
-    /** @var \Behat\Mink\Element\NodeElement $element */
+    /** @var NodeElement $element */
     foreach ($container->findAll('css', 'details > summary') as $element) {
       $lowercase_element_text = mb_strtolower($element->getText());
 
@@ -313,13 +314,13 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param string $summary
    *   The exact summary text.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element in which to search for the <details> element.
    *
-   * @return \Behat\Mink\Element\NodeElement
+   * @return NodeElement
    *   The <details> element.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    *   If the element is not found in the container.
    *
    * @Then I should see a(n) :summary details element
@@ -341,10 +342,10 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param string $summary
    *   The exact summary text.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element in which to search for the <details> element.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the <details> element is closed.
    *
    * @Then I should see an open :summary details element
@@ -365,10 +366,10 @@ final class ElementContext extends DrupalSubContextBase {
    *
    * @param string $summary
    *   The exact summary text.
-   * @param \Behat\Mink\Element\ElementInterface $container
+   * @param ElementInterface $container
    *   (optional) The element in which to search for the <details> element.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the <details> element is open.
    *
    * @Then I should see a closed :summary details element
@@ -428,7 +429,7 @@ final class ElementContext extends DrupalSubContextBase {
    * @param int $n
    *   The number of elements expected to match the selector.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the fewer elements than expected match the selector.
    *
    * @Then at least :n element(s) should match :selector
@@ -463,7 +464,7 @@ final class ElementContext extends DrupalSubContextBase {
    * @param string $plugin_id
    *   The block plugin ID.
    *
-   * @return \Behat\Mink\Element\ElementInterface
+   * @return ElementInterface
    *   The block element.
    *
    * @Then I should see a :plugin_id block
@@ -489,10 +490,10 @@ final class ElementContext extends DrupalSubContextBase {
   /**
    * Asserts that an element has contextual links.
    *
-   * @param \Behat\Mink\Element\ElementInterface $element
+   * @param ElementInterface $element
    *   The element which is expected to contain contextual links.
    *
-   * @return \Behat\Mink\Element\ElementInterface
+   * @return ElementInterface
    *   The list of contextual links.
    */
   private function assertContextualLinks(ElementInterface $element) {
@@ -503,12 +504,12 @@ final class ElementContext extends DrupalSubContextBase {
   /**
    * Asserts that an element has a specific contextual link.
    *
-   * @param \Behat\Mink\Element\ElementInterface $element
+   * @param ElementInterface $element
    *   The element which is expectd to contain the contextual link.
    * @param string $link_class
    *   The CSS class of the contextual link.
    *
-   * @return \Behat\Mink\Element\ElementInterface
+   * @return ElementInterface
    *   The contextual link.
    */
   private function assertContextualLink(ElementInterface $element, $link_class) {
diff --git a/tests/contexts/EntityContext.behat.inc b/tests/contexts/EntityContext.behat.inc
index 11fd155..cb6527c 100644
--- a/tests/contexts/EntityContext.behat.inc
+++ b/tests/contexts/EntityContext.behat.inc
@@ -2,6 +2,7 @@
 
 namespace Acquia\LightningExtension\Context;
 
+use Behat\Mink\Element\NodeElement;
 use Behat\Gherkin\Node\TableNode;
 use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Entity\EntityInterface;
@@ -33,7 +34,7 @@ final class EntityContext extends DrupalSubContextBase {
   /**
    * Saves an entity, ensuring automatic clean-up.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to save.
    */
   public function save(EntityInterface $entity) {
@@ -74,7 +75,7 @@ final class EntityContext extends DrupalSubContextBase {
    */
   public function tearDown() {
     foreach ($this->trash as $entity_type => $ids) {
-      /** @var \Drupal\Core\Entity\EntityInterface[] $entities */
+      /** @var EntityInterface[] $entities */
       $entities = \Drupal::entityTypeManager()
         ->getStorage($entity_type)
         ->loadMultiple($ids);
@@ -179,7 +180,7 @@ final class EntityContext extends DrupalSubContextBase {
    * @param string $bundle
    *   (optional) The bundle.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   If the number of existing entities does not match the expected number.
    *
    * @Then 1 :entity_type entity should exist
@@ -293,7 +294,7 @@ final class EntityContext extends DrupalSubContextBase {
     // The revision table's selector may vary depending on whether or not Diff
     // is installed, so we need to use a pretty general selector.
     $rows = $session->getPage()->findAll('css', 'main table > tbody tr');
-    /** @var \Behat\Mink\Element\NodeElement $row */
+    /** @var NodeElement $row */
     foreach ($rows as $row) {
       if ($row->find('css', 'td:last-child')->getText() == 'Current revision') {
         return $row->find('css', 'td:first-child a')->click();
