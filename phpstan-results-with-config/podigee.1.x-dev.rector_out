modules/contrib/podigee/podigee.module
modules/contrib/podigee/src/Plugin/Field/FieldFormatter/PodigeeFormatter.php

1 file with changes
===================

1) modules/contrib/podigee/src/Plugin/Field/FieldFormatter/PodigeeFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\podigee\Plugin\Field\FieldFormatter;

+use Drupal\file\Entity\File;
 use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\Plugin\Field\FieldFormatter\FileMediaFormatterBase;
@@ @@
   /**
    * Gets source files with attributes.
    *
-   * @param \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items
+   * @param EntityReferenceFieldItemListInterface $items
    *   The item list.
    * @param string $langcode
    *   The language code of the referenced entities to display.
@@ @@

     // Because we can have the files grouped in a single media tag, we do a
     // grouping in case the multiple file behavior is not 'tags'.
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     foreach ($this->getEntitiesToView($items, $langcode) as $file) {
       if (static::mimeTypeApplies($file->getMimeType())) {
         $player_configuration = [
@@ @@
           'episode' => [
             'media' => [
               // TODO: Support other file types than mp3.
-              'mp3' => file_create_url($file->getFileUri()),
+              'mp3' => \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()),
             ],
             'title' => $this->replace('title', $entity),
             'subtitle' => $this->replace('subtitle', $entity),
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

