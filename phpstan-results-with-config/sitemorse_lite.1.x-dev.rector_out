modules/contrib/sitemorse_lite/modules/sitemorse_seeds_toolbar/sitemorse_seeds_toolbar.module
modules/contrib/sitemorse_lite/sitemorse_lite.api.php
modules/contrib/sitemorse_lite/sitemorse_lite.install
modules/contrib/sitemorse_lite/sitemorse_lite.module
modules/contrib/sitemorse_lite/src/Controller/CheckController.php
modules/contrib/sitemorse_lite/src/Form/SitemorseSettingsForm.php
modules/contrib/sitemorse_lite/src/MenuLinkBuilder.php
modules/contrib/sitemorse_lite/src/Sitemorse/Checker.php
modules/contrib/sitemorse_lite/src/Sitemorse/CheckerInterface.php
modules/contrib/sitemorse_lite/src/Sitemorse/Results.php
modules/contrib/sitemorse_lite/src/Sitemorse/SCIClientFactory.php
modules/contrib/sitemorse_lite/tests/src/Functional/MenuLinkTest.php

8 files with changes
====================

1) modules/contrib/sitemorse_lite/tests/src/Functional/MenuLinkTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\sitemorse_lite\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
    * @param array $permissions
    *   Extra permissions.
    *
-   * @return \Drupal\user\Entity\User|false
+   * @return User|false
    *   A fully loaded user object with pass_raw property, or FALSE if account
    *   creation fails.
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/sitemorse_lite/src/Sitemorse/CheckerInterface.php:12

    ---------- begin diff ----------
@@ @@
    * @param string $url
    *   The absolute URL for sitemorse to check.
    *
-   * @return \Drupal\sitemorse_lite\Sitemorse\Results
+   * @return Results
    *   The results of the sitemorse check.
    */
   public function checkUrl($url): Results;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/sitemorse_lite/src/Sitemorse/Checker.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * ModuleHandler service for invoking hooks.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   private $user;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/sitemorse_lite/src/MenuLinkBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sitemorse_lite;

+use Drupal\Core\StringTranslation\StringTranslationTrait;
+use Symfony\Component\Routing\Route;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
  * @package Drupal\sitemorse_lite
  */
 class MenuLinkBuilder {
-  use \Drupal\Core\StringTranslation\StringTranslationTrait;
+  use StringTranslationTrait;

   /**
    * The current route.
    *
-   * @var \Symfony\Component\Routing\Route
+   * @var Route
    */
   private $route;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   private $account;

@@ @@
   /**
    * Cacheable metadata for the link.
    *
-   * @return \Drupal\Core\Cache\CacheableMetadata
+   * @return CacheableMetadata
    *   Cacheable metadata for the link.
    */
   public function cacheableMetadata() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/sitemorse_lite/src/Form/SitemorseSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sitemorse_lite\Form;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Client for checking the licence.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
    *   Render array.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   On error.
    */
   public function verifyLicence(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/sitemorse_lite/src/Controller/CheckController.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The sitemorse checker service.
    *
-   * @var \Drupal\sitemorse_lite\Sitemorse\Checker
+   * @var Checker
    */
   private $checker;

@@ @@
   /**
    * Run sitemorse check for a given URL.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The Request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   JSON response for client.
    */
   public function checkUrl(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/sitemorse_lite/sitemorse_lite.module:11

    ---------- begin diff ----------
@@ @@
  */
 function sitemorse_lite_page_attachments(array &$page) {
   $page['#attached']['library'][] = 'sitemorse_lite/sitemorse';
-  $page['#attached']['drupalSettings']['sitemorse_lite']['modulePath'] = drupal_get_path('module', 'sitemorse_lite');
+  $page['#attached']['drupalSettings']['sitemorse_lite']['modulePath'] = \Drupal::service('extension.list.module')->getPath('sitemorse_lite');
   $page['#attached']['drupalSettings']['sitemorse_lite']['moduleConfigPath'] = Url::fromRoute('sitemorse_lite.config')->toString();
   $page['#attached']['drupalSettings']['sitemorse_lite']['callback'] = Url::fromRoute('sitemorse_lite.check-url')->toString();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


8) modules/contrib/sitemorse_lite/sitemorse_lite.api.php:11

    ---------- begin diff ----------
@@ @@
  *
  * @param string $url
  *   The URL that has been checked.
- * @param \Drupal\sitemorse_lite\Sitemorse\Results $results
+ * @param Results $results
  *   The results.
  */
 function hook_sitemorse_lite_results($url, Results $results) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

