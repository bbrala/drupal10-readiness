modules/contrib/react_calendar/js/src/build.php
modules/contrib/react_calendar/react_calendar.module
modules/contrib/react_calendar/src/CalendarConfiguration.php
modules/contrib/react_calendar/src/CalendarConfigurationInterface.php
modules/contrib/react_calendar/src/Controller/CalendarController.php
modules/contrib/react_calendar/src/Form/NodeTypeSettingsForm.php
modules/contrib/react_calendar/src/Form/SettingsForm.php
modules/contrib/react_calendar/src/Plugin/Block/CalendarBlock.php
modules/contrib/react_calendar/tests/src/Functional/LoadTest.php

6 files with changes
====================

1) modules/contrib/react_calendar/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\react_calendar\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/react_calendar/src/Plugin/Block/CalendarBlock.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\react_calendar\CalendarConfigurationInterface definition.
    *
-   * @var \Drupal\react_calendar\CalendarConfigurationInterface
+   * @var CalendarConfigurationInterface
    */
   protected $reactCalendarConfig;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param string $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\react_calendar\CalendarConfigurationInterface $react_calendar_config
+   * @param CalendarConfigurationInterface $react_calendar_config
    *   CalendarConfiguration definition.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/react_calendar/src/Form/NodeTypeSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\react_calendar\Form;

+use Drupal\react_calendar\CalendarConfigurationInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, $node_type = NULL) {
-    /** @var \Drupal\react_calendar\CalendarConfigurationInterface $reactCalendarConfiguration */
+    /** @var CalendarConfigurationInterface $reactCalendarConfiguration */
     $calendarConfiguration = \Drupal::service('react_calendar.config');
     $storage = [
       'node_type' => $node_type,
@@ @@
     $storage = $form_state->getStorage();
     $node_type = $storage['node_type'];
     // Update React Calendar settings.
-    /** @var \Drupal\react_calendar\CalendarConfigurationInterface $calendarConfiguration */
+    /** @var CalendarConfigurationInterface $calendarConfiguration */
     $calendarConfiguration = \Drupal::service('react_calendar.config');
     // Empty configuration if set again to disabled.
     if (!$values['enabled']) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/react_calendar/src/Controller/CalendarController.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\react_calendar\CalendarConfigurationInterface definition.
    *
-   * @var \Drupal\react_calendar\CalendarConfigurationInterface
+   * @var CalendarConfigurationInterface
    */
   protected $reactCalendarConfig;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/react_calendar/src/CalendarConfigurationInterface.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Checks if an entity bundle is enabled.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity that is the subject of the template.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/react_calendar/src/CalendarConfiguration.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\react_calendar;

+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
     $result = [];
     $dateTypes = ['datetime', 'daterange'];
     $bundleFields = \Drupal::service('entity_field.manager')->getFieldDefinitions('node', $node_type);
-    /** @var \Drupal\Core\Field\FieldDefinitionInterface $fieldDefinition */
+    /** @var FieldDefinitionInterface $fieldDefinition */
     foreach ($bundleFields as $fieldName => $fieldDefinition) {
       if (!empty($fieldDefinition->getTargetBundle()) && in_array($fieldDefinition->getType(), $dateTypes)) {
         $result[$fieldName] = $fieldDefinition;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

