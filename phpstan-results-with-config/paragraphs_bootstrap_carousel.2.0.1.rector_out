modules/contrib/paragraphs_bootstrap_carousel/paragraphs_bootstrap_carousel.module
modules/contrib/paragraphs_bootstrap_carousel/src/Plugin/Field/FieldFormatter/ParagraphsBootstrapCarouselFormatter.php

1 file with changes
===================

1) modules/contrib/paragraphs_bootstrap_carousel/src/Plugin/Field/FieldFormatter/ParagraphsBootstrapCarouselFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\paragraphs_bootstrap_carousel\Plugin\Field\FieldFormatter;

+use Drupal\field\Entity\FieldConfig;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\paragraphs\ParagraphInterface;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ @@
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;

@@ @@
   /**
    * The fields of paragraphs.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $fieldsParagraphs;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, EntityDisplayRepositoryInterface $entity_display_repository) {
@@ @@
   /**
    * Set field for paragraphs.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function setFieldsParagraphs() {
     $targetType = $this->getFieldSetting('target_type');
     $targetBundle = array_key_first($this->fieldDefinition->getSetting("handler_settings")["target_bundles"]);
-    /** @var \Drupal\paragraphs\ParagraphInterface $paragraphs_entity */
+    /** @var ParagraphInterface $paragraphs_entity */
     $paragraphs_entity = \Drupal::entityTypeManager()->getStorage($targetType)
       ->create(['type' => $targetBundle]);
     $field_definitions = $paragraphs_entity->getFieldDefinitions();
@@ @@
   /**
    * Get the entities which will make up the carousel.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The field items.
    * @param string $langcode
    *   Language code.
@@ @@
    * @return array
    *   An array of loaded entities.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getCarouselItems(FieldItemListInterface $items, $langcode) {
     $setting = $this->getSettings();
@@ @@
           $item = new \stdClass();
           $imageField = $entity->get($field_image);

-          $item->image_url = file_create_url($imageField->entity->getFileUri());
+          $item->image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($imageField->entity->getFileUri());
           if (!empty($setting['image_style'])) {
             $imageUrl = $imageField->entity->uri->value;
             $image_style = $setting['image_style'];
-            $item->image_url = file_url_transform_relative(ImageStyle::load($image_style)
+            $item->image_url = \Drupal::service('file_url_generator')->transformRelative(ImageStyle::load($image_style)
               ->buildUrl($imageUrl));
           }

@@ @@
             $view_builder = \Drupal::entityTypeManager()
               ->getViewBuilder($entity->getEntityTypeId());
             $paragraphs_view = $view_builder->view($entity, $view_mode, $langcode);
-            $item->caption_text = render($paragraphs_view);
+            $item->caption_text = \Drupal::service('renderer')->render($paragraphs_view);
           }

           $entities[] = $item;
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

