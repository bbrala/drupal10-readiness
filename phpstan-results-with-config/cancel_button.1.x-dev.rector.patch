diff --git a/cancel_button.api.php b/cancel_button.api.php
index 46b4248..16107dc 100644
--- a/cancel_button.api.php
+++ b/cancel_button.api.php
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * @file
  * Hooks provided by the Cancel Button module.
@@ -12,11 +13,10 @@ use Drupal\Core\Url;
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Allow other modules to alter the cancel button destination.
  *
- * @param \Drupal\Core\Url $destination
+ * @param Url $destination
  *   The destination Url object to alter.
  * @param array $context
  *   An array of contextual data about the form where the cancel button appears.
@@ -33,7 +33,7 @@ use Drupal\Core\Url;
  */
 function hook_cancel_button_destination_alter(Url &$destination, array $context) {
   if ($context['entity_type']->id() === 'node') {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = $context['form_state']->getFormObject()->getEntity();
     // If this is node 1, set the cancel button destination to the collection
     // URL rather than to the canonical URL.
diff --git a/cancel_button.info.yml b/cancel_button.info.yml
index 5489353..93e7ecf 100644
--- a/cancel_button.info.yml
+++ b/cancel_button.info.yml
@@ -2,5 +2,5 @@ name: Cancel Button
 type: module
 description: 'This small module adds a Cancel button to Entity forms.'
 package: Content
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 configure: cancel_button.admin_settings
diff --git a/src/Form/CancelButtonSettingsForm.php b/src/Form/CancelButtonSettingsForm.php
index cd6f4b9..a189f95 100644
--- a/src/Form/CancelButtonSettingsForm.php
+++ b/src/Form/CancelButtonSettingsForm.php
@@ -18,34 +18,34 @@ class CancelButtonSettingsForm extends ConfigFormBase {
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * The request context.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   protected $requestContext;
 
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a CancelButtonSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Routing\RequestContext $request_context
+   * @param RequestContext $request_context
    *   The request context.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator, RequestContext $request_context, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/tests/src/Functional/CancelButtonEntityRoutesTest.php b/tests/src/Functional/CancelButtonEntityRoutesTest.php
index 6e6d6c4..ffa3584 100644
--- a/tests/src/Functional/CancelButtonEntityRoutesTest.php
+++ b/tests/src/Functional/CancelButtonEntityRoutesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\cancel_button\Functional;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -25,14 +26,14 @@ class CancelButtonEntityRoutesTest extends BrowserTestBase {
   /**
    * Array of test entities.
    *
-   * @var \Drupal\Core\Entity\ContentEntityInterface[]
+   * @var ContentEntityInterface[]
    */
   protected $entities = [];
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     foreach (['entity_test_broken_canonical', 'entity_test_broken_collection'] as $entity_type) {
       $storage = $this->container->get('entity_type.manager')
diff --git a/tests/src/Functional/CancelButtonSettingsFormTest.php b/tests/src/Functional/CancelButtonSettingsFormTest.php
index 2b68c81..05f0408 100644
--- a/tests/src/Functional/CancelButtonSettingsFormTest.php
+++ b/tests/src/Functional/CancelButtonSettingsFormTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\cancel_button\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\StringTranslation\TranslationManager;
+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -24,21 +28,21 @@ class CancelButtonSettingsFormTest extends BrowserTestBase {
   /**
    * A user with administrative permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * Format a string for HTML display by replacing variable placeholders.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $translationManager;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->createUser([
@@ -64,7 +68,8 @@ class CancelButtonSettingsFormTest extends BrowserTestBase {
     $edit = [
       'default_cancel_destination' => 'y&^blP3',
     ];
-    $this->drupalPostForm('admin/config/content/cancel-button', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/content/cancel-button');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->responseContains(
       $this->translationManager->translate(
         "The path '%path' is either invalid or you do not have access to it.",
@@ -80,7 +85,7 @@ class CancelButtonSettingsFormTest extends BrowserTestBase {
     $entity_types = $this->container->get('entity_type.manager')->getDefinitions();
     $bundles_by_entity = [];
     $final_edit = [];
-    /** @var \Drupal\Core\Entity\EntityTypeInterface $entity_type */
+    /** @var EntityTypeInterface $entity_type */
     foreach ($entity_types as $entity_type_id => $entity_type) {
       // Do not consider entities with wizard forms.
       if (array_key_exists('wizard', $entity_type->getHandlerClasses())) {
@@ -101,7 +106,7 @@ class CancelButtonSettingsFormTest extends BrowserTestBase {
       }
     }
     foreach ($bundles_by_entity as $entity_type_id => $bundles) {
-      /** @var \Drupal\Core\Entity\EntityInterface $bundle */
+      /** @var EntityInterface $bundle */
       foreach ($bundles as $bundle) {
         $final_edit = array_merge($final_edit, [
           $entity_type_id . '_' . $bundle->id() . '_cancel_destination' => '/admin',
@@ -111,7 +116,8 @@ class CancelButtonSettingsFormTest extends BrowserTestBase {
     $final_edit = array_merge($final_edit, [
       'default_cancel_destination' => '/admin',
     ]);
-    $this->drupalPostForm('admin/config/content/cancel-button', $final_edit, t('Save configuration'));
+    $this->drupalGet('admin/config/content/cancel-button');
+    $this->submitForm($final_edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));
   }
 
