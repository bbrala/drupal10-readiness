diff --git a/composer.json b/composer.json
index e11ccc3..f160fd2 100644
--- a/composer.json
+++ b/composer.json
@@ -6,7 +6,7 @@
     "minimum-stability": "dev",
     "require": {
         "drupal/tome": "^1 || 1.x-dev",
-        "drupal/core": "^8 || ^9",
-        "aws/aws-sdk-php": "^3.0@dev"
+        "aws/aws-sdk-php": "^3.0@dev",
+        "drupal/core": "^8 || ^9 || ^10"
     }
 }
diff --git a/src/AwsS3Client.php b/src/AwsS3Client.php
index 6283d4a..13f749d 100644
--- a/src/AwsS3Client.php
+++ b/src/AwsS3Client.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tome_aws;
 
+use Drupal\Core\Config\Config;
 use Aws\S3\Exception\S3Exception;
 use Aws\S3\S3Client;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -17,14 +18,14 @@ class AwsS3Client {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Constructs an AwsS3Client object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/src/Commands/Deploy.php b/src/Commands/Deploy.php
index 862aa0f..7accccc 100644
--- a/src/Commands/Deploy.php
+++ b/src/Commands/Deploy.php
@@ -13,14 +13,14 @@ class Deploy extends DrushCommands {
   /**
    * The batch service.
    *
-   * @var \Drupal\tome_aws\DeployBatch
+   * @var DeployBatch
    */
   protected $batch;
 
   /**
    * TomeAwsDeployCommand constructor.
    *
-   * @param \Drupal\tome_aws\DeployBatch $batch
+   * @param DeployBatch $batch
    *   The batch service.
    */
   public function __construct(DeployBatch $batch) {
diff --git a/src/DeployBatch.php b/src/DeployBatch.php
index 5af8198..9581954 100644
--- a/src/DeployBatch.php
+++ b/src/DeployBatch.php
@@ -22,58 +22,58 @@ class DeployBatch {
   /**
    * The static generator.
    *
-   * @var \Drupal\tome_static\StaticGeneratorInterface
+   * @var StaticGeneratorInterface
    */
   protected $static;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
-   * @var \Drupal\tome_aws\RemoteMetadata
+   * @var RemoteMetadata
    */
   protected $remoteMetadata;
 
   /**
-   * @var \Drupal\tome_aws\AwsS3Client
+   * @var AwsS3Client
    */
   protected $awsS3Client;
 
   /**
    * DeployBatch constructor.
    *
-   * @param \Drupal\tome_static\StaticGeneratorInterface $static
+   * @param StaticGeneratorInterface $static
    *   The static generator.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
-   * @param \Drupal\Core\State\StateInterface $state
-   * @param \Drupal\tome_aws\RemoteMetadata $remote_metadata
-   * @param \Drupal\tome_aws\AwsS3Client $aws_s3_client
+   * @param EntityTypeManager $entity_type_manager
+   * @param ModuleHandler $module_handler
+   * @param StateInterface $state
+   * @param RemoteMetadata $remote_metadata
+   * @param AwsS3Client $aws_s3_client
    */
   public function __construct(StaticGeneratorInterface $static, FileSystemInterface $file_system, EntityTypeManager $entity_type_manager, ModuleHandler $module_handler, StateInterface $state, RemoteMetadata $remote_metadata, AwsS3Client $aws_s3_client) {
 
@@ -118,7 +118,7 @@ class DeployBatch {
   /**
    * Gets a batch object for deploying to AWS.
    *
-   * @return \Drupal\Core\Batch\BatchBuilder
+   * @return BatchBuilder
    *   The batch builder.
    */
   public function getBatch() {
diff --git a/src/EventSubscriber/RedirectSubscriber.php b/src/EventSubscriber/RedirectSubscriber.php
index bc1aacd..6075fa6 100644
--- a/src/EventSubscriber/RedirectSubscriber.php
+++ b/src/EventSubscriber/RedirectSubscriber.php
@@ -2,11 +2,11 @@
 
 namespace Drupal\tome_aws\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\tome_static\StaticGeneratorInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -17,23 +17,23 @@ class RedirectSubscriber implements EventSubscriberInterface {
   /**
    * The static generator.
    *
-   * @var \Drupal\tome_static\StaticGeneratorInterface
+   * @var StaticGeneratorInterface
    */
   protected $staticGenerator;
 
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Constructs a RedirectSubscriber object.
    *
-   * @param \Drupal\tome_static\StaticGeneratorInterface $static_generator
+   * @param StaticGeneratorInterface $static_generator
    *   The static generator.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(StaticGeneratorInterface $static_generator, FileSystemInterface $file_system) {
@@ -44,10 +44,10 @@ class RedirectSubscriber implements EventSubscriberInterface {
   /**
    * Reacts to a response event.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event.
    */
-  public function onResponse(FilterResponseEvent $event) {
+  public function onResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     $request = $event->getRequest();
     if ($request->attributes->has(StaticGeneratorInterface::REQUEST_KEY) && $response instanceof RedirectResponse) {
diff --git a/src/Form/Deploy.php b/src/Form/Deploy.php
index ca355df..230b00b 100644
--- a/src/Form/Deploy.php
+++ b/src/Form/Deploy.php
@@ -16,14 +16,14 @@ class Deploy extends FormBase {
   /**
    * The batch service.
    *
-   * @var \Drupal\tome_aws\DeployBatch
+   * @var DeployBatch
    */
   protected $batch;
 
   /**
    * StaticGeneratorForm constructor.
    *
-   * @param \Drupal\tome_aws\DeployBatch $batch
+   * @param DeployBatch $batch
    *   The batch service.
    */
   public function __construct(DeployBatch $batch) {
diff --git a/src/RemoteMetadata.php b/src/RemoteMetadata.php
index 14ff3e8..b28bff9 100644
--- a/src/RemoteMetadata.php
+++ b/src/RemoteMetadata.php
@@ -12,23 +12,23 @@ class RemoteMetadata {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The tome_aws.aws_s3_client service.
    *
-   * @var \Drupal\tome_aws\AwsS3Client
+   * @var AwsS3Client
    */
   protected $awsS3Client;
 
   /**
    * Constructs a RemoteMetadata object.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\tome_aws\AwsS3Client $aws_s3_client
+   * @param AwsS3Client $aws_s3_client
    *   The tome_aws.aws_s3_client service.
    */
   public function __construct(Connection $connection, AwsS3Client $aws_s3_client) {
diff --git a/tests/src/Functional/DeployFormTest.php b/tests/src/Functional/DeployFormTest.php
index 5fe0e56..277c25f 100644
--- a/tests/src/Functional/DeployFormTest.php
+++ b/tests/src/Functional/DeployFormTest.php
@@ -28,7 +28,7 @@ class DeployFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
 
     parent::setUp();
     $this->drupalLogin($this->drupalCreateUser(['use tome static']));
diff --git a/tome_aws.info.yml b/tome_aws.info.yml
index 88ef8ef..d04ea08 100644
--- a/tome_aws.info.yml
+++ b/tome_aws.info.yml
@@ -1,8 +1,7 @@
 name: 'Tome AWS'
 type: module
 description: 'Contains integrations between Tome and AWS.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: Tome
 dependencies:
   - tome:tome_static
