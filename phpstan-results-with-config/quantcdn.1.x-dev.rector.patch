diff --git a/modules/quant_api/src/Client/QuantClient.php b/modules/quant_api/src/Client/QuantClient.php
index 426f896..bf2224b 100644
--- a/modules/quant_api/src/Client/QuantClient.php
+++ b/modules/quant_api/src/Client/QuantClient.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\quant_api\Client;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use function GuzzleHttp\Psr7\stream_for;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use GuzzleHttp\Client;
 use GuzzleHttp\RequestOptions;
@@ -20,7 +22,7 @@ class QuantClient implements QuantClientInterface {
   /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
@@ -235,7 +237,7 @@ class QuantClient implements QuantClientInterface {
 
     // Prepare a stream.
     $resource = fopen($file, 'r');
-    $stream = Psr7\stream_for($resource);
+    $stream = stream_for($resource);
 
     $headers = [
       'Quant-File-Url' => $url,
diff --git a/modules/quant_api/src/Client/QuantClientInterface.php b/modules/quant_api/src/Client/QuantClientInterface.php
index cc7a40f..66fbc7f 100644
--- a/modules/quant_api/src/Client/QuantClientInterface.php
+++ b/modules/quant_api/src/Client/QuantClientInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\quant_api\Client;
 
+use Drupal\quant_api\Exception\InvalidPayload;
 /**
  * Describe what the Quant client looks like.
  */
@@ -42,7 +43,7 @@ interface QuantClientInterface {
    *
    * @todo Error handlers :D
    *
-   * @throws \Drupal\quant_api\Exception\InvalidPayload
+   * @throws InvalidPayload
    * @throws \Drupal\quant_api\Exception\InvalidResposne
    */
   public function send(array $data) : array;
@@ -62,7 +63,7 @@ interface QuantClientInterface {
    *
    * @todo Error handlers :D
    *
-   * @throws \Drupal\quant_api\Exception\InvalidPayload
+   * @throws InvalidPayload
    * @throws \Drupal\quant_api\Exception\InvalidResposne
    */
   public function sendFile(string $file, string $url, int $rid = NULL) : array;
@@ -73,7 +74,7 @@ interface QuantClientInterface {
    * @param array $data
    *   The data array to send.
    *
-   * @throws \Drupal\quant_api\Exception\InvalidPayload
+   * @throws InvalidPayload
    * @throws \Drupal\quant_api\Exception\InvalidResposne
    */
   public function sendRedirect(array $data) : array;
diff --git a/modules/quant_api/src/EventSubscriber/QuantApi.php b/modules/quant_api/src/EventSubscriber/QuantApi.php
index 434804e..9599813 100644
--- a/modules/quant_api/src/EventSubscriber/QuantApi.php
+++ b/modules/quant_api/src/EventSubscriber/QuantApi.php
@@ -22,21 +22,21 @@ class QuantApi implements EventSubscriberInterface {
   /**
    * The HTTP client to make API requests.
    *
-   * @var \Drupal\quant_api\Client\QuantClientInterface
+   * @var QuantClientInterface
    */
   protected $client;
 
   /**
    * The logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
 
   /**
    * The event dispatcher.
    *
-   * @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher
+   * @var ContainerAwareEventDispatcher
    */
   protected $eventDispatcher;
 
@@ -46,11 +46,11 @@ class QuantApi implements EventSubscriberInterface {
    * Listens to Quant events and triggers requests to the configured
    * API endpoint for different operations.
    *
-   * @param \Drupal\quant_api\Client\QuantClientInterface $client
+   * @param QuantClientInterface $client
    *   The Drupal HTTP Client to make requests.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger channel factory.
-   * @param \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher $event_dispatcher
+   * @param ContainerAwareEventDispatcher $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(QuantClientInterface $client, LoggerChannelFactoryInterface $logger_factory, ContainerAwareEventDispatcher $event_dispatcher) {
@@ -73,7 +73,7 @@ class QuantApi implements EventSubscriberInterface {
   /**
    * Trigger an API redirect update with event data.
    *
-   * @param Drupal\quant\Event\QuantRedirectEvent $event
+   * @param QuantRedirectEvent $event
    *   The redirect event.
    */
   public function onRedirect(QuantRedirectEvent $event) {
@@ -101,7 +101,7 @@ class QuantApi implements EventSubscriberInterface {
   /**
    * Trigger an API request with the event data.
    *
-   * @param Drupal\quant\Event\QuantEvent $event
+   * @param QuantEvent $event
    *   The event.
    */
   public function onOutput(QuantEvent $event) {
@@ -184,7 +184,7 @@ class QuantApi implements EventSubscriberInterface {
       // If the file exists we send it directly to quant otherwise we add it
       // to the queue to generate assets on the next run.
       if (file_exists($fileOnDisk)) {
-        $this->eventDispatcher->dispatch(QuantFileEvent::OUTPUT, new QuantFileEvent($fileOnDisk, $item['full_path'] ?? $file));
+        $this->eventDispatcher->dispatch(new QuantFileEvent($fileOnDisk, $item['full_path'] ?? $file), QuantFileEvent::OUTPUT);
       }
       else {
         $file_item = new FileItem([
@@ -226,7 +226,7 @@ class QuantApi implements EventSubscriberInterface {
   /**
    * Trigger an API push with event data for file.
    *
-   * @param Drupal\quant\Event\QuantFileEvent $event
+   * @param QuantFileEvent $event
    *   The file event.
    */
   public function onMedia(QuantFileEvent $event) {
