diff --git a/cas_mock_server.info.yml b/cas_mock_server.info.yml
index 848040c..ffe2c22 100644
--- a/cas_mock_server.info.yml
+++ b/cas_mock_server.info.yml
@@ -1,7 +1,7 @@
 name: CAS mock server
 type: module
 description: A mocked CAS server for testing purposes.
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 
 configure: cas_mock_server.settings
 
diff --git a/src/Cache/Context/IsCasMockServerActiveCacheContext.php b/src/Cache/Context/IsCasMockServerActiveCacheContext.php
index b2c2272..cb2f0fe 100644
--- a/src/Cache/Context/IsCasMockServerActiveCacheContext.php
+++ b/src/Cache/Context/IsCasMockServerActiveCacheContext.php
@@ -28,7 +28,7 @@ class IsCasMockServerActiveCacheContext implements CacheContextInterface {
   /**
    * The CAS mock server manager.
    *
-   * @var \Drupal\cas_mock_server\ServerManagerInterface
+   * @var ServerManagerInterface
    */
   protected $serverManager;
 
diff --git a/src/Commands/CasMockServerCommands.php b/src/Commands/CasMockServerCommands.php
index 19b1fc7..6c7b9e0 100644
--- a/src/Commands/CasMockServerCommands.php
+++ b/src/Commands/CasMockServerCommands.php
@@ -17,23 +17,23 @@ class CasMockServerCommands extends DrushCommands {
   /**
    * The CAS mock server manager.
    *
-   * @var \Drupal\cas_mock_server\ServerManagerInterface
+   * @var ServerManagerInterface
    */
   protected $serverManager;
 
   /**
    * The CAS mock user manager.
    *
-   * @var \Drupal\cas_mock_server\UserManagerInterface
+   * @var UserManagerInterface
    */
   protected $userManager;
 
   /**
    * Constructs a CasMockServerCommands object.
    *
-   * @param \Drupal\cas_mock_server\ServerManagerInterface $serverManager
+   * @param ServerManagerInterface $serverManager
    *   The CAS mock server manager.
-   * @param \Drupal\cas_mock_server\UserManagerInterface $userManager
+   * @param UserManagerInterface $userManager
    *   The CAS mock user manager.
    */
   public function __construct(ServerManagerInterface $serverManager, UserManagerInterface $userManager) {
@@ -120,7 +120,7 @@ class CasMockServerCommands extends DrushCommands {
   /**
    * Returns a list of CAS mock users.
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   A table containing all CAS mock users.
    *
    * @command cas-mock-server:user-list
diff --git a/src/Config/CasMockServerConfigOverrider.php b/src/Config/CasMockServerConfigOverrider.php
index ecbce5b..2505095 100644
--- a/src/Config/CasMockServerConfigOverrider.php
+++ b/src/Config/CasMockServerConfigOverrider.php
@@ -28,32 +28,32 @@ class CasMockServerConfigOverrider implements ConfigFactoryOverrideInterface {
   /**
    * The CAS mock server manager.
    *
-   * @var \Drupal\cas_mock_server\ServerManagerInterface
+   * @var ServerManagerInterface
    */
   protected $serverManager;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a CasMockServerConfigOverrider.
    *
-   * @param \Drupal\cas_mock_server\ServerManagerInterface $serverManager
+   * @param ServerManagerInterface $serverManager
    *   The CAS mock server manager.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ServerManagerInterface $serverManager, RequestStack $requestStack, MessengerInterface $messenger) {
diff --git a/src/Controller/CasMockServerController.php b/src/Controller/CasMockServerController.php
index f197984..c072bfe 100644
--- a/src/Controller/CasMockServerController.php
+++ b/src/Controller/CasMockServerController.php
@@ -22,32 +22,32 @@ class CasMockServerController extends ControllerBase {
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The CAS mock user manager.
    *
-   * @var \Drupal\cas_mock_server\UserManagerInterface
+   * @var UserManagerInterface
    */
   protected $userManager;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a CasMockServerController.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
-   * @param \Drupal\cas_mock_server\UserManagerInterface $userManager
+   * @param UserManagerInterface $userManager
    *   The CAS mock user manager.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(RequestStack $requestStack, UserManagerInterface $userManager, EventDispatcherInterface $event_dispatcher) {
@@ -70,7 +70,7 @@ class CasMockServerController extends ControllerBase {
   /**
    * Validates a service ticket.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   Thrown when a service ticket is missing or is invalid.
    */
   public function validate(): Response {
@@ -140,7 +140,7 @@ class CasMockServerController extends ControllerBase {
     // responding with a different XML structure. Allow third-party modules to
     // alter the XML document object model (DOM).
     $response_alter_event = new CasMockServerResponseAlterEvent($dom, $username, $user_data);
-    $this->eventDispatcher->dispatch(CasMockServerEvents::RESPONSE_ALTER, $response_alter_event);
+    $this->eventDispatcher->dispatch($response_alter_event, CasMockServerEvents::RESPONSE_ALTER);
 
     return $response_alter_event->getDom()->saveXML();
   }
diff --git a/src/Event/CasMockServerResponseAlterEvent.php b/src/Event/CasMockServerResponseAlterEvent.php
index d2aef53..4a40235 100644
--- a/src/Event/CasMockServerResponseAlterEvent.php
+++ b/src/Event/CasMockServerResponseAlterEvent.php
@@ -4,7 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\cas_mock_server\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Provides an event class for the CasMockServerEvents::RESPONSE_ALTER event.
diff --git a/src/Form/LoginForm.php b/src/Form/LoginForm.php
index 82c8a3e..5d1909a 100644
--- a/src/Form/LoginForm.php
+++ b/src/Form/LoginForm.php
@@ -20,14 +20,14 @@ class LoginForm extends FormBase {
   /**
    * The mock user manager.
    *
-   * @var \Drupal\cas_mock_server\UserManagerInterface
+   * @var UserManagerInterface
    */
   protected $userManager;
 
   /**
    * Constructs a login form for the mock CAS server.
    *
-   * @param \Drupal\cas_mock_server\UserManagerInterface $userManager
+   * @param UserManagerInterface $userManager
    *   The mock user manager.
    */
   public function __construct(UserManagerInterface $userManager) {
@@ -138,7 +138,7 @@ class LoginForm extends FormBase {
   /**
    * Returns the user data for the CAS user that logged in to the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array|null
diff --git a/src/Plugin/Menu/CasLoginMenuLink.php b/src/Plugin/Menu/CasLoginMenuLink.php
index 1644b9f..4e955f3 100644
--- a/src/Plugin/Menu/CasLoginMenuLink.php
+++ b/src/Plugin/Menu/CasLoginMenuLink.php
@@ -21,21 +21,21 @@ class CasLoginMenuLink extends MenuLinkDefault {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
@@ -48,13 +48,13 @@ class CasLoginMenuLink extends MenuLinkDefault {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Menu\StaticMenuLinkOverridesInterface $static_override
+   * @param StaticMenuLinkOverridesInterface $static_override
    *   The static override storage.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(array $configuration, string $plugin_id, $plugin_definition, StaticMenuLinkOverridesInterface $static_override, AccountInterface $current_user, PathMatcherInterface $path_matcher, RequestStack $request_stack) {
diff --git a/src/ServerManager.php b/src/ServerManager.php
index 3c7e17d..16590bb 100644
--- a/src/ServerManager.php
+++ b/src/ServerManager.php
@@ -20,14 +20,14 @@ class ServerManager implements ServerManagerInterface {
   /**
    * The state key/value store.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Constructs a ServerManager.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state key/value store.
    */
   public function __construct(StateInterface $state) {
diff --git a/src/ServiceTicketHelper.php b/src/ServiceTicketHelper.php
index fd4c0ac..1e08b48 100644
--- a/src/ServiceTicketHelper.php
+++ b/src/ServiceTicketHelper.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\cas_mock_server;
 
+use Drupal\Component\Uuid\UuidInterface;
 /**
  * Contains helper methods related to CAS service tickets.
  */
@@ -16,7 +17,7 @@ class ServiceTicketHelper {
    *   The service ticket.
    */
   public static function generateServiceTicket(): string {
-    /** @var \Drupal\Component\Uuid\UuidInterface $uuid_service */
+    /** @var UuidInterface $uuid_service */
     $uuid_service = \Drupal::service('uuid');
     return 'ST-' . $uuid_service->generate();
   }
diff --git a/src/UserManager.php b/src/UserManager.php
index 0582ad5..764c587 100644
--- a/src/UserManager.php
+++ b/src/UserManager.php
@@ -24,24 +24,24 @@ class UserManager implements UserManagerInterface {
   /**
    * The cache backend serving as storage for the users.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueExpirableFactoryInterface
+   * @var KeyValueExpirableFactoryInterface
    */
   protected $keyValueFactory;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs an UserManager service.
    *
-   * @param \Drupal\Core\KeyValueStore\KeyValueExpirableFactoryInterface $keyValueFactory
+   * @param KeyValueExpirableFactoryInterface $keyValueFactory
    *   The factory for key value stores, one of which will serve as storage for
    *   the users.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
    */
   public function __construct(KeyValueExpirableFactoryInterface $keyValueFactory, ConfigFactoryInterface $configFactory) {
@@ -230,7 +230,7 @@ class UserManager implements UserManagerInterface {
   /**
    * Returns the user storage.
    *
-   * @return \Drupal\Core\KeyValueStore\KeyValueStoreExpirableInterface
+   * @return KeyValueStoreExpirableInterface
    *   The key value store.
    */
   protected function getStorage(): KeyValueStoreExpirableInterface {
diff --git a/tests/modules/cas_mock_server_test/src/EventSubscriber/CasMockServerTestSubscriber.php b/tests/modules/cas_mock_server_test/src/EventSubscriber/CasMockServerTestSubscriber.php
index 3619021..12c547e 100644
--- a/tests/modules/cas_mock_server_test/src/EventSubscriber/CasMockServerTestSubscriber.php
+++ b/tests/modules/cas_mock_server_test/src/EventSubscriber/CasMockServerTestSubscriber.php
@@ -17,14 +17,14 @@ class CasMockServerTestSubscriber implements EventSubscriberInterface {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Constructs a CasMockServerTestSubscriber.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(StateInterface $state) {
@@ -43,7 +43,7 @@ class CasMockServerTestSubscriber implements EventSubscriberInterface {
   /**
    * Alters the service response if a test demands it.
    *
-   * @param \Drupal\cas_mock_server\Event\CasMockServerResponseAlterEvent $event
+   * @param CasMockServerResponseAlterEvent $event
    *   The event object.
    */
   public function alterResponse(CasMockServerResponseAlterEvent $event): void {
diff --git a/tests/src/Context/CasMockServerContext.php b/tests/src/Context/CasMockServerContext.php
index 615d472..a7233b8 100644
--- a/tests/src/Context/CasMockServerContext.php
+++ b/tests/src/Context/CasMockServerContext.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\cas_mock_server\Context;
 
+use Drupal\user\UserInterface;
 use Behat\Behat\Hook\Scope\BeforeScenarioScope;
 use Behat\Gherkin\Node\TableNode;
 use Drupal\DrupalExtension\Context\RawDrupalContext;
@@ -121,7 +122,7 @@ class CasMockServerContext extends RawDrupalContext {
   /**
    * Returns the server manager service.
    *
-   * @return \Drupal\cas_mock_server\ServerManagerInterface
+   * @return ServerManagerInterface
    *   The service that manages the CAS mock server.
    */
   protected function getServerManager(): ServerManagerInterface {
@@ -193,7 +194,7 @@ class CasMockServerContext extends RawDrupalContext {
       $users[$values['username']] = $values;
 
       if ($local_username) {
-        /** @var \Drupal\user\UserInterface $local_account */
+        /** @var UserInterface $local_account */
         $local_account = user_load_by_name($local_username);
         if (!$local_account) {
           throw new \Exception("Non-existing Drupal user '$local_username'.");
@@ -227,7 +228,7 @@ class CasMockServerContext extends RawDrupalContext {
   /**
    * Returns the user manager for the CAS mock server.
    *
-   * @return \Drupal\cas_mock_server\UserManagerInterface
+   * @return UserManagerInterface
    *   The user manager.
    */
   protected function getCasMockServerUserManager(): UserManagerInterface {
diff --git a/tests/src/Kernel/CasMockServerConfigOverriderTest.php b/tests/src/Kernel/CasMockServerConfigOverriderTest.php
index 711cd01..1fd9fdc 100644
--- a/tests/src/Kernel/CasMockServerConfigOverriderTest.php
+++ b/tests/src/Kernel/CasMockServerConfigOverriderTest.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\cas_mock_server\Kernel;
 
+use Drupal\cas_mock_server\ServerManagerInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\cas\Service\CasHelper;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\KernelTests\KernelTestBase;
@@ -20,14 +22,14 @@ class CasMockServerConfigOverriderTest extends KernelTestBase {
   /**
    * The server manager service.
    *
-   * @var \Drupal\cas_mock_server\ServerManagerInterface
+   * @var ServerManagerInterface
    */
   protected $serverManager;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -126,7 +128,7 @@ class CasMockServerConfigOverriderTest extends KernelTestBase {
   /**
    * Returns the CAS config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The configuration object containing the settings for the CAS module.
    */
   protected function getCasConfig(): ImmutableConfig {
diff --git a/tests/src/Kernel/IsCasMockServerActiveCacheContextTest.php b/tests/src/Kernel/IsCasMockServerActiveCacheContextTest.php
index 4fc18bb..0fe21bd 100644
--- a/tests/src/Kernel/IsCasMockServerActiveCacheContextTest.php
+++ b/tests/src/Kernel/IsCasMockServerActiveCacheContextTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\cas_mock_server\Kernel;
 
+use Drupal\cas_mock_server\ServerManagerInterface;
 use Drupal\cas_mock_server\Cache\Context\IsCasMockServerActiveCacheContext;
 use Drupal\KernelTests\KernelTestBase;
 
@@ -18,14 +19,14 @@ class IsCasMockServerActiveCacheContextTest extends KernelTestBase {
   /**
    * The cache context being tested.
    *
-   * @var \Drupal\cas_mock_server\Cache\Context\IsCasMockServerActiveCacheContext
+   * @var IsCasMockServerActiveCacheContext
    */
   protected $cacheContext;
 
   /**
    * The server manager service.
    *
-   * @var \Drupal\cas_mock_server\ServerManagerInterface
+   * @var ServerManagerInterface
    */
   protected $serverManager;
 
diff --git a/tests/src/Kernel/ServerManagerTest.php b/tests/src/Kernel/ServerManagerTest.php
index 3a0552a..ea00abd 100644
--- a/tests/src/Kernel/ServerManagerTest.php
+++ b/tests/src/Kernel/ServerManagerTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\cas_mock_server\Kernel;
 
+use Drupal\cas_mock_server\ServerManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -17,7 +18,7 @@ class ServerManagerTest extends KernelTestBase {
   /**
    * The server manager service. This is the system under test.
    *
-   * @var \Drupal\cas_mock_server\ServerManagerInterface
+   * @var ServerManagerInterface
    */
   protected $serverManager;
 
diff --git a/tests/src/Kernel/ServiceResponseAlterTest.php b/tests/src/Kernel/ServiceResponseAlterTest.php
index 85bd225..e12115a 100644
--- a/tests/src/Kernel/ServiceResponseAlterTest.php
+++ b/tests/src/Kernel/ServiceResponseAlterTest.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\cas_mock_server\Kernel;
 
+use Drupal\Core\State\StateInterface;
+use Drupal\cas_mock_server\UserManagerInterface;
 use Drupal\Core\Url;
 use Drupal\KernelTests\KernelTestBase;
 use Symfony\Component\HttpFoundation\Request;
@@ -18,14 +20,14 @@ class ServiceResponseAlterTest extends KernelTestBase {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The CAS mock user manager.
    *
-   * @var \Drupal\cas_mock_server\UserManagerInterface
+   * @var UserManagerInterface
    */
   protected $userManager;
 
diff --git a/tests/src/Kernel/UserManagerTest.php b/tests/src/Kernel/UserManagerTest.php
index bbc3113..edeca55 100644
--- a/tests/src/Kernel/UserManagerTest.php
+++ b/tests/src/Kernel/UserManagerTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\cas_mock_server\Kernel;
 
+use Drupal\cas_mock_server\UserManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -17,7 +18,7 @@ class UserManagerTest extends KernelTestBase {
   /**
    * The user manager service. This is the system under test.
    *
-   * @var \Drupal\cas_mock_server\UserManagerInterface
+   * @var UserManagerInterface
    */
   protected $userManager;
 
