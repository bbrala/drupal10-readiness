diff --git a/src/Controller/FileUrlRedirect.php b/src/Controller/FileUrlRedirect.php
index 76ba8a7..d88ebb4 100644
--- a/src/Controller/FileUrlRedirect.php
+++ b/src/Controller/FileUrlRedirect.php
@@ -17,10 +17,10 @@ class FileUrlRedirect extends ControllerBase {
   /**
    * Redirect to the actual file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file object.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect object.
    */
   public function redirectToFile(FileInterface $file) {
diff --git a/src/FileUrlHandler.php b/src/FileUrlHandler.php
index 6c62e9d..b08f638 100644
--- a/src/FileUrlHandler.php
+++ b/src/FileUrlHandler.php
@@ -14,7 +14,7 @@ class FileUrlHandler {
   /**
    * Get public dereferenceable URL from file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   File.
    *
    * @return string
@@ -43,7 +43,7 @@ class FileUrlHandler {
    * @param string $url
    *   URL.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   The file object.
    */
   public static function urlToFile($url) {
@@ -63,7 +63,7 @@ class FileUrlHandler {
   /**
    * Checks if a file entity is s remote file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file being checked.
    *
    * @return bool
diff --git a/src/Plugin/EntityReferenceSelection/FileUrlSelection.php b/src/Plugin/EntityReferenceSelection/FileUrlSelection.php
index 341549d..57f977f 100644
--- a/src/Plugin/EntityReferenceSelection/FileUrlSelection.php
+++ b/src/Plugin/EntityReferenceSelection/FileUrlSelection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_url\Plugin\EntityReferenceSelection;
 
+use Drupal\file_url\FileUrlHandler;
 use Drupal\Core\Entity\Plugin\EntityReferenceSelection\DefaultSelection;
 
 /**
@@ -21,7 +22,7 @@ class FileUrlSelection extends DefaultSelection {
    * {@inheritdoc}
    */
   public function validateReferenceableEntities(array $ids) {
-    /** @var \Drupal\file_url\FileUrlHandler $file_handler */
+    /** @var FileUrlHandler $file_handler */
     $file_handler = \Drupal::service('file_url.handler');
     $found = [];
 
diff --git a/src/Plugin/Field/FieldFormatter/FileUrlFormatter.php b/src/Plugin/Field/FieldFormatter/FileUrlFormatter.php
index ac06576..6ade3ba 100644
--- a/src/Plugin/Field/FieldFormatter/FileUrlFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FileUrlFormatter.php
@@ -77,7 +77,7 @@ class FileUrlFormatter extends FileFormatterBase {
       if ($this->getSetting('mode') === 'plain') {
         $elements['delta'] = [
           $elements[$delta] = [
-            '#markup' => file_url_transform_relative(file_create_url($file->getFileUri())),
+            '#markup' => \Drupal::service('file_url_generator')->generateString($file->getFileUri()),
             '#cache' => [
               'tags' => $file->getCacheTags(),
             ],
@@ -107,7 +107,7 @@ class FileUrlFormatter extends FileFormatterBase {
       // Allow showing the full URI as tip.
       // @todo Probably the UX/UI team should decide if the full URL should be
       //   permanently displayed when showing distributions.
-      $elements[$delta]['#attributes']['title'] = file_create_url($file->getFileUri());
+      $elements[$delta]['#attributes']['title'] = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     }
 
     return $elements;
diff --git a/src/Plugin/Field/FieldType/FileUrlFieldItemList.php b/src/Plugin/Field/FieldType/FileUrlFieldItemList.php
index 3fe18f0..a18385c 100644
--- a/src/Plugin/Field/FieldType/FileUrlFieldItemList.php
+++ b/src/Plugin/Field/FieldType/FileUrlFieldItemList.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_url\Plugin\Field\FieldType;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Field\EntityReferenceFieldItemList;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -42,7 +43,7 @@ class FileUrlFieldItemList extends EntityReferenceFieldItemList {
    * {@inheritdoc}
    */
   public function postSave($update) {
-    /** @var \Drupal\file_url\FileUrlHandler $file_handler */
+    /** @var FileUrlHandler $file_handler */
     $file_handler = \Drupal::service('file_url.handler');
     $entity = $this->getEntity();
 
@@ -59,7 +60,7 @@ class FileUrlFieldItemList extends EntityReferenceFieldItemList {
       $files = $this->referencedEntities();
       $ids = [];
 
-      /** @var \Drupal\file\FileInterface $file */
+      /** @var FileInterface $file */
       foreach ($files as $file) {
         $ids[] = $file->id();
       }
@@ -110,7 +111,7 @@ class FileUrlFieldItemList extends EntityReferenceFieldItemList {
    * {@inheritdoc}
    */
   public function referencedEntities() {
-    /** @var \Drupal\file_url\FileUrlHandler $file_handler */
+    /** @var FileUrlHandler $file_handler */
     $file_handler = \Drupal::service('file_url.handler');
     if (empty($this->list)) {
       return [];
diff --git a/src/Plugin/Field/FieldWidget/FileUrlWidget.php b/src/Plugin/Field/FieldWidget/FileUrlWidget.php
index 5f2565a..54a1f50 100644
--- a/src/Plugin/Field/FieldWidget/FileUrlWidget.php
+++ b/src/Plugin/Field/FieldWidget/FileUrlWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_url\Plugin\Field\FieldWidget;
 
+use Drupal\file\FileInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -189,7 +190,7 @@ class FileUrlWidget extends FileWidget {
    *
    * @param array $element
    *   The element render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    * @param array $complete_form
    *   The full form render array.
@@ -267,7 +268,7 @@ class FileUrlWidget extends FileWidget {
     // Convert file IDs to URLs.
     foreach ($values as &$value) {
       if ($value['file_url_type'] === static::TYPE_UPLOAD) {
-        /** @var \Drupal\file\FileInterface $file */
+        /** @var FileInterface $file */
         $file = File::load((int) $value['target_id']);
         $value['target_id'] = FileUrlHandler::fileToUrl($file);
       }
diff --git a/tests/src/Kernel/FileUrlFieldItemListTest.php b/tests/src/Kernel/FileUrlFieldItemListTest.php
index dcc9644..293cd39 100644
--- a/tests/src/Kernel/FileUrlFieldItemListTest.php
+++ b/tests/src/Kernel/FileUrlFieldItemListTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\file_url\Kernel;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\file\FileInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\entity_test\Entity\EntityTest;
@@ -28,21 +30,21 @@ class FileUrlFieldItemListTest extends FieldKernelTestBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * A local test file entity.
    *
-   * @var \Drupal\file\FileInterface
+   * @var FileInterface
    */
   protected $localFile;
 
   /**
    * A remote test file entity.
    *
-   * @var \Drupal\file\FileInterface
+   * @var FileInterface
    */
   protected $remoteFile;
 
@@ -56,7 +58,7 @@ class FileUrlFieldItemListTest extends FieldKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->entityTypeManager = $this->container->get('entity_type.manager');
@@ -143,10 +145,10 @@ class FileUrlFieldItemListTest extends FieldKernelTestBase {
   /**
    * Reloads the given entity from the storage and returns it.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be reloaded.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The reloaded entity.
    */
   protected function reloadEntity(EntityInterface $entity) {
