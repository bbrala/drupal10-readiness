modules/contrib/location_migration/location_migration.module
modules/contrib/location_migration/src/LocationMigration.php
modules/contrib/location_migration/src/MigrationPluginAlterer.php
modules/contrib/location_migration/src/Plugin/migrate/D7EntityLocationDeriver.php
modules/contrib/location_migration/src/Plugin/migrate/D7LocationFieldDeriver.php
modules/contrib/location_migration/src/Plugin/migrate/DestinationFieldTrait.php
modules/contrib/location_migration/src/Plugin/migrate/LocationDeriverBase.php
modules/contrib/location_migration/src/Plugin/migrate/field/Location.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationEmailToEmail.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationFaxToTelephone.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationPhoneToTelephone.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationProcessPluginBase.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationToAddress.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationToAddressFieldInstanceSettings.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationToGeolocation.php
modules/contrib/location_migration/src/Plugin/migrate/process/LocationWwwToLink.php
modules/contrib/location_migration/src/Plugin/migrate/source/EntityLocationFieldFormatter.php
modules/contrib/location_migration/src/Plugin/migrate/source/EntityLocationFieldInstance.php
modules/contrib/location_migration/src/Plugin/migrate/source/EntityLocationFieldStorage.php
modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldFormatter.php
modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldInstance.php
modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldStorage.php
modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldWidget.php
modules/contrib/location_migration/tests/fixtures/d7/drupal7_location.php
modules/contrib/location_migration/tests/fixtures/d7/example.settings.php
modules/contrib/location_migration/tests/src/Kernel/Migrate/d7/LocationMigrationTest.php
modules/contrib/location_migration/tests/src/Kernel/Migrate/d7/LocationMigrationTestBase.php
modules/contrib/location_migration/tests/src/Traits/LocationMigrationAssertionsTrait.php

9 files with changes
====================

1) modules/contrib/location_migration/tests/src/Traits/LocationMigrationAssertionsTrait.php:609

    ---------- begin diff ----------
@@ @@
   /**
    * Filters out unconcerned properties from an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   An entity instance.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/location_migration/tests/src/Kernel/Migrate/d7/LocationMigrationTestBase.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->loadFixture($this->getDatabaseFixtureFilePath());
     $module_handler = \Drupal::moduleHandler();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/location_migration/tests/src/Kernel/Migrate/d7/LocationMigrationTest.php:45

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getDatabaseFixtureFilePath(): string {
-    return drupal_get_path('module', 'location_migration') . '/tests/fixtures/d7/drupal7_location.php';
+    return \Drupal::service('extension.list.module')->getPath('location_migration') . '/tests/fixtures/d7/drupal7_location.php';
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldWidget.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypePluginManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The current migration plugin instance.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, StateInterface $state, EntityTypeManagerInterface $entity_type_manager, FieldTypePluginManagerInterface $field_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldStorage.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypePluginManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The current migration plugin instance.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, StateInterface $state, EntityTypeManagerInterface $entity_type_manager, FieldTypePluginManagerInterface $field_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldInstance.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypePluginManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The current migration plugin instance.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, StateInterface $state, EntityTypeManagerInterface $entity_type_manager, FieldTypePluginManagerInterface $field_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/location_migration/src/Plugin/migrate/source/LocationFieldFormatter.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypePluginManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The current migration plugin instance.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, StateInterface $state, EntityTypeManagerInterface $entity_type_manager, FieldTypePluginManagerInterface $field_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/location_migration/src/Plugin/migrate/source/EntityLocationFieldInstance.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypePluginManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The current migration plugin instance.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, StateInterface $state, EntityTypeManagerInterface $entity_type_manager, FieldTypePluginManagerInterface $field_type_manager) {
@@ @@
   /**
    * Performs a query union.
    *
-   * @param \Drupal\Core\Database\Query\SelectInterface|null $destination
+   * @param SelectInterface|null $destination
    *   The "destination" query which should be extended.
-   * @param \Drupal\Core\Database\Query\SelectInterface $source
+   * @param SelectInterface $source
    *   The query which should be added.
    */
   protected static function addUnionQuery(&$destination, SelectInterface $source) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/location_migration/src/Plugin/migrate/process/LocationProcessPluginBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\location_migration\Plugin\migrate\process;

+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\MigrateSkipProcessException;
@@ @@
   /**
    * The migration plugin instance.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;

@@ @@
   /**
    * The database object of the current migration.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration plugin instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration) {
@@ @@
    *
    * @param mixed $values
    *   The values to be transformed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process.
    *
    * @return int[]
@@ @@
   /**
    * Returns a location ID associated with the entity of the current migration.
    *
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The current migration row.
    *
    * @return int[]
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 9 files have been changed by Rector                                       

