diff --git a/modules/onlyone_admin_toolbar/onlyone_admin_toolbar.module b/modules/onlyone_admin_toolbar/onlyone_admin_toolbar.module
index 2790162..e52ce5e 100644
--- a/modules/onlyone_admin_toolbar/onlyone_admin_toolbar.module
+++ b/modules/onlyone_admin_toolbar/onlyone_admin_toolbar.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\node\NodeInterface;
 /**
  * @file
  * Contains onlyone_admin_toolbar.module.
@@ -80,7 +81,7 @@ function onlyone_admin_toolbar_menu_links_discovered_alter(&$links) {
  */
 function onlyone_admin_toolbar_node_insert(EntityInterface $node) {
   // Rebuild the menu if needed.
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   \Drupal::service('onlyone.admin_toolbar')->rebuildMenu($node->getType());
 }
 
@@ -89,7 +90,7 @@ function onlyone_admin_toolbar_node_insert(EntityInterface $node) {
  */
 function onlyone_admin_toolbar_node_delete(EntityInterface $node) {
   // Rebuild the menu if needed.
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   \Drupal::service('onlyone.admin_toolbar')->rebuildMenu($node->getType());
 }
 
@@ -98,6 +99,6 @@ function onlyone_admin_toolbar_node_delete(EntityInterface $node) {
  */
 function onlyone_admin_toolbar_node_update(EntityInterface $node) {
   // Rebuild the menu if needed.
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   \Drupal::service('onlyone.admin_toolbar')->rebuildMenu($node->getType());
 }
diff --git a/modules/onlyone_admin_toolbar/src/EventSubscriber/ContentTypesUpdatedSubscriber.php b/modules/onlyone_admin_toolbar/src/EventSubscriber/ContentTypesUpdatedSubscriber.php
index 4b64212..9b1f656 100644
--- a/modules/onlyone_admin_toolbar/src/EventSubscriber/ContentTypesUpdatedSubscriber.php
+++ b/modules/onlyone_admin_toolbar/src/EventSubscriber/ContentTypesUpdatedSubscriber.php
@@ -14,14 +14,14 @@ class ContentTypesUpdatedSubscriber implements EventSubscriberInterface {
   /**
    * The route builder.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $route_builder
+   * @param RouteBuilderInterface $route_builder
    *   The route builder.
    */
   public function __construct(RouteBuilderInterface $route_builder) {
diff --git a/modules/onlyone_admin_toolbar/src/OnlyOneAdminToolbar.php b/modules/onlyone_admin_toolbar/src/OnlyOneAdminToolbar.php
index 8851aad..eadd3cf 100644
--- a/modules/onlyone_admin_toolbar/src/OnlyOneAdminToolbar.php
+++ b/modules/onlyone_admin_toolbar/src/OnlyOneAdminToolbar.php
@@ -13,23 +13,23 @@ class OnlyOneAdminToolbar implements OnlyOneAdminToolbarInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The route builder.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $route_builder
+   * @param RouteBuilderInterface $route_builder
    *   The route builder.
    */
   public function __construct(ConfigFactoryInterface $config_factory, RouteBuilderInterface $route_builder) {
diff --git a/modules/onlyone_admin_toolbar/tests/src/Unit/OnlyOneAdminToolbarTest.php b/modules/onlyone_admin_toolbar/tests/src/Unit/OnlyOneAdminToolbarTest.php
index 22cef81..7022fa5 100644
--- a/modules/onlyone_admin_toolbar/tests/src/Unit/OnlyOneAdminToolbarTest.php
+++ b/modules/onlyone_admin_toolbar/tests/src/Unit/OnlyOneAdminToolbarTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\onlyone_admin_toolbar\Unit;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Routing\RouteBuilderInterface;
 use Drupal\Tests\UnitTestCase;
 use Drupal\onlyone_admin_toolbar\OnlyOneAdminToolbar;
 
@@ -17,28 +20,28 @@ class OnlyOneAdminToolbarTest extends UnitTestCase {
   /**
    * A config factory instance.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var ConfigFactoryInterface|MockObject
    */
   protected $configFactory;
 
   /**
    * A route builder instance.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var RouteBuilderInterface|MockObject
    */
   protected $routeBuilder;
 
   /**
    * The OnlyOneAdminToolbar Object.
    *
-   * @var \Drupal\onlyone_admin_toolbar\OnlyOneAdminToolbar
+   * @var OnlyOneAdminToolbar
    */
   protected $onlyOneAdminToolbar;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Config factory mock.
diff --git a/src/Controller/OnlyOneController.php b/src/Controller/OnlyOneController.php
index bc2277b..275904f 100644
--- a/src/Controller/OnlyOneController.php
+++ b/src/Controller/OnlyOneController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\onlyone\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\Core\Url;
@@ -15,14 +18,14 @@ class OnlyOneController extends ControllerBase {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(RendererInterface $renderer) {
@@ -41,12 +44,12 @@ class OnlyOneController extends ControllerBase {
   /**
    * Displays add content links for Only One available content types.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   A render array for a list of the node types that can be added or redirect
    *   to the creation node page if there is only one content type.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function addPage() {
     // Getting the configured content types.
diff --git a/src/Event/OnlyOneEvents.php b/src/Event/OnlyOneEvents.php
index b278418..199dc1b 100644
--- a/src/Event/OnlyOneEvents.php
+++ b/src/Event/OnlyOneEvents.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\onlyone\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class OnlyOneEvents.
diff --git a/src/Form/ConfigContentTypes.php b/src/Form/ConfigContentTypes.php
index 781c67f..ddc6593 100644
--- a/src/Form/ConfigContentTypes.php
+++ b/src/Form/ConfigContentTypes.php
@@ -19,25 +19,25 @@ class ConfigContentTypes extends ConfigFormBase {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispacher;
 
   /**
    * The onlyone service.
    *
-   * @var \Drupal\onlyone\OnlyOneInterface
+   * @var OnlyOneInterface
    */
   protected $onlyone;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispacher
+   * @param EventDispatcherInterface $event_dispacher
    *   The event dispacher.
-   * @param \Drupal\onlyone\OnlyOneInterface $onlyone
+   * @param OnlyOneInterface $onlyone
    *   The onlyone service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EventDispatcherInterface $event_dispacher, OnlyOneInterface $onlyone) {
diff --git a/src/Form/OnlyOneAdminSettings.php b/src/Form/OnlyOneAdminSettings.php
index 7f35518..802746e 100644
--- a/src/Form/OnlyOneAdminSettings.php
+++ b/src/Form/OnlyOneAdminSettings.php
@@ -16,23 +16,23 @@ class OnlyOneAdminSettings extends ConfigFormBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The route builder.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $route_builder
+   * @param RouteBuilderInterface $route_builder
    *   The route builder.
    */
   public function __construct(ConfigFactoryInterface $config_factory, RouteBuilderInterface $route_builder) {
diff --git a/src/OnlyOne.php b/src/OnlyOne.php
index dc4a818..4cbeee9 100644
--- a/src/OnlyOne.php
+++ b/src/OnlyOne.php
@@ -20,50 +20,50 @@ class OnlyOne implements OnlyOneInterface {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The onlyone service.
    *
-   * @var \Drupal\onlyone\OnlyOnePrintStrategyInterface
+   * @var OnlyOnePrintStrategyInterface
    */
   protected $formatter;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(
diff --git a/src/OnlyOneInterface.php b/src/OnlyOneInterface.php
index 9acf563..4020d25 100644
--- a/src/OnlyOneInterface.php
+++ b/src/OnlyOneInterface.php
@@ -90,7 +90,7 @@ interface OnlyOneInterface {
   /**
    * Set the formatter for printing.
    *
-   * @param \Drupal\onlyone\OnlyOnePrintStrategyInterface $formatter
+   * @param OnlyOnePrintStrategyInterface $formatter
    *   The formatter type.
    *
    * @return \Drupal\onlyone\OnlyOneInterface
diff --git a/src/OnlyOneModuleHandler.php b/src/OnlyOneModuleHandler.php
index 47fd86e..1203b5d 100644
--- a/src/OnlyOneModuleHandler.php
+++ b/src/OnlyOneModuleHandler.php
@@ -16,32 +16,32 @@ class OnlyOneModuleHandler implements OnlyOneModuleHandlerInterface {
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The render service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The module extension list service.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $module_extension_list
+   * @param ModuleExtensionList $module_extension_list
    *   The module extension list.
    */
   public function __construct(ModuleHandlerInterface $module_handler, RendererInterface $renderer, ModuleExtensionList $module_extension_list) {
diff --git a/src/Plugin/Validation/Constraint/OnlyOneConstraintValidator.php b/src/Plugin/Validation/Constraint/OnlyOneConstraintValidator.php
index 67a128c..d8b7ed6 100644
--- a/src/Plugin/Validation/Constraint/OnlyOneConstraintValidator.php
+++ b/src/Plugin/Validation/Constraint/OnlyOneConstraintValidator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\onlyone\Plugin\Validation\Constraint;
 
+use Drupal\node\NodeInterface;
 use Symfony\Component\Validator\Constraint;
 use Symfony\Component\Validator\ConstraintValidator;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -18,32 +19,32 @@ class OnlyOneConstraintValidator extends ConstraintValidator implements Containe
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The onlyone service.
    *
-   * @var \Drupal\onlyone\OnlyOneInterface
+   * @var OnlyOneInterface
    */
   protected $onlyone;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\onlyone\OnlyOneInterface $onlyone
+   * @param OnlyOneInterface $onlyone
    *   The onlyone service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, OnlyOneInterface $onlyone, EntityTypeManagerInterface $entity_type_manager) {
@@ -78,7 +79,7 @@ class OnlyOneConstraintValidator extends ConstraintValidator implements Containe
       // If the existing node have the same id that the node that is being saved
       // then is the same node that is being updated.
       if ($nid && $nid != $node->id()) {
-        /** @var \Drupal\node\NodeInterface $existing_node */
+        /** @var NodeInterface $existing_node */
         $existing_node = $this->entityTypeManager->getStorage('node')->load($nid);
 
         $values = [
@@ -87,7 +88,7 @@ class OnlyOneConstraintValidator extends ConstraintValidator implements Containe
           '@title' => $existing_node->getTitle(),
           '%language' => $node->language()->getName(),
         ];
-        /** @var  \Drupal\onlyone\Plugin\Validation\Constraint\OnlyOneConstraint $constraint */
+        /** @var OnlyOneConstraint $constraint */
         $this->context->buildViolation($constraint->nodeExists, $values)->atPath('langcode')->addViolation();
       }
     }
diff --git a/src/Routing/OnlyOneRoutes.php b/src/Routing/OnlyOneRoutes.php
index 1f39189..9b28539 100644
--- a/src/Routing/OnlyOneRoutes.php
+++ b/src/Routing/OnlyOneRoutes.php
@@ -15,14 +15,14 @@ class OnlyOneRoutes implements ContainerInjectionInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index 0dc723e..b6a9a8b 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -15,23 +15,23 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The local action manager instance.
    *
-   * @var \Drupal\Core\Menu\LocalActionManager
+   * @var LocalActionManager
    */
   protected $localActionManager;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Menu\LocalActionManager $local_action_manager
+   * @param LocalActionManager $local_action_manager
    *   The local action manager instance.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LocalActionManager $local_action_manager) {
diff --git a/tests/src/Functional/OnlyOneAdminSettingsTest.php b/tests/src/Functional/OnlyOneAdminSettingsTest.php
index 0dff660..ce53d89 100644
--- a/tests/src/Functional/OnlyOneAdminSettingsTest.php
+++ b/tests/src/Functional/OnlyOneAdminSettingsTest.php
@@ -59,7 +59,7 @@ class OnlyOneAdminSettingsTest extends BrowserTestBase {
       'onlyone_redirect' => 1,
     ];
     // Sending the form.
-    $this->drupalPostForm(NULL, $edit, 'op');
+    $this->submitForm($edit, 'op');
     // Verifiying the save message.
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
@@ -80,7 +80,7 @@ class OnlyOneAdminSettingsTest extends BrowserTestBase {
       'onlyone_redirect' => 0,
     ];
     // Sending the form.
-    $this->drupalPostForm(NULL, $edit, 'op');
+    $this->submitForm($edit, 'op');
 
     // Getting variables.
     $onlyone_new_menu_entry = $config_factory->get('onlyone.settings')->get('onlyone_new_menu_entry');
diff --git a/tests/src/Kernel/OnlyOneConstraintValidatorTest.php b/tests/src/Kernel/OnlyOneConstraintValidatorTest.php
index 4b4f2a6..15a5a91 100644
--- a/tests/src/Kernel/OnlyOneConstraintValidatorTest.php
+++ b/tests/src/Kernel/OnlyOneConstraintValidatorTest.php
@@ -81,7 +81,7 @@ class OnlyOneConstraintValidatorTest extends KernelTestBase {
       // Validating the node.
       $page_violations = $page_node->validate();
       // Asserting.
-      $this->assertEqual($page_violations->count(), $i, 'Constraint validation failed.');
+      $this->assertEquals($page_violations->count(), $i, 'Constraint validation failed.');
       // Only saving for the first node.
       if (!$i) {
         // Saving the page node.
@@ -104,7 +104,7 @@ class OnlyOneConstraintValidatorTest extends KernelTestBase {
       // Validating the node.
       $article_violations = $article_node->validate();
       // Asserting.
-      $this->assertEqual($article_violations->count(), 0, 'Constraint validation failed.');
+      $this->assertEquals($article_violations->count(), 0, 'Constraint validation failed.');
       // Saving the page node.
       $article_node->save();
     }
diff --git a/tests/src/Unit/OnlyOneModuleHandlerTest.php b/tests/src/Unit/OnlyOneModuleHandlerTest.php
index 62417dd..8c7cfc9 100644
--- a/tests/src/Unit/OnlyOneModuleHandlerTest.php
+++ b/tests/src/Unit/OnlyOneModuleHandlerTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\onlyone\Unit;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Render\RendererInterface;
+use Drupal\Core\Extension\ModuleExtensionList;
 use Drupal\Tests\UnitTestCase;
 use Drupal\onlyone\OnlyOneModuleHandler;
 use Drupal\Core\Url;
@@ -17,35 +21,35 @@ class OnlyOneModuleHandlerTest extends UnitTestCase {
   /**
    * A module handler instance.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var ModuleHandlerInterface|MockObject
    */
   protected $moduleHandler;
 
   /**
    * A renderer instance.
    *
-   * @var \Drupal\Core\Render\RendererInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var RendererInterface|MockObject
    */
   protected $renderer;
 
   /**
    * A module extension list instance.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList|\PHPUnit_Framework_MockObject_MockObject
+   * @var ModuleExtensionList|MockObject
    */
   protected $moduleExtensionList;
 
   /**
    * The OnlyOneModuleHandler Object.
    *
-   * @var \Drupal\onlyone\OnlyOneModuleHandler
+   * @var OnlyOneModuleHandler
    */
   protected $onlyOneModuleHandler;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     if (!defined('DRUPAL_MINIMUM_PHP')) {
diff --git a/tests/src/Unit/OnlyOneTest.php b/tests/src/Unit/OnlyOneTest.php
index 8fd84bb..fe4a96f 100644
--- a/tests/src/Unit/OnlyOneTest.php
+++ b/tests/src/Unit/OnlyOneTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\onlyone\Unit;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Tests\UnitTestCase;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\onlyone\OnlyOne;
@@ -23,42 +27,42 @@ class OnlyOneTest extends UnitTestCase {
   /**
    * A entity type manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var EntityTypeManagerInterface|MockObject
    */
   protected $entityTypeManager;
 
   /**
    * A connection instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var EntityTypeManagerInterface|MockObject
    */
   protected $connection;
 
   /**
    * A language manager instance.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var LanguageManagerInterface|MockObject
    */
   protected $languageManager;
 
   /**
    * A config factory instance.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit\Framework\MockObject\MockObject
+   * @var ConfigFactoryInterface|MockObject
    */
   protected $configFactory;
 
   /**
    * The OnlyOne Object.
    *
-   * @var \Drupal\onlyone\OnlyOne
+   * @var OnlyOne
    */
   protected $onlyOne;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Entity type manager mock.
@@ -535,12 +539,12 @@ class OnlyOneTest extends UnitTestCase {
    * @param bool $multilingual
    *   Whether the site is multilingual or not.
    *
-   * @return \Drupal\onlyone\OnlyOne|\PHPUnit\Framework\MockObject\MockObject
+   * @return OnlyOne|MockObject
    *   The mocked class.
    */
   private function getOnlyOneMock(array $configured, $multilingual) {
     // Mock OnlyOne.
-    /** @var \Drupal\onlyone\OnlyOne|\PHPUnit\Framework\MockObject\MockObject $controller */
+    /** @var OnlyOne|MockObject $controller */
     $controller = $this->getMockBuilder('Drupal\onlyone\OnlyOne')
       ->setConstructorArgs([
         $this->entityTypeManager,
@@ -784,7 +788,7 @@ class OnlyOneTest extends UnitTestCase {
   /**
    * Tests the setFormatter() method.
    *
-   * @param \Drupal\onlyone\OnlyOnePrintStrategyInterface $formatter
+   * @param OnlyOnePrintStrategyInterface $formatter
    *   The formatter type.
    *
    * @covers ::setFormatter
