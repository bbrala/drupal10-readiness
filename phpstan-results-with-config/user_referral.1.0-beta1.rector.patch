diff --git a/includes/UserReferralWrapper.php b/includes/UserReferralWrapper.php
index 8bbefc1..520184b 100644
--- a/includes/UserReferralWrapper.php
+++ b/includes/UserReferralWrapper.php
@@ -23,7 +23,9 @@ class UserReferralWrapper  extends RulesIdentifiableDataWrapper {
    * {@inheritDoc}
    */
   protected function load($uid) {
-    $referral = db_query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $uid))
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $referral = \Drupal::database()->query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $uid))
       ->fetchObject();
     if ($referral) {
       $referral->data = unserialize($referral->data);
diff --git a/src/Access/UserReferralAccess.php b/src/Access/UserReferralAccess.php
index d1391b5..12a9cad 100644
--- a/src/Access/UserReferralAccess.php
+++ b/src/Access/UserReferralAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\user_referral\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 
@@ -13,10 +14,10 @@ class UserReferralAccess {
   /**
    * Check whether the user can view referral link list.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public static function checkUserReferrralLinksListAccess(AccountInterface $user) {
diff --git a/src/Controller/UserReferralController.php b/src/Controller/UserReferralController.php
index 98cde75..7a16063 100644
--- a/src/Controller/UserReferralController.php
+++ b/src/Controller/UserReferralController.php
@@ -21,12 +21,12 @@ class UserReferralController extends ControllerBase {
    * In order to never disclose a reset link via a referrer header this
    * controller must always return a redirect response.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    * @param int $uid
    *   User ID of the user requesting reset.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   The redirect response.
    */
   public function referralLinkProcess(Request $request, $uid, $type) {
diff --git a/src/UserReferralPermissions.php b/src/UserReferralPermissions.php
index 9275d67..1e18e7a 100644
--- a/src/UserReferralPermissions.php
+++ b/src/UserReferralPermissions.php
@@ -32,7 +32,7 @@ class UserReferralPermissions {
   /**
    * Returns a list of permissions for a given user referral type.
    *
-   * @param \Drupal\user_referral\Entity\UserReferralType $type
+   * @param UserReferralType $type
    *   The user referral type.
    *
    * @return array
diff --git a/user_referral.rules.inc b/user_referral.rules.inc
index c2844ff..25f5ff5 100644
--- a/user_referral.rules.inc
+++ b/user_referral.rules.inc
@@ -75,7 +75,9 @@ function user_referral_rules_action_info() {
 }
 
 function user_referral_get_referer($account) {
-  $referral = db_query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $account->uid))
+  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+  $referral = \Drupal::database()->query("SELECT * FROM {user_referral} WHERE `uid` = :uid", array(':uid' => $account->uid))
     ->fetchObject();
   if ($referral) {
     $referral->data = unserialize($referral->data);
diff --git a/user_referral.tokens.inc b/user_referral.tokens.inc
index bf2f259..eca2142 100644
--- a/user_referral.tokens.inc
+++ b/user_referral.tokens.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\user_referral\UserReferralTypeInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for user referral related data.
@@ -42,7 +43,7 @@ function user_referral_tokens($type, $tokens, array $data, array $options, Bubbl
   $replacements = [];
 
   if ($type == 'user_referral_type' && !empty($data['user_referral_type'])) {
-    /** @var \Drupal\user_referral\UserReferralTypeInterface; $user_referral_type */
+    /** @var UserReferralTypeInterface ; $user_referral_type */
     $user_referral_type = $data['user_referral_type'];
 
     foreach ($tokens as $name => $original) {
