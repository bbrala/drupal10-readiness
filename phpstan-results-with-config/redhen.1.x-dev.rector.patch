diff --git a/modules/redhen_connection/redhen_connection.module b/modules/redhen_connection/redhen_connection.module
index 1c9a627..477d5d8 100644
--- a/modules/redhen_connection/redhen_connection.module
+++ b/modules/redhen_connection/redhen_connection.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\redhen_connection\ConnectionInterface;
 /**
  * @file
  * Contains redhen_connection.module..
@@ -134,7 +135,7 @@ function redhen_connection_entity_update(EntityInterface $entity) {
       // Get active connections for this entity.
       $connections = \Drupal::service('redhen_connection.connections')->getConnections($entity, NULL, NULL, TRUE);
       foreach ($connections as $connection) {
-        /** @var \Drupal\redhen_connection\ConnectionInterface $connection */
+        /** @var ConnectionInterface $connection */
         $connection->setActive(FALSE);
         $connection->save();
       }
@@ -151,7 +152,7 @@ function redhen_connection_entity_delete(EntityInterface $entity) {
   if (in_array($entity->getEntityTypeId(), ['redhen_contact', 'redhen_org'])) {
     $connections = \Drupal::service('redhen_connection.connections')->getConnections($entity, NULL, NULL, FALSE);
     foreach ($connections as $connection) {
-      /** @var \Drupal\redhen_connection\ConnectionInterface $connection */
+      /** @var ConnectionInterface $connection */
       $connection->delete();
     }
   }
@@ -178,7 +179,7 @@ function redhen_connection_entity_type_alter(array &$entity_types) {
 /**
  * Extracts the entity for the current redhen_connection route.
  *
- * @return null|\Drupal\Core\Entity\EntityInterface
+ * @return null|EntityInterface
  *   Entity type id.
  */
 function redhen_connection_get_connection_entity_from_route() {
diff --git a/modules/redhen_connection/redhen_connection.views.inc b/modules/redhen_connection/redhen_connection.views.inc
index 38ad063..48db37d 100644
--- a/modules/redhen_connection/redhen_connection.views.inc
+++ b/modules/redhen_connection/redhen_connection.views.inc
@@ -1,10 +1,11 @@
 <?php
 
+use Drupal\redhen_connection\ViewsData;
 /**
  * Implements hook_views_data().
  */
 function redhen_connection_views_data() {
-  /** @var \Drupal\redhen_connection\ViewsData $redhen_connection_views_data */
+  /** @var ViewsData $redhen_connection_views_data */
   $redhen_connection_views_data = \Drupal::service('redhen_connection.views_data');
   return $redhen_connection_views_data->getViewsData();
 }
diff --git a/modules/redhen_connection/src/Access/ConnectionAccessCheck.php b/modules/redhen_connection/src/Access/ConnectionAccessCheck.php
index 1d6dd29..7b94608 100644
--- a/modules/redhen_connection/src/Access/ConnectionAccessCheck.php
+++ b/modules/redhen_connection/src/Access/ConnectionAccessCheck.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\redhen_connection\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -30,12 +32,12 @@ class ConnectionAccessCheck implements AccessInterface {
    *   _redhen_connection_access: 'update'
    * @endcode
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The parameterized route.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(RouteMatchInterface $route_match, AccountInterface $account) {
@@ -53,10 +55,10 @@ class ConnectionAccessCheck implements AccessInterface {
   /**
    * Get the RedHen entity object from the given route.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The parameterized route.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity object or NULL if there is no RedHen parameter in the route.
    */
   protected function getEntity(RouteMatchInterface $route_match) {
diff --git a/modules/redhen_connection/src/Annotation/ConnectionPermission.php b/modules/redhen_connection/src/Annotation/ConnectionPermission.php
index fd9861e..4a8c0fc 100644
--- a/modules/redhen_connection/src/Annotation/ConnectionPermission.php
+++ b/modules/redhen_connection/src/Annotation/ConnectionPermission.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class ConnectionPermission extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -34,7 +35,7 @@ class ConnectionPermission extends Plugin {
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/modules/redhen_connection/src/ConnectionAccessControlHandler.php b/modules/redhen_connection/src/ConnectionAccessControlHandler.php
index 6a79ad3..1d540a1 100644
--- a/modules/redhen_connection/src/ConnectionAccessControlHandler.php
+++ b/modules/redhen_connection/src/ConnectionAccessControlHandler.php
@@ -23,8 +23,7 @@ class ConnectionAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\redhen_connection\ConnectionInterface $entity */
-
+    /** @var ConnectionInterface $entity */
     // Get Connection bundle.
     $entity_bundle = $entity->getType();
 
diff --git a/modules/redhen_connection/src/ConnectionHtmlRouteProvider.php b/modules/redhen_connection/src/ConnectionHtmlRouteProvider.php
index 8e1f03f..e28deda 100644
--- a/modules/redhen_connection/src/ConnectionHtmlRouteProvider.php
+++ b/modules/redhen_connection/src/ConnectionHtmlRouteProvider.php
@@ -48,10 +48,10 @@ class ConnectionHtmlRouteProvider extends DefaultHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -73,10 +73,10 @@ class ConnectionHtmlRouteProvider extends DefaultHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
@@ -109,7 +109,7 @@ class ConnectionHtmlRouteProvider extends DefaultHtmlRouteProvider {
   /**
    * Gets all entity type add connection routes.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $connection_entity_type
+   * @param EntityTypeInterface $connection_entity_type
    *   The entity type.
    *
    * @return array
@@ -164,10 +164,10 @@ class ConnectionHtmlRouteProvider extends DefaultHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
@@ -200,7 +200,7 @@ class ConnectionHtmlRouteProvider extends DefaultHtmlRouteProvider {
    * @param string $connection_entity_type_id
    *   Connection entity type machine name.
    *
-   * @return \Symfony\Component\Routing\Route
+   * @return Route
    *   Drupal route object.
    */
   protected function generateRoute($canonical, $path, array $parameters, $controller, $title_callback, $connection_entity_type_id) {
diff --git a/modules/redhen_connection/src/ConnectionPermissions.php b/modules/redhen_connection/src/ConnectionPermissions.php
index 4b9a2a5..757cb6f 100644
--- a/modules/redhen_connection/src/ConnectionPermissions.php
+++ b/modules/redhen_connection/src/ConnectionPermissions.php
@@ -29,7 +29,7 @@ class ConnectionPermissions {
   /**
    * Builds a standard list of permissions for a given Connection type.
    *
-   * @param \Drupal\redhen_connection\Entity\ConnectionType $connection_type
+   * @param ConnectionType $connection_type
    *   The machine name of the Connection type.
    *
    * @return array
diff --git a/modules/redhen_connection/src/ConnectionRoleHtmlRouteProvider.php b/modules/redhen_connection/src/ConnectionRoleHtmlRouteProvider.php
index 0a7bb31..657d0bc 100644
--- a/modules/redhen_connection/src/ConnectionRoleHtmlRouteProvider.php
+++ b/modules/redhen_connection/src/ConnectionRoleHtmlRouteProvider.php
@@ -35,10 +35,10 @@ class ConnectionRoleHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -65,10 +65,10 @@ class ConnectionRoleHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
@@ -99,10 +99,10 @@ class ConnectionRoleHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the edit-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getEditFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/redhen_connection/src/ConnectionService.php b/modules/redhen_connection/src/ConnectionService.php
index e10d132..b8a6f18 100644
--- a/modules/redhen_connection/src/ConnectionService.php
+++ b/modules/redhen_connection/src/ConnectionService.php
@@ -19,7 +19,7 @@ class ConnectionService implements ConnectionServiceInterface {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -33,7 +33,7 @@ class ConnectionService implements ConnectionServiceInterface {
   /**
    * Constructs a EntityCreateAccessCheck object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
    * @param \Drupal\Core\Database\Connection $connection
    *   The database connection.
@@ -226,9 +226,9 @@ class ConnectionService implements ConnectionServiceInterface {
   /**
    * Query for connections.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity we're querying against.
-   * @param \Drupal\Core\Entity\EntityInterface $entity2
+   * @param EntityInterface $entity2
    *   The second entity we're querying against.
    * @param string $connection_type
    *   Limit query to this connection type.
diff --git a/modules/redhen_connection/src/ConnectionServiceInterface.php b/modules/redhen_connection/src/ConnectionServiceInterface.php
index 48888d3..7a6b1cb 100644
--- a/modules/redhen_connection/src/ConnectionServiceInterface.php
+++ b/modules/redhen_connection/src/ConnectionServiceInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Entity\EntityInterface;
 
 /**
@@ -23,9 +24,9 @@ interface ConnectionServiceInterface {
   /**
    * Returns connection types that can be connected to 1 or 2 entities.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity 1.
-   * @param \Drupal\Core\Entity\EntityInterface $entity2
+   * @param EntityInterface $entity2
    *   Entity 2.
    *
    * @return array
@@ -36,9 +37,9 @@ interface ConnectionServiceInterface {
   /**
    * Returns the connections to this entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity we're querying against.
-   * @param \Drupal\Core\Entity\EntityInterface $entity2
+   * @param EntityInterface $entity2
    *   The second entity we're querying against.
    * @param string $connection_type
    *   (optional) Limit returned connections to this type.
@@ -53,9 +54,9 @@ interface ConnectionServiceInterface {
   /**
    * Returns the number of connections to this entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity we're querying against.
-   * @param \Drupal\Core\Entity\EntityInterface $entity2
+   * @param EntityInterface $entity2
    *   The entity we're querying against.
    * @param string $connection_type
    *   (optional) Limit returned connections to this type.
@@ -68,7 +69,7 @@ interface ConnectionServiceInterface {
   /**
    * Returns the other entities that are connected to this entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity we're querying against.
    * @param string $connection_type
    *   (optional) Limit returned entities to ones connected via this type.
@@ -81,16 +82,16 @@ interface ConnectionServiceInterface {
   /**
    * Check entity access via its connections & current user's connection roles.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $endpoint1
+   * @param EntityInterface $endpoint1
    *   Endpoint 1 of the connection.
-   * @param \Drupal\Core\Entity\EntityInterface $endpoint2
+   * @param EntityInterface $endpoint2
    *   Endpoint 2 of the connection.
    * @param string $operation
    *   The entity operation (view, view label, update, delete, create)
    * @param string $permission_key
    *   Key for checking permissions against.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   Access result, either neutral or allowed.
    */
   public function checkConnectionPermission(EntityInterface $endpoint1, EntityInterface $endpoint2, $operation, $permission_key);
diff --git a/modules/redhen_connection/src/ConnectionTypeHtmlRouteProvider.php b/modules/redhen_connection/src/ConnectionTypeHtmlRouteProvider.php
index 719925d..ee3f619 100644
--- a/modules/redhen_connection/src/ConnectionTypeHtmlRouteProvider.php
+++ b/modules/redhen_connection/src/ConnectionTypeHtmlRouteProvider.php
@@ -36,10 +36,10 @@ class ConnectionTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -63,10 +63,10 @@ class ConnectionTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/redhen_connection/src/Controller/ConnectionAddController.php b/modules/redhen_connection/src/Controller/ConnectionAddController.php
index ca75bc2..3170fb2 100644
--- a/modules/redhen_connection/src/Controller/ConnectionAddController.php
+++ b/modules/redhen_connection/src/Controller/ConnectionAddController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection\Controller;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -29,7 +30,7 @@ class ConnectionAddController extends ControllerBase {
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = $container->get('entity_type.manager');
     return new static(
       $entity_type_manager->getStorage('redhen_connection'),
@@ -40,7 +41,7 @@ class ConnectionAddController extends ControllerBase {
   /**
    * Displays add links for available bundles/types for redhen_connection.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -95,11 +96,11 @@ class ConnectionAddController extends ControllerBase {
   /**
    * Creation form for redhen_connection entities of given bundle/type.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
-   * @param \Drupal\Core\Entity\EntityInterface $redhen_connection_type
+   * @param EntityInterface $redhen_connection_type
    *   The custom bundle to add.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity for one of the endpoints.
    *
    * @return array
@@ -131,9 +132,9 @@ class ConnectionAddController extends ControllerBase {
   /**
    * Provides the page title for this controller.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $redhen_connection_type
+   * @param EntityInterface $redhen_connection_type
    *   The custom bundle/type being added.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The provided endpoint.
    *
    * @return string
diff --git a/modules/redhen_connection/src/Controller/RedhenConnections.php b/modules/redhen_connection/src/Controller/RedhenConnections.php
index 25969e7..6f2ad87 100644
--- a/modules/redhen_connection/src/Controller/RedhenConnections.php
+++ b/modules/redhen_connection/src/Controller/RedhenConnections.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\redhen_connection\Controller;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -31,7 +33,7 @@ class RedhenConnections extends ControllerBase {
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = $container->get('entity_type.manager');
     return new static(
       $entity_type_manager->getStorage('redhen_connection'),
@@ -42,7 +44,7 @@ class RedhenConnections extends ControllerBase {
   /**
    * Displays add links for available bundles/types for redhen_connection.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -98,10 +100,10 @@ class RedhenConnections extends ControllerBase {
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $account) {
diff --git a/modules/redhen_connection/src/Entity/Connection.php b/modules/redhen_connection/src/Entity/Connection.php
index 8fc39e3..c593a82 100644
--- a/modules/redhen_connection/src/Entity/Connection.php
+++ b/modules/redhen_connection/src/Entity/Connection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection\Entity;
 
+use Drupal\redhen_connection\ConnectionTypeInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityChangedTrait;
@@ -187,12 +188,12 @@ class Connection extends ContentEntityBase implements ConnectionInterface {
    * {@inheritdoc}
    */
   public static function bundleFieldDefinitions(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
-    /** @var \Drupal\redhen_connection\ConnectionTypeInterface $connection_type */
+    /** @var ConnectionTypeInterface $connection_type */
     $connection_type = ConnectionType::load($bundle);
     $fields = [];
     // Set bundle specific settings for each of our endpoint fields.
     for ($x = 1; $x <= REDHEN_CONNECTION_ENDPOINTS; $x++) {
-      /** @var \Drupal\Core\Field\BaseFieldDefinition $fields[$field] */
+      /** @var BaseFieldDefinition $fields [$field] */
       $endpoint_type = $connection_type->getEndpointEntityTypeId($x);
       $field = 'endpoint_' . $x;
       $fields[$field] = clone $base_field_definitions[$field];
diff --git a/modules/redhen_connection/src/Form/ConnectionRoleForm.php b/modules/redhen_connection/src/Form/ConnectionRoleForm.php
index 937b116..0f4524c 100644
--- a/modules/redhen_connection/src/Form/ConnectionRoleForm.php
+++ b/modules/redhen_connection/src/Form/ConnectionRoleForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection\Form;
 
+use Drupal\redhen_connection\ConnectionTypeInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -38,7 +39,7 @@ class ConnectionRoleForm extends EntityForm {
     ];
 
     // Permissions.
-    /** @var \Drupal\redhen_connection\ConnectionTypeInterface $connection_type */
+    /** @var ConnectionTypeInterface $connection_type */
     $connection_type = $this->getEntityFromRouteMatch($this->getRouteMatch(), 'redhen_connection_type');
 
     // @todo Change getEndpointEntityTypeId to Ids and take no argument to get all endpoints.
diff --git a/modules/redhen_connection/src/Form/ConnectionSettingsForm.php b/modules/redhen_connection/src/Form/ConnectionSettingsForm.php
index 8fc464e..1642fe4 100644
--- a/modules/redhen_connection/src/Form/ConnectionSettingsForm.php
+++ b/modules/redhen_connection/src/Form/ConnectionSettingsForm.php
@@ -36,7 +36,7 @@ class ConnectionSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -53,7 +53,7 @@ class ConnectionSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/redhen_connection/src/Form/ConnectionTypeForm.php b/modules/redhen_connection/src/Form/ConnectionTypeForm.php
index 4384c24..7006646 100644
--- a/modules/redhen_connection/src/Form/ConnectionTypeForm.php
+++ b/modules/redhen_connection/src/Form/ConnectionTypeForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\redhen_connection\Form;
 
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
+use Drupal\redhen_connection\Entity\ConnectionType;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,7 +16,7 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class ConnectionTypeForm extends EntityForm {
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
@@ -40,7 +42,7 @@ class ConnectionTypeForm extends EntityForm {
     }, $entity_types);
 
     $form['#tree'] = TRUE;
-    /** @var \Drupal\redhen_connection\Entity\ConnectionType $redhen_connection_type */
+    /** @var ConnectionType $redhen_connection_type */
     $redhen_connection_type = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
@@ -178,7 +180,7 @@ class ConnectionTypeForm extends EntityForm {
    * Ajax callback to update the bundle options.
    *
    * @param $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @return mixed
    */
   public function updateBundleOptions($form, FormStateInterface $form_state) {
diff --git a/modules/redhen_connection/src/Plugin/Action/ActivateConnection.php b/modules/redhen_connection/src/Plugin/Action/ActivateConnection.php
index 3dad204..de1e177 100644
--- a/modules/redhen_connection/src/Plugin/Action/ActivateConnection.php
+++ b/modules/redhen_connection/src/Plugin/Action/ActivateConnection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection\Plugin\Action;
 
+use Drupal\redhen_connection\ConnectionInterface;
 use Drupal\Core\Action\ActionBase;
 use Drupal\Core\Session\AccountInterface;
 
@@ -31,7 +32,7 @@ class ActivateConnection extends ActionBase {
    * {@inheritdoc}
    */
   public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE) {
-    /** @var \Drupal\redhen_connection\ConnectionInterface $object */
+    /** @var ConnectionInterface $object */
     $access = $object->status->access('edit', $account, TRUE);
     return $return_as_object ? $access : $access->isAllowed();
   }
diff --git a/modules/redhen_connection/src/Plugin/Action/DeactivateConnection.php b/modules/redhen_connection/src/Plugin/Action/DeactivateConnection.php
index adab8c7..37a6951 100644
--- a/modules/redhen_connection/src/Plugin/Action/DeactivateConnection.php
+++ b/modules/redhen_connection/src/Plugin/Action/DeactivateConnection.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection\Plugin\Action;
 
+use Drupal\redhen_connection\ConnectionInterface;
 use Drupal\Core\Action\ActionBase;
 use Drupal\Core\Session\AccountInterface;
 
@@ -34,7 +35,7 @@ class DeactivateConnection extends ActionBase {
    * {@inheritdoc}
    */
   public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE) {
-    /** @var \Drupal\redhen_connection\ConnectionInterface $object */
+    /** @var ConnectionInterface $object */
     $access = $object->status->access('edit', $account, TRUE);
     return $return_as_object ? $access : $access->isAllowed();
   }
diff --git a/modules/redhen_connection/src/Plugin/ConnectionPermission/ConnectionConnectionPermission.php b/modules/redhen_connection/src/Plugin/ConnectionPermission/ConnectionConnectionPermission.php
index f8af3a3..c7aeaa8 100644
--- a/modules/redhen_connection/src/Plugin/ConnectionPermission/ConnectionConnectionPermission.php
+++ b/modules/redhen_connection/src/Plugin/ConnectionPermission/ConnectionConnectionPermission.php
@@ -26,7 +26,7 @@ class ConnectionConnectionPermission extends ConnectionPermissionBase implements
   /**
    * A Redhen Contact Object.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   private $contact;
 
diff --git a/modules/redhen_connection/src/Plugin/ConnectionPermissionBase.php b/modules/redhen_connection/src/Plugin/ConnectionPermissionBase.php
index 5bdcb0b..15ebce1 100644
--- a/modules/redhen_connection/src/Plugin/ConnectionPermissionBase.php
+++ b/modules/redhen_connection/src/Plugin/ConnectionPermissionBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection\Plugin;
 
+use Drupal\redhen_connection\ConnectionService;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\redhen_contact\Entity\Contact;
@@ -15,7 +16,7 @@ class ConnectionPermissionBase extends PluginBase implements ConnectionPermissio
   /**
    * Connection Service.
    *
-   * @var \Drupal\redhen_connection\ConnectionService
+   * @var ConnectionService
    */
   public $redhenConnectionConnections;
 
diff --git a/modules/redhen_connection/src/Plugin/ConnectionPermissionInterface.php b/modules/redhen_connection/src/Plugin/ConnectionPermissionInterface.php
index 66a3a44..7b1fabe 100644
--- a/modules/redhen_connection/src/Plugin/ConnectionPermissionInterface.php
+++ b/modules/redhen_connection/src/Plugin/ConnectionPermissionInterface.php
@@ -22,7 +22,7 @@ interface ConnectionPermissionInterface extends PluginInspectionInterface {
   /**
    * Get the influencer entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $subject_entity
+   * @param EntityInterface $subject_entity
    *   The subject entity.
    *
    * @return array
@@ -33,11 +33,11 @@ interface ConnectionPermissionInterface extends PluginInspectionInterface {
   /**
    * Determine if the contact execute the operation on the subject entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $subject_entity
+   * @param EntityInterface $subject_entity
    *   The entity that is being accessed.
    * @param string $operation
    *   The operation that is being performed (view, update, delete, view label).
-   * @param \Drupal\redhen_contact\Entity\Contact $contact
+   * @param Contact $contact
    *   The Redhen contact object.
    *
    * @return bool
diff --git a/modules/redhen_connection/src/Plugin/ConnectionPermissionManager.php b/modules/redhen_connection/src/Plugin/ConnectionPermissionManager.php
index e025127..222b557 100644
--- a/modules/redhen_connection/src/Plugin/ConnectionPermissionManager.php
+++ b/modules/redhen_connection/src/Plugin/ConnectionPermissionManager.php
@@ -17,9 +17,9 @@ class ConnectionPermissionManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/modules/redhen_connection/src/Plugin/Derivative/RedhenConnectionLocalTask.php b/modules/redhen_connection/src/Plugin/Derivative/RedhenConnectionLocalTask.php
index 119159d..59fc9cf 100644
--- a/modules/redhen_connection/src/Plugin/Derivative/RedhenConnectionLocalTask.php
+++ b/modules/redhen_connection/src/Plugin/Derivative/RedhenConnectionLocalTask.php
@@ -30,7 +30,7 @@ class RedhenConnectionLocalTask extends DeriverBase implements ContainerDeriverI
    *
    * @param ConnectionService $service
    *   The service manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
    */
   public function __construct(ConnectionService $service, TranslationInterface $string_translation) {
diff --git a/modules/redhen_connection/src/Plugin/views/access/ConnectionAccess.php b/modules/redhen_connection/src/Plugin/views/access/ConnectionAccess.php
index 96caf3d..d9a3209 100644
--- a/modules/redhen_connection/src/Plugin/views/access/ConnectionAccess.php
+++ b/modules/redhen_connection/src/Plugin/views/access/ConnectionAccess.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\redhen_connection\Plugin\views\access;
 
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\redhen_connection\Access\ConnectionAccessCheck;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\views\Plugin\views\access\AccessPluginBase;
@@ -29,14 +31,14 @@ class ConnectionAccess extends AccessPluginBase {
   /**
    * The currently active route match object.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * The RedHen connection access checker.
    *
-   * @var \Drupal\redhen_connection\Access\ConnectionAccessCheck
+   * @var ConnectionAccessCheck
    */
   protected $connectionAccessCheck;
 
diff --git a/modules/redhen_connection/src/Plugin/views/relationship/ConnectionRelationship.php b/modules/redhen_connection/src/Plugin/views/relationship/ConnectionRelationship.php
index 725e3c6..638d017 100644
--- a/modules/redhen_connection/src/Plugin/views/relationship/ConnectionRelationship.php
+++ b/modules/redhen_connection/src/Plugin/views/relationship/ConnectionRelationship.php
@@ -18,14 +18,14 @@ class ConnectionRelationship extends RelationshipPluginBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface|null
+   * @var EntityTypeManagerInterface|null
    */
   protected $entityTypeManager;
 
   /**
    * Retrieves the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity type manager.
    */
   public function getEntityTypeManager() {
@@ -35,7 +35,7 @@ class ConnectionRelationship extends RelationshipPluginBase {
   /**
    * Sets the entity type manager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The new entity type manager.
    *
    * @return $this
diff --git a/modules/redhen_connection/src/Routing/RouteSubscriber.php b/modules/redhen_connection/src/Routing/RouteSubscriber.php
index 030f529..7934edf 100644
--- a/modules/redhen_connection/src/Routing/RouteSubscriber.php
+++ b/modules/redhen_connection/src/Routing/RouteSubscriber.php
@@ -16,14 +16,14 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new RouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager) {
diff --git a/modules/redhen_connection/src/ViewsData.php b/modules/redhen_connection/src/ViewsData.php
index a79f47a..66935b6 100644
--- a/modules/redhen_connection/src/ViewsData.php
+++ b/modules/redhen_connection/src/ViewsData.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\redhen_connection;
 
+use Drupal\views\EntityViewsDataInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -16,23 +17,23 @@ class ViewsData {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The connection service.
    *
-   * @var \Drupal\redhen_connection\ConnectionServiceInterface
+   * @var ConnectionServiceInterface
    */
   protected $connections;
 
   /**
    * Creates a new ViewsData instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\redhen_connection\ConnectionServiceInterface $connections
+   * @param ConnectionServiceInterface $connections
    *   The connection service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ConnectionServiceInterface $connections) {
@@ -61,7 +62,7 @@ class ViewsData {
     foreach ($this->connections->getConnectionEntityTypes($this->entityTypeManager->getDefinitions()) as $connection_type_id => $endpoints) {
       foreach ($endpoints as $endpoint_id => $entity_types) {
         foreach ($entity_types as $entity_type_id => $entity_type) {
-          /** @var \Drupal\views\EntityViewsDataInterface $views_data */
+          /** @var EntityViewsDataInterface $views_data */
           // We need the views_data handler in order to get the table name later.
           if ($this->entityTypeManager->hasHandler($entity_type_id, 'views_data') && $views_data = $this->entityTypeManager->getHandler($entity_type_id, 'views_data')) {
             $string_helpers = [
@@ -118,7 +119,7 @@ class ViewsData {
   /**
    * Gets the table of an entity type to be used as endpoint table in views.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
    * @return string
diff --git a/modules/redhen_contact/redhen_contact.api.php b/modules/redhen_contact/redhen_contact.api.php
index d03403b..dc120a5 100644
--- a/modules/redhen_contact/redhen_contact.api.php
+++ b/modules/redhen_contact/redhen_contact.api.php
@@ -1,26 +1,25 @@
 <?php
 
+use Drupal\redhen_contact\ContactInterface;
 /**
  * @file
  * Describes API functions for the RedHen Contact module.
  */
-
 /**
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter the display name for a contact.
  *
  * @param string $name
  *   The generated name.
- * @param Drupal\redhen_contact\ContactInterface $contact
+ * @param ContactInterface $contact
  *   The contact whose name is being generated.
  *
  * @return string
  */
-function hook_redhen_contact_name_alter(&$name, Drupal\redhen_contact\ContactInterface $contact) {
+function hook_redhen_contact_name_alter(&$name, ContactInterface $contact) {
   return $contact->get('last_name')->value . ', ' . $contact->get('first_name')->value;
 }
 
diff --git a/modules/redhen_contact/redhen_contact.module b/modules/redhen_contact/redhen_contact.module
index 05b5396..6523302 100644
--- a/modules/redhen_contact/redhen_contact.module
+++ b/modules/redhen_contact/redhen_contact.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\field\Entity\FieldConfig;
 /**
  * @file
  * Contains redhen_contact.module..
@@ -300,9 +302,9 @@ function redhen_contact_form_user_form_alter(&$form, FormStateInterface $form_st
  *
  * @param array $form
  *   Form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Form state array.
- * @param \Drupal\redhen_contact\Entity\Contact $contact
+ * @param Contact $contact
  *   The Contact to build the form on.
  */
 function _redhen_contact_user_embed_contact_form(&$form, &$form_state, Contact $contact, $form_mode = 'default') {
@@ -432,7 +434,7 @@ function redhen_contact_user_registration_submit($form, &$form_state) {
  * User edit form RedHen Contact validation handler.
  *
  * @param array $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function redhen_contact_user_update_validate($form, &$form_state) {
 
@@ -467,8 +469,8 @@ function redhen_contact_user_update_submit($form, &$form_state) {
  * Helper function for validating Contact Form values submitted via User forms.
  *
  * @param array $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
- * @param \Drupal\redhen_contact\Entity\Contact $contact
+ * @param FormStateInterface $form_state
+ * @param Contact $contact
  */
 function _redhen_contact_user_submission_validate($form, &$form_state, Contact $contact) {
 
@@ -515,7 +517,7 @@ function _redhen_contact_user_submission_validate($form, &$form_state, Contact $
  *   Form state array.
  * @param EntityFormDisplay $form_display
  *   EntityFormDisplay to extract field values from.
- * @param \Drupal\redhen_contact\Entity\Contact $contact
+ * @param Contact $contact
  *   RedhenContact to update.
  * @param bool $limit_values
  *   Whether to limit updated values to non-null fields.
@@ -568,12 +570,12 @@ function _redhen_contact_user_submission_apply($form, $form_state, $form_display
  *
  * @param array $form
  *   The RedHen contact form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The RedHen contact form state.
  * @param string $contact_type
  *   The RedHen Contact Type.
  *
- * @return \Drupal\Core\Form\FormStateInterface
+ * @return FormStateInterface
  *   The modified form_state.
  */
 function redhen_contact_user_registration_form_state(array $form, FormStateInterface $form_state, $contact_type) {
@@ -624,14 +626,14 @@ function redhen_contact_user_registration_form_state(array $form, FormStateInter
  *   TRUE if the field contains a value, FALSE otherwise.
  */
 function redhen_contact_form_field_has_value($definition, $value) {
-  if ($definition instanceof \Drupal\Core\Field\BaseFieldDefinition) {
+  if ($definition instanceof BaseFieldDefinition) {
     // Base fields can have their values compared against the field's
     // default value. If the value matches the default, the field is empty.
     if ($value === $definition->getDefaultValueLiteral()) {
       return FALSE;
     }
   }
-  else if ($definition instanceof \Drupal\field\Entity\FieldConfig) {
+  else if ($definition instanceof FieldConfig) {
     // Some entity fields require special logic to determine if they are empty.
     // Start with the field type.
     $field_type = $definition->getType();
diff --git a/modules/redhen_contact/src/Commands/RedhenContactCommands.php b/modules/redhen_contact/src/Commands/RedhenContactCommands.php
index 4e8c536..215c088 100644
--- a/modules/redhen_contact/src/Commands/RedhenContactCommands.php
+++ b/modules/redhen_contact/src/Commands/RedhenContactCommands.php
@@ -17,41 +17,41 @@ class RedhenContactCommands extends DrushCommands {
   /**
    * The configuration object factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface
+   * @var EntityDefinitionUpdateManagerInterface
    */
   protected $entityDefinitionUpdateManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Constructs a new PathautoCommands object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration object factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface $entityDefinitionUpdateManager
+   * @param EntityDefinitionUpdateManagerInterface $entityDefinitionUpdateManager
    *   Entity definition update manager.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
    */
   public function __construct(ConfigFactoryInterface $configFactory, EntityTypeManagerInterface $entityTypeManager, EntityDefinitionUpdateManagerInterface $entityDefinitionUpdateManager, Connection $database) {
diff --git a/modules/redhen_contact/src/ContactAccessControlHandler.php b/modules/redhen_contact/src/ContactAccessControlHandler.php
index 2ad25ac..572c0a0 100644
--- a/modules/redhen_contact/src/ContactAccessControlHandler.php
+++ b/modules/redhen_contact/src/ContactAccessControlHandler.php
@@ -23,8 +23,7 @@ class ContactAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\redhen_contact\ContactInterface $entity */
-
+    /** @var ContactInterface $entity */
     // Get Contact bundle.
     $entity_bundle = $entity->getType();
 
diff --git a/modules/redhen_contact/src/ContactHtmlRouteProvider.php b/modules/redhen_contact/src/ContactHtmlRouteProvider.php
index 23d19fc..91df1ec 100644
--- a/modules/redhen_contact/src/ContactHtmlRouteProvider.php
+++ b/modules/redhen_contact/src/ContactHtmlRouteProvider.php
@@ -42,10 +42,10 @@ class ContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -67,10 +67,10 @@ class ContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
@@ -102,10 +102,10 @@ class ContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add page route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddPageRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class ContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/redhen_contact/src/ContactPermissions.php b/modules/redhen_contact/src/ContactPermissions.php
index a929263..dd75cb4 100644
--- a/modules/redhen_contact/src/ContactPermissions.php
+++ b/modules/redhen_contact/src/ContactPermissions.php
@@ -28,7 +28,7 @@ class ContactPermissions {
   /**
    * Builds a standard list of permissions for a given contact type.
    *
-   * @param \Drupal\redhen_contact\Entity\ContactType $contact_type
+   * @param ContactType $contact_type
    *   The machine name of the contact type.
    *
    * @return array
diff --git a/modules/redhen_contact/src/ContactTypeHtmlRouteProvider.php b/modules/redhen_contact/src/ContactTypeHtmlRouteProvider.php
index 4694548..9161084 100644
--- a/modules/redhen_contact/src/ContactTypeHtmlRouteProvider.php
+++ b/modules/redhen_contact/src/ContactTypeHtmlRouteProvider.php
@@ -35,10 +35,10 @@ class ContactTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -62,10 +62,10 @@ class ContactTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/redhen_contact/src/ContextProvider/RedhenContactRouteContext.php b/modules/redhen_contact/src/ContextProvider/RedhenContactRouteContext.php
index 96b4f29..cc8e1e4 100644
--- a/modules/redhen_contact/src/ContextProvider/RedhenContactRouteContext.php
+++ b/modules/redhen_contact/src/ContextProvider/RedhenContactRouteContext.php
@@ -22,14 +22,14 @@ class RedhenContactRouteContext implements ContextProviderInterface {
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Constructs a new RedhenContactRouteContext object.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    */
   public function __construct(RouteMatchInterface $route_match) {
diff --git a/modules/redhen_contact/src/Controller/ContactAddController.php b/modules/redhen_contact/src/Controller/ContactAddController.php
index 867310a..17fe770 100644
--- a/modules/redhen_contact/src/Controller/ContactAddController.php
+++ b/modules/redhen_contact/src/Controller/ContactAddController.php
@@ -38,7 +38,7 @@ class ContactAddController extends ControllerBase {
   /**
    * Displays add links for available bundles/types for entity redhen_contact .
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -65,9 +65,9 @@ class ContactAddController extends ControllerBase {
   /**
    * Presents the creation form for redhen_contact entities of given bundle/type.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $redhen_contact_type
+   * @param EntityInterface $redhen_contact_type
    *   The custom bundle to add.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -83,7 +83,7 @@ class ContactAddController extends ControllerBase {
   /**
    * Provides the page title for this controller.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $redhen_contact_type
+   * @param EntityInterface $redhen_contact_type
    *   The custom bundle/type being added.
    *
    * @return string
diff --git a/modules/redhen_contact/src/Controller/ContactAutocompleteController.php b/modules/redhen_contact/src/Controller/ContactAutocompleteController.php
index e9b0274..fc86ea2 100644
--- a/modules/redhen_contact/src/Controller/ContactAutocompleteController.php
+++ b/modules/redhen_contact/src/Controller/ContactAutocompleteController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\redhen_contact\Controller;
 
+use Drupal\Core\Database\Connection;
+use Drupal\redhen_contact\Entity\Contact;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\Element\EntityAutocomplete;
@@ -17,7 +19,7 @@ class ContactAutocompleteController extends ControllerBase {
   /**
    * The current primary database.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -33,10 +35,10 @@ class ContactAutocompleteController extends ControllerBase {
   /**
    * Handler for autocomplete request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response.
    */
   public function autocomplete(Request $request) {
@@ -77,7 +79,7 @@ class ContactAutocompleteController extends ControllerBase {
       $contact_ids = $query->fetchCol();
 
       $contacts = $this->entityTypeManager()->getStorage('redhen_contact')->loadMultiple($contact_ids);
-      /** @var \Drupal\redhen_contact\Entity\Contact $contact */
+      /** @var Contact $contact */
       foreach ($contacts as $contact) {
         $results[] = [
           'value' => EntityAutocomplete::getEntityLabels([$contact]),
diff --git a/modules/redhen_contact/src/Form/ContactSettingsForm.php b/modules/redhen_contact/src/Form/ContactSettingsForm.php
index 8b51911..db60372 100644
--- a/modules/redhen_contact/src/Form/ContactSettingsForm.php
+++ b/modules/redhen_contact/src/Form/ContactSettingsForm.php
@@ -36,7 +36,7 @@ class ContactSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -75,7 +75,7 @@ class ContactSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/redhen_contact/src/Plugin/Block/RedhenContactFormBlock.php b/modules/redhen_contact/src/Plugin/Block/RedhenContactFormBlock.php
index f400e4a..72b2b5f 100644
--- a/modules/redhen_contact/src/Plugin/Block/RedhenContactFormBlock.php
+++ b/modules/redhen_contact/src/Plugin/Block/RedhenContactFormBlock.php
@@ -33,7 +33,7 @@ class RedhenContactFormBlock extends BlockBase {
    * Form to determine which Redhen Contact fields will appear on the form.
    *
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @return array
    */
   public function buildConfigurationForm(array $form, FormStateInterface $form_state) {
diff --git a/modules/redhen_dedupe/src/Form/RedhenDedupeMergeForm.php b/modules/redhen_dedupe/src/Form/RedhenDedupeMergeForm.php
index 9edc616..8b85496 100644
--- a/modules/redhen_dedupe/src/Form/RedhenDedupeMergeForm.php
+++ b/modules/redhen_dedupe/src/Form/RedhenDedupeMergeForm.php
@@ -79,7 +79,7 @@ class RedhenDedupeMergeForm extends FormBase {
       '#type' => 'fieldset',
       '#title' => $this->t('Master contact details'),
       'preview' => [
-        '#markup' => render($preview),
+        '#markup' => \Drupal::service('renderer')->render($preview),
       ],
     ];
 
@@ -337,7 +337,7 @@ class RedhenDedupeMergeForm extends FormBase {
   /**
    * Merge values from contacts into master contact and handle related entities.
    *
-   * @param \Drupal\redhen_contact\Entity\Contact $master
+   * @param Contact $master
    *   The master RedHen Contact.
    * @param array $values
    *   Values to update the master contact with.
diff --git a/modules/redhen_org/redhen_org.api.php b/modules/redhen_org/redhen_org.api.php
index 8e4abc5..132da31 100644
--- a/modules/redhen_org/redhen_org.api.php
+++ b/modules/redhen_org/redhen_org.api.php
@@ -1,26 +1,25 @@
 <?php
 
+use Drupal\redhen_org\OrgInterface;
 /**
  * @file
  * Describes API functions for the RedHen Org module.
  */
-
 /**
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter the display name for a org.
  *
  * @param string $name
  *   The generated name.
- * @param Drupal\redhen_org\OrgInterface $org
+ * @param OrgInterface $org
  *   The org whose name is being generated.
  *
  * @return string
  */
-function hook_redhen_org_name_alter(&$name, Drupal\redhen_org\OrgInterface $org) {
+function hook_redhen_org_name_alter(&$name, OrgInterface $org) {
   // Use ALL CAPS when displaying Redhen Org name.
   return strtoupper($org->get('name')->value);
 }
diff --git a/modules/redhen_org/redhen_org.install b/modules/redhen_org/redhen_org.install
index c344b42..32aac63 100644
--- a/modules/redhen_org/redhen_org.install
+++ b/modules/redhen_org/redhen_org.install
@@ -1,10 +1,10 @@
 <?php
 
+use Drupal\Core\Database\Connection;
 /**
  * @file
  * Install & update hooks for the Redhen Org module.
  */
-
 /**
  * Change the redhen org name to 255 characters.
  */
@@ -14,7 +14,7 @@ function redhen_org_update_8101() {
   $column = 'name';
   $max_length = 255;
   // Alter value field length in fields table:
-  /** @var \Drupal\Core\Database\Connection $database_replica */
+  /** @var Connection $database_replica */
   $database_replica = \Drupal::service('database.replica');
   $database_replica->query("ALTER TABLE `{$table}` CHANGE `{$column}` `{$column}` VARCHAR( {$max_length} )");
   // Alter value field length in fields revision table:
diff --git a/modules/redhen_org/src/ContextProvider/RedhenOrgRouteContext.php b/modules/redhen_org/src/ContextProvider/RedhenOrgRouteContext.php
index 53c2672..28d600a 100644
--- a/modules/redhen_org/src/ContextProvider/RedhenOrgRouteContext.php
+++ b/modules/redhen_org/src/ContextProvider/RedhenOrgRouteContext.php
@@ -22,14 +22,14 @@ class RedhenOrgRouteContext implements ContextProviderInterface {
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Constructs a new RedhenOrgRouteContext object.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    */
   public function __construct(RouteMatchInterface $route_match) {
diff --git a/modules/redhen_org/src/Controller/OrgAddController.php b/modules/redhen_org/src/Controller/OrgAddController.php
index 5325577..1c16fac 100644
--- a/modules/redhen_org/src/Controller/OrgAddController.php
+++ b/modules/redhen_org/src/Controller/OrgAddController.php
@@ -37,7 +37,7 @@ class OrgAddController extends ControllerBase {
   /**
    * Displays add links for available bundles/types for entity redhen_org .
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -64,9 +64,9 @@ class OrgAddController extends ControllerBase {
   /**
    * Presents the creation form for redhen_org entities of given bundle/type.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $redhen_org_type
+   * @param EntityInterface $redhen_org_type
    *   The custom bundle to add.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -82,7 +82,7 @@ class OrgAddController extends ControllerBase {
   /**
    * Provides the page title for this controller.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $redhen_org_type
+   * @param EntityInterface $redhen_org_type
    *   The custom bundle/type being added.
    *
    * @return string
diff --git a/modules/redhen_org/src/OrgAccessControlHandler.php b/modules/redhen_org/src/OrgAccessControlHandler.php
index a702249..820286f 100644
--- a/modules/redhen_org/src/OrgAccessControlHandler.php
+++ b/modules/redhen_org/src/OrgAccessControlHandler.php
@@ -23,8 +23,7 @@ class OrgAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\redhen_org\OrgInterface $entity */
-
+    /** @var OrgInterface $entity */
     // Get Org bundle.
     $entity_bundle = $entity->getType();
 
diff --git a/modules/redhen_org/src/OrgHtmlRouteProvider.php b/modules/redhen_org/src/OrgHtmlRouteProvider.php
index a5aa3b5..b6b536b 100644
--- a/modules/redhen_org/src/OrgHtmlRouteProvider.php
+++ b/modules/redhen_org/src/OrgHtmlRouteProvider.php
@@ -42,10 +42,10 @@ class OrgHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -67,10 +67,10 @@ class OrgHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
@@ -102,10 +102,10 @@ class OrgHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add page route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddPageRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class OrgHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/redhen_org/src/OrgPermissions.php b/modules/redhen_org/src/OrgPermissions.php
index 3ae3325..e4aab6c 100644
--- a/modules/redhen_org/src/OrgPermissions.php
+++ b/modules/redhen_org/src/OrgPermissions.php
@@ -28,7 +28,7 @@ class OrgPermissions {
   /**
    * Builds a standard list of permissions for a given org type.
    *
-   * @param \Drupal\redhen_org\Entity\OrgType $org_type
+   * @param OrgType $org_type
    *   The machine name of the org type.
    *
    * @return array
diff --git a/modules/redhen_org/src/OrgTypeHtmlRouteProvider.php b/modules/redhen_org/src/OrgTypeHtmlRouteProvider.php
index 9511082..62c24ef 100644
--- a/modules/redhen_org/src/OrgTypeHtmlRouteProvider.php
+++ b/modules/redhen_org/src/OrgTypeHtmlRouteProvider.php
@@ -35,10 +35,10 @@ class OrgTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -62,10 +62,10 @@ class OrgTypeHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the add-form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getAddFormRoute(EntityTypeInterface $entity_type) {
