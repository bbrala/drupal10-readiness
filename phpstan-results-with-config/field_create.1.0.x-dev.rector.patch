diff --git a/modules/field_create_from_json/field_create_from_json.module b/modules/field_create_from_json/field_create_from_json.module
index d2d6f71..1d7bdc5 100644
--- a/modules/field_create_from_json/field_create_from_json.module
+++ b/modules/field_create_from_json/field_create_from_json.module
@@ -19,7 +19,7 @@ function field_create_from_json_form_field_create_settings_alter(array &$form, F
   // Improve description.
   $description = t('You can use JSON content which will be convert to YAML automatically on save.') . ' ';
   $description .= Link::fromTextAndUrl(t('See an example here'), Url::fromUri(
-    file_create_url(drupal_get_path('module', 'field_create_from_json') . '/example/node_fields.json'),
+    file_create_url(\Drupal::service('extension.list.module')->getPath('field_create_from_json') . '/example/node_fields.json'),
     ['attributes' => ['target' => '_blank']]
   ))->toString();
 
diff --git a/src/Commands/FieldCreateCommands.php b/src/Commands/FieldCreateCommands.php
index 3e3aaae..71de925 100644
--- a/src/Commands/FieldCreateCommands.php
+++ b/src/Commands/FieldCreateCommands.php
@@ -15,7 +15,7 @@ class FieldCreateCommands extends DrushCommands {
   /**
    * The logger.channel.field_create service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -29,7 +29,7 @@ class FieldCreateCommands extends DrushCommands {
   /**
    * FieldCreateCommands constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.channel.field_create service.
    * @param \Drupal\field_createg\FieldCreateManagerInterface $manager
    *   The field_create manager service.
diff --git a/src/FieldCreateManager.php b/src/FieldCreateManager.php
index e09f371..9bb0439 100644
--- a/src/FieldCreateManager.php
+++ b/src/FieldCreateManager.php
@@ -24,35 +24,35 @@ class FieldCreateManager implements FieldCreateManagerInterface {
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The user storage.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
diff --git a/src/FieldCreateManagerInterface.php b/src/FieldCreateManagerInterface.php
index 4b9a4e9..b087242 100644
--- a/src/FieldCreateManagerInterface.php
+++ b/src/FieldCreateManagerInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\field_create;
 
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
+use Drupal\Core\Field\FieldDefinitionInterface;
 /**
  * Service to automatically create fields.
  */
@@ -26,7 +28,7 @@ interface FieldCreateManagerInterface {
    * @param array $list
    *   A given list of field definitions.
    *
-   * @return \Drupal\Core\Field\FieldStorageDefinitionInterface[]
+   * @return FieldStorageDefinitionInterface[]
    *   An array of field storage definitions, keyed by field name.
    */
   public function createEntityFieldStorages(string $entity_type_id, array $list = []);
@@ -39,7 +41,7 @@ interface FieldCreateManagerInterface {
    * @param array $list
    *   A given list of field definitions.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface[]
+   * @return FieldDefinitionInterface[]
    *   An array of bundle field definitions, keyed by bundle and field_name.
    */
   public function createEntityFields(string $entity_type_id, array $list = []);
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 38733b4..1c7168b 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -77,7 +77,7 @@ class SettingsForm extends ConfigFormBase {
     $description .= '<br>';
     $description .= $this->t('Copy/Paste your field definitions as YAML content in the boxes below.') . ' ';
     $description .= Link::fromTextAndUrl($this->t('See an example here'), Url::fromUri(
-      file_create_url(drupal_get_path('module', 'field_create') . '/example/field_create.node.settings.yml'),
+      file_create_url(\Drupal::service('extension.list.module')->getPath('field_create') . '/example/field_create.node.settings.yml'),
       ['attributes' => ['target' => '_blank']]
     ))->toString();
 
