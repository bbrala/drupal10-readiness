diff --git a/embederator.info.yml b/embederator.info.yml
index e540371..6964b2b 100644
--- a/embederator.info.yml
+++ b/embederator.info.yml
@@ -2,4 +2,4 @@ name: Embederator
 type: module
 description: Create and manage third-party embeds with entity bundles
 package: Newcity
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/src/Controller/AjaxRender.php b/src/Controller/AjaxRender.php
index a6f6d33..6297312 100644
--- a/src/Controller/AjaxRender.php
+++ b/src/Controller/AjaxRender.php
@@ -19,21 +19,21 @@ class AjaxRender extends ControllerBase {
   /**
    * The entity type manager.
    *
-   * @var Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * Embed render utilities.
    *
-   * @var Drupal\embederator\EmbederatorRender
+   * @var EmbederatorRender
    */
   protected $embedRenderer;
 
   /**
    * Core renderer.
    *
-   * @var Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -78,7 +78,7 @@ class AjaxRender extends ControllerBase {
     $loadstyle = $settings['loadstyle'] ?? '';
     if ($loadstyle == 'iframe') {
       $base_url = Url::fromRoute('<front>', [], ['absolute' => TRUE])->toString();
-      $markup .= "\n" . '<script src="' . $base_url . drupal_get_path('module', 'embederator') . '/js/iframeResizer.contentWindow.min.js"></script>';
+      $markup .= "\n" . '<script src="' . $base_url . \Drupal::service('extension.list.module')->getPath('embederator') . '/js/iframeResizer.contentWindow.min.js"></script>';
     }
 
     $build = $this->embedRenderer->generateElement($markup);
diff --git a/src/EmbederatorRender.php b/src/EmbederatorRender.php
index 40c1db9..2c0077e 100644
--- a/src/EmbederatorRender.php
+++ b/src/EmbederatorRender.php
@@ -14,21 +14,21 @@ class EmbederatorRender {
   /**
    * HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $client;
 
   /**
    * Token handling.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
diff --git a/src/EmbederatorUtilities.php b/src/EmbederatorUtilities.php
index dfa904d..593da72 100644
--- a/src/EmbederatorUtilities.php
+++ b/src/EmbederatorUtilities.php
@@ -18,14 +18,14 @@ class EmbederatorUtilities {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Token handling.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
diff --git a/src/Entity/Controller/EmbederatorController.php b/src/Entity/Controller/EmbederatorController.php
index ba22512..0162590 100644
--- a/src/Entity/Controller/EmbederatorController.php
+++ b/src/Entity/Controller/EmbederatorController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\embederator\Entity\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Render\RendererInterface;
@@ -16,14 +17,14 @@ class EmbederatorController extends ControllerBase implements ContainerInjection
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a EmbederatorController object.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(RendererInterface $renderer) {
@@ -44,7 +45,7 @@ class EmbederatorController extends ControllerBase implements ContainerInjection
    *
    * Redirects to node/add/[type] if only one content type is available.
    *
-   * @return array|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return array|RedirectResponse
    *   A render array for a list of the node types that can be added; however,
    *   if there is only one node type defined for the site, the function
    *   will return a RedirectResponse to the node add page for that one node
@@ -80,7 +81,7 @@ class EmbederatorController extends ControllerBase implements ContainerInjection
   /**
    * Provides the embederator submission form.
    *
-   * @param \Drupal\embederator\EmbederatorTypeInterface $embederator_type
+   * @param EmbederatorTypeInterface $embederator_type
    *   The node type entity for the node.
    *
    * @return array
diff --git a/src/Entity/Controller/EmbederatorListBuilder.php b/src/Entity/Controller/EmbederatorListBuilder.php
index 67d91ff..da32d3f 100644
--- a/src/Entity/Controller/EmbederatorListBuilder.php
+++ b/src/Entity/Controller/EmbederatorListBuilder.php
@@ -19,7 +19,7 @@ class EmbederatorListBuilder extends EntityListBuilder {
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
@@ -37,11 +37,11 @@ class EmbederatorListBuilder extends EntityListBuilder {
   /**
    * Constructs a new EmbederatorListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, UrlGeneratorInterface $url_generator) {
diff --git a/src/Plugin/EntityReferenceSelection/EmbederatorSelection.php b/src/Plugin/EntityReferenceSelection/EmbederatorSelection.php
index 2b1fa6a..2d6baa9 100644
--- a/src/Plugin/EntityReferenceSelection/EmbederatorSelection.php
+++ b/src/Plugin/EntityReferenceSelection/EmbederatorSelection.php
@@ -139,7 +139,7 @@ class EmbederatorSelection extends DefaultSelection {
    * Validate helper to have support for other entity reference widgets.
    *
    * @param $element
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    * @param $form
    */
   public static function targetTypeValidate($element, FormStateInterface $form_state, $form) {
