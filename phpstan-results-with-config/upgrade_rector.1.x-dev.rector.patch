diff --git a/src/Controller/RectorResultController.php b/src/Controller/RectorResultController.php
index 5e5c2c1..fc7be76 100644
--- a/src/Controller/RectorResultController.php
+++ b/src/Controller/RectorResultController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\upgrade_rector\Controller;
 
+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\KeyValueStore\KeyValueFactoryInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,32 +15,32 @@ class RectorResultController extends ControllerBase {
   /**
    * The project collector service.
    *
-   * @var \Drupal\upgrade_rector\ProjectCollector
+   * @var ProjectCollector
    */
   protected $projectCollector;
 
     /**
    * Rector result storage.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected $rectorResults;
 
   /**
    * Rector data processor.
    *
-   * @var \Drupal\upgrade_rector\RectorProcessor
+   * @var RectorProcessor
    */
   protected $rectorProcessor;
 
   /**
    * Constructs a \Drupal\upgrade_rector\Controller\RectorResultController.
    *
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key/value factory.
-   * @param \Drupal\upgrade_rector\RectorProcessor $rector_processor
+   * @param RectorProcessor $rector_processor
    *   The rector processor.
-   * @param \Drupal\upgrade_rector\ProjectCollector $project_collector
+   * @param ProjectCollector $project_collector
    *   The project collector service.
    */
   public function __construct(
@@ -93,7 +94,7 @@ class RectorResultController extends ControllerBase {
    * @param string $project_machine_name
    *   The machine name of the project.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Response object.
    */
   public function resultExport(string $type, string $project_machine_name) {
diff --git a/src/Form/UpgradeRectorForm.php b/src/Form/UpgradeRectorForm.php
index 98a7355..e98e457 100644
--- a/src/Form/UpgradeRectorForm.php
+++ b/src/Form/UpgradeRectorForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\upgrade_rector\Form;
 
+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 use Drupal\Core\Extension\Extension;
 use Drupal\Core\Extension\ModuleExtensionList;
 use Drupal\Core\Extension\ProfileExtensionList;
@@ -18,21 +19,21 @@ class UpgradeRectorForm extends FormBase {
   /**
    * The project collector service.
    *
-   * @var \Drupal\upgrade_rector\ProjectCollector
+   * @var ProjectCollector
    */
   protected $projectCollector;
 
   /**
    * Rector result storage.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected $rectorResults;
 
   /**
    * Rector data processor.
    *
-   * @var \Drupal\upgrade_rector\RectorProcessor
+   * @var RectorProcessor
    */
   protected $rectorProcessor;
 
@@ -50,11 +51,11 @@ class UpgradeRectorForm extends FormBase {
   /**
    * Constructs a \Drupal\upgrade_status_rector\UpgradeStatusRectorForm.
    *
-   * @param \Drupal\upgrade_rector\ProjectCollector $project_collector
+   * @param ProjectCollector $project_collector
    *   The project collector service.
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key/value factory.
-   * @param \Drupal\upgrade_rector\RectorProcessor $rector_processor
+   * @param RectorProcessor $rector_processor
    *   The rector processor.
    */
   public function __construct(
@@ -79,7 +80,7 @@ class UpgradeRectorForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -126,7 +127,7 @@ class UpgradeRectorForm extends FormBase {
   /**
    * Builds a list and status summary of projects.
    *
-   * @param \Drupal\Core\Extension\Extension[] $projects
+   * @param Extension[] $projects
    *   Array of extensions representing projects.
    * @param string $category
    *   One of 'custom' or 'contrib'. Presenting messages may be different for each.
@@ -164,7 +165,7 @@ class UpgradeRectorForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitContribRector(array &$form, FormStateInterface $form_state) {
@@ -179,7 +180,7 @@ class UpgradeRectorForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitCustomRector(array &$form, FormStateInterface $form_state) {
@@ -192,7 +193,7 @@ class UpgradeRectorForm extends FormBase {
   /**
    * Form submission handler.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Selected extension.
    */
   public function submitRector(Extension $extension) {
@@ -211,7 +212,7 @@ class UpgradeRectorForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {}
diff --git a/src/ProjectCollector.php b/src/ProjectCollector.php
index d386e91..ac978f8 100644
--- a/src/ProjectCollector.php
+++ b/src/ProjectCollector.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\upgrade_rector;
 
+use Drupal\Core\Extension\Extension;
+use Drupal\Core\Extension\Exception\UnknownExtensionException;
 use Drupal\Core\Extension\ModuleExtensionList;
 use Drupal\Core\Extension\ProfileExtensionList;
 use Drupal\Core\Extension\ThemeExtensionList;
@@ -15,21 +17,21 @@ class ProjectCollector {
   /**
    * The list of available modules.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
   /**
    * The list of available themes.
    *
-   * @var \Drupal\Core\Extension\ThemeExtensionList
+   * @var ThemeExtensionList
    */
   protected $themeExtensionList;
 
   /**
    * The list of available profiles.
    *
-   * @var \Drupal\Core\Extension\ProfileExtensionList
+   * @var ProfileExtensionList
    */
   protected $profileExtensionList;
 
@@ -47,11 +49,11 @@ class ProjectCollector {
   /**
    * Constructs a \Drupal\upgrade_status\ProjectCollector.
    *
-   * @param \Drupal\Core\Extension\ModuleExtensionList $module_extension_list
+   * @param ModuleExtensionList $module_extension_list
    *   The module extension list service.
-   * @param \Drupal\Core\Extension\ThemeExtensionList $theme_extension_list
+   * @param ThemeExtensionList $theme_extension_list
    *   The theme extension handler service.
-   * @param \Drupal\Core\Extension\ProfileExtensionList $profile_extension_list
+   * @param ProfileExtensionList $profile_extension_list
    *   The profile extension handler service.
    */
   public function __construct(
@@ -82,7 +84,7 @@ class ProjectCollector {
     $extensions = array_merge($modules, $themes, $profiles);
     unset($modules, $themes, $profiles);
 
-    /** @var \Drupal\Core\Extension\Extension $extension */
+    /** @var Extension $extension */
     foreach ($extensions as $key => $extension) {
 
       if ($extension->origin === 'core') {
@@ -146,10 +148,10 @@ class ProjectCollector {
   /**
    * Finds topmost extension for each extension and keeps only that.
    *
-   * @param \Drupal\Core\Extension\Extension[] $extensions
+   * @param Extension[] $extensions
    *   List of all enabled extensions in a category.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   List of extensions, with only the topmost extension left for each
    *   extension that has a parent extension.
    */
@@ -184,12 +186,12 @@ class ProjectCollector {
    * @param string $project_machine_name
    *   Machine name for the extension.
    *
-   * @return \Drupal\Core\Extension\Extension
+   * @return Extension
    *   A project if exists.
    *
    * @throws \InvalidArgumentException
    *   If the type was not one of the allowed ones.
-   * @throws \Drupal\Core\Extension\Exception\UnknownExtensionException
+   * @throws UnknownExtensionException
    *   If there was no extension with the given name.
    */
   public function loadProject(string $type, string $project_machine_name) {
diff --git a/src/RectorProcessor.php b/src/RectorProcessor.php
index 7aae3df..37f4889 100644
--- a/src/RectorProcessor.php
+++ b/src/RectorProcessor.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\upgrade_rector;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Core\KeyValueStore\KeyValueStoreInterface;
 use Drupal\Core\Extension\Extension;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\KeyValueStore\KeyValueFactoryInterface;
@@ -19,32 +21,32 @@ class RectorProcessor {
    /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * File system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * Rector result storage.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueStoreInterface
+   * @var KeyValueStoreInterface
    */
   protected $rectorResults;
 
   /**
    * Constructs a rector processor.
    *
-   * @param \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory
+   * @param KeyValueFactoryInterface $key_value_factory
    *   The key/value factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   File system service.
    */
   public function __construct(
@@ -80,7 +82,7 @@ class RectorProcessor {
   /**
    * Run rector on a given extension.
    *
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Extension to run rector on.
    *
    * @return bool
@@ -112,7 +114,7 @@ class RectorProcessor {
       return FALSE;
     }
 
-    $module_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'upgrade_rector');
+    $module_path = DRUPAL_ROOT . '/' . \Drupal::service('extension.list.module')->getPath('upgrade_rector');
     $config = file_get_contents($module_path . '/rector-config-template.php');
     $config = str_replace('$vendor_dir', "'" . $vendor_path . "'", $config);
     // Replace backslash for Windows compatibility.
@@ -140,7 +142,7 @@ class RectorProcessor {
    *
    * @param string $raw_rector_result
    *   Raw rector output string.
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Extension that was parsed.
    * @param string $category
    *   One of 'custom' or 'contrib'. Presenting messages may be different for each.
@@ -257,7 +259,7 @@ class RectorProcessor {
    *
    * @param string $raw_rector_result
    *   Raw rector output string.
-   * @param \Drupal\Core\Extension\Extension $extension
+   * @param Extension $extension
    *   Extension that was parsed.
    *
    * @return bool|array
