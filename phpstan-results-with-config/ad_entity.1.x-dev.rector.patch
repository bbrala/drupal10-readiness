diff --git a/ad_entity.api.php b/ad_entity.api.php
index 7148204..98fc724 100644
--- a/ad_entity.api.php
+++ b/ad_entity.api.php
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\Core\Field\FieldItemListInterface;
+use Drupal\ad_entity\Plugin\AdContextManager;
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Hooks for ad_entity module.
@@ -64,7 +68,7 @@ function hook_ad_entity_js_settings_alter(array &$settings, array &$cache_tags)
  * @param array &$build
  *   The render array of the given Advertising entity.
  */
-function hook_ad_entity_view_alter(array &$build, \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity) {
+function hook_ad_entity_view_alter(array &$build, AdEntityInterface $ad_entity) {
   if ($ad_entity->isNew()) {
     // Class attributes will be merged during preprocessing.
     $ad_entity->_attributes['class'][] = 'new';
@@ -74,13 +78,13 @@ function hook_ad_entity_view_alter(array &$build, \Drupal\ad_entity\Entity\AdEnt
 /**
  * Act on the inclusion of Advertising context.
  *
- * @param \Drupal\Core\Field\FieldItemListInterface $items
+ * @param FieldItemListInterface $items
  *   A list of field items containing Advertising context,
  *   which is about to be included for appliance.
  * @param array $settings
  *   The settings of the formatter being used for the list of field items.
  */
-function hook_ad_context_include(\Drupal\Core\Field\FieldItemListInterface $items, array $settings) {
+function hook_ad_context_include(FieldItemListInterface $items, array $settings) {
   $to_append['context'] = [
     'context_plugin_id' => 'targeting',
     'apply_on' => [],
@@ -100,12 +104,12 @@ function hook_ad_context_include(\Drupal\Core\Field\FieldItemListInterface $item
  *
  * For more information, see AdContextManager::resetContextDataForEntity().
  *
- * @param \Drupal\ad_entity\Plugin\AdContextManager $context_manager
+ * @param AdContextManager $context_manager
  *   The manager for Advertising context plugins and backend context data.
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity, e.g. a node, for which the context data has been reset.
  */
-function hook_ad_context_data_reset(\Drupal\ad_entity\Plugin\AdContextManager $context_manager, \Drupal\Core\Entity\EntityInterface $entity) {
+function hook_ad_context_data_reset(AdContextManager $context_manager, EntityInterface $entity) {
   $context_manager
     ->addContextData('targeting', ['targeting' => ['key' => 'value']]);
 }
diff --git a/ad_entity.install b/ad_entity.install
index 2207481..5d8a91d 100644
--- a/ad_entity.install
+++ b/ad_entity.install
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\block\Entity\Block;
+use Drupal\user\RoleInterface;
+use Drupal\ad_entity\Entity\AdDisplayInterface;
+use Drupal\ad_entity\Entity\AdEntityInterface;
 /**
  * @file
  * Advertising Entity install file.
@@ -40,7 +44,7 @@ function ad_entity_update_8002(&$sandbox) {
   $query->range($sandbox['current'], 20);
   $block_ids = $query->execute();
   if (!empty($block_ids)) {
-    /** @var \Drupal\block\Entity\Block $block */
+    /** @var Block $block */
     foreach ($storage->loadMultiple($block_ids) as $block) {
       if (($block->get('plugin') == 'ad_entity_block') && ($settings = $block->get('settings'))) {
         if (($theme_name = $block->get('theme')) && !empty($settings['variants'])) {
@@ -76,7 +80,7 @@ function ad_entity_update_8003(&$sandbox) {
     'update ad_entity' => 'update ad_display',
     'access ad_entity overview' => 'access ad_display overview',
   ];
-  /** @var \Drupal\user\RoleInterface $role */
+  /** @var RoleInterface $role */
   foreach ($role_storage->loadMultiple() as $role) {
     $permissions = $role->get('permissions');
     foreach ($permissions as $permission) {
@@ -102,7 +106,7 @@ function ad_entity_update_8003(&$sandbox) {
   $query->range($sandbox['current'], 20);
   $block_ids = $query->execute();
   if (!empty($block_ids)) {
-    /** @var \Drupal\block\Entity\Block $block */
+    /** @var Block $block */
     foreach ($block_storage->loadMultiple($block_ids) as $block) {
       if ($block->get('plugin') == 'ad_entity_block') {
         $settings = $block->get('settings');
@@ -112,7 +116,7 @@ function ad_entity_update_8003(&$sandbox) {
 
         $label = $settings['label'];
         // Create a display config for the given block config.
-        /** @var \Drupal\ad_entity\Entity\AdDisplayInterface $ad_display */
+        /** @var AdDisplayInterface $ad_display */
         $ad_display = $ad_display_storage->create(['id' => $id, 'label' => $label]);
         $display_dependencies = $block->get('dependencies');
         unset($display_dependencies['theme']);
@@ -167,7 +171,7 @@ function ad_entity_update_8004(&$sandbox) {
   $query = $ad_storage->getQuery();
   $query->range($sandbox['current'], 20);
   $ids = $query->execute();
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   foreach ($ad_storage->loadMultiple($ids) as $ad_entity) {
     $sandbox['current']++;
 
@@ -220,7 +224,7 @@ function ad_entity_update_8006(&$sandbox) {
   $query = $ad_storage->getQuery();
   $query->range($sandbox['current'], 20);
   $ids = $query->execute();
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   foreach ($ad_storage->loadMultiple($ids) as $ad_entity) {
     $sandbox['current']++;
 
diff --git a/ad_entity.module b/ad_entity.module
index 5ec921d..1376af6 100644
--- a/ad_entity.module
+++ b/ad_entity.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\ad_entity\Plugin\AdViewManager;
+use Drupal\ad_entity\AdEntityUsage;
+use Drupal\Core\Field\FieldDefinitionInterface;
+use Drupal\Core\Asset\LibraryDiscoveryInterface;
 /**
  * @file
  * Advertising Entity module file.
@@ -52,9 +56,9 @@ function ad_entity_library_info_build() {
   // Add the viewready.js library, in case view handlers exist,
   // which support execution before document is ready.
   $dependencies = [];
-  /** @var \Drupal\ad_entity\Plugin\AdViewManager $view_manager */
+  /** @var AdViewManager $view_manager */
   $view_manager = \Drupal::service('ad_entity.view_manager');
-  /** @var \Drupal\ad_entity\AdEntityUsage $usage */
+  /** @var AdEntityUsage $usage */
   $usage = \Drupal::service('ad_entity.usage');
   $used_view_plugins = $usage->getCurrentlyUsedAdViewPlugins();
   foreach ($view_manager->getDefinitions() as $id => $definition) {
@@ -73,7 +77,7 @@ function ad_entity_library_info_build() {
     }
     // Add context handlers, if available.
     if ($use_context_js) {
-      /** @var \Drupal\ad_entity\Plugin\AdContextManager $context_manager */
+      /** @var AdContextManager $context_manager */
       $context_manager = \Drupal::service('ad_entity.context_manager');
       foreach ($context_manager->getDefinitions() as $definition) {
         if (!empty($definition['library'])) {
@@ -157,7 +161,7 @@ function ad_entity_entity_prepare_view($entity_type_id, array $entities, array $
   $type = $entity_type_id;
   $to_reset = &drupal_static(__FUNCTION__, [$type => []]);
   $entities_for_reset = [];
-  /** @var \Drupal\Core\Entity\EntityInterface $entity */
+  /** @var EntityInterface $entity */
   foreach ($entities as $entity) {
     $bundle = $entity->bundle();
     // Check whether the entity being shown defines its own context data.
@@ -165,7 +169,7 @@ function ad_entity_entity_prepare_view($entity_type_id, array $entities, array $
     if (!isset($to_reset[$type][$bundle][$view_mode])) {
       $to_reset[$type][$bundle][$view_mode] = FALSE;
       if ($entity instanceof FieldableEntityInterface) {
-        /** @var \Drupal\Core\Field\FieldDefinitionInterface $definition */
+        /** @var FieldDefinitionInterface $definition */
         foreach ($entity->getFieldDefinitions() as $definition) {
           if ($definition->getType() == 'ad_entity_context') {
             $field_name = $definition->getName();
@@ -183,7 +187,7 @@ function ad_entity_entity_prepare_view($entity_type_id, array $entities, array $
     }
   }
   if (!empty($entities_for_reset)) {
-    /** @var \Drupal\ad_entity\Plugin\AdContextManager $context_manager */
+    /** @var AdContextManager $context_manager */
     $context_manager = \Drupal::service('ad_entity.context_manager');
     // Due to the build process, multiple resets at once are not possible.
     $entity = end($entities_for_reset);
@@ -478,7 +482,7 @@ function _ad_entity_attach_js_settings_head(array &$variables) {
  *   The render array for inline JS regards the ad_entity/base library.
  */
 function _ad_entity_js_base_inline() {
-  /** @var \Drupal\Core\Asset\LibraryDiscoveryInterface $library_discovery */
+  /** @var LibraryDiscoveryInterface $library_discovery */
   $library_discovery = \Drupal::service('library.discovery');
   $script = '';
   if ($base_library = $library_discovery->getLibraryByName('ad_entity', 'base')) {
diff --git a/ad_entity.theme.inc b/ad_entity.theme.inc
index 9ac7e47..098767a 100644
--- a/ad_entity.theme.inc
+++ b/ad_entity.theme.inc
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\ad_entity\Entity\AdDisplayInterface;
 /**
  * @file
  * Advertising Entity theme implementations.
@@ -15,7 +17,7 @@ use Drupal\Component\Utility\Crypt;
  *   An array of variables.
  */
 function template_preprocess_ad_entity(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity = $variables['ad_entity'];
   $view_handler = $ad_entity->getViewPlugin();
 
@@ -125,7 +127,7 @@ function template_preprocess_ad_entity_context(array &$variables) {
  *   An array of variables.
  */
 function template_preprocess_ad_display_iframe(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdDisplayInterface $ad_display */
+  /** @var AdDisplayInterface $ad_display */
   $ad_display = $variables['ad_display'];
   $attributes = [
     'width' => $variables['width'],
diff --git a/modules/ad_entity_adtech/ad_entity_adtech.iframe.inc b/modules/ad_entity_adtech/ad_entity_adtech.iframe.inc
index 5a3edc1..8793306 100644
--- a/modules/ad_entity_adtech/ad_entity_adtech.iframe.inc
+++ b/modules/ad_entity_adtech/ad_entity_adtech.iframe.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
 /**
  * @file
  * Advertising Entity: AdTech Factory iFrame implementations.
@@ -15,7 +16,7 @@ use Drupal\Component\Utility\Crypt;
  *   An array of available variables.
  */
 function template_preprocess_adtech_iframe(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity = $variables['ad_entity'];
   $settings = $ad_entity->getThirdPartySettings('ad_entity_adtech');
 
diff --git a/modules/ad_entity_adtech/ad_entity_adtech.install b/modules/ad_entity_adtech/ad_entity_adtech.install
index f91e1ed..ed1b8d4 100644
--- a/modules/ad_entity_adtech/ad_entity_adtech.install
+++ b/modules/ad_entity_adtech/ad_entity_adtech.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\AdEntityServices;
 /**
  * @file
  * Advertising Entity: AdTech Factory install file.
@@ -14,7 +15,7 @@ function ad_entity_adtech_install() {
   // Clear cached plugin definitions from ad_entity services
   // to include any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
@@ -27,7 +28,7 @@ function ad_entity_adtech_uninstall() {
   // Clear cached plugin definitions from ad_entity services
   // to remove any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
diff --git a/modules/ad_entity_adtech/ad_entity_adtech.module b/modules/ad_entity_adtech/ad_entity_adtech.module
index 6938a88..ae0af18 100644
--- a/modules/ad_entity_adtech/ad_entity_adtech.module
+++ b/modules/ad_entity_adtech/ad_entity_adtech.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Routing\AdminContext;
 /**
  * @file
  * Advertising Entity: AdTech Factory module file.
@@ -55,7 +56,7 @@ function ad_entity_adtech_page_attachments(&$attachments) {
   // (e.g. via AJAX), we must include the library on any page.
   // On admin pages though, we most probably don't need the library.
   // It would still be loaded if an ad is being included directly on the page.
-  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
+  /** @var AdminContext $admin_context */
   $admin_context = \Drupal::service('router.admin_context');
   if (!$admin_context->isAdminRoute()) {
     $settings = $config->get('adtech_factory');
diff --git a/modules/ad_entity_adtech/ad_entity_adtech.theme.inc b/modules/ad_entity_adtech/ad_entity_adtech.theme.inc
index 820f4f9..f72e338 100644
--- a/modules/ad_entity_adtech/ad_entity_adtech.theme.inc
+++ b/modules/ad_entity_adtech/ad_entity_adtech.theme.inc
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\Core\Routing\AdminContext;
 /**
  * @file
  * Advertising Entity: AdTech Factory theme implementations.
@@ -16,7 +18,7 @@ use Drupal\ad_entity\TargetingCollection;
  *   An array of available variables.
  */
 function template_preprocess_adtech_default(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity = $variables['ad_entity'];
   $settings = $ad_entity->getThirdPartySettings('ad_entity_adtech');
 
@@ -33,7 +35,7 @@ function template_preprocess_adtech_default(array &$variables) {
   }
   $variables['attributes'] = $attributes;
 
-  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
+  /** @var AdminContext $admin_context */
   // Usually page targeting is already being included via
   // ad_entity_adtech_page_attachments(). If we are on an admin
   // page though, the page targeting needs to be manually included here.
diff --git a/modules/ad_entity_adtech/src/Plugin/ad_entity/AdType/AdtechType.php b/modules/ad_entity_adtech/src/Plugin/ad_entity/AdType/AdtechType.php
index ca5b8ff..3eb02e7 100644
--- a/modules/ad_entity_adtech/src/Plugin/ad_entity/AdType/AdtechType.php
+++ b/modules/ad_entity_adtech/src/Plugin/ad_entity/AdType/AdtechType.php
@@ -23,7 +23,7 @@ class AdtechType extends AdTypeBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -40,7 +40,7 @@ class AdtechType extends AdTypeBase {
   /**
    * Set the config factory object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory object.
    */
   protected function setConfigFactory(ConfigFactoryInterface $config_factory) {
@@ -165,7 +165,7 @@ class AdtechType extends AdTypeBase {
   /**
    * Returns a default targeting collection.
    *
-   * @return \Drupal\ad_entity\TargetingCollection
+   * @return TargetingCollection
    *   The default targeting collection.
    */
   protected function defaultTargeting() {
diff --git a/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.module b/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.module
index 7523ef4..6cc4651 100644
--- a/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.module
+++ b/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Routing\AdminContext;
 /**
  * @file
  * The ad_entity_adtech_v2 module file.
@@ -44,7 +45,7 @@ function ad_entity_adtech_v2_page_top(array &$page_top) {
     return;
   }
 
-  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
+  /** @var AdminContext $admin_context */
   $admin_context = \Drupal::service('router.admin_context');
   if (!$admin_context->isAdminRoute()) {
     $settings = $config->get('adtech_v2_factory');
diff --git a/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.theme.inc b/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.theme.inc
index 4916a0f..b9c5f2b 100644
--- a/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.theme.inc
+++ b/modules/ad_entity_adtech_v2/ad_entity_adtech_v2.theme.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
 /**
  * @file
  * Advertising Entity: AdTech v2 Factory theme implementations.
@@ -15,7 +16,7 @@ use Drupal\Component\Utility\Html;
  *   An array of available variables.
  */
 function template_preprocess_adtech_v2_default(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity       = $variables['ad_entity'];
   $settings        = $ad_entity->getThirdPartySettings('ad_entity_adtech_v2');
   $config          = \Drupal::config('ad_entity.settings');
diff --git a/modules/ad_entity_adtech_v2/src/Plugin/ad_entity/AdType/AdtechType.php b/modules/ad_entity_adtech_v2/src/Plugin/ad_entity/AdType/AdtechType.php
index 8f5fa7f..067924f 100644
--- a/modules/ad_entity_adtech_v2/src/Plugin/ad_entity/AdType/AdtechType.php
+++ b/modules/ad_entity_adtech_v2/src/Plugin/ad_entity/AdType/AdtechType.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity_adtech_v2\Plugin\ad_entity\AdType;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\ad_entity\Entity\AdEntityInterface;
 use Drupal\ad_entity\Plugin\AdTypeBase;
 use Drupal\ad_entity\TargetingCollection;
@@ -24,7 +25,7 @@ class AdtechType extends AdTypeBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -434,7 +435,7 @@ class AdtechType extends AdTypeBase {
   /**
    * Returns a default targeting collection.
    *
-   * @return \Drupal\ad_entity\TargetingCollection
+   * @return TargetingCollection
    *   The default targeting collection.
    */
   protected function defaultTargeting() {
@@ -473,7 +474,7 @@ class AdtechType extends AdTypeBase {
    *
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   Form state.
    *
    * @return array|mixed
@@ -487,7 +488,7 @@ class AdtechType extends AdTypeBase {
    *
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   Form state.
    *
    * @return array|mixed
@@ -501,7 +502,7 @@ class AdtechType extends AdTypeBase {
    *
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   Form state.
    */
   public static function addMore(array &$form, FormStateInterface $formState) {
@@ -526,7 +527,7 @@ class AdtechType extends AdTypeBase {
    *
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *   Form state.
    */
   public static function removeLast(array &$form, FormStateInterface $formState) {
diff --git a/modules/ad_entity_dfp/ad_entity_dfp.amp.inc b/modules/ad_entity_dfp/ad_entity_dfp.amp.inc
index 817da04..52124f4 100755
--- a/modules/ad_entity_dfp/ad_entity_dfp.amp.inc
+++ b/modules/ad_entity_dfp/ad_entity_dfp.amp.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
 /**
  * @file
  * Advertising Entity: DFP implementations for Accelerated Mobile Pages (AMP).
@@ -16,7 +17,7 @@ use Drupal\ad_entity_dfp\Plugin\ad_entity\AdView\DFPAmp;
  *   An array of available variables.
  */
 function template_preprocess_dfp_amp(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity = $variables['ad_entity'];
   $settings = $ad_entity->getThirdPartySettings('ad_entity_dfp');
 
diff --git a/modules/ad_entity_dfp/ad_entity_dfp.iframe.inc b/modules/ad_entity_dfp/ad_entity_dfp.iframe.inc
index bc4ac48..379a194 100644
--- a/modules/ad_entity_dfp/ad_entity_dfp.iframe.inc
+++ b/modules/ad_entity_dfp/ad_entity_dfp.iframe.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
 /**
  * @file
  * Advertising Entity: DFP iFrame implementations.
@@ -15,7 +16,7 @@ use Drupal\Component\Utility\Crypt;
  *   An array of available variables.
  */
 function template_preprocess_dfp_iframe(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity = $variables['ad_entity'];
   $settings = $ad_entity->getThirdPartySettings('ad_entity_dfp');
 
diff --git a/modules/ad_entity_dfp/ad_entity_dfp.install b/modules/ad_entity_dfp/ad_entity_dfp.install
index e67c127..909e241 100644
--- a/modules/ad_entity_dfp/ad_entity_dfp.install
+++ b/modules/ad_entity_dfp/ad_entity_dfp.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\AdEntityServices;
 /**
  * @file
  * Advertising Entity: Doubleclick for Publishers install file.
@@ -12,7 +13,7 @@ function ad_entity_dfp_install() {
   // Clear cached plugin definitions from ad_entity services
   // to include any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
@@ -25,7 +26,7 @@ function ad_entity_dfp_uninstall() {
   // Clear cached plugin definitions from ad_entity services
   // to remove any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
diff --git a/modules/ad_entity_dfp/ad_entity_dfp.module b/modules/ad_entity_dfp/ad_entity_dfp.module
index 6bbb134..36dcf9e 100644
--- a/modules/ad_entity_dfp/ad_entity_dfp.module
+++ b/modules/ad_entity_dfp/ad_entity_dfp.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Routing\AdminContext;
+use Drupal\ad_entity\AdEntityUsage;
 /**
  * @file
  * Advertising Entity: DFP module file.
@@ -41,10 +43,10 @@ function ad_entity_dfp_page_attachments(&$attachments) {
   // placed into the HTML head. On admin pages though, we most
   // probably don't need the library. It would still be loaded
   // if an ad is being included directly on the page.
-  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
+  /** @var AdminContext $admin_context */
   $admin_context = \Drupal::service('router.admin_context');
   if (!$admin_context->isAdminRoute()) {
-    /** @var \Drupal\ad_entity\AdEntityUsage $usage */
+    /** @var AdEntityUsage $usage */
     $usage = \Drupal::service('ad_entity.usage');
     $used_view_plugins = $usage->getCurrentlyUsedAdViewPlugins();
     if (!empty($used_view_plugins['dfp_default'])) {
diff --git a/modules/ad_entity_dfp/ad_entity_dfp.theme.inc b/modules/ad_entity_dfp/ad_entity_dfp.theme.inc
index e52b6c0..9b8b78c 100644
--- a/modules/ad_entity_dfp/ad_entity_dfp.theme.inc
+++ b/modules/ad_entity_dfp/ad_entity_dfp.theme.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
 /**
  * @file
  * Advertising Entity: DFP theme implementations.
@@ -15,7 +16,7 @@ use Drupal\Component\Utility\Crypt;
  *   An array of available variables.
  */
 function template_preprocess_dfp_default(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity = $variables['ad_entity'];
   $settings = $ad_entity->getThirdPartySettings('ad_entity_dfp');
 
diff --git a/modules/ad_entity_dfp/src/Plugin/ad_entity/AdView/DFPAmp.php b/modules/ad_entity_dfp/src/Plugin/ad_entity/AdView/DFPAmp.php
index c590794..4775965 100755
--- a/modules/ad_entity_dfp/src/Plugin/ad_entity/AdView/DFPAmp.php
+++ b/modules/ad_entity_dfp/src/Plugin/ad_entity/AdView/DFPAmp.php
@@ -233,7 +233,7 @@ class DFPAmp extends AdViewBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Drupal\Core\Form\FormStateInterface FormStateInterface.
    */
   public static function addOneVendor(array &$form, FormStateInterface $form_state) {
@@ -255,7 +255,7 @@ class DFPAmp extends AdViewBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Drupal\Core\Form\FormStateInterface FormStateInterface.
    */
   public static function removeOneVendor(array &$form, FormStateInterface $form_state) {
@@ -277,7 +277,7 @@ class DFPAmp extends AdViewBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Drupal\Core\Form\FormStateInterface FormStateInterface.
    *
    * @return mixed
@@ -292,7 +292,7 @@ class DFPAmp extends AdViewBase {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Drupal\Core\Form\FormStateInterface FormStateInterface.
    *
    * @return mixed
diff --git a/modules/ad_entity_fallback/ad_entity_fallback.admin.inc b/modules/ad_entity_fallback/ad_entity_fallback.admin.inc
index 793f080..c850edd 100644
--- a/modules/ad_entity_fallback/ad_entity_fallback.admin.inc
+++ b/modules/ad_entity_fallback/ad_entity_fallback.admin.inc
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\ad_entity\Form\GlobalSettingsForm;
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\Core\Entity\EntityForm;
 /**
  * @file
  * Advertising Entity: Fallback - functions for admin pages.
@@ -12,11 +15,11 @@ use Drupal\Core\Form\FormStateInterface;
  *
  * @param array &$form
  *   The form array of the ad_entity_settings form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The corresponding form state.
  */
 function _ad_entity_fallback_settings_form(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\ad_entity\Form\GlobalSettingsForm $form_object */
+  /** @var GlobalSettingsForm $form_object */
   $form_object = $form_state->getFormObject();
   $config = $form_object->getConfig();
   $fallback_settings = $config->get('fallback');
@@ -48,11 +51,11 @@ function _ad_entity_fallback_settings_form(array &$form, FormStateInterface $for
  *
  * @param array $form
  *   The form array of the ad_entity_settings form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The corresponding form state.
  */
 function _ad_entity_fallback_settings_form_submit(array $form, FormStateInterface $form_state) {
-  /** @var \Drupal\ad_entity\Form\GlobalSettingsForm $form_object */
+  /** @var GlobalSettingsForm $form_object */
   $form_object = $form_state->getFormObject();
   $config = $form_object->getConfig();
   $submitted = $form_state->getValue('fallback');
@@ -73,13 +76,13 @@ function _ad_entity_fallback_settings_form_submit(array $form, FormStateInterfac
  *
  * @param array &$form
  *   The form array of the Advertising entity form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The corresponding form state.
  */
 function _ad_entity_fallback_entity_form(array &$form, FormStateInterface $form_state) {
   $ad_entities = \Drupal::entityTypeManager()->getStorage('ad_entity')->loadMultiple();
   $options = [];
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   foreach ($ad_entities as $ad_entity) {
     $has_fallback = (bool) $ad_entity->getThirdPartySetting('ad_entity_fallback', 'ad_entity_id');
     if (!$has_fallback) {
@@ -87,9 +90,9 @@ function _ad_entity_fallback_entity_form(array &$form, FormStateInterface $form_
     }
   }
 
-  /** @var \Drupal\Core\Entity\EntityForm $form_object */
+  /** @var EntityForm $form_object */
   $form_object = $form_state->getFormObject();
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $current */
+  /** @var AdEntityInterface $current */
   $current = $form_object->getEntity();
   if (empty($current)) {
     return;
diff --git a/modules/ad_entity_fallback/ad_entity_fallback.install b/modules/ad_entity_fallback/ad_entity_fallback.install
index b26240c..8cb7831 100644
--- a/modules/ad_entity_fallback/ad_entity_fallback.install
+++ b/modules/ad_entity_fallback/ad_entity_fallback.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\AdEntityServices;
 /**
  * @file
  * Advertising Entity: Fallback install file.
@@ -16,7 +17,7 @@ function ad_entity_fallback_install() {
   // Clear cached plugin definitions from ad_entity services
   // to include any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
@@ -29,7 +30,7 @@ function ad_entity_fallback_uninstall() {
   // Clear cached plugin definitions from ad_entity services
   // to remove any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
diff --git a/modules/ad_entity_fallback/ad_entity_fallback.module b/modules/ad_entity_fallback/ad_entity_fallback.module
index 878d399..f0c64e8 100644
--- a/modules/ad_entity_fallback/ad_entity_fallback.module
+++ b/modules/ad_entity_fallback/ad_entity_fallback.module
@@ -49,7 +49,7 @@ function ad_entity_fallback_ad_entity_view_alter(array &$build, AdEntityInterfac
   }
   $type_manager = \Drupal::entityTypeManager();
   $storage = $type_manager->getStorage('ad_entity');
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $fallback_entity */
+  /** @var AdEntityInterface $fallback_entity */
   if (!($fallback_entity = $storage->load($settings['ad_entity_id']))) {
     return;
   }
diff --git a/modules/ad_entity_generic/ad_entity_generic.install b/modules/ad_entity_generic/ad_entity_generic.install
index 946da8a..8e02ff5 100644
--- a/modules/ad_entity_generic/ad_entity_generic.install
+++ b/modules/ad_entity_generic/ad_entity_generic.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\AdEntityServices;
 /**
  * @file
  * Advertising Entity: Generic ads install file.
@@ -12,7 +13,7 @@ function ad_entity_generic_install() {
   // Clear cached plugin definitions from ad_entity services
   // to include any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
@@ -25,7 +26,7 @@ function ad_entity_generic_uninstall() {
   // Clear cached plugin definitions from ad_entity services
   // to remove any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
diff --git a/modules/ad_entity_generic/ad_entity_generic.module b/modules/ad_entity_generic/ad_entity_generic.module
index 6388394..91ba04d 100644
--- a/modules/ad_entity_generic/ad_entity_generic.module
+++ b/modules/ad_entity_generic/ad_entity_generic.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\Core\Routing\AdminContext;
+use Drupal\ad_entity\AdEntityUsage;
+use Drupal\ad_entity\Plugin\AdContextManager;
 /**
  * @file
  * Advertising Entity: Generic ads module file.
@@ -28,7 +32,7 @@ function ad_entity_generic_theme($existing, $type, $theme, $path) {
  *   An array of available variables.
  */
 function template_preprocess_ad_entity_generic_js(array &$variables) {
-  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+  /** @var AdEntityInterface $ad_entity */
   $ad_entity = $variables['ad_entity'];
   $settings = $ad_entity->getThirdPartySettings('ad_entity_generic');
 
@@ -51,10 +55,10 @@ function ad_entity_generic_page_attachments(array &$attachments) {
   // placed into the HTML head. On admin pages though, we most
   // probably don't need the library. It would still be loaded
   // if an ad is being included directly on the page.
-  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
+  /** @var AdminContext $admin_context */
   $admin_context = \Drupal::service('router.admin_context');
   if (!$admin_context->isAdminRoute()) {
-    /** @var \Drupal\ad_entity\AdEntityUsage $usage */
+    /** @var AdEntityUsage $usage */
     $usage = \Drupal::service('ad_entity.usage');
     $used_view_plugins = $usage->getCurrentlyUsedAdViewPlugins();
     if (!empty($used_view_plugins['generic'])) {
@@ -70,7 +74,7 @@ function ad_entity_generic_page_attachments(array &$attachments) {
     return;
   }
 
-  /** @var \Drupal\ad_entity\Plugin\AdContextManager $context_manager */
+  /** @var AdContextManager $context_manager */
   $context_manager = \Drupal::service('ad_entity.context_manager');
   $script_content = 'window.' . $js_variable . '=window.' . $js_variable . '||[];';
 
diff --git a/modules/ad_entity_test/ad_entity_test.install b/modules/ad_entity_test/ad_entity_test.install
index 1ddb43e..c055bfb 100644
--- a/modules/ad_entity_test/ad_entity_test.install
+++ b/modules/ad_entity_test/ad_entity_test.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\ad_entity\AdEntityServices;
 /**
  * @file
  * Advertising Entity: Tests install file.
@@ -12,7 +13,7 @@ function ad_entity_test_install() {
   // Clear cached plugin definitions from ad_entity services
   // to include any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
@@ -25,7 +26,7 @@ function ad_entity_test_uninstall() {
   // Clear cached plugin definitions from ad_entity services
   // to remove any definition by this module.
   if (\Drupal::hasService('ad_entity')) {
-    /** @var \Drupal\ad_entity\AdEntityServices $ad_entity_services */
+    /** @var AdEntityServices $ad_entity_services */
     $ad_entity_services = \Drupal::service('ad_entity');
     $ad_entity_services->clearCachedDefinitions();
   }
diff --git a/src/AdDisplayHtmlRouteProvider.php b/src/AdDisplayHtmlRouteProvider.php
index 657e59f..3f57e5f 100644
--- a/src/AdDisplayHtmlRouteProvider.php
+++ b/src/AdDisplayHtmlRouteProvider.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\Routing\AdminHtmlRouteProvider;
 use Symfony\Component\Routing\Route;
@@ -52,10 +53,10 @@ class AdDisplayHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -63,7 +64,7 @@ class AdDisplayHtmlRouteProvider extends AdminHtmlRouteProvider {
       $entity_type_id = $entity_type->id();
       $route = new Route($entity_type->getLinkTemplate('collection'));
 
-      /** @var \Drupal\Core\StringTranslation\TranslatableMarkup $label */
+      /** @var TranslatableMarkup $label */
       $label = $entity_type->getCollectionLabel();
       $route
         ->setDefaults([
diff --git a/src/AdDisplayViewBuilder.php b/src/AdDisplayViewBuilder.php
index d5029fb..9e05306 100644
--- a/src/AdDisplayViewBuilder.php
+++ b/src/AdDisplayViewBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity;
 
+use Drupal\ad_entity\Entity\AdDisplayInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Theme\ThemeManagerInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -19,21 +20,21 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
   /**
    * The theme manager service.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
 
   /**
    * The storage for Advertising entities.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $adEntityStorage;
 
   /**
    * The view builder for Advertising entities.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $adEntityViewBuilder;
 
@@ -53,7 +54,7 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
   /**
    * Get the theme manager.
    *
-   * @return \Drupal\Core\Theme\ThemeManagerInterface
+   * @return ThemeManagerInterface
    *   The theme manager.
    */
   public function getThemeManager() {
@@ -63,7 +64,7 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
   /**
    * Set the theme manager.
    *
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager to set.
    *
    * @return \Drupal\ad_entity\AdDisplayViewBuilder
@@ -77,7 +78,7 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
   /**
    * Get the storage for Advertising entities.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   The storage object.
    */
   public function getAdEntityStorage() {
@@ -87,7 +88,7 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
   /**
    * Set the storage for Advertising entities.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The storage for Advertising entities.
    *
    * @return \Drupal\ad_entity\AdDisplayViewBuilder
@@ -101,7 +102,7 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
   /**
    * Get the view builder for Advertising entities.
    *
-   * @return \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @return EntityViewBuilderInterface
    *   The view builder for Advertising entities.
    */
   public function getAdEntityViewBuilder() {
@@ -111,7 +112,7 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
   /**
    * Set the view builder for Advertising entities.
    *
-   * @param \Drupal\Core\Entity\EntityViewBuilderInterface $view_builder
+   * @param EntityViewBuilderInterface $view_builder
    *   The view builder for Advertising entities.
    *
    * @return \Drupal\ad_entity\AdDisplayViewBuilder
@@ -131,7 +132,7 @@ class AdDisplayViewBuilder extends EntityViewBuilder {
    * {@inheritdoc}
    */
   public function view(EntityInterface $entity, $view_mode = 'default', $langcode = NULL) {
-    /** @var \Drupal\ad_entity\Entity\AdDisplayInterface $entity */
+    /** @var AdDisplayInterface $entity */
     // @see AdEntityViewBuilder::view() why no cache keys are being used.
     $build = [
       '#cache' => [
diff --git a/src/AdEntityHtmlRouteProvider.php b/src/AdEntityHtmlRouteProvider.php
index fba0dcc..060c9ca 100644
--- a/src/AdEntityHtmlRouteProvider.php
+++ b/src/AdEntityHtmlRouteProvider.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\Routing\AdminHtmlRouteProvider;
 use Symfony\Component\Routing\Route;
@@ -32,10 +33,10 @@ class AdEntityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ -43,7 +44,7 @@ class AdEntityHtmlRouteProvider extends AdminHtmlRouteProvider {
       $entity_type_id = $entity_type->id();
       $route = new Route($entity_type->getLinkTemplate('collection'));
 
-      /** @var \Drupal\Core\StringTranslation\TranslatableMarkup $label */
+      /** @var TranslatableMarkup $label */
       $label = $entity_type->getCollectionLabel();
       $route
         ->setDefaults([
diff --git a/src/AdEntityServices.php b/src/AdEntityServices.php
index e314dd2..fb3af37 100644
--- a/src/AdEntityServices.php
+++ b/src/AdEntityServices.php
@@ -17,21 +17,21 @@ class AdEntityServices implements EntityHandlerInterface {
   /**
    * The Advertising view manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdViewManager
+   * @var AdViewManager
    */
   protected $viewManager;
 
   /**
    * The Advertising type manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdTypeManager
+   * @var AdTypeManager
    */
   protected $typeManager;
 
   /**
    * The Advertising context manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdContextManager
+   * @var AdContextManager
    */
   protected $contextManager;
 
@@ -45,7 +45,7 @@ class AdEntityServices implements EntityHandlerInterface {
   /**
    * Get the Advertising view manager.
    *
-   * @return \Drupal\ad_entity\Plugin\AdViewManager
+   * @return AdViewManager
    *   The view manager.
    */
   public function getViewManager() {
@@ -55,7 +55,7 @@ class AdEntityServices implements EntityHandlerInterface {
   /**
    * Set the Advertising view manager.
    *
-   * @param \Drupal\ad_entity\Plugin\AdViewManager $view_manager
+   * @param AdViewManager $view_manager
    *   The view manager.
    *
    * @return \Drupal\ad_entity\AdEntityServices
@@ -69,7 +69,7 @@ class AdEntityServices implements EntityHandlerInterface {
   /**
    * Get the Advertising type manager.
    *
-   * @return \Drupal\ad_entity\Plugin\AdTypeManager
+   * @return AdTypeManager
    *   The type manager.
    */
   public function getTypeManager() {
@@ -79,7 +79,7 @@ class AdEntityServices implements EntityHandlerInterface {
   /**
    * Set the Advertising type manager.
    *
-   * @param \Drupal\ad_entity\Plugin\AdTypeManager $type_manager
+   * @param AdTypeManager $type_manager
    *   The type manager.
    *
    * @return \Drupal\ad_entity\AdEntityServices
@@ -93,7 +93,7 @@ class AdEntityServices implements EntityHandlerInterface {
   /**
    * Get the Advertising context manager.
    *
-   * @return \Drupal\ad_entity\Plugin\AdContextManager
+   * @return AdContextManager
    *   The context manager.
    */
   public function getContextManager() {
@@ -103,7 +103,7 @@ class AdEntityServices implements EntityHandlerInterface {
   /**
    * Set the Advertising context manager.
    *
-   * @param \Drupal\ad_entity\Plugin\AdContextManager $context_manager
+   * @param AdContextManager $context_manager
    *   The context manager.
    *
    * @return \Drupal\ad_entity\AdEntityServices
diff --git a/src/AdEntityUsage.php b/src/AdEntityUsage.php
index 7f15d17..fe72d1b 100644
--- a/src/AdEntityUsage.php
+++ b/src/AdEntityUsage.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ad_entity;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\ad_entity\Entity\AdEntityInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ -15,32 +17,32 @@ class AdEntityUsage {
   /**
    * The storage of Advertising entities.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityStorage;
 
   /**
    * The services commonly used by Advertising entities.
    *
-   * @var \Drupal\ad_entity\AdEntityServices
+   * @var AdEntityServices
    */
   protected $services;
 
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * AdEntityUsage constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\ad_entity\AdEntityServices $ad_entity_services
+   * @param AdEntityServices $ad_entity_services
    *   The services commonly used by Advertising entities.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, AdEntityServices $ad_entity_services, CacheBackendInterface $cache) {
@@ -78,7 +80,7 @@ class AdEntityUsage {
    *   The property key of the Advertising entities.
    * @param string $cid
    *   The cache key to use.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The corresponding plugin manager.
    *
    * @return array
@@ -100,7 +102,7 @@ class AdEntityUsage {
 
     // @todo Use an iterator or generator once
     // https://www.drupal.org/project/drupal/issues/2577417 is in.
-    /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+    /** @var AdEntityInterface $ad_entity */
     foreach ($this->entityStorage->loadMultiple() as $ad_entity) {
       if ($plugin_id = $ad_entity->get($key)) {
         if (isset($used_plugins[$plugin_id])) {
diff --git a/src/AdEntityViewBuilder.php b/src/AdEntityViewBuilder.php
index b06656b..caadd98 100644
--- a/src/AdEntityViewBuilder.php
+++ b/src/AdEntityViewBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity;
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
 use Drupal\Core\Entity\EntityViewBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Cache\Cache;
@@ -20,7 +21,7 @@ class AdEntityViewBuilder extends EntityViewBuilder {
    * {@inheritdoc}
    */
   public function view(EntityInterface $entity, $view_mode = '["any"]', $langcode = NULL) {
-    /** @var \Drupal\ad_entity\Entity\AdEntityInterface $entity */
+    /** @var AdEntityInterface $entity */
     if ($view_mode == 'default' || $view_mode == 'full') {
       $view_mode = '["any"]';
     }
diff --git a/src/Annotation/AdContext.php b/src/Annotation/AdContext.php
index cc00973..eafea0e 100755
--- a/src/Annotation/AdContext.php
+++ b/src/Annotation/AdContext.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class AdContext extends Plugin {
   /**
    * The label of the Advertising context.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/AdType.php b/src/Annotation/AdType.php
index bdd51b6..179c5c7 100755
--- a/src/Annotation/AdType.php
+++ b/src/Annotation/AdType.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class AdType extends Plugin {
   /**
    * The label of the Advertising type.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/AdView.php b/src/Annotation/AdView.php
index b1bc493..04231db 100755
--- a/src/Annotation/AdView.php
+++ b/src/Annotation/AdView.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class AdView extends Plugin {
   /**
    * The label of the Advertising view handler.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Controller/AdDisplayController.php b/src/Controller/AdDisplayController.php
index a8e29ac..350b2c8 100644
--- a/src/Controller/AdDisplayController.php
+++ b/src/Controller/AdDisplayController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Controller;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
@@ -25,7 +26,7 @@ class AdDisplayController implements ContainerInjectionInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -39,21 +40,21 @@ class AdDisplayController implements ContainerInjectionInterface {
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
 
   /**
    * The theme initialization logic provider.
    *
-   * @var \Drupal\Core\Theme\ThemeInitializationInterface
+   * @var ThemeInitializationInterface
    */
   protected $themeInitialization;
 
@@ -62,13 +63,13 @@ class AdDisplayController implements ContainerInjectionInterface {
    *
    * @param string $default_theme
    *   The system default theme name.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
-   * @param \Drupal\Core\Theme\ThemeInitializationInterface $theme_initialization
+   * @param ThemeInitializationInterface $theme_initialization
    *   The theme initialization logic provider.
    */
   public function __construct($default_theme, EntityTypeManagerInterface $entity_type_manager, ThemeHandlerInterface $theme_handler, ThemeManagerInterface $theme_manager, ThemeInitializationInterface $theme_initialization) {
@@ -83,7 +84,7 @@ class AdDisplayController implements ContainerInjectionInterface {
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+    /** @var ConfigFactoryInterface $config_factory */
     $config_factory = $container->get('config.factory');
     $default_theme = $config_factory->get('system.theme') ?
       $config_factory->get('system.theme')->get('default') : 'stable';
@@ -99,7 +100,7 @@ class AdDisplayController implements ContainerInjectionInterface {
   /**
    * Controller callback for displaying Advertisement.
    *
-   * @param \Drupal\ad_entity\Entity\AdDisplayInterface $ad_display
+   * @param AdDisplayInterface $ad_display
    *   The display config.
    *
    * @return array
@@ -130,7 +131,7 @@ class AdDisplayController implements ContainerInjectionInterface {
   /**
    * Switches the currently active theme for the given display.
    *
-   * @param \Drupal\ad_entity\Entity\AdDisplayInterface $ad_display
+   * @param AdDisplayInterface $ad_display
    *   The display config to switch the theme for.
    */
   protected function switchThemeFor(AdDisplayInterface $ad_display) {
diff --git a/src/Entity/AdDisplayInterface.php b/src/Entity/AdDisplayInterface.php
index 7a62641..86887c2 100644
--- a/src/Entity/AdDisplayInterface.php
+++ b/src/Entity/AdDisplayInterface.php
@@ -13,7 +13,7 @@ interface AdDisplayInterface extends ConfigEntityInterface {
   /**
    * Get the Advertising entities to show as variants for the given theme.
    *
-   * @param \Drupal\Core\Theme\ActiveTheme $theme
+   * @param ActiveTheme $theme
    *   The theme as ActiveTheme object.
    *
    * @return array
diff --git a/src/Entity/AdEntity.php b/src/Entity/AdEntity.php
index 5c10c4d..59d3cb2 100644
--- a/src/Entity/AdEntity.php
+++ b/src/Entity/AdEntity.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\ad_entity\Entity;
 
+use Drupal\ad_entity\Plugin\AdViewInterface;
+use Drupal\ad_entity\Plugin\AdTypeInterface;
+use Drupal\ad_entity\AdEntityServices;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\ad_entity\TargetingCollection;
@@ -93,21 +97,21 @@ class AdEntity extends ConfigEntityBase implements AdEntityInterface {
   /**
    * An instance of the view handler plugin.
    *
-   * @var \Drupal\ad_entity\Plugin\AdViewInterface
+   * @var AdViewInterface
    */
   protected $viewPlugin;
 
   /**
    * An instance of the type plugin.
    *
-   * @var \Drupal\ad_entity\Plugin\AdTypeInterface
+   * @var AdTypeInterface
    */
   protected $typePlugin;
 
   /**
    * The handler which delivers any required service.
    *
-   * @var \Drupal\ad_entity\AdEntityServices
+   * @var AdEntityServices
    */
   protected $services;
 
@@ -121,7 +125,7 @@ class AdEntity extends ConfigEntityBase implements AdEntityInterface {
   /**
    * Get the handler which delivers any required service.
    *
-   * @return \Drupal\ad_entity\AdEntityServices
+   * @return AdEntityServices
    *   The services handler.
    */
   protected function services() {
@@ -138,7 +142,7 @@ class AdEntity extends ConfigEntityBase implements AdEntityInterface {
   public function getCacheMaxAge() {
     $context_manager = $this->services()->getContextManager();
     foreach ($context_manager->getInvolvedEntities() as $entities) {
-      /** @var \Drupal\Core\Entity\EntityInterface $entity */
+      /** @var EntityInterface $entity */
       foreach ($entities as $entity) {
         if ($entity !== $this) {
           $this->cacheMaxAge = Cache::mergeMaxAges($entity->getCacheMaxAge(), $this->cacheMaxAge);
@@ -157,7 +161,7 @@ class AdEntity extends ConfigEntityBase implements AdEntityInterface {
 
     $context_manager = $this->services()->getContextManager();
     foreach ($context_manager->getInvolvedEntities() as $entities) {
-      /** @var \Drupal\Core\Entity\EntityInterface $entity */
+      /** @var EntityInterface $entity */
       foreach ($entities as $entity) {
         if ($entity !== $this) {
           $this->addCacheContexts($entity->getCacheContexts());
@@ -176,7 +180,7 @@ class AdEntity extends ConfigEntityBase implements AdEntityInterface {
 
     $context_manager = $this->services()->getContextManager();
     foreach ($context_manager->getInvolvedEntities() as $entities) {
-      /** @var \Drupal\Core\Entity\EntityInterface $entity */
+      /** @var EntityInterface $entity */
       foreach ($entities as $entity) {
         if ($entity !== $this) {
           $this->addCacheTags($entity->getCacheTags());
diff --git a/src/Entity/AdEntityInterface.php b/src/Entity/AdEntityInterface.php
index c4f3224..9d92abb 100644
--- a/src/Entity/AdEntityInterface.php
+++ b/src/Entity/AdEntityInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\ad_entity\Entity;
 
+use Drupal\ad_entity\Plugin\AdTypeInterface;
+use Drupal\ad_entity\Plugin\AdViewInterface;
+use Drupal\ad_entity\TargetingCollection;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -12,7 +15,7 @@ interface AdEntityInterface extends ConfigEntityInterface {
   /**
    * Get the corresponding Advertisement type plugin.
    *
-   * @return \Drupal\ad_entity\Plugin\AdTypeInterface
+   * @return AdTypeInterface
    *   An instance of the Advertisement type plugin.
    */
   public function getTypePlugin();
@@ -20,7 +23,7 @@ interface AdEntityInterface extends ConfigEntityInterface {
   /**
    * Get the corresponding Advertisement view handler plugin.
    *
-   * @return \Drupal\ad_entity\Plugin\AdViewInterface
+   * @return AdViewInterface
    *   An instance of the Advertisement view plugin handler.
    */
   public function getViewPlugin();
@@ -59,7 +62,7 @@ interface AdEntityInterface extends ConfigEntityInterface {
    * This is due to the fact that context data is based on arrays,
    * which all might be added, removed or changed in arbitrary ways.
    *
-   * @return \Drupal\ad_entity\TargetingCollection
+   * @return TargetingCollection
    *   The targeting collection from the backend context data.
    */
   public function getTargetingFromContextData();
diff --git a/src/Form/AdContextElementBuilder.php b/src/Form/AdContextElementBuilder.php
index 453ea16..0e47d42 100644
--- a/src/Form/AdContextElementBuilder.php
+++ b/src/Form/AdContextElementBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Form;
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
 use Drupal\ad_entity\Plugin\AdContextManager;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -35,21 +36,21 @@ class AdContextElementBuilder {
   /**
    * The Advertising context manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdContextManager
+   * @var AdContextManager
    */
   protected $contextManager;
 
   /**
    * The storage of Advertising entities.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $adEntityStorage;
 
   /**
    * Creates a new instance of the element builder.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The service container.
    *
    * @return \Drupal\ad_entity\Form\AdContextElementBuilder
@@ -62,9 +63,9 @@ class AdContextElementBuilder {
   /**
    * AdContextElementBuilder constructor.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $ad_entity_storage
+   * @param EntityStorageInterface $ad_entity_storage
    *   The storage of Advertising entities.
-   * @param \Drupal\ad_entity\Plugin\AdContextManager $ad_context_manager
+   * @param AdContextManager $ad_context_manager
    *   The Advertising context manager.
    */
   public function __construct(EntityStorageInterface $ad_entity_storage, AdContextManager $ad_context_manager) {
@@ -80,7 +81,7 @@ class AdContextElementBuilder {
    *   The form element array.
    * @param array &$form
    *   The form array where the context is being configured.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -116,7 +117,7 @@ class AdContextElementBuilder {
       '#weight' => 20,
     ];
 
-    /** @var \Drupal\ad_entity\Entity\AdEntityInterface[] $entities */
+    /** @var AdEntityInterface[] $entities */
     $entities = $this->adEntityStorage->loadMultiple();
     $options = [];
     foreach ($entities as $entity) {
diff --git a/src/Form/AdDisplayForm.php b/src/Form/AdDisplayForm.php
index b64e9d6..fd02fe3 100644
--- a/src/Form/AdDisplayForm.php
+++ b/src/Form/AdDisplayForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ad_entity\Form;
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\ad_entity\Entity\AdDisplayInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,7 +20,7 @@ class AdDisplayForm extends EntityForm {
   /**
    * The storage for Advertising entities.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $adEntityStorage;
 
@@ -32,14 +34,14 @@ class AdDisplayForm extends EntityForm {
   /**
    * A list of all existent Advertising entities.
    *
-   * @var \Drupal\ad_entity\Entity\AdEntityInterface[]
+   * @var AdEntityInterface[]
    */
   protected $adEntities;
 
   /**
    * Constructor method.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $ad_entity_storage
+   * @param EntityStorageInterface $ad_entity_storage
    *   The storage for Advertising entities.
    * @param mixed $theme_breakpoints_js
    *   (Optional) The theme breakpoints js manager, if available.
@@ -80,7 +82,7 @@ class AdDisplayForm extends EntityForm {
    */
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
-    /** @var \Drupal\ad_entity\Entity\AdDisplayInterface $ad_display */
+    /** @var AdDisplayInterface $ad_display */
     $ad_display = $this->entity;
 
     $form['label'] = [
@@ -228,7 +230,7 @@ class AdDisplayForm extends EntityForm {
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $theme_settings = $form_state->getValue('theme') ?: [];
-    /** @var \Drupal\ad_entity\Entity\AdDisplayInterface $ad_display */
+    /** @var AdDisplayInterface $ad_display */
     $ad_display = $this->entity;
 
     $variants = $ad_display->get('variants');
diff --git a/src/Form/AdEntityForm.php b/src/Form/AdEntityForm.php
index 05873bc..c216c47 100755
--- a/src/Form/AdEntityForm.php
+++ b/src/Form/AdEntityForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\ad_entity\Form;
 
+use Drupal\Core\Form\FormBuilder;
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\ad_entity\Plugin\AdTypeInterface;
+use Drupal\ad_entity\Plugin\AdViewInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Form\FormBuilderInterface;
@@ -19,32 +23,32 @@ class AdEntityForm extends EntityForm {
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;
 
   /**
    * The Advertising type manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdTypeManager
+   * @var AdTypeManager
    */
   protected $typeManager;
 
   /**
    * The Advertising view manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdViewManager
+   * @var AdViewManager
    */
   protected $viewManager;
 
   /**
    * Constructor method.
    *
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder.
-   * @param \Drupal\ad_entity\Plugin\AdTypeManager $ad_type_manager
+   * @param AdTypeManager $ad_type_manager
    *   The Advertising type manager.
-   * @param \Drupal\ad_entity\Plugin\AdViewManager $ad_view_manager
+   * @param AdViewManager $ad_view_manager
    *   The Advertising view manager.
    */
   public function __construct(FormBuilderInterface $form_builder, AdTypeManager $ad_type_manager, AdViewManager $ad_view_manager) {
@@ -84,7 +88,7 @@ class AdEntityForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+    /** @var AdEntityInterface $ad_entity */
     $ad_entity = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
@@ -133,7 +137,7 @@ class AdEntityForm extends EntityForm {
       '#attributes' => ['id' => 'third-party-config'],
     ];
     if (($type_id = $form_state->getValue('type_plugin_id')) || ($type_id = $ad_entity->get('type_plugin_id'))) {
-      /** @var \Drupal\ad_entity\Plugin\AdTypeInterface $type */
+      /** @var AdTypeInterface $type */
       if ($type = $this->typeManager->createInstance($type_id)) {
         // Get all allowed view handler definitions for this type.
         $view_definitions = $this->viewManager->getDefinitions();
@@ -208,18 +212,18 @@ class AdEntityForm extends EntityForm {
   public function validateForm(array &$form, FormStateInterface $form_state) {
     parent::validateForm($form, $form_state);
 
-    /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+    /** @var AdEntityInterface $ad_entity */
     $ad_entity = $this->entity;
     if ($type_id = $form_state->getValue('type_plugin_id')) {
       if ($this->typeManager->hasDefinition($type_id)) {
-        /** @var \Drupal\ad_entity\Plugin\AdTypeInterface $type */
+        /** @var AdTypeInterface $type */
         $type = $this->typeManager->createInstance($type_id);
         $type->entityConfigValidate($form, $form_state, $ad_entity);
       }
     }
     if ($view_id = $form_state->getValue('view_plugin_id')) {
       if ($this->viewManager->hasDefinition($view_id)) {
-        /** @var \Drupal\ad_entity\Plugin\AdViewInterface $view */
+        /** @var AdViewInterface $view */
         $view = $this->viewManager->createInstance($view_id);
         $view->entityConfigValidate($form, $form_state, $ad_entity);
       }
@@ -232,18 +236,18 @@ class AdEntityForm extends EntityForm {
   public function submitForm(array &$form, FormStateInterface $form_state) {
     parent::submitForm($form, $form_state);
 
-    /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
+    /** @var AdEntityInterface $ad_entity */
     $ad_entity = $this->entity;
     if ($type_id = $form_state->getValue('type_plugin_id')) {
       if ($this->typeManager->hasDefinition($type_id)) {
-        /** @var \Drupal\ad_entity\Plugin\AdTypeInterface $type */
+        /** @var AdTypeInterface $type */
         $type = $this->typeManager->createInstance($type_id);
         $type->entityConfigSubmit($form, $form_state, $ad_entity);
       }
     }
     if ($view_id = $form_state->getValue('view_plugin_id')) {
       if ($this->viewManager->hasDefinition($view_id)) {
-        /** @var \Drupal\ad_entity\Plugin\AdViewInterface $view */
+        /** @var AdViewInterface $view */
         $view = $this->viewManager->createInstance($view_id);
         $view->entityConfigSubmit($form, $form_state, $ad_entity);
       }
@@ -277,7 +281,7 @@ class AdEntityForm extends EntityForm {
    *
    * @param array &$form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current form state.
    *
    * @return array
diff --git a/src/Form/GlobalSettingsForm.php b/src/Form/GlobalSettingsForm.php
index 41f747c..aec7258 100644
--- a/src/Form/GlobalSettingsForm.php
+++ b/src/Form/GlobalSettingsForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ad_entity\Form;
 
+use Drupal\Core\Config\Config;
+use Drupal\ad_entity\Plugin\AdTypeInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -19,34 +21,34 @@ class GlobalSettingsForm extends ConfigFormBase {
   /**
    * The Advertising type manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdTypeManager
+   * @var AdTypeManager
    */
   protected $typeManager;
 
   /**
    * The context form element builder.
    *
-   * @var \Drupal\ad_entity\Form\AdContextElementBuilder
+   * @var AdContextElementBuilder
    */
   protected $contextElementBuilder;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\ad_entity\Plugin\AdTypeManager $ad_type_manager
+   * @param AdTypeManager $ad_type_manager
    *   The Advertising type manager.
-   * @param \Drupal\ad_entity\Form\AdContextElementBuilder $context_element_builder
+   * @param AdContextElementBuilder $context_element_builder
    *   The context form element builder.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AdTypeManager $ad_type_manager, AdContextElementBuilder $context_element_builder, ModuleHandlerInterface $module_handler) {
@@ -86,7 +88,7 @@ class GlobalSettingsForm extends ConfigFormBase {
   /**
    * Get the mutable config object which belongs to this form.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   The mutable config object.
    */
   public function getConfig() {
@@ -413,7 +415,7 @@ class GlobalSettingsForm extends ConfigFormBase {
       ];
 
       foreach ($type_ids as $type_id) {
-        /** @var \Drupal\ad_entity\Plugin\AdTypeInterface $type */
+        /** @var AdTypeInterface $type */
         $type = $this->typeManager->createInstance($type_id);
         $label = $type->getPluginDefinition()['label'];
         $form[$type_id] = [
@@ -434,7 +436,7 @@ class GlobalSettingsForm extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -453,7 +455,7 @@ class GlobalSettingsForm extends ConfigFormBase {
 
     $type_ids = array_keys($this->typeManager->getDefinitions());
     foreach ($type_ids as $type_id) {
-      /** @var \Drupal\ad_entity\Plugin\AdTypeInterface $type */
+      /** @var AdTypeInterface $type */
       $type = $this->typeManager->createInstance($type_id);
       $type->globalSettingsValidate($form, $form_state, $config);
     }
@@ -555,7 +557,7 @@ class GlobalSettingsForm extends ConfigFormBase {
         $config->set($type_id, $values);
       }
 
-      /** @var \Drupal\ad_entity\Plugin\AdTypeInterface $type */
+      /** @var AdTypeInterface $type */
       $type = $this->typeManager->createInstance($type_id);
       $type->globalSettingsSubmit($form, $form_state, $config);
     }
diff --git a/src/Plugin/AdContextBase.php b/src/Plugin/AdContextBase.php
index 4095aea..ce1ed1d 100755
--- a/src/Plugin/AdContextBase.php
+++ b/src/Plugin/AdContextBase.php
@@ -16,7 +16,7 @@ abstract class AdContextBase extends PluginBase implements AdContextInterface, C
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $stringTranslation;
 
@@ -61,7 +61,7 @@ abstract class AdContextBase extends PluginBase implements AdContextInterface, C
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\StringTranslation\TranslationManager $translation_manager
+   * @param TranslationManager $translation_manager
    *   The string translation service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TranslationManager $translation_manager) {
diff --git a/src/Plugin/AdContextInterface.php b/src/Plugin/AdContextInterface.php
index 9d9b19f..7b238d5 100755
--- a/src/Plugin/AdContextInterface.php
+++ b/src/Plugin/AdContextInterface.php
@@ -17,7 +17,7 @@ interface AdContextInterface extends PluginInspectionInterface {
    *   Current values of the context settings.
    * @param array $form
    *   The form where the context is being configured.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
    *
    * @return array
diff --git a/src/Plugin/AdContextManager.php b/src/Plugin/AdContextManager.php
index a375ac5..65b3076 100755
--- a/src/Plugin/AdContextManager.php
+++ b/src/Plugin/AdContextManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ad_entity\Plugin;
 
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Field\FormatterInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ -30,7 +32,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
   /**
    * A list of instantiated context plugins.
    *
-   * @var \Drupal\ad_entity\Plugin\AdContextInterface[]
+   * @var AdContextInterface[]
    */
   protected $contextPlugins;
 
@@ -58,14 +60,14 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The field formatter plugin manager.
    *
-   * @var \Drupal\Core\Field\FormatterPluginManager
+   * @var FormatterPluginManager
    */
   protected $formatterManager;
 
@@ -75,13 +77,13 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Field\FormatterPluginManager $formatter_manager
+   * @param FormatterPluginManager $formatter_manager
    *   The field formatter plugin manager.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, EntityTypeManagerInterface $entity_type_manager, FormatterPluginManager $formatter_manager) {
@@ -111,7 +113,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
    * @param array $configuration
    *   (Optional) Bypasses in-memory caching if not empty.
    *
-   * @return \Drupal\ad_entity\Plugin\AdContextInterface
+   * @return AdContextInterface
    *   The instance of the context plugin.
    */
   public function loadContextPlugin($plugin_id, array $configuration = []) {
@@ -148,7 +150,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
    * Other components might need to know which entities were involved
    * during the delivering of Advertising context.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity which has provided Advertising context.
    */
   public function addInvolvedEntity(EntityInterface $entity) {
@@ -158,7 +160,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
   /**
    * Check whether the entity is involved for providing Advertising context.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check for.
    *
    * @return bool
@@ -266,7 +268,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
   /**
    * Resets the context for the entity from the given route match (when given).
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    */
   public function resetContextDataForRoute(RouteMatchInterface $route_match) {
@@ -293,7 +295,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
    * This might be useful when displaying the given entity with ads,
    * which should only have context corresponding to this entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity for which to reset the context data.
    */
   public function resetContextDataForEntity(EntityInterface $entity) {
@@ -330,7 +332,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
    * If and how Advertising context is being delivered, depends on the
    * (already configured) display options of the entity's fields.
    *
-   * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The entity from which to fetch context data.
    * @param string|array $display_options
    *   (Optional) Can be either the name of a view mode which has properly
@@ -349,14 +351,14 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
     if (is_string($display_options)) {
       // Fetch the configured display options for this view mode.
       $display_storage = $this->entityTypeManager->getStorage('entity_view_display');
-      /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display */
+      /** @var EntityViewDisplayInterface $display */
       $display = $display_storage->load($entity->getEntityTypeId() . '.' . $entity->bundle() . '.' . $display_options);
       foreach ($context_fields as $field_name => $definition) {
         if ($configured_options = $display->getComponent($field_name)) {
           $configured_options['settings']['appliance_mode'] = 'backend';
           $configured_options['field_definition'] = $definition;
           $configured_options['view_mode'] = $display_options;
-          /** @var \Drupal\Core\Field\FormatterInterface $formatter */
+          /** @var FormatterInterface $formatter */
           $formatter = $this->formatterManager
             ->createInstance($configured_options['type'], $configured_options);
           if (($item_list = $entity->get($field_name)) && ($language = $entity->language())) {
@@ -370,7 +372,7 @@ class AdContextManager extends DefaultPluginManager implements TrustedCallbackIn
         $display_options['settings']['appliance_mode'] = 'backend';
       }
       foreach ($context_fields as $field_name => $definition) {
-        /** @var \Drupal\Core\Field\FormatterInterface $formatter */
+        /** @var FormatterInterface $formatter */
         $formatter = $this->formatterManager
           ->createInstance($display_options['type'], $display_options);
         if (($item_list = $entity->get($field_name)) && ($language = $entity->language())) {
diff --git a/src/Plugin/AdTypeBase.php b/src/Plugin/AdTypeBase.php
index 35a6031..2b185eb 100755
--- a/src/Plugin/AdTypeBase.php
+++ b/src/Plugin/AdTypeBase.php
@@ -18,7 +18,7 @@ abstract class AdTypeBase extends PluginBase implements AdTypeInterface, Contain
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $stringTranslation;
 
@@ -43,7 +43,7 @@ abstract class AdTypeBase extends PluginBase implements AdTypeInterface, Contain
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\StringTranslation\TranslationManager $translation_manager
+   * @param TranslationManager $translation_manager
    *   The string translation service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TranslationManager $translation_manager) {
diff --git a/src/Plugin/AdTypeInterface.php b/src/Plugin/AdTypeInterface.php
index 95f01a4..50ecd5a 100755
--- a/src/Plugin/AdTypeInterface.php
+++ b/src/Plugin/AdTypeInterface.php
@@ -17,9 +17,9 @@ interface AdTypeInterface extends PluginInspectionInterface {
    *
    * @param array $form
    *   The global settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration object.
    *
    * @return array
@@ -32,9 +32,9 @@ interface AdTypeInterface extends PluginInspectionInterface {
    *
    * @param array &$form
    *   The global settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration object.
    */
   public function globalSettingsValidate(array &$form, FormStateInterface $form_state, Config $config);
@@ -44,9 +44,9 @@ interface AdTypeInterface extends PluginInspectionInterface {
    *
    * @param array &$form
    *   The global settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration object.
    */
   public function globalSettingsSubmit(array &$form, FormStateInterface $form_state, Config $config);
@@ -56,9 +56,9 @@ interface AdTypeInterface extends PluginInspectionInterface {
    *
    * @param array $form
    *   The entity form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity
+   * @param AdEntityInterface $ad_entity
    *   The Advertising entity.
    *
    * @return array
@@ -71,9 +71,9 @@ interface AdTypeInterface extends PluginInspectionInterface {
    *
    * @param array &$form
    *   The entity form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity
+   * @param AdEntityInterface $ad_entity
    *   The Advertising entity.
    */
   public function entityConfigValidate(array &$form, FormStateInterface $form_state, AdEntityInterface $ad_entity);
@@ -83,9 +83,9 @@ interface AdTypeInterface extends PluginInspectionInterface {
    *
    * @param array &$form
    *   The entity form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity
+   * @param AdEntityInterface $ad_entity
    *   The Advertising entity.
    */
   public function entityConfigSubmit(array &$form, FormStateInterface $form_state, AdEntityInterface $ad_entity);
diff --git a/src/Plugin/AdTypeManager.php b/src/Plugin/AdTypeManager.php
index a548f71..78f761c 100755
--- a/src/Plugin/AdTypeManager.php
+++ b/src/Plugin/AdTypeManager.php
@@ -17,9 +17,9 @@ class AdTypeManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/AdViewBase.php b/src/Plugin/AdViewBase.php
index 8f69fac..1fc5c34 100755
--- a/src/Plugin/AdViewBase.php
+++ b/src/Plugin/AdViewBase.php
@@ -17,7 +17,7 @@ abstract class AdViewBase extends PluginBase implements AdViewInterface, Contain
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $stringTranslation;
 
@@ -42,7 +42,7 @@ abstract class AdViewBase extends PluginBase implements AdViewInterface, Contain
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\StringTranslation\TranslationManager $translation_manager
+   * @param TranslationManager $translation_manager
    *   The string translation service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TranslationManager $translation_manager) {
diff --git a/src/Plugin/AdViewInterface.php b/src/Plugin/AdViewInterface.php
index fe42e7d..1337d00 100755
--- a/src/Plugin/AdViewInterface.php
+++ b/src/Plugin/AdViewInterface.php
@@ -14,7 +14,7 @@ interface AdViewInterface extends PluginInspectionInterface {
   /**
    * Builds a renderable array for viewing the given Advertising entity.
    *
-   * @param \Drupal\ad_entity\Entity\AdEntityInterface $entity
+   * @param AdEntityInterface $entity
    *   The Advertising entity being viewed.
    *
    * @return array
@@ -27,9 +27,9 @@ interface AdViewInterface extends PluginInspectionInterface {
    *
    * @param array $form
    *   The entity form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity
+   * @param AdEntityInterface $ad_entity
    *   The Advertising entity.
    *
    * @return array
@@ -42,9 +42,9 @@ interface AdViewInterface extends PluginInspectionInterface {
    *
    * @param array &$form
    *   The entity form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity
+   * @param AdEntityInterface $ad_entity
    *   The Advertising entity.
    */
   public function entityConfigValidate(array &$form, FormStateInterface $form_state, AdEntityInterface $ad_entity);
@@ -54,9 +54,9 @@ interface AdViewInterface extends PluginInspectionInterface {
    *
    * @param array &$form
    *   The entity form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The corresponding form state.
-   * @param \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity
+   * @param AdEntityInterface $ad_entity
    *   The Advertising entity.
    */
   public function entityConfigSubmit(array &$form, FormStateInterface $form_state, AdEntityInterface $ad_entity);
diff --git a/src/Plugin/AdViewManager.php b/src/Plugin/AdViewManager.php
index 2bc5d3f..53e8912 100755
--- a/src/Plugin/AdViewManager.php
+++ b/src/Plugin/AdViewManager.php
@@ -17,9 +17,9 @@ class AdViewManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Block/AdDisplayBlock.php b/src/Plugin/Block/AdDisplayBlock.php
index dd508ba..d5740d5 100644
--- a/src/Plugin/Block/AdDisplayBlock.php
+++ b/src/Plugin/Block/AdDisplayBlock.php
@@ -25,14 +25,14 @@ class AdDisplayBlock extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * The storage of Display configs for Advertisement.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $adDisplayStorage;
 
   /**
    * The view builder for Display configs for Advertisement.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $adDisplayViewBuilder;
 
@@ -59,9 +59,9 @@ class AdDisplayBlock extends BlockBase implements ContainerFactoryPluginInterfac
    *   The plugin id.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $ad_display_storage
+   * @param EntityStorageInterface $ad_display_storage
    *   The storage of Display configs for Advertisement.
-   * @param \Drupal\Core\Entity\EntityViewBuilderInterface $ad_display_view_builder
+   * @param EntityViewBuilderInterface $ad_display_view_builder
    *   The view builder for Display configs for Advertisement.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $ad_display_storage, EntityViewBuilderInterface $ad_display_view_builder) {
diff --git a/src/Plugin/Derivative/AdDisplayBlock.php b/src/Plugin/Derivative/AdDisplayBlock.php
index 3c6753e..b6ac728 100644
--- a/src/Plugin/Derivative/AdDisplayBlock.php
+++ b/src/Plugin/Derivative/AdDisplayBlock.php
@@ -15,14 +15,14 @@ class AdDisplayBlock extends DeriverBase implements ContainerDeriverInterface {
   /**
    * The storage of Display configs for Advertisement.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $adDisplayStorage;
 
   /**
    * Constructs a new deriver for Advertising display blocks.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $ad_display_storage
+   * @param EntityStorageInterface $ad_display_storage
    *   The storage of Display configs for Advertisement.
    */
   public function __construct(EntityStorageInterface $ad_display_storage) {
diff --git a/src/Plugin/Field/FieldFormatter/ContextFormatterBase.php b/src/Plugin/Field/FieldFormatter/ContextFormatterBase.php
index 8cd5500..2247828 100644
--- a/src/Plugin/Field/FieldFormatter/ContextFormatterBase.php
+++ b/src/Plugin/Field/FieldFormatter/ContextFormatterBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\TypedData\Plugin\DataType\Map;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -23,35 +24,35 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
   /**
    * The global settings of the ad_entity module.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $globalSettings;
 
   /**
    * The Advertising context manager.
    *
-   * @var \Drupal\ad_entity\Plugin\AdContextManager
+   * @var AdContextManager
    */
   protected $contextManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -91,7 +92,7 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -101,13 +102,13 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\ad_entity\Plugin\AdContextManager $context_manager
+   * @param AdContextManager $context_manager
    *   The Advertising context manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AdContextManager $context_manager, ModuleHandlerInterface $module_handler, Renderer $renderer, AccountInterface $current_user) {
@@ -121,7 +122,7 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
   /**
    * Get the global settings config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The global settings of the ad_entity module.
    */
   public function getGlobalSettings() {
@@ -136,7 +137,7 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
   /**
    * Set the global settings config.
    *
-   * @param \Drupal\Core\Config\ImmutableConfig $global_settings
+   * @param ImmutableConfig $global_settings
    *   The global settings of the ad_entity module.
    */
   public function setGlobalSettings(ImmutableConfig $global_settings) {
@@ -231,7 +232,7 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
   /**
    * Includes the Advertising context from the given items for later appliance.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The list of field items holding Advertising context.
    *
    * @return array
@@ -275,14 +276,14 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
   /**
    * Builds a context render element from the given field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The field item.
    *
    * @return array
    *   The context element as render array.
    */
   protected function buildElementFromItem(FieldItemInterface $item) {
-    /** @var \Drupal\Core\TypedData\Plugin\DataType\Map $context_item */
+    /** @var Map $context_item */
     if ($context_item = $item->get('context')) {
       $id = $context_item->get('context_plugin_id')->getValue();
       if ($id && $this->contextManager->hasDefinition($id)) {
@@ -300,11 +301,11 @@ abstract class ContextFormatterBase extends FormatterBase implements ContainerFa
   /**
    * Adds the given field item to the collection of backend context data.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The field item.
    */
   protected function addItemToContextData(FieldItemInterface $item) {
-    /** @var \Drupal\Core\TypedData\Plugin\DataType\Map $context_item */
+    /** @var Map $context_item */
     if ($context_item = $item->get('context')) {
       $plugin_id = $context_item->get('context_plugin_id')->getValue();
       $settings = $context_item->get('context_settings')->getValue();
diff --git a/src/Plugin/Field/FieldFormatter/EntityWithReferencesContextFormatter.php b/src/Plugin/Field/FieldFormatter/EntityWithReferencesContextFormatter.php
index d065069..d368212 100644
--- a/src/Plugin/Field/FieldFormatter/EntityWithReferencesContextFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/EntityWithReferencesContextFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Entity\FieldableEntityInterface;
 
@@ -28,7 +29,7 @@ class EntityWithReferencesContextFormatter extends ContextFormatterBase {
     foreach ($items->getEntity()->referencedEntities() as $reference) {
       if ($reference instanceof FieldableEntityInterface) {
         $field_definitions = $reference->getFieldDefinitions();
-        /** @var \Drupal\Core\Field\FieldDefinitionInterface $definition */
+        /** @var FieldDefinitionInterface $definition */
         foreach ($field_definitions as $definition) {
           if ($definition->getType() == 'ad_entity_context') {
             $this->renderer->addCacheableDependency($element, $reference);
diff --git a/src/Plugin/Field/FieldFormatter/NodeWithTermsContextFormatter.php b/src/Plugin/Field/FieldFormatter/NodeWithTermsContextFormatter.php
index 5789932..01be035 100644
--- a/src/Plugin/Field/FieldFormatter/NodeWithTermsContextFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/NodeWithTermsContextFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Plugin\Field\FieldFormatter;
 
+use Drupal\taxonomy\TermInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 
@@ -36,10 +37,10 @@ class NodeWithTermsContextFormatter extends TaxonomyContextFormatterBase {
     $element = [];
 
     $aggregated_items = [$items];
-    /** @var \Drupal\taxonomy\TermInterface $term */
+    /** @var TermInterface $term */
     foreach ($this->getTermsForNode($items->getEntity()->id()) as $term) {
       $field_definitions = $term->getFieldDefinitions();
-      /** @var \Drupal\Core\Field\FieldDefinitionInterface $definition */
+      /** @var FieldDefinitionInterface $definition */
       foreach ($field_definitions as $definition) {
         if ($definition->getType() == 'ad_entity_context') {
           $this->renderer->addCacheableDependency($element, $term);
diff --git a/src/Plugin/Field/FieldFormatter/NodeWithTreeAggregationContextFormatter.php b/src/Plugin/Field/FieldFormatter/NodeWithTreeAggregationContextFormatter.php
index 384ce84..11dd625 100644
--- a/src/Plugin/Field/FieldFormatter/NodeWithTreeAggregationContextFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/NodeWithTreeAggregationContextFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Plugin\Field\FieldFormatter;
 
+use Drupal\taxonomy\TermInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 
@@ -36,10 +37,10 @@ class NodeWithTreeAggregationContextFormatter extends TaxonomyContextFormatterBa
     $element = [];
 
     $aggregated_items = [$items];
-    /** @var \Drupal\taxonomy\TermInterface $term */
+    /** @var TermInterface $term */
     foreach ($this->getTermsForNode($items->getEntity()->id()) as $tid => $term) {
       $field_definitions = $term->getFieldDefinitions();
-      /** @var \Drupal\Core\Field\FieldDefinitionInterface $definition */
+      /** @var FieldDefinitionInterface $definition */
       foreach ($field_definitions as $definition) {
         if ($definition->getType() == 'ad_entity_context') {
           // ::loadAllParents() already includes the term itself.
diff --git a/src/Plugin/Field/FieldFormatter/NodeWithTreeOverrideContextFormatter.php b/src/Plugin/Field/FieldFormatter/NodeWithTreeOverrideContextFormatter.php
index 5cf0c2b..f50f721 100644
--- a/src/Plugin/Field/FieldFormatter/NodeWithTreeOverrideContextFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/NodeWithTreeOverrideContextFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ad_entity\Plugin\Field\FieldFormatter;
 
+use Drupal\taxonomy\TermInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 
@@ -36,10 +37,10 @@ class NodeWithTreeOverrideContextFormatter extends TaxonomyContextFormatterBase
     $element = [];
 
     $aggregated_items = [$items];
-    /** @var \Drupal\taxonomy\TermInterface $term */
+    /** @var TermInterface $term */
     foreach ($this->getTermsForNode($items->getEntity()->id()) as $term) {
       $field_definitions = $term->getFieldDefinitions();
-      /** @var \Drupal\Core\Field\FieldDefinitionInterface $definition */
+      /** @var FieldDefinitionInterface $definition */
       foreach ($field_definitions as $definition) {
         if ($definition->getType() == 'ad_entity_context') {
           foreach ($this->termStorage->loadAllParents($term->id()) as $parent) {
diff --git a/src/Plugin/Field/FieldFormatter/TaxonomyContextFormatterBase.php b/src/Plugin/Field/FieldFormatter/TaxonomyContextFormatterBase.php
index beee193..e1fd4b9 100644
--- a/src/Plugin/Field/FieldFormatter/TaxonomyContextFormatterBase.php
+++ b/src/Plugin/Field/FieldFormatter/TaxonomyContextFormatterBase.php
@@ -19,7 +19,7 @@ abstract class TaxonomyContextFormatterBase extends ContextFormatterBase {
   /**
    * The term storage.
    *
-   * @var \Drupal\taxonomy\TermStorageInterface
+   * @var TermStorageInterface
    */
   protected $termStorage;
 
@@ -60,7 +60,7 @@ abstract class TaxonomyContextFormatterBase extends ContextFormatterBase {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -70,15 +70,15 @@ abstract class TaxonomyContextFormatterBase extends ContextFormatterBase {
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\ad_entity\Plugin\AdContextManager $context_manager
+   * @param AdContextManager $context_manager
    *   The Advertising context manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\taxonomy\TermStorageInterface $term_storage
+   * @param TermStorageInterface $term_storage
    *   The term storage.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AdContextManager $context_manager, ModuleHandlerInterface $module_handler, Renderer $renderer, AccountInterface $current_user, TermStorageInterface $term_storage) {
@@ -90,10 +90,10 @@ abstract class TaxonomyContextFormatterBase extends ContextFormatterBase {
   /**
    * Returns the first non-empty list in the term's ancestor tree (bottom-up).
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The given item list of the current term.
    *
-   * @return \Drupal\Core\Field\FieldItemListInterface
+   * @return FieldItemListInterface
    *   The list as object when items were found, or an empty item list.
    */
   protected function getOverrideItems(FieldItemListInterface $items) {
diff --git a/src/Plugin/Field/FieldWidget/ContextWidget.php b/src/Plugin/Field/FieldWidget/ContextWidget.php
index 0ad18bd..3006361 100644
--- a/src/Plugin/Field/FieldWidget/ContextWidget.php
+++ b/src/Plugin/Field/FieldWidget/ContextWidget.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ad_entity\Plugin\Field\FieldWidget;
 
+use Drupal\ad_entity\Plugin\Field\FieldType\ContextItem;
+use Drupal\Core\TypedData\Plugin\DataType\Map;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\WidgetBase;
@@ -26,7 +28,7 @@ class ContextWidget extends WidgetBase implements ContainerFactoryPluginInterfac
   /**
    * The context form element builder.
    *
-   * @var \Drupal\ad_entity\Form\AdContextElementBuilder
+   * @var AdContextElementBuilder
    */
   protected $elementBuilder;
 
@@ -52,13 +54,13 @@ class ContextWidget extends WidgetBase implements ContainerFactoryPluginInterfac
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\ad_entity\Form\AdContextElementBuilder $context_element_builder
+   * @param AdContextElementBuilder $context_element_builder
    *   The context element builder.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, AdContextElementBuilder $context_element_builder) {
@@ -80,9 +82,9 @@ class ContextWidget extends WidgetBase implements ContainerFactoryPluginInterfac
    * {@inheritdoc}
    */
   public function formElement(FieldItemListInterface $items, $delta, array $element, array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\ad_entity\Plugin\Field\FieldType\ContextItem $field_item */
+    /** @var ContextItem $field_item */
     $field_item = $items->get($delta);
-    /** @var \Drupal\Core\TypedData\Plugin\DataType\Map $context_item */
+    /** @var Map $context_item */
     $context_item = $field_item->get('context');
     $value_plugin_id = $context_item->get('context_plugin_id')->getValue();
     $value_settings = $context_item->get('context_settings')->getValue();
diff --git a/tests/src/Kernel/ContextItemTest.php b/tests/src/Kernel/ContextItemTest.php
index 60595fe..c3f778f 100644
--- a/tests/src/Kernel/ContextItemTest.php
+++ b/tests/src/Kernel/ContextItemTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\ad_entity\Kernel;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\field\Kernel\FieldKernelTestBase;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -16,14 +18,14 @@ class ContextItemTest extends FieldKernelTestBase {
   /**
    * A field storage to use in this test class.
    *
-   * @var \Drupal\field\Entity\FieldStorageConfig
+   * @var FieldStorageConfig
    */
   protected $fieldStorage;
 
   /**
    * The field used in this test class.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $field;
 
@@ -65,9 +67,9 @@ class ContextItemTest extends FieldKernelTestBase {
    * Test for context field items on new entities.
    */
   public function testNew() {
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = $this->container->get('entity_type.manager');
-    /** @var \Drupal\Core\Entity\FieldableEntityInterface $new_test_entity */
+    /** @var FieldableEntityInterface $new_test_entity */
     $new_test_entity = $entity_type_manager->getStorage('entity_test')->create([]);
     // The field must be there, and empty.
     $this->assertTrue($new_test_entity->hasField('ad_context'));
diff --git a/tests/src/Traits/AdEntityKernelTrait.php b/tests/src/Traits/AdEntityKernelTrait.php
index b9f0f9f..b08090c 100644
--- a/tests/src/Traits/AdEntityKernelTrait.php
+++ b/tests/src/Traits/AdEntityKernelTrait.php
@@ -2,6 +2,14 @@
 
 namespace Drupal\Tests\ad_entity\Traits;
 
+use Drupal\ad_entity\Entity\AdEntityInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\ad_entity\Entity\AdDisplayInterface;
+use Drupal\Core\Theme\ThemeManagerInterface;
+use Drupal\ad_entity\Plugin\AdContextManager;
+use Drupal\Core\Entity\EntityViewBuilderInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Render\RendererInterface;
 /**
  * Trait AdEntityKernelTrait for Kernel tests.
  */
@@ -13,11 +21,11 @@ trait AdEntityKernelTrait {
    * @param array $values
    *   (Optional) Further values to use for creation.
    *
-   * @return \Drupal\ad_entity\Entity\AdEntityInterface
+   * @return AdEntityInterface
    *   The created ad_entity instance.
    */
   protected function createNewAdEntity(array $values = []) {
-    /** @var \Drupal\Core\Entity\EntityStorageInterface $storage */
+    /** @var EntityStorageInterface $storage */
     try {
       $storage = $this->container->get('entity_type.manager')->getStorage('ad_entity');
     }
@@ -40,18 +48,18 @@ trait AdEntityKernelTrait {
    * @param array $values
    *   (Optional) Further values to use for creation.
    *
-   * @return \Drupal\ad_entity\Entity\AdDisplayInterface
+   * @return AdDisplayInterface
    *   The created ad_display instance.
    */
   protected function createNewAdDisplay(array $values = []) {
-    /** @var \Drupal\Core\Entity\EntityStorageInterface $storage */
+    /** @var EntityStorageInterface $storage */
     try {
       $storage = $this->container->get('entity_type.manager')->getStorage('ad_display');
     }
     catch (\Exception $e) {
       return NULL;
     }
-    /** @var \Drupal\Core\Theme\ThemeManagerInterface $theme_manager */
+    /** @var ThemeManagerInterface $theme_manager */
     $theme_manager = $this->container->get('theme.manager');
     $theme_name = $theme_manager->getActiveTheme()->getName();
     $values += [
@@ -70,7 +78,7 @@ trait AdEntityKernelTrait {
   /**
    * Get the manager for Advertising context plugins.
    *
-   * @return \Drupal\ad_entity\Plugin\AdContextManager
+   * @return AdContextManager
    *   The context manager.
    */
   protected function getContextManager() {
@@ -85,12 +93,12 @@ trait AdEntityKernelTrait {
   /**
    * Get the view builder for Advertising entities.
    *
-   * @return \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @return EntityViewBuilderInterface
    *   The view builder for Advertising entities.
    */
   protected function getAdEntityViewBuilder() {
     try {
-      /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $type_manager */
+      /** @var EntityTypeManagerInterface $type_manager */
       $type_manager = $this->container->get('entity_type.manager');
       return $type_manager->getViewBuilder('ad_entity');
     }
@@ -102,12 +110,12 @@ trait AdEntityKernelTrait {
   /**
    * Get the view builder for Display configs for Advertisement.
    *
-   * @return \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @return EntityViewBuilderInterface
    *   The view builder for Display configs for Advertisement.
    */
   protected function getAdDisplayViewBuilder() {
     try {
-      /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $type_manager */
+      /** @var EntityTypeManagerInterface $type_manager */
       $type_manager = $this->container->get('entity_type.manager');
       return $type_manager->getViewBuilder('ad_display');
     }
@@ -119,7 +127,7 @@ trait AdEntityKernelTrait {
   /**
    * Get the renderer.
    *
-   * @return \Drupal\Core\Render\RendererInterface
+   * @return RendererInterface
    *   The renderer.
    */
   protected function getRenderer() {
