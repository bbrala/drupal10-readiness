diff --git a/filehash.module b/filehash.module
index da64fff..7904154 100644
--- a/filehash.module
+++ b/filehash.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * @file
  * Generate hashes for each uploaded file.
@@ -164,7 +165,7 @@ function filehash_file_validate(FileInterface $file) {
 /**
  * Checks that file is not a duplicate.
  *
- * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+ * @return TranslatableMarkup[]
  *   Array of validation errors.
  */
 function filehash_validate_dedupe(FileInterface $file) {
@@ -294,7 +295,7 @@ function filehash_lengths() {
 /**
  * Returns array of human-readable hash algorithm names.
  *
- * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+ * @return TranslatableMarkup[]
  *   Hash algorithm names.
  */
 function filehash_names() {
@@ -382,9 +383,9 @@ function filehash_node_build_defaults_alter(array &$build, EntityInterface $node
 /**
  * Adds <media:hash> RSS elements to $node object.
  *
- * @param \Drupal\file\FileInterface|null $file
+ * @param FileInterface|null $file
  *   The file entity object or NULL.
- * @param \Drupal\Core\Entity\EntityInterface $node
+ * @param EntityInterface $node
  *   The node entity object.
  */
 function filehash_rss_elements($file, EntityInterface $node): void {
diff --git a/src/Batch/CleanBatch.php b/src/Batch/CleanBatch.php
index 63eec4e..49396a1 100644
--- a/src/Batch/CleanBatch.php
+++ b/src/Batch/CleanBatch.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\filehash\Batch;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * Drops disabled database columns.
  */
@@ -27,7 +28,7 @@ class CleanBatch {
   /**
    * Returns database columns that are pending delete.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Database columns.
    */
   public static function columns() {
diff --git a/src/EventSubscriber/FileHashConfigSubscriber.php b/src/EventSubscriber/FileHashConfigSubscriber.php
index a621ba7..157a6e1 100644
--- a/src/EventSubscriber/FileHashConfigSubscriber.php
+++ b/src/EventSubscriber/FileHashConfigSubscriber.php
@@ -16,23 +16,23 @@ class FileHashConfigSubscriber implements EventSubscriberInterface {
   /**
    * The cache tags invalidator.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs the filehashConfigSubscriber.
    *
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache_tags_invalidator
+   * @param CacheTagsInvalidatorInterface $cache_tags_invalidator
    *   The cache tags invalidator.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(CacheTagsInvalidatorInterface $cache_tags_invalidator, ModuleHandlerInterface $module_handler) {
@@ -43,7 +43,7 @@ class FileHashConfigSubscriber implements EventSubscriberInterface {
   /**
    * Updates File Hash schema when needed.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The ConfigCrudEvent to process.
    */
   public function onSave(ConfigCrudEvent $event): void {
diff --git a/src/Form/FileHashCleanForm.php b/src/Form/FileHashCleanForm.php
index 8eef3c0..5985863 100644
--- a/src/Form/FileHashCleanForm.php
+++ b/src/Form/FileHashCleanForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\filehash\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -15,7 +16,7 @@ class FileHashCleanForm extends ConfirmFormBase {
   /**
    * The database columns to be purged.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @var TranslatableMarkup[]
    */
   public $columns;
 
@@ -24,7 +25,7 @@ class FileHashCleanForm extends ConfirmFormBase {
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed[]
@@ -92,7 +93,7 @@ class FileHashCleanForm extends ConfirmFormBase {
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
diff --git a/src/Form/FileHashConfigForm.php b/src/Form/FileHashConfigForm.php
index 08708d8..69ffad4 100644
--- a/src/Form/FileHashConfigForm.php
+++ b/src/Form/FileHashConfigForm.php
@@ -16,7 +16,7 @@ class FileHashConfigForm extends ConfigFormBase {
   /**
    * Stores a module manager.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -60,7 +60,7 @@ class FileHashConfigForm extends ConfigFormBase {
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed[]
@@ -89,7 +89,7 @@ class FileHashConfigForm extends ConfigFormBase {
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
diff --git a/src/Form/FileHashGenerateForm.php b/src/Form/FileHashGenerateForm.php
index 6e6418e..c9d64b5 100644
--- a/src/Form/FileHashGenerateForm.php
+++ b/src/Form/FileHashGenerateForm.php
@@ -52,7 +52,7 @@ class FileHashGenerateForm extends ConfirmFormBase {
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
diff --git a/src/Plugin/Field/FieldFormatter/TableFormatter.php b/src/Plugin/Field/FieldFormatter/TableFormatter.php
index 21c0e83..d4f4842 100644
--- a/src/Plugin/Field/FieldFormatter/TableFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TableFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\filehash\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\Plugin\Field\FieldFormatter\DescriptionAwareFileFormatterBase;
@@ -29,7 +30,7 @@ class TableFormatter extends DescriptionAwareFileFormatterBase {
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = [];
 
-    /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
+    /** @var EntityReferenceFieldItemListInterface $items */
     if ($files = $this->getEntitiesToView($items, $langcode)) {
       $names = filehash_names();
       $header = [
@@ -88,7 +89,7 @@ class TableFormatter extends DescriptionAwareFileFormatterBase {
    *
    * @param mixed[] $form
    *   The settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return mixed[]
diff --git a/tests/src/Functional/DrushTest.php b/tests/src/Functional/DrushTest.php
index 112fe9a..9f4e071 100644
--- a/tests/src/Functional/DrushTest.php
+++ b/tests/src/Functional/DrushTest.php
@@ -26,6 +26,7 @@ class DrushTest extends BrowserTestBase {
 
   /**
    * Tests drush commands.
+   * @doesNotPerformAssertions
    */
   public function testCommands(): void {
     $this->drush('filehash:generate');
diff --git a/tests/src/Functional/FileHashTest.php b/tests/src/Functional/FileHashTest.php
index 8d92ecb..31ebb66 100644
--- a/tests/src/Functional/FileHashTest.php
+++ b/tests/src/Functional/FileHashTest.php
@@ -95,6 +95,7 @@ class FileHashTest extends FileFieldTestBase {
 
   /**
    * Tests the table with file hashes field formatter.
+   * @doesNotPerformAssertions
    */
   public function testFileHashField(): void {
     $field_name = strtolower($this->randomMachineName());
