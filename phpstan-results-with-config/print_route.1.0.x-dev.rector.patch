diff --git a/src/Controller/PrintRouteController.php b/src/Controller/PrintRouteController.php
index d017ded..d4ffe68 100644
--- a/src/Controller/PrintRouteController.php
+++ b/src/Controller/PrintRouteController.php
@@ -2,6 +2,15 @@
 
 namespace Drupal\print_route\Controller;
 
+use Drupal\Core\Routing\RouteProviderInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\Core\DependencyInjection\ClassResolverInterface;
+use Drupal\Core\Entity\EntityRepository;
+use Drupal\Core\Render\Renderer;
+use Drupal\entity_print\Plugin\EntityPrintPluginManagerInterface;
+use Drupal\entity_print\PrintBuilderInterface;
+use Symfony\Component\HttpFoundation\Response;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Access\AccessResult;
@@ -21,56 +30,56 @@ class PrintRouteController extends ControllerBase {
   /**
    * Drupal\Core\Routing\RouteProviderInterface definition.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routerRouteProvider;
 
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The class resolver.
    *
-   * @var \Drupal\Core\DependencyInjection\ClassResolverInterface
+   * @var ClassResolverInterface
    */
   protected $classResolver;
 
   /**
    * Entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepository
+   * @var EntityRepository
    */
   protected $entityRepository;
 
   /**
    * Renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * The plugin manager for our Print engines.
    *
-   * @var \Drupal\entity_print\Plugin\EntityPrintPluginManagerInterface
+   * @var EntityPrintPluginManagerInterface
    */
   protected $printablePluginManager;
 
   /**
    * The Print builder.
    *
-   * @var \Drupal\entity_print\PrintBuilderInterface
+   * @var PrintBuilderInterface
    */
   protected $printBuilder;
 
@@ -96,7 +105,7 @@ class PrintRouteController extends ControllerBase {
    * We need to validate that the user is allowed to access this route also the
    * print version.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result object.
    */
   public function checkAccess() {
@@ -124,7 +133,7 @@ class PrintRouteController extends ControllerBase {
   /**
    * Print route.
    *
-   * @return \Symfony\Component\HttpFoundation\Response|array
+   * @return Response|array
    *   The response object on error otherwise the Print is sent.
    *
    * @example /print/route?_routename=wrupal_statistics.training_user_statistics&_debug=1&group=14&user=1
diff --git a/src/Entity/PrintableRouteEntity.php b/src/Entity/PrintableRouteEntity.php
index 5015bf2..bc95ef9 100644
--- a/src/Entity/PrintableRouteEntity.php
+++ b/src/Entity/PrintableRouteEntity.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\print_route\Entity;
 
+use Drupal\Core\Routing\RouteProvider;
+use Symfony\Component\Routing\Route;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\ParamConverter\EntityConverter;
@@ -142,10 +144,10 @@ class PrintableRouteEntity implements EntityInterface {
       }
     }
 
-    /** @var \Drupal\Core\Routing\RouteProvider $routerProvider */
+    /** @var RouteProvider $routerProvider */
     $routerProvider = \Drupal::service('router.route_provider');
 
-    /** @var \Symfony\Component\Routing\Route $route */
+    /** @var Route $route */
     $route = $routerProvider->getRouteByName($routeName);
 
     $paramConverter = new EntityConverter(\Drupal::entityTypeManager(), \Drupal::service('class_resolver'));
@@ -166,7 +168,7 @@ class PrintableRouteEntity implements EntityInterface {
     $title = \Drupal::service('title_resolver')->getTitle($request, $route);
     if ($title) {
       if ($title instanceof TranslatableMarkup) {
-        /** @var \Drupal\Core\StringTranslation\TranslatableMarkup $title */
+        /** @var TranslatableMarkup $title */
         $title = strip_tags($title->render());
       }
       return $title;
