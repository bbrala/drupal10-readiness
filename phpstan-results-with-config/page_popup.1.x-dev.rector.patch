diff --git a/src/Controller/PagePopupController.php b/src/Controller/PagePopupController.php
index df50778..4af4256 100644
--- a/src/Controller/PagePopupController.php
+++ b/src/Controller/PagePopupController.php
@@ -19,23 +19,23 @@ class PagePopupController extends ControllerBase {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * PagePopupMessageController constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The logger.
    */
   public function __construct(MessengerInterface $messenger, LoggerChannelInterface $logger) {
@@ -56,13 +56,13 @@ class PagePopupController extends ControllerBase {
   /**
    * Handles AJAX operations from the overview form.
    *
-   * @param \Drupal\page_popup\PagePopupEntityInterface $page_popup_entity
+   * @param PagePopupEntityInterface $page_popup_entity
    *   A Page Popup Message Rule object.
    * @param string|null $op
    *   The operation being performed, either 'enable' to Page Popup Message Rule
    *   or 'disable' to disable the Page Popup Message Rule.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect response to redirect back to the Page Popup Message Rule list.
    *
    * @see \Drupal\page_popup\Controller\PagePopupEntityListBuilder
diff --git a/src/Controller/PagePopupEntityListBuilder.php b/src/Controller/PagePopupEntityListBuilder.php
index 237df09..11122d6 100644
--- a/src/Controller/PagePopupEntityListBuilder.php
+++ b/src/Controller/PagePopupEntityListBuilder.php
@@ -20,27 +20,27 @@ class PagePopupEntityListBuilder extends DraggableListBuilder {
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new EntityListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The active user account.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, AccountInterface $account, MessengerInterface $messenger) {
diff --git a/src/Entity/PagePopupEntity.php b/src/Entity/PagePopupEntity.php
index cc87dc2..fa7e2b2 100644
--- a/src/Entity/PagePopupEntity.php
+++ b/src/Entity/PagePopupEntity.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\page_popup\Entity;
 
+use Drupal\block\BlockPluginCollection;
+use Drupal\Core\Executable\ExecutableManagerInterface;
 use Drupal\Core\Condition\ConditionPluginCollection;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ -113,21 +115,21 @@ class PagePopupEntity extends ConfigEntityBase implements PagePopupEntityInterfa
   /**
    * The plugin collection that holds the block plugin for this entity.
    *
-   * @var \Drupal\block\BlockPluginCollection
+   * @var BlockPluginCollection
    */
   protected $pluginCollection;
 
   /**
    * The visibility collection.
    *
-   * @var \Drupal\Core\Condition\ConditionPluginCollection
+   * @var ConditionPluginCollection
    */
   protected $visibilityCollection;
 
   /**
    * The condition plugin manager.
    *
-   * @var \Drupal\Core\Executable\ExecutableManagerInterface
+   * @var ExecutableManagerInterface
    */
   protected $conditionPluginManager;
 
@@ -282,7 +284,7 @@ class PagePopupEntity extends ConfigEntityBase implements PagePopupEntityInterfa
   /**
    * Gets the condition plugin manager.
    *
-   * @return \Drupal\Core\Executable\ExecutableManagerInterface
+   * @return ExecutableManagerInterface
    *   The condition plugin manager.
    */
   protected function conditionPluginManager() {
diff --git a/src/EventSubscriber/PagePopupSubscriber.php b/src/EventSubscriber/PagePopupSubscriber.php
index ae74e3f..f52bede 100644
--- a/src/EventSubscriber/PagePopupSubscriber.php
+++ b/src/EventSubscriber/PagePopupSubscriber.php
@@ -28,28 +28,28 @@ class PagePopupSubscriber implements EventSubscriberInterface {
   /**
    * The route admin context to determine whether a route is an admin one.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
@@ -63,14 +63,14 @@ class PagePopupSubscriber implements EventSubscriberInterface {
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * The state keyvalue collection.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -90,7 +90,7 @@ class PagePopupSubscriber implements EventSubscriberInterface {
   /**
    * Init PopupMessage.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   PopupMessage event.
    */
   public function showPopupMessage(ResponseEvent $event) {
diff --git a/src/Form/PagePopupEntityDeleteForm.php b/src/Form/PagePopupEntityDeleteForm.php
index 98600de..2fdd331 100644
--- a/src/Form/PagePopupEntityDeleteForm.php
+++ b/src/Form/PagePopupEntityDeleteForm.php
@@ -17,23 +17,23 @@ class PagePopupEntityDeleteForm extends EntityConfirmFormBase {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Constructs an PagePopupEntityForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The logger.
    */
   public function __construct(MessengerInterface $messenger, LoggerChannelInterface $logger) {
diff --git a/src/Form/PagePopupEntityForm.php b/src/Form/PagePopupEntityForm.php
index 8e08896..dd21114 100644
--- a/src/Form/PagePopupEntityForm.php
+++ b/src/Form/PagePopupEntityForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\page_popup\Form;
 
+use Drupal\page_popup\Entity\PagePopupEntity;
+use Drupal\Core\Condition\ConditionInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Executable\ExecutableManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -20,50 +22,50 @@ class PagePopupEntityForm extends EntityForm {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The ConditionManager for building the visibility UI.
    *
-   * @var \Drupal\Core\Executable\ExecutableManagerInterface
+   * @var ExecutableManagerInterface
    */
   protected $conditionPluginManager;
 
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
   /**
    * The state keyvalue collection.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Constructs an SwitchThemeRuleForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The logger.
-   * @param \Drupal\Core\Executable\ExecutableManagerInterface $condition_plugin_manager
+   * @param ExecutableManagerInterface $condition_plugin_manager
    *   The ConditionManager for building the visibility UI.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The lazy context repository service.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state.
    */
   public function __construct(MessengerInterface $messenger, LoggerChannelInterface $logger, ExecutableManagerInterface $condition_plugin_manager, ContextRepositoryInterface $context_repository, StateInterface $state) {
@@ -94,7 +96,7 @@ class PagePopupEntityForm extends EntityForm {
     $available_contexts = $this->contextRepository->getAvailableContexts();
     $form_state->setTemporaryValue('gathered_contexts', $available_contexts);
 
-    /** @var \Drupal\page_popup\Entity\PagePopupEntity $entity */
+    /** @var PagePopupEntity $entity */
     $entity = $this->entity;
     $form['#tree'] = TRUE;
     $form['label'] = [
@@ -171,7 +173,7 @@ class PagePopupEntityForm extends EntityForm {
 
     foreach ($definitions as $condition_id => $definition) {
 
-      /** @var \Drupal\Core\Condition\ConditionInterface $condition */
+      /** @var ConditionInterface $condition */
       $condition = $this->conditionPluginManager->createInstance(
           $condition_id, $visibility[$condition_id] ?? []
       );
diff --git a/src/Form/PagePopupEntitySettingsForm.php b/src/Form/PagePopupEntitySettingsForm.php
index f368ec6..d4c64e9 100644
--- a/src/Form/PagePopupEntitySettingsForm.php
+++ b/src/Form/PagePopupEntitySettingsForm.php
@@ -19,50 +19,50 @@ class PagePopupEntitySettingsForm extends EntityForm {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The ConditionManager for building the visibility UI.
    *
-   * @var \Drupal\Core\Executable\ExecutableManagerInterface
+   * @var ExecutableManagerInterface
    */
   protected $conditionPluginManager;
 
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Constructs an SwitchThemeRuleForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The logger.
-   * @param \Drupal\Core\Executable\ExecutableManagerInterface $condition_plugin_manager
+   * @param ExecutableManagerInterface $condition_plugin_manager
    *   The ConditionManager for building the visibility UI.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The lazy context repository service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(MessengerInterface $messenger, LoggerChannelInterface $logger, ExecutableManagerInterface $condition_plugin_manager, ContextRepositoryInterface $context_repository, LanguageManagerInterface $language_manager) {
