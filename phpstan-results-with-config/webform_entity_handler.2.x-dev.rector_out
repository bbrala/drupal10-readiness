modules/contrib/webform_entity_handler/src/Plugin/WebformHandler/WebformEntityHandler.php
modules/contrib/webform_entity_handler/webform_entity_handler.module

1 file with changes
===================

1) modules/contrib/webform_entity_handler/src/Plugin/WebformHandler/WebformEntityHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_entity_handler\Plugin\WebformHandler;

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManager|null
+   * @var EntityFieldManager|null
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The webform element manager.
    *
-   * @var \Drupal\webform\Plugin\WebformElementManagerInterface
+   * @var WebformElementManagerInterface
    */
   protected $webformElementManager;

@@ @@
   /**
    * The webform token manager.
    *
-   * @var \Drupal\webform\WebformTokenManagerInterface
+   * @var WebformTokenManagerInterface
    */
   protected $webformTokenManager;

@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response.
    */
   public static function updateEntityFields(array $form, FormStateInterface $form_state) {
@@ @@
           if (($entity = $this->entityTypeManager->getStorage($type)->load($entity_id)) !== NULL) {
             // If the new values change the bundle we need to remove it first.
             if ($this->entityTypeManager->getDefinition($type)->hasKey('bundle') && $bundle != $entity->bundle()) {
-              /** @var \Drupal\Core\Entity\EntityInterface $previous_entity */
+              /** @var EntityInterface $previous_entity */
               $previous_entity = clone $entity;
               $entity->delete();
               unset($entity);
@@ @@

     [$type, $bundle] = explode(':', $entity_type_bundle);

-    /** @var \Drupal\Core\Field\FieldDefinitionInterface[] $properties */
+    /** @var FieldDefinitionInterface[] $properties */
     $fields = $this->entityFieldManager->getFieldDefinitions($type, $bundle);
     foreach ($fields as $field_name => $field) {
       $base_field = BaseFieldDefinition::create($field->getType());
@@ @@
   /**
    * Sets the entity field manager for this handler.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManager $entity_field_manager
+   * @param EntityFieldManager $entity_field_manager
    *   The new entity field manager.
    *
    * @return $this
@@ @@
   /**
    * Sets the entity type bundle info for this handler.
    *
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
    *
    * @return $this
@@ @@
   /**
    * Sets the entity type manager for this handler.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
    * @return $this
@@ @@
   /**
    * Sets the webform element manager for this handler.
    *
-   * @param \Drupal\webform\Plugin\WebformElementManagerInterface $webform_element_manager
+   * @param WebformElementManagerInterface $webform_element_manager
    *   The webform element manager.
    *
    * @return $this
@@ @@
   /**
    * Sets the webform token manager for this handler.
    *
-   * @param \Drupal\webform\WebformTokenManagerInterface $webform_token_manager
+   * @param WebformTokenManagerInterface $webform_token_manager
    *   The webform element manager.
    *
    * @return $this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

