modules/contrib/path_guard/path_guard.module
modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPath.php
modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPathValidator.php
modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php

2 files with changes
====================

1) modules/contrib/path_guard/tests/src/Functional/PathGuardTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create test user and log in.
@@ @@
     $assert_session = $this->assertSession();

     $this->drupalGet('node/add/page');
+    $this->drupalGet('node/add/page');

     // Tests existing path.
-    $this->drupalPostForm('node/add/page', [
+    $this->submitForm([
       'path[0][alias]' => '/node/add/page',
       'title[0][value]' => 'Page',
     ], 'Save');

     $assert_session->pageTextContains('The path is already in use.');
+    $this->drupalGet('node/add/page');

     // Tests not existing path.
-    $this->drupalPostForm('node/add/page', [
+    $this->submitForm([
       'path[0][alias]' => '/page',
       'title[0][value]' => 'Page',
     ], 'Save');

     $assert_session->pageTextContains('Basic page Page has been created.');
+    $this->drupalGet('node/1/edit');

     // Tests updating node with the existing path.
-    $this->drupalPostForm('node/1/edit', [
+    $this->submitForm([
       'title[0][value]' => 'Page updated',
     ], 'Save');

     $assert_session->pageTextContains('Basic page Page updated has been updated.');
+    $this->drupalGet('node/add/page');

     // Tests omitting path.
-    $this->drupalPostForm('node/add/page', [
+    $this->submitForm([
       'title[0][value]' => 'Page 2',
     ], 'Save');
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/path_guard/src/Plugin/Validation/Constraint/ExistingPathValidator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\path_guard\Plugin\Validation\Constraint;

+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Path\PathValidatorInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   private $pathValidator;

@@ @@
   /**
    * Creates a new ExistingPathValidator instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, PathValidatorInterface $path_validator) {
@@ @@
     }

     if ($url->isRouted()) {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       $entity = !empty($value->getParent()) ? $value->getEntity() : NULL;

       if (!$entity) {
@@ @@
         $this->context->addViolation($constraint->message);
       }
       else {
-        /** @var \Drupal\Core\Entity\ContentEntityInterface $original */
+        /** @var ContentEntityInterface $original */
         $original = $this->entityTypeManager->getStorage($entity->getEntityTypeId())->loadUnchanged($entity->id());

         if ($original->language()->getId() !== $entity->language()->getId()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

