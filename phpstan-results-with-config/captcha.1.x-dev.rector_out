modules/contrib/captcha/captcha.api.php
modules/contrib/captcha/captcha.inc
modules/contrib/captcha/captcha.install
modules/contrib/captcha/captcha.module
modules/contrib/captcha/captcha.post_update.php
modules/contrib/captcha/image_captcha/image_captcha.admin.inc
modules/contrib/captcha/image_captcha/image_captcha.install
modules/contrib/captcha/image_captcha/image_captcha.module
modules/contrib/captcha/image_captcha/src/Controller/CaptchaFontPreviewController.php
modules/contrib/captcha/image_captcha/src/Controller/CaptchaImageGeneratorController.php
modules/contrib/captcha/image_captcha/src/Controller/CaptchaImageRefresh.php
modules/contrib/captcha/image_captcha/src/Form/ImageCaptchaSettingsForm.php
modules/contrib/captcha/image_captcha/src/Response/CaptchaImageResponse.php
modules/contrib/captcha/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php
modules/contrib/captcha/modules/captcha_long_form_id_test/src/Form/LongIdForm.php
modules/contrib/captcha/modules/captcha_test/captcha_test.module
modules/contrib/captcha/src/CaptchaPointInterface.php
modules/contrib/captcha/src/Element/Captcha.php
modules/contrib/captcha/src/Entity/CaptchaPoint.php
modules/contrib/captcha/src/Entity/Controller/CaptchaPointListBuilder.php
modules/contrib/captcha/src/EventSubscriber/CaptchaCachedSettingsSubscriber.php
modules/contrib/captcha/src/Form/CaptchaExamplesForm.php
modules/contrib/captcha/src/Form/CaptchaPointDeleteForm.php
modules/contrib/captcha/src/Form/CaptchaPointDisableForm.php
modules/contrib/captcha/src/Form/CaptchaPointEnableForm.php
modules/contrib/captcha/src/Form/CaptchaPointForm.php
modules/contrib/captcha/src/Form/CaptchaSettingsForm.php
modules/contrib/captcha/src/Plugin/migrate/process/CaptchaTypeFormatter.php
modules/contrib/captcha/src/Plugin/migrate/source/CaptchaPoints.php
modules/contrib/captcha/src/Service/CaptchaService.php
modules/contrib/captcha/tests/fixtures/drupal7.php
modules/contrib/captcha/tests/src/Functional/CaptchaAdminTest.php
modules/contrib/captcha/tests/src/Functional/CaptchaCacheTest.php
modules/contrib/captcha/tests/src/Functional/CaptchaCronTest.php
modules/contrib/captcha/tests/src/Functional/CaptchaPersistenceTest.php
modules/contrib/captcha/tests/src/Functional/CaptchaSessionReuseAttackTestCase.php
modules/contrib/captcha/tests/src/Functional/CaptchaTest.php
modules/contrib/captcha/tests/src/Functional/CaptchaWebTestBase.php
modules/contrib/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php
modules/contrib/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaSimpleConfigurationTest.php
modules/contrib/captcha/tests/src/Unit/Controller/CaptchaPointListBuilderTest.php

23 files with changes
=====================

1) modules/contrib/captcha/tests/src/Unit/Controller/CaptchaPointListBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\captcha\Unit\Controller;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\captcha\Entity\Controller\CaptchaPointListBuilder;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
  */
 class CaptchaPointListBuilderTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Set up.
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaSimpleConfigurationTest.php:43

    ---------- begin diff ----------
@@ @@
     $this->loadFixture(implode(DIRECTORY_SEPARATOR, [
       DRUPAL_ROOT,
       // @phpstan-ignore-next-line
-      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : drupal_get_path('module', 'captcha'),
+      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : \Drupal::service('extension.list.module')->getPath('captcha'),
       'tests',
       'fixtures',
       'drupal7.php',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/captcha/tests/src/Kernel/Migrate/d7/MigrateCaptchaPointsTest.php:43

    ---------- begin diff ----------
@@ @@
     $this->loadFixture(implode(DIRECTORY_SEPARATOR, [
       DRUPAL_ROOT,
       // @phpstan-ignore-next-line
-      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : drupal_get_path('module', 'captcha'),
+      \Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('captcha') : \Drupal::service('extension.list.module')->getPath('captcha'),
       'tests',
       'fixtures',
       'drupal7.php',
@@ @@
    *   The expected status for a captcha type.
    */
   protected function assertEntity(string $form_id, string $captcha_type, $status) {
-    /** @var \Drupal\captcha\CaptchaPointInterface $entity */
+    /** @var CaptchaPointInterface $entity */
     $entity = CaptchaPoint::load($form_id);
     $this->assertInstanceOf(CaptchaPointInterface::class, $entity);
     $this->assertSame($form_id, $entity->getFormId());
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/captcha/tests/src/Functional/CaptchaWebTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\captcha\Functional;

+use Drupal\user\Entity\User;
+use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\comment\Plugin\Field\FieldType\CommentItemInterface;
 use Drupal\comment\Tests\CommentTestTrait;
 use Drupal\Core\Session\AccountInterface;
@@ @@
   /**
    * User with various administrative permissions.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $adminUser;

@@ @@
   /**
    * Normal visitor with limited permissions.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $normalUser;

@@ @@
     $comment_field->setSetting('form_location', CommentItemInterface::FORM_SEPARATE_PAGE);
     $comment_field->save();

-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/captcha/tests/src/Functional/CaptchaTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\captcha\Functional;

+use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\Core\StringTranslation\StringTranslationTrait;

 /**
@@ @@
     $this->drupalLogout();

     // Set a CAPTCHA on login form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
@@ @@
     $this->submitForm($edit, $this->t('Save configuration'));

     // Set a CAPTCHA on login form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
@@ @@
    */
   public function testCaptchaOnLoginBlockOnAdminPagesIssue893810() {
     // Set a CAPTCHA on login block form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_login_form');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/captcha/tests/src/Functional/CaptchaPersistenceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\captcha\Functional;

+use Drupal\captcha\Entity\CaptchaPoint;
 use Drupal\Core\StringTranslation\StringTranslationTrait;

 /**
@@ @@
     $this->assertDifferentCsid($captcha_sid_initial);

     // Check another form.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = \Drupal::entityTypeManager()
       ->getStorage('captcha_point')
       ->load('user_register_form');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/captcha/tests/src/Functional/CaptchaAdminTest.php:33

    ---------- begin diff ----------
@@ @@
   public function testCaptchaPointSettingGetterAndSetter() {
     $comment_form_id = self::COMMENT_FORM_ID;
     captcha_set_form_id_setting($comment_form_id, 'test');
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $result */
+    /** @var CaptchaPoint $result */
     $result = captcha_get_form_id_setting($comment_form_id);
     $this->assertNotNull($result, 'CAPTCHA exists');
     $this->assertEquals($result->getCaptchaType(), 'test', 'CAPTCHA type: default');
@@ @@
    * @param string $form_id
    *   Form machine ID.
    *
-   * @return \Drupal\captcha\Entity\CaptchaPoint
+   * @return CaptchaPoint
    *   CaptchaPoint with mysql query result.
    */
   protected function getCaptchaPointSettingFromDatabase($form_id) {
@@ @@
     $this->assertSession()->responseContains($this->t('Captcha Point for %label form was created.', ['%label' => $captcha_point_form_id]));

     // Check in database.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint result */
+    /** @var CaptchaPoint result */
     $result = $this->getCaptchaPointSettingFromDatabase($captcha_point_form_id);
     $this->assertEquals($result->captchaType, $captcha_point_module . '/' . $captcha_point_type,
       'Enabled CAPTCHA point should have module and type set');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/captcha/src/Service/CaptchaService.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Module Handler Service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructor for Captcha Service helper.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module Handler Service.
    */
   public function __construct(ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/captcha/src/Form/CaptchaSettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;

@@ @@
   /**
    * The CAPTCHA helper service.
    *
-   * @var \Drupal\captcha\Service\CaptchaService
+   * @var CaptchaService
    */
   protected $captchaService;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs a \Drupal\captcha\Form\CaptchaSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Module handler.
-   * @param \Drupal\captcha\Service\CaptchaService $captcha_service
+   * @param CaptchaService $captcha_service
    *   The captcha service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, CacheBackendInterface $cache_backend, ModuleHandlerInterface $moduleHandler, CaptchaService $captcha_service) {
@@ @@
    *
    * @param array $form
    *   Form structured array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state structured array.
    */
   public function clearCaptchaPlacementCacheSubmit(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/captcha/src/Form/CaptchaPointForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\captcha\Form;

+use Drupal\captcha\CaptchaPointInterface;
 use Drupal\captcha\Service\CaptchaService;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The CAPTCHA helper service.
    *
-   * @var \Drupal\captcha\Service\CaptchaService
+   * @var CaptchaService
    */
   protected $captchaService;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * CaptchaPointForm constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Constructor.
-   * @param \Drupal\captcha\Service\CaptchaService $captcha_service
+   * @param CaptchaService $captcha_service
    *   The captcha service.
    */
   public function __construct(RequestStack $request_stack, CaptchaService $captcha_service) {
@@ @@
   /**
    * Create Captcha Points.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Event to create Captcha points.
    *
    * @return static
@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\captcha\CaptchaPointInterface $captchaPoint */
+    /** @var CaptchaPointInterface $captchaPoint */
     $captcha_point = $this->entity;

     // Support to set a default form_id through a query argument.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/captcha/src/Form/CaptchaExamplesForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * CaptchaExamplesForm constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Constructor.
    */
   public function __construct(ModuleHandlerInterface $moduleHandler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/captcha/src/EventSubscriber/CaptchaCachedSettingsSubscriber.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The Element info.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;

@@ @@
   /**
    * CaptchaCachedSettingsSubscriber constructor.
    *
-   * @param \Drupal\Core\Render\ElementInfoManagerInterface $elementInfo
+   * @param ElementInfoManagerInterface $elementInfo
    *   Constructor.
    */
   public function __construct(ElementInfoManagerInterface $elementInfo) {
@@ @@
   /**
    * Clearing the cached definitions whenever the settings are modified.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The Event to process.
    */
   public function onSave(ConfigCrudEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


13) modules/contrib/captcha/src/Element/Captcha.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/captcha/image_captcha/src/StreamedResponse/CaptchaFontPreviewStreamedResponse.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Config service.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/captcha/image_captcha/src/Response/CaptchaImageResponse.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Database connection configuration container.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * Image Captcha config storage.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * File System container.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Watchdog logger channel for captcha.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/captcha/image_captcha/src/Form/ImageCaptchaSettingsForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The file_system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs a \Drupal\image_captcha\Form\ImageCaptchaSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The file_system service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LanguageManagerInterface $language_manager, FileSystemInterface $fileSystem) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/captcha/image_captcha/src/Controller/CaptchaImageRefresh.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The contruct method.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Obtaining system time.
    */
   public function __construct(TimeInterface $time) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/captcha/image_captcha/src/Controller/CaptchaImageGeneratorController.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Connection container.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * Image Captcha config storage.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * File System Service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Watchdog logger channel for captcha.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * Kill Switch for page caching.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;

@@ @@
   /**
    * Main method that throw ImageResponse object to generate image.
    *
-   * @return \Drupal\image_captcha\Response\CaptchaImageResponse
+   * @return CaptchaImageResponse
    *   Make a CaptchaImageResponse with the correct configuration and return it.
    */
   public function image() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


19) modules/contrib/captcha/image_captcha/src/Controller/CaptchaFontPreviewController.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Image Captcha config storage.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * Kill Switch for page caching.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;

@@ @@
   /**
    * Main method that throw ImageResponse object to generate image.
    *
-   * @return \Drupal\image_captcha\StreamedResponse\CaptchaFontPreviewStreamedResponse
+   * @return CaptchaFontPreviewStreamedResponse
    *   Make a CaptchaImageResponse with the correct configuration and return it.
    */
   public function getFont($token) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


20) modules/contrib/captcha/image_captcha/image_captcha.module:84

    ---------- begin diff ----------
@@ @@
     $request = \Drupal::service('request_stack')->getCurrentRequest();
     $directories = [
       // @phpstan-ignore-next-line
-      (Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : drupal_get_path('module', 'image_captcha')) . '/fonts',
+      (Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : \Drupal::service('extension.list.module')->getPath('image_captcha')) . '/fonts',
       'sites/all/libraries/fonts',
       DrupalKernel::findSitePath($request) . '/libraries/fonts',
     ];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


21) modules/contrib/captcha/image_captcha/image_captcha.install:36

    ---------- begin diff ----------
@@ @@
 function image_captcha_install() {
   $config = \Drupal::configFactory()->getEditable('image_captcha.settings');
   // @phpstan-ignore-next-line
-  $module_path = Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : drupal_get_path('module', 'image_captcha');
+  $module_path = Drupal::hasService('extension.list.module') ? \Drupal::service('extension.list.module')->getPath('image_captcha') : \Drupal::service('extension.list.module')->getPath('image_captcha');
   $config->set('image_captcha_fonts', [
     hash('sha256', $module_path . '/fonts/Tesox/tesox.ttf'),
     hash('sha256', $module_path . '/fonts/Tuffy/Tuffy.ttf'),
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


22) modules/contrib/captcha/captcha.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * This module enables basic CAPTCHA functionality.
@@ @@
  * @param string $id
  *   Form id string.
  *
- * @return \Drupal\Core\Entity\EntityInterface
+ * @return EntityInterface
  *   An instance of an captcha_point entity.
  */
 function captcha_point_load($id) {
@@ @@
  * Implements hook_theme().
  */
 function captcha_theme() {
-  $path = Drupal::hasService('extension.list.module') ? Drupal::service('extension.list.module')->getPath('captcha') : drupal_get_path('module', 'captcha');
+  $path = Drupal::hasService('extension.list.module') ? Drupal::service('extension.list.module')->getPath('captcha') : \Drupal::service('extension.list.module')->getPath('captcha');
   return [
     'captcha' => [
       'render element' => 'element',
@@ @@

     if (!empty($entity_ids) && is_array($entity_ids)) {
       $captcha_point_id = array_pop($entity_ids);
-      /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+      /** @var CaptchaPoint $captcha_point */
       $captcha_point = \Drupal::entityTypeManager()
         ->getStorage('captcha_point')
         ->load($captcha_point_id);
@@ @@
       ->isAdminRoute() || $config->get('allow_on_admin_pages'))
   ) {
     // Add CAPTCHA administration tools.
-    /** @var \Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+    /** @var CaptchaPoint $captcha_point */
     $captcha_point = CaptchaPoint::load($form_id);

     // For administrators: show CAPTCHA info and offer link to configure it.
@@ @@
  *
  * @param array $element
  *   The CAPTCHA element.
- * @param Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state structure to extract the info from.
  * @param string $this_form_id
  *   The form ID of the form we are currently processing
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


23) modules/contrib/captcha/captcha.inc:22

    ---------- begin diff ----------
@@ @@
  *   and $captcha_type->captcha_type.
  */
 function captcha_set_form_id_setting($form_id, $captcha_type) {
-  /** @var Drupal\captcha\Entity\CaptchaPoint $captcha_point */
+  /** @var CaptchaPoint $captcha_point */
   $captcha_point = CaptchaPoint::load($form_id);

   if ($captcha_point) {
@@ @@
  *   form 'captcha/Math'.
  */
 function captcha_get_form_id_setting($form_id, $symbolic = FALSE) {
-  /** @var \Drupal\captcha\Entity\CaptchaPoint $captchaPoint */
+  /** @var CaptchaPoint $captchaPoint */
   $captcha_point = CaptchaPoint::load($form_id);

   if ($symbolic) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 23 files have been changed by Rector                                      

