diff --git a/src/Plugin/views/display_extender/InjectResults.php b/src/Plugin/views/display_extender/InjectResults.php
index 5fe2f89..6614a69 100644
--- a/src/Plugin/views/display_extender/InjectResults.php
+++ b/src/Plugin/views/display_extender/InjectResults.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_inject\Plugin\views\display_extender;
 
+use Drupal\views\ViewExecutable;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheableDependencyInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -32,7 +33,7 @@ class InjectResults extends DisplayExtenderPluginBase implements CacheableDepend
   /**
    * The view object used for injection.
    *
-   * @var \Drupal\views\ViewExecutable
+   * @var ViewExecutable
    */
   protected $injectedView;
 
@@ -53,7 +54,7 @@ class InjectResults extends DisplayExtenderPluginBase implements CacheableDepend
   /**
    * Loads the executable for inject source data.
    *
-   * @return \Drupal\views\ViewExecutable|null
+   * @return ViewExecutable|null
    *   The view to get results to inject from, if it exists.
    */
   protected function getInjectedView() {
diff --git a/tests/src/Kernel/DisplayAccessTest.php b/tests/src/Kernel/DisplayAccessTest.php
index fd58e4b..f04a245 100644
--- a/tests/src/Kernel/DisplayAccessTest.php
+++ b/tests/src/Kernel/DisplayAccessTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\views_inject\Kernel;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Session\AccountSwitcherInterface;
 use Drupal\user\Entity\Role;
 use Drupal\user\Entity\User;
 
@@ -20,21 +22,21 @@ class DisplayAccessTest extends InjectResultsTestBase {
   /**
    * Stores a user entity with access to a restricted display.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $userWithAccess;
 
   /**
    * Stores a user entity without access to a restricted display.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $userWithoutAccess;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);
 
     $role_with_access = Role::create([
@@ -64,7 +66,7 @@ class DisplayAccessTest extends InjectResultsTestBase {
    * Tests correct behavior in regards to injected display's access settings.
    */
   public function testInjectedDisplayAccess() {
-    /** @var \Drupal\Core\Session\AccountSwitcherInterface $account_switcher */
+    /** @var AccountSwitcherInterface $account_switcher */
     $account_switcher = \Drupal::service('account_switcher');
 
     // Test with a display we have no access to.
diff --git a/tests/src/Kernel/InjectResultsTestBase.php b/tests/src/Kernel/InjectResultsTestBase.php
index 815d041..6f32aaa 100644
--- a/tests/src/Kernel/InjectResultsTestBase.php
+++ b/tests/src/Kernel/InjectResultsTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\views_inject\Kernel;
 
+use Drupal\node\NodeInterface;
 use Drupal\node\Entity\Node;
 use Drupal\node\Entity\NodeType;
 use Drupal\Tests\views\Kernel\ViewsKernelTestBase;
@@ -40,14 +41,14 @@ abstract class InjectResultsTestBase extends ViewsKernelTestBase {
   /**
    * Nodes for testing.
    *
-   * @var \Drupal\node\NodeInterface[][]
+   * @var NodeInterface[][]
    */
   protected $nodes;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp($import_test_views = TRUE) {
+  protected function setUp($import_test_views = TRUE): void {
     parent::setUp($import_test_views);
 
     // Enable our display extender.
@@ -98,7 +99,7 @@ abstract class InjectResultsTestBase extends ViewsKernelTestBase {
    * @param int $chunk_distance
    *   The chunk distance to use in the display extender.
    *
-   * @return \Drupal\views\ViewExecutable
+   * @return ViewExecutable
    *   The initialized view.
    */
   protected function getInjectEnabledTestView($offset = 0, $chunk_size = 1, $chunk_distance = 1) {
@@ -117,7 +118,7 @@ abstract class InjectResultsTestBase extends ViewsKernelTestBase {
   /**
    * Tests if the view results are as expected.
    *
-   * @param \Drupal\views\ViewExecutable $view
+   * @param ViewExecutable $view
    *   The view to test.
    * @param string[] $expected_shorthand
    *   The expected resultset, as a list of node type ids.
diff --git a/tests/src/Kernel/PagerCountTest.php b/tests/src/Kernel/PagerCountTest.php
index 457b998..5fc5984 100644
--- a/tests/src/Kernel/PagerCountTest.php
+++ b/tests/src/Kernel/PagerCountTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\views_inject\Kernel;
 
+use Drupal\views\ViewExecutable;
 /**
  * Tests views inject functionality related to the pager.
  *
@@ -53,7 +54,7 @@ class PagerCountTest extends InjectResultsTestBase {
    * @param int $items_per_page
    *   The number of items per page to set for the view's pager.
    *
-   * @return \Drupal\views\ViewExecutable
+   * @return ViewExecutable
    *   The initialized view.
    */
   protected function getPagedView($items_per_page = 0) {
diff --git a/tests/src/Kernel/RenderedOutputTest.php b/tests/src/Kernel/RenderedOutputTest.php
index 52da15a..d57b3ac 100644
--- a/tests/src/Kernel/RenderedOutputTest.php
+++ b/tests/src/Kernel/RenderedOutputTest.php
@@ -30,14 +30,14 @@ class RenderedOutputTest extends InjectResultsTestBase {
         $positions[$node_type][$index] = $position;
 
         // Make sure each node is found.
-        $this->assert($position !== FALSE);
+        $this->assertTrue($position !== FALSE);
       }
     }
 
     // Assert that node ids are rendered in the correct order.
-    $this->assert($positions['article'][0] < $positions['page'][0]);
-    $this->assert($positions['page'][0] < $positions['article'][1]);
-    $this->assert($positions['article'][1] < $positions['page'][1]);
+    $this->assertTrue($positions['article'][0] < $positions['page'][0]);
+    $this->assertTrue($positions['page'][0] < $positions['article'][1]);
+    $this->assertTrue($positions['article'][1] < $positions['page'][1]);
   }
 
 }
diff --git a/views_inject.info.yml b/views_inject.info.yml
index 0503c1c..a0eee6c 100644
--- a/views_inject.info.yml
+++ b/views_inject.info.yml
@@ -1,8 +1,7 @@
 name: Views Inject Results
 type: module
 description: Inject items from one views display into another.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: Views
 dependencies:
   - drupal:views
