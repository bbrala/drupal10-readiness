modules/contrib/questions_answers/questions_answers.install
modules/contrib/questions_answers/questions_answers.module
modules/contrib/questions_answers/questions_answers.tokens.inc
modules/contrib/questions_answers/src/AnswerInterface.php
modules/contrib/questions_answers/src/AnswerViewsData.php
modules/contrib/questions_answers/src/Controller/QuestionsAnswersController.php
modules/contrib/questions_answers/src/Entity/Answer.php
modules/contrib/questions_answers/src/Entity/Question.php
modules/contrib/questions_answers/src/Form/AnswerForm.php
modules/contrib/questions_answers/src/Form/HelpfulForm.php
modules/contrib/questions_answers/src/Form/ModerationQueueForm.php
modules/contrib/questions_answers/src/Form/QuestionForm.php
modules/contrib/questions_answers/src/Form/ReportAnswerForm.php
modules/contrib/questions_answers/src/Form/ReportQuestionForm.php
modules/contrib/questions_answers/src/Form/SettingsForm.php
modules/contrib/questions_answers/src/Form/SubscribeForm.php
modules/contrib/questions_answers/src/Form/UnsubscribeForm.php
modules/contrib/questions_answers/src/Plugin/Block/ModerationAlerts.php
modules/contrib/questions_answers/src/Plugin/Field/FieldFormatter/QuestionsAnswersFormatter.php
modules/contrib/questions_answers/src/Plugin/Field/FieldType/QuestionsAnswers.php
modules/contrib/questions_answers/src/Plugin/Field/FieldWidget/QuestionsAnswersWidget.php
modules/contrib/questions_answers/src/Plugin/views/field/AnswerList.php
modules/contrib/questions_answers/src/Plugin/views/field/AuthorName.php
modules/contrib/questions_answers/src/Plugin/views/field/HelpfulVotes.php
modules/contrib/questions_answers/src/Plugin/views/field/ParentEntity.php
modules/contrib/questions_answers/src/Plugin/views/field/Reported.php
modules/contrib/questions_answers/src/Plugin/views/field/Subscribed.php
modules/contrib/questions_answers/src/QuestionAnswerInterface.php
modules/contrib/questions_answers/src/QuestionInterface.php
modules/contrib/questions_answers/src/QuestionViewsData.php

24 files with changes
=====================

1) modules/contrib/questions_answers/src/QuestionViewsData.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\questions_answers;

+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\views\EntityViewsData;
 use Drupal\Core\Entity\FieldableEntityInterface;
@@ @@
   /**
    * Entity type for this views data handler instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface
+   * @var EntityTypeInterface
    */
   protected $entityType;

@@ @@
   /**
    * The storage used for this entity type.
    *
-   * @var \Drupal\Core\Entity\Sql\SqlEntityStorageInterface
+   * @var SqlEntityStorageInterface
    */
   protected $storage;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The translation manager.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translationManager;

@@ @@
   /**
    * The field storage definitions for all base fields of the entity type.
    *
-   * @var \Drupal\Core\Field\FieldStorageDefinitionInterface[]
+   * @var FieldStorageDefinitionInterface[]
    */
   protected $fieldStorageDefinitions;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * Constructs an EntityViewsData object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type to provide views integration for.
-   * @param \Drupal\Core\Entity\Sql\SqlEntityStorageInterface $storage_controller
+   * @param SqlEntityStorageInterface $storage_controller
    *   The storage handler used for this entity type.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The translation manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(EntityTypeInterface $entity_type, SqlEntityStorageInterface $storage_controller, EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, TranslationInterface $translation_manager, EntityFieldManagerInterface $entity_field_manager = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/questions_answers/src/Plugin/views/field/Subscribed.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/questions_answers/src/Plugin/views/field/Reported.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/questions_answers/src/Plugin/views/field/ParentEntity.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/questions_answers/src/Plugin/views/field/HelpfulVotes.php:53

    ---------- begin diff ----------
@@ @@
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/questions_answers/src/Plugin/views/field/AuthorName.php:50

    ---------- begin diff ----------
@@ @@
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/questions_answers/src/Plugin/views/field/AnswerList.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * Render the field.
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *   The result row we are rendering the value for.
    */
   public function render(ResultRow $values) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/questions_answers/src/Plugin/Field/FieldWidget/QuestionsAnswersWidget.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * Drupal entity type manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/questions_answers/src/Plugin/Field/FieldFormatter/QuestionsAnswersFormatter.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;

@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Drupal container.
    *
-   * @var Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/questions_answers/src/Plugin/Block/ModerationAlerts.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/questions_answers/src/Form/UnsubscribeForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    */
   public function access(AccountInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/questions_answers/src/Form/SubscribeForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Question being reported.
    *
-   * @var Drupal\questions_answers\Entity\Question
+   * @var Question
    */
   protected $question;

@@ @@
   /**
    * Sets the question being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Question $question
+   * @param Question $question
    *   The question we are building the form for.
    */
   public function setQuestion(Question $question) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/questions_answers/src/Form/SettingsForm.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/questions_answers/src/Form/ReportQuestionForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal session manager service container.
    *
-   * @var Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;

@@ @@
   /**
    * Question being reported.
    *
-   * @var Drupal\questions_answers\Entity\Question
+   * @var Question
    */
   protected $question;

@@ @@
   /**
    * Sets the question being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Question $question
+   * @param Question $question
    *   The question we are building the form for.
    */
   public function setQuestion(Question $question) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/questions_answers/src/Form/ReportAnswerForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal session manager service container.
    *
-   * @var Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;

@@ @@
   /**
    * Answer being reported.
    *
-   * @var Drupal\questions_answers\Entity\Answer
+   * @var Answer
    */
   protected $answer;

@@ @@
   /**
    * Sets the answer being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Answer $answer
+   * @param Answer $answer
    *   The answer we are building the form for.
    */
   public function setAnswer(Answer $answer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/questions_answers/src/Form/QuestionForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Mail\MailManager
+   * @var MailManager
    */
   protected $mailManager;

@@ @@
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * Drupal renderer service.
    *
-   * @var Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $rendererService;

@@ @@
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $tokenService;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/questions_answers/src/Form/ModerationQueueForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Drupal Form Builder service.
    *
-   * @var Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/questions_answers/src/Form/HelpfulForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal session manager service container.
    *
-   * @var Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;

@@ @@
   /**
    * Answer generating a help form for.
    *
-   * @var Drupal\questions_answers\Entity\Answer
+   * @var Answer
    */
   protected $answer;

@@ @@
   /**
    * Sets the answer being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Answer $answer
+   * @param Answer $answer
    *   The answer we are building the form for.
    */
   public function setAnswer(Answer $answer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/questions_answers/src/Form/AnswerForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal current user service container.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Drupal mail manager service container.
    *
-   * @var Drupal\Core\Mail\MailManager
+   * @var MailManager
    */
   protected $mailManager;

@@ @@
   /**
    * Drupal renderer service.
    *
-   * @var Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $rendererService;

@@ @@
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $languageManager;

@@ @@
   /**
    * Drupal token service.
    *
-   * @var Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $tokenService;

@@ @@
   /**
    * Question being answered.
    *
-   * @var Drupal\questions_answers\Entity\Question
+   * @var Question
    */
   protected $question;

@@ @@
   /**
    * Drupal entity manager service container.
    *
-   * @var Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Sets the question being used to build this form.
    *
-   * @param Drupal\questions_answers\Entity\Question $question
+   * @param Question $question
    *   The question we are building the form for.
    */
   public function setQuestion(Question $question) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/questions_answers/src/Entity/Question.php:264

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+    /** @var BaseFieldDefinition[] $fields */
     $fields = parent::baseFieldDefinitions($entity_type);
     $fields += static::publishedBaseFieldDefinitions($entity_type);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/questions_answers/src/Entity/Answer.php:260

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
-    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
+    /** @var BaseFieldDefinition[] $fields */
     $fields = parent::baseFieldDefinitions($entity_type);
     $fields += static::publishedBaseFieldDefinitions($entity_type);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/questions_answers/src/Controller/QuestionsAnswersController.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * System Manager Service.
    *
-   * @var \Drupal\system\SystemManager
+   * @var SystemManager
    */
   protected $systemManager;

@@ @@
   /**
    * Constructs a new QuestionsAnswersController.
    *
-   * @param \Drupal\system\SystemManager $systemManager
+   * @param SystemManager $systemManager
    *   System manager service.
    */
   public function __construct(SystemManager $systemManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/questions_answers/src/AnswerInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\questions_answers;

+use Drupal\questions_answers\Entity\Question;
 /**
  * Provides an interface defining a question entity.
  */
@@ @@
   /**
    * Get the question this answer is associated with.
    *
-   * @return Drupal\questions_answers\Entity\Question
+   * @return Question
    *   The question associated with this answer.
    */
   public function getQuestion();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


24) modules/contrib/questions_answers/questions_answers.tokens.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\questions_answers\QuestionInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for questions and answers data.
@@ @@
   }
   // Handle question types.
   elseif ($type == 'question' && !empty($data['question'])) {
-    /** @var \Drupal\questions_answers\QuestionInterface $question */
+    /** @var QuestionInterface $question */
     $question = $data['question'];

     foreach ($tokens as $name => $original) {
@@ @@
   }
   // Handle answer types.
   elseif ($type == 'answer' && !empty($data['answer'])) {
-    /** @var \Drupal\questions_answers\QuestionInterface $question */
+    /** @var QuestionInterface $question */
     $answer = $data['answer'];

     foreach ($tokens as $name => $original) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 24 files have been changed by Rector                                      

