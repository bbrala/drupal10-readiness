diff --git a/imagefield_zoom.install b/imagefield_zoom.install
index 002bd08..32805bd 100644
--- a/imagefield_zoom.install
+++ b/imagefield_zoom.install
@@ -1,9 +1,10 @@
 <?php
+
+use Drupal\Core\Asset\LibrariesDirectoryFileFinder;
 /**
  * @file
  * Contains library file requirement check and update hooks.
  */
-
 /**
  * Implementation of hook_requirements().
  *
@@ -23,7 +24,7 @@ function imagefield_zoom_requirements($phase) {
 
       $libraries_path = 'libraries/jquery_zoom';
       if (\Drupal::hasService('library.libraries_directory_file_finder')) {
-        /** @var \Drupal\Core\Asset\LibrariesDirectoryFileFinder $library_file_finder */
+        /** @var LibrariesDirectoryFileFinder $library_file_finder */
         $library_file_finder = \Drupal::service('library.libraries_directory_file_finder');
         $libraries_path = $library_file_finder->find('jquery_zoom');
       }
diff --git a/src/Plugin/Field/FieldFormatter/ImageZoomFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ImageZoomFieldFormatter.php
index 57f392d..eb9ef24 100644
--- a/src/Plugin/Field/FieldFormatter/ImageZoomFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageZoomFieldFormatter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\imagefield_zoom\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Session\AccountInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\image\Plugin\Field\FieldFormatter\ImageFormatterBase;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -29,21 +32,21 @@ class ImageZoomFieldFormatter extends ImageFormatterBase implements ContainerFac
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The image style storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;
 
   /**
    * The responsive image style storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $responsiveImageStyleStorage;
 
@@ -54,7 +57,7 @@ class ImageZoomFieldFormatter extends ImageFormatterBase implements ContainerFac
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -66,9 +69,9 @@ class ImageZoomFieldFormatter extends ImageFormatterBase implements ContainerFac
    *   Any third party settings.
    * @param object $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   Image style storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $responsive_image_style_storage
+   * @param EntityStorageInterface $responsive_image_style_storage
    *   Responsive image style storage.
    */
   public function __construct(
@@ -92,7 +95,7 @@ class ImageZoomFieldFormatter extends ImageFormatterBase implements ContainerFac
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ -104,8 +107,8 @@ class ImageZoomFieldFormatter extends ImageFormatterBase implements ContainerFac
    * @return static
    *   Returns an instance of this plugin.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
@@ -141,7 +144,7 @@ class ImageZoomFieldFormatter extends ImageFormatterBase implements ContainerFac
    *
    * @param array $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state array.
    *
    * @return mixed
@@ -331,7 +334,7 @@ class ImageZoomFieldFormatter extends ImageFormatterBase implements ContainerFac
           $item_attributes = $item->_attributes;
         }
         $image_target_id = $item->getValue()['target_id'];
-        $image_uri = file_create_url($image_uri);
+        $image_uri = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
         $image_uri = parse_url($image_uri);
         $original_urls[$image_target_id] = $image_uri['path'];
 
