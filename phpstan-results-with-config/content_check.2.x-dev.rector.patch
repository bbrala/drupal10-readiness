diff --git a/content_check.info.yml b/content_check.info.yml
index e88e3f9..5aa6906 100644
--- a/content_check.info.yml
+++ b/content_check.info.yml
@@ -1,4 +1,4 @@
 name: Content Check
 description: 'Provides ability to audit entities with plugins.'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 type: module
diff --git a/src/Annotation/ContentCheck.php b/src/Annotation/ContentCheck.php
index 924c504..bc21b8b 100644
--- a/src/Annotation/ContentCheck.php
+++ b/src/Annotation/ContentCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\content_check\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -32,7 +33,7 @@ class ContentCheck extends Plugin {
   /**
    * The human-readable name of the content check.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/ContentChecker.php b/src/ContentChecker.php
index 8aa32d1..a5410b7 100644
--- a/src/ContentChecker.php
+++ b/src/ContentChecker.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\content_check;
 
+use Drupal\content_check\Plugin\ContentCheckPluginManager;
+use Drupal\content_check\Plugin\ContentCheckInterface;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\content_check\Plugin\ContentCheckItem;
@@ -17,7 +19,7 @@ class ContentChecker {
   /**
    * The content check plugin manager.
    *
-   * @var \Drupal\content_check\Plugin\ContentCheckPluginManager
+   * @var ContentCheckPluginManager
    */
   protected $contentCheckPluginManager;
 
@@ -31,7 +33,7 @@ class ContentChecker {
   /**
    * Run the content checks against a specific entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to test.
    *
    * @return array
@@ -41,7 +43,7 @@ class ContentChecker {
     $results = [];
 
     foreach ($this->contentCheckPluginManager->getDefinitions() as $id => $definition) {
-      /** @var \Drupal\content_check\Plugin\ContentCheckInterface $instance */
+      /** @var ContentCheckInterface $instance */
       try {
         $instance = $this->contentCheckPluginManager->createInstance($id);
       }
diff --git a/src/Controller/ContentCheckController.php b/src/Controller/ContentCheckController.php
index 75cbfbc..499bb85 100644
--- a/src/Controller/ContentCheckController.php
+++ b/src/Controller/ContentCheckController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\content_check\Controller;
 
+use Drupal\node\Entity\Node;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\content_check\ContentChecker;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,7 +16,7 @@ class ContentCheckController extends ControllerBase {
   /**
    * The content checking service.
    *
-   * @var \Drupal\content_check\ContentChecker
+   * @var ContentChecker
    */
   protected $contentChecker;
 
@@ -37,14 +39,14 @@ class ContentCheckController extends ControllerBase {
   /**
    * Render the output of the checks applicable to this entity.
    *
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    *   The node entity we're checking.
    *
    * @return array
    *   The render array containing the output for the page.
    */
   public function overview($node) {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     //$entity = $route_match->getParameter($entity_type_id);
     $results = $this->contentChecker->checkEntity($node);
 
diff --git a/src/Plugin/ContentCheck/UrlAliasCheck.php b/src/Plugin/ContentCheck/UrlAliasCheck.php
index e30afa5..b630e48 100644
--- a/src/Plugin/ContentCheck/UrlAliasCheck.php
+++ b/src/Plugin/ContentCheck/UrlAliasCheck.php
@@ -20,14 +20,14 @@ class UrlAliasCheck extends ContentCheckBase {
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
@@ -40,9 +40,9 @@ class UrlAliasCheck extends ContentCheckBase {
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   The alias manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ModuleHandlerInterface $module_handler, AliasManagerInterface $alias_manager) {
diff --git a/src/Plugin/ContentCheckInput/RenderedEntityFullView.php b/src/Plugin/ContentCheckInput/RenderedEntityFullView.php
index 081647a..af4893e 100644
--- a/src/Plugin/ContentCheckInput/RenderedEntityFullView.php
+++ b/src/Plugin/ContentCheckInput/RenderedEntityFullView.php
@@ -19,7 +19,7 @@ class RenderedEntityFullView extends ContentCheckInputBase {
   public function getData($item) {
     $view_builder = \Drupal::entityTypeManager()->getViewBuilder($item->getEntity()->getEntityTypeId());
     $build = $view_builder->view($item->getEntity(), 'full', $item->getEntity()->language()->getId());
-    return render($build);
+    return \Drupal::service('renderer')->render($build);
   }
 
 }
diff --git a/src/Plugin/ContentCheckInputInterface.php b/src/Plugin/ContentCheckInputInterface.php
index f403ad2..b97ec85 100644
--- a/src/Plugin/ContentCheckInputInterface.php
+++ b/src/Plugin/ContentCheckInputInterface.php
@@ -12,7 +12,7 @@ interface ContentCheckInputInterface {
   /**
    * Check whether the test is applicable to this entity.
    *
-   * @param \Drupal\content_check\Plugin\ContentCheckItem $item
+   * @param ContentCheckItem $item
    *   The entity to check.
    *
    * @return mixed
diff --git a/src/Plugin/ContentCheckInputPluginManager.php b/src/Plugin/ContentCheckInputPluginManager.php
index 99595b1..e4ac95d 100644
--- a/src/Plugin/ContentCheckInputPluginManager.php
+++ b/src/Plugin/ContentCheckInputPluginManager.php
@@ -18,9 +18,9 @@ class ContentCheckInputPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/ContentCheckInterface.php b/src/Plugin/ContentCheckInterface.php
index 8fdc39f..c50dfa5 100644
--- a/src/Plugin/ContentCheckInterface.php
+++ b/src/Plugin/ContentCheckInterface.php
@@ -23,7 +23,7 @@ interface ContentCheckInterface {
   /**
    * Perform the check on the item.
    *
-   * @param \Drupal\content_check\Plugin\ContentCheckItem $item
+   * @param ContentCheckItem $item
    *   The item to test.
    *
    * @return array
diff --git a/src/Plugin/ContentCheckItem.php b/src/Plugin/ContentCheckItem.php
index 340b610..e7a239f 100644
--- a/src/Plugin/ContentCheckItem.php
+++ b/src/Plugin/ContentCheckItem.php
@@ -14,7 +14,7 @@ class ContentCheckItem {
   /**
    * Entity that all variants are based off.
    *
-   * @var \Drupal\Core\Entity\ContentEntityInterface
+   * @var ContentEntityInterface
    */
   protected $entity;
 
@@ -28,7 +28,7 @@ class ContentCheckItem {
   /**
    * ContentCheckItem constructor.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity to base this item from.
    */
   public function __construct(ContentEntityInterface $entity) {
@@ -39,7 +39,7 @@ class ContentCheckItem {
   /**
    * The initial base entity.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *   The base entity for this item.
    */
   public function getEntity() {
@@ -60,7 +60,7 @@ class ContentCheckItem {
       return $this->inputCache[$plugin];
     }
 
-    /** @var \Drupal\content_check\Plugin\ContentCheckInputPluginManager $input_plugin_manager */
+    /** @var ContentCheckInputPluginManager $input_plugin_manager */
     try {
       $input_plugin_manager = \Drupal::service('plugin.manager.content_check.content_check_input');
       $instance = $input_plugin_manager->createInstance($plugin);
diff --git a/src/Plugin/ContentCheckPluginManager.php b/src/Plugin/ContentCheckPluginManager.php
index 0689b22..d25985e 100644
--- a/src/Plugin/ContentCheckPluginManager.php
+++ b/src/Plugin/ContentCheckPluginManager.php
@@ -18,9 +18,9 @@ class ContentCheckPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
