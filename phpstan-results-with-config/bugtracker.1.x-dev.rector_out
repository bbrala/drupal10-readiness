modules/contrib/bugtracker/bug_tracker.module
modules/contrib/bugtracker/src/BugReportAccessControlHandler.php
modules/contrib/bugtracker/src/Controller/BugReportsController.php
modules/contrib/bugtracker/src/Entity/BugReportEntity.php
modules/contrib/bugtracker/src/Entity/Controller/BugReportListBuilder.php
modules/contrib/bugtracker/src/Form/BugReportDeleteForm.php
modules/contrib/bugtracker/src/Form/BugReportEditForm.php
modules/contrib/bugtracker/src/Form/BugTrackerSettingsForm.php
modules/contrib/bugtracker/src/Plugin/Block/ReportBugBlock.php

4 files with changes
====================

1) modules/contrib/bugtracker/src/Plugin/Block/ReportBugBlock.php:19

    ---------- begin diff ----------
@@ @@
  /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bugtracker/src/Entity/Controller/BugReportListBuilder.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;

@@ @@
   /**
    * Constructs a new BugReport object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, UrlGeneratorInterface $url_generator) {
@@ @@
   public function getFileLink($fid) {
     $file_object = File::load($fid);
     $file_name = $file_object ? $file_object->getFilename() : '';
-    $file_url = $file_name ? Url::fromUri(file_create_url($file_object->getFileUri()))->toString() : '';
+    $file_url = $file_name ? \Drupal::service('file_url_generator')->generate($file_object->getFileUri())->toString() : '';
     $link = $file_url ? "<a href='{$file_url}' target='_blank'>{$file_name}</a>" : '';
     return $link;
   }
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/bugtracker/src/Controller/BugReportsController.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Create bug report callback.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Response
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function createBugReport(Request $request) {

@@ @@
     $img = str_replace('data:image/png;base64,', '', $fileData);
     $img = str_replace(' ', '+', $img);
     $data = base64_decode($img);
-    $file = file_save_data($data, 'public://bug_reports/' . $file_name . '.png');
+    $file = \Drupal::service('file.repository')->writeData($data, 'public://bug_reports/' . $file_name . '.png');

     try {
       $bugReport = BugReportEntity::create($bugReportParams);
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/bugtracker/bug_tracker.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\taxonomy\Entity\Term;
 /**
  * hook_install()
  */
@@ @@
   ];

   foreach ($bugs_priorities_terms as $priority_term) {
-    $term = \Drupal\taxonomy\Entity\Term::create([
+    $term = Term::create([
       'vid' => 'bugs_priorities',
       'name' => $priority_term,
     ]);
@@ @@
   }

   foreach ($bugs_statuses_terms as $status_term) {
-    $term = \Drupal\taxonomy\Entity\Term::create([
+    $term = Term::create([
       'vid' => 'bugs_statuses',
       'name' => $status_term,
     ]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

