modules/contrib/owntracks/owntracks.install
modules/contrib/owntracks/owntracks.module
modules/contrib/owntracks/owntracks.theme.inc
modules/contrib/owntracks/src/Access/OwnTracksEntityAccessControlHandler.php
modules/contrib/owntracks/src/Access/OwnTracksUserMapAccess.php
modules/contrib/owntracks/src/Controller/OwnTracksEndpoint.php
modules/contrib/owntracks/src/Entity/OwnTracksEntityBase.php
modules/contrib/owntracks/src/Entity/OwnTracksEntityInterface.php
modules/contrib/owntracks/src/Entity/OwnTracksLocation.php
modules/contrib/owntracks/src/Entity/OwnTracksLocationInterface.php
modules/contrib/owntracks/src/Entity/OwnTracksTransition.php
modules/contrib/owntracks/src/Entity/OwnTracksTransitionInterface.php
modules/contrib/owntracks/src/Entity/OwnTracksWaypoint.php
modules/contrib/owntracks/src/Entity/OwnTracksWaypointInterface.php
modules/contrib/owntracks/src/Form/OwnTracksEntityForm.php
modules/contrib/owntracks/src/Form/OwnTracksUserMapForm.php
modules/contrib/owntracks/src/OwnTracksEndpointService.php
modules/contrib/owntracks/src/OwnTracksLocationService.php
modules/contrib/owntracks/src/OwnTracksLocationSettingsForm.php
modules/contrib/owntracks/src/OwnTracksLocationStorageSchema.php
modules/contrib/owntracks/src/OwnTracksMapSettingsForm.php
modules/contrib/owntracks/src/OwnTracksTransitionSettingsForm.php
modules/contrib/owntracks/src/OwnTracksTransitionStorageSchema.php
modules/contrib/owntracks/src/OwnTracksWaypointService.php
modules/contrib/owntracks/src/OwnTracksWaypointSettingsForm.php
modules/contrib/owntracks/src/OwnTracksWaypointStorageSchema.php
modules/contrib/owntracks/src/Plugin/views/access/OwnTracks.php
modules/contrib/owntracks/tests/src/Functional/OwnTracksAccessTest.php
modules/contrib/owntracks/tests/src/Functional/OwnTracksEndpointTest.php
modules/contrib/owntracks/tests/src/Kernel/OwnTracksLocationServiceTest.php
modules/contrib/owntracks/tests/src/Kernel/OwnTracksLocationTest.php
modules/contrib/owntracks/tests/src/Kernel/OwnTracksTransitionTest.php
modules/contrib/owntracks/tests/src/Kernel/OwnTracksWaypointServiceTest.php
modules/contrib/owntracks/tests/src/Kernel/OwnTracksWaypointTest.php

14 files with changes
=====================

1) modules/contrib/owntracks/tests/src/Kernel/OwnTracksWaypointTest.php:47

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('owntracks_waypoint');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/owntracks/tests/src/Kernel/OwnTracksWaypointServiceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\owntracks\Kernel;

+use Drupal\owntracks\OwnTracksWaypointService;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\owntracks\Entity\OwnTracksWaypoint;

@@ @@
   /**
    * The OwnTracks Waypoint service.
    *
-   * @var \Drupal\owntracks\OwnTracksWaypointService
+   * @var OwnTracksWaypointService
    */
   protected $ownTracksWaypointService;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('owntracks_waypoint');
     $this->ownTracksWaypointService = $this->container
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/owntracks/tests/src/Kernel/OwnTracksTransitionTest.php:55

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('owntracks_transition');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/owntracks/tests/src/Kernel/OwnTracksLocationTest.php:69

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('owntracks_location');
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/owntracks/tests/src/Kernel/OwnTracksLocationServiceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\owntracks\Kernel;

+use Drupal\owntracks\OwnTracksLocationService;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 use Drupal\owntracks\Entity\OwnTracksLocation;
@@ @@
   /**
    * The OwnTracks Location service.
    *
-   * @var \Drupal\owntracks\OwnTracksLocationService
+   * @var OwnTracksLocationService
    */
   protected $ownTracksLocationService;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installEntitySchema('owntracks_location');
     $this->ownTracksLocationService = $this->container->get('owntracks.location_service');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/owntracks/tests/src/Functional/OwnTracksEndpointTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\owntracks\Functional;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\owntracks\Entity\OwnTracksLocationInterface;
+use GuzzleHttp\Psr7\Response;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\Url;
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->endpointUrl = Url::fromRoute('owntracks.endpoint')
@@ @@
     $this->assertEquals(200, $response->getStatusCode());

     // Test default trigger value.
-    /** @var \Drupal\owntracks\Entity\OwnTracksLocationInterface $entity */
+    /** @var OwnTracksLocationInterface $entity */
     $entity = $this->entityTypeManager->getStorage('owntracks_location')
       ->load(2);
     $this->assertEquals('a', $entity->t->value);
@@ @@
    * @param array $options
    *   The request options.
    *
-   * @return \GuzzleHttp\Psr7\Response
+   * @return Response
    *   The request response.
    */
   protected function request(array $options) {
@@ @@
   /**
    * Get authorization header for the given account.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   A user account.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/owntracks/src/Plugin/views/access/OwnTracks.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The current route match service.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $current_route_match
+   * @param CurrentRouteMatch $current_route_match
    *   The current route match service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, CurrentRouteMatch $current_route_match) {
@@ @@
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
-    /** @var \Drupal\Core\Routing\CurrentRouteMatch $currentRouteMatch */
+    /** @var CurrentRouteMatch $currentRouteMatch */
     $currentRouteMatch = $container->get('current_route_match');

     return new static(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/owntracks/src/OwnTracksWaypointService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\owntracks;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;

 /**
@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * OwnTracksWaypointService constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ @@
    * @param int $tst
    *   The timestamp.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *
    * @return mixed|null
    *   A waypoint id if found.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/owntracks/src/OwnTracksLocationService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\owntracks;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * OwnTracksLocationService constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ @@
   /**
    * Get a user's location records.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user to get the track for.
-   * @param \Drupal\Core\Datetime\DrupalDateTime $date
+   * @param DrupalDateTime $date
    *   The date of the track.
    * @param string $tracker_id
    *   A tracker ID.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *
    * @return array
    *   The user's track.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/owntracks/src/OwnTracksEndpointService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\owntracks;

+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Serialization\Exception\InvalidDataTypeException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Logger\LoggerChannelFactory;
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The owntracks waypoint service.
    *
-   * @var \Drupal\owntracks\OwnTracksWaypointService
+   * @var OwnTracksWaypointService
    */
   protected $waypointService;

@@ @@
   /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * OwnTracksEndpointService constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\owntracks\OwnTracksWaypointService $waypoint_service
+   * @param OwnTracksWaypointService $waypoint_service
    *   The owntracks waypoint service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger
+   * @param LoggerChannelFactory $logger
    *   The logger service.
    */
   public function __construct(AccountInterface $current_user, EntityTypeManagerInterface $entity_type_manager, OwnTracksWaypointService $waypoint_service, LoggerChannelFactory $logger) {
@@ @@
    * @param string $data
    *   The posted data.
    *
-   * @throws \Drupal\Component\Serialization\Exception\InvalidDataTypeException
+   * @throws InvalidDataTypeException
    * @throws \Exception
    */
   public function create($data) {
@@ @@
    * @param string $entity_type
    *   The entity type.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *
    * @return $this
    */
@@ @@
    * @param int $entity_id
    *   The entity id.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *
    * @return $this
    */
@@ @@
   /**
    * Saves an owntracks entity.
    *
-   * @throws \Drupal\Component\Serialization\Exception\InvalidDataTypeException
+   * @throws InvalidDataTypeException
    * @throws \Exception
    */
   protected function saveEntity() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/owntracks/src/Form/OwnTracksUserMapForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * OwntracksLocationService definition.
    *
-   * @var \Drupal\owntracks\OwnTracksLocationService
+   * @var OwnTracksLocationService
    */
   protected $ownTracksLocationService;

@@ @@
   /**
    * OwnTracksDateSelectForm constructor.
    *
-   * @param \Drupal\owntracks\OwnTracksLocationService $owntracks_location_service
+   * @param OwnTracksLocationService $owntracks_location_service
    *   The owntracks location service.
    */
   public function __construct(OwnTracksLocationService $owntracks_location_service) {
@@ @@
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\owntracks\OwnTracksLocationService $locationService */
+    /** @var OwnTracksLocationService $locationService */
     $locationService = $container->get('owntracks.location_service');

     return new static(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/owntracks/src/Controller/OwnTracksEndpoint.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The endpoint service.
    *
-   * @var \Drupal\owntracks\OwnTracksEndpointService
+   * @var OwnTracksEndpointService
    */
   protected $endpointService;

@@ @@
   /**
    * OwnTracksEndpoint constructor.
    *
-   * @param \Drupal\owntracks\OwnTracksEndpointService $endpointService
+   * @param OwnTracksEndpointService $endpointService
    *   The owntracks endpoint service.
    */
   public function __construct(OwnTracksEndpointService $endpointService) {
@@ @@
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\owntracks\OwnTracksEndpointService $endpointService */
+    /** @var OwnTracksEndpointService $endpointService */
     $endpointService = $container->get('owntracks.endpoint_service');

     return new static(
@@ @@
   /**
    * Handle owntracks endpoint requests.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The HTTP request.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The HTTP response.
    */
   public function handle(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/owntracks/src/Access/OwnTracksUserMapAccess.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The current route match service.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;

@@ @@
   /**
    * OwnTracksUserMapAccess constructor.
    *
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $current_route_match
+   * @param CurrentRouteMatch $current_route_match
    *   The current route match service.
    */
   public function __construct(CurrentRouteMatch $current_route_match) {
@@ @@
   /**
    * Check access to owntracks user map.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in user.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   Allowed or Neutral.
    */
   public function access(AccountInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


14) modules/contrib/owntracks/owntracks.install:73

    ---------- begin diff ----------
@@ @@
  */
 function owntracks_update_8004() {
   $file = implode(DIRECTORY_SEPARATOR, [
-    drupal_get_path('module', 'owntracks'),
+    \Drupal::service('extension.list.module')->getPath('owntracks'),
     'config',
     'optional',
     'views.view.owntracks_location.yml',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 14 files have been changed by Rector                                      

