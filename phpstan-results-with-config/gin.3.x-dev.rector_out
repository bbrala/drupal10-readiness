themes/contrib/gin/gin.api.php
themes/contrib/gin/gin.theme
themes/contrib/gin/includes/breadcrumb.theme
themes/contrib/gin/includes/form.theme
themes/contrib/gin/includes/helper.theme
themes/contrib/gin/includes/html.theme
themes/contrib/gin/includes/node.theme
themes/contrib/gin/includes/page.theme
themes/contrib/gin/includes/paragraphs.theme
themes/contrib/gin/includes/settings.theme
themes/contrib/gin/includes/toolbar.theme
themes/contrib/gin/src/GinAfterBuild.php
themes/contrib/gin/src/GinContentFormHelper.php
themes/contrib/gin/src/GinDescriptionToggle.php
themes/contrib/gin/src/GinPreRender.php
themes/contrib/gin/src/GinSettings.php
themes/contrib/gin/src/GinUserPicture.php
themes/contrib/gin/tests/src/Functional/GinTest.php

12 files with changes
=====================

1) themes/contrib/gin/src/GinUserPicture.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gin;

+use Drupal\user\UserInterface;
+use Drupal\image\ImageStyleInterface;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The currently authenticated user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * GinUserPicture constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(AccountInterface $current_user, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
    */
   public function build(): array {

-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = $this->entityTypeManager->getStorage('user')->load($this->currentUser->id());

     $build = [
@@ @@
       ],
     ];

-    /** @var \Drupal\image\ImageStyleInterface $style */
+    /** @var ImageStyleInterface $style */
     $style = NULL;
     try {
       $style = $this->entityTypeManager->getStorage('image_style')->load('thumbnail');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) themes/contrib/gin/src/GinSettings.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Settings constructor.
    *
-   * @param \Drupal\user\UserDataInterface $userData
+   * @param UserDataInterface $userData
    *   The user data service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
    */
   public function __construct(UserDataInterface $userData, AccountInterface $currentUser, ConfigFactoryInterface $configFactory) {
@@ @@
    *
    * @param string $name
    *   The name of the setting.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    *
    * @return array|bool|mixed|null
@@ @@
    *
    * @param array $settings
    *   The user specific theme settings.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    */
   public function setAll(array $settings, AccountInterface $account = NULL) {
@@ @@
   /**
    * Clears all gin settings for the current user.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    */
   public function clear(AccountInterface $account = NULL) {
@@ @@
   /**
    * Determine if the user enabled overrides.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    *
    * @return bool
@@ @@
    *
    * @param string $name
    *   Name of the setting to check.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    *
    * @return bool
@@ @@
   /**
    * Build the settings form for the theme.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object.
    *
    * @return array
@@ @@
    * @param array $element
    *   An associative array containing the properties and children of the
    *   element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) themes/contrib/gin/src/GinDescriptionToggle.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The content form helper class.
    *
-   * @var \Drupal\gin\GinContentFormHelper
+   * @var GinContentFormHelper
    */
   protected $contentFormHelper;

@@ @@
   /**
    * The gin theme settings class.
    *
-   * @var \Drupal\gin\GinSettings
+   * @var GinSettings
    */
   protected $ginSettings;

@@ @@
   /**
    * GinDescriptionToggle constructor.
    *
-   * @param \Drupal\gin\GinSettings $ginSettings
+   * @param GinSettings $ginSettings
    *   The gin theme settings class.
-   * @param \Drupal\gin\GinContentFormHelper $contentFormHelper
+   * @param GinContentFormHelper $contentFormHelper
    *   The content form helper class.
    */
   public function __construct(GinSettings $ginSettings, GinContentFormHelper $contentFormHelper) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) themes/contrib/gin/src/GinContentFormHelper.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * GinContentFormHelper constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
    */
   public function __construct(AccountInterface $current_user, ModuleHandlerInterface $module_handler, RouteMatchInterface $route_match, ThemeManagerInterface $theme_manager) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $form_id
    *   The form id.
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $form_id
    *   The form id.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) themes/contrib/gin/src/GinAfterBuild.php:20

    ---------- begin diff ----------
@@ @@
    */
   public static function overriddenSettingByUser(array $element) {

-    /** @var \Drupal\gin\GinSettings $settings */
+    /** @var GinSettings $settings */
     $settings = \Drupal::classResolver(GinSettings::class);

     // Check if this is overridden by the logged in user.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) themes/contrib/gin/includes/toolbar.theme:34

    ---------- begin diff ----------
@@ @@
  */
 function gin_preprocess_menu__toolbar__gin(&$variables) {
   // Get theme settings.
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $logo_path = $settings->getDefault('logo.path');
   $logo_default = $settings->getDefault('logo.use_default');
@@ @@
   ];

   // Expose Toolbar variant.
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $variables['toolbar_variant'] = $settings->get('classic_toolbar');
 }
@@ @@
  */
 function gin_preprocess_toolbar__gin__secondary(&$variables) {
   // Expose Toolbar variant.
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $variables['toolbar_variant'] = $settings->get('classic_toolbar');

@@ @@
  * Toolbar alter().
  */
 function gin_theme_suggestions_toolbar_alter(array &$suggestions, array $variables) {
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $toolbar = $settings->get('classic_toolbar');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


7) themes/contrib/gin/includes/settings.theme:32

    ---------- begin diff ----------
@@ @@
    * General settings.
    * * //////////////////////////
    */
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);

   $form['custom_settings'] = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


8) themes/contrib/gin/includes/page.theme:17

    ---------- begin diff ----------
@@ @@
   $activeThemeName = \Drupal::theme()->getActiveTheme()->getName();
   $variables['active_admin_theme'] = $activeThemeName;

-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);

   // Expose Toolbar variant.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


9) themes/contrib/gin/includes/html.theme:16

    ---------- begin diff ----------
@@ @@

   if ($gin_activated) {
     // Get theme settings.
-    /** @var \Drupal\gin\GinSettings $settings */
+    /** @var GinSettings $settings */
     $settings = \Drupal::classResolver(GinSettings::class);
     $toolbar = $settings->get('classic_toolbar');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


10) themes/contrib/gin/includes/helper.theme:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Session\AccountInterface;
 /**
  * @file
  * helper.theme
@@ @@
  * Implements helper function _gin_user_form_submit().
  */
 function _gin_user_form_submit(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\Core\Session\AccountInterface $account */
+  /** @var AccountInterface $account */
   $account = $form_state->getBuildInfo()['callback_object']->getEntity();

   $enabledUserOverrides = $form_state->getValue('enable_user_settings');
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   if ($enabledUserOverrides) {
     $user_settings = [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


11) themes/contrib/gin/includes/form.theme:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Session\AccountInterface;
 /**
  * @file
  * form.theme
@@ @@
     return;
   }

-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);

   if ($settings->allowUserOverrides()) {
@@ @@
       '#weight' => 90,
     ];

-    /** @var \Drupal\Core\Session\AccountInterface $account */
+    /** @var AccountInterface $account */
     $account = $form_state->getBuildInfo()['callback_object']->getEntity();
     $form['gin_theme_settings']['enable_user_settings'] = [
       '#type' => 'checkbox',
@@ @@
  * Implements template_preprocess_HOOK() for text_format_wrapper.
  */
 function gin_preprocess_text_format_wrapper(&$variables) {
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   if ($settings->get('show_description_toggle') && !empty($variables['description'])) {
     $variables['description_display'] = 'invisible';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


12) themes/contrib/gin/includes/breadcrumb.theme:90

    ---------- begin diff ----------
@@ @@
 /**
  * Helper function to extract the entity for the supplied route.
  *
- * @return null|\Drupal\Core\Entity\ContentEntityInterface
+ * @return null|ContentEntityInterface
  *   Returns the content entity.
  */
 function _gin_get_route_entity() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 12 files have been changed by Rector                                      

