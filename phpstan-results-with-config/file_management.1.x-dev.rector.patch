diff --git a/modules/file_management_view/src/Controller/FileManagementViewController.php b/modules/file_management_view/src/Controller/FileManagementViewController.php
index 98dc25a..b57f2e6 100644
--- a/modules/file_management_view/src/Controller/FileManagementViewController.php
+++ b/modules/file_management_view/src/Controller/FileManagementViewController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\file_management_view\Controller;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\views\Views;
 
@@ -56,9 +58,9 @@ class FileManagementViewController extends ControllerBase {
    * @return string
    *   The page title.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Thrown if the entity type doesn't exist.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if the storage handler couldn't be loaded.
    */
   public function getFileUsageTitle($fid) {
diff --git a/src/Controller/FileManagementController.php b/src/Controller/FileManagementController.php
index 5c84006..ae4cf69 100644
--- a/src/Controller/FileManagementController.php
+++ b/src/Controller/FileManagementController.php
@@ -13,7 +13,7 @@ class FileManagementController extends ControllerBase {
   /**
    * Provides the file view page.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to edit.
    *
    * @return array
@@ -38,7 +38,7 @@ class FileManagementController extends ControllerBase {
   /**
    * Provides the title for the file view page.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to edit.
    *
    * @return string
@@ -55,7 +55,7 @@ class FileManagementController extends ControllerBase {
   /**
    * Provides the file edit page.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to edit.
    *
    * @return array
@@ -72,7 +72,7 @@ class FileManagementController extends ControllerBase {
   /**
    * Provides the file edit page.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to edit.
    *
    * @return array
@@ -89,7 +89,7 @@ class FileManagementController extends ControllerBase {
   /**
    * Provides the title for the file edit page.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to edit.
    *
    * @return string
@@ -106,7 +106,7 @@ class FileManagementController extends ControllerBase {
   /**
    * Provides the title for the file edit page.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to edit.
    *
    * @return string
diff --git a/src/FileManagement.php b/src/FileManagement.php
index 31ed095..7cf97ac 100644
--- a/src/FileManagement.php
+++ b/src/FileManagement.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\file_management;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\file\FileInterface;
@@ -15,7 +17,7 @@ class FileManagement implements FileManagementInterface {
   /**
    * Generates a render array with file information from the given file entity.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity from which to get the information from.
    *
    * @return array
@@ -25,7 +27,7 @@ class FileManagement implements FileManagementInterface {
     // Build a link to the file.
     $link = Link::fromTextAndUrl(
       $file->getFilename(),
-      Url::fromUri(file_create_url($file->getFileUri()))
+      \Drupal::service('file_url_generator')->generate($file->getFileUri())
     )->toRenderable();
     $link = \Drupal::service('renderer')->render($link);
 
@@ -105,7 +107,7 @@ class FileManagement implements FileManagementInterface {
   /**
    * Checks if a given file is an image.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to check.
    *
    * @return bool
@@ -151,7 +153,7 @@ class FileManagement implements FileManagementInterface {
   /**
    * Finds all usages of a given file and returns the allowed file extensions.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file entity to check for (global) allowed file extensions.
    *
    * @return array|bool
@@ -159,8 +161,8 @@ class FileManagement implements FileManagementInterface {
    *   an empty array if there are no restrictions
    *   and FALSE if there are no common allowed file extensions.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
    */
   public static function getAllowedFileExtensions(FileInterface $file) {
     $filtering = FALSE;
diff --git a/src/Form/FileManagementDeleteFileConfirmForm.php b/src/Form/FileManagementDeleteFileConfirmForm.php
index 0648dac..265e267 100644
--- a/src/Form/FileManagementDeleteFileConfirmForm.php
+++ b/src/Form/FileManagementDeleteFileConfirmForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_management\Form;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -14,7 +15,7 @@ class FileManagementDeleteFileConfirmForm extends ConfirmFormBase {
   /**
    * The file to be deleted.
    *
-   * @var \Drupal\file\FileInterface
+   * @var FileInterface
    */
   protected $file;
 
@@ -78,7 +79,7 @@ class FileManagementDeleteFileConfirmForm extends ConfirmFormBase {
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   (optional) The file to be deleted.
    */
   public function buildForm(array $form, FormStateInterface $form_state, $file = NULL) {
diff --git a/src/Form/FileManagementEditFileForm.php b/src/Form/FileManagementEditFileForm.php
index 535fc70..5e33cf3 100644
--- a/src/Form/FileManagementEditFileForm.php
+++ b/src/Form/FileManagementEditFileForm.php
@@ -18,23 +18,21 @@ class FileManagementEditFileForm extends FormBase {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
-
   protected $fileSystem;
 
   /**
    * The file_management service.
    *
-   * @var \Drupal\file_management\FileManagement;
+   * @var FileManagement ;
    */
-
   protected $fileManagement;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
