modules/contrib/sourcepoint/sourcepoint.module
modules/contrib/sourcepoint/src/Api/AbstractEndpoint.php
modules/contrib/sourcepoint/src/Api/ClientInterface.php
modules/contrib/sourcepoint/src/Api/Endpoint/Bootstrap.php
modules/contrib/sourcepoint/src/Api/Endpoint/Msg.php
modules/contrib/sourcepoint/src/Api/EndpointInterface.php
modules/contrib/sourcepoint/src/Api/EndpointManager.php
modules/contrib/sourcepoint/src/Api/EndpointManagerInterface.php
modules/contrib/sourcepoint/src/Api/HttpClient.php
modules/contrib/sourcepoint/src/Cmp.php
modules/contrib/sourcepoint/src/CmpInterface.php
modules/contrib/sourcepoint/src/Drush/Commands.php
modules/contrib/sourcepoint/src/Form/SettingsForm.php
modules/contrib/sourcepoint/tests/src/Unit/Api/AbstractEndpointTest.php
modules/contrib/sourcepoint/tests/src/Unit/Api/EndpointManagerTest.php
modules/contrib/sourcepoint/tests/src/Unit/CmpTest.php

9 files with changes
====================

1) modules/contrib/sourcepoint/tests/src/Unit/CmpTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\sourcepoint\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Tests\UnitTestCase;
 use Drupal\sourcepoint\Cmp;
 use Drupal\Core\Config\ConfigBase;
@@ @@
   /**
    * Get mocked config factory.
    *
-   * @param \Drupal\Core\Config\ConfigBase $config
+   * @param ConfigBase $config
    *   Mocked config class.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    *   Mocked config factory.
    */
   protected function getConfigFactory(ConfigBase $config) {
@@ @@
    * @param array $value_map
    *   Value map for getter.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    *   Mocked config class.
    */
   protected function getConfig(array $value_map) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/sourcepoint/src/Form/SettingsForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * CMP service.
    *
-   * @var \Drupal\sourcepoint\CmpInterface
+   * @var CmpInterface
    */
   protected $cmp;

@@ @@
   /**
    * SettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\sourcepoint\CmpInterface $cmp
+   * @param CmpInterface $cmp
    *   CMP service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/sourcepoint/src/Drush/Commands.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Endpoint manager.
    *
-   * @var \Drupal\sourcepoint\Api\EndpointManagerInterface
+   * @var EndpointManagerInterface
    */
   protected $endpointManager;

@@ @@
   /**
    * Commands constructor.
    *
-   * @param \Drupal\sourcepoint\Api\EndpointManagerInterface $endpoint_manager
+   * @param EndpointManagerInterface $endpoint_manager
    *   Endpoint manager.
    */
   public function __construct(EndpointManagerInterface $endpoint_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/sourcepoint/src/CmpInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sourcepoint;

+use Drupal\Core\Url;
 /**
  * Interface CmpInterface.
  *
@@ @@
   /**
    * Gets the privacy URL.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Overlay URL.
    */
   public function getUrl();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/sourcepoint/src/Cmp.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sourcepoint;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Url;

@@ @@
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Cmp constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Get config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   Immutable config.
    */
   protected function getConfig() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/sourcepoint/src/Api/EndpointManagerInterface.php:19

    ---------- begin diff ----------
@@ @@
    * @param string $endpoint_name
    *   Endpoint name.
    *
-   * @return \Drupal\sourcepoint\Api\EndpointInterface
+   * @return EndpointInterface
    *   Endpoint service.
    */
   public function getEndpoint($endpoint_name);
@@ @@
   /**
    * Get list of endpoints.
    *
-   * @return \Drupal\sourcepoint\Api\EndpointInterface[]
+   * @return EndpointInterface[]
    *   List of endpoint services.
    */
   public function getEndpoints();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


7) modules/contrib/sourcepoint/src/Api/EndpointManager.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * List of collected endpoints.
    *
-   * @var \Drupal\sourcepoint\Api\EndpointInterface[]
+   * @var EndpointInterface[]
    */
   protected $endpoints = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/sourcepoint/src/Api/AbstractEndpoint.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sourcepoint\Api;

+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;

@@ @@
   /**
    * API Client.
    *
-   * @var \Drupal\sourcepoint\Api\ClientInterface
+   * @var ClientInterface
    */
   protected $client;

@@ @@
   /**
    * Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * AbstractEndpoint constructor.
    *
-   * @param \Drupal\sourcepoint\Api\ClientInterface $client
+   * @param ClientInterface $client
    *   The client service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct(ClientInterface $client, ConfigFactoryInterface $config_factory) {
@@ @@
    * {@inheritdoc}
    */
   public function fetch() {
-    FileSystemInterface::saveData($this->request(), $this->getPath(), FILE_EXISTS_REPLACE);
+    FileSystemInterface::saveData($this->request(), $this->getPath(), FileSystemInterface::EXISTS_REPLACE);
     return $this;
   }

@@ @@
   /**
    * Get editable config.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   Editable config object.
    */
   protected function getEditableConfig() {
@@ @@
   /**
    * Get config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   Immutable config object.
    */
   protected function getConfig() {
    ----------- end diff -----------

Applied rules:
 * FileExistsReplaceRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/sourcepoint/sourcepoint.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Menu\MenuLinkDefault;
+use Drupal\Core\Url;
 /**
  * @file
  * Sourcepoint module.
@@ @@

     // URL to msg JS.
     if ($msg_path = $endpoint_service->getEndpoint('msg')->getPath()) {
-      $bootstrap['#msg_url'] = file_create_url($msg_path);
+      $bootstrap['#msg_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($msg_path);
     }

     // Pass config to the template.
@@ @@
 function sourcepoint_preprocess_menu(&$variables) {
   // We need to set Onclick on the privacy preferences link.
   foreach ($variables['items'] as $item) {
-    /** @var \Drupal\Core\Menu\MenuLinkDefault $menu_link */
+    /** @var MenuLinkDefault $menu_link */
     $menu_link = isset($item['original_link']) ? $item['original_link'] : NULL;
     if ($menu_link->getTitle() === 'Privacy Preferences') {
       // Sourcepoint configuration.
       $config = \Drupal::config('sourcepoint.settings');
       $privacy_id = $config->get('privacy_manager_id_v2');
-      /** @var \Drupal\Core\Url $url */
+      /** @var Url $url */
       $url = $item['url'];
       $onclick = 'window._sp_.loadPrivacyManagerModal(' . $privacy_id  . ');';
       $option = ['onclick' => $onclick];
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


 [OK] 9 files have been changed by Rector                                       

