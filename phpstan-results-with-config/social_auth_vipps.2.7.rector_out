modules/contrib/social_auth_vipps/social_auth_vipps.install
modules/contrib/social_auth_vipps/social_auth_vipps.module
modules/contrib/social_auth_vipps/src/Controller/VippsAuthController.php
modules/contrib/social_auth_vipps/src/EventSubscriber/CallbackEventSubscriber.php
modules/contrib/social_auth_vipps/src/Form/VippsAuthSettingsForm.php
modules/contrib/social_auth_vipps/src/OptionProvider/VippsAuthOptionProvider.php
modules/contrib/social_auth_vipps/src/Plugin/Network/VippsAuth.php
modules/contrib/social_auth_vipps/src/Plugin/Network/VippsAuthInterface.php
modules/contrib/social_auth_vipps/src/Provider/AddressData.php
modules/contrib/social_auth_vipps/src/Provider/Exception/EmailNotVerifiedException.php
modules/contrib/social_auth_vipps/src/Provider/Exception/VippsIdentityProviderException.php
modules/contrib/social_auth_vipps/src/Provider/Vipps.php
modules/contrib/social_auth_vipps/src/Provider/VippsResourceOwner.php
modules/contrib/social_auth_vipps/src/Settings/VippsAuthSettings.php
modules/contrib/social_auth_vipps/src/Settings/VippsAuthSettingsInterface.php
modules/contrib/social_auth_vipps/src/VippsAuthManager.php
modules/contrib/social_auth_vipps/tests/src/Functional/SocialAuthVippsLoginBlockTest.php
modules/contrib/social_auth_vipps/tests/src/Functional/SocialAuthVippsSettingsFormTest.php

11 files with changes
=====================

1) modules/contrib/social_auth_vipps/tests/src/Functional/SocialAuthVippsSettingsFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\social_auth_vipps\Functional;

+use Behat\Mink\Exception\ElementNotFoundException;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\social_auth\Functional\SocialAuthTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->module = 'social_auth_vipps';
     $this->provider = 'vipps';
     $this->moduleType = 'social-auth';
@@ @@
   /**
    * Test if permissions are set correctly for settings page.
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ElementNotFoundException
+   * @throws ExpectationException
    */
   public function testPermissionForSettingsPage() {
     $this->checkPermissionForSettingsPage();
@@ @@

   /**
    * Test settings form submission.
+   * @doesNotPerformAssertions
    */
   public function testSettingsFormSubmission() {
     $this->edit = [
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/social_auth_vipps/tests/src/Functional/SocialAuthVippsLoginBlockTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\social_auth_vipps\Functional;

+use Behat\Mink\Exception\ResponseTextException;
 use Drupal\Tests\social_auth\Functional\SocialAuthTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->provider = 'vipps';
@@ @@
   /**
    * Test that the path is included in the login block.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ResponseTextException
    */
   public function testLinkExistsInBlock() {
     $this->checkLinkToProviderExists();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/social_auth_vipps/src/VippsAuthManager.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $configFactory
+   * @param ConfigFactory $configFactory
    *   Used for accessing configuration object factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
    */
   public function __construct(ConfigFactory $configFactory, LoggerChannelFactoryInterface $logger_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/social_auth_vipps/src/Provider/VippsResourceOwner.php:172

    ---------- begin diff ----------
@@ @@
    * @param string $domain
    *   Vipps domain.
    *
-   * @return \League\OAuth2\Client\Provider\ResourceOwnerInterface
+   * @return ResourceOwnerInterface
    *   Resource Owner.
    */
   public function setDomain($domain) {
@@ @@
   /**
    * Verification guard.
    *
-   * @throws \Drupal\social_auth_vipps\Provider\Exception\EmailNotVerifiedException
+   * @throws EmailNotVerifiedException
    */
   public function verificationGuard() {
     if (!$this->emailVerified()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/social_auth_vipps/src/Provider/Vipps.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_auth_vipps\Provider;

+use League\OAuth2\Client\Provider\ResourceOwnerInterface;
 use Drupal\social_auth_vipps\OptionProvider\VippsAuthOptionProvider;
 use Drupal\social_auth_vipps\Provider\Exception\VippsIdentityProviderException;
 use League\OAuth2\Client\Token\AccessToken;
@@ @@
   /**
    * Get provider url to fetch user details.
    *
-   * @param \League\OAuth2\Client\Token\AccessToken $token
+   * @param AccessToken $token
    *   Access token.
    *
    * @return string
@@ @@
    * @link https://developer.github.com/v3/#client-errors
    * @link https://developer.github.com/v3/oauth/#common-errors-for-the-access-token-request
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   Response.
    * @param string $data
    *   Parsed response data.
    *
-   * @throws \Drupal\social_auth_vipps\Provider\Exception\VippsIdentityProviderException
+   * @throws VippsIdentityProviderException
    */
   protected function checkResponse(ResponseInterface $response, $data) {
     if ($response->getStatusCode() >= 400) {
@@ @@
    *
    * @param array $response
    *   Response.
-   * @param \League\OAuth2\Client\Token\AccessToken $token
+   * @param AccessToken $token
    *   Access token.
    *
-   * @return \League\OAuth2\Client\Provider\ResourceOwnerInterface
+   * @return ResourceOwnerInterface
    *   Resource owner.
    */
   protected function createResourceOwner(array $response, AccessToken $token) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/social_auth_vipps/src/Provider/Exception/VippsIdentityProviderException.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Creates client exception from response.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   Response.
    * @param string $data
    *   Parsed response data.
@@ @@
   /**
    * Creates oauth exception from response.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   Response.
    * @param string $data
    *   Parsed response data.
@@ @@
   /**
    * Creates identity exception from response.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   Response.
    * @param string $message
    *   Message.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/social_auth_vipps/src/Plugin/Network/VippsAuth.php:33

    ---------- begin diff ----------
@@ @@
    *   The initialized 3rd party library instance.
    *   False if library could not be initialized.
    *
-   * @throws \Drupal\social_api\SocialApiException
+   * @throws SocialApiException
    *   If the SDK library does not exist.
    */
   protected function initSdk() {
@@ @@
       throw new SocialApiException(sprintf('The Vipps library for PHP League OAuth2 not found. Class: %s.', $class_name));
     }

-    /** @var \Drupal\social_auth_vipps\Settings\VippsAuthSettings $settings */
+    /** @var VippsAuthSettings $settings */
     $settings = $this->settings;

     if ($this->validateConfig($settings)) {
@@ @@
   /**
    * Checks that module is configured.
    *
-   * @param \Drupal\social_auth_vipps\Settings\VippsAuthSettings $settings
+   * @param VippsAuthSettings $settings
    *   The Vipps auth settings.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/social_auth_vipps/src/EventSubscriber/CallbackEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_auth_vipps\EventSubscriber;

+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Messenger\MessengerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Core\Url;
 use Symfony\Component\HttpFoundation\RequestStack;
@@ @@
   /**
    * Request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   private $request;

@@ @@
   /**
    * Drupal messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private $messenger;

@@ @@
   /**
    * CallbackEventSubscriber constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request stack.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   Drupal messenger.
    */
   public function __construct(RequestStack $requestStack, MessengerInterface $messenger) {
@@ @@
   /**
    * Check possible errors.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   Response event.
    */
-  public function checkForErrors(GetResponseEvent $event) {
+  public function checkForErrors(RequestEvent $event) {
     if (!empty($this->request->get('error'))) {
       $this->messenger->addError($this->request->get('error_description'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/social_auth_vipps/src/Controller/VippsAuthController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_auth_vipps\Controller;

+use Drupal\social_auth_vipps\Provider\VippsResourceOwner;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\social_api\Plugin\NetworkManager;
@@ @@
   /**
    * VippsAuthController constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\social_api\Plugin\NetworkManager $network_manager
+   * @param NetworkManager $network_manager
    *   Used to get an instance of social_auth_vipps network plugin.
-   * @param \Drupal\social_auth\User\UserAuthenticator $user_authenticator
+   * @param UserAuthenticator $user_authenticator
    *   Manages user login/registration.
-   * @param \Drupal\social_auth_vipps\VippsAuthManager $vipps_manager
+   * @param VippsAuthManager $vipps_manager
    *   Used to manage authentication methods.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Used to access GET parameters.
-   * @param \Drupal\social_auth\SocialAuthDataHandler $data_handler
+   * @param SocialAuthDataHandler $data_handler
    *   The Social Auth data handler.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   Used to handle metadata for redirection to authentication URL.
    */
   public function __construct(
@@ @@
    * Vipps returns the user here after user has authenticated.
    */
   public function callback() {
-    /** @var \Drupal\social_auth_vipps\Provider\VippsResourceOwner|null $profile */
+    /** @var VippsResourceOwner|null $profile */
     $profile = $this->processCallback();

     // If authentication was successful.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/social_auth_vipps/social_auth_vipps.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\ConfigFactoryInterface;
 /**
  * @file
  * Hook implementations for Social Auth Vipps module.
@@ @@
  *
  * @param array $form
  *   Login form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Login form state.
  */
 function social_auth_vipps_show_vipps_login_button(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $configFactory */
+  /** @var ConfigFactoryInterface $configFactory */
   $configFactory = Drupal::service('config.factory');
   $config = $configFactory->get(VippsAuthSettingsForm::SETTINGS);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


11) modules/contrib/social_auth_vipps/social_auth_vipps.install:13

    ---------- begin diff ----------
@@ @@
   SocialAuthController::setLoginButtonSettings('social_auth_vipps', 'social_auth_vipps.redirect_to_vipps', 'img/vipps_logo.png');

   $config = \Drupal::configFactory()->getEditable('social_auth.settings');
-  $imgPath = drupal_get_path('module', 'social_auth_vipps') . '/img/log_in_with_vipps_btn.svg';
+  $imgPath = \Drupal::service('extension.list.module')->getPath('social_auth_vipps') . '/img/log_in_with_vipps_btn.svg';
   $config->set('log_in_with_vipps_btn', $imgPath)->save();
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 11 files have been changed by Rector                                      

