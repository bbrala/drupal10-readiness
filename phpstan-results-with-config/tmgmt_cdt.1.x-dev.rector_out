modules/contrib/tmgmt_cdt/src/Entity/ListBuilder/TmgmtCdtJobItemListBuilder.php
modules/contrib/tmgmt_cdt/src/Entity/ListBuilder/TmgmtCdtJobListBuilder.php
modules/contrib/tmgmt_cdt/src/Entity/TmgmtCdtJob.php
modules/contrib/tmgmt_cdt/src/Entity/TmgmtCdtJobItem.php
modules/contrib/tmgmt_cdt/src/Plugin/tmgmt/Translator/TmgmtCdtTranslator.php
modules/contrib/tmgmt_cdt/src/Plugin/tmgmt_cdt/Format/TmgmtCdtXml.php
modules/contrib/tmgmt_cdt/src/TmgmtCdtApi.php
modules/contrib/tmgmt_cdt/src/TmgmtCdtFormatHelper.php
modules/contrib/tmgmt_cdt/src/TmgmtCdtHelper.php
modules/contrib/tmgmt_cdt/src/TmgmtCdtTranslatorUi.php
modules/contrib/tmgmt_cdt/tmgmt_cdt.install
modules/contrib/tmgmt_cdt/tmgmt_cdt.module

5 files with changes
====================

1) modules/contrib/tmgmt_cdt/tmgmt_cdt.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\Entity\ConfigEntityStorage;
+use Drupal\views\Entity\View;
 /**
  * @file
  * Install.
@@ @@
   $serviceSchema->addIndex('tmgmt_job', 'tmgmt_job_field__cdt_correlation_id__index', ['cdt_correlation_id'], $spec);
   $serviceSchema->addIndex('tmgmt_job', 'tmgmt_job_field__cdt_request_identifier__index', ['cdt_request_identifier'], $spec);

-  /** @var \Drupal\Core\Config\Entity\ConfigEntityStorage $storage */
+  /** @var ConfigEntityStorage $storage */
   $storage = \Drupal::entityTypeManager()->getStorage('view');

   // Jobs.
@@ @@
   $fileStorage = new FileStorage($path);

   $config = $fileStorage->read('views.view.tmgmt_job_overview');
-  /** @var \Drupal\views\Entity\View $view */
+  /** @var View $view */
   $view = $storage->create($config);
   if ($view) {
     $view->enable();
@@ @@

   // Job items.
   $config = $fileStorage->read('views.view.tmgmt_job_items');
-  /** @var \Drupal\views\Entity\View $view */
+  /** @var View $view */
   $view = $storage->create($config);
   if ($view) {
     $view->enable();
@@ @@

   // All job items.
   $config = $fileStorage->read('views.view.tmgmt_translation_all_job_items');
-  /** @var \Drupal\views\Entity\View $view */
-
+  /** @var View $view */
   $view = $storage->create($config);
   if ($view) {
     $view->enable();
@@ @@

   \Drupal::state()->deleteMultiple(array_keys(TmgmtCdtHelper::defaultOptions()));

-  /** @var \Drupal\Core\Config\Entity\ConfigEntityStorage $storage */
+  /** @var ConfigEntityStorage $storage */
   $storage = \Drupal::entityTypeManager()->getStorage('view');

   // Restore Views from TMGMT
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/tmgmt_cdt/src/TmgmtCdtTranslatorUi.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tmgmt_cdt;

+use Drupal\tmgmt\TranslatorInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Messenger\MessengerTrait;
@@ @@
   public function submitPullTranslations(array $form, FormStateInterface $form_state) {
     $this->messenger()->deleteAll();
     /**
-     * @var \Drupal\tmgmt\TranslatorInterface $translator
+     * @var TranslatorInterface $translator
      */
     $job = $form_state->getFormObject()->getEntity();

@@ @@
   public function submitAcceptQuotation(array $form, FormStateInterface $form_state) {
     $this->messenger()->deleteAll();
     /**
-     * @var \Drupal\tmgmt\TranslatorInterface $translator
+     * @var TranslatorInterface $translator
      */
     $job = $form_state->getFormObject()->getEntity();

@@ @@
   public function submitCancelQuotation(array $form, FormStateInterface $form_state) {
     $this->messenger()->deleteAll();
     /**
-     * @var \Drupal\tmgmt\TranslatorInterface $translator
+     * @var TranslatorInterface $translator
      */
     $job = $form_state->getFormObject()->getEntity();

@@ @@
     parent::validateConfigurationForm($form, $form_state);

     /**
-     * @var \Drupal\tmgmt\TranslatorInterface $translator
+     * @var TranslatorInterface $translator
      */
     $translator = $form_state->getFormObject()->getEntity();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tmgmt_cdt/src/TmgmtCdtHelper.php:98

    ---------- begin diff ----------
@@ @@
     ];

     $html_formats = array_filter(filter_formats(), function (FilterFormatInterface $format) {
-      /** @var \Drupal\filter\Plugin\FilterInterface $filter */
+      /** @var FilterInterface $filter */
       foreach ($format->filters() as $filter) {
         if ($filter->status && $filter->getType() === FilterInterface::TYPE_HTML_RESTRICTOR) {
           return TRUE;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/tmgmt_cdt/src/Plugin/tmgmt_cdt/Format/TmgmtCdtXml.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Contains a reference to the currently being exported job.
    *
-   * @var \Drupal\tmgmt\Entity\Job
+   * @var Job
    */
   protected $job;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tmgmt_cdt/src/Plugin/tmgmt/Translator/TmgmtCdtTranslator.php:121

    ---------- begin diff ----------
@@ @@

       $directory = 'public://tmgmt_file';
       \Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
-      $file = file_save_data($file_content, "public://tmgmt_file/$file_name", FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($file_content, "public://tmgmt_file/$file_name", FileSystemInterface::EXISTS_REPLACE);
       if (!$file) {
         throw new \Exception('Cannot create Xml file');
       }
       \Drupal::service('file.usage')->add($file, 'tmgmt_file', 'tmgmt_job', $job->id());
-      $job->addMessage('XML file created, can be downloaded <a href="@link" download>here</a>.', ['@link' => file_create_url("public://tmgmt_file/$file_name")]);
+      $job->addMessage('XML file created, can be downloaded <a href="@link" download>here</a>.', ['@link' => \Drupal::service('file_url_generator')->generateAbsoluteString("public://tmgmt_file/$file_name")]);

       $request_params = $this->generateRequest($job, $file_content);
       $file_content = NULL;
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

