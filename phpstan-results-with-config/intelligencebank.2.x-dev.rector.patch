diff --git a/modules/ib_dam_media/ib_dam_media.install b/modules/ib_dam_media/ib_dam_media.install
index 22ff573..67288e8 100644
--- a/modules/ib_dam_media/ib_dam_media.install
+++ b/modules/ib_dam_media/ib_dam_media.install
@@ -1,17 +1,17 @@
 <?php
 
+use Drupal\media\MediaInterface;
 /**
  * @file
  * Contains install/uninstall hooks.
  */
-
 /**
  * Update existing embedded field structures.
  */
 function ib_dam_media_update_8601() {
   static $type       = 'ib_dam_embed';
   static $field_name = 'field_media_ib_dam_embed';
-  /** @var \Drupal\media\MediaInterface[] $medias */
+  /** @var MediaInterface[] $medias */
   $medias = \Drupal::entityTypeManager()
     ->getStorage('media')
     ->loadByProperties(['bundle' => $type]);
diff --git a/modules/ib_dam_media/src/AssetStorage/MediaStorage.php b/modules/ib_dam_media/src/AssetStorage/MediaStorage.php
index 917cb38..d3e1437 100644
--- a/modules/ib_dam_media/src/AssetStorage/MediaStorage.php
+++ b/modules/ib_dam_media/src/AssetStorage/MediaStorage.php
@@ -25,14 +25,14 @@ class MediaStorage implements AssetStorageInterface {
   /**
    * Media type suited for current asset.
    *
-   * @var \Drupal\media\Entity\MediaType
+   * @var MediaType
    */
   private $mediaType;
 
   /**
    * Set media type.
    *
-   * @param \Drupal\media\Entity\MediaType $type
+   * @param MediaType $type
    *   The loaded Media Type.
    *
    * @return $this
@@ -97,7 +97,7 @@ class MediaStorage implements AssetStorageInterface {
   /**
    * Image pre-fill method.
    *
-   * @param \Drupal\ib_dam\Asset\LocalAsset $asset
+   * @param LocalAsset $asset
    *   The Asset.
    *
    * @return array
@@ -114,7 +114,7 @@ class MediaStorage implements AssetStorageInterface {
   /**
    * File pre-fill method.
    *
-   * @param \Drupal\ib_dam\Asset\LocalAsset $asset
+   * @param LocalAsset $asset
    *   The Asset.
    *
    * @return array
@@ -130,7 +130,7 @@ class MediaStorage implements AssetStorageInterface {
   /**
    * Embed pre-fill method.
    *
-   * @param \Drupal\ib_dam\Asset\EmbedAsset $asset
+   * @param EmbedAsset $asset
    *   The Asset.
    *
    * @return array
diff --git a/modules/ib_dam_media/src/Exceptions/MediaTypeMatcherBadMediaTypeMatch.php b/modules/ib_dam_media/src/Exceptions/MediaTypeMatcherBadMediaTypeMatch.php
index 103dc31..af42c3b 100644
--- a/modules/ib_dam_media/src/Exceptions/MediaTypeMatcherBadMediaTypeMatch.php
+++ b/modules/ib_dam_media/src/Exceptions/MediaTypeMatcherBadMediaTypeMatch.php
@@ -16,7 +16,7 @@ class MediaTypeMatcherBadMediaTypeMatch extends IbDamException {
    * MediaTypeMatcherBadMediaTypeMatch constructor.
    *
    * @param $source_type
-   * @param \Drupal\ib_dam\IbDamResourceModel $source
+   * @param IbDamResourceModel $source
    */
   public function __construct($source_type, IbDamResourceModel $source) {
     $log_message = "Can't find a media type match for the source type %source_type";
diff --git a/modules/ib_dam_media/src/Form/MediaConfigurationForm.php b/modules/ib_dam_media/src/Form/MediaConfigurationForm.php
index 8a90dfe..bdbc81a 100644
--- a/modules/ib_dam_media/src/Form/MediaConfigurationForm.php
+++ b/modules/ib_dam_media/src/Form/MediaConfigurationForm.php
@@ -21,25 +21,25 @@ class MediaConfigurationForm extends ConfigFormBase {
   /**
    * Media Type Matcher instance.
    *
-   * @var \Drupal\ib_dam_media\MediaTypeMatcher
+   * @var MediaTypeMatcher
    */
   protected $mediaTypeMatcher;
 
   /**
    * Entity Type Manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a MediaConfigurationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager to get media types.
-   * @param \Drupal\ib_dam_media\MediaTypeMatcher $media_type_matcher
+   * @param MediaTypeMatcher $media_type_matcher
    *   The media type matcher to find right media types matches.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, MediaTypeMatcher $media_type_matcher) {
diff --git a/modules/ib_dam_media/src/MediaTypeMatcher.php b/modules/ib_dam_media/src/MediaTypeMatcher.php
index 0fc8afa..f63ce44 100644
--- a/modules/ib_dam_media/src/MediaTypeMatcher.php
+++ b/modules/ib_dam_media/src/MediaTypeMatcher.php
@@ -2,13 +2,14 @@
 
 namespace Drupal\ib_dam_media;
 
+use Symfony\Component\Mime\MimeTypesInterface;
+use Drupal\media\Entity\MediaType;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\ib_dam\Downloader;
 use Drupal\ib_dam_media\Exceptions\MediaTypeMatcherBadMediaTypes;
 use Exception;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * Class MediaTypeMatcher.
@@ -27,7 +28,7 @@ class MediaTypeMatcher {
   /**
    * {@inheritdoc}
    */
-  public function __construct(ConfigFactoryInterface $config_factory, MimeTypeGuesserInterface $mime_type_guesser, EntityTypeManagerInterface $entity_type_manager) {
+  public function __construct(ConfigFactoryInterface $config_factory, MimeTypesInterface $mime_type_guesser, EntityTypeManagerInterface $entity_type_manager) {
     $this->config = $config_factory->get('ib_dam_media.settings');
     $this->mimeGuesser = $mime_type_guesser;
     $this->entityTypeManager = $entity_type_manager;
@@ -133,7 +134,7 @@ class MediaTypeMatcher {
         ->displayMessage();
       return [];
     }
-    /** @var \Drupal\media\Entity\MediaType $bundle */
+    /** @var MediaType $bundle */
     foreach ($media_bundles as $bundle_name => $bundle) {
       $discrete_types = [];
 
@@ -165,7 +166,7 @@ class MediaTypeMatcher {
   /**
    * Collect all allowed file extensions either for a given media types or all.
    *
-   * @param \Drupal\media\Entity\MediaType[] $media_types
+   * @param MediaType[] $media_types
    *   List of media types instances to get data.
    * @param bool $load_all
    *   Collect file extensions even if there is empty media types variable.
diff --git a/modules/ib_dam_media/src/Plugin/media/Source/IbDamEmbedField.php b/modules/ib_dam_media/src/Plugin/media/Source/IbDamEmbedField.php
index 11d9b3d..0caaec4 100644
--- a/modules/ib_dam_media/src/Plugin/media/Source/IbDamEmbedField.php
+++ b/modules/ib_dam_media/src/Plugin/media/Source/IbDamEmbedField.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ib_dam_media\Plugin\media\Source;
 
+use Drupal\Core\Config\Config;
+use Drupal\ib_dam\IbDamResourceModel;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -26,7 +28,7 @@ class IbDamEmbedField extends MediaSourceBase {
   /**
    * The media settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $mediaSettings;
 
@@ -39,13 +41,13 @@ class IbDamEmbedField extends MediaSourceBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   Config field type manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
    */
   public function __construct(
@@ -94,7 +96,7 @@ class IbDamEmbedField extends MediaSourceBase {
         . '/' . $this->pluginDefinition['default_thumbnail_filename'],
     ];
     if (isset($media->original_item)) {
-      /** @var \Drupal\ib_dam\IbDamResourceModel $original_item */
+      /** @var IbDamResourceModel $original_item */
       $original_item = $media->original_item;
       $metadata += [
         'default_name'   => $original_item->getName(),
diff --git a/modules/ib_dam_wysiwyg/src/Access/FilterInUse.php b/modules/ib_dam_wysiwyg/src/Access/FilterInUse.php
index 35b53f9..e58eb25 100644
--- a/modules/ib_dam_wysiwyg/src/Access/FilterInUse.php
+++ b/modules/ib_dam_wysiwyg/src/Access/FilterInUse.php
@@ -14,10 +14,10 @@ class FilterInUse implements AccessInterface {
   /**
    * Check if the filter is used for the given filter.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route
+   * @param RouteMatchInterface $route
    *   The route.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   An access result.
    */
   public function access(RouteMatchInterface $route) {
diff --git a/modules/ib_dam_wysiwyg/src/AssetStorage/TextFilterStorage.php b/modules/ib_dam_wysiwyg/src/AssetStorage/TextFilterStorage.php
index 5a86401..2e8f393 100644
--- a/modules/ib_dam_wysiwyg/src/AssetStorage/TextFilterStorage.php
+++ b/modules/ib_dam_wysiwyg/src/AssetStorage/TextFilterStorage.php
@@ -47,7 +47,7 @@ class TextFilterStorage implements AssetStorageInterface {
     }
     elseif ($asset instanceof LocalAssetInterface) {
       $data['file_id'] = $asset->localFile()->id();
-      $data['preview_uri'] = file_url_transform_relative(file_create_url($asset->localFile()->getFileUri()));
+      $data['preview_uri'] = \Drupal::service('file_url_generator')->generateString($asset->localFile()->getFileUri());
     }
     return $data;
   }
diff --git a/modules/ib_dam_wysiwyg/src/Form/IbDamWysiwygDialog.php b/modules/ib_dam_wysiwyg/src/Form/IbDamWysiwygDialog.php
index 2599bf6..ebf9d6e 100644
--- a/modules/ib_dam_wysiwyg/src/Form/IbDamWysiwygDialog.php
+++ b/modules/ib_dam_wysiwyg/src/Form/IbDamWysiwygDialog.php
@@ -232,7 +232,7 @@ class IbDamWysiwygDialog extends FormBase {
    * @param \stdClass $response
    *   Asset data for a Model class.
    *
-   * @return \Drupal\ib_dam\Asset\AssetInterface
+   * @return AssetInterface
    *   Returns an asset instance.
    */
   private function buildAsset(\stdClass $response) {
@@ -256,9 +256,9 @@ class IbDamWysiwygDialog extends FormBase {
   /**
    * Create asset text representation for editor and text filter.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface $asset
+   * @param AssetInterface $asset
    *   The asset.
-   * @param \Drupal\filter\Entity\FilterFormat $format
+   * @param FilterFormat $format
    *   The filter format instance.
    *
    * @return mixed
@@ -423,7 +423,7 @@ class IbDamWysiwygDialog extends FormBase {
       $display['width'] = $width;
       $display['height'] = $height;
     }
-    $data['preview_uri'] = file_url_transform_relative($file_url);
+    $data['preview_uri'] = \Drupal::service('file_url_generator')->transformRelative($file_url);
   }
 
 }
diff --git a/modules/ib_dam_wysiwyg/src/Plugin/CKEditorPlugin/IbDamEditorPlugin.php b/modules/ib_dam_wysiwyg/src/Plugin/CKEditorPlugin/IbDamEditorPlugin.php
index 85ce4c9..00d961f 100644
--- a/modules/ib_dam_wysiwyg/src/Plugin/CKEditorPlugin/IbDamEditorPlugin.php
+++ b/modules/ib_dam_wysiwyg/src/Plugin/CKEditorPlugin/IbDamEditorPlugin.php
@@ -34,7 +34,7 @@ class IbDamEditorPlugin extends CKEditorPluginBase implements CKEditorPluginConf
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'ib_dam_wysiwyg') . '/js/plugins/ib_dam_browser/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('ib_dam_wysiwyg') . '/js/plugins/ib_dam_browser/plugin.js';
   }
 
   /**
@@ -45,7 +45,7 @@ class IbDamEditorPlugin extends CKEditorPluginBase implements CKEditorPluginConf
       'ib_dam_browser' => [
         'name' => 'IB',
         'label' => $this->t('IntelligenceBank Asset Browser'),
-        'image' => drupal_get_path('module', 'ib_dam_wysiwyg') . '/js/plugins/ib_dam_browser/icon.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('ib_dam_wysiwyg') . '/js/plugins/ib_dam_browser/icon.png',
       ],
     ];
   }
diff --git a/modules/ib_dam_wysiwyg/src/Plugin/Filter/IbDamWysiwygFilter.php b/modules/ib_dam_wysiwyg/src/Plugin/Filter/IbDamWysiwygFilter.php
index 584f421..154ec82 100644
--- a/modules/ib_dam_wysiwyg/src/Plugin/Filter/IbDamWysiwygFilter.php
+++ b/modules/ib_dam_wysiwyg/src/Plugin/Filter/IbDamWysiwygFilter.php
@@ -28,14 +28,14 @@ class IbDamWysiwygFilter extends FilterBase implements ContainerFactoryPluginInt
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -48,9 +48,9 @@ class IbDamWysiwygFilter extends FilterBase implements ContainerFactoryPluginInt
    *   Plugin ID.
    * @param mixed $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer, AccountProxyInterface $current_user) {
diff --git a/src/Annotation/IbDamAssetValidation.php b/src/Annotation/IbDamAssetValidation.php
index 9ebe511..e0bb934 100644
--- a/src/Annotation/IbDamAssetValidation.php
+++ b/src/Annotation/IbDamAssetValidation.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ib_dam\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class IbDamAssetValidation extends Plugin {
   /**
    * The human-readable name of the widget validator.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
diff --git a/src/Asset/Asset.php b/src/Asset/Asset.php
index 5bac27f..6bd24bd 100644
--- a/src/Asset/Asset.php
+++ b/src/Asset/Asset.php
@@ -42,14 +42,14 @@ abstract class Asset implements AssetInterface {
   /**
    * Asset thumbnail.
    *
-   * @var \Drupal\file\FileInterface
+   * @var FileInterface
    */
   protected $thumbnail;
 
   /**
    * Factory method to build an asset from source model.
    *
-   * @param \Drupal\ib_dam\IbDamResourceModel $source
+   * @param IbDamResourceModel $source
    *   The source object.
    * @param string $owner_id
    *   The owner of asset that will be constructed and later might be saved.
@@ -57,7 +57,7 @@ abstract class Asset implements AssetInterface {
    *   The flag to indicate if asset should be previewable,
    *   return true if should.
    *
-   * @return \Drupal\ib_dam\Asset\AssetInterface
+   * @return AssetInterface
    *   Asset object.
    */
   public static function createFromSource(IbDamResourceModel $source, $owner_id, $has_preview = TRUE) {
@@ -105,7 +105,7 @@ abstract class Asset implements AssetInterface {
    * @param array $data
    *   The array of values used as asset properties.
    *
-   * @return \Drupal\ib_dam\Asset\AssetInterface
+   * @return AssetInterface
    *   Asset object.
    */
   public static function createFromValues(array $data) {
@@ -329,7 +329,7 @@ abstract class Asset implements AssetInterface {
    * @param null|FileInterface $file
    *   The File instance.
    *
-   * @return null|\Symfony\Component\Validator\ConstraintViolationList
+   * @return null|ConstraintViolationList
    *   The list of constraint violations for the given file.
    */
   protected function validateThumbnail(FileInterface $file = NULL) {
diff --git a/src/Asset/AssetInterface.php b/src/Asset/AssetInterface.php
index ed09991..945ee7a 100644
--- a/src/Asset/AssetInterface.php
+++ b/src/Asset/AssetInterface.php
@@ -20,7 +20,7 @@ interface AssetInterface {
    * @param string $storage_type_id
    *   The storage handler id.
    *
-   * @return \Drupal\ib_dam\Asset\Asset
+   * @return Asset
    *   Return asset.
    */
   public function setStorageType($storage_type_id);
@@ -110,7 +110,7 @@ interface AssetInterface {
   /**
    * Returns asset's thumbnail file object.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   The thumbnail file object.
    */
   public function thumbnail();
@@ -144,7 +144,7 @@ interface AssetInterface {
   /**
    * Returns asset's source model object.
    *
-   * @return \Drupal\ib_dam\IbDamResourceModel
+   * @return IbDamResourceModel
    *   The source model object.
    */
   public function source();
@@ -152,7 +152,7 @@ interface AssetInterface {
   /**
    * Setter for asset source property.
    *
-   * @param \Drupal\ib_dam\IbDamResourceModel $model
+   * @param IbDamResourceModel $model
    *   Response model.
    *
    * @return \Drupal\ib_dam\Asset\AssetInterface
@@ -163,7 +163,7 @@ interface AssetInterface {
   /**
    * Setter for thumbnail property.
    *
-   * @param \Drupal\file\FileInterface|null $thumbnail
+   * @param FileInterface|null $thumbnail
    *   The File instance.
    *
    * @return \Drupal\ib_dam\Asset\AssetInterface
diff --git a/src/Asset/LocalAsset.php b/src/Asset/LocalAsset.php
index 5a16836..35dc9a8 100644
--- a/src/Asset/LocalAsset.php
+++ b/src/Asset/LocalAsset.php
@@ -29,7 +29,7 @@ class LocalAsset extends Asset implements LocalAssetInterface {
   /**
    * Asset file.
    *
-   * @var \Drupal\file\FileInterface
+   * @var FileInterface
    */
   private $localFile;
 
@@ -126,7 +126,7 @@ class LocalAsset extends Asset implements LocalAssetInterface {
    * @param null|FileInterface $file
    *   The File instance.
    *
-   * @return null|\Symfony\Component\Validator\ConstraintViolationList
+   * @return null|ConstraintViolationList
    *   The list of constraint violations for the given file.
    */
   protected function validateFile(FileInterface $file = NULL) {
diff --git a/src/Asset/LocalAssetInterface.php b/src/Asset/LocalAssetInterface.php
index 0c873c1..400b20b 100644
--- a/src/Asset/LocalAssetInterface.php
+++ b/src/Asset/LocalAssetInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ib_dam\Asset;
 
+use Drupal\ib_dam\Exceptions\AssetDownloaderBadResponse;
 use Drupal\file\FileInterface;
 use Drupal\ib_dam\Downloader;
 
@@ -19,7 +20,7 @@ interface LocalAssetInterface {
    *
    * Can be an empty object returned by ::create() method.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   The File instance.
    */
   public function localFile();
@@ -27,7 +28,7 @@ interface LocalAssetInterface {
   /**
    * Setter for asset local file property.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file to set.
    *
    * @return \Drupal\ib_dam\Asset\LocalAssetInterface
@@ -48,12 +49,12 @@ interface LocalAssetInterface {
    *
    * Local file and optionally thumbnail file.
    *
-   * @param \Drupal\ib_dam\Downloader $downloader
+   * @param Downloader $downloader
    *   The Downloader service.
    * @param string $upload_dir
    *   Destination dir to upload files.
    *
-   * @throws \Drupal\ib_dam\Exceptions\AssetDownloaderBadResponse
+   * @throws AssetDownloaderBadResponse
    */
   public function saveAttachments(Downloader $downloader, $upload_dir);
 
diff --git a/src/AssetFormatter/AssetFormatterManager.php b/src/AssetFormatter/AssetFormatterManager.php
index ac99d31..c800da7 100644
--- a/src/AssetFormatter/AssetFormatterManager.php
+++ b/src/AssetFormatter/AssetFormatterManager.php
@@ -18,7 +18,7 @@ class AssetFormatterManager {
   /**
    * Factory method to build correct formatter.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface $asset
+   * @param AssetInterface $asset
    *   The asset object.
    * @param array $display_settings
    *   The display options used for formatting asset later.
diff --git a/src/AssetFormatter/LocalAssetFormatter.php b/src/AssetFormatter/LocalAssetFormatter.php
index 1e02ac9..7c547b0 100644
--- a/src/AssetFormatter/LocalAssetFormatter.php
+++ b/src/AssetFormatter/LocalAssetFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ib_dam\AssetFormatter;
 
+use Drupal\Core\Field\FormatterInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Form\FormState;
 use Drupal\ib_dam\Asset\AssetInterface;
@@ -26,14 +27,14 @@ class LocalAssetFormatter extends AssetFormatterBase {
   /**
    * Field formatter instance.
    *
-   * @var \Drupal\Core\Field\FormatterInterface|null
+   * @var FormatterInterface|null
    */
   private $fieldFormatter;
 
   /**
    * Field definition, suitable for field formatter.
    *
-   * @var \Drupal\Core\Field\BaseFieldDefinition
+   * @var BaseFieldDefinition
    */
   private $fieldDefinition;
 
diff --git a/src/AssetStorage/AssetStorageInterface.php b/src/AssetStorage/AssetStorageInterface.php
index c623678..aca6ae6 100644
--- a/src/AssetStorage/AssetStorageInterface.php
+++ b/src/AssetStorage/AssetStorageInterface.php
@@ -23,7 +23,7 @@ interface AssetStorageInterface {
    * Typical example build media object before it will be saved to db.
    * Another one - build text item for the text filter.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface $asset
+   * @param AssetInterface $asset
    *   The asset.
    *
    * @return mixed
diff --git a/src/AssetValidation/AssetValidationBase.php b/src/AssetValidation/AssetValidationBase.php
index 56b9fc0..18674a9 100644
--- a/src/AssetValidation/AssetValidationBase.php
+++ b/src/AssetValidation/AssetValidationBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ib_dam\AssetValidation;
 
+use Symfony\Component\Validator\ConstraintViolationListInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\PluginBase;
 use Drupal\Core\TypedData\DataDefinitionInterface;
@@ -27,7 +28,7 @@ abstract class AssetValidationBase extends PluginBase implements AssetValidation
   /**
    * The Typed Data Manager service.
    *
-   * @var \Drupal\Core\TypedData\TypedDataManagerInterface
+   * @var TypedDataManagerInterface
    */
   protected $typedDataManager;
 
@@ -167,7 +168,7 @@ abstract class AssetValidationBase extends PluginBase implements AssetValidation
    * @param array $options
    *   Array of options needed by the constraint validator.
    *
-   * @return \Drupal\Core\TypedData\DataDefinitionInterface
+   * @return DataDefinitionInterface
    *   A data definition object for the given data type.
    */
   protected function getDataDefinition($data_type, $constraint_name = NULL, array $options = []) {
@@ -181,12 +182,12 @@ abstract class AssetValidationBase extends PluginBase implements AssetValidation
   /**
    * Creates and validates instances of typed data for each Entity.
    *
-   * @param \Drupal\Core\TypedData\DataDefinitionInterface $data_definition
+   * @param DataDefinitionInterface $data_definition
    *   The data definition generated from ::getDataDefinition().
    * @param array $entities
    *   An array of Entities to validate the definition against.
    *
-   * @return \Symfony\Component\Validator\ConstraintViolationListInterface
+   * @return ConstraintViolationListInterface
    *   A list of violations.
    */
   protected function validateDataDefinition(DataDefinitionInterface $data_definition, array $entities) {
diff --git a/src/AssetValidation/AssetValidationInterface.php b/src/AssetValidation/AssetValidationInterface.php
index 3ff50ba..7f685cb 100644
--- a/src/AssetValidation/AssetValidationInterface.php
+++ b/src/AssetValidation/AssetValidationInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ib_dam\AssetValidation;
 
+use Drupal\ib_dam\Asset\AssetInterface;
+use Symfony\Component\Validator\ConstraintViolationListInterface;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 
@@ -23,7 +25,7 @@ interface AssetValidationInterface extends PluginInspectionInterface, Configurab
    *
    * Collect available validators and run validation process.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface[] $assets
+   * @param AssetInterface[] $assets
    *   Array of selected assets.
    * @param array $options
    *   (Optional) Array of options needed by the constraint validator.
@@ -31,7 +33,7 @@ interface AssetValidationInterface extends PluginInspectionInterface, Configurab
    *   (Optional) Use validators that declared in asset class,
    *   in other case run all available validators.
    *
-   * @return \Symfony\Component\Validator\ConstraintViolationListInterface
+   * @return ConstraintViolationListInterface
    *   A list of constraint violations. If the list is empty, validation
    *   succeeded.
    */
diff --git a/src/AssetValidation/AssetValidationManager.php b/src/AssetValidation/AssetValidationManager.php
index 845923e..3a6e0bc 100644
--- a/src/AssetValidation/AssetValidationManager.php
+++ b/src/AssetValidation/AssetValidationManager.php
@@ -33,9 +33,9 @@ class AssetValidationManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/AssetValidation/AssetValidationTrait.php b/src/AssetValidation/AssetValidationTrait.php
index 6ce397c..2caaf4b 100644
--- a/src/AssetValidation/AssetValidationTrait.php
+++ b/src/AssetValidation/AssetValidationTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\ib_dam\AssetValidation;
 
+use Drupal\ib_dam\Asset\AssetInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\ib_dam\Exceptions\AssetValidationBadPluginId;
 use Symfony\Component\Validator\ConstraintViolationList;
@@ -22,7 +23,7 @@ trait AssetValidationTrait {
    *   The validators list.
    * @param array $assets
    *   The assets list.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form_state to mark form as invalid.
    * @param array &$element
    *   The reference to the ib_dam browser element.
@@ -45,7 +46,7 @@ trait AssetValidationTrait {
   /**
    * Get AssetValidationManager service.
    *
-   * @return \Drupal\ib_dam\AssetValidation\AssetValidationManager
+   * @return AssetValidationManager
    *   The service instance.
    */
   abstract protected function getAssetValidationManager();
@@ -53,19 +54,19 @@ trait AssetValidationTrait {
   /**
    * Defines asset validators and runs them.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface[] $assets
+   * @param AssetInterface[] $assets
    *   The list of assets to check over.
    * @param array $validators
    *   The list of validator.
    *
-   * @return \Symfony\Component\Validator\ConstraintViolationList
+   * @return ConstraintViolationList
    *   List of validations violations.
    */
   protected function runAssetValidators(array $assets, array $validators) {
     $violations = new ConstraintViolationList();
 
     foreach ($validators as $options) {
-      /** @var \Drupal\ib_dam\AssetValidation\AssetValidationInterface $asset_validator */
+      /** @var AssetValidationInterface $asset_validator */
       try {
         $validator = $this->getAssetValidationManager()->getInstance($options);
       }
diff --git a/src/AssetValidation/AssetViolationAggregator.php b/src/AssetValidation/AssetViolationAggregator.php
index da76f61..453e9d1 100644
--- a/src/AssetValidation/AssetViolationAggregator.php
+++ b/src/AssetValidation/AssetViolationAggregator.php
@@ -16,7 +16,7 @@ class AssetViolationAggregator {
   /**
    * Extract messages from violations list.
    *
-   * @param \Symfony\Component\Validator\ConstraintViolationListInterface $violations
+   * @param ConstraintViolationListInterface $violations
    *   The violations list.
    * @param string $mode
    *   Possible options:
diff --git a/src/Downloader.php b/src/Downloader.php
index 3a1dd74..89188c2 100644
--- a/src/Downloader.php
+++ b/src/Downloader.php
@@ -55,7 +55,7 @@ class Downloader {
    *
    * Fetch file stream from api and save as unmanaged local file.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface $asset
+   * @param AssetInterface $asset
    *   The asset object where take resource url.
    * @param string $upload_dir
    *   The file dir uri where store unmanaged file.
@@ -105,7 +105,7 @@ class Downloader {
   /**
    * Fetch asset thumbnail file and save as umnanaged local file.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface $asset
+   * @param AssetInterface $asset
    *   The asset object where take thumbnail remote url.
    * @param string $upload_dir
    *   The file dir uri where store unmanaged file.
@@ -163,7 +163,7 @@ class Downloader {
    *
    * Fetch file data from HTTP stream.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   The HTTP response object.
    * @param string $directory
    *   The upload directory path.
@@ -173,8 +173,8 @@ class Downloader {
    * @return bool|null
    *   Result of save operation.
    *
-   * @throws \Drupal\ib_dam\Exceptions\AssetDownloaderBadDestination
-   * @throws \Drupal\ib_dam\Exceptions\AssetDownloaderBadResponse
+   * @throws AssetDownloaderBadDestination
+   * @throws AssetDownloaderBadResponse
    */
   private function saveUnmanagedFile(ResponseInterface $response, $directory, $filename) {
     $stream_data = $response->getBody();
diff --git a/src/IbDamApi.php b/src/IbDamApi.php
index 0e3013d..1666735 100644
--- a/src/IbDamApi.php
+++ b/src/IbDamApi.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\ib_dam;
 
+use GuzzleHttp\Client;
+use Psr\Http\Message\ResponseInterface;
 use Drupal\Core\Http\ClientFactory;
 use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Site\Settings;
@@ -21,25 +23,25 @@ final class IbDamApi {
   /**
    * GuzzleHttp\Client definition.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * The logger channel for IntelligenceBank DAM.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Http\ClientFactory $http_client_factory
+   * @param ClientFactory $http_client_factory
    *   A Guzzle client factory object.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The site settings.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $loggerChannel
+   * @param LoggerChannelInterface $loggerChannel
    *   Logger chanel for IntelligenceBank DAM.
    */
   public function __construct(ClientFactory $http_client_factory, Settings $settings, LoggerChannelInterface $loggerChannel) {
@@ -71,7 +73,7 @@ final class IbDamApi {
    * @param string $url
    *   The url of the resource.
    *
-   * @return null|\Psr\Http\Message\ResponseInterface
+   * @return null|ResponseInterface
    *   Response object.
    */
   public function fetchResource($url) {
diff --git a/src/Plugin/EntityBrowser/Widget/FileEntityBrowser.php b/src/Plugin/EntityBrowser/Widget/FileEntityBrowser.php
index afc79f1..bb8f4c2 100644
--- a/src/Plugin/EntityBrowser/Widget/FileEntityBrowser.php
+++ b/src/Plugin/EntityBrowser/Widget/FileEntityBrowser.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\intelligencebank\Plugin\EntityBrowser\Widget;
 
+use Drupal\file\FileInterface;
 use Drupal\entity_browser\WidgetBase;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -21,7 +22,7 @@ use Drupal\Core\Form\FormStateInterface;
  */
 class FileEntityBrowser extends WidgetBase {
 
-  /** @var \Drupal\Core\Session\AccountProxyInterface */
+  /** @var AccountProxyInterface */
   protected $currentUser;
 
   /**
@@ -33,13 +34,13 @@ class FileEntityBrowser extends WidgetBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   Event dispatcher service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    * @param \Drupal\entity_browser\WidgetValidationManager $validation_manager
    *   The Widget Validation Manager service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EventDispatcherInterface $event_dispatcher, EntityTypeManagerInterface $entity_type_manager, WidgetValidationManager $validation_manager, AccountProxyInterface $current_user) {
@@ -90,7 +91,7 @@ class FileEntityBrowser extends WidgetBase {
    * {@inheritdoc}
    */
   protected function prepareEntities(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $this->entityTypeManager->getStorage('file')->create([
       'uri' => $form_state->getValue('url'),
       'uid' => $this->currentUser->id(),
diff --git a/src/Plugin/IbDam/AssetValidation/Api.php b/src/Plugin/IbDam/AssetValidation/Api.php
index dc6cc42..32fca82 100644
--- a/src/Plugin/IbDam/AssetValidation/Api.php
+++ b/src/Plugin/IbDam/AssetValidation/Api.php
@@ -20,7 +20,7 @@ class Api extends AssetValidationBase {
   /**
    * API auth key validator.
    *
-   * @param \Drupal\ib_dam\Asset\LocalAsset $asset
+   * @param LocalAsset $asset
    *   The asset object to validate.
    *
    * @return array
diff --git a/src/Plugin/IbDam/AssetValidation/File.php b/src/Plugin/IbDam/AssetValidation/File.php
index 80953ac..37abf73 100644
--- a/src/Plugin/IbDam/AssetValidation/File.php
+++ b/src/Plugin/IbDam/AssetValidation/File.php
@@ -57,7 +57,7 @@ class File extends AssetValidationBase {
   /**
    * File extensions validator.
    *
-   * @param \Drupal\ib_dam\Asset\LocalAsset $asset
+   * @param LocalAsset $asset
    *   The asset object to validate.
    * @param array|string $extensions
    *   The list of allowed file extensions.
@@ -76,7 +76,7 @@ class File extends AssetValidationBase {
   /**
    * File directory validator.
    *
-   * @param \Drupal\ib_dam\Asset\LocalAsset $asset
+   * @param LocalAsset $asset
    *   The asset object to validate.
    * @param string $file_dir
    *   The file directory to check.
diff --git a/src/Plugin/IbDam/AssetValidation/Resource.php b/src/Plugin/IbDam/AssetValidation/Resource.php
index d1f0890..4f90355 100644
--- a/src/Plugin/IbDam/AssetValidation/Resource.php
+++ b/src/Plugin/IbDam/AssetValidation/Resource.php
@@ -20,7 +20,7 @@ class Resource extends AssetValidationBase {
   /**
    * Resource type validator.
    *
-   * @param \Drupal\ib_dam\Asset\AssetInterface $asset
+   * @param AssetInterface $asset
    *   The asset object to validate.
    * @param array $options
    *   Validator options with such options:
