modules/contrib/grapesjs_editor/grapesjs_editor.module
modules/contrib/grapesjs_editor/modules/grapesjs_reusable_blocks/grapesjs_reusable_blocks.module
modules/contrib/grapesjs_editor/modules/grapesjs_reusable_blocks/src/Controller/BlockController.php
modules/contrib/grapesjs_editor/modules/grapesjs_reusable_blocks/src/Plugin/GrapesJSPlugin/DrupalReusableBlocks.php
modules/contrib/grapesjs_editor/src/Annotation/GrapesJSPlugin.php
modules/contrib/grapesjs_editor/src/Controller/AssetController.php
modules/contrib/grapesjs_editor/src/Controller/BlockController.php
modules/contrib/grapesjs_editor/src/GrapesJSPluginBase.php
modules/contrib/grapesjs_editor/src/GrapesJSPluginConfigurableInterface.php
modules/contrib/grapesjs_editor/src/GrapesJSPluginInterface.php
modules/contrib/grapesjs_editor/src/Plugin/Editor/GrapesJSEditor.php
modules/contrib/grapesjs_editor/src/Plugin/Filter/FilterBlock.php
modules/contrib/grapesjs_editor/src/Plugin/Filter/FilterField.php
modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalAsset.php
modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalBasicBlocks.php
modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalBlocks.php
modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalFields.php
modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalStorage.php
modules/contrib/grapesjs_editor/src/PluginManager.php
modules/contrib/grapesjs_editor/src/Routing/BlockRoutes.php
modules/contrib/grapesjs_editor/src/Services/AssetManager.php
modules/contrib/grapesjs_editor/src/Services/BlockManager.php
modules/contrib/grapesjs_editor/src/Services/FieldManager.php
modules/contrib/grapesjs_editor/src/Services/LibraryResolver.php

21 files with changes
=====================

1) modules/contrib/grapesjs_editor/src/Services/LibraryResolver.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * The theme initialization service.
    *
-   * @var \Drupal\Core\Theme\ThemeInitializationInterface
+   * @var ThemeInitializationInterface
    */
   protected $themeInitialization;

@@ @@
   /**
    * The asset resolver service.
    *
-   * @var \Drupal\Core\Asset\AssetResolverInterface
+   * @var AssetResolverInterface
    */
   protected $assetResolver;

@@ @@
   /**
    * LibraryResolver constructor.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler service.
-   * @param \Drupal\Core\Theme\ThemeInitializationInterface $theme_initialization
+   * @param ThemeInitializationInterface $theme_initialization
    *   The theme initialization service.
-   * @param \Drupal\Core\Asset\AssetResolverInterface $asset_resolver
+   * @param AssetResolverInterface $asset_resolver
    *   The asset resolver service.
    */
   public function __construct(ThemeHandlerInterface $theme_handler, ThemeInitializationInterface $theme_initialization, AssetResolverInterface $asset_resolver) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/grapesjs_editor/src/Services/FieldManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor\Services;

+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Render\MarkupInterface;
+use Drupal\Core\GeneratedUrl;
 use Drupal\block_content\BlockContentTypeInterface;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The route match service.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * The entity type.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface|null
+   * @var EntityTypeInterface|null
    */
   protected $entityType;

@@ @@
   /**
    * The entity.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $entity;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * FieldManager constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager service.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if plugin definition is invalid.
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Thrown if plugin not found.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, RouteMatchInterface $route_match, RendererInterface $renderer) {
@@ @@
   /**
    * Returns the entity type object.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface|null
+   * @return EntityTypeInterface|null
    *   The entity type.
    */
   public function getEntityType() {
@@ @@
   /**
    * Returns the entity object.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity.
    */
   public function getEntity() {
@@ @@
   /**
    * Returns the field definition array.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface[]
+   * @return FieldDefinitionInterface[]
    *   The field definitions.
    */
   protected function getFieldDefinitions() {
@@ @@
   /**
    * Returns fields definitions without restricted fields.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface[]
+   * @return FieldDefinitionInterface[]
    *   The field definitions array.
    */
   public function getFields() {
@@ @@
    * @param string $name
    *   The field name.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface|null
+   * @return FieldDefinitionInterface|null
    *   The field object or null if field is not found or not accessible.
    */
   public function getField(string $name) {
@@ @@
    * @param string $name
    *   The field name.
    *
-   * @return array|\Drupal\Component\Render\MarkupInterface|string|string[]
+   * @return array|MarkupInterface|string|string[]
    *   The field render markup.
    *
    * @throws \Exception
@@ @@
   /**
    * Renders the field.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The field to render.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|null
+   * @return MarkupInterface|null
    *   The field render markup.
    *
    * @throws \Exception
@@ @@
   /**
    * Generate the field route to request field renderer.
    *
-   * @return \Drupal\Core\GeneratedUrl|string
+   * @return GeneratedUrl|string
    *   The field route.
    */
   public function generateFieldRoute() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/grapesjs_editor/src/Services/BlockManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor\Services;

+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Block\BlockManagerInterface;
@@ @@
   /**
    * The block manager service.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * BlockManager constructor.
    *
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager service.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The context repository service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(BlockManagerInterface $block_manager, ContextRepositoryInterface $context_repository, AccountProxyInterface $current_user, RendererInterface $renderer) {
@@ @@
    * @param string $id
    *   The block ID.
    *
-   * @return \Drupal\Core\Block\BlockBase|null
+   * @return BlockBase|null
    *   The block object or null if block is not found or not accessible.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin definition is invalid.
    */
   public function getBlock(string $id) {
@@ @@
    * @param string $id
    *   The block ID.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The block render markup.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin definition is invalid.
    * @throws \Exception
    *   Thrown if the plugin definition is invalid.
@@ @@
   /**
    * Renders the block.
    *
-   * @param \Drupal\Core\Block\BlockBase $block
+   * @param BlockBase $block
    *   The block to render.
    *
-   * @return \Drupal\Component\Render\MarkupInterface
+   * @return MarkupInterface
    *   The block render markup.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/grapesjs_editor/src/Services/AssetManager.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * AssetManager constructor.
    *
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
    */
   public function __construct(ImageFactory $image_factory) {
@@ @@
   /**
    * Build asset array with file parameter.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file to transform.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/grapesjs_editor/src/Routing/BlockRoutes.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Builds dynamic routes.
    *
-   * @return \Symfony\Component\Routing\RouteCollection
+   * @return RouteCollection
    *   The route collection.
    */
   public function routes() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/grapesjs_editor/src/PluginManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor;

+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
    *
    * @param \Traversable $namespaces
    *   The namespaces.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ @@
   /**
    * Retrieves enabled plugins, keyed by plugin ID.
    *
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
@@ @@
    *   A list of the enabled GrapesJS plugins, with the plugin IDs as keys and
    *   the Drupal root-relative plugin files as values.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin can't be found.
    */
   public function getEnabledPlugins(Editor $editor) {
@@ @@
    *
    * @param array &$form
    *   A reference to an associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin can't be found.
    */
   public function injectPluginSettingsForm(array &$form, FormStateInterface $form_state, Editor $editor) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalFields.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The field manager service.
    *
-   * @var \Drupal\grapesjs_editor\Services\FieldManager
+   * @var FieldManager
    */
   protected $fieldManager;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\grapesjs_editor\Services\FieldManager $field_manager
+   * @param FieldManager $field_manager
    *   The field manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, FieldManager $field_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalBlocks.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, BlockManager $block_manager) {
@@ @@
    *
    * @param array $element
    *   The render element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validateAllowedBlocksSettings(array $element, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalBasicBlocks.php:103

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The render element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validateAllowedBlocksSettings(array $element, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/grapesjs_editor/src/Plugin/GrapesJSPlugin/DrupalAsset.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The asset manager service.
    *
-   * @var \Drupal\grapesjs_editor\Services\AssetManager
+   * @var AssetManager
    */
   protected $assetManager;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
-   * @param \Drupal\grapesjs_editor\Services\AssetManager $asset_manager
+   * @param AssetManager $asset_manager
    *   The asset manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AccountProxyInterface $current_user, AssetManager $asset_manager) {
@@ @@
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ @@
    *
    * @param array $element
    *   The render element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @see \Drupal\editor\Form\EditorImageDialog
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/grapesjs_editor/src/Plugin/Filter/FilterField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor\Plugin\Filter;

+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Render\BubbleableMetadata;
@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The field manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\FieldManager
+   * @var FieldManager
    */
   protected $fieldManager;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The result metadata.
    *
-   * @var \Drupal\Core\Render\BubbleableMetadata
+   * @var BubbleableMetadata
    */
   protected $metadata;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\grapesjs_editor\Services\FieldManager $field_manager
+   * @param FieldManager $field_manager
    *   The field manager.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer, FieldManager $field_manager, AccountProxyInterface $current_user) {
@@ @@
    * @param array $match
    *   The custom tag match.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The field render.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/grapesjs_editor/src/Plugin/Filter/FilterBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor\Plugin\Filter;

+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Render\BubbleableMetadata;
@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The result metadata.
    *
-   * @var \Drupal\Core\Render\BubbleableMetadata
+   * @var BubbleableMetadata
    */
   protected $metadata;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer, BlockManager $block_manager, AccountProxyInterface $current_user) {
@@ @@
    * @param array $match
    *   The custom tag match.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The block render.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/grapesjs_editor/src/Plugin/Editor/GrapesJSEditor.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The library resolver service.
    *
-   * @var \Drupal\grapesjs_editor\Services\LibraryResolver
+   * @var LibraryResolver
    */
   protected $libraryResolver;

@@ @@
   /**
    * The plugin manager service.
    *
-   * @var \Drupal\grapesjs_editor\PluginManager
+   * @var PluginManager
    */
   protected $pluginManager;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\grapesjs_editor\Services\LibraryResolver $library_resolver
+   * @param LibraryResolver $library_resolver
    *   The library resolver service.
-   * @param \Drupal\grapesjs_editor\PluginManager $plugin_manager
+   * @param PluginManager $plugin_manager
    *   The plugin manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, LanguageManagerInterface $language_manager, LibraryResolver $library_resolver, PluginManager $plugin_manager) {
@@ @@
         'canvas' => [
           'styles' => array_merge([
             Url::fromRoute('<front>', [], ['absolute' => TRUE])
-              ->toString() . drupal_get_path('module', 'grapesjs_editor') . '/libraries/css/canvas.css',
+              ->toString() . \Drupal::service('extension.list.module')->getPath('grapesjs_editor') . '/libraries/css/canvas.css',
           ], $this->libraryResolver->getStyles()),
         ],
         'plugins' => [],
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/grapesjs_editor/src/GrapesJSPluginInterface.php:15

    ---------- begin diff ----------
@@ @@
    * These libraries will be attached to the text_format element on which the
    * editor is being loaded.
    *
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
@@ @@
    * $plugin_specific_settings = $settings['plugins'][$plugin_id];
    * @endcode
    *
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


15) modules/contrib/grapesjs_editor/src/GrapesJSPluginConfigurableInterface.php:19

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An empty form array to be populated with a configuration form, if any.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the entire filter administration form.
-   * @param \Drupal\editor\Entity\Editor $editor
+   * @param Editor $editor
    *   A configured text editor object.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


16) modules/contrib/grapesjs_editor/src/Controller/BlockController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor\Controller;

+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\grapesjs_editor\Services\BlockManager;
@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
   /**
    * The field manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\FieldManager
+   * @var FieldManager
    */
   protected $fieldManager;

@@ @@
   /**
    * BlockController constructor.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
-   * @param \Drupal\grapesjs_editor\Services\FieldManager $field_manager
+   * @param FieldManager $field_manager
    *   The field manager.
    */
   public function __construct(RendererInterface $renderer, BlockManager $block_manager, FieldManager $field_manager) {
@@ @@
   /**
    * Returns a Json response with the block render.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown if the plugin is invalid.
    */
   public function block(Request $request) {
@@ @@
   /**
    * Returns a Json response with the field render.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/grapesjs_editor/src/Controller/AssetController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor\Controller;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Utility\Bytes;
 use Drupal\Component\Utility\Environment;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * The asset manager service.
    *
-   * @var \Drupal\grapesjs_editor\Services\AssetManager
+   * @var AssetManager
    */
   protected $assetManager;

@@ @@
   /**
    * AssetController constructor.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Drupal\grapesjs_editor\Services\AssetManager $asset_manager
+   * @param AssetManager $asset_manager
    *   The asset manager service.
    */
   public function __construct(FileSystemInterface $file_system, AssetManager $asset_manager) {
@@ @@
   /**
    * Returns a Json response with all asset.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the storage can't be found.
    */
   public function uploadAssets() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/grapesjs_editor/src/Annotation/GrapesJSPlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_editor\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name of the GrapesJS plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


19) modules/contrib/grapesjs_editor/modules/grapesjs_reusable_blocks/src/Plugin/GrapesJSPlugin/DrupalReusableBlocks.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The block manager.
    *
-   * @var \Drupal\grapesjs_editor\Services\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\grapesjs_editor\Services\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, BlockManager $block_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/grapesjs_editor/modules/grapesjs_reusable_blocks/src/Controller/BlockController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\grapesjs_reusable_blocks\Controller;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\block_content\Entity\BlockContent;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\Xss;
@@ @@
   /**
    * Returns a Json response with the block data.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The Json response.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the entity is invalid.
    */
   public function createBlock(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/grapesjs_editor/grapesjs_editor.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\ContentEntityForm;
 /**
  * @file
  * Contains grapesjs_editor.module.
@@ @@
  *
  * @param array $element
  *   The render element.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  * @param array $complete_form
  *   The form element.
@@ @@
   if (!empty($element['format']) && isset($element['format']['format']['#options']['grapesjs_editor'])) {
     // By default let's assume that GrapesJS Editor format is not allowed.
     $grapesjs_editor_allowed = FALSE;
-    /** @var \Drupal\Core\Entity\ContentEntityForm $form */
+    /** @var ContentEntityForm $form */
     $form = $form_state->getFormObject();
     // Check whether the form that contains the element is an EntityForm.
     if ($form instanceof EntityFormInterface) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 21 files have been changed by Rector                                      

