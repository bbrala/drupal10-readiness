diff --git a/src/ConfigSubscriber.php b/src/ConfigSubscriber.php
index a67a1ca..2f8f5ff 100644
--- a/src/ConfigSubscriber.php
+++ b/src/ConfigSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_auto_export;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Datetime\Time;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
@@ -26,13 +27,13 @@ use Symfony\Component\EventDispatcher\EventSubscriberInterface;
  */
 class ConfigSubscriber implements EventSubscriberInterface, DestructableInterface {
 
-  /** @var \Drupal\Core\Config\ImmutableConfig */
+  /** @var ImmutableConfig */
   protected $config;
 
-  /** @var \Drupal\Core\Config\CachedStorage */
+  /** @var CachedStorage */
   protected $configCache;
 
-  /** @var \Drupal\Core\Config\FileStorage */
+  /** @var FileStorage */
   protected $configStorage;
 
   /** @var array */
@@ -48,47 +49,47 @@ class ConfigSubscriber implements EventSubscriberInterface, DestructableInterfac
   protected $triggerNeeded = FALSE;
 
   /**
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;
 
   /**
-   * @var \Drupal\config_auto_export\Service
+   * @var Service
    */
   protected $service;
 
   /**
    * Constructs a new Settings object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
-   * @param \Drupal\Core\Config\CachedStorage $config_cache
-   * @param \Drupal\Core\Config\FileStorage $config_storage
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
-   * @param \Drupal\Core\State\StateInterface $state
-   * @param \Drupal\Component\Datetime\Time $time
-   * @param \Drupal\config_auto_export\Service $service
+   * @param ConfigFactoryInterface $config_factory
+   * @param CachedStorage $config_cache
+   * @param FileStorage $config_storage
+   * @param FileSystemInterface $file_system
+   * @param ModuleHandlerInterface $module_handler
+   * @param EntityTypeManagerInterface $entity_type_manager
+   * @param StateInterface $state
+   * @param Time $time
+   * @param Service $service
    */
   public function __construct(ConfigFactoryInterface $config_factory, CachedStorage $config_cache, FileStorage $config_storage, FileSystemInterface $file_system, ModuleHandlerInterface $module_handler, EntityTypeManagerInterface $entity_type_manager, StateInterface $state, Time $time, Service $service) {
     $this->config = $config_factory->get('config_auto_export.settings');
@@ -127,8 +128,8 @@ class ConfigSubscriber implements EventSubscriberInterface, DestructableInterfac
   /**
    * Read all config files from config splits, if available.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function readConfigSplitFiles(): void {
     $this->configSplitFiles = [];
@@ -167,7 +168,7 @@ class ConfigSubscriber implements EventSubscriberInterface, DestructableInterfac
   /**
    * Saves changed config to a configurable directory.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   Public function onConfigSave event.
    */
   public function onConfigSave(ConfigCrudEvent $event): void {
@@ -197,7 +198,7 @@ class ConfigSubscriber implements EventSubscriberInterface, DestructableInterfac
   /**
    * Saves changed config translation to a configurable directory.
    *
-   * @param \Drupal\language\Config\LanguageConfigOverrideCrudEvent $event
+   * @param LanguageConfigOverrideCrudEvent $event
    *   Public function onConfigTranslationSave event.
    */
   public function onConfigTranslationSave(LanguageConfigOverrideCrudEvent $event): void {
@@ -212,7 +213,7 @@ class ConfigSubscriber implements EventSubscriberInterface, DestructableInterfac
   /**
    * Turn off this subscriber on importing configuration.
    *
-   * @param \Drupal\Core\Config\ConfigImporterEvent $event
+   * @param ConfigImporterEvent $event
    *   Public function onConfigImportValidate event.
    *
    * @noinspection PhpUnusedParameterInspection*/
diff --git a/src/FileStorageFactory.php b/src/FileStorageFactory.php
index d7e39dc..b411ee4 100644
--- a/src/FileStorageFactory.php
+++ b/src/FileStorageFactory.php
@@ -24,7 +24,7 @@ class FileStorageFactory {
   /**
    * Returns a FileStorage object working with the configured directory.
    *
-   * @return \Drupal\Core\Config\FileStorage
+   * @return FileStorage
    *   Public static function getSync.
    */
   public static function getSync(): FileStorage {
diff --git a/src/Service.php b/src/Service.php
index 5216db9..5298f6e 100644
--- a/src/Service.php
+++ b/src/Service.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\config_auto_export;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Component\Datetime\Time;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
@@ -17,49 +19,49 @@ class Service {
 
   public const STATE_KEY_DUE_TIMESTAMP = 'config_auto_export.due_next.timestamp';
 
-  /** @var \Drupal\Core\Config\ImmutableConfig */
+  /** @var ImmutableConfig */
   protected $config;
 
   /**
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
-   * @var \Drupal\Component\Datetime\Time
+   * @var Time
    */
   protected $time;
 
   /**
-   * @var \Drupal\Core\Http\ClientFactory
+   * @var ClientFactory
    */
   protected $client;
 
   /**
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * Service constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_channel_factory
-   * @param \Drupal\Core\State\StateInterface $state
-   * @param \Drupal\Component\Datetime\Time $time
-   * @param \Drupal\Core\Http\ClientFactory $client
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param ConfigFactoryInterface $config_factory
+   * @param FileSystemInterface $file_system
+   * @param LoggerChannelFactoryInterface $logger_channel_factory
+   * @param StateInterface $state
+   * @param Time $time
+   * @param ClientFactory $client
+   * @param AccountInterface $account
    */
   public function __construct(ConfigFactoryInterface $config_factory, FileSystemInterface $file_system,
                               LoggerChannelFactoryInterface $logger_channel_factory, StateInterface $state,
