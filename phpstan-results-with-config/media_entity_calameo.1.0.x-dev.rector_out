modules/contrib/media_entity_calameo/media_entity_calameo.install
modules/contrib/media_entity_calameo/media_entity_calameo.module
modules/contrib/media_entity_calameo/src/CalameoManager.php
modules/contrib/media_entity_calameo/src/CalameoManagerInterface.php
modules/contrib/media_entity_calameo/src/Form/CalameoCreateForm.php
modules/contrib/media_entity_calameo/src/Form/SettingsForm.php
modules/contrib/media_entity_calameo/src/Plugin/Field/FieldFormatter/CalameoEmbedFormatter.php
modules/contrib/media_entity_calameo/src/Plugin/media/Source/Calameo.php

6 files with changes
====================

1) modules/contrib/media_entity_calameo/src/Plugin/media/Source/Calameo.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_calameo\Plugin\media\Source;

+use GuzzleHttp\Client;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Datetime\DrupalDateTime;
@@ @@
   /**
    * Calameo manager.
    *
-   * @var \Drupal\media_entity_calameo\CalameoManager
+   * @var CalameoManager
    */
   protected $calameoManager;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Guzzle client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed                                              $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface     $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface    $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface         $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface  $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   The logger factory.
-   * @param \Drupal\media_entity_calameo\CalameoManager        $calameoManager
+   * @param CalameoManager $calameoManager
    *   Calameo manager.
-   * @param \Drupal\Core\File\FileSystemInterface              $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \GuzzleHttp\ClientInterface                        $http_client
+   * @param ClientInterface $http_client
    *   A Guzzle client object.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface       $date_formatter
+   * @param DateFormatterInterface $date_formatter
    */
   public function __construct(
     array $configuration,
@@ @@
    *   True if settings are filling or false if not.
    */
   protected function getApiSettings() {
-    /** @var \Drupal\Core\Config\ImmutableConfig $settings */
+    /** @var ImmutableConfig $settings */
     $settings = $this->configFactory->get('media_entity_calameo.settings');

     if ($settings->get('api_key') && $settings->get('api_secret')) {
@@ @@
   /**
    * Get source field value.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media object.
    *
    * @return string|false
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_entity_calameo/src/Plugin/Field/FieldFormatter/CalameoEmbedFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_calameo\Plugin\Field\FieldFormatter;

+use Drupal\media\MediaInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
    * {@inheritdoc}
    */
   public function viewElements(FieldItemListInterface $items, $langcode) {
-    /** @var \Drupal\media\MediaInterface $media */
+    /** @var MediaInterface $media */
     $media = $items->getEntity();
     
     $element = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/media_entity_calameo/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_calameo\Form;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, $field_type = NULL) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('media_entity_calameo.settings');
     
     $form['api'] = [
@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('media_entity_calameo.settings');
     $keys = [
       'api_key',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/media_entity_calameo/src/Form/CalameoCreateForm.php:65

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addButtonSubmit(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/media_entity_calameo/src/CalameoManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_calameo;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * Guzzle client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
   
@@ @@
   /**
    * Logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
   
@@ @@
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
   
@@ @@
   /**
    * Calameo manager constructor.
    *
-   * @param \GuzzleHttp\Client $client
+   * @param Client $client
    *   A HTTP Client.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   A logger factory.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
    */
   public function __construct(Client $client, LoggerChannelFactoryInterface $loggerFactory, ConfigFactoryInterface $config_factory) {
@@ @@
    * {@inheritdoc}
    */
   public function getPublicationInfos($id) {
-    /** @var \Drupal\Core\Config\ImmutableConfig $settings */
+    /** @var ImmutableConfig $settings */
     $settings = $this->configFactory->get('media_entity_calameo.settings');
     
     if (!$settings->get('api_key') && !$settings->get('api_secret')) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/media_entity_calameo/media_entity_calameo.install:34

    ---------- begin diff ----------
@@ @@
  * Implements hook_install().
  */
 function media_entity_calameo_install() {
-  $source = drupal_get_path('module', 'media_entity_calameo') . '/images/icons';
+  $source = \Drupal::service('extension.list.module')->getPath('media_entity_calameo') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
   $file_system_manager = \Drupal::service('file_system');
   $file_system_manager->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

