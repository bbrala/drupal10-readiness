diff --git a/modules/orange_logic_media_library/orange_logic_media_library.module b/modules/orange_logic_media_library/orange_logic_media_library.module
index 7b201e4..39246fb 100644
--- a/modules/orange_logic_media_library/orange_logic_media_library.module
+++ b/modules/orange_logic_media_library/orange_logic_media_library.module
@@ -1,14 +1,15 @@
 <?php
+
+use Drupal\Core\Form\FormStateInterface;
 /**
  * @file
  * Contains orange_logic_media_library module.
  */
-
 /**
  * Implements hook_form_alter().
  */
-function orange_logic_media_library_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
+function orange_logic_media_library_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   if ($form_id === 'media_library_extend_pane_form') {
     $form['content']['pager'] = NULL;
   }
-}
\ No newline at end of file
+}
diff --git a/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManager.php b/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManager.php
index 2d133c0..01a087d 100644
--- a/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManager.php
+++ b/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManager.php
@@ -18,23 +18,23 @@ class OrangeLogicMediaLibraryManager implements OrangeLogicMediaLibraryManagerIn
   /**
    * Orange Logic Manager.
    *
-   * @var \Drupal\media_orange_logic\OrangeLogicManagerInterface
+   * @var OrangeLogicManagerInterface
    */
   protected $orangeLogicManager;
 
   /**
    * Orange Logic Result Renderer Service.
    *
-   * @var \Drupal\media_orange_logic\OrangeLogicResultRendererInterface
+   * @var OrangeLogicResultRendererInterface
    */
   protected $orangeLogicResultRenderer;
 
   /**
    * OrangeLogicMediaLibraryManager constructor.
    *
-   * @param \Drupal\media_orange_logic\OrangeLogicManagerInterface $orange_logic_manager
+   * @param OrangeLogicManagerInterface $orange_logic_manager
    *   Orange Logic Manager.
-   * @param \Drupal\media_orange_logic\OrangeLogicResultRendererInterface $orange_logic_result_renderer
+   * @param OrangeLogicResultRendererInterface $orange_logic_result_renderer
    *   Orange Logic Result Renderer Service.
    */
   public function __construct(OrangeLogicManagerInterface $orange_logic_manager, OrangeLogicResultRendererInterface $orange_logic_result_renderer) {
@@ -85,7 +85,7 @@ class OrangeLogicMediaLibraryManager implements OrangeLogicMediaLibraryManagerIn
 
       // Create the file:
       $asset = file_get_contents($asset_source);
-      $file = file_save_data($asset, 'public://' . $asset_filename, FileSystemInterface::EXISTS_REPLACE);
+      $file = \Drupal::service('file.repository')->writeData($asset, 'public://' . $asset_filename, FileSystemInterface::EXISTS_REPLACE);
 
       return [
         'target_id' => $file->id(),
diff --git a/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManagerInterface.php b/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManagerInterface.php
index 4cd709c..956db81 100644
--- a/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManagerInterface.php
+++ b/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryManagerInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\orange_logic_media_library;
 
+use Drupal\core\Entity\EntityInterface;
+use Drupal\media_orange_logic\OrangeLogicSearchResponse;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\media\MediaTypeInterface;
@@ -14,7 +16,7 @@ interface OrangeLogicMediaLibraryManagerInterface {
   /**
    * Save entities to database.
    *
-   * @param \Drupal\core\Entity\EntityInterface[] $prepared_entities
+   * @param EntityInterface[] $prepared_entities
    *   Prepared entities.
    *
    * @return array
@@ -25,10 +27,10 @@ interface OrangeLogicMediaLibraryManagerInterface {
   /**
    * Retrieves the selected media to be imported.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    *
-   * @return \Drupal\media_orange_logic\OrangeLogicSearchResponse|bool
+   * @return OrangeLogicSearchResponse|bool
    *   The selected media data taken from the Organge Server server or FALSE.
    */
   public function getSelectedAssets(FormStateInterface $form_state);
@@ -41,7 +43,7 @@ interface OrangeLogicMediaLibraryManagerInterface {
    *
    * @param object $result
    *   The asset data from OL.
-   * @param \Drupal\media\MediaTypeInterface $media_type
+   * @param MediaTypeInterface $media_type
    *   The media type to get the media source and generate a value.
    *
    * @return array
@@ -58,7 +60,7 @@ interface OrangeLogicMediaLibraryManagerInterface {
    *
    * @param object $result
    *   The asset data from OL.
-   * @param \Drupal\field\Entity\FieldConfig $source_field_definition
+   * @param FieldConfig $source_field_definition
    *   The field config definition of the Orange Logic field type.
    *
    * @return array
diff --git a/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryOptionsHelper.php b/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryOptionsHelper.php
index 6e1f081..28cc5fd 100644
--- a/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryOptionsHelper.php
+++ b/modules/orange_logic_media_library/src/OrangeLogicMediaLibraryOptionsHelper.php
@@ -14,23 +14,23 @@ class OrangeLogicMediaLibraryOptionsHelper implements OrangeLogicMediaLibraryOpt
   /**
    * Language Manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Language Manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * OrangeLogicMediaLibraryOptionsHelper constructor.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity Field Manager.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   Language Manager.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, LanguageManagerInterface $language_manager) {
