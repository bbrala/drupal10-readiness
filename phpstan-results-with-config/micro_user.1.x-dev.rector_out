modules/contrib/micro_user/micro_user.module
modules/contrib/micro_user/src/Access/RegisterAccessCheck.php
modules/contrib/micro_user/src/Form/MicroUserConfig.php
modules/contrib/micro_user/src/MicroUserManagerInterface.php
modules/contrib/micro_user/tests/src/Functional/LoadTest.php

3 files with changes
====================

1) modules/contrib/micro_user/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\micro_user\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\micro_site\Functional\MicroSiteBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ @@
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/micro_user/src/Access/RegisterAccessCheck.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\micro_user\Access;

+use Drupal\micro_site\siteNegotiatorInterface;
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
   /**
    * The Site negotiator.
    *
-   * @var \Drupal\micro_site\siteNegotiatorInterface
+   * @var siteNegotiatorInterface
    */
   protected $negotiator;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *
    * @param SiteNegotiatorInterface $negotiator
    *   The domain negotiation service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(SiteNegotiatorInterface $negotiator, ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Checks access.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/micro_user/micro_user.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\micro_site\SiteNegotiatorInterface;
 /**
  * @file
  * Contains micro_user.module.
@@ @@
 function micro_user_validate_user_login($form, FormStateInterface $form_state) {
   $accounts = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties(['name' => $form_state->getValue('name'), 'status' => 1]);
   $account = reset($accounts);
-  /** @var \Drupal\micro_site\SiteNegotiatorInterface $negotiator */
+  /** @var SiteNegotiatorInterface $negotiator */
   $negotiator = \Drupal::service('micro_site.negotiator');
   $configMicroUser = \Drupal::config('micro_user.settings');
   if ($site = $negotiator->getActiveSite()) {
@@ @@
 }

 function micro_user_validate_user_register($form, FormStateInterface $form_state) {
-  /** @var \Drupal\micro_site\SiteNegotiatorInterface $negotiator */
+  /** @var SiteNegotiatorInterface $negotiator */
   $negotiator = \Drupal::service('micro_site.negotiator');
   if ($site = $negotiator->getActiveSite()) {
     $accounts = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties(['name' => $form_state->getValue('name'), 'mail' => $form_state->getValue('mail'), 'status' => 1]);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

