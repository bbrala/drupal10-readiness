diff --git a/modules/eloqua_api_auth_fallback/src/Commands/EloquaAuthTokensGenerate.php b/modules/eloqua_api_auth_fallback/src/Commands/EloquaAuthTokensGenerate.php
index 78200f7..083e1ec 100644
--- a/modules/eloqua_api_auth_fallback/src/Commands/EloquaAuthTokensGenerate.php
+++ b/modules/eloqua_api_auth_fallback/src/Commands/EloquaAuthTokensGenerate.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\eloqua_api_auth_fallback\Commands;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\eloqua_api_redux\Service\EloquaApiClient;
@@ -16,32 +18,32 @@ class EloquaAuthTokensGenerate extends DrushCommands implements EloquaAuthFallba
   /**
    * Immutable Config.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   protected $configSettings;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * Eloqua API client service.
    *
-   * @var \Drupal\eloqua_api_redux\Service\EloquaApiClient
+   * @var EloquaApiClient
    */
   protected $eloquaApiClient;
 
   /**
    * EloquaAuthTokensGenerate constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   An instance of ConfigFactory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   LoggerChannelFactoryInterface.
-   * @param \Drupal\eloqua_api_redux\Service\EloquaApiClient $eloqua_api_client
+   * @param EloquaApiClient $eloqua_api_client
    *   Eloqua API client service.
    */
   public function __construct(ConfigFactory $config_factory,
diff --git a/src/Controller/Callback.php b/src/Controller/Callback.php
index 9682d86..2a1147f 100644
--- a/src/Controller/Callback.php
+++ b/src/Controller/Callback.php
@@ -19,14 +19,14 @@ class Callback extends ControllerBase {
   /**
    * Eloqua API Client.
    *
-   * @var \Drupal\eloqua_api_redux\Service\EloquaApiClient
+   * @var EloquaApiClient
    */
   private $eloquaClient;
 
   /**
    * Callback constructor.
    *
-   * @param \Drupal\eloqua_api_redux\Service\EloquaApiClient $eloquaClient
+   * @param EloquaApiClient $eloquaClient
    *   Eloqua API Client.
    */
   public function __construct(EloquaApiClient $eloquaClient) {
@@ -45,7 +45,7 @@ class Callback extends ControllerBase {
   /**
    * Callback URL for Eloqua API Auth.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request.
    *
    * @return array
diff --git a/src/Form/Settings.php b/src/Form/Settings.php
index 072eb09..ac054a9 100644
--- a/src/Form/Settings.php
+++ b/src/Form/Settings.php
@@ -18,16 +18,16 @@ class Settings extends ConfigFormBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Settings constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config Factory.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   Date Formatter.
    */
   public function __construct(ConfigFactoryInterface $config_factory,
diff --git a/src/Service/Contact.php b/src/Service/Contact.php
index a20f333..d02ebea 100644
--- a/src/Service/Contact.php
+++ b/src/Service/Contact.php
@@ -22,14 +22,14 @@ class Contact {
   /**
    * Eloqua Api Client.
    *
-   * @var \Drupal\eloqua_api_redux\Service\EloquaApiClient
+   * @var EloquaApiClient
    */
   protected $client;
 
   /**
    * Contact constructor.
    *
-   * @param \Drupal\eloqua_api_redux\Service\EloquaApiClient $client
+   * @param EloquaApiClient $client
    *   Eloqua API Client.
    */
   public function __construct(EloquaApiClient $client) {
diff --git a/src/Service/EloquaApiClient.php b/src/Service/EloquaApiClient.php
index 96b20f4..bb39763 100644
--- a/src/Service/EloquaApiClient.php
+++ b/src/Service/EloquaApiClient.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\eloqua_api_redux\Service;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactory;
@@ -20,41 +22,41 @@ class EloquaApiClient {
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * Editable Tokens Config.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   private $configTokens;
 
   /**
    * Uneditable Config.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   private $config;
 
   /**
    * The HTTP client to fetch the API data.
    *
-   * @var \Drupal\Core\Http\ClientFactory
+   * @var ClientFactory
    */
   protected $httpClientFactory;
 
   /**
    * Callback Controller constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   An instance of ConfigFactory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   LoggerChannelFactoryInterface.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache Backend.
-   * @param \Drupal\Core\Http\ClientFactory $httpClientFactory
+   * @param ClientFactory $httpClientFactory
    *   A Guzzle client object.
    */
   public function __construct(ConfigFactory $config,
@@ -327,7 +329,7 @@ class EloquaApiClient {
     // Save the token.
     $cacheItem = [
       'value' => $value,
-      'expire' => REQUEST_TIME + $this->eloquaApiCacheAge($key),
+      'expire' => \Drupal::time()->getRequestTime() + $this->eloquaApiCacheAge($key),
     ];
 
     $this->configTokens
@@ -349,7 +351,7 @@ class EloquaApiClient {
     if ($cache = $this->configTokens->get($type)) {
       $response = unserialize($cache, ['allowed_classes' => FALSE]);
 
-      $now = REQUEST_TIME;
+      $now = \Drupal::time()->getRequestTime();
       $expire = $response['expire'];
 
       // Manually validate if the token is still fresh.
diff --git a/src/Service/Forms.php b/src/Service/Forms.php
index 0cc5f95..bed04b6 100644
--- a/src/Service/Forms.php
+++ b/src/Service/Forms.php
@@ -14,14 +14,14 @@ class Forms {
   /**
    * Eloqua Api Client.
    *
-   * @var \Drupal\eloqua_api_redux\Service\EloquaApiClient
+   * @var EloquaApiClient
    */
   protected $client;
 
   /**
    * Contact constructor.
    *
-   * @param \Drupal\eloqua_api_redux\Service\EloquaApiClient $client
+   * @param EloquaApiClient $client
    *   Eloqua API Client.
    */
   public function __construct(EloquaApiClient $client) {
diff --git a/tests/src/Unit/EloquaApiClientTest.php b/tests/src/Unit/EloquaApiClientTest.php
index fe4a6ed..40ec600 100644
--- a/tests/src/Unit/EloquaApiClientTest.php
+++ b/tests/src/Unit/EloquaApiClientTest.php
@@ -2,6 +2,13 @@
 
 namespace Drupal\Tests\eloqua_api_redux\Unit;
 
+use Drupal\Core\Logger\LoggerChannelFactoryInterface;
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Config\ConfigFactory;
+use Drupal\Core\Http\ClientFactory;
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Tests\UnitTestCase;
 use GuzzleHttp\Psr7\Response;
@@ -27,70 +34,66 @@ class EloquaApiClientTest extends UnitTestCase {
   /**
    * Logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
    * Config instance.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   protected $config;
 
   /**
    * Token Config instance.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   protected $configTokens;
 
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * Guzzle http client factory.
    *
-   * @var \Drupal\Core\Http\ClientFactory
+   * @var ClientFactory
    */
   protected $httpClientFactory;
 
   /**
    * Cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
   /**
    * The module handler to load the module path.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
-    $this->httpClientFactory = $this->getMockBuilder('Drupal\Core\Http\ClientFactory')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->httpClientFactory = $this->createMock('Drupal\Core\Http\ClientFactory');
 
     $this->config = $this->getMockBuilder('Drupal\Core\Config\Config\Drupal\Core\Config\ImmutableConfig')
       ->disableOriginalConstructor()
       ->setMethods(['get'])
       ->getMock();
 
-    $this->configFactory = $this->getMockBuilder('Drupal\Core\Config\ConfigFactory')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->configFactory = $this->createMock('Drupal\Core\Config\ConfigFactory');
 
     $this->configFactory->expects($this->any())
       ->method('get')
@@ -102,29 +105,17 @@ class EloquaApiClientTest extends UnitTestCase {
       ->with('eloqua_api_redux.tokens')
       ->will($this->returnValue($this->configTokens));
 
-    $this->loggerFactory = $this->getMockBuilder('Drupal\Core\Logger\LoggerChannelFactoryInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->loggerFactory = $this->createMock('Drupal\Core\Logger\LoggerChannelFactoryInterface');
 
-    $this->cacheBackend = $this->getMockBuilder('Drupal\Core\Cache\CacheBackendInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->cacheBackend = $this->createMock('Drupal\Core\Cache\CacheBackendInterface');
 
-    $this->moduleHandler = $this->getMockBuilder('Drupal\Core\Extension\ModuleHandlerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->moduleHandler = $this->createMock('Drupal\Core\Extension\ModuleHandlerInterface');
 
     // Set container and required dependencies.
     $container = new ContainerBuilder();
-    $pathValidator = $this->getMockBuilder('Drupal\Core\Path\PathValidatorInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $unroutedUrlAssembler = $this->getMockBuilder('Drupal\Core\Utility\UnroutedUrlAssemblerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
-    $authFallbackService = $this->getMockBuilder('Drupal\eloqua_api_redux\Service\EloquaAuthFallbackInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $pathValidator = $this->createMock('Drupal\Core\Path\PathValidatorInterface');
+    $unroutedUrlAssembler = $this->createMock('Drupal\Core\Utility\UnroutedUrlAssemblerInterface');
+    $authFallbackService = $this->createMock('Drupal\eloqua_api_redux\Service\EloquaAuthFallbackInterface');
     $container->set('path.validator', $pathValidator);
     $container->set('unrouted_url_assembler', $unroutedUrlAssembler);
     $container->set('eloqua_api_redux.auth_fallback_default', $authFallbackService);
