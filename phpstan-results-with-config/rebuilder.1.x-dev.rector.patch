diff --git a/modules/rebuilder_ui/src/Form/RebuilderRunForm.php b/modules/rebuilder_ui/src/Form/RebuilderRunForm.php
index ac1078b..d824553 100644
--- a/modules/rebuilder_ui/src/Form/RebuilderRunForm.php
+++ b/modules/rebuilder_ui/src/Form/RebuilderRunForm.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\rebuilder_ui\Form;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -19,20 +20,20 @@ class RebuilderRunForm extends FormBase {
   /**
    * The Rebuilder plug-in manager.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface
+   * @var RebuilderManagerInterface
    */
   protected RebuilderManagerInterface $rebuilderManager;
 
   /**
    * Constructor; saves dependencies.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The Drupal messenger service.
    *
-   * @param \Drupal\rebuilder\PluginManager\RebuilderManagerInterface $rebuilderManager
+   * @param RebuilderManagerInterface $rebuilderManager
    *   The Rebuilder plug-in manager.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The Drupal string translation service.
    */
   public function __construct(
@@ -120,7 +121,7 @@ class RebuilderRunForm extends FormBase {
    * @param array &$form
    *   An associative array containing the structure of the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitRunRebuilder(
@@ -133,7 +134,7 @@ class RebuilderRunForm extends FormBase {
       /** @var array */
       $element = $form_state->getTriggeringElement();
 
-      /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+      /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
       $output = $this->rebuilderManager->runRebuilder(
         $element['#rebuilder_id']
       );
diff --git a/src/Annotation/Rebuilder.php b/src/Annotation/Rebuilder.php
index 84f2ca3..782fe87 100644
--- a/src/Annotation/Rebuilder.php
+++ b/src/Annotation/Rebuilder.php
@@ -21,7 +21,7 @@ class Rebuilder extends Plugin {
   /**
    * The human readable title of the plug-in.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -30,7 +30,7 @@ class Rebuilder extends Plugin {
   /**
    * A brief human readable description of the plug-in.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Commands/ListCommand.php b/src/Commands/ListCommand.php
index e8d6dd0..48cc2b7 100644
--- a/src/Commands/ListCommand.php
+++ b/src/Commands/ListCommand.php
@@ -18,14 +18,14 @@ class ListCommand extends DrushCommands {
   /**
    * The Rebuilder plug-in manager.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface
+   * @var RebuilderManagerInterface
    */
   protected RebuilderManagerInterface $rebuilderManager;
 
   /**
    * Constructor; saves dependencies.
    *
-   * @param \Drupal\rebuilder\PluginManager\RebuilderManagerInterface $rebuilderManager
+   * @param RebuilderManagerInterface $rebuilderManager
    *   The Rebuilder plug-in manager.
    */
   public function __construct(RebuilderManagerInterface $rebuilderManager) {
@@ -37,7 +37,7 @@ class ListCommand extends DrushCommands {
    *
    * @command rebuilder:list
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\UnstructuredListData
+   * @return UnstructuredListData
    *   A list of Rebuilder type machine names.
    */
   public function listRebuilders(): UnstructuredListData {
diff --git a/src/Commands/RunCommand.php b/src/Commands/RunCommand.php
index b9de457..a6f72bd 100644
--- a/src/Commands/RunCommand.php
+++ b/src/Commands/RunCommand.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\rebuilder\Commands;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\rebuilder\PluginManager\RebuilderManagerInterface;
 use Drush\Commands\DrushCommands;
 use Drush\Exceptions\CommandFailedException;
@@ -18,14 +19,14 @@ class RunCommand extends DrushCommands {
   /**
    * The Rebuilder plug-in manager.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface
+   * @var RebuilderManagerInterface
    */
   protected RebuilderManagerInterface $rebuilderManager;
 
   /**
    * Constructor; saves dependencies.
    *
-   * @param \Drupal\rebuilder\PluginManager\RebuilderManagerInterface $rebuilderManager
+   * @param RebuilderManagerInterface $rebuilderManager
    *   The Rebuilder plug-in manager.
    */
   public function __construct(RebuilderManagerInterface $rebuilderManager) {
@@ -49,7 +50,7 @@ class RunCommand extends DrushCommands {
    *   Options to pass to the Rebuilder plug-in. See each plug-in for what
    *   options they support, if any.
    *
-   * @throws \Drush\Exceptions\CommandFailedException
+   * @throws CommandFailedException
    *   If the Rebuilder plug-in manager threw an error, with the text of the
    *   error.
    */
@@ -60,7 +61,7 @@ class RunCommand extends DrushCommands {
     // phpcs:disable Drupal.ControlStructures.ControlSignature.NewlineAfterCloseBrace
     try {
 
-      /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+      /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
       $output = $this->rebuilderManager->runRebuilder(
         $rebuilderId, $options['option']
       );
diff --git a/src/Plugin/Rebuilder/Asset.php b/src/Plugin/Rebuilder/Asset.php
index bcc2d9e..87ca123 100644
--- a/src/Plugin/Rebuilder/Asset.php
+++ b/src/Plugin/Rebuilder/Asset.php
@@ -31,54 +31,54 @@ class Asset extends RebuilderBase {
   /**
    * The Drupal CSS collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected AssetCollectionOptimizerInterface $cssCollectionOptimizer;
 
   /**
    * The Drupal JavaScript collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected AssetCollectionOptimizerInterface $jsCollectionOptimizer;
 
   /**
    * The Drupal library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected LibraryDiscoveryInterface $libraryDiscovery;
 
   /**
    * The Drupal state storage.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected StateInterface $state;
 
   /**
    * The Drupal time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $cssCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $cssCollectionOptimizer
    *   The Drupal CSS collection optimizer service.
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $jsCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $jsCollectionOptimizer
    *   The Drupal JavaScript collection optimizer service.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The Drupal time service.
    *
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The Drupal library discovery service.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The Drupal state storage.
    */
   public function __construct(
diff --git a/src/Plugin/Rebuilder/Container.php b/src/Plugin/Rebuilder/Container.php
index e50d387..0c78294 100644
--- a/src/Plugin/Rebuilder/Container.php
+++ b/src/Plugin/Rebuilder/Container.php
@@ -25,14 +25,14 @@ class Container extends RebuilderBase {
   /**
    * The Drupal kernel.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected DrupalKernelInterface $kernel;
 
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   The Drupal kernel.
    */
   public function __construct(
diff --git a/src/Plugin/Rebuilder/Library.php b/src/Plugin/Rebuilder/Library.php
index a40b559..e693757 100644
--- a/src/Plugin/Rebuilder/Library.php
+++ b/src/Plugin/Rebuilder/Library.php
@@ -28,14 +28,14 @@ class Library extends RebuilderBase {
   /**
    * The Drupal library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected LibraryDiscoveryInterface $libraryDiscovery;
 
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The Drupal library discovery service.
    */
   public function __construct(
diff --git a/src/Plugin/Rebuilder/Plugin.php b/src/Plugin/Rebuilder/Plugin.php
index dd1f1cb..c9a39dd 100644
--- a/src/Plugin/Rebuilder/Plugin.php
+++ b/src/Plugin/Rebuilder/Plugin.php
@@ -40,14 +40,14 @@ class Plugin extends RebuilderBase {
   /**
    * The current Drupal container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected ContainerInterface $container;
 
   /**
    * {@inheritdoc}
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The current Drupal container.
    */
   public function __construct(
diff --git a/src/Plugin/Rebuilder/RebuilderBase.php b/src/Plugin/Rebuilder/RebuilderBase.php
index 71a47a5..b1d4252 100644
--- a/src/Plugin/Rebuilder/RebuilderBase.php
+++ b/src/Plugin/Rebuilder/RebuilderBase.php
@@ -24,7 +24,7 @@ abstract class RebuilderBase extends PluginBase implements ContainerFactoryPlugi
   /**
    * The output of this instance on a successful rebuild.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @var TranslatableMarkup
    */
   protected TranslatableMarkup $output;
 
@@ -41,7 +41,7 @@ abstract class RebuilderBase extends PluginBase implements ContainerFactoryPlugi
    *   The plug-in implementation definition. PluginBase defines this as mixed,
    *   but we should always have an array so the type is specified.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The Drupal string translation service.
    */
   public function __construct(
diff --git a/src/Plugin/Rebuilder/RebuilderInterface.php b/src/Plugin/Rebuilder/RebuilderInterface.php
index 4fc37cd..976f699 100644
--- a/src/Plugin/Rebuilder/RebuilderInterface.php
+++ b/src/Plugin/Rebuilder/RebuilderInterface.php
@@ -23,7 +23,7 @@ interface RebuilderInterface {
   /**
    * Set output for this plug-in instance.
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $output
+   * @param TranslatableMarkup $output
    *   A TranslatableMarkup object.
    */
   public function setOutput(TranslatableMarkup $output): void;
@@ -31,7 +31,7 @@ interface RebuilderInterface {
   /**
    * Get the output for this plug-in instance.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The output for this instance, as a TranslatableMarkup object.
    */
   public function getOutput(): TranslatableMarkup;
diff --git a/src/Plugin/Rebuilder/Router.php b/src/Plugin/Rebuilder/Router.php
index d07d208..ffd4f92 100644
--- a/src/Plugin/Rebuilder/Router.php
+++ b/src/Plugin/Rebuilder/Router.php
@@ -25,14 +25,14 @@ class Router extends RebuilderBase {
   /**
    * The Drupal route builder service.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected RouteBuilderInterface $routeBuilder;
 
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $routeBuilder
+   * @param RouteBuilderInterface $routeBuilder
    *   The Drupal route builder service.
    */
   public function __construct(
diff --git a/src/Plugin/Rebuilder/Schema.php b/src/Plugin/Rebuilder/Schema.php
index 9683db8..493cf1f 100644
--- a/src/Plugin/Rebuilder/Schema.php
+++ b/src/Plugin/Rebuilder/Schema.php
@@ -25,14 +25,14 @@ class Schema extends RebuilderBase {
   /**
    * The Drupal typed config manager.
    *
-   * @var \Drupal\Core\Config\TypedConfigManagerInterface
+   * @var TypedConfigManagerInterface
    */
   protected TypedConfigManagerInterface $typedConfigManager;
 
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typedConfigManager
+   * @param TypedConfigManagerInterface $typedConfigManager
    *   The Drupal typed config manager.
    */
   public function __construct(
diff --git a/src/Plugin/Rebuilder/Twig.php b/src/Plugin/Rebuilder/Twig.php
index b27ff96..6410d76 100644
--- a/src/Plugin/Rebuilder/Twig.php
+++ b/src/Plugin/Rebuilder/Twig.php
@@ -25,14 +25,14 @@ class Twig extends RebuilderBase {
   /**
    * The Drupal Twig environment service.
    *
-   * @var \Drupal\Core\Template\TwigEnvironment
+   * @var TwigEnvironment
    */
   protected TwigEnvironment $twigEnvironment;
 
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Template\TwigEnvironment $twigEnvironment
+   * @param TwigEnvironment $twigEnvironment
    *   The Drupal Twig environment service.
    */
   public function __construct(
diff --git a/src/PluginManager/RebuilderManager.php b/src/PluginManager/RebuilderManager.php
index 814cf23..f3be903 100644
--- a/src/PluginManager/RebuilderManager.php
+++ b/src/PluginManager/RebuilderManager.php
@@ -28,10 +28,10 @@ class RebuilderManager extends DefaultPluginManager implements RebuilderManagerI
    *   keyed by the corresponding namespace to look for plug-in
    *   implementations.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend instance to use.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(
diff --git a/src/PluginManager/RebuilderManagerInterface.php b/src/PluginManager/RebuilderManagerInterface.php
index b1d77ad..6e9b82c 100644
--- a/src/PluginManager/RebuilderManagerInterface.php
+++ b/src/PluginManager/RebuilderManagerInterface.php
@@ -20,7 +20,7 @@ interface RebuilderManagerInterface {
    * @param array $rebuilderOptions
    *   Arbitrary options to pass to the Rebuilder plug-in instance.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The output from the Rebuilder plug-in.
    */
   public function runRebuilder(
diff --git a/tests/src/Kernel/RebuilderManagerTest.php b/tests/src/Kernel/RebuilderManagerTest.php
index 313c56e..2eb4b33 100644
--- a/tests/src/Kernel/RebuilderManagerTest.php
+++ b/tests/src/Kernel/RebuilderManagerTest.php
@@ -23,7 +23,7 @@ class RebuilderManagerTest extends KernelTestBase {
    * this to null which will cause the test to fail due to a TypeError after
    * running.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface|null
+   * @var RebuilderManagerInterface|null
    *
    * @see \Drupal\KernelTests\KernelTestBase::tearDown()
    */
@@ -45,7 +45,7 @@ class RebuilderManagerTest extends KernelTestBase {
 
     parent::setUp();
 
-    /** @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface */
+    /** @var RebuilderManagerInterface */
     $this->rebuilderManager = $this->container->get('plugin.manager.rebuilder');
 
   }
diff --git a/tests/src/Kernel/RebuilderPluginTest.php b/tests/src/Kernel/RebuilderPluginTest.php
index 8157092..54c2932 100644
--- a/tests/src/Kernel/RebuilderPluginTest.php
+++ b/tests/src/Kernel/RebuilderPluginTest.php
@@ -4,6 +4,7 @@ declare(strict_types=1);
 
 namespace Drupal\Tests\rebuilder\Kernel;
 
+use Drupal\Core\StringTranslation\TranslationInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\rebuilder\PluginManager\RebuilderManagerInterface;
@@ -39,7 +40,7 @@ class RebuilderPluginTest extends KernelTestBase {
    * this to null which will cause the test to fail due to a TypeError after
    * running.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface|null
+   * @var RebuilderManagerInterface|null
    *
    * @see \Drupal\KernelTests\KernelTestBase::tearDown()
    */
@@ -61,7 +62,7 @@ class RebuilderPluginTest extends KernelTestBase {
 
     parent::setUp();
 
-    /** @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface */
+    /** @var RebuilderManagerInterface */
     $this->rebuilderManager = $this->container->get('plugin.manager.rebuilder');
 
   }
@@ -72,7 +73,7 @@ class RebuilderPluginTest extends KernelTestBase {
    * @param string $pluginId
    *   The machine name of the Rebuilder plug-in to create an instance of.
    *
-   * @return \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface
+   * @return RebuilderInterface
    *   A Rebuilder plug-in instance.
    */
   protected function getRebuilderInstance(
@@ -90,12 +91,12 @@ class RebuilderPluginTest extends KernelTestBase {
    */
   public function testPluginDefaultOutput(): void {
 
-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_DEFAULT_OUTPUT_PLUGIN
     );
 
-    /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+    /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
     $output = $instance->getOutput();
 
     $this->assertInstanceOf(TranslatableMarkup::class, $output);
@@ -109,12 +110,12 @@ class RebuilderPluginTest extends KernelTestBase {
    */
   public function testPluginCustomOutput(): void {
 
-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_CUSTOM_OUTPUT_PLUGIN
     );
 
-    /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+    /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
     $output = $instance->getOutput();
 
     $this->assertInstanceOf(TranslatableMarkup::class, $output);
@@ -128,10 +129,10 @@ class RebuilderPluginTest extends KernelTestBase {
    */
   public function testSetValidOutput(): void {
 
-    /** @var \Drupal\Core\StringTranslation\TranslationInterface The Drupal string translation service. */
+    /** @var TranslationInterface The Drupal string translation service. */
     $stringTranslation = $this->container->get('string_translation');
 
-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_DEFAULT_OUTPUT_PLUGIN
     );
@@ -140,7 +141,7 @@ class RebuilderPluginTest extends KernelTestBase {
       'Custom output has been set.'
     ));
 
-    /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+    /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
     $output = $instance->getOutput();
 
     $this->assertInstanceOf(TranslatableMarkup::class, $output);
@@ -154,7 +155,7 @@ class RebuilderPluginTest extends KernelTestBase {
    */
   public function testSetInvalidOutput(): void {
 
-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_DEFAULT_OUTPUT_PLUGIN
     );
