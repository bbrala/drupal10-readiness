modules/contrib/project_browser/modules/project_browser_devel/project_browser_devel.install
modules/contrib/project_browser/modules/project_browser_devel/src/Plugin/ProjectBrowserSource/RandomDataPlugin.php
modules/contrib/project_browser/project_browser.install
modules/contrib/project_browser/project_browser.module
modules/contrib/project_browser/src/Annotation/ProjectBrowserSource.php
modules/contrib/project_browser/src/Commands/UpdateFixtureCommands.php
modules/contrib/project_browser/src/Controller/BrowserController.php
modules/contrib/project_browser/src/Controller/ProjectBrowserEndpointController.php
modules/contrib/project_browser/src/EnabledSourceHandler.php
modules/contrib/project_browser/src/Event/ProjectBrowserEvents.php
modules/contrib/project_browser/src/Event/UpdateFixtureEvent.php
modules/contrib/project_browser/src/EventSubscriber/UpdateFixtureSubscriber.php
modules/contrib/project_browser/src/Plugin/ProjectBrowserSource/MockDrupalDotOrg.php
modules/contrib/project_browser/src/Plugin/ProjectBrowserSourceBase.php
modules/contrib/project_browser/src/Plugin/ProjectBrowserSourceInterface.php
modules/contrib/project_browser/src/Plugin/ProjectBrowserSourceManager.php
modules/contrib/project_browser/src/ProjectBrowser/Project.php
modules/contrib/project_browser/src/ProjectBrowser/ProjectInterface.php
modules/contrib/project_browser/src/ProjectBrowser/ProjectsResultsPage.php
modules/contrib/project_browser/tests/modules/project_browser_test/project_browser_test.install
modules/contrib/project_browser/tests/src/FunctionalJavascript/ProjectBrowserPluginTest.php
modules/contrib/project_browser/tests/src/FunctionalJavascript/ProjectBrowserUiTest.php
modules/contrib/project_browser/tests/src/FunctionalJavascript/TranslatedSvelteAppTest.php
modules/contrib/project_browser/tests/src/Kernel/DatabaseTablesTest.php

12 files with changes
=====================

1) modules/contrib/project_browser/tests/src/Kernel/DatabaseTablesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\project_browser\Kernel;

+use Drupal\Core\Extension\ModuleInstallerInterface;
+use Drupal\Core\Database\Schema;
+use Drupal\Core\Database\Connection;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
    * Tests that Project Browser's DB tables are created and destroyed correctly.
    */
   public function testDatabaseSchemaCreationAndDestruction(): void {
-    /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
+    /** @var ModuleInstallerInterface $module_installer */
     $module_installer = $this->container->get('module_installer');
-    /** @var \Drupal\Core\Database\Schema $database */
+    /** @var Schema $database */
     $schema = $this->container->get('database')->schema();
-    /** @var \Drupal\Core\Database\Connection $database */
+    /** @var Connection $database */
     $database = $this->container->get('database');

     $module_installer->install(['project_browser']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/project_browser/src/Plugin/ProjectBrowserSourceManager.php:20

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/project_browser/src/Plugin/ProjectBrowserSourceInterface.php:29

    ---------- begin diff ----------
@@ @@
    *   - development_status: Comma separated list of IDs.
    *   - security_advisory_coverage: Comma separated list of IDs.
    *
-   * @return \Drupal\project_browser\ProjectBrowser\ProjectsResultsPage
+   * @return ProjectsResultsPage
    *   Returns a \Drupal\project_browser\ProjectBrowser\ProjectsResultsPage.
    */
   public function getProjects(array $query = []): ProjectsResultsPage;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/project_browser/src/Plugin/ProjectBrowserSource/MockDrupalDotOrg.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\project_browser\Plugin\ProjectBrowserSource;

+use GuzzleHttp\Exception\GuzzleException;
 use Composer\Semver\Semver;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Database\Connection;
@@ @@
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * The state object.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection to be used.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   A Guzzle client object.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state object.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, LoggerInterface $logger, Connection $database, ClientInterface $http_client, StateInterface $state) {
@@ @@
    * @return array
    *   The response object.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Thrown if request is unsuccessful.
    *
    * @see https://www.drupal.org/drupalorg/docs/apis/rest-and-other-apis#s-releases
@@ @@
    * @return array
    *   An array of project data.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    * @throws \JsonException
    *
    * @see https://www.drupal.org/drupalorg/docs/apis/rest-and-other-apis
@@ @@
   /**
    * Update the database with any projects updated since the last update.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *
    * @throws \JsonException
    */
@@ @@
    * @return array
    *   An array releases.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Thrown if request is unsuccessful.
    */
   public function getProjectReleasesFromSource(string $project) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/project_browser/src/EventSubscriber/UpdateFixtureSubscriber.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Update fixture only if plugin id is 'drupalorg_mockapi'.
    *
-   * @param \Drupal\project_browser\Event\UpdateFixtureEvent $event
+   * @param UpdateFixtureEvent $event
    *   The event.
    */
   public function onFixtureUpdate(UpdateFixtureEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/project_browser/src/Event/UpdateFixtureEvent.php:9

    ---------- begin diff ----------
@@ @@
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   public $enabledSource;

@@ @@
   /**
    * Constructs the object.
    *
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
    */
   public function __construct(EnabledSourceHandler $enabled_source) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/project_browser/src/EnabledSourceHandler.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * The config factory interface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * EnabledSourceHandler constructor.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    * @param \Drupal\project_browser\plugin\ProjectBrowserSourceManager $plugin_manager
    *   The plugin manager.
@@ @@
   /**
    * Returns a plugin instance corresponding to the enabled_source config.
    *
-   * @return \Drupal\project_browser\Plugin\ProjectBrowserSourceInterface|null
+   * @return ProjectBrowserSourceInterface|null
    *   The Project Browser source plugin, or NULL.
    */
   public function getCurrentSource(): ?ProjectBrowserSourceInterface {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


8) modules/contrib/project_browser/src/Controller/ProjectBrowserEndpointController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\project_browser\Controller;

+use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\project_browser\EnabledSourceHandler;
@@ @@
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   protected $enabledSource;

@@ @@
   /**
    * ProjectBrowser cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBin;

@@ @@
   /**
    * ProjectBrowserEndpointController constructor.
    *
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
    */
   public function __construct(EnabledSourceHandler $enabled_source) {
@@ @@
    *
    * Returns a list of bundles for specified entity.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Typically a project listing.
    */
   public function getAllProjects(Request $request) {
@@ @@
   /**
    * Returns a list of categories.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllCategories(Request $request) {
@@ @@
   /**
    * Returns a list of development status values.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllDevelopmentStatus(Request $request) {
@@ @@
   /**
    * Returns a list of maintenance status values.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllMaintenanceStatus(Request $request) {
@@ @@
   /**
    * Returns a list of security coverage values.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   public function getAllSecurityCoverage(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/project_browser/src/Controller/BrowserController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\project_browser\Controller;

+use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Extension\InfoParserException;
 use Drupal\Core\Extension\ModuleExtensionList;
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleList;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   protected $enabledSource;

@@ @@
   /**
    * ProjectBrowser cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBin;

@@ @@
   /**
    * Build the project browser controller.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $module_list
+   * @param ModuleExtensionList $module_list
    *   The module extension list.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ModuleExtensionList $module_list, RequestStack $request_stack, EnabledSourceHandler $enabled_source, MessengerInterface $messenger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/project_browser/src/Commands/UpdateFixtureCommands.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * Logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   private $loggerChannelFactory;

@@ @@
   /**
    * The EnabledSourceHandler.
    *
-   * @var \Drupal\project_browser\EnabledSourceHandler
+   * @var EnabledSourceHandler
    */
   protected $enabledSource;

@@ @@
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * Constructs a new UpdateFixtureCommands object.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerChannelFactory
+   * @param LoggerChannelFactoryInterface $loggerChannelFactory
    *   Logger service.
-   * @param \Drupal\project_browser\EnabledSourceHandler $enabled_source
+   * @param EnabledSourceHandler $enabled_source
    *   The enabled source.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   Event dispatcher service.
    */
   public function __construct(LoggerChannelFactoryInterface $loggerChannelFactory, EnabledSourceHandler $enabled_source, EventDispatcherInterface $event_dispatcher) {
@@ @@

     // Dispatch the event so that event listeners of other source can update their fixture.
     $event = new UpdateFixtureEvent($this->enabledSource);
-    $this->eventDispatcher->dispatch(ProjectBrowserEvents::UPDATE_FIXTURE, $event);
+    $this->eventDispatcher->dispatch($event, ProjectBrowserEvents::UPDATE_FIXTURE);

     $this->logger()->notice($this->t('Completed.'));
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/project_browser/src/Annotation/ProjectBrowserSource.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\project_browser\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name of the source.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    * @ingroup plugin_translatable
    */
   public $label;
@@ @@
   /**
    * A short description of the source.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    * @ingroup plugin_translatable
    */
   public $description;
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


12) modules/contrib/project_browser/modules/project_browser_devel/src/Plugin/ProjectBrowserSource/RandomDataPlugin.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Utility to create random data.
    *
-   * @var \Drupal\Component\Utility\Random
+   * @var Random
    */
   protected $randomGenerator;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

