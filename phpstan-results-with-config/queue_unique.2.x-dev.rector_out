modules/contrib/queue_unique/queue_unique.install
modules/contrib/queue_unique/src/UniqueDatabaseQueue.php
modules/contrib/queue_unique/src/UniqueQueueDatabaseFactory.php
modules/contrib/queue_unique/tests/src/Kernel/UniqueQueueTest.php

2 files with changes
====================

1) modules/contrib/queue_unique/tests/src/Kernel/UniqueQueueTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\queue_unique\Kernel;

+use Drupal\Core\Database\Schema;
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\IntegrityConstraintViolationException;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
    */
   public function testUpdateHook8001() {
     module_load_install('queue_unique');
-    /** @var \Drupal\Core\Database\Schema $database_schema */
+    /** @var Schema $database_schema */
     $database_schema = $this->container->get('database')->schema();
     // The table should not exist yet.
     self::assertFalse($database_schema->tableExists(UniqueDatabaseQueue::TABLE_NAME));
@@ @@
         $this->createItemMd5($name, $data);
       }
     }
-    /** @var \Drupal\Core\Database\Connection $connection */
+    /** @var Connection $connection */
     $connection = $this->container->get('database');
     $query = $connection->select(UniqueDatabaseQueue::TABLE_NAME)->countQuery();
     $count = $query->execute()->fetchField();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/queue_unique/queue_unique.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\queue_unique\UniqueQueueDatabaseFactory;
 use Drupal\queue_unique\UniqueDatabaseQueue;

 /**
@@ @@
   }
   $temp_table = UniqueDatabaseQueue::TABLE_NAME . '_temp';
   $connection->schema()->renameTable(UniqueDatabaseQueue::TABLE_NAME, $temp_table);
-  /** @var \Drupal\queue_unique\UniqueQueueDatabaseFactory $queue_factory */
+  /** @var UniqueQueueDatabaseFactory $queue_factory */
   $queue_factory = \Drupal::service('queue_unique.database');
   $queue = $queue_factory->get(__FUNCTION__);
   // Add a dummy item to the queue so the new table is created.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 2 files have been changed by Rector                                       

