diff --git a/composer.json b/composer.json
index 792337a..1207dbc 100644
--- a/composer.json
+++ b/composer.json
@@ -17,7 +17,7 @@
         "source": "https://git.drupalcode.org/project/honeypot"
     },
     "require": {
-        "drupal/core": "^8.8.2 || ^9"
+        "drupal/core": "^8.8.2 || ^9 || ^10"
     },
     "require-dev": {
         "drupal/rules": "^3.0"
diff --git a/honeypot.info.yml b/honeypot.info.yml
index ebb2313..af7ef46 100644
--- a/honeypot.info.yml
+++ b/honeypot.info.yml
@@ -2,7 +2,7 @@ name: Honeypot
 type: module
 description: 'Mitigates spam form submissions using the honeypot method.'
 package: 'Spam control'
-core_version_requirement: ^8.8.2 || ^9
+core_version_requirement: ^8.8.2 || ^9 || ^10
 test_dependencies:
   - rules:rules
 
diff --git a/src/Form/HoneypotSettingsForm.php b/src/Form/HoneypotSettingsForm.php
index 2d13a89..9eb8931 100644
--- a/src/Form/HoneypotSettingsForm.php
+++ b/src/Form/HoneypotSettingsForm.php
@@ -21,52 +21,52 @@ class HoneypotSettingsForm extends ConfigFormBase {
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * A cache backend interface.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a settings controller.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend interface.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler, EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, CacheBackendInterface $cache_backend, MessengerInterface $messenger) {
diff --git a/tests/src/Functional/HoneypotAdminFormTest.php b/tests/src/Functional/HoneypotAdminFormTest.php
index 5a77434..c0166ea 100644
--- a/tests/src/Functional/HoneypotAdminFormTest.php
+++ b/tests/src/Functional/HoneypotAdminFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\honeypot\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
@@ -17,7 +18,7 @@ class HoneypotAdminFormTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/HoneypotFormCacheTest.php b/tests/src/Functional/HoneypotFormCacheTest.php
index c474266..f91e0bc 100644
--- a/tests/src/Functional/HoneypotFormCacheTest.php
+++ b/tests/src/Functional/HoneypotFormCacheTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\honeypot\Functional;
 
+use Drupal\node\NodeInterface;
 use Drupal\comment\Tests\CommentTestTrait;
 use Drupal\comment\Plugin\Field\FieldType\CommentItemInterface;
 use Drupal\contact\Entity\ContactForm;
@@ -29,7 +30,7 @@ class HoneypotFormCacheTest extends BrowserTestBase {
   /**
    * Node object.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
diff --git a/tests/src/Functional/HoneypotFormTest.php b/tests/src/Functional/HoneypotFormTest.php
index fa6bf59..484fb6e 100644
--- a/tests/src/Functional/HoneypotFormTest.php
+++ b/tests/src/Functional/HoneypotFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\honeypot\Functional;
 
+use Drupal\node\NodeInterface;
 use Drupal\comment\Tests\CommentTestTrait;
 use Drupal\comment\Plugin\Field\FieldType\CommentItemInterface;
 use Drupal\contact\Entity\ContactForm;
@@ -22,21 +23,21 @@ class HoneypotFormTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * Site visitor.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
   /**
    * Node object.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
@@ -157,7 +158,10 @@ class HoneypotFormTest extends BrowserTestBase {
     $this->drupalGet('user/register');
     sleep(2);
     $this->submitForm($edit, 'Create new account');
-    $this->assertNoText($this->t('There was a problem with your form submission.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains($this->t('There was a problem with your form submission.'));
 
     // Set the time limit a bit higher so we can trigger honeypot.
     \Drupal::configFactory()->getEditable('honeypot.settings')->set('time_limit', 5)->save();
@@ -185,7 +189,10 @@ class HoneypotFormTest extends BrowserTestBase {
       $edit['url'] = $value;
       $this->drupalGet('user/register');
       $this->submitForm($edit, 'Create new account');
-      $this->assertText($this->t('There was a problem with your form submission. Please refresh the page and try again.'), "Honeypot protection is triggered when the honeypot field contains '{$value}'.");
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains($this->t('There was a problem with your form submission. Please refresh the page and try again.'));
     }
   }
 
