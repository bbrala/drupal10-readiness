modules/contrib/mailer/mailer.module
modules/contrib/mailer/modules/mailer_example/src/Form/SendMailForm.php
modules/contrib/mailer/modules/mailer_example/src/Plugin/MailerMail/BasicExample/BasicExample.php
modules/contrib/mailer/modules/mailer_example/src/Plugin/MailerMail/ExtendedExample/ExtendedExampleMailPlugin.php
modules/contrib/mailer/modules/mailer_example/src/Plugin/MailerMail/ExtendedExample/ExtendedExampleMailPluginConfig.php
modules/contrib/mailer/src/Annotation/MailerMail.php
modules/contrib/mailer/src/Controller/ConfigurationController.php
modules/contrib/mailer/src/Plugin/Factory/MailerMailConfigFactory.php
modules/contrib/mailer/src/Plugin/MailerMailConfigBase.php
modules/contrib/mailer/src/Plugin/MailerMailConfigInterface.php
modules/contrib/mailer/src/Plugin/MailerMailPluginBase.php
modules/contrib/mailer/src/Plugin/MailerMailPluginInterface.php
modules/contrib/mailer/src/Plugin/MailerMailPluginManager.php
modules/contrib/mailer/src/Plugin/MailerMailPluginManagerInterface.php

7 files with changes
====================

1) modules/contrib/mailer/src/Plugin/MailerMailPluginManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mailer\Plugin;

+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Plugin\DefaultPluginManager;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
    * @param int $plugin_id
    *   The plugin id to load the config for.
    *
-   * @return \Drupal\mailer\Plugin\MailerMailConfigInterface
+   * @return MailerMailConfigInterface
    *   the mailer mail config object loaded with default values.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getDefaultConfig($plugin_id) {
     $mailplugin = $this->createInstance($plugin_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/mailer/src/Plugin/MailerMailPluginInterface.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * Return the mailermail config object, return defaultconfig if not set.
    *
-   * @return \Drupal\mailer\Plugin\MailerMailConfigInterface
+   * @return MailerMailConfigInterface
    *   MailerMailConfig Object.
    */
   public function getConfig();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/mailer/src/Plugin/MailerMailPluginBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mailer\Plugin;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Logger\LoggerChannelInterface;
+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Component\Plugin\Discovery\DiscoveryInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * Drupal core config object for logger.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $configService;

@@ @@
   /**
    * Drupal core mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * Drupal core renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Drupal core logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * The mailermail config factory.
    *
-   * @var \Drupal\mailer\Plugin\Factory\MailerMailConfigFactory
+   * @var MailerMailConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * MailerMailConfig object for this plugin instance.
    *
-   * @var \Drupal\mailer\Plugin\MailerMailConfigInterface
+   * @var MailerMailConfigInterface
    */
   protected $config;

@@ @@
   /**
    * The MailerMailManager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $manager;

@@ @@
    *
    * Used to set the language for string translation while rendering.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $translationManager;

@@ @@
   /**
    * Get or create the config factory for MailerMailConfig objects.
    *
-   * @return \Drupal\mailer\Plugin\Factory\MailerMailConfigFactory
+   * @return MailerMailConfigFactory
    *   The config factory.
    */
   protected function getConfigFactory() {
@@ @@
   /**
    * Get the default mailermail config object for this plugin.
    *
-   * @return \Drupal\mailer\Plugin\MailerMailConfigInterface
+   * @return MailerMailConfigInterface
    *   The config object.
    */
   public function getDefaultConfig() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/mailer/src/Plugin/MailerMailConfigBase.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal conre language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The urlgenerator service.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/mailer/src/Annotation/MailerMail.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mailer\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


6) modules/contrib/mailer/modules/mailer_example/src/Form/SendMailForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mailer_example\Form;

+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Form\FormBase;
@@ @@
   /**
    * Send out the most basic email plugin possible.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function sendBasicExample($form_state) {
     // Send out email with mailer.
@@ @@
   /**
    * Send out a more complex example.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function sendExtendedExample($form_state) {
     // Send out email with mailer.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/mailer/mailer.module:62

    ---------- begin diff ----------
@@ @@
       // Remove template name from full path.
       $template_name = array_pop($split);
       // Replace module path with full path to module.
-      $split[0] = drupal_get_path('module', $split[0]);
+      $split[0] = \Drupal::service('extension.list.module')->getPath($split[0]);
       $path = implode('/', $split);

       $theme[$mailer->getTemplateKey($plugin_id, $template_name)] = [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

