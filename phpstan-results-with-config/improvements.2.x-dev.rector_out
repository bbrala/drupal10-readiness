modules/contrib/improvements/improvements.install
modules/contrib/improvements/improvements.module
modules/contrib/improvements/improvements.tokens.inc
modules/contrib/improvements/includes/improvements.admin.inc
modules/contrib/improvements/includes/improvements.build_time.inc
modules/contrib/improvements/includes/improvements.comment.inc
modules/contrib/improvements/includes/improvements.contact.inc
modules/contrib/improvements/includes/improvements.form.inc
modules/contrib/improvements/includes/improvements.form_tracking_submit.inc
modules/contrib/improvements/includes/improvements.menu.inc
modules/contrib/improvements/includes/improvements.menu_link_advanced_settings.inc
modules/contrib/improvements/includes/improvements.node.inc
modules/contrib/improvements/includes/improvements.pathauto.inc
modules/contrib/improvements/includes/improvements.site_information.inc
modules/contrib/improvements/includes/improvements.taxonomy.inc
modules/contrib/improvements/includes/improvements.toolbar.inc
modules/contrib/improvements/includes/improvements.views.inc
modules/contrib/improvements/src/Access/EntityUuidAccessCheck.php
modules/contrib/improvements/src/Ajax/AddClassCommand.php
modules/contrib/improvements/src/Ajax/ConsoleLogCommand.php
modules/contrib/improvements/src/Ajax/FormResetCommand.php
modules/contrib/improvements/src/Ajax/HistoryReplaceStateCommand.php
modules/contrib/improvements/src/Ajax/PageReloadCommand.php
modules/contrib/improvements/src/Ajax/RemoveClassCommand.php
modules/contrib/improvements/src/Cache/CookiesHashCacheContext.php
modules/contrib/improvements/src/Cache/EntityFieldCacheContext.php
modules/contrib/improvements/src/Cache/EntityTypeCacheContext.php
modules/contrib/improvements/src/Cache/IsEntityPageCacheContext.php
modules/contrib/improvements/src/Cache/ParentTermCacheContext.php
modules/contrib/improvements/src/DefaultConfigEntityListBuilder.php
modules/contrib/improvements/src/DefaultDraggableListBuilder.php
modules/contrib/improvements/src/Element/MetaTag.php
modules/contrib/improvements/src/Element/RangeSlider.php
modules/contrib/improvements/src/Form/ImprovementsWatchdogSettings.php
modules/contrib/improvements/src/ImprovementsBreadcrumbBuilder.php
modules/contrib/improvements/src/ImprovementsDrushCommands.php
modules/contrib/improvements/src/ImprovementsEventSubscriber.php
modules/contrib/improvements/src/ImprovementsHelper.php
modules/contrib/improvements/src/ImprovementsServiceProvider.php
modules/contrib/improvements/src/ImprovementsTitleResolver.php
modules/contrib/improvements/src/ImprovementsTrustedCallbacks.php
modules/contrib/improvements/src/ImprovementsTwigExtension.php
modules/contrib/improvements/src/Plugin/Block/ContactFormBlock.php
modules/contrib/improvements/src/Plugin/Condition/RouteCondition.php
modules/contrib/improvements/src/Plugin/Condition/TermDepth.php
modules/contrib/improvements/src/Plugin/ExtraField/Display/ReadMoreLink.php
modules/contrib/improvements/src/Plugin/Field/ComputedMapFieldItemList.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/EntityReferenceViewsFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/ExtendedImageFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeOneFieldFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/LinkCustomTextFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/NumericRawFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/StringListFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/TextExtendedFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/TextRowsListFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldFormatter/TextWithoutEscapingFormatter.php
modules/contrib/improvements/src/Plugin/Field/FieldType/RequestInfoItem.php
modules/contrib/improvements/src/Plugin/Field/FieldType/ThirdPartyDataItem.php
modules/contrib/improvements/src/Plugin/Field/FieldWidget/MultipleStringTextarea.php
modules/contrib/improvements/src/Plugin/Field/FieldWidget/MultipleStringTextfield.php
modules/contrib/improvements/src/Plugin/Field/ThirdPartyDataItemList.php
modules/contrib/improvements/src/Plugin/Filter/ImageStyleFilter.php
modules/contrib/improvements/src/Plugin/Filter/NofollowExternalLinksFilter.php
modules/contrib/improvements/src/Plugin/Filter/TableWrapperFilter.php
modules/contrib/improvements/src/Plugin/Menu/LocalAction/LocalActionWithCurrentQuery.php
modules/contrib/improvements/src/Plugin/Menu/LocalTask/TermsBulkEditLocalTask.php
modules/contrib/improvements/src/Plugin/migrate/process/D7EntityMetatag.php
modules/contrib/improvements/src/Plugin/migrate/process/D7EntityPathAlias.php
modules/contrib/improvements/src/Plugin/migrate/process/D7FileFieldCopy.php
modules/contrib/improvements/src/Plugin/migrate/process/D7FileLookup.php
modules/contrib/improvements/src/Plugin/views/argument/TermWithChildrenArgument.php
modules/contrib/improvements/src/Plugin/views/display_extender/ImprovementsDisplayExtender.php
modules/contrib/improvements/src/Plugin/views/field/Map.php
modules/contrib/improvements/src/Plugin/views/filter/ExtendedDateFilter.php
modules/contrib/improvements/src/Plugin/views/filter/ExtendedNumericFilter.php
modules/contrib/improvements/src/Plugin/views/sort/ExtendedStandard.php
modules/contrib/improvements/src/Plugin/views/sort/GreaterThan.php
modules/contrib/improvements/src/Plugin/views/sort/IsCurrentUser.php
modules/contrib/improvements/src/Plugin/views/sort/IsNull.php
modules/contrib/improvements/tests/modules/improvements_test/improvements_test.module
modules/contrib/improvements/tests/modules/improvements_test/src/Controller/ImprovementsTestController.php
modules/contrib/improvements/tests/modules/improvements_test/src/Entity/SecondConfigEntity.php
modules/contrib/improvements/tests/modules/improvements_test/src/Entity/TestConfigEntity.php
modules/contrib/improvements/tests/modules/improvements_test/src/Form/ImprovementsTestForm.php
modules/contrib/improvements/tests/src/Functional/ImprovementsCommentTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsContactTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsFieldTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsFormTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsMenuTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsTaxonomyTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsThemingTest.php
modules/contrib/improvements/tests/src/Functional/ImprovementsViewsTest.php
modules/contrib/improvements/tests/src/Traits/ImprovementsCommerceTestTrait.php
modules/contrib/improvements/tests/src/Traits/ImprovementsTestTrait.php

18 files with changes
=====================

1) modules/contrib/improvements/tests/src/Functional/ImprovementsViewsTest.php:82

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/improvements/tests/src/Functional/ImprovementsThemingTest.php:46

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/improvements/tests/src/Functional/ImprovementsTest.php:125

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/improvements/tests/src/Functional/ImprovementsTaxonomyTest.php:93

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/improvements/tests/src/Functional/ImprovementsMenuTest.php:75

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/improvements/tests/src/Functional/ImprovementsFormTest.php:63

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/improvements/tests/src/Functional/ImprovementsFieldTest.php:83

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/improvements/tests/src/Functional/ImprovementsContactTest.php:69

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/improvements/tests/src/Functional/ImprovementsCommentTest.php:105

    ---------- begin diff ----------
@@ @@

   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/improvements/src/Plugin/views/sort/IsNull.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\improvements\Plugin\views\sort;

+use Drupal\views\Plugin\views\query\Sql;
 use Drupal\views\Plugin\views\sort\SortPluginBase;

 /**
@@ @@
    */
   public function query(): void {
     $this->ensureMyTable();
-    $query = $this->query; /** @var \Drupal\views\Plugin\views\query\Sql $query */
+    $query = $this->query; /** @var Sql $query */
     $sort_alias = $this->tableAlias . '_' . $this->field;

     if (!empty($this->configuration['zero_is_null'])) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/improvements/src/Plugin/views/sort/IsCurrentUser.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\improvements\Plugin\views\sort;

+use Drupal\views\Plugin\views\query\Sql;
 use Drupal\Core\Cache\Cache;
 use Drupal\views\Plugin\views\sort\SortPluginBase;

@@ @@
   public function query(): void {
     if ($current_user_id = \Drupal::currentUser()->id()) {
       $this->ensureMyTable();
-      $query = $this->query; /** @var \Drupal\views\Plugin\views\query\Sql $query */
+      $query = $this->query; /** @var Sql $query */
       $sort_alias = $this->realField . '_is_current_user';
       $query->addOrderBy(NULL, "IF ({$this->tableAlias}.{$this->realField} = $current_user_id, 1, 0)", $this->options['order'], $sort_alias);
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


12) modules/contrib/improvements/src/Plugin/views/sort/GreaterThan.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\improvements\Plugin\views\sort;

+use Drupal\views\Plugin\views\query\Sql;
 use Drupal\views\Plugin\views\sort\SortPluginBase;

 /**
@@ @@
    */
   public function query(): void {
     $this->ensureMyTable();
-    $query = $this->query; /** @var \Drupal\views\Plugin\views\query\Sql $query */
+    $query = $this->query; /** @var Sql $query */
     $alias = $this->realField . '_greater_than';
     $query->addOrderBy(NULL, "IF({$this->tableAlias}.{$this->realField} > {$this->configuration['number']}, 1, 0)", $this->options['order'], $alias);
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


13) modules/contrib/improvements/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeOneFieldFormatter.php:188

    ---------- begin diff ----------
@@ @@
       $url = $image_style->buildUrl($path);
     }
     else {
-      $url = file_create_url($path);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
     }

-    return file_url_transform_relative($url);
+    return \Drupal::service('file_url_generator')->transformRelative($url);
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/improvements/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeFormatter.php:207

    ---------- begin diff ----------
@@ @@
       $url = $image_style->buildUrl($path);
     }
     else {
-      $url = file_create_url($path);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
     }

-    return file_url_transform_relative($url);
+    return \Drupal::service('file_url_generator')->transformRelative($url);
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/improvements/src/Plugin/Field/FieldFormatter/ExtendedImageFormatter.php:132

    ---------- begin diff ----------
@@ @@
           $image_link_url = $image_link_style->buildUrl($file->getFileUri());
         }
         else {
-          $image_link_url = file_create_url($file->getFileUri());
+          $image_link_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
         }

         $image_link_url = Url::fromUri($image_link_url);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/improvements/src/ImprovementsEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\improvements;

+use Symfony\Component\HttpKernel\Event\ViewEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\EventSubscriber\MainContentViewSubscriber;
 use Drupal\Core\Routing\RouteObjectInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
@@ @@
   /**
    * KernelEvents::VIEW event callback.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent|\Symfony\Component\HttpKernel\Event\ViewEvent $event
+   * @param ViewEvent|ViewEvent $event
    * @todo Remove \Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent after Drupal 8 support end
    */
   public function onKernelView($event): void {
@@ @@
   /**
    * KernelEvents::RESPONSE event callback.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent|\Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent|ResponseEvent $event
    * @todo Remove \Symfony\Component\HttpKernel\Event\FilterResponseEvent after Drupal 8 support end
    */
   public function onKernelResponse($event): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


17) modules/contrib/improvements/includes/improvements.form.inc:26

    ---------- begin diff ----------
@@ @@
   static $improvements_assets_path;

   if (!$improvements_assets_path) {
-    $improvements_assets_path = '/' . drupal_get_path('module', 'improvements') . '/assets/';
+    $improvements_assets_path = '/' . \Drupal::service('extension.list.module')->getPath('improvements') . '/assets/';
   }

   // core
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


18) modules/contrib/improvements/improvements.module:164

    ---------- begin diff ----------
@@ @@

   // Add to js info about current and default themes.
   $page['#attached']['drupalSettings']['path']['currentThemePath'] = \Drupal::service('theme.manager')->getActiveTheme()->getPath();
-  $page['#attached']['drupalSettings']['path']['defaultThemePath'] = drupal_get_path('theme', \Drupal::config('system.theme')->get('default'));
+  $page['#attached']['drupalSettings']['path']['defaultThemePath'] = \Drupal::service('extension.list.theme')->getPath(\Drupal::config('system.theme')->get('default'));

   improvements_form_tracking_submit_page_attachments($page);
   improvements_build_time_page_attachments($page);
@@ @@
   static $improvements_assets_path;

   if (!$improvements_assets_path) {
-    $improvements_assets_path = '/' . drupal_get_path('module', 'improvements') . '/assets/';
+    $improvements_assets_path = '/' . \Drupal::service('extension.list.module')->getPath('improvements') . '/assets/';
   }

   // core
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/improvements/src/Plugin/ExtraField/Display/ReadMoreLink.
         php" file, due to:                                                     
         "Analyze error: "Class                                                 
         Drupal\extra_field_plus\Plugin\ExtraFieldPlusDisplayFormattedBase not  
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

