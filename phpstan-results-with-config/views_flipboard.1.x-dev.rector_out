modules/contrib/views_flipboard/src/Plugin/Field/FieldFormatter/RssEnclosureImageFormatter.php
modules/contrib/views_flipboard/src/Plugin/Field/FieldFormatter/RssEnclosureReferenceFormatter.php
modules/contrib/views_flipboard/src/Plugin/views/row/FlipboardRssFields.php
modules/contrib/views_flipboard/src/Plugin/views/style/FlipboardRss.php
modules/contrib/views_flipboard/views_flipboard.field.inc
modules/contrib/views_flipboard/views_flipboard.module

5 files with changes
====================

1) modules/contrib/views_flipboard/views_flipboard.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\views\Plugin\views\display\DisplayPluginBase;
 /**
  * @file
  * Provide support for Flipboard RSS format to views.
@@ @@
   // Figure out which display which has a path we're using for this feed.
   // If there isn't one, use the global $base_url.
   $link_display_id = $view->display_handler->getLinkDisplay();
-  /** @var \Drupal\views\Plugin\views\display\DisplayPluginBase $display */
+  /** @var DisplayPluginBase $display */
   if ($link_display_id && ($display = $view->displayHandlers->get($link_display_id)) && $display->isEnabled()) {
     $url = $view->getUrl(NULL, $link_display_id);
   }

-  /** @var \Drupal\Core\Url $url */
+  /** @var Url $url */
   if (!empty($url)) {
     $url_options = ['absolute' => TRUE];
     if (!empty($view->exposed_raw_input)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/views_flipboard/views_flipboard.field.inc:81

    ---------- begin diff ----------
@@ @@
   }
   else {
     $derivativeUri = $imageUri;
-    $enclosureUrl = file_create_url($imageUri);
+    $enclosureUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($imageUri);
   }

   // Prepare enclosure data.
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector


3) modules/contrib/views_flipboard/src/Plugin/views/row/FlipboardRssFields.php:160

    ---------- begin diff ----------
@@ @@
    * @param string $field_value
    *   The field value retrieved with RssFields::getField().
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The URL object built from the field value.
    */
   protected function getFieldUrl($field_value) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/views_flipboard/src/Plugin/Field/FieldFormatter/RssEnclosureReferenceFormatter.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;

@@ @@
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The link generator service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The entity storage for the image.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, LinkGeneratorInterface $link_generator, EntityStorageInterface $image_style_storage) {
@@ @@
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $entity_reference->getCacheTags());
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/views_flipboard/src/Plugin/Field/FieldFormatter/RssEnclosureImageFormatter.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;

@@ @@
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The link generator service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The entity storage for the image.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, LinkGeneratorInterface $link_generator, EntityStorageInterface $image_style_storage) {
@@ @@
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($image_uri));
+        $url = \Drupal::service('file_url_generator')->generate($image_uri);
         $cache_contexts[] = 'url.site';
       }
       $cache_tags = Cache::mergeTags($base_cache_tags, $file->getCacheTags());
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

