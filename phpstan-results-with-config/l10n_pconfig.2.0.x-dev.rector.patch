diff --git a/l10n_pconfig.info.yml b/l10n_pconfig.info.yml
index 2fe4d53..bdb142f 100644
--- a/l10n_pconfig.info.yml
+++ b/l10n_pconfig.info.yml
@@ -2,7 +2,7 @@ name: 'Plural formula configurator'
 type: module
 description: 'Configure plural formulas for site languages.'
 package: Multilingual
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 dependencies:
   - drupal:locale
   - drupal:language
diff --git a/src/Form/PluralFormulaLanguageForm.php b/src/Form/PluralFormulaLanguageForm.php
index 4d366e0..5877467 100644
--- a/src/Form/PluralFormulaLanguageForm.php
+++ b/src/Form/PluralFormulaLanguageForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\l10n_pconfig\Form;
 
+use Drupal\locale\PluralFormula;
 use Drupal\Component\Gettext\PoHeader;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -25,23 +26,23 @@ class PluralFormulaLanguageForm implements ContainerInjectionInterface {
   /**
    * The plural formula service.
    *
-   * @var \Drupal\locale\PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface
+   * @var PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface
    */
   protected $pluralFormulaService;
 
   /**
    * The Drupal.org plural formulae.
    *
-   * @var \Drupal\l10n_pconfig\DrupalOrgPluralFormulaInterface
+   * @var DrupalOrgPluralFormulaInterface
    */
   protected $drupalOrgPluralFormula;
 
   /**
    * Constructs a new PluralFormulaLanguageForm.
    *
-   * @param \Drupal\locale\PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $plural_formula
+   * @param PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $plural_formula
    *   The plural formula service.
-   * @param \Drupal\l10n_pconfig\DrupalOrgPluralFormulaInterface $drupalorg_plural_formula
+   * @param DrupalOrgPluralFormulaInterface $drupalorg_plural_formula
    *   The Drupal.org plural formulae.
    */
   public function __construct(PluralFormulaInterface $plural_formula, DrupalOrgPluralFormulaInterface $drupalorg_plural_formula) {
@@ -64,7 +65,7 @@ class PluralFormulaLanguageForm implements ContainerInjectionInterface {
    *
    * @param array $form
    *   The form definition array for the configurable language entity.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function form(array &$form, FormStateInterface $form_state) {
@@ -86,7 +87,7 @@ class PluralFormulaLanguageForm implements ContainerInjectionInterface {
     $plural_formula = '';
     if (isset($form['langcode']['#value'])) {
       $editingLangcode = $form['langcode']['#value'];
-      /** @var \Drupal\language\ConfigurableLanguageInterface $language */
+      /** @var ConfigurableLanguageInterface $language */
       $language = $form_state->getFormObject()->getEntity();
       $plural_formula = $language->getThirdPartySetting('l10n_pconfig', 'formula');
     }
@@ -119,11 +120,11 @@ class PluralFormulaLanguageForm implements ContainerInjectionInterface {
    *
    * @param string $entity_type
    *   The entity type.
-   * @param \Drupal\language\ConfigurableLanguageInterface $language
+   * @param ConfigurableLanguageInterface $language
    *   The language object.
    * @param array $form
    *   The form definition array for the configurable language entity.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @see l10n_pconfig_form_language_admin_add_form_alter()
@@ -197,7 +198,7 @@ class PluralFormulaLanguageForm implements ContainerInjectionInterface {
     $parsed = $header->parsePluralForms($plural_formula);
     [$nplurals, $newPlural] = $parsed;
 
-    /** @var \Drupal\locale\PluralFormula $pluralFormulaService */
+    /** @var PluralFormula $pluralFormulaService */
     $pluralFormulaService = \Drupal::service('locale.plural.formula');
     $pluralFormulaService->setPluralFormula($langcode, $nplurals, $newPlural);
   }
diff --git a/tests/src/Functional/PluralFormulaLanguageFormTest.php b/tests/src/Functional/PluralFormulaLanguageFormTest.php
index 02d0c72..b5f8db0 100644
--- a/tests/src/Functional/PluralFormulaLanguageFormTest.php
+++ b/tests/src/Functional/PluralFormulaLanguageFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\l10n_pconfig\Functional;
 
+use Drupal\locale\PluralFormulaInterface;
 use Drupal\language\Entity\ConfigurableLanguage;
 use Drupal\Tests\BrowserTestBase;
 
@@ -39,7 +40,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
     $edit = [
       'predefined_langcode' => 'de',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add language');
+    $this->submitForm($edit, 'Add language');
     $this->assertSession()->pageTextContains('The language German has been created and can now be used.');
 
     $this->clickLink('Edit', 1);
@@ -50,7 +51,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
     $language = ConfigurableLanguage::load('de');
     $this->assertEquals('nplurals=2; plural=(n!=1);', $language->getThirdPartySetting('l10n_pconfig', 'formula'));
 
-    /** @var \Drupal\locale\PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $pluralFormulaService */
+    /** @var PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $pluralFormulaService */
     $pluralFormulaService = \Drupal::service('locale.plural.formula');
     $this->assertEquals(2, $pluralFormulaService->getNumberOfPlurals('de'));
     $this->assertEquals([1 => 0, 'default' => 1], $pluralFormulaService->getFormula('de'));
@@ -62,7 +63,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
     $edit = [
       'predefined_langcode' => 'ku',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add language');
+    $this->submitForm($edit, 'Add language');
     $this->assertSession()->pageTextContains('Plural formula cannot be automatically determined for the language added. Please edit the language and specify the plural formula manually.');
     $this->assertSession()->linkByHrefExists('admin/config/regional/language/edit/ku');
     $this->assertSession()->pageTextContains('The language Kurdish has been created and can now be used.');
@@ -75,7 +76,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
     $language = ConfigurableLanguage::load('ku');
     $this->assertEquals('', $language->getThirdPartySetting('l10n_pconfig', 'formula'));
 
-    /** @var \Drupal\locale\PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $pluralFormulaService */
+    /** @var PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $pluralFormulaService */
     $pluralFormulaService = \Drupal::service('locale.plural.formula');
     $this->assertEquals(2, $pluralFormulaService->getNumberOfPlurals('ku'));
     $this->assertEquals(FALSE, $pluralFormulaService->getFormula('ku'));
@@ -83,7 +84,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
     $edit = [
       'plural_formula' => 'nplurals=2; plural=(n != 1);',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Save language');
+    $this->submitForm($edit, 'Save language');
 
     $this->clickLink('Edit', 1);
 
@@ -107,7 +108,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
       'label' => 'Andal没h',
       'plural_formula' => 'nplurals=2; plural=(n!=1);',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add custom language');
+    $this->submitForm($edit, 'Add custom language');
     $this->assertSession()->pageTextContains('The language Andal没h has been created and can now be used.');
 
     $this->clickLink('Edit', 1);
@@ -118,7 +119,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
     $language = ConfigurableLanguage::load('ah-ES');
     $this->assertEquals('nplurals=2; plural=(n!=1);', $language->getThirdPartySetting('l10n_pconfig', 'formula'));
 
-    /** @var \Drupal\locale\PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $pluralFormulaService */
+    /** @var PluralFormulaInterface|\Drupal\locale\PluralFormulaStringInterface $pluralFormulaService */
     $pluralFormulaService = \Drupal::service('locale.plural.formula');
     $this->assertEquals(2, $pluralFormulaService->getNumberOfPlurals('ah-ES'));
     $this->assertEquals([1 => 0, 'default' => 1], $pluralFormulaService->getFormula('ah-ES'));
@@ -133,7 +134,7 @@ class PluralFormulaLanguageFormTest extends BrowserTestBase {
       'label' => 'Andal没h',
       'plural_formula' => 'invalid-plural-formula=BB',
     ];
-    $this->drupalPostForm(NULL, $edit, 'Add custom language');
+    $this->submitForm($edit, 'Add custom language');
     $this->assertSession()->pageTextContains('Incorrect plural formula format. Please check your sources again.');
     $this->assertSession()->pageTextNotContains('The language Andal没h has been created and can now be used.');
   }
