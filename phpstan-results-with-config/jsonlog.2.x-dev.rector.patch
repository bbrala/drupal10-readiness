diff --git a/jsonlog.inc b/jsonlog.inc
index 4f1297f..c3e94dc 100644
--- a/jsonlog.inc
+++ b/jsonlog.inc
@@ -464,7 +464,7 @@ function jsonlog_default_dir() {
 /**
  * Helper function to gather data as an example in admin screen
  *
- * @param \Drupal\jsonlog\Logger\JsonLogData $entry
+ * @param JsonLogData $entry
  * @return array with table #header and #rows
  */
 function jsonlog_example_entry($entry) {
diff --git a/jsonlog.module b/jsonlog.module
index 130431e..44399ab 100644
--- a/jsonlog.module
+++ b/jsonlog.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\jsonlog\Logger\JsonLog;
 /**
  * @file
  * Contains jsonlog.module.
@@ -114,7 +115,7 @@ function jsonlog_form_system_logging_settings_submit($form, FormStateInterface $
 
   // Write a test-entry via our logger service with data from the example table
   if($values['test_entry'] === 1) {
-    /** @var \Drupal\jsonlog\Logger\JsonLog $jsonlogger */
+    /** @var JsonLog $jsonlogger */
     $jsonlogger = \Drupal::service('logger.jsonlog');
     $context = [
       'uid' => \Drupal::currentUser()->id(),
diff --git a/src/Logger/JsonLog.php b/src/Logger/JsonLog.php
index 5c6518b..e37a538 100644
--- a/src/Logger/JsonLog.php
+++ b/src/Logger/JsonLog.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\jsonlog\Logger;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LogMessageParserInterface;
 use Drupal\Core\Logger\RfcLoggerTrait;
@@ -26,19 +27,19 @@ class JsonLog implements LoggerInterface {
   /**
    * A configuration object containing jsonlog settings.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   private $config;
 
   /**
    * The message's placeholders parser.
    *
-   * @var \Drupal\Core\Logger\LogMessageParserInterface
+   * @var LogMessageParserInterface
    */
   private $parser;
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;
 
@@ -152,7 +153,7 @@ class JsonLog implements LoggerInterface {
    * @param string $message
    * @param array $context
    *
-   * @return \Drupal\jsonlog\Logger\JsonLogData | bool FALSE
+   * @return JsonLogData|bool FALSE
    */
   public function prepareLog($level, $message, array $context = []) {
     // Severity is upside down; less is more. Do not log below configured
diff --git a/src/Logger/JsonLogData.php b/src/Logger/JsonLogData.php
index 5f01c86..5fd0f48 100644
--- a/src/Logger/JsonLogData.php
+++ b/src/Logger/JsonLogData.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\jsonlog\Logger;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Logger\RfcLogLevel;
@@ -154,7 +155,7 @@ class JsonLogData {
   }
 
   /**
-   * @param \Drupal\Core\Session\AccountProxyInterface|NULL $account
+   * @param AccountProxyInterface|NULL $account
    *
    * @deprecated in 8.x-1.4 and removed from 2.0. Users of this class should
    *   use JsonLogData::setUid() instead.
diff --git a/tests/src/Functional/JsonLogConfigFormTest.php b/tests/src/Functional/JsonLogConfigFormTest.php
index 48687a1..9ffb87e 100644
--- a/tests/src/Functional/JsonLogConfigFormTest.php
+++ b/tests/src/Functional/JsonLogConfigFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\jsonlog\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -29,14 +30,14 @@ class JsonLogConfigFormTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
   }
@@ -49,9 +50,9 @@ class JsonLogConfigFormTest extends BrowserTestBase {
     $this->drupalGet(Url::fromRoute('system.logging_settings'));
     $this->assertSession()->statusCodeEquals(200);
     $this->assertSession()->pageTextContains(t('JSON LOG'));
+    $this->drupalGet('admin/config/development/logging');
 
-    $this->drupalPostForm('admin/config/development/logging',
-      [self::JSONLOG_SITEID_FIELD_NAME => self::JSONLOG_SITEID_FIELD_VALUE], t('Save configuration'));
+    $this->submitForm([self::JSONLOG_SITEID_FIELD_NAME => self::JSONLOG_SITEID_FIELD_VALUE], t('Save configuration'));
 
     $this->assertSession()
       ->pageTextContains(t('The configuration options have been saved.'));
diff --git a/tests/src/Unit/JsonLogDataTest.php b/tests/src/Unit/JsonLogDataTest.php
index 7e64422..22a5f04 100644
--- a/tests/src/Unit/JsonLogDataTest.php
+++ b/tests/src/Unit/JsonLogDataTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\jsonlog\Unit;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\jsonlog\Logger\JsonLogData;
 use Drupal\Tests\UnitTestCase;
@@ -29,7 +30,7 @@ class JsonLogDataTest extends UnitTestCase {
    */
   private $data;
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $config_stub['jsonlog.settings'] = [
       'jsonlog_severity_threshold' => self::DEFAULT_THRESHOLD,
@@ -164,7 +165,7 @@ class JsonLogDataTest extends UnitTestCase {
 
     $this->data = new JsonLogData('test_site_id', 'test_canonical');
 
-    /** @var \Drupal\Core\Session\AccountProxyInterface $accountMock */
+    /** @var AccountProxyInterface $accountMock */
     $this->data->setAccount($accountMock);
     $this->assertEquals('dummy', $this->data->getUsername(), 'Username set.');
     $this->assertEquals(1234, $this->data->getUid(), 'UID set.');
diff --git a/tests/src/Unit/JsonLogTest.php b/tests/src/Unit/JsonLogTest.php
index 71f6cb3..641ab28 100644
--- a/tests/src/Unit/JsonLogTest.php
+++ b/tests/src/Unit/JsonLogTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\jsonlog\Unit;
 
+use PHPUnit\Framework\MockObject\MockObject;
+use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LogMessageParserInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -35,11 +37,11 @@ class JsonLogTest extends UnitTestCase {
   private $requestStackMock;
 
   /**
-   * @var \Drupal\jsonlog\Logger\JsonLog
+   * @var JsonLog
    */
   private $jsonLogger;
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $config_stub['jsonlog.settings'] = [
       'jsonlog_severity_threshold' => self::DEFAULT_THRESHOLD,
@@ -120,7 +122,7 @@ class JsonLogTest extends UnitTestCase {
   }
 
   /**
-   * @return \PHPUnit\Framework\MockObject\MockObject
+   * @return MockObject
    */
   private function getEmptyMessageParserMock() {
     $messageParserMock = $this->createMock('Drupal\Core\Logger\LogMessageParserInterface');
@@ -134,7 +136,7 @@ class JsonLogTest extends UnitTestCase {
   }
 
   /**
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    */
   private function setupContainerCurrentRequest(Request $request) {
     $this->requestStackMock->expects($this->any())
@@ -147,7 +149,7 @@ class JsonLogTest extends UnitTestCase {
       ->with('request_stack')
       ->willReturn($this->requestStackMock);
 
-    /** @var \Symfony\Component\DependencyInjection\ContainerInterface $containerMock */
+    /** @var ContainerInterface $containerMock */
     \Drupal::setContainer($containerMock);
   }
 
