modules/contrib/layout_builder_block_language/layout_builder_block_language.install
modules/contrib/layout_builder_block_language/layout_builder_block_language.module
modules/contrib/layout_builder_block_language/src/EventSubscriber/LayoutBuilderComponentLanguageRenderArray.php
modules/contrib/layout_builder_block_language/src/Form/ManageComponentLanguageForm.php

3 files with changes
====================

1) modules/contrib/layout_builder_block_language/src/Form/ManageComponentLanguageForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\layout_builder_block_language\Form;

+use Drupal\Core\Condition\ConditionInterface;
 use Drupal\Core\Ajax\AjaxFormHelperTrait;
 use Drupal\Core\Condition\ConditionManager;
 use Drupal\Core\Form\FormBase;
@@ @@
   /**
    * The section storage.
    *
-   * @var \Drupal\layout_builder\SectionStorageInterface
+   * @var SectionStorageInterface
    */
   protected $sectionStorage;

@@ @@
   /**
    * The Layout Tempstore.
    *
-   * @var \Drupal\layout_builder\LayoutTempstoreRepositoryInterface
+   * @var LayoutTempstoreRepositoryInterface
    */
   protected $layoutTempstore;

@@ @@
   /**
    * The condition manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $conditionManager;

@@ @@
   /**
    * The condition plugin being configured.
    *
-   * @var \Drupal\Core\Condition\ConditionInterface
+   * @var ConditionInterface
    */
   protected $condition;

@@ @@
   /**
    * Constructs a new ManageComponentPermissionForm.
    *
-   * @param \Drupal\layout_builder\LayoutTempstoreRepositoryInterface $layout_tempstore_repository
+   * @param LayoutTempstoreRepositoryInterface $layout_tempstore_repository
    *   The layout tempstore.
-   * @param \Drupal\Core\Condition\ConditionManager $condition_manager
+   * @param ConditionManager $condition_manager
    *   The condition plugin manager.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(LayoutTempstoreRepositoryInterface $layout_tempstore_repository, ConditionManager $condition_manager, LanguageManagerInterface $language_manager) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\layout_builder\SectionStorageInterface $section_storage
+   * @param SectionStorageInterface $section_storage
    *   The section storage being configured.
    * @param int $delta
    *   The original delta of the section.
@@ @@
    * @param array $value
    *   The condition configuration.
    *
-   * @return \Drupal\Core\Condition\ConditionInterface
+   * @return ConditionInterface
    *   The condition plugin.
    */
   protected function prepareCondition($condition_id, $uuid, array $value) {
@@ @@
       return $this->conditionManager->createInstance($value['id'], $value);
     }

-    /** @var \Drupal\Core\Condition\ConditionInterface $condition */
+    /** @var ConditionInterface $condition */
     $condition = $this->conditionManager->createInstance($condition_id);
     $configuration = $condition->getConfiguration();
     $configuration['uuid'] = $uuid;
@@ @@
   /**
    * Gets the selected delta.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return int
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/layout_builder_block_language/src/EventSubscriber/LayoutBuilderComponentLanguageRenderArray.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;

@@ @@
   /**
    * The condition plugin manager.
    *
-   * @var \Drupal\Core\Executable\ExecutableManagerInterface
+   * @var ExecutableManagerInterface
    */
   protected $conditionManager;

@@ @@
   /**
    * Creates a SectionComponentVisibility object.
    *
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The context handler.
-   * @param \Drupal\Core\Executable\ExecutableManagerInterface $condition_manager
+   * @param ExecutableManagerInterface $condition_manager
    *   The condition plugin manager.
    */
   public function __construct(ContextHandlerInterface $context_handler, ExecutableManagerInterface $condition_manager) {
@@ @@
   /**
    * Adds block classes to section component.
    *
-   * @param \Drupal\layout_builder\Event\SectionComponentBuildRenderArrayEvent $event
+   * @param SectionComponentBuildRenderArrayEvent $event
    *   The section component render event.
    */
   public function onBuildRender(SectionComponentBuildRenderArrayEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/layout_builder_block_language/layout_builder_block_language.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\layout_builder\Field\LayoutSectionItemList;
 /**
  * @file
  * Provides install, uninstall, and update functions.
@@ @@
 /**
  * Processes both revisions and entities.
  *
- * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
+ * @param FieldableEntityInterface $entity
  *   The entity containing each layout override.
  */
 function _layout_builder_block_language_uninstall_process_entity_or_revision(FieldableEntityInterface $entity) {
   // Loop through each section and component.
   if ($entity->hasField(OverridesSectionStorage::FIELD_NAME)) {
-    /** @var \Drupal\layout_builder\Field\LayoutSectionItemList $layout_field */
+    /** @var LayoutSectionItemList $layout_field */
     $layout_field = $entity->get(OverridesSectionStorage::FIELD_NAME);
     if (!empty($layout_field)) {
       $sections = $layout_field->getSections();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

