diff --git a/devel_generate/devel_generate.module b/devel_generate/devel_generate.module
index f280425..4444679 100644
--- a/devel_generate/devel_generate.module
+++ b/devel_generate/devel_generate.module
@@ -71,7 +71,7 @@ function devel_generate_entity_insert(EntityInterface $entity) {
   if ($entity->getEntityTypeId() != 'node' || !isset($entity->devel_generate)) {
     return;
   }
-  /** @var \Drupal\node\NodeInterface $entity */
+  /** @var NodeInterface $entity */
   $results = $entity->devel_generate;
 
   if (!empty($results['max_comments'])) {
@@ -92,9 +92,9 @@ function devel_generate_entity_insert(EntityInterface $entity) {
 /**
  * Create comments and add them to a node.
  *
- * @param \Drupal\node\NodeInterface $node
+ * @param NodeInterface $node
  *   Node to add comments to.
- * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+ * @param FieldDefinitionInterface $field_definition
  *   The field storage definition.
  * @param array $users
  *   Array of users to assign comment authors.
@@ -159,7 +159,7 @@ function devel_generate_add_comments(NodeInterface $node, FieldDefinitionInterfa
 /**
  * Generate statistics information for a node.
  *
- * @param \Drupal\node\NodeInterface $node
+ * @param NodeInterface $node
  *   A node object.
  */
 function devel_generate_add_statistics(NodeInterface $node) {
diff --git a/devel_generate/src/Annotation/DevelGenerate.php b/devel_generate/src/Annotation/DevelGenerate.php
index ddc5ff2..e30107f 100644
--- a/devel_generate/src/Annotation/DevelGenerate.php
+++ b/devel_generate/src/Annotation/DevelGenerate.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel_generate\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class DevelGenerate extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
@@ -32,7 +33,7 @@ class DevelGenerate extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $description;
 
diff --git a/devel_generate/src/Commands/DevelGenerateCommands.php b/devel_generate/src/Commands/DevelGenerateCommands.php
index 4cc9c1d..c586576 100644
--- a/devel_generate/src/Commands/DevelGenerateCommands.php
+++ b/devel_generate/src/Commands/DevelGenerateCommands.php
@@ -25,7 +25,7 @@ class DevelGenerateCommands extends DrushCommands {
   /**
    * The DevelGenerate plugin manager.
    *
-   * @var \Drupal\devel_generate\DevelGeneratePluginManager
+   * @var DevelGeneratePluginManager
    */
   protected $manager;
 
@@ -46,7 +46,7 @@ class DevelGenerateCommands extends DrushCommands {
   /**
    * DevelGenerateCommands constructor.
    *
-   * @param \Drupal\devel_generate\DevelGeneratePluginManager $manager
+   * @param DevelGeneratePluginManager $manager
    *   The DevelGenerate plugin manager.
    */
   public function __construct(DevelGeneratePluginManager $manager) {
@@ -57,7 +57,7 @@ class DevelGenerateCommands extends DrushCommands {
   /**
    * Get the DevelGenerate plugin manager.
    *
-   * @return \Drupal\devel_generate\DevelGeneratePluginManager
+   * @return DevelGeneratePluginManager
    *   The DevelGenerate plugin manager.
    */
   public function getManager() {
@@ -67,7 +67,7 @@ class DevelGenerateCommands extends DrushCommands {
   /**
    * Set the DevelGenerate plugin manager.
    *
-   * @param \Drupal\devel_generate\DevelGeneratePluginManager $manager
+   * @param DevelGeneratePluginManager $manager
    *   The DevelGenerate plugin manager.
    */
   public function setManager(DevelGeneratePluginManager $manager) {
@@ -259,7 +259,7 @@ class DevelGenerateCommands extends DrushCommands {
    *
    * @hook validate
    *
-   * @param \Consolidation\AnnotatedCommand\CommandData $commandData
+   * @param CommandData $commandData
    *   The data sent from the drush command.
    */
   public function validate(CommandData $commandData) {
diff --git a/devel_generate/src/DevelGenerateBase.php b/devel_generate/src/DevelGenerateBase.php
index aee4330..6c227d3 100644
--- a/devel_generate/src/DevelGenerateBase.php
+++ b/devel_generate/src/DevelGenerateBase.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\devel_generate;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\field\FieldConfigInterface;
 use Drupal\Component\Utility\Random;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
@@ -25,14 +29,14 @@ abstract class DevelGenerateBase extends PluginBase implements DevelGenerateBase
   /**
    * The random data generator.
    *
-   * @var \Drupal\Component\Utility\Random
+   * @var Random
    */
   protected $random;
 
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -97,11 +101,11 @@ abstract class DevelGenerateBase extends PluginBase implements DevelGenerateBase
   /**
    * Populate the fields on a given entity with sample values.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be enriched with sample field values.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function populateFields(EntityInterface $entity) {
     $properties = [
@@ -109,7 +113,7 @@ abstract class DevelGenerateBase extends PluginBase implements DevelGenerateBase
       'bundle' => $entity->bundle(),
     ];
     $field_config_storage = \Drupal::entityTypeManager()->getStorage('field_config');
-    /** @var \Drupal\field\FieldConfigInterface[] $instances */
+    /** @var FieldConfigInterface[] $instances */
     $instances = $field_config_storage->loadByProperties($properties);
 
     // @todo not implemented for Drush9+. Possibly remove.
@@ -179,7 +183,7 @@ abstract class DevelGenerateBase extends PluginBase implements DevelGenerateBase
   /**
    * Gets the entity type manager service.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity type manager service.
    */
   protected function getEntityTypeManager() {
@@ -192,7 +196,7 @@ abstract class DevelGenerateBase extends PluginBase implements DevelGenerateBase
   /**
    * Returns the random data generator.
    *
-   * @return \Drupal\Component\Utility\Random
+   * @return Random
    *   The random data generator.
    */
   protected function getRandom() {
diff --git a/devel_generate/src/DevelGenerateBaseInterface.php b/devel_generate/src/DevelGenerateBaseInterface.php
index 2cd54e7..ba9d9f9 100644
--- a/devel_generate/src/DevelGenerateBaseInterface.php
+++ b/devel_generate/src/DevelGenerateBaseInterface.php
@@ -54,7 +54,7 @@ interface DevelGenerateBaseInterface extends PluginInspectionInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function settingsFormValidate(array $form, FormStateInterface $form_state);
diff --git a/devel_generate/src/DevelGeneratePermissions.php b/devel_generate/src/DevelGeneratePermissions.php
index 7b0cabc..5b594ed 100644
--- a/devel_generate/src/DevelGeneratePermissions.php
+++ b/devel_generate/src/DevelGeneratePermissions.php
@@ -16,14 +16,14 @@ class DevelGeneratePermissions implements ContainerInjectionInterface {
   /**
    * The plugin manager.
    *
-   * @var \Drupal\devel_generate\DevelGeneratePluginManager
+   * @var DevelGeneratePluginManager
    */
   protected $develGeneratePluginManager;
 
   /**
    * Constructs a new DevelGeneratePermissions instance.
    *
-   * @param \Drupal\devel_generate\DevelGeneratePluginManager $develGeneratePluginManager
+   * @param DevelGeneratePluginManager $develGeneratePluginManager
    *   The plugin manager.
    */
   public function __construct(DevelGeneratePluginManager $develGeneratePluginManager) {
diff --git a/devel_generate/src/DevelGeneratePluginManager.php b/devel_generate/src/DevelGeneratePluginManager.php
index a068f09..21bdf7c 100644
--- a/devel_generate/src/DevelGeneratePluginManager.php
+++ b/devel_generate/src/DevelGeneratePluginManager.php
@@ -17,9 +17,9 @@ class DevelGeneratePluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/devel_generate/src/Form/DevelGenerateForm.php b/devel_generate/src/Form/DevelGenerateForm.php
index 0a16fff..c4622d3 100644
--- a/devel_generate/src/Form/DevelGenerateForm.php
+++ b/devel_generate/src/Form/DevelGenerateForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel_generate\Form;
 
+use Drupal\devel_generate\DevelGenerateBaseInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,14 +16,14 @@ class DevelGenerateForm extends FormBase {
   /**
    * The manager to be used for instantiating plugins.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $develGenerateManager;
 
   /**
    * Constructs a new DevelGenerateForm object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $devel_generate_manager
+   * @param PluginManagerInterface $devel_generate_manager
    *   The manager to be used for instantiating plugins.
    */
   public function __construct(PluginManagerInterface $devel_generate_manager) {
@@ -61,7 +62,7 @@ class DevelGenerateForm extends FormBase {
    * @param string $plugin_id
    *   The plugin_id for the plugin instance.
    *
-   * @return \Drupal\devel_generate\DevelGenerateBaseInterface
+   * @return DevelGenerateBaseInterface
    *   A DevelGenerate plugin instance.
    */
   public function getPluginInstance($plugin_id) {
diff --git a/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php
index 01a160f..0a60409 100644
--- a/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/ContentDevelGenerate.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\devel_generate\Plugin\DevelGenerate;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\comment\CommentManagerInterface;
 use Drupal\Component\Datetime\Time;
 use Drupal\Component\Render\FormattableMarkup;
@@ -46,70 +48,70 @@ class ContentDevelGenerate extends DevelGenerateBase implements ContainerFactory
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * The node type storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeTypeStorage;
 
   /**
    * The user storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The comment manager service.
    *
-   * @var \Drupal\comment\CommentManagerInterface
+   * @var CommentManagerInterface
    */
   protected $commentManager;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The content translation manager.
    *
-   * @var \Drupal\content_translation\ContentTranslationManagerInterface
+   * @var ContentTranslationManagerInterface
    */
   protected $contentTranslationManager;
 
   /**
    * The url generator service.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
   /**
    * The alias storage.
    *
-   * @var \Drupal\path_alias\PathAliasStorage
+   * @var PathAliasStorage
    */
   protected $aliasStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -130,7 +132,7 @@ class ContentDevelGenerate extends DevelGenerateBase implements ContainerFactory
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -143,29 +145,29 @@ class ContentDevelGenerate extends DevelGenerateBase implements ContainerFactory
    *   The plugin ID for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The node storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_type_storage
+   * @param EntityStorageInterface $node_type_storage
    *   The node type storage.
-   * @param \Drupal\user\UserStorageInterface $user_storage
+   * @param UserStorageInterface $user_storage
    *   The user storage.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\comment\CommentManagerInterface $comment_manager
+   * @param CommentManagerInterface $comment_manager
    *   The comment manager service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager
+   * @param ContentTranslationManagerInterface $content_translation_manager
    *   The content translation manager service.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator service.
-   * @param \Drupal\path_alias\PathAliasStorage $alias_storage
+   * @param PathAliasStorage $alias_storage
    *   The alias storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    * @param \Drupal\Core\Datetime\Time $time
    *   Provides system time.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityStorageInterface $node_storage, EntityStorageInterface $node_type_storage, UserStorageInterface $user_storage, ModuleHandlerInterface $module_handler, CommentManagerInterface $comment_manager = NULL, LanguageManagerInterface $language_manager, ContentTranslationManagerInterface $content_translation_manager = NULL, UrlGeneratorInterface $url_generator, PathAliasStorage $alias_storage, DateFormatterInterface $date_formatter, Time $time, Connection $database) {
@@ -345,7 +347,7 @@ class ContentDevelGenerate extends DevelGenerateBase implements ContainerFactory
     ];
 
     $author_rows = [];
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     foreach ($this->userStorage->loadMultiple() as $user) {
       $author_rows[$user->id()] = [
         'id' => ['#markup' => $user->id()],
@@ -464,7 +466,7 @@ class ContentDevelGenerate extends DevelGenerateBase implements ContainerFactory
       'title' => $this->t('Generating Content'),
       'operations' => $operations,
       'finished' => 'devel_generate_batch_finished',
-      'file' => drupal_get_path('module', 'devel_generate') . '/devel_generate.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('devel_generate') . '/devel_generate.batch.inc',
     ];
 
     batch_set($batch);
@@ -680,10 +682,10 @@ class ContentDevelGenerate extends DevelGenerateBase implements ContainerFactory
    *
    * @param array $results
    *   Results array.
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   Node to add translations to.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function develGenerateContentAddNodeTranslation(array &$results, NodeInterface $node) {
     if (is_null($this->contentTranslationManager)) {
diff --git a/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php
index 983d472..e5484d4 100644
--- a/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/MediaDevelGenerate.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\devel_generate\Plugin\DevelGenerate;
 
+use Drupal\Core\Entity\ContentEntityStorageInterface;
+use Drupal\Core\Config\Entity\ConfigEntityStorageInterface;
+use Drupal\user\UserStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -39,49 +45,49 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
   /**
    * The media entity storage.
    *
-   * @var \Drupal\Core\Entity\ContentEntityStorageInterface
+   * @var ContentEntityStorageInterface
    */
   protected $mediaStorage;
 
   /**
    * The media type entity storage.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface
+   * @var ConfigEntityStorageInterface
    */
   protected $mediaTypeStorage;
 
   /**
    * The user entity storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
   /**
    * The language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The url generator service.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The system time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -101,20 +107,20 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
    *   The plugin ID for the plugin instance.
    * @param array $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if the storage handler couldn't be loaded.
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Thrown if the entity type doesn't exist.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entity_type_manager, LanguageManagerInterface $language_manager, UrlGeneratorInterface $url_generator, DateFormatterInterface $date_formatter, TimeInterface $time) {
@@ -257,11 +263,11 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
    * @param array $values
    *   Array of values submitted through a form.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if the storage handler couldn't be loaded.
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Thrown if the entity type doesn't exist.
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the bundle does not exist or was needed but not specified.
    */
   protected function generateMedia(array $values) {
@@ -324,7 +330,7 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
       'title' => $this->t('Generating media items'),
       'operations' => $operations,
       'finished' => 'devel_generate_batch_finished',
-      'file' => drupal_get_path('module', 'devel_generate') . '/devel_generate.batch.inc',
+      'file' => \Drupal::service('extension.list.module')->getPath('devel_generate') . '/devel_generate.batch.inc',
     ];
     batch_set($batch);
 
@@ -357,11 +363,11 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
    * @param iterable $context
    *   Batch job context.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if the storage handler couldn't be loaded.
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Thrown if the entity type doesn't exist.
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the bundle does not exist or was needed but not specified.
    *
    * @see self::createMediaItem()
@@ -439,7 +445,7 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
    * @param array $values
    *   The input values from the settings form.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the media type does not exist.
    */
   protected function mediaKill(array $values) {
@@ -478,11 +484,11 @@ class MediaDevelGenerate extends DevelGenerateBase implements ContainerFactoryPl
    * @param array $results
    *   The input values from the settings form.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Thrown if the storage handler couldn't be loaded.
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Thrown if the entity type doesn't exist.
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Thrown if the bundle does not exist or was needed but not specified.
    */
   protected function createMediaItem(array &$results) {
diff --git a/devel_generate/src/Plugin/DevelGenerate/MenuDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/MenuDevelGenerate.php
index af98820..579adef 100644
--- a/devel_generate/src/Plugin/DevelGenerate/MenuDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/MenuDevelGenerate.php
@@ -36,35 +36,35 @@ class MenuDevelGenerate extends DevelGenerateBase implements ContainerFactoryPlu
   /**
    * The menu tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;
 
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;
 
   /**
    * The menu link storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuLinkContentStorage;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -77,15 +77,15 @@ class MenuDevelGenerate extends DevelGenerateBase implements ContainerFactoryPlu
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_tree
+   * @param MenuLinkTreeInterface $menu_tree
    *   The menu tree service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $menu_storage
+   * @param EntityStorageInterface $menu_storage
    *   The menu storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $menu_link_storage
+   * @param EntityStorageInterface $menu_link_storage
    *   The menu storage.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MenuLinkTreeInterface $menu_tree, EntityStorageInterface $menu_storage, EntityStorageInterface $menu_link_storage, ModuleHandlerInterface $module_handler, Connection $database) {
diff --git a/devel_generate/src/Plugin/DevelGenerate/TermDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/TermDevelGenerate.php
index a189c17..f249799 100644
--- a/devel_generate/src/Plugin/DevelGenerate/TermDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/TermDevelGenerate.php
@@ -38,42 +38,42 @@ class TermDevelGenerate extends DevelGenerateBase implements ContainerFactoryPlu
   /**
    * The vocabulary storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vocabularyStorage;
 
   /**
    * The term storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $termStorage;
 
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The content translation manager.
    *
-   * @var \Drupal\content_translation\ContentTranslationManagerInterface
+   * @var ContentTranslationManagerInterface
    */
   protected $contentTranslationManager;
 
@@ -86,17 +86,17 @@ class TermDevelGenerate extends DevelGenerateBase implements ContainerFactoryPlu
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $vocabulary_storage
+   * @param EntityStorageInterface $vocabulary_storage
    *   The vocabulary storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $term_storage
+   * @param EntityStorageInterface $term_storage
    *   The term storage.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\content_translation\ContentTranslationManagerInterface $content_translation_manager
+   * @param ContentTranslationManagerInterface $content_translation_manager
    *   The content translation manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $vocabulary_storage, EntityStorageInterface $term_storage, Connection $database, ModuleHandlerInterface $module_handler, LanguageManagerInterface $language_manager, ContentTranslationManagerInterface $content_translation_manager = NULL) {
@@ -393,7 +393,7 @@ class TermDevelGenerate extends DevelGenerateBase implements ContainerFactoryPlu
    *
    * @param array $translate_language
    *   Potential translate languages array.
-   * @param \Drupal\taxonomy\TermInterface $term
+   * @param TermInterface $term
    *   Term to add translations to.
    *
    * @return int
diff --git a/devel_generate/src/Plugin/DevelGenerate/UserDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/UserDevelGenerate.php
index 69d0b15..85b30ae 100644
--- a/devel_generate/src/Plugin/DevelGenerate/UserDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/UserDevelGenerate.php
@@ -33,14 +33,14 @@ class UserDevelGenerate extends DevelGenerateBase implements ContainerFactoryPlu
   /**
    * The user storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $userStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -60,9 +60,9 @@ class UserDevelGenerate extends DevelGenerateBase implements ContainerFactoryPlu
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The user storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    * @param \Drupal\Core\Datetime\TimeInterface $time
    *   Provides system time.
diff --git a/devel_generate/src/Plugin/DevelGenerate/VocabularyDevelGenerate.php b/devel_generate/src/Plugin/DevelGenerate/VocabularyDevelGenerate.php
index a8c1a59..0fd79a7 100644
--- a/devel_generate/src/Plugin/DevelGenerate/VocabularyDevelGenerate.php
+++ b/devel_generate/src/Plugin/DevelGenerate/VocabularyDevelGenerate.php
@@ -30,7 +30,7 @@ class VocabularyDevelGenerate extends DevelGenerateBase implements ContainerFact
   /**
    * The vocabulary storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vocabularyStorage;
 
@@ -43,7 +43,7 @@ class VocabularyDevelGenerate extends DevelGenerateBase implements ContainerFact
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The vocabulary storage.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $entity_storage) {
diff --git a/devel_generate/src/Routing/DevelGenerateRoutes.php b/devel_generate/src/Routing/DevelGenerateRoutes.php
index eb302b0..ed09419 100644
--- a/devel_generate/src/Routing/DevelGenerateRoutes.php
+++ b/devel_generate/src/Routing/DevelGenerateRoutes.php
@@ -15,7 +15,7 @@ class DevelGenerateRoutes implements ContainerInjectionInterface {
   /**
    * Constructs a new devel_generate route subscriber.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $devel_generate_manager
+   * @param PluginManagerInterface $devel_generate_manager
    *   The DevelGeneratePluginManager.
    */
   public function __construct(PluginManagerInterface $devel_generate_manager) {
diff --git a/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php b/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php
index f54e02c..35ec8be 100644
--- a/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php
+++ b/devel_generate/tests/src/Functional/DevelGenerateBrowserTest.php
@@ -22,9 +22,16 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
     $edit = [
       'num' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/user', $edit, 'Generate');
-    $this->assertText('4 users created.');
-    $this->assertText('Generate process complete.');
+    $this->drupalGet('admin/config/development/generate/user');
+    $this->submitForm($edit, 'Generate');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('4 users created.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Generate process complete.');
 
   }
 
@@ -37,8 +44,12 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num' => 4,
       'title_length' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
-    $this->assertText('Please select at least one content type');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Please select at least one content type');
 
     // Create a node in order to test the Delete content checkbox.
     $this->drupalCreateNode(['type' => 'article']);
@@ -53,7 +64,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'title_length' => 4,
       'add_alias' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 1 node');
     $this->assertSession()->pageTextContains('Created 4 nodes');
     $this->assertSession()->pageTextContains('Generate process complete.');
@@ -61,7 +73,7 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
 
     // Tests that nodes have been created in the generation process.
     $nodes = Node::loadMultiple();
-    $this->assert(count($nodes) == 4, 'Nodes generated successfully.');
+    $this->assertTrue(count($nodes) == 4, 'Nodes generated successfully.');
 
     // Tests url alias for the generated nodes.
     foreach ($nodes as $node) {
@@ -80,7 +92,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'translate_language[]' => ['de', 'ca'],
       'add_alias' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 4 nodes');
     $this->assertSession()->pageTextContains('Created 3 nodes');
     // Two translations for each node makes six.
@@ -113,7 +126,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'add_language[]' => ['en'],
       'translate_language[]' => ['fr'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextNotContains('Deleted');
     $this->assertSession()->pageTextContains('Created 2 nodes');
     $this->assertSession()->pageTextNotContains('node translations');
@@ -131,7 +145,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'node_types[article]' => TRUE,
       'add_type_label' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 5 nodes');
     $this->assertSession()->pageTextContains('Generate process complete');
 
@@ -155,7 +170,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'authors[3]' => TRUE,
       'authors[4]' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
 
     // Display the full content list for information and debug only.
     $this->drupalGet('admin/content');
@@ -188,7 +204,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num' => 5,
       'title_length' => 12,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 5 new terms');
     $this->assertSession()->pageTextContains('In vocabulary ' . $this->vocabulary->label());
     $this->assertSession()->pageTextNotContains('translations');
@@ -202,7 +219,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'add_language[]' => ['en'],
       'translate_language[]' => ['ca'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextNotContains('Deleted');
     $this->assertSession()->pageTextContains('Created 3 new terms');
     $this->assertSession()->pageTextContains('Created 3 term translations');
@@ -220,7 +238,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'vids[]' => $this->vocabulary2->id(),
       'num' => 4,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 4 new terms');
     $this->assertSession()->pageTextNotContains('In vocabulary ' . $this->vocabulary->label());
     $this->assertSession()->pageTextContains('In vocabulary ' . $this->vocabulary2->label());
@@ -236,7 +255,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num' => 6,
       'kill' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 4 existing terms');
     $this->assertSession()->pageTextContains('Created 6 new terms');
     // Check the term count in vocabulary 1 has not changed.
@@ -253,7 +273,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'minimum_depth' => 2,
       'maximum_depth' => 6,
     ];
-    $this->drupalPostForm('admin/config/development/generate/term', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/term');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created 9 new terms');
     // Check the total term count is 8 + 6 + 9 = 23.
     $terms1 = \Drupal::entityQuery('taxonomy_term')->condition('vid', $this->vocabulary->id())->execute();
@@ -271,7 +292,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'title_length' => 12,
       'kill' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/vocabs', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/vocabs');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created the following new vocabularies: ');
     $this->assertSession()->pageTextContains('Generate process complete.');
   }
@@ -290,7 +312,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'num_menus' => 5,
       'num_links' => 7,
     ];
-    $this->drupalPostForm('admin/config/development/generate/menu', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/menu');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Created the following 5 new menus: ');
     $this->assertSession()->pageTextContains('Created 7 new menu links');
     $this->assertSession()->pageTextContains('Generate process complete.');
@@ -303,7 +326,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'title_length' => 3,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/menu', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/menu');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Deleted 5 menu(s) and 0 other link(s).');
     $this->assertSession()->pageTextContains('Created the following 160 new menus: ');
     $this->assertSession()->pageTextContains('Created 380 new menu links');
@@ -336,7 +360,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       "media_types[{$media_type2->id()}]" => 1,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/media', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/media');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished creating 5 media items.');
     $this->assertSession()->pageTextContains('Generate process complete.');
     $this->assertCount(5, \Drupal::entityQuery('media')->execute());
@@ -349,7 +374,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       "media_types[{$media_type2->id()}]" => 1,
       'kill' => 1,
     ];
-    $this->drupalPostForm('admin/config/development/generate/media', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/media');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished 56 elements created successfully.');
     $this->assertSession()->pageTextContains('Generate process complete.');
     $this->assertCount(56, \Drupal::entityQuery('media')->execute());
@@ -366,7 +392,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'node_types[article]' => TRUE,
       'node_types[page]' => TRUE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertSession()->pageTextContains('Finished 55 elements created successfully.');
     $this->assertSession()->pageTextContains('Generate process complete.');
 
@@ -383,7 +410,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'add_language[]' => ['en'],
       'translate_language[]' => ['de', 'ca'],
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
     $this->assertCount(52, \Drupal::entityQuery('node')->execute());
     // Only aticles will have translations so get that number.
     $articles = \Drupal::entityQuery('node')->condition('type', 'article')->execute();
@@ -396,7 +424,8 @@ class DevelGenerateBrowserTest extends DevelGenerateBrowserTestBase {
       'node_types[article]' => TRUE,
       'node_types[page]' => FALSE,
     ];
-    $this->drupalPostForm('admin/config/development/generate/content', $edit, 'Generate');
+    $this->drupalGet('admin/config/development/generate/content');
+    $this->submitForm($edit, 'Generate');
 
     // Tests that all the created nodes were of the node type selected.
     $nodeStorage = $this->container->get('entity_type.manager')->getStorage('node');
diff --git a/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php b/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php
index 6efcbf9..21cd578 100644
--- a/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php
+++ b/devel_generate/tests/src/Functional/DevelGenerateBrowserTestBase.php
@@ -44,7 +44,7 @@ abstract class DevelGenerateBrowserTestBase extends BrowserTestBase {
   /**
    * Prepares the testing environment.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpData();
   }
diff --git a/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php b/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php
index c68853d..19df387 100644
--- a/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php
+++ b/devel_generate/tests/src/Functional/DevelGenerateCommandsTest.php
@@ -53,7 +53,7 @@ class DevelGenerateCommandsTest extends BrowserTestBase {
   /**
    * Prepares the testing environment.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->setUpData();
   }
diff --git a/devel_generate/tests/src/Traits/DevelGenerateSetupTrait.php b/devel_generate/tests/src/Traits/DevelGenerateSetupTrait.php
index d388011..f8a144a 100644
--- a/devel_generate/tests/src/Traits/DevelGenerateSetupTrait.php
+++ b/devel_generate/tests/src/Traits/DevelGenerateSetupTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel_generate\Traits;
 
+use Drupal\taxonomy\VocabularyInterface;
 use Drupal\comment\Tests\CommentTestTrait;
 use Drupal\Tests\field\Traits\EntityReferenceTestTrait;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
@@ -22,14 +23,14 @@ trait DevelGenerateSetupTrait {
   /**
    * Vocabulary for testing generation of terms.
    *
-   * @var \Drupal\taxonomy\VocabularyInterface
+   * @var VocabularyInterface
    */
   protected $vocabulary;
 
   /**
    * Second vocabulary for testing generation of terms.
    *
-   * @var \Drupal\taxonomy\VocabularyInterface
+   * @var VocabularyInterface
    */
   protected $vocabulary2;
 
diff --git a/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php b/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
index ca9bcd3..1f36a0f 100644
--- a/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
+++ b/devel_generate/tests/src/Unit/DevelGenerateManagerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel_generate\Unit;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Component\Plugin\Discovery\DiscoveryInterface;
 use Drupal\devel_generate\DevelGeneratePluginManager;
 use Drupal\Tests\UnitTestCase;
@@ -15,7 +16,7 @@ class DevelGenerateManagerTest extends UnitTestCase {
   /**
    * The plugin discovery.
    *
-   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var DiscoveryInterface|MockObject
    */
   protected $discovery;
 
@@ -36,7 +37,7 @@ class DevelGenerateManagerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Mock a Discovery object to replace AnnotationClassDiscovery.
     $this->discovery = $this->createMock('Drupal\Component\Plugin\Discovery\DiscoveryInterface');
@@ -76,7 +77,7 @@ class TestDevelGeneratePluginManager extends DevelGeneratePluginManager {
   /**
    * Sets the discovery for the manager.
    *
-   * @param \Drupal\Component\Plugin\Discovery\DiscoveryInterface $discovery
+   * @param DiscoveryInterface $discovery
    *   The discovery object.
    */
   public function setDiscovery(DiscoveryInterface $discovery) {
diff --git a/src/Annotation/DevelDumper.php b/src/Annotation/DevelDumper.php
index 40fe027..c6105c4 100644
--- a/src/Annotation/DevelDumper.php
+++ b/src/Annotation/DevelDumper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class DevelDumper extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
@@ -30,7 +31,7 @@ class DevelDumper extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $description;
 
diff --git a/src/Commands/DevelCommands.php b/src/Commands/DevelCommands.php
index 3cfe607..0ec493a 100644
--- a/src/Commands/DevelCommands.php
+++ b/src/Commands/DevelCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\Commands;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
 use Consolidation\SiteAlias\SiteAliasManagerAwareTrait;
 use Consolidation\SiteProcess\Util\Escape;
@@ -49,7 +50,7 @@ class DevelCommands extends DrushCommands implements SiteAliasManagerAwareInterf
   }
 
   /**
-   * @return \Drupal\Core\Extension\ModuleHandlerInterface
+   * @return ModuleHandlerInterface
    *   The moduleHandler.
    */
   public function getModuleHandler() {
@@ -73,7 +74,7 @@ class DevelCommands extends DrushCommands implements SiteAliasManagerAwareInterf
   }
 
   /**
-   * @return \Drupal\Core\Utility\Token
+   * @return Token
    *   The token.
    */
   public function getToken() {
@@ -218,7 +219,7 @@ class DevelCommands extends DrushCommands implements SiteAliasManagerAwareInterf
    *   name: Name
    * @default-fields group,token,name
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   The tokens structured in a RowsOfFields object.
    */
   public function token($options = ['format' => 'table']) {
diff --git a/src/Controller/ContainerInfoController.php b/src/Controller/ContainerInfoController.php
index 7c3b445..a443983 100644
--- a/src/Controller/ContainerInfoController.php
+++ b/src/Controller/ContainerInfoController.php
@@ -23,23 +23,23 @@ class ContainerInfoController extends ControllerBase implements ContainerAwareIn
   /**
    * The drupal kernel.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected $kernel;
 
   /**
    * The dumper manager service.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * ServiceInfoController constructor.
    *
-   * @param \Drupal\Core\DrupalKernelInterface $drupalKernel
+   * @param DrupalKernelInterface $drupalKernel
    *   The drupal kernel.
-   * @param \Drupal\devel\DevelDumperManagerInterface $dumper
+   * @param DevelDumperManagerInterface $dumper
    *   The dumper manager service.
    */
   public function __construct(DrupalKernelInterface $drupalKernel, DevelDumperManagerInterface $dumper) {
@@ -139,7 +139,7 @@ class ContainerInfoController extends ControllerBase implements ContainerAwareIn
    * @return array
    *   A render array containing the service detail.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If the requested service is not defined.
    */
   public function serviceDetail($service_id) {
@@ -240,7 +240,7 @@ class ContainerInfoController extends ControllerBase implements ContainerAwareIn
    * @return array
    *   A render array containing the parameter value.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If the requested parameter is not defined.
    */
   public function parameterDetail($parameter_name) {
diff --git a/src/Controller/DevelController.php b/src/Controller/DevelController.php
index d57a07f..92db728 100644
--- a/src/Controller/DevelController.php
+++ b/src/Controller/DevelController.php
@@ -21,50 +21,50 @@ class DevelController extends ControllerBase {
   /**
    * The dumper service.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The field type plugin manager service.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypeManager;
 
   /**
    * The field formatter plugin manager.
    *
-   * @var \Drupal\Core\Field\FormatterPluginManager
+   * @var FormatterPluginManager
    */
   protected $formatterPluginManager;
 
   /**
    * The field widget plugin manager.
    *
-   * @var \Drupal\Core\Field\WidgetPluginManager
+   * @var WidgetPluginManager
    */
   protected $widgetPluginManager;
 
   /**
    * EntityDebugController constructor.
    *
-   * @param \Drupal\devel\DevelDumperManagerInterface $dumper
+   * @param DevelDumperManagerInterface $dumper
    *   The dumper service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type manager service.
-   * @param \Drupal\Core\Field\FormatterPluginManager $formatter_plugin_manager
+   * @param FormatterPluginManager $formatter_plugin_manager
    *   The field formatter plugin manager.
-   * @param \Drupal\Core\Field\WidgetPluginManager $widget_plugin_manager
+   * @param WidgetPluginManager $widget_plugin_manager
    *   The field widget plugin manager.
    */
   public function __construct(DevelDumperManagerInterface $dumper, EntityTypeBundleInfoInterface $entity_type_bundle_info, FieldTypePluginManagerInterface $field_type_manager, FormatterPluginManager $formatter_plugin_manager, WidgetPluginManager $widget_plugin_manager) {
diff --git a/src/Controller/ElementInfoController.php b/src/Controller/ElementInfoController.php
index 14ae305..a86a8fb 100644
--- a/src/Controller/ElementInfoController.php
+++ b/src/Controller/ElementInfoController.php
@@ -18,23 +18,23 @@ class ElementInfoController extends ControllerBase {
   /**
    * Element info manager service.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;
 
   /**
    * The dumper service.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * EventInfoController constructor.
    *
-   * @param \Drupal\Core\Render\ElementInfoManagerInterface $element_info
+   * @param ElementInfoManagerInterface $element_info
    *   Element info manager service.
-   * @param \Drupal\devel\DevelDumperManagerInterface $dumper
+   * @param DevelDumperManagerInterface $dumper
    *   The dumper service.
    */
   public function __construct(ElementInfoManagerInterface $element_info, DevelDumperManagerInterface $dumper) {
@@ -130,7 +130,7 @@ class ElementInfoController extends ControllerBase {
    * @return array
    *   A render array containing the element.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If the requested element is not defined.
    */
   public function elementDetail($element_name) {
diff --git a/src/Controller/EntityDebugController.php b/src/Controller/EntityDebugController.php
index f999e45..6897dea 100644
--- a/src/Controller/EntityDebugController.php
+++ b/src/Controller/EntityDebugController.php
@@ -20,14 +20,14 @@ class EntityDebugController extends ControllerBase {
   /**
    * The dumper service.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * EntityDebugController constructor.
    *
-   * @param \Drupal\devel\DevelDumperManagerInterface $dumper
+   * @param DevelDumperManagerInterface $dumper
    *   The dumper service.
    */
   public function __construct(DevelDumperManagerInterface $dumper) {
@@ -44,7 +44,7 @@ class EntityDebugController extends ControllerBase {
   /**
    * Returns the entity type definition of the current entity.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   A RouteMatch object.
    *
    * @return array
@@ -65,7 +65,7 @@ class EntityDebugController extends ControllerBase {
   /**
    * Returns the loaded structure of the current entity.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   A RouteMatch object.
    *
    * @return array
@@ -94,7 +94,7 @@ class EntityDebugController extends ControllerBase {
   /**
    * Returns the render structure of the current entity.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   A RouteMatch object.
    *
    * @return array
@@ -128,10 +128,10 @@ class EntityDebugController extends ControllerBase {
   /**
    * Retrieves entity from route match.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity object as determined from the passed-in route match.
    */
   protected function getEntityFromRouteMatch(RouteMatchInterface $route_match) {
diff --git a/src/Controller/EntityTypeInfoController.php b/src/Controller/EntityTypeInfoController.php
index edd46db..0e7b74d 100644
--- a/src/Controller/EntityTypeInfoController.php
+++ b/src/Controller/EntityTypeInfoController.php
@@ -18,23 +18,23 @@ class EntityTypeInfoController extends ControllerBase {
   /**
    * The dumper service.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * The installed entity definition repository service.
    *
-   * @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface
+   * @var EntityLastInstalledSchemaRepositoryInterface
    */
   protected $entityLastInstalledSchemaRepository;
 
   /**
    * EntityTypeInfoController constructor.
    *
-   * @param \Drupal\devel\DevelDumperManagerInterface $dumper
+   * @param DevelDumperManagerInterface $dumper
    *   The dumper service.
-   * @param \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $entityLastInstalledSchemaRepository
+   * @param EntityLastInstalledSchemaRepositoryInterface $entityLastInstalledSchemaRepository
    *   The installed entity definition repository service.
    */
   public function __construct(DevelDumperManagerInterface $dumper, EntityLastInstalledSchemaRepositoryInterface $entityLastInstalledSchemaRepository) {
@@ -147,7 +147,7 @@ class EntityTypeInfoController extends ControllerBase {
    * @return array
    *   A render array containing the entity type.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If the requested entity type is not defined.
    */
   public function entityTypeDetail($entity_type_id) {
@@ -167,7 +167,7 @@ class EntityTypeInfoController extends ControllerBase {
    * @return array
    *   A render array containing the entity type field definitions.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If the requested entity type is not defined.
    */
   public function entityTypeFields($entity_type_id) {
diff --git a/src/Controller/EventInfoController.php b/src/Controller/EventInfoController.php
index 3f6a251..87a4f8e 100644
--- a/src/Controller/EventInfoController.php
+++ b/src/Controller/EventInfoController.php
@@ -14,14 +14,14 @@ class EventInfoController extends ControllerBase {
   /**
    * Event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * EventInfoController constructor.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   Event dispatcher service.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
diff --git a/src/Controller/LayoutInfoController.php b/src/Controller/LayoutInfoController.php
index 4fdb3f4..999eaae 100644
--- a/src/Controller/LayoutInfoController.php
+++ b/src/Controller/LayoutInfoController.php
@@ -14,14 +14,14 @@ class LayoutInfoController extends ControllerBase {
   /**
    * The Layout Plugin Manager.
    *
-   * @var Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutPluginManager;
 
   /**
    * LayoutInfoController constructor.
    *
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface $pluginManagerLayout
+   * @param LayoutPluginManagerInterface $pluginManagerLayout
    *   The layout manager.
    */
   public function __construct(LayoutPluginManagerInterface $pluginManagerLayout) {
diff --git a/src/Controller/RouteInfoController.php b/src/Controller/RouteInfoController.php
index a87aa5c..7486fd6 100644
--- a/src/Controller/RouteInfoController.php
+++ b/src/Controller/RouteInfoController.php
@@ -20,32 +20,32 @@ class RouteInfoController extends ControllerBase {
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
   /**
    * The router service.
    *
-   * @var \Symfony\Component\Routing\RouterInterface
+   * @var RouterInterface
    */
   protected $router;
 
   /**
    * The dumper service.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * RouterInfoController constructor.
    *
-   * @param \Drupal\Core\Routing\RouteProviderInterface $provider
+   * @param RouteProviderInterface $provider
    *   The route provider.
-   * @param \Symfony\Component\Routing\RouterInterface $router
+   * @param RouterInterface $router
    *   The router service.
-   * @param \Drupal\devel\DevelDumperManagerInterface $dumper
+   * @param DevelDumperManagerInterface $dumper
    *   The dumper service.
    */
   public function __construct(RouteProviderInterface $provider, RouterInterface $router, DevelDumperManagerInterface $dumper) {
@@ -152,9 +152,9 @@ class RouteInfoController extends ControllerBase {
    * query string value if available. If no route is retrieved from the query
    * string parameters it fallbacks to the current route.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    *
    * @return array
diff --git a/src/Controller/SwitchUserController.php b/src/Controller/SwitchUserController.php
index 8f9542a..146eb2f 100644
--- a/src/Controller/SwitchUserController.php
+++ b/src/Controller/SwitchUserController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -19,43 +20,43 @@ class SwitchUserController extends ControllerBase {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * The user storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $userStorage;
 
   /**
    * The session manager service.
    *
-   * @var \Drupal\Core\Session\SessionManagerInterface
+   * @var SessionManagerInterface
    */
   protected $sessionManager;
 
   /**
    * The session.
    *
-   * @var \Symfony\Component\HttpFoundation\Session\Session
+   * @var Session
    */
   protected $session;
 
   /**
    * Constructs a new SwitchUserController object.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $user_storage
+   * @param EntityStorageInterface $user_storage
    *   The user storage.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The user storage.
-   * @param \Drupal\Core\Session\SessionManagerInterface $session_manager
+   * @param SessionManagerInterface $session_manager
    *   The session manager service.
-   * @param \Symfony\Component\HttpFoundation\Session\Session $session
+   * @param Session $session
    *   The session.
    */
   public function __construct(AccountProxyInterface $account, EntityStorageInterface $user_storage, ModuleHandlerInterface $module_handler, SessionManagerInterface $session_manager, Session $session) {
@@ -88,10 +89,10 @@ class SwitchUserController extends ControllerBase {
    * @param string $name
    *   The username to switch to, or NULL to log out.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect response object.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    */
   public function switchUser($name = NULL) {
     if (empty($name) || !($account = $this->userStorage->loadByProperties(['name' => $name]))) {
diff --git a/src/DevelDumperManager.php b/src/DevelDumperManager.php
index 84683b3..b35e7c0 100644
--- a/src/DevelDumperManager.php
+++ b/src/DevelDumperManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerTrait;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -19,32 +20,32 @@ class DevelDumperManager implements DevelDumperManagerInterface {
   /**
    * The devel config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The current account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * The devel dumper plugin manager.
    *
-   * @var \Drupal\devel\DevelDumperPluginManagerInterface
+   * @var DevelDumperPluginManagerInterface
    */
   protected $dumperManager;
 
   /**
    * Constructs a DevelDumperPluginManager object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current account.
-   * @param \Drupal\devel\DevelDumperPluginManagerInterface $dumper_manager
+   * @param DevelDumperPluginManagerInterface $dumper_manager
    *   The devel dumper plugin manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountProxyInterface $account, DevelDumperPluginManagerInterface $dumper_manager) {
@@ -59,7 +60,7 @@ class DevelDumperManager implements DevelDumperManagerInterface {
    * @param string $plugin_id
    *   (optional) The plugin ID, defaults to NULL.
    *
-   * @return \Drupal\devel\DevelDumperInterface
+   * @return DevelDumperInterface
    *   Returns the devel dumper plugin instance.
    */
   protected function createInstance($plugin_id = NULL) {
diff --git a/src/DevelDumperPluginManager.php b/src/DevelDumperPluginManager.php
index 97ac38e..fe9b5c5 100644
--- a/src/DevelDumperPluginManager.php
+++ b/src/DevelDumperPluginManager.php
@@ -23,9 +23,9 @@ class DevelDumperPluginManager extends DefaultPluginManager implements DevelDump
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/EntityTypeInfo.php b/src/EntityTypeInfo.php
index 74203a6..996af05 100644
--- a/src/EntityTypeInfo.php
+++ b/src/EntityTypeInfo.php
@@ -22,14 +22,14 @@ class EntityTypeInfo implements ContainerInjectionInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * EntityTypeInfo constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user.
    */
   public function __construct(AccountInterface $current_user) {
@@ -50,7 +50,7 @@ class EntityTypeInfo implements ContainerInjectionInterface {
    *
    * This is an alter hook bridge.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface[] $entity_types
+   * @param EntityTypeInterface[] $entity_types
    *   The master entity type list to alter.
    *
    * @see hook_entity_type_alter()
@@ -86,7 +86,7 @@ class EntityTypeInfo implements ContainerInjectionInterface {
   /**
    * Sets entity type link template.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   Entity type.
    * @param string $entity_link
    *   Entity link.
@@ -129,7 +129,7 @@ class EntityTypeInfo implements ContainerInjectionInterface {
   /**
    * Adds devel operations on entity that supports it.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity on which to define an operation.
    *
    * @return array
diff --git a/src/EventSubscriber/ErrorHandlerSubscriber.php b/src/EventSubscriber/ErrorHandlerSubscriber.php
index ee5ad21..f80b3f3 100644
--- a/src/EventSubscriber/ErrorHandlerSubscriber.php
+++ b/src/EventSubscriber/ErrorHandlerSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\devel\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Session\AccountProxyInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -15,14 +15,14 @@ class ErrorHandlerSubscriber implements EventSubscriberInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * ErrorHandlerSubscriber constructor.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
    */
   public function __construct(AccountProxyInterface $account) {
@@ -32,7 +32,7 @@ class ErrorHandlerSubscriber implements EventSubscriberInterface {
   /**
    * Register devel error handler.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The event to process.
    */
   public function registerErrorHandler(Event $event = NULL) {
diff --git a/src/EventSubscriber/ThemeInfoRebuildSubscriber.php b/src/EventSubscriber/ThemeInfoRebuildSubscriber.php
index 9b833ec..f965053 100644
--- a/src/EventSubscriber/ThemeInfoRebuildSubscriber.php
+++ b/src/EventSubscriber/ThemeInfoRebuildSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\devel\EventSubscriber;
 
+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\Core\Messenger\MessengerTrait;
@@ -10,7 +12,6 @@ use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -31,32 +32,32 @@ class ThemeInfoRebuildSubscriber implements EventSubscriberInterface {
   /**
    * The devel config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * Constructs a ThemeInfoRebuildSubscriber object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(ConfigFactoryInterface $config, AccountProxyInterface $account, ThemeHandlerInterface $theme_handler) {
@@ -68,10 +69,10 @@ class ThemeInfoRebuildSubscriber implements EventSubscriberInterface {
   /**
    * Forces the system to rebuild the theme registry.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
-  public function rebuildThemeInfo(GetResponseEvent $event) {
+  public function rebuildThemeInfo(RequestEvent $event) {
     if ($this->config->get('rebuild_theme')) {
       // Update the theme registry.
       drupal_theme_rebuild();
@@ -92,7 +93,7 @@ class ThemeInfoRebuildSubscriber implements EventSubscriberInterface {
    * The warning message is shown only to users with adequate permissions and
    * only once per session.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
    */
   protected function triggerWarningIfNeeded(Request $request) {
diff --git a/src/Form/ConfigEditor.php b/src/Form/ConfigEditor.php
index efefe6b..c1bca94 100644
--- a/src/Form/ConfigEditor.php
+++ b/src/Form/ConfigEditor.php
@@ -135,7 +135,7 @@ class ConfigEditor extends FormBase {
   /**
    * Builds the cancel link url for the form.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Cancel url
    */
   private function buildCancelLinkUrl() {
diff --git a/src/Form/DevelReinstall.php b/src/Form/DevelReinstall.php
index 32f89b4..f604760 100644
--- a/src/Form/DevelReinstall.php
+++ b/src/Form/DevelReinstall.php
@@ -16,23 +16,23 @@ class DevelReinstall extends FormBase {
   /**
    * The module installer.
    *
-   * @var \Drupal\Core\Extension\ModuleInstallerInterface
+   * @var ModuleInstallerInterface
    */
   protected $moduleInstaller;
 
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
   /**
    * Constructs a new DevelReinstall form.
    *
-   * @param \Drupal\Core\Extension\ModuleInstallerInterface $module_installer
+   * @param ModuleInstallerInterface $module_installer
    *   The module installer.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $extension_list_module
+   * @param ModuleExtensionList $extension_list_module
    *   The module extension list.
    */
   public function __construct(ModuleInstallerInterface $module_installer, ModuleExtensionList $extension_list_module) {
diff --git a/src/Form/RouterRebuildConfirmForm.php b/src/Form/RouterRebuildConfirmForm.php
index c6e7383..96fe7f1 100644
--- a/src/Form/RouterRebuildConfirmForm.php
+++ b/src/Form/RouterRebuildConfirmForm.php
@@ -16,14 +16,14 @@ class RouterRebuildConfirmForm extends ConfirmFormBase {
   /**
    * The route builder service.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routeBuilder;
 
   /**
    * Constructs a new RouterRebuildConfirmForm object.
    *
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $route_builder
+   * @param RouteBuilderInterface $route_builder
    *   The route builder service.
    */
   public function __construct(RouteBuilderInterface $route_builder) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 3c44427..cf799ae 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\Form;
 
+use Drupal\devel\DevelDumperPluginManager;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\devel\DevelDumperPluginManagerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -18,14 +19,14 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Devel Dumper Plugin Manager.
    *
-   * @var \Drupal\devel\DevelDumperPluginManager
+   * @var DevelDumperPluginManager
    */
   protected $dumperManager;
 
   /**
    * Constructs a new SettingsForm object.
    *
-   * @param \Drupal\devel\DevelDumperPluginManagerInterface $devel_dumper_manager
+   * @param DevelDumperPluginManagerInterface $devel_dumper_manager
    *   Devel Dumper Plugin Manager.
    */
   public function __construct(DevelDumperPluginManagerInterface $devel_dumper_manager) {
diff --git a/src/Form/SwitchUserForm.php b/src/Form/SwitchUserForm.php
index 06314c6..aee6599 100644
--- a/src/Form/SwitchUserForm.php
+++ b/src/Form/SwitchUserForm.php
@@ -18,14 +18,14 @@ class SwitchUserForm extends FormBase {
   /**
    * The csrf token generator.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator
+   * @var CsrfTokenGenerator
    */
   protected $csrfToken;
 
   /**
    * Constructs a new SwitchUserForm object.
    *
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token_generator
+   * @param CsrfTokenGenerator $csrf_token_generator
    *   The CSRF token generator.
    */
   public function __construct(CsrfTokenGenerator $csrf_token_generator) {
diff --git a/src/Form/SystemStateEdit.php b/src/Form/SystemStateEdit.php
index 16e870a..45d2cbb 100644
--- a/src/Form/SystemStateEdit.php
+++ b/src/Form/SystemStateEdit.php
@@ -18,14 +18,14 @@ class SystemStateEdit extends FormBase {
   /**
    * The state store.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Constructs a new SystemStateEdit object.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(StateInterface $state) {
diff --git a/src/Form/ToolbarSettingsForm.php b/src/Form/ToolbarSettingsForm.php
index d0e09fc..3debc79 100644
--- a/src/Form/ToolbarSettingsForm.php
+++ b/src/Form/ToolbarSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\Form;
 
+use Drupal\Core\Menu\MenuLinkTree;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -17,16 +18,16 @@ class ToolbarSettingsForm extends ConfigFormBase {
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTree
+   * @var MenuLinkTree
    */
   protected $menuLinkTree;
 
   /**
    * ToolbarSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree
+   * @param MenuLinkTreeInterface $menu_link_tree
    *   The menu link tree service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MenuLinkTreeInterface $menu_link_tree) {
diff --git a/src/Plugin/Block/SwitchUserBlock.php b/src/Plugin/Block/SwitchUserBlock.php
index d85222c..66a6883 100644
--- a/src/Plugin/Block/SwitchUserBlock.php
+++ b/src/Plugin/Block/SwitchUserBlock.php
@@ -32,21 +32,21 @@ class SwitchUserBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * The FormBuilder object.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The Current User object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The user storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $userStorage;
 
@@ -59,11 +59,11 @@ class SwitchUserBlock extends BlockBase implements ContainerFactoryPluginInterfa
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $user_storage
+   * @param EntityStorageInterface $user_storage
    *   The user storage.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AccountInterface $current_user, EntityStorageInterface $user_storage, FormBuilderInterface $form_builder) {
@@ -170,7 +170,7 @@ class SwitchUserBlock extends BlockBase implements ContainerFactoryPluginInterfa
    * with 'switch users' permission and anonymous user if include_anon property
    * is set to TRUE, are prioritized.
    *
-   * @return \Drupal\Core\Session\AccountInterface[]
+   * @return AccountInterface[]
    *   List of accounts to be used for the switch.
    */
   protected function getUsers() {
@@ -214,7 +214,7 @@ class SwitchUserBlock extends BlockBase implements ContainerFactoryPluginInterfa
       $user_ids += $query->execute();
     }
 
-    /** @var \Drupal\Core\Session\AccountInterface[] $accounts */
+    /** @var AccountInterface[] $accounts */
     $accounts = $this->userStorage->loadMultiple($user_ids);
 
     if ($include_anonymous) {
@@ -268,9 +268,9 @@ class SwitchUserBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * Helper callback for uasort() to sort accounts by last access.
    *
-   * @param \Drupal\Core\Session\AccountInterface $a
+   * @param AccountInterface $a
    *   First account.
-   * @param \Drupal\Core\Session\AccountInterface $b
+   * @param AccountInterface $b
    *   Second account.
    *
    * @return int
diff --git a/src/Plugin/Derivative/DevelLocalTask.php b/src/Plugin/Derivative/DevelLocalTask.php
index 4dedb38..c91f646 100644
--- a/src/Plugin/Derivative/DevelLocalTask.php
+++ b/src/Plugin/Derivative/DevelLocalTask.php
@@ -22,16 +22,16 @@ class DevelLocalTask extends DeriverBase implements ContainerDeriverInterface {
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Creates an DevelLocalTask object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
diff --git a/src/Plugin/Mail/DevelMailLog.php b/src/Plugin/Mail/DevelMailLog.php
index 354fcb2..96ec2b8 100644
--- a/src/Plugin/Mail/DevelMailLog.php
+++ b/src/Plugin/Mail/DevelMailLog.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\Plugin\Mail;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\FileSecurity\FileSecurity;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -50,14 +51,14 @@ class DevelMailLog implements MailInterface, ContainerFactoryPluginInterface {
   /**
    * The devel.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -70,9 +71,9 @@ class DevelMailLog implements MailInterface, ContainerFactoryPluginInterface {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index a880e30..4399e68 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\devel\Routing;
 
+use Symfony\Component\Routing\RouterInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\RouteProviderInterface;
@@ -21,23 +22,23 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The router service.
    *
-   * @var \Symfony\Component\Routing\RouterInterface
+   * @var RouterInterface
    */
   protected $routeProvider;
 
   /**
    * Constructs a new RouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity type manager.
-   * @param \Symfony\Component\Routing\RouterInterface $router_provider
+   * @param RouterInterface $router_provider
    *   The router service.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, RouteProviderInterface $router_provider) {
@@ -65,10 +66,10 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Gets the entity load route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getEntityLoadRoute(EntityTypeInterface $entity_type) {
@@ -95,10 +96,10 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Gets the entity render route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getEntityRenderRoute(EntityTypeInterface $entity_type) {
@@ -125,10 +126,10 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Gets the entity type definition route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getEntityTypeDefinitionRoute(EntityTypeInterface $entity_type) {
diff --git a/src/ToolbarHandler.php b/src/ToolbarHandler.php
index cfdb955..694cba0 100644
--- a/src/ToolbarHandler.php
+++ b/src/ToolbarHandler.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\devel;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Menu\MenuLinkTreeElement;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -23,32 +25,32 @@ class ToolbarHandler implements ContainerInjectionInterface, TrustedCallbackInte
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;
 
   /**
    * The devel toolbar config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * ToolbarHandler constructor.
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree
+   * @param MenuLinkTreeInterface $menu_link_tree
    *   The menu link tree service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
    */
   public function __construct(MenuLinkTreeInterface $menu_link_tree, ConfigFactoryInterface $config_factory, AccountProxyInterface $account) {
@@ -165,10 +167,10 @@ class ToolbarHandler implements ContainerInjectionInterface, TrustedCallbackInte
   /**
    * Adds toolbar-specific attributes to the menu link tree.
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeElement[] $tree
+   * @param MenuLinkTreeElement[] $tree
    *   The menu link tree to manipulate.
    *
-   * @return \Drupal\Core\Menu\MenuLinkTreeElement[]
+   * @return MenuLinkTreeElement[]
    *   The manipulated menu link tree.
    */
   public function processTree(array $tree) {
diff --git a/src/Twig/Extension/Debug.php b/src/Twig/Extension/Debug.php
index 9006107..14c95dc 100644
--- a/src/Twig/Extension/Debug.php
+++ b/src/Twig/Extension/Debug.php
@@ -17,14 +17,14 @@ class Debug extends \Twig_Extension {
   /**
    * The devel dumper service.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * Constructs a Debug object.
    *
-   * @param \Drupal\devel\DevelDumperManagerInterface $dumper
+   * @param DevelDumperManagerInterface $dumper
    *   The devel dumper service.
    */
   public function __construct(DevelDumperManagerInterface $dumper) {
diff --git a/tests/modules/devel_dumper_test/src/Controller/DumperTestController.php b/tests/modules/devel_dumper_test/src/Controller/DumperTestController.php
index 71e4c42..7d8fc50 100644
--- a/tests/modules/devel_dumper_test/src/Controller/DumperTestController.php
+++ b/tests/modules/devel_dumper_test/src/Controller/DumperTestController.php
@@ -16,14 +16,14 @@ class DumperTestController extends ControllerBase {
   /**
    * The dumper manager.
    *
-   * @var \Drupal\devel\DevelDumperManagerInterface
+   * @var DevelDumperManagerInterface
    */
   protected $dumper;
 
   /**
    * Constructs a new DumperTestController object.
    *
-   * @param \Drupal\devel\DevelDumperManagerInterface $devel_dumper_manager
+   * @param DevelDumperManagerInterface $devel_dumper_manager
    *   The dumper manager.
    */
   public function __construct(DevelDumperManagerInterface $devel_dumper_manager) {
diff --git a/tests/modules/devel_test/src/Routing/TestRouteSubscriber.php b/tests/modules/devel_test/src/Routing/TestRouteSubscriber.php
index 636a38f..b0d1d6b 100644
--- a/tests/modules/devel_test/src/Routing/TestRouteSubscriber.php
+++ b/tests/modules/devel_test/src/Routing/TestRouteSubscriber.php
@@ -14,14 +14,14 @@ class TestRouteSubscriber extends RouteSubscriberBase {
   /**
    * The state store.
    *
-   * @var Drupal\Core\State\State
+   * @var State
    */
   protected $state;
 
   /**
    * Constructor method.
    *
-   * @param Drupal\Core\State\State $state
+   * @param State $state
    *   The object State.
    */
   public function __construct(State $state) {
diff --git a/tests/src/Functional/DevelBrowserTestBase.php b/tests/src/Functional/DevelBrowserTestBase.php
index 38571f8..be8249a 100644
--- a/tests/src/Functional/DevelBrowserTestBase.php
+++ b/tests/src/Functional/DevelBrowserTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -20,14 +21,14 @@ abstract class DevelBrowserTestBase extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * User with Devel acces but not site admin permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $develUser;
 
@@ -39,7 +40,7 @@ abstract class DevelBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser([
diff --git a/tests/src/Functional/DevelContainerInfoTest.php b/tests/src/Functional/DevelContainerInfoTest.php
index 004b5ac..6d5470b 100644
--- a/tests/src/Functional/DevelContainerInfoTest.php
+++ b/tests/src/Functional/DevelContainerInfoTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Behat\Mink\Element\NodeElement;
 use Drupal\Core\Url;
 
 /**
@@ -16,7 +17,7 @@ class DevelContainerInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_tasks_block');
     $this->drupalPlaceBlock('page_title_block');
@@ -53,7 +54,7 @@ class DevelContainerInfoTest extends DevelBrowserTestBase {
     $this->assertNotNull($table);
 
     // Ensures that the expected table headers are found.
-    /** @var \Behat\Mink\Element\NodeElement[] $headers */
+    /** @var NodeElement[] $headers */
     $headers = $table->findAll('css', 'thead th');
     $this->assertEquals(4, count($headers));
 
@@ -89,7 +90,7 @@ class DevelContainerInfoTest extends DevelBrowserTestBase {
       $row = $table->find('css', sprintf('tbody tr:contains("%s")', $service_id));
       $this->assertNotNull($row);
 
-      /** @var \Behat\Mink\Element\NodeElement[] $cells */
+      /** @var NodeElement[] $cells */
       $cells = $row->findAll('css', 'td');
       $this->assertEquals(4, count($cells));
 
@@ -158,7 +159,7 @@ class DevelContainerInfoTest extends DevelBrowserTestBase {
     $this->assertNotNull($table);
 
     // Ensures that the expected table headers are found.
-    /** @var \Behat\Mink\Element\NodeElement[] $headers */
+    /** @var NodeElement[] $headers */
     $headers = $table->findAll('css', 'thead th');
     $this->assertEquals(2, count($headers));
 
@@ -186,7 +187,7 @@ class DevelContainerInfoTest extends DevelBrowserTestBase {
       $row = $table->find('css', sprintf('tbody tr:contains("%s")', $parameter_name));
       $this->assertNotNull($row);
 
-      /** @var \Behat\Mink\Element\NodeElement[] $cells */
+      /** @var NodeElement[] $cells */
       $cells = $row->findAll('css', 'td');
       $this->assertEquals(2, count($cells));
 
diff --git a/tests/src/Functional/DevelControllerTest.php b/tests/src/Functional/DevelControllerTest.php
index 6109fa3..fc92b73 100644
--- a/tests/src/Functional/DevelControllerTest.php
+++ b/tests/src/Functional/DevelControllerTest.php
@@ -25,7 +25,7 @@ class DevelControllerTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $entity_type_manager = $this->container->get('entity_type.manager');
 
diff --git a/tests/src/Functional/DevelDumperTest.php b/tests/src/Functional/DevelDumperTest.php
index 52296c5..19b90b5 100644
--- a/tests/src/Functional/DevelDumperTest.php
+++ b/tests/src/Functional/DevelDumperTest.php
@@ -19,7 +19,7 @@ class DevelDumperTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
   }
@@ -70,7 +70,8 @@ class DevelDumperTest extends DevelBrowserTestBase {
     $edit = [
       'dumper' => 'var_dumper',
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
     $this->assertSession()->checkboxChecked('Symfony var-dumper');
 
@@ -85,7 +86,8 @@ class DevelDumperTest extends DevelBrowserTestBase {
     $edit = [
       'dumper' => 'available_test_dumper',
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $this->drupalGet('devel_dumper_test/dump');
diff --git a/tests/src/Functional/DevelElementInfoTest.php b/tests/src/Functional/DevelElementInfoTest.php
index 0b3fe89..8228a29 100644
--- a/tests/src/Functional/DevelElementInfoTest.php
+++ b/tests/src/Functional/DevelElementInfoTest.php
@@ -15,7 +15,7 @@ class DevelElementInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
@@ -80,7 +80,7 @@ class DevelElementInfoTest extends DevelBrowserTestBase {
       $row = $table->find('css', sprintf('tbody tr:contains("%s")', $element_name));
       $this->assertNotNull($row);
 
-      /** @var \Behat\Mink\Element\NodeElement[] $cells */
+      /** @var NodeElement[] $cells */
       $cells = $row->findAll('css', 'td');
       $this->assertEquals(4, count($cells));
 
diff --git a/tests/src/Functional/DevelEntityTypeInfoTest.php b/tests/src/Functional/DevelEntityTypeInfoTest.php
index c78e7f0..f208dea 100644
--- a/tests/src/Functional/DevelEntityTypeInfoTest.php
+++ b/tests/src/Functional/DevelEntityTypeInfoTest.php
@@ -15,7 +15,7 @@ class DevelEntityTypeInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
@@ -84,7 +84,7 @@ class DevelEntityTypeInfoTest extends DevelBrowserTestBase {
       $row = $table->find('css', sprintf('tbody tr:contains("%s")', $entity_type_id));
       $this->assertNotNull($row);
 
-      /** @var \Behat\Mink\Element\NodeElement[] $cells */
+      /** @var NodeElement[] $cells */
       $cells = $row->findAll('css', 'td');
       $this->assertEquals(5, count($cells));
 
diff --git a/tests/src/Functional/DevelErrorHandlerTest.php b/tests/src/Functional/DevelErrorHandlerTest.php
index 60d220a..e2adaa9 100644
--- a/tests/src/Functional/DevelErrorHandlerTest.php
+++ b/tests/src/Functional/DevelErrorHandlerTest.php
@@ -35,7 +35,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_NONE,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ -56,7 +57,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_BACKTRACE_KINT,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ -72,7 +74,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
     $edit = [
       'error_handlers[]' => DEVEL_ERROR_HANDLER_BACKTRACE_DPM,
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
@@ -92,7 +95,8 @@ class DevelErrorHandlerTest extends DevelBrowserTestBase {
         DEVEL_ERROR_HANDLER_BACKTRACE_DPM => DEVEL_ERROR_HANDLER_BACKTRACE_DPM,
       ],
     ];
-    $this->drupalPostForm('admin/config/development/devel', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $error_handlers = \Drupal::config('devel.settings')->get('error_handlers');
diff --git a/tests/src/Functional/DevelEventInfoTest.php b/tests/src/Functional/DevelEventInfoTest.php
index 952924e..45fe3ea 100644
--- a/tests/src/Functional/DevelEventInfoTest.php
+++ b/tests/src/Functional/DevelEventInfoTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+use Behat\Mink\Element\NodeElement;
 /**
  * Tests event info pages and links.
  *
@@ -12,7 +14,7 @@ class DevelEventInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('page_title_block');
     $this->drupalLogin($this->develUser);
@@ -36,7 +38,7 @@ class DevelEventInfoTest extends DevelBrowserTestBase {
    * Tests event info page.
    */
   public function testEventList() {
-    /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher */
+    /** @var EventDispatcherInterface $event_dispatcher */
     $event_dispatcher = \Drupal::service('event_dispatcher');
 
     $this->drupalGet('/devel/events');
@@ -50,7 +52,7 @@ class DevelEventInfoTest extends DevelBrowserTestBase {
     $this->assertNotNull($table);
 
     // Ensures that the expected table headers are found.
-    /** @var \Behat\Mink\Element\NodeElement[] $headers */
+    /** @var NodeElement[] $headers */
     $headers = $table->findAll('css', 'thead th');
     $this->assertEquals(3, count($headers));
 
@@ -83,14 +85,14 @@ class DevelEventInfoTest extends DevelBrowserTestBase {
       $this->assertEquals(1, count($event_header_row));
 
       // Ensures that all the event listener are listed in the table.
-      /** @var \Behat\Mink\Element\NodeElement[] $event_rows */
+      /** @var NodeElement[] $event_rows */
       $event_rows = $table->findAll('css', sprintf('tbody tr:contains("%s")', $event_name));
       // Remove the header row.
       array_shift($event_rows);
       $this->assertEquals(count($listeners), count($event_rows));
 
       foreach ($listeners as $index => $listener) {
-        /** @var \Behat\Mink\Element\NodeElement[] $cells */
+        /** @var NodeElement[] $cells */
         $cells = $event_rows[$index]->findAll('css', 'td');
         $this->assertEquals(3, count($cells));
 
diff --git a/tests/src/Functional/DevelLayoutInfoTest.php b/tests/src/Functional/DevelLayoutInfoTest.php
index f4253cd..b0ec83e 100644
--- a/tests/src/Functional/DevelLayoutInfoTest.php
+++ b/tests/src/Functional/DevelLayoutInfoTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Behat\Mink\Element\NodeElement;
 /**
  * Tests layout info pages and links.
  *
@@ -17,7 +18,7 @@ class DevelLayoutInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('page_title_block');
     $this->drupalLogin($this->develUser);
@@ -52,7 +53,7 @@ class DevelLayoutInfoTest extends DevelBrowserTestBase {
     $this->assertNotNull($table);
 
     // Ensures that the expected table headers are found.
-    /** @var \Behat\Mink\Element\NodeElement[] $headers */
+    /** @var NodeElement[] $headers */
     $headers = $table->findAll('css', 'thead th');
     $this->assertEquals(6, count($headers));
 
diff --git a/tests/src/Functional/DevelMenuLinksTest.php b/tests/src/Functional/DevelMenuLinksTest.php
index b2de463..fe84529 100644
--- a/tests/src/Functional/DevelMenuLinksTest.php
+++ b/tests/src/Functional/DevelMenuLinksTest.php
@@ -14,7 +14,7 @@ class DevelMenuLinksTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Devel links currently appears only in the devel menu.
     // Place the devel menu block so we can ensure that these link works
diff --git a/tests/src/Functional/DevelModulesReinstallTest.php b/tests/src/Functional/DevelModulesReinstallTest.php
index 9a9a12c..2c4a38c 100644
--- a/tests/src/Functional/DevelModulesReinstallTest.php
+++ b/tests/src/Functional/DevelModulesReinstallTest.php
@@ -19,7 +19,7 @@ class DevelModulesReinstallTest extends DevelBrowserTestBase {
   /**
    * Set up test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalLogin($this->adminUser);
   }
@@ -41,8 +41,9 @@ class DevelModulesReinstallTest extends DevelBrowserTestBase {
     foreach ($modules as $module) {
       $edit["reinstall[$module]"] = TRUE;
     }
+    $this->drupalGet('devel/reinstall');
 
-    $this->drupalPostForm('devel/reinstall', $edit, 'Reinstall');
+    $this->submitForm($edit, 'Reinstall');
     $this->assertSession()->pageTextContains('Uninstalled and installed: ' . implode(', ', $modules) . '.');
 
   }
diff --git a/tests/src/Functional/DevelRouteInfoTest.php b/tests/src/Functional/DevelRouteInfoTest.php
index 9a2a2a3..cdb96f4 100644
--- a/tests/src/Functional/DevelRouteInfoTest.php
+++ b/tests/src/Functional/DevelRouteInfoTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Behat\Mink\Element\NodeElement;
 use Drupal\Core\Url;
 
 /**
@@ -14,7 +15,7 @@ class DevelRouteInfoTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('system_menu_block:devel');
     $this->drupalPlaceBlock('page_title_block');
@@ -36,7 +37,7 @@ class DevelRouteInfoTest extends DevelBrowserTestBase {
     $page = $this->getSession()->getPage();
 
     // Ensures that the expected table headers are found.
-    /** @var \Behat\Mink\Element\NodeElement[] $headers */
+    /** @var NodeElement[] $headers */
     $headers = $page->findAll('css', 'table.devel-route-list thead th');
     $this->assertEquals(4, count($headers));
 
@@ -78,7 +79,7 @@ class DevelRouteInfoTest extends DevelBrowserTestBase {
       $row = $page->find('css', sprintf('table.devel-route-list tbody tr:contains("%s")', $route_name));
       $this->assertNotNull($row);
 
-      /** @var \Behat\Mink\Element\NodeElement[] $cells */
+      /** @var NodeElement[] $cells */
       $cells = $row->findAll('css', 'td');
       $this->assertEquals(4, count($cells));
 
diff --git a/tests/src/Functional/DevelRouterRebuildTest.php b/tests/src/Functional/DevelRouterRebuildTest.php
index 9091629..6ace03e 100644
--- a/tests/src/Functional/DevelRouterRebuildTest.php
+++ b/tests/src/Functional/DevelRouterRebuildTest.php
@@ -26,8 +26,9 @@ class DevelRouterRebuildTest extends DevelBrowserTestBase {
     $this->assertSession()->pageTextContains('Are you sure you want to rebuild the router?');
     $route_rebuild_state = \Drupal::state()->get('devel_test_route_rebuild');
     $this->assertEmpty($route_rebuild_state);
+    $this->drupalGet('devel/menu/reset');
 
-    $this->drupalPostForm('devel/menu/reset', [], 'Rebuild');
+    $this->submitForm([], 'Rebuild');
     $this->assertSession()->pageTextContains('The router has been rebuilt.');
     $route_rebuild_state = \Drupal::state()->get('devel_test_route_rebuild');
     $this->assertEquals('Router rebuild fired', $route_rebuild_state);
diff --git a/tests/src/Functional/DevelStateEditorTest.php b/tests/src/Functional/DevelStateEditorTest.php
index 1ca7996..b17162b 100644
--- a/tests/src/Functional/DevelStateEditorTest.php
+++ b/tests/src/Functional/DevelStateEditorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Drupal\Core\State\StateInterface;
 use Behat\Mink\Element\NodeElement;
 
 /**
@@ -14,14 +15,14 @@ class DevelStateEditorTest extends DevelBrowserTestBase {
   /**
    * The state store.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->state = $this->container->get('state');
     $this->drupalPlaceBlock('page_title_block');
@@ -128,7 +129,8 @@ class DevelStateEditorTest extends DevelBrowserTestBase {
     $this->assertFalse($button->hasAttribute('disabled'));
 
     $edit = ['new_value' => 1];
-    $this->drupalPostForm('devel/state/edit/devel.simple', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.simple');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(strtr('Variable @name was successfully edited.', ['@name' => 'devel.simple']));
     $this->assertEquals(1, $this->state->get('devel.simple'));
 
@@ -144,11 +146,13 @@ class DevelStateEditorTest extends DevelBrowserTestBase {
 
     // Try to save an invalid yaml input.
     $edit = ['new_value' => 'devel: \'value updated'];
-    $this->drupalPostForm('devel/state/edit/devel.array', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.array');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains('Invalid input:');
 
     $edit = ['new_value' => 'devel: \'value updated\''];
-    $this->drupalPostForm('devel/state/edit/devel.array', $edit, 'Save');
+    $this->drupalGet('devel/state/edit/devel.array');
+    $this->submitForm($edit, 'Save');
     $this->assertSession()->pageTextContains(strtr('Variable @name was successfully edited.', ['@name' => 'devel.array']));
     $this->assertEquals(['devel' => 'value updated'], $this->state->get('devel.array'));
 
@@ -169,7 +173,7 @@ class DevelStateEditorTest extends DevelBrowserTestBase {
   /**
    * Checks that the passed in elements have the expected text.
    *
-   * @param \Behat\Mink\Element\NodeElement[] $elements
+   * @param NodeElement[] $elements
    *   The elements for which check the text.
    * @param array $expected_elements_text
    *   The expected text for the passed in elements.
diff --git a/tests/src/Functional/DevelSwitchUserTest.php b/tests/src/Functional/DevelSwitchUserTest.php
index 0ab2a8f..91ff9ba 100644
--- a/tests/src/Functional/DevelSwitchUserTest.php
+++ b/tests/src/Functional/DevelSwitchUserTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Drupal\block\BlockInterface;
+use Drupal\user\Entity\User;
 use Drupal\Component\Render\FormattableMarkup;
 
 /**
@@ -14,35 +16,35 @@ class DevelSwitchUserTest extends DevelBrowserTestBase {
   /**
    * The block used by this test.
    *
-   * @var \Drupal\block\BlockInterface
+   * @var BlockInterface
    */
   protected $block;
 
   /**
    * The devel user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $develUser;
 
   /**
    * The switch user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $switchUser;
 
   /**
    * The web user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $webUser;
 
   /**
    * Set up test.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->block = $this->drupalPlaceBlock('devel_switch_user', ['id' => 'switch-user', 'label' => 'Switch Hit']);
@@ -91,7 +93,7 @@ class DevelSwitchUserTest extends DevelBrowserTestBase {
 
     // Use the search form to switch to another account.
     $edit = ['userid' => $this->switchUser->getDisplayName()];
-    $this->drupalPostForm(NULL, $edit, 'Switch');
+    $this->submitForm($edit, 'Switch');
     $this->assertSessionByUid($this->switchUser->id());
     $this->assertNoSessionByUid($this->develUser->id());
   }
diff --git a/tests/src/Functional/DevelToolbarTest.php b/tests/src/Functional/DevelToolbarTest.php
index 0860cb7..6918dce 100644
--- a/tests/src/Functional/DevelToolbarTest.php
+++ b/tests/src/Functional/DevelToolbarTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Menu\MenuTreeParameters;
 
 /**
@@ -19,14 +20,14 @@ class DevelToolbarTest extends DevelBrowserTestBase {
   /**
    * The user for tests.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $toolbarUser;
 
   /**
    * The user for tests.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $develUser;
 
@@ -48,7 +49,7 @@ class DevelToolbarTest extends DevelBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('local_tasks_block');
@@ -100,7 +101,8 @@ class DevelToolbarTest extends DevelBrowserTestBase {
       'toolbar_items[devel.event_info]' => 'devel.event_info',
       'toolbar_items[devel.theme_registry]' => 'devel.theme_registry',
     ];
-    $this->drupalPostForm('admin/config/development/devel/toolbar', $edit, 'Save configuration');
+    $this->drupalGet('admin/config/development/devel/toolbar');
+    $this->submitForm($edit, 'Save configuration');
     $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     $expected_items = array_merge($this->defaultToolbarItems, ['devel.event_info', 'devel.theme_registry']);
diff --git a/tests/src/Kernel/DevelEnforcedDependenciesTest.php b/tests/src/Kernel/DevelEnforcedDependenciesTest.php
index e1b6a99..373c763 100644
--- a/tests/src/Kernel/DevelEnforcedDependenciesTest.php
+++ b/tests/src/Kernel/DevelEnforcedDependenciesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Kernel;
 
+use Drupal\Core\Config\ConfigManagerInterface;
 use Drupal\block\Entity\Block;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\system\Entity\Menu;
@@ -23,7 +24,7 @@ class DevelEnforcedDependenciesTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
@@ -36,7 +37,7 @@ class DevelEnforcedDependenciesTest extends KernelTestBase {
    * Tests devel menu enforced dependencies.
    */
   public function testMenuEnforcedDependencies() {
-    /** @var \Drupal\Core\Config\ConfigManagerInterface $config_manager */
+    /** @var ConfigManagerInterface $config_manager */
     $config_manager = $this->container->get('config.manager');
 
     // Ensure that the Devel menu has explicit enforced dependencies on devel
diff --git a/tests/src/Kernel/DevelMailLogTest.php b/tests/src/Kernel/DevelMailLogTest.php
index d3d01e4..195eb46 100644
--- a/tests/src/Kernel/DevelMailLogTest.php
+++ b/tests/src/Kernel/DevelMailLogTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Kernel;
 
+use Drupal\Core\Mail\MailManagerInterface;
 use Drupal\Core\Mail\Plugin\Mail\TestMailCollector;
 use Drupal\devel\Plugin\Mail\DevelMailLog;
 use Drupal\KernelTests\KernelTestBase;
@@ -23,14 +24,14 @@ class DevelMailLogTest extends KernelTestBase {
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(['system', 'devel']);
diff --git a/tests/src/Kernel/DevelQueryDebugTest.php b/tests/src/Kernel/DevelQueryDebugTest.php
index 87fadc3..a578c3a 100644
--- a/tests/src/Kernel/DevelQueryDebugTest.php
+++ b/tests/src/Kernel/DevelQueryDebugTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\devel\Kernel;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Messenger\MessengerTrait;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\user\Entity\Role;
@@ -24,14 +25,14 @@ class DevelQueryDebugTest extends KernelTestBase {
   /**
    * The user used in test.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $develUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('system', 'sequences');
diff --git a/tests/src/Kernel/DevelTwigExtensionTest.php b/tests/src/Kernel/DevelTwigExtensionTest.php
index 51f061a..2134300 100644
--- a/tests/src/Kernel/DevelTwigExtensionTest.php
+++ b/tests/src/Kernel/DevelTwigExtensionTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\devel\Kernel;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Template\TwigEnvironment;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\Messenger\MessengerTrait;
 use Drupal\devel\Twig\Extension\Debug;
@@ -22,7 +24,7 @@ class DevelTwigExtensionTest extends KernelTestBase {
   /**
    * The user used in test.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $develUser;
 
@@ -36,7 +38,7 @@ class DevelTwigExtensionTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('user');
@@ -136,7 +138,7 @@ class DevelTwigExtensionTest extends KernelTestBase {
       'twig_object' => new \stdClass(),
     ];
 
-    /** @var \Drupal\Core\Template\TwigEnvironment $environment */
+    /** @var TwigEnvironment $environment */
     $environment = \Drupal::service('twig');
 
     // Ensures that the twig extension does nothing if the current
diff --git a/webprofiler/src/Access/AccessManagerWrapper.php b/webprofiler/src/Access/AccessManagerWrapper.php
index 7911e41..bed4692 100644
--- a/webprofiler/src/Access/AccessManagerWrapper.php
+++ b/webprofiler/src/Access/AccessManagerWrapper.php
@@ -20,7 +20,7 @@ use Symfony\Component\HttpFoundation\Request;
 class AccessManagerWrapper extends AccessManager {
 
   /**
-   * @var \Drupal\webprofiler\DataCollector\RequestDataCollector
+   * @var RequestDataCollector
    */
   private $dataCollector;
 
@@ -60,7 +60,7 @@ class AccessManagerWrapper extends AccessManager {
   protected function performCheck($service_id, ArgumentsResolverInterface $arguments_resolver, Request $request = NULL) {
     $callable = $this->checkProvider->loadCheck($service_id);
     $arguments = $arguments_resolver->getArguments($callable);
-    /** @var \Drupal\Core\Access\AccessResultInterface $service_access **/
+    /** @var AccessResultInterface $service_access **/
     $service_access = call_user_func_array($callable, $arguments);
 
     if (!$service_access instanceof AccessResultInterface) {
@@ -75,7 +75,7 @@ class AccessManagerWrapper extends AccessManager {
   }
 
   /**
-   * @param \Drupal\webprofiler\DataCollector\RequestDataCollector $dataCollector
+   * @param RequestDataCollector $dataCollector
    */
   public function setDataCollector(RequestDataCollector $dataCollector) {
     $this->dataCollector = $dataCollector;
diff --git a/webprofiler/src/Asset/CssCollectionRendererWrapper.php b/webprofiler/src/Asset/CssCollectionRendererWrapper.php
index 66b7492..3ef4438 100644
--- a/webprofiler/src/Asset/CssCollectionRendererWrapper.php
+++ b/webprofiler/src/Asset/CssCollectionRendererWrapper.php
@@ -11,18 +11,18 @@ use Drupal\webprofiler\DataCollector\AssetsDataCollector;
 class CssCollectionRendererWrapper implements AssetCollectionRendererInterface {
 
   /**
-   * @var \Drupal\Core\Asset\AssetCollectionRendererInterface
+   * @var AssetCollectionRendererInterface
    */
   private $assetCollectionRenderer;
 
   /**
-   * @var \Drupal\webprofiler\DataCollector\AssetsDataCollector
+   * @var AssetsDataCollector
    */
   private $dataCollector;
 
   /**
-   * @param \Drupal\Core\Asset\AssetCollectionRendererInterface $assetCollectionRenderer
-   * @param \Drupal\webprofiler\DataCollector\AssetsDataCollector $dataCollector
+   * @param AssetCollectionRendererInterface $assetCollectionRenderer
+   * @param AssetsDataCollector $dataCollector
    */
   public function __construct(AssetCollectionRendererInterface $assetCollectionRenderer, AssetsDataCollector $dataCollector) {
     $this->assetCollectionRenderer = $assetCollectionRenderer;
diff --git a/webprofiler/src/Asset/JsCollectionRendererWrapper.php b/webprofiler/src/Asset/JsCollectionRendererWrapper.php
index 98cd3fe..620e536 100644
--- a/webprofiler/src/Asset/JsCollectionRendererWrapper.php
+++ b/webprofiler/src/Asset/JsCollectionRendererWrapper.php
@@ -11,18 +11,18 @@ use Drupal\webprofiler\DataCollector\AssetsDataCollector;
 class JsCollectionRendererWrapper implements AssetCollectionRendererInterface {
 
   /**
-   * @var \Drupal\Core\Asset\AssetCollectionRendererInterface
+   * @var AssetCollectionRendererInterface
    */
   private $assetCollectionRenderer;
 
   /**
-   * @var \Drupal\webprofiler\DataCollector\AssetsDataCollector
+   * @var AssetsDataCollector
    */
   private $dataCollector;
 
   /**
-   * @param \Drupal\Core\Asset\AssetCollectionRendererInterface $assetCollectionRenderer
-   * @param \Drupal\webprofiler\DataCollector\AssetsDataCollector $dataCollector
+   * @param AssetCollectionRendererInterface $assetCollectionRenderer
+   * @param AssetsDataCollector $dataCollector
    */
   public function __construct(AssetCollectionRendererInterface $assetCollectionRenderer, AssetsDataCollector $dataCollector) {
     $this->assetCollectionRenderer = $assetCollectionRenderer;
diff --git a/webprofiler/src/Cache/CacheBackendWrapper.php b/webprofiler/src/Cache/CacheBackendWrapper.php
index 4050b41..7c79f98 100644
--- a/webprofiler/src/Cache/CacheBackendWrapper.php
+++ b/webprofiler/src/Cache/CacheBackendWrapper.php
@@ -15,14 +15,14 @@ class CacheBackendWrapper implements CacheBackendInterface, CacheTagsInvalidator
   /**
    * The data collector to register the calls.
    *
-   * @var \Drupal\webprofiler\DataCollector\CacheDataCollector
+   * @var CacheDataCollector
    */
   protected $cacheDataCollector;
 
   /**
    * The wrapped cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
@@ -36,9 +36,9 @@ class CacheBackendWrapper implements CacheBackendInterface, CacheTagsInvalidator
   /**
    * Constructs a new CacheBackendWrapper.
    *
-   * @param \Drupal\webprofiler\DataCollector\CacheDataCollector $cacheDataCollector
+   * @param CacheDataCollector $cacheDataCollector
    *   The cache data collector to inform about cache get calls.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   The wrapped cache backend.
    * @param string $bin
    *   The name of the wrapped cache bin.
diff --git a/webprofiler/src/Cache/CacheFactoryWrapper.php b/webprofiler/src/Cache/CacheFactoryWrapper.php
index d37e894..1aa2c18 100644
--- a/webprofiler/src/Cache/CacheFactoryWrapper.php
+++ b/webprofiler/src/Cache/CacheFactoryWrapper.php
@@ -17,30 +17,30 @@ class CacheFactoryWrapper implements CacheFactoryInterface, ContainerAwareInterf
   /**
    * The cache factory.
    *
-   * @var \Drupal\Core\Cache\CacheFactoryInterface
+   * @var CacheFactoryInterface
    */
   protected $cacheFactory;
 
   /**
    * The cache data collector.
    *
-   * @var \Drupal\webprofiler\DataCollector\CacheDataCollector
+   * @var CacheDataCollector
    */
   protected $cacheDataCollector;
 
   /**
    * All wrapped cache backends.
    *
-   * @var \Drupal\webprofiler\Cache\CacheBackendWrapper[]
+   * @var CacheBackendWrapper[]
    */
   protected $cacheBackends = [];
 
   /**
    * Creates a new CacheFactoryWrapper instance.
    *
-   * @param \Drupal\Core\Cache\CacheFactoryInterface $cache_factory
+   * @param CacheFactoryInterface $cache_factory
    *   The cache factory.
-   * @param \Drupal\webprofiler\DataCollector\CacheDataCollector $cacheDataCollector
+   * @param CacheDataCollector $cacheDataCollector
    *   The cache data collector.
    */
   public function __construct(CacheFactoryInterface $cache_factory, CacheDataCollector $cacheDataCollector) {
