modules/contrib/crouton/crouton.module
modules/contrib/crouton/src/Form/SettingsForm.php
modules/contrib/crouton/src/MenuBasedBreadcrumbBuilder.php
modules/contrib/crouton/tests/src/Functional/MenuBasedBreadcrumbBuilderFunctionalTest.php
modules/contrib/crouton/tests/src/Unit/MenuBasedBreadcrumbBuilderTest.php

3 files with changes
====================

1) modules/contrib/crouton/tests/src/Unit/MenuBasedBreadcrumbBuilderTest.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * The admin context service.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;

@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
       ->method('getRouteObject')
       ->willReturn($this->createMock(Route::class));

-    $cache_contexts_manager = $this->getMockBuilder(CacheContextsManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock(CacheContextsManager::class);
     $cache_contexts_manager
       ->method('assertValidTokens')
       ->willReturn(TRUE);
@@ @@
    * @param array $links
    *   A list of active Drupal core Link object sequences, grouped by menu name.
    *
-   * @return \Drupal\crouton\MenuBasedBreadcrumbBuilder
+   * @return MenuBasedBreadcrumbBuilder
    *   The breadcrumb builder.
    */
   protected function getBuilderWithConfigAndMenuLinks(array $config = [], array $links = []): MenuBasedBreadcrumbBuilder {
@@ @@
   /**
    * Convert the supplied Drupal core Link and plugin ID into a menu link.
    *
-   * @param \Drupal\Core\Link $link
+   * @param Link $link
    *   The link to convert to a menu link.
    * @param string $plugin_id
    *   The plugin ID to use for the resulting menu link.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface
+   * @return MenuLinkInterface
    *   The resulting menu link.
    */
   protected function getMenuLinkFromCoreLinkAndPluginId(Link $link, string $plugin_id): MenuLinkInterface {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/crouton/src/MenuBasedBreadcrumbBuilder.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * The admin context service.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;

@@ @@
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The menu active trail service.
    *
-   * @var \Drupal\Core\Menu\MenuActiveTrailInterface
+   * @var MenuActiveTrailInterface
    */
   protected $menuActiveTrail;

@@ @@
   /**
    * The menu link manager service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;

@@ @@
    * @param array $links
    *   The breadcrumb link sequence, passed by reference.
    *
-   * @return \Drupal\Core\Cache\CacheableMetadata
+   * @return CacheableMetadata
    *   Additional cacheable metadata accrued by this method.
    */
   protected function addMissingFrontLink(array &$links): CacheableMetadata {
@@ @@
   /**
    * Get the configuration for this breadcrumb builder.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The configuration for this breadcrumb builder.
    */
   protected function config(): ImmutableConfig {
@@ @@
    * This method will return NULL if a menu has not been selected in this
    * module's configuration for generating breadcrumbs.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface
+   * @return MenuLinkInterface
    *   The active menu link in the configured menu tree.
    */
   protected function getActiveLink(): ?MenuLinkInterface {
@@ @@
    * This method will produce an empty sequence if a menu has not been selected
    * in this module's configuration for generating breadcrumbs.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface[]
+   * @return MenuLinkInterface[]
    *   The active menu trail as a series of menu link plugins.
    */
   protected function getActiveTrailLinks(): array {
@@ @@
   /**
    * Check whether the supplied link is the active menu link.
    *
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link
+   * @param MenuLinkInterface $menu_link
    *   The link which needs to be checked.
    *
    * @return bool
@@ @@
   /**
    * Check if a menu link is applicable to this module's configured rules.
    *
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link
+   * @param MenuLinkInterface $menu_link
    *   The link which needs to be checked for applicability.
    *
    * @return bool
@@ @@
    *
    * This method may return NULL if the menu link is not applicable.
    *
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link
+   * @param MenuLinkInterface $menu_link
    *   The link which needs to be processed.
    *
-   * @return \Drupal\Core\Link|null
+   * @return Link|null
    *   A plain link produced from the supplied menu link, or NULL.
    */
   protected function processMenuLink(MenuLinkInterface $menu_link): ?Link {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/crouton/src/Form/SettingsForm.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

