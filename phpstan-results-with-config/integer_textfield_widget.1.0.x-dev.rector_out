modules/contrib/integer_textfield_widget/src/Plugin/Field/FieldWidget/IntegerTextfieldWidget.php
modules/contrib/integer_textfield_widget/tests/src/Functional/IntegerTextfieldWidgetTest.php

1 file with changes
===================

1) modules/contrib/integer_textfield_widget/tests/src/Functional/IntegerTextfieldWidgetTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\integer_textfield_widget\Functional;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType(['type' => 'article']);
@@ @@
       'bundle' => $bundle,
     ])->save();

-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = $this->container->get('entity_type.manager');

-    /** @var \Drupal\Core\Entity\Entity\EntityFormDisplay $form_display */
+    /** @var EntityFormDisplay $form_display */
     $form_display = $entity_type_manager->getStorage('entity_form_display')
       ->load('node.article.default');

@@ @@
       'field_serial_number[0][value]' => "Invalid test",
     ];

-    $this->drupalPostForm(NULL, $edit, $this->t('Save'));
-    $this->assertText('Serial number is not a valid number.');
+    $this->submitForm($edit, $this->t('Save'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Serial number is not a valid number.');

     // Try the basic entry with a valid field.
     $edit = [
@@ @@
       'field_serial_number[0][value]' => "12345678987654321",
     ];

-    $this->drupalPostForm(NULL, $edit, $this->t('Save'));
+    $this->submitForm($edit, $this->t('Save'));
     $this->assertSession()->statusCodeEquals(200);
     $t_args = ['@type' => $bundle, '%title' => $title];
-    $this->assertText(strip_tags($this->t('@type %title has been created.', $t_args)), 'The node was created.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(strip_tags($this->t('@type %title has been created.', $t_args)));

   }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

