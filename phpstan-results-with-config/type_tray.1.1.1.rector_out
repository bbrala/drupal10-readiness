modules/contrib/type_tray/src/Controller/TypeTrayController.php
modules/contrib/type_tray/src/Form/TypeTraySettingsForm.php
modules/contrib/type_tray/src/Routing/TypeTrayRouteSubscriber.php
modules/contrib/type_tray/tests/src/FunctionalJavascript/ConfigSettingsFormTest.php
modules/contrib/type_tray/tests/src/FunctionalJavascript/FavoritesTest.php
modules/contrib/type_tray/tests/src/FunctionalJavascript/FunctionalTest.php
modules/contrib/type_tray/tests/src/FunctionalJavascript/TypeTrayWebDriverTestBase.php
modules/contrib/type_tray/type_tray.module
modules/contrib/type_tray/type_tray.post_update.php

6 files with changes
====================

1) modules/contrib/type_tray/tests/src/FunctionalJavascript/TypeTrayWebDriverTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\type_tray\FunctionalJavascript;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\file\Entity\File;
@@ @@
   /**
    * The admin user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Place some blocks to make our lives easier down the road.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/type_tray/tests/src/FunctionalJavascript/FunctionalTest.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $session = $this->getSession();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/type_tray/tests/src/FunctionalJavascript/ConfigSettingsFormTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a content type to be used in the test.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/type_tray/src/Routing/TypeTrayRouteSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\type_tray\Routing;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\RouteSubscriberBase;
 use Drupal\Core\Routing\RoutingEvents;
 use Symfony\Component\Routing\RouteCollection;
@@ @@
   /**
    * The Entity Type Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/type_tray/src/Form/TypeTraySettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\type_tray\Form;

+use Drupal\node\Entity\NodeType;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
@@ @@
   /**
    * The Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The cache tags invalidator service.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;

@@ @@
       return;
     }
     $new_categories = static::extractCategoriesFromString($form_state->getValue('categories', []));
-    /** @var \Drupal\node\Entity\NodeType[] $types */
+    /** @var NodeType[] $types */
     $types = $this->entityTypeManager->getStorage('node_type')->loadMultiple();
     $removed = array_diff_key($old_categories, $new_categories);
     $cant_remove = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/type_tray/src/Controller/TypeTrayController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\type_tray\Controller;

+use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\Component\Utility\SortArray;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Link;
@@ @@
   /**
    * The cache tags invalidator service.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;

@@ @@
   /**
    * Override the addPage so we are able to display it our way.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return array
@@ @@
         $build['#items'][$category][$type->id()] = [
           '#theme' => 'type_tray_teaser',
           '#content_type_link' => Link::createFromRoute($type->label(), 'node.add', ['node_type' => $type->id()]),
-          '#thumbnail_url' => !empty($settings['type_thumbnail']) ? $settings['type_thumbnail'] : '/' . drupal_get_path('module', 'type_tray') .  static::TYPE_TRAY_DEFAULT_THUMBNAIL_PATH,
+          '#thumbnail_url' => !empty($settings['type_thumbnail']) ? $settings['type_thumbnail'] : '/' . \Drupal::service('extension.list.module')->getPath('type_tray') .  static::TYPE_TRAY_DEFAULT_THUMBNAIL_PATH,
           '#thumbnail_alt' => $this->t('Thumbnail of a @label content type.', [
             '@label' => $type->label(),
           ]),
-          '#icon_url' => !empty($settings['type_icon']) ? $settings['type_icon'] : '/' . drupal_get_path('module', 'type_tray') . static::TYPE_TRAY_DEFAULT_ICON_PATH,
+          '#icon_url' => !empty($settings['type_icon']) ? $settings['type_icon'] : '/' . \Drupal::service('extension.list.module')->getPath('type_tray') . static::TYPE_TRAY_DEFAULT_ICON_PATH,
           '#icon_alt' => $this->t('Icon of a @label content type.', [
             '@label' => $type->label(),
           ]),
@@ @@
   /**
    * Helper to check the weight on each type and sort by them.
    *
-   * @param \Drupal\node\Entity\NodeType[] $types
+   * @param NodeType[] $types
    *   An indexed array of node types to sort. Note that if an associative
    *   array is passed in, the keys will be lost.
    *
-   * @return \Drupal\node\Entity\NodeType[]
+   * @return NodeType[]
    *   The same array passed in, but sorted by the 'type_weight' third-party
    *   setting. Will use weight=0 if no value is defined for this setting.
    */
@@ @@
     $categories = static::getTypeTrayCategories();
     $uncategorized = [static::UNCATEGORIZED_KEY => $categories[static::UNCATEGORIZED_KEY]];

-    /** @var \Drupal\node\Entity\NodeType $type */
+    /** @var NodeType $type */
     $type = \Drupal::entityTypeManager()
       ->getStorage('node_type')
       ->load($type_id);
@@ @@
    * @param string $op
    *   Either 'add' or 'remove', indicating to add or remove the type from
    *   the favorites list.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    */
   public function processFavorites($type, $op, Request $request) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

