diff --git a/preview_link.module b/preview_link.module
index 8cac41c..e0ca728 100644
--- a/preview_link.module
+++ b/preview_link.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\ContentEntityType;
 /**
  * @file
  * Module file.
@@ -21,7 +22,7 @@ function preview_link_entity_type_alter(array &$entity_types) {
     return $type->isRevisionable();
   });
 
-  /** @var \Drupal\Core\Entity\ContentEntityType $type */
+  /** @var ContentEntityType $type */
   foreach ($supported_entity_types as $type) {
     $providers = $type->getRouteProviderClasses() ?: [];
     if (empty($providers['preview_link'])) {
diff --git a/src/Access/PreviewEnabledAccessCheck.php b/src/Access/PreviewEnabledAccessCheck.php
index 3cf178e..144eeb3 100644
--- a/src/Access/PreviewEnabledAccessCheck.php
+++ b/src/Access/PreviewEnabledAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_link\Access;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -17,7 +18,7 @@ class PreviewEnabledAccessCheck implements AccessInterface {
   /**
    * The module settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -50,7 +51,7 @@ class PreviewEnabledAccessCheck implements AccessInterface {
   /**
    * Check if the entity type and bundle are enabled.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    *
    * @return bool
diff --git a/src/Access/PreviewLinkAccessCheck.php b/src/Access/PreviewLinkAccessCheck.php
index 26f7a6f..705f672 100644
--- a/src/Access/PreviewLinkAccessCheck.php
+++ b/src/Access/PreviewLinkAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_link\Access;
 
+use Drupal\preview_link\Entity\PreviewLinkInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -15,14 +16,14 @@ class PreviewLinkAccessCheck implements AccessInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * PreviewLinkAccessCheck constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
@@ -32,12 +33,12 @@ class PreviewLinkAccessCheck implements AccessInterface {
   /**
    * Checks access to the node add page for the node type.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    * @param string $preview_token
    *   The preview token.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   A \Drupal\Core\Access\AccessInterface value.
    */
   public function access(EntityInterface $entity = NULL, $preview_token = NULL) {
@@ -48,7 +49,7 @@ class PreviewLinkAccessCheck implements AccessInterface {
       return $neutral;
     }
 
-    /** @var \Drupal\preview_link\Entity\PreviewLinkInterface $preview_link */
+    /** @var PreviewLinkInterface $preview_link */
     $preview_link = $this->entityTypeManager->getStorage('preview_link')->getPreviewLink($entity);
 
     // If we can't find a valid preview link then ignore this.
diff --git a/src/Controller/PreviewLinkController.php b/src/Controller/PreviewLinkController.php
index 6ea67b9..66e6308 100644
--- a/src/Controller/PreviewLinkController.php
+++ b/src/Controller/PreviewLinkController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_link\Controller;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Controller\ControllerBase;
 
 /**
@@ -33,7 +34,7 @@ class PreviewLinkController extends ControllerBase {
   /**
    * Resolve the entity being previewed.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   The entity.
    */
   protected function resolveEntity() {
diff --git a/src/Entity/PreviewLinkInterface.php b/src/Entity/PreviewLinkInterface.php
index ebc9319..cab76b2 100644
--- a/src/Entity/PreviewLinkInterface.php
+++ b/src/Entity/PreviewLinkInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_link\Entity;
 
+use Drupal\Core\Url;
 use Drupal\Core\Entity\ContentEntityInterface;
 
 /**
@@ -12,7 +13,7 @@ interface PreviewLinkInterface extends ContentEntityInterface {
   /**
    * The URL for this preview link.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The url object.
    */
   public function getUrl();
diff --git a/src/Form/PreviewLinkForm.php b/src/Form/PreviewLinkForm.php
index 96503cf..0709876 100644
--- a/src/Form/PreviewLinkForm.php
+++ b/src/Form/PreviewLinkForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\preview_link\Form;
 
+use Drupal\preview_link\PreviewLinkStorageInterface;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\ContentEntityForm;
@@ -23,31 +25,31 @@ class PreviewLinkForm extends ContentEntityForm {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Calculates link expiry time.
    *
-   * @var \Drupal\preview_link\LinkExpiry
+   * @var LinkExpiry
    */
   protected $linkExpiry;
 
   /**
    * PreviewLinkForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\preview_link\LinkExpiry $link_expiry
+   * @param LinkExpiry $link_expiry
    *   Calculates link expiry time.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info, TimeInterface $time, DateFormatterInterface $date_formatter, LinkExpiry $link_expiry, MessengerInterface $messenger) {
@@ -82,7 +84,7 @@ class PreviewLinkForm extends ContentEntityForm {
    * {@inheritdoc}
    */
   public function getEntityFromRouteMatch(RouteMatchInterface $route_match, $entity_type_id) {
-    /** @var \Drupal\preview_link\PreviewLinkStorageInterface $storage */
+    /** @var PreviewLinkStorageInterface $storage */
     $storage = $this->entityTypeManager->getStorage('preview_link');
     $related_entity = $this->getRelatedEntity();
     if (!$preview_link = $storage->getPreviewLink($related_entity)) {
@@ -129,7 +131,7 @@ class PreviewLinkForm extends ContentEntityForm {
   /**
    * Attempts to load the entity this preview link will be related to.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *   The content entity interface.
    *
    * @throws \InvalidArgumentException
@@ -165,7 +167,7 @@ class PreviewLinkForm extends ContentEntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function resetLifetime(array &$form, FormStateInterface $form_state) {
diff --git a/src/LinkExpiry.php b/src/LinkExpiry.php
index 608efb8..0313c58 100644
--- a/src/LinkExpiry.php
+++ b/src/LinkExpiry.php
@@ -19,7 +19,7 @@ class LinkExpiry {
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -33,7 +33,7 @@ class LinkExpiry {
   /**
    * LinkExpiry constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
diff --git a/src/Plugin/Derivative/PreviewLinkTasks.php b/src/Plugin/Derivative/PreviewLinkTasks.php
index c3d21c1..e9bfc15 100644
--- a/src/Plugin/Derivative/PreviewLinkTasks.php
+++ b/src/Plugin/Derivative/PreviewLinkTasks.php
@@ -27,7 +27,7 @@ class PreviewLinkTasks extends DeriverBase implements ContainerDeriverInterface
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -36,9 +36,9 @@ class PreviewLinkTasks extends DeriverBase implements ContainerDeriverInterface
    *
    * @param string $base_plugin_id
    *   The base plugin ID.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
    */
   public function __construct($base_plugin_id, EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
@@ -82,7 +82,7 @@ class PreviewLinkTasks extends DeriverBase implements ContainerDeriverInterface
   /**
    * Check if the entity type is supported.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   The entity type we're checking.
    *
    * @return bool
diff --git a/src/PreviewLinkCacheContext.php b/src/PreviewLinkCacheContext.php
index 7e84125..dde0752 100644
--- a/src/PreviewLinkCacheContext.php
+++ b/src/PreviewLinkCacheContext.php
@@ -14,14 +14,14 @@ class PreviewLinkCacheContext implements CacheContextInterface {
   /**
    * Route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Constructs a new PreviewLinkCacheContext.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   Route match.
    */
   public function __construct(RouteMatchInterface $routeMatch) {
diff --git a/src/PreviewLinkHooks.php b/src/PreviewLinkHooks.php
index 012259e..f5536aa 100644
--- a/src/PreviewLinkHooks.php
+++ b/src/PreviewLinkHooks.php
@@ -14,32 +14,32 @@ class PreviewLinkHooks implements ContainerInjectionInterface {
   /**
    * Preview link storage.
    *
-   * @var \Drupal\preview_link\PreviewLinkStorageInterface
+   * @var PreviewLinkStorageInterface
    */
   protected $previewLinkStorage;
 
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Calculates link expiry time.
    *
-   * @var \Drupal\preview_link\LinkExpiry
+   * @var LinkExpiry
    */
   protected $linkExpiry;
 
   /**
    * PreviewLinkHooks constructor.
    *
-   * @param \Drupal\preview_link\PreviewLinkStorageInterface $previewLinkStorage
+   * @param PreviewLinkStorageInterface $previewLinkStorage
    *   Preview link storage.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
-   * @param \Drupal\preview_link\LinkExpiry $linkExpiry
+   * @param LinkExpiry $linkExpiry
    *   Calculates link expiry time.
    */
   public function __construct(PreviewLinkStorageInterface $previewLinkStorage, TimeInterface $time, LinkExpiry $linkExpiry) {
diff --git a/src/PreviewLinkStorage.php b/src/PreviewLinkStorage.php
index 27f5faa..b5b5e23 100644
--- a/src/PreviewLinkStorage.php
+++ b/src/PreviewLinkStorage.php
@@ -25,32 +25,32 @@ class PreviewLinkStorage extends SqlContentEntityStorage implements PreviewLinkS
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new PreviewLinkStorage.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection to be used.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache backend to be used.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Cache\MemoryCache\MemoryCacheInterface|null $memory_cache
+   * @param MemoryCacheInterface|null $memory_cache
    *   The memory cache backend to be used.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid
+   * @param UuidInterface $uuid
    *   The UUID service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
    */
   public function __construct(EntityTypeInterface $entity_type, Connection $database, EntityFieldManagerInterface $entity_field_manager, CacheBackendInterface $cache, LanguageManagerInterface $language_manager, MemoryCacheInterface $memory_cache, EntityTypeBundleInfoInterface $entity_type_bundle_info, EntityTypeManagerInterface $entity_type_manager, UuidInterface $uuid, TimeInterface $time) {
diff --git a/src/PreviewLinkStorageInterface.php b/src/PreviewLinkStorageInterface.php
index f5e780a..bdaf10b 100644
--- a/src/PreviewLinkStorageInterface.php
+++ b/src/PreviewLinkStorageInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_link;
 
+use Drupal\preview_link\Entity\PreviewLinkInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\Sql\SqlEntityStorageInterface;
 
@@ -13,10 +14,10 @@ interface PreviewLinkStorageInterface extends SqlEntityStorageInterface {
   /**
    * Gets the preview link for a given entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The content entity we want the preview link for.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface|false
+   * @return PreviewLinkInterface|false
    *   The preview link entity if it exists otherwise FALSE.
    */
   public function getPreviewLinkForEntity(ContentEntityInterface $entity);
@@ -24,10 +25,10 @@ interface PreviewLinkStorageInterface extends SqlEntityStorageInterface {
   /**
    * Gets the preview link given entity type Id and entity Id.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface|false
+   * @return PreviewLinkInterface|false
    *   The preview link entity if it exists otherwise FALSE.
    */
   public function getPreviewLink(ContentEntityInterface $entity);
@@ -35,10 +36,10 @@ interface PreviewLinkStorageInterface extends SqlEntityStorageInterface {
   /**
    * Creates a new preview link from a content entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The content entity the preview link is for.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface
+   * @return PreviewLinkInterface
    *   The preview link entity.
    */
   public function createPreviewLinkForEntity(ContentEntityInterface $entity);
@@ -51,7 +52,7 @@ interface PreviewLinkStorageInterface extends SqlEntityStorageInterface {
    * @param string $entity_id
    *   The entity id.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface
+   * @return PreviewLinkInterface
    *   The preview link entity.
    */
   public function createPreviewLink($entity_type_id, $entity_id);
diff --git a/src/Routing/PreviewLinkRouteProvider.php b/src/Routing/PreviewLinkRouteProvider.php
index c82503b..209500c 100644
--- a/src/Routing/PreviewLinkRouteProvider.php
+++ b/src/Routing/PreviewLinkRouteProvider.php
@@ -34,10 +34,10 @@ class PreviewLinkRouteProvider implements EntityRouteProviderInterface {
   /**
    * Gets the route for generating and viewing preview links for this entity.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getGeneratePreviewLinkRoute(EntityTypeInterface $entity_type) {
@@ -66,10 +66,10 @@ class PreviewLinkRouteProvider implements EntityRouteProviderInterface {
   /**
    * Gets the preview link route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getPreviewLinkRoute(EntityTypeInterface $entity_type) {
diff --git a/tests/modules/preview_link_test/preview_link_test.module b/tests/modules/preview_link_test/preview_link_test.module
index 2e5e2ce..fdd694a 100644
--- a/tests/modules/preview_link_test/preview_link_test.module
+++ b/tests/modules/preview_link_test/preview_link_test.module
@@ -1,15 +1,16 @@
 <?php
 
+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider;
 /**
  * @file
  * Hooks for preview_link_test.module
  */
-
 /**
  * Implements hook_entity_type_alter().
  */
 function preview_link_test_entity_type_alter(array &$entity_types) {
-  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
+  /** @var EntityTypeInterface[] $entity_types */
   if (isset($entity_types['entity_test_revpub'])) {
     // Fixes entity_test_revpub link templates + route provider, see also
     // https://www.drupal.org/project/drupal/issues/3154413.
@@ -21,7 +22,7 @@ function preview_link_test_entity_type_alter(array &$entity_types) {
       $entityTestRevPub->setLinkTemplate('latest-version', '/entity_test_revpub/manage/{entity_test_revpub}/latest');
     }
     $routeProviders = $entityTestRevPub->getRouteProviderClasses();
-    $routeProviders['html'] = Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider::class;
+    $routeProviders['html'] = DefaultHtmlRouteProvider::class;
     $entityTestRevPub->setHandlerClass('route_provider', $routeProviders);
   }
 }
diff --git a/tests/modules/preview_link_test/src/TimeMachine.php b/tests/modules/preview_link_test/src/TimeMachine.php
index 5d47076..bc135fd 100644
--- a/tests/modules/preview_link_test/src/TimeMachine.php
+++ b/tests/modules/preview_link_test/src/TimeMachine.php
@@ -13,14 +13,14 @@ class TimeMachine implements TimeInterface {
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * TimeMachine constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State.
    */
   public function __construct(StateInterface $state) {
diff --git a/tests/src/Functional/PreviewLinkAccessTest.php b/tests/src/Functional/PreviewLinkAccessTest.php
index 3eab9d7..c92fc95 100644
--- a/tests/src/Functional/PreviewLinkAccessTest.php
+++ b/tests/src/Functional/PreviewLinkAccessTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\preview_link\Functional;
 
+use Drupal\preview_link\Entity\PreviewLinkInterface;
+use Drupal\preview_link\PreviewLinkStorage;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Url;
 use Drupal\preview_link\Entity\PreviewLink;
@@ -156,14 +158,14 @@ class PreviewLinkAccessTest extends BrowserTestBase {
   /**
    * Get a saved preview link for an entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   A content entity.
    *
-   * @return \Drupal\preview_link\Entity\PreviewLinkInterface|null
+   * @return PreviewLinkInterface|null
    *   The preview link, or null if no preview link generated.
    */
   protected function getNewPreviewLinkForEntity(ContentEntityInterface $entity) {
-    /** @var \Drupal\preview_link\PreviewLinkStorage $storage */
+    /** @var PreviewLinkStorage $storage */
     $storage = $this->container->get('entity_type.manager')
       ->getStorage('preview_link');
     return $storage->createPreviewLinkForEntity($entity);
diff --git a/tests/src/Functional/PreviewLinkForwardRevisionTest.php b/tests/src/Functional/PreviewLinkForwardRevisionTest.php
index ee1f93f..eb4a1a5 100644
--- a/tests/src/Functional/PreviewLinkForwardRevisionTest.php
+++ b/tests/src/Functional/PreviewLinkForwardRevisionTest.php
@@ -41,7 +41,7 @@ class PreviewLinkForwardRevisionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->createEditorialWorkflow();
     $this->createContentType(['type' => 'page']);
