modules/contrib/bothive/bothive.module
modules/contrib/bothive/src/Controller/BothiveController.php
modules/contrib/bothive/src/Form/BothiveConfigurationForm.php

2 files with changes
====================

1) modules/contrib/bothive/src/Form/BothiveConfigurationForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bothive\Form;

+use Drupal\system\Plugin\Condition\RequestPath;
 use Drupal\Component\Plugin\Factory\FactoryInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
   /**
    * The request_path condition plugin.
    *
-   * @var \Drupal\system\Plugin\Condition\RequestPath
+   * @var RequestPath
    */
   protected $condition;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bothive/src/Controller/BothiveController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bothive\Controller;

+use Drupal\Core\Config\ConfigFactory;
+use Drupal\Core\Condition\ConditionManager;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\system\Plugin\Condition\RequestPath;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Executable\ExecutableManagerInterface;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * The condition plugin manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $manager;

@@ @@
   /**
    * BothiveController constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory interface.
-   * @param \Drupal\Core\Executable\ExecutableManagerInterface $manager
+   * @param ExecutableManagerInterface $manager
    *   The ConditionManager for building the visibility UI.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ExecutableManagerInterface $manager) {
@@ @@
    * @param array $page
    *   The whole page array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function attachAndInitialise(array &$page) {
-    /** @var \Drupal\system\Plugin\Condition\RequestPath $condition */
+    /** @var RequestPath $condition */
     $condition = $this->manager->createInstance('request_path');
     $condition->setConfiguration($this->configFactory->get('request_path'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 2 files have been changed by Rector                                       

