diff --git a/modules/bootstrap_components_toolkit_ex_icons/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitExIconsLinkButtonFormatter.php b/modules/bootstrap_components_toolkit_ex_icons/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitExIconsLinkButtonFormatter.php
index 021ed9b..010ba30 100644
--- a/modules/bootstrap_components_toolkit_ex_icons/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitExIconsLinkButtonFormatter.php
+++ b/modules/bootstrap_components_toolkit_ex_icons/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitExIconsLinkButtonFormatter.php
@@ -80,7 +80,7 @@ class BootstrapComponentsToolkitExIconsLinkButtonFormatter extends BootstrapComp
   /**
    * Creates a render array from the button text and the selected icon.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The field item.
    *
    * @return string
diff --git a/src/BoostrapComponentsToolkitTwigExtension.php b/src/BoostrapComponentsToolkitTwigExtension.php
index 6d63229..744ae56 100644
--- a/src/BoostrapComponentsToolkitTwigExtension.php
+++ b/src/BoostrapComponentsToolkitTwigExtension.php
@@ -32,7 +32,7 @@ class BoostrapComponentsToolkitTwigExtension extends AbstractExtension {
    * @param mixed $attributes
    *   An Attributes object or array.
    *
-   * @return \Drupal\Core\Template\Attribute
+   * @return Attribute
    *   An Attributes object.
    */
   public function safeCreateAttribute($attributes): Attribute {
diff --git a/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitBadgeFormatter.php b/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitBadgeFormatter.php
index 7b4a051..3c627fa 100644
--- a/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitBadgeFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitBadgeFormatter.php
@@ -73,7 +73,7 @@ class BootstrapComponentsToolkitBadgeFormatter extends FormatterBase {
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $element = [];
     foreach ($items as $delta => $item) {
-      /** @var \Drupal\Core\Field\FieldItemInterface $item */
+      /** @var FieldItemInterface $item */
       $item->getValue('uri');
 
       $element[$delta] = [
@@ -91,7 +91,7 @@ class BootstrapComponentsToolkitBadgeFormatter extends FormatterBase {
   /**
    * Gets the badge content.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   A field item.
    *
    * @return string
@@ -116,10 +116,10 @@ class BootstrapComponentsToolkitBadgeFormatter extends FormatterBase {
   /**
    * Get the url, if present.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   A field item.
    *
-   * @return \Drupal\Core\Url|null
+   * @return Url|null
    *   A Url Objet or null if not found.
    */
   protected function getUrl(FieldItemInterface $item): ?Url {
diff --git a/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitDropdownFormatter.php b/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitDropdownFormatter.php
index eb375df..ce67d38 100644
--- a/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitDropdownFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitDropdownFormatter.php
@@ -28,7 +28,7 @@ class BootstrapComponentsToolkitDropdownFormatter extends FormatterBase implemen
   /**
    * The epath validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
@@ -39,7 +39,7 @@ class BootstrapComponentsToolkitDropdownFormatter extends FormatterBase implemen
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   Defines an interface for entity field definitions.
    * @param array $settings
    *   The formatter settings.
@@ -49,7 +49,7 @@ class BootstrapComponentsToolkitDropdownFormatter extends FormatterBase implemen
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   Path validator service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, PathValidatorInterface $path_validator) {
@@ -234,7 +234,7 @@ class BootstrapComponentsToolkitDropdownFormatter extends FormatterBase implemen
   /**
    * Get the user-defined URL.
    *
-   * @return \Drupal\Core\Url|null
+   * @return Url|null
    *   The URL or null if not present.
    */
   protected function getUrl(): ?Url {
diff --git a/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitLinkButtonFormatter.php b/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitLinkButtonFormatter.php
index 4266ddf..a7afa42 100644
--- a/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitLinkButtonFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/BootstrapComponentsToolkitLinkButtonFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bootstrap_components_toolkit\Plugin\Field\FieldFormatter;
 
+use Drupal\file\Plugin\Field\FieldType\FileItem;
 use Drupal\Core\Url;
 use Drupal\Core\Field\FormatterBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -134,7 +135,7 @@ class BootstrapComponentsToolkitLinkButtonFormatter extends FormatterBase {
    * For mail field types, as they don't support text, we prompt the user
    * on the config form and use it.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The field item.
    *
    * @return string
@@ -149,7 +150,7 @@ class BootstrapComponentsToolkitLinkButtonFormatter extends FormatterBase {
         break;
       case "file":
         // Gets either the description or the filename as a fallback.
-        /** @var \Drupal\file\Plugin\Field\FieldType\FileItem $item */
+        /** @var FileItem $item */
         $description = $item->get('description')->getValue();
         $result = $description ? $description : $item->getEntity()->label();
         break;
@@ -177,10 +178,10 @@ class BootstrapComponentsToolkitLinkButtonFormatter extends FormatterBase {
   /**
    * Gets the button target URL.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The field item.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The button target url.
    */
   protected function getButtonUrl(FieldItemInterface $item): Url {
@@ -192,9 +193,9 @@ class BootstrapComponentsToolkitLinkButtonFormatter extends FormatterBase {
         $result = Url::fromUri('mailto:' . $item->value);
         break;
       case "file":
-        /** @var \Drupal\file\Plugin\Field\FieldType\FileItem $item */
+        /** @var FileItem $item */
         $file = $item->entity;
-        $result = Url::fromUri(file_create_url($file->getFileUri()));
+        $result = \Drupal::service('file_url_generator')->generate($file->getFileUri());
         break;
       default:
         $result = Url::fromUri($item->get('uri')->getValue());
