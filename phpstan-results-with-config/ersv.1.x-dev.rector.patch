diff --git a/ersv.info.yml b/ersv.info.yml
index 613c363..d704794 100644
--- a/ersv.info.yml
+++ b/ersv.info.yml
@@ -1,6 +1,6 @@
 name: EntityReference Separate Selection and Validation
 description: Provides an EntityReference selection plugin that allows to separate selection and validation.
 type: module
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^8.7.7 || ^9 || ^10
 dependencies:
   - ajax_dependency:ajax_dependency
diff --git a/src/Plugin/EntityReferenceSelection/SeparateSelectionAndValidation.php b/src/Plugin/EntityReferenceSelection/SeparateSelectionAndValidation.php
index 4eb89c9..f7bde45 100644
--- a/src/Plugin/EntityReferenceSelection/SeparateSelectionAndValidation.php
+++ b/src/Plugin/EntityReferenceSelection/SeparateSelectionAndValidation.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\ersv\Plugin\EntityReferenceSelection;
 
+use Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface;
+use Drupal\Component\Plugin\DependentPluginInterface;
+use Drupal\Component\Plugin\ConfigurableInterface;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\ajax_dependency\AjaxDependency;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Database\Query\SelectInterface;
@@ -28,25 +32,25 @@ class SeparateSelectionAndValidation extends SelectionPluginBase implements Cont
   /**
    * Selection plugin.
    *
-   * @var null | \Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface | \Drupal\Component\Plugin\DependentPluginInterface | \Drupal\Component\Plugin\ConfigurableInterface
+   * @var null|SelectionInterface|DependentPluginInterface|ConfigurableInterface
    */
   protected $selectionPlugin;
 
   /**
    * Validation plugin.
    *
-   * @var null | \Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface | \Drupal\Component\Plugin\DependentPluginInterface | \Drupal\Component\Plugin\ConfigurableInterface
+   * @var null|SelectionInterface|DependentPluginInterface|ConfigurableInterface
    */
   protected $validationPlugin;
 
   /**
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected $selectionPluginManager;
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
     return new static(
@@ -59,7 +63,7 @@ class SeparateSelectionAndValidation extends SelectionPluginBase implements Cont
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, SelectionPluginManagerInterface $selectionPluginManager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
@@ -79,7 +83,7 @@ class SeparateSelectionAndValidation extends SelectionPluginBase implements Cont
    * @param $configuration
    *
    * @return object
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *
    * @see \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManager::getSelectionHandler
    * @see \Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem::fieldSettingsForm
@@ -199,7 +203,7 @@ class SeparateSelectionAndValidation extends SelectionPluginBase implements Cont
 
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function validateConfigurationForm(array &$form, FormStateInterface $formState) {
     parent::validateConfigurationForm($form, $formState);
@@ -210,7 +214,7 @@ class SeparateSelectionAndValidation extends SelectionPluginBase implements Cont
     $ourForm =& $form['handler']['handler_settings'];
     foreach (['selection', 'validation'] as $what) {
       if ($selectionPluginId = $formState->getValue(['settings', 'handler_settings', $what, 'settings', 'handler'])) {
-        /** @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface $plugin */
+        /** @var SelectionInterface $plugin */
         $subformState = SubformState::createForSubform($ourForm[$what]['settings']['handler_settings'], $formState->getCompleteForm(), $formState);
         $plugin = $this->createInstance($selectionPluginId);
         $plugin->validateConfigurationForm($ourForm[$what]['settings']['handler_settings'], $subformState);
diff --git a/tests/src/Functional/AdminPageTest.php b/tests/src/Functional/AdminPageTest.php
index 47c78ae..15e2826 100644
--- a/tests/src/Functional/AdminPageTest.php
+++ b/tests/src/Functional/AdminPageTest.php
@@ -33,7 +33,7 @@ class AdminPageTest extends BrowserTestBase {
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
