modules/contrib/webform_double_opt_in/src/Event/GetSubmissionStateEvent.php
modules/contrib/webform_double_opt_in/src/Event/GetSubmissionStateOptionsEvent.php
modules/contrib/webform_double_opt_in/src/Event/OptedInEvent.php
modules/contrib/webform_double_opt_in/src/Event/WebformDoubleOptInEvents.php
modules/contrib/webform_double_opt_in/src/EventSubscriber/GetSubmissionStateEventSubscriber.php
modules/contrib/webform_double_opt_in/src/EventSubscriber/GetSubmissionStateOptionsEventSubscriber.php
modules/contrib/webform_double_opt_in/src/Plugin/WebformHandler/DoubleOptInCompatibleEmailWebformHandler.php
modules/contrib/webform_double_opt_in/src/Plugin/WebformHandler/DoubleOptInEmailWebformHandler.php
modules/contrib/webform_double_opt_in/webform_double_opt_in.module

6 files with changes
====================

1) modules/contrib/webform_double_opt_in/webform_double_opt_in.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher;
 /**
  * @file
  * Contains webform_double_opt_in.module.
@@ @@
  *
  * @param string $op
  *   Either "confirm" or "cancel".
- * @param \Drupal\email_confirmer\EmailConfirmationInterface $confirmation
+ * @param EmailConfirmationInterface $confirmation
  *   The confirmation process.
  */
 function webform_double_opt_in_email_confirmer($op, EmailConfirmationInterface $confirmation) {
   if ($op === 'confirm') {
     /* Dispatch event for opt-in */
-    /** @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher $event_dispatcher */
+    /** @var ContainerAwareEventDispatcher $event_dispatcher */
     $event_dispatcher = Drupal::service('event_dispatcher');
     $opted_in_event = new OptedInEvent(
       $confirmation->getProperty('webform_id'),
@@ @@
       $confirmation->getProperty('webform_submission_source_entity_id'),
       $confirmation->getEmail()
     );
-    $event_dispatcher->dispatch(WebformDoubleOptInEvents::OPTED_IN, $opted_in_event);
+    $event_dispatcher->dispatch($opted_in_event, WebformDoubleOptInEvents::OPTED_IN);

     // Set the opt-in status to confirmed.
     $webform_submission_id = $confirmation->getProperty('webform_submission_id');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * MakeDispatchFirstArgumentEventRector


2) modules/contrib/webform_double_opt_in/src/Plugin/WebformHandler/DoubleOptInEmailWebformHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_double_opt_in\Plugin\WebformHandler;

+use Drupal\email_confirmer\EmailConfirmerManagerInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\email_confirmer\EmailConfirmationInterface;
@@ @@
   /**
    * The email confirmer manager.
    *
-   * @var \Drupal\email_confirmer\EmailConfirmerManagerInterface
+   * @var EmailConfirmerManagerInterface
    */
   protected $eMailConfirmer;

@@ @@
   /**
    * Sets the double opt-in status to FALSE.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   Values of the form submission.
    */
   public function preSave(WebformSubmissionInterface $webform_submission) {
@@ @@
   /**
    * Sends opt-in e-mail if the opt_in_status is pending mail.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   The Webform submission.
    * @param bool $update
    *   Update flag.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/webform_double_opt_in/src/Plugin/WebformHandler/DoubleOptInCompatibleEmailWebformHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_double_opt_in\Plugin\WebformHandler;

+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
     ];

     $getSubmissionStateOptionsEvent = new GetSubmissionStateOptionsEvent($defaultStateOptions);
-    $this->eventDispatcher->dispatch(WebformDoubleOptInEvents::GET_SUBMISSION_STATE_OPTIONS, $getSubmissionStateOptionsEvent);
+    $this->eventDispatcher->dispatch($getSubmissionStateOptionsEvent, WebformDoubleOptInEvents::GET_SUBMISSION_STATE_OPTIONS);

     $submissionStateOptions = $getSubmissionStateOptionsEvent->getSubmissionStateOptions();

@@ @@
   /**
    * Returns the webform submission state.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webformSubmission
+   * @param WebformSubmissionInterface $webformSubmission
    *   The webform submission to get the state for.
    */
   protected function getSubmissionState(WebformSubmissionInterface $webformSubmission) {
@@ @@
     $state = $webformSubmission->getState();

     $getSubmissionStateEvent = new GetSubmissionStateEvent($webformSubmission, $state);
-    $this->eventDispatcher->dispatch(WebformDoubleOptInEvents::GET_SUBMISSION_STATE, $getSubmissionStateEvent);
+    $this->eventDispatcher->dispatch($getSubmissionStateEvent, WebformDoubleOptInEvents::GET_SUBMISSION_STATE);

     $state = $getSubmissionStateEvent->getState();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/webform_double_opt_in/src/Event/OptedInEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_double_opt_in\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class OptedInEvent.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/webform_double_opt_in/src/Event/GetSubmissionStateOptionsEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_double_opt_in\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 // TODO: Add interface.
 /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/webform_double_opt_in/src/Event/GetSubmissionStateEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\webform_double_opt_in\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\webform\WebformSubmissionInterface;
-use Symfony\Component\EventDispatcher\Event;

 // TODO: Add interface.
 /**
@@ @@
   /**
    * The Webform submission.
    *
-   * @var \Drupal\webform\WebformSubmissionInterface
+   * @var WebformSubmissionInterface
    */
   protected $webformSubmission;

@@ @@
   /**
    * GetSubmissionStateEvent constructor.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webform_submission
+   * @param WebformSubmissionInterface $webform_submission
    *   The Webform submission.
    * @param string $state
    *   The Webform submission state.
@@ @@
   /**
    * Gets the Webform submission.
    *
-   * @return \Drupal\webform\WebformSubmissionInterface
+   * @return WebformSubmissionInterface
    *   The Webform submission.
    */
   public function getSubmission() {
@@ @@
   /**
    * Sets the Webform submission.
    *
-   * @param \Drupal\webform\WebformSubmissionInterface $webformSubmission
+   * @param WebformSubmissionInterface $webformSubmission
    *   The Webform submission.
    */
   public function setSubmission(WebformSubmissionInterface $webformSubmission) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [WARNING] 3 nodes were removed                                                 

 [OK] 6 files have been changed by Rector                                       

