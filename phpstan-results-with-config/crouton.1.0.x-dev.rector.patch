diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index c9912ea..8c21443 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -25,7 +25,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/src/MenuBasedBreadcrumbBuilder.php b/src/MenuBasedBreadcrumbBuilder.php
index c9e366b..a00d6ff 100644
--- a/src/MenuBasedBreadcrumbBuilder.php
+++ b/src/MenuBasedBreadcrumbBuilder.php
@@ -32,28 +32,28 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * The admin context service.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The menu active trail service.
    *
-   * @var \Drupal\Core\Menu\MenuActiveTrailInterface
+   * @var MenuActiveTrailInterface
    */
   protected $menuActiveTrail;
 
   /**
    * The menu link manager service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;
 
@@ -77,7 +77,7 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * @param array $links
    *   The breadcrumb link sequence, passed by reference.
    *
-   * @return \Drupal\Core\Cache\CacheableMetadata
+   * @return CacheableMetadata
    *   Additional cacheable metadata accrued by this method.
    */
   protected function addMissingFrontLink(array &$links): CacheableMetadata {
@@ -163,7 +163,7 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * Get the configuration for this breadcrumb builder.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   The configuration for this breadcrumb builder.
    */
   protected function config(): ImmutableConfig {
@@ -176,7 +176,7 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * This method will return NULL if a menu has not been selected in this
    * module's configuration for generating breadcrumbs.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface
+   * @return MenuLinkInterface
    *   The active menu link in the configured menu tree.
    */
   protected function getActiveLink(): ?MenuLinkInterface {
@@ -193,7 +193,7 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * This method will produce an empty sequence if a menu has not been selected
    * in this module's configuration for generating breadcrumbs.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface[]
+   * @return MenuLinkInterface[]
    *   The active menu trail as a series of menu link plugins.
    */
   protected function getActiveTrailLinks(): array {
@@ -210,7 +210,7 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * Check whether the supplied link is the active menu link.
    *
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link
+   * @param MenuLinkInterface $menu_link
    *   The link which needs to be checked.
    *
    * @return bool
@@ -227,7 +227,7 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * Check if a menu link is applicable to this module's configured rules.
    *
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link
+   * @param MenuLinkInterface $menu_link
    *   The link which needs to be checked for applicability.
    *
    * @return bool
@@ -268,10 +268,10 @@ class MenuBasedBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    *
    * This method may return NULL if the menu link is not applicable.
    *
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link
+   * @param MenuLinkInterface $menu_link
    *   The link which needs to be processed.
    *
-   * @return \Drupal\Core\Link|null
+   * @return Link|null
    *   A plain link produced from the supplied menu link, or NULL.
    */
   protected function processMenuLink(MenuLinkInterface $menu_link): ?Link {
diff --git a/tests/src/Unit/MenuBasedBreadcrumbBuilderTest.php b/tests/src/Unit/MenuBasedBreadcrumbBuilderTest.php
index 8b802d6..8ffc91e 100644
--- a/tests/src/Unit/MenuBasedBreadcrumbBuilderTest.php
+++ b/tests/src/Unit/MenuBasedBreadcrumbBuilderTest.php
@@ -37,14 +37,14 @@ class MenuBasedBreadcrumbBuilderTest extends UnitTestCase {
   /**
    * The admin context service.
    *
-   * @var \Drupal\Core\Routing\AdminContext
+   * @var AdminContext
    */
   protected $adminContext;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
@@ -64,9 +64,7 @@ class MenuBasedBreadcrumbBuilderTest extends UnitTestCase {
       ->method('getRouteObject')
       ->willReturn($this->createMock(Route::class));
 
-    $cache_contexts_manager = $this->getMockBuilder(CacheContextsManager::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $cache_contexts_manager = $this->createMock(CacheContextsManager::class);
     $cache_contexts_manager
       ->method('assertValidTokens')
       ->willReturn(TRUE);
@@ -84,7 +82,7 @@ class MenuBasedBreadcrumbBuilderTest extends UnitTestCase {
    * @param array $links
    *   A list of active Drupal core Link object sequences, grouped by menu name.
    *
-   * @return \Drupal\crouton\MenuBasedBreadcrumbBuilder
+   * @return MenuBasedBreadcrumbBuilder
    *   The breadcrumb builder.
    */
   protected function getBuilderWithConfigAndMenuLinks(array $config = [], array $links = []): MenuBasedBreadcrumbBuilder {
@@ -112,12 +110,12 @@ class MenuBasedBreadcrumbBuilderTest extends UnitTestCase {
   /**
    * Convert the supplied Drupal core Link and plugin ID into a menu link.
    *
-   * @param \Drupal\Core\Link $link
+   * @param Link $link
    *   The link to convert to a menu link.
    * @param string $plugin_id
    *   The plugin ID to use for the resulting menu link.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface
+   * @return MenuLinkInterface
    *   The resulting menu link.
    */
   protected function getMenuLinkFromCoreLinkAndPluginId(Link $link, string $plugin_id): MenuLinkInterface {
