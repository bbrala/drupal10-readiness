diff --git a/composer.json b/composer.json
index af3f05b..f28856b 100644
--- a/composer.json
+++ b/composer.json
@@ -15,8 +15,8 @@
     "source": "https://git.drupalcode.org/project/entity_browser_block"
   },
   "require": {
-    "drupal/core": "^8.8||^9.0",
-    "drupal/entity_browser": "^1.0||^2.0"
+    "drupal/entity_browser": "^1.0||^2.0",
+    "drupal/core": "^9.1 || ^10"
   },
   "require-dev": {
     "drupal/ctools": "^3.0"
diff --git a/entity_browser_block.info.yml b/entity_browser_block.info.yml
index 1bd6069..70e8289 100644
--- a/entity_browser_block.info.yml
+++ b/entity_browser_block.info.yml
@@ -1,8 +1,7 @@
 name: Entity Browser Block
 type: module
 description: Derives block plugins for every Entity Browser on your site
-core: 8.x
-core_version_requirement: '^8 || ^9'
+core_version_requirement: ^9.1 || ^10
 package: Media
 dependencies:
   - drupal:block
diff --git a/src/Plugin/Block/EntityBrowserBlock.php b/src/Plugin/Block/EntityBrowserBlock.php
index cdc02bf..87b28bf 100644
--- a/src/Plugin/Block/EntityBrowserBlock.php
+++ b/src/Plugin/Block/EntityBrowserBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_browser_block\Plugin\Block;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Component\Utility\SortArray;
 use Drupal\Core\Block\BlockBase;
@@ -27,14 +28,14 @@ class EntityBrowserBlock extends BlockBase implements ContainerFactoryPluginInte
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity display repository service.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
@@ -61,9 +62,9 @@ class EntityBrowserBlock extends BlockBase implements ContainerFactoryPluginInte
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityDisplayRepositoryInterface $entity_display_repository) {
@@ -208,7 +209,7 @@ class EntityBrowserBlock extends BlockBase implements ContainerFactoryPluginInte
    * @param array $ids
    *   An array of IDs.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   An array of loaded entities, keyed by an ID.
    */
   public static function loadEntitiesByIDs($ids) {
diff --git a/src/Plugin/Derivative/EntityBrowserBlockDeriver.php b/src/Plugin/Derivative/EntityBrowserBlockDeriver.php
index e395501..8dfe503 100644
--- a/src/Plugin/Derivative/EntityBrowserBlockDeriver.php
+++ b/src/Plugin/Derivative/EntityBrowserBlockDeriver.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_browser_block\Plugin\Derivative;
 
+use Drupal\entity_browser\EntityBrowserInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Plugin\Discovery\ContainerDeriverInterface;
@@ -15,14 +16,14 @@ class EntityBrowserBlockDeriver extends DeriverBase implements ContainerDeriverI
   /**
    * The browser storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $browserStorage;
 
   /**
    * Constructs a EntityBrowserBlockDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $browser_storage
+   * @param EntityStorageInterface $browser_storage
    *   The browser storage.
    */
   public function __construct(EntityStorageInterface $browser_storage) {
@@ -43,7 +44,7 @@ class EntityBrowserBlockDeriver extends DeriverBase implements ContainerDeriverI
    * {@inheritdoc}
    */
   public function getDerivativeDefinitions($base_plugin_definition) {
-    /** @var \Drupal\entity_browser\EntityBrowserInterface[] $browsers */
+    /** @var EntityBrowserInterface[] $browsers */
     $browsers = $this->browserStorage->loadMultiple();
     // Reset the discovered definitions.
     $this->derivatives = [];
diff --git a/tests/src/FunctionalJavascript/EntityBrowserBlockTest.php b/tests/src/FunctionalJavascript/EntityBrowserBlockTest.php
index 7b7a6e3..cd08974 100644
--- a/tests/src/FunctionalJavascript/EntityBrowserBlockTest.php
+++ b/tests/src/FunctionalJavascript/EntityBrowserBlockTest.php
@@ -61,7 +61,7 @@ class EntityBrowserBlockTest extends EntityBrowserWebDriverTestBase {
     $this->assertSession()->pageTextContains('alpaca.jpg');
 
     // Save the block.
-    $this->drupalPostForm(NULL, ['region' => 'content'], 'Save block');
+    $this->submitForm(['region' => 'content'], 'Save block');
     $this->assertSession()->pageTextContains('The block configuration has been saved.');
 
     // Edit the block and ensure the configuration persists.
