modules/contrib/legalweb_cloud/legalweb_cloud.install
modules/contrib/legalweb_cloud/legalweb_cloud.module
modules/contrib/legalweb_cloud/modules/legalweb_cloud_enhancements/legalweb_cloud_enhancements.module
modules/contrib/legalweb_cloud/modules/legalweb_cloud_enhancements/src/Form/LWCEnhancementsSettings.php
modules/contrib/legalweb_cloud/src/Controller/LWCController.php
modules/contrib/legalweb_cloud/src/Form/SettingsForm.php
modules/contrib/legalweb_cloud/src/LWCManager.php
modules/contrib/legalweb_cloud/src/Plugin/Block/DataPrivacyBlock.php
modules/contrib/legalweb_cloud/src/Plugin/Block/ImprintBlock.php
modules/contrib/legalweb_cloud/src/Routing/DynamicRoutes.php

4 files with changes
====================

1) modules/contrib/legalweb_cloud/src/Routing/DynamicRoutes.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * DynamicBlockPages constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
     $this->config = $config_factory->get(LWCManager::SETTINGS);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/legalweb_cloud/src/LWCManager.php:3

    ---------- begin diff ----------
@@ @@
 namespace Drupal\legalweb_cloud;


+use Drupal\Core\GeneratedUrl;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Http\ClientFactory;
@@ @@
   /**
    * Generate Callback URL
    *
-   * @return \Drupal\Core\GeneratedUrl|string
+   * @return GeneratedUrl|string
    */
   public function getCallbackUrl() {
     if (empty($this->callback_url)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/legalweb_cloud/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\legalweb_cloud\Form;

+use Drupal\Core\ProxyClass\Routing\RouteBuilder;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Managing class for rebuilding the router table.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;

@@ @@
   /**
    * LegalWebCloud manager service.
    *
-   * @var \Drupal\legalweb_cloud\LWCManager
+   * @var LWCManager
    */
   protected $manager;

@@ @@
   /**
    * SettingsForm class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $route_builder
+   * @param RouteBuilder $route_builder
    *   Managing class for rebuilding the router table.
-   * @param \Drupal\legalweb_cloud\LWCManager $manager
+   * @param LWCManager $manager
    *   LegalWebCloud manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, $route_builder, LWCManager $manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/legalweb_cloud/legalweb_cloud.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Render\BubbleableMetadata;
+use Drupal\Core\Render\Markup;
 /**
  * @file
  * Contains legalweb.module.
@@ @@
   return $info;
 }

-function legalweb_cloud_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
+function legalweb_cloud_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
   if ($type !== 'legalweb_cloud') {
     return [];
   }
@@ @@
   foreach ($tokens as $name => $original) {
     switch ($name) {
       case 'imprint':
-        $replacements[$original] = \Drupal\Core\Render\Markup::create($manager->getImprintHTML($langcode));
+        $replacements[$original] = Markup::create($manager->getImprintHTML($langcode));
         break;

       case 'data_privacy':
-        $replacements[$original] = \Drupal\Core\Render\Markup::create($manager->getDataPrivacyHTML($langcode));
+        $replacements[$original] = Markup::create($manager->getDataPrivacyHTML($langcode));
         break;

       default:
@@ @@
   }

   return TRUE;
-}
+}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

