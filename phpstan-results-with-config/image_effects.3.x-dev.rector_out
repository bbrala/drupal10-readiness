modules/contrib/image_effects/image_effects.api.php
modules/contrib/image_effects/image_effects.install
modules/contrib/image_effects/image_effects.module
modules/contrib/image_effects/src/Commands/ImageEffectsCommands.php
modules/contrib/image_effects/src/Component/ColorUtility.php
modules/contrib/image_effects/src/Component/GdGaussianBlur.php
modules/contrib/image_effects/src/Component/GdImageAnalysis.php
modules/contrib/image_effects/src/Component/ImageUtility.php
modules/contrib/image_effects/src/Component/MatrixUtility.php
modules/contrib/image_effects/src/Component/PositionedRectangle.php
modules/contrib/image_effects/src/Component/Rectangle.php
modules/contrib/image_effects/src/Component/TextUtility.php
modules/contrib/image_effects/src/Element/ImageEffectsColor.php
modules/contrib/image_effects/src/Element/ImageEffectsPxPerc.php
modules/contrib/image_effects/src/Form/SettingsForm.php
modules/contrib/image_effects/src/ImageEffectsConverter.php
modules/contrib/image_effects/src/ImageEffectsUninstallValidator.php
modules/contrib/image_effects/src/Plugin/ImageEffect/AnchorTrait.php
modules/contrib/image_effects/src/Plugin/ImageEffect/AspectSwitcherImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/AutoOrientImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/BackgroundImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/BrightnessImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/ColorShiftImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/ContrastImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/ConvolutionImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/ConvolutionSharpenImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/GaussianBlurImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/ImagemagickArgumentsImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/InterlaceImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/InvertImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/MaskImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/MirrorImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/OpacityImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/PixelateImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/RelativeCropImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/ResizePercentageImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/RotateImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/ScaleAndSmartCropImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/SetCanvasImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/SetTransparentColorImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/SmartCropImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/StripMetadataImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/TextOverlayImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffect/WatermarkImageEffect.php
modules/contrib/image_effects/src/Plugin/ImageEffectsFontSelectorPluginInterface.php
modules/contrib/image_effects/src/Plugin/ImageEffectsPluginBase.php
modules/contrib/image_effects/src/Plugin/ImageEffectsPluginBaseInterface.php
modules/contrib/image_effects/src/Plugin/ImageEffectsPluginManager.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/BackgroundTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/BrightnessTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/ColorshiftTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/ContrastTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/ConvolutionTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/DrawEllipseTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/DrawLineTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/DrawRectangleTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/FontOperationTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/GaussianBlurTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/ImagemagickArgumentsTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/InterlaceTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/MaskTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/MirrorTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/OpacityTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/PixelateTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/ReplaceImageTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/RotateTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/ScaleAndSmartCropTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/SetCanvasTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/SetGifTransparentColorTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/SmartCropTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/TextOverlayTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/TextToWrapperTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/WatermarkTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/AutoOrient.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Background.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Brightness.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Colorshift.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Contrast.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Convolution.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/DrawEllipse.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/DrawLine.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/DrawRectangle.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/GDOperationTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/GaussianBlur.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/ImagemagickArguments.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Interlace.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Invert.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Mask.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Mirror.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Opacity.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Pixelate.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/ReplaceImage.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Rotate.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/ScaleAndSmartCrop.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/SetCanvas.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/SetGifTransparentColor.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/SmartCrop.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Strip.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/TextOverlay.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/TextToWrapper.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/Watermark.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/AutoOrient.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Background.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Brightness.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Colorshift.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Contrast.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Convolution.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/DrawEllipse.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/DrawRectangle.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/GaussianBlur.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/ImagemagickArguments.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/ImagemagickOperationTrait.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Interlace.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Invert.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Mask.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Mirror.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Opacity.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Pixelate.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/ReplaceImage.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Rotate.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/ScaleAndSmartCrop.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/SetCanvas.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/SetGifTransparentColor.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/SmartCrop.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Strip.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/TextToWrapper.php
modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemagick/Watermark.php
modules/contrib/image_effects/src/Plugin/image_effects/ColorSelector/Farbtastic.php
modules/contrib/image_effects/src/Plugin/image_effects/ColorSelector/HtmlColor.php
modules/contrib/image_effects/src/Plugin/image_effects/ColorSelector/JqueryColorPicker.php
modules/contrib/image_effects/src/Plugin/image_effects/FontSelector/Basic.php
modules/contrib/image_effects/src/Plugin/image_effects/FontSelector/Dropdown.php
modules/contrib/image_effects/src/Plugin/image_effects/ImageSelector/Basic.php
modules/contrib/image_effects/src/Plugin/image_effects/ImageSelector/Dropdown.php
modules/contrib/image_effects/src/ProxyClass/ImageEffectsUninstallValidator.php
modules/contrib/image_effects/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/FontSelectionImageEffect.php
modules/contrib/image_effects/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/ImageSelectionImageEffect.php
modules/contrib/image_effects/tests/src/Functional/Effect/AspectSwitcherTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/AutoOrientTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/BackgroundTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/BrightnessTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/ColorShiftTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/ContrastTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/ConvolutionSharpenTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/ConvolutionTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/GaussianBlurTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/ImagemagickArgumentsTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/InterlaceTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/InvertTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/MaskTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/MirrorTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/OpacityTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/PixelateTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/RelativeCropTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/ResizePercentageTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/RotateTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/ScaleAndSmartCropTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/SetCanvasTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/SetTransparentColorTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/SmartCropTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/StripMetadataTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/TextOverlayTest.php
modules/contrib/image_effects/tests/src/Functional/Effect/WatermarkTest.php
modules/contrib/image_effects/tests/src/Functional/ImageEffectsTestBase.php
modules/contrib/image_effects/tests/src/Functional/SelectorPluginTest.php
modules/contrib/image_effects/tests/src/Functional/SettingsFormTest.php
modules/contrib/image_effects/tests/src/Kernel/ConverterTest.php
modules/contrib/image_effects/tests/src/Unit/ColorUtilityTest.php
modules/contrib/image_effects/tests/src/Unit/GdImageAnalysisTest.php
modules/contrib/image_effects/tests/src/Unit/ImageUtilityTest.php
modules/contrib/image_effects/tests/src/Unit/MatrixUtilityTest.php
modules/contrib/image_effects/tests/src/Unit/PositionedRectangleTest.php
modules/contrib/image_effects/tests/src/Unit/RectangleTest.php
modules/contrib/image_effects/tests/src/Unit/TextUtilityTest.php

37 files with changes
=====================

1) modules/contrib/image_effects/tests/src/Kernel/ConverterTest.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Test image style.
    *
-   * @var \Drupal\image\Entity\ImageStyle
+   * @var ImageStyle
    */
   protected $testImageStyle;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/image_effects/tests/src/Functional/SelectorPluginTest.php:25

    ---------- begin diff ----------
@@ @@
    * Image selector test.
    */
   public function testImageSelector() {
-    $image_path = drupal_get_path('module', 'image_effects') . '/tests/images';
+    $image_path = \Drupal::service('extension.list.module')->getPath('image_effects') . '/tests/images';
     $image_file = 'portrait-painting.jpe';

     // Test the Basic plugin.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/image_effects/tests/src/Functional/ImageEffectsTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\image_effects\Functional;

+use Drupal\Core\Image\ImageFactory;
 use Drupal\Core\Database\Database;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Image\ImageInterface;
@@ @@
   /**
    * Test image style.
    *
-   * @var \Drupal\image\Entity\ImageStyle
+   * @var ImageStyle
    */
   protected $testImageStyle;

@@ @@
   /**
    * Image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   protected function getTestImageCopyUri($path, $name = NULL, $type = 'module') {
     $test_directory = 'public://test-images/';
     $this->fileSystem->prepareDirectory($test_directory, FileSystemInterface::CREATE_DIRECTORY);
-    $source_uri = $name ? drupal_get_path($type, $name) : '';
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $source_uri = $name ? \Drupal::service('extension.path.resolver')->getPath($type, $name) : '';
     $source_uri .= $path;
     $target_uri = $test_directory . \Drupal::service('file_system')->basename($source_uri);
     return $this->fileSystem->copy($source_uri, $target_uri, FileSystemInterface::EXISTS_REPLACE);
@@ @@
    *
    * Some difference can be allowed to account for e.g. compression artifacts.
    *
-   * @param \Drupal\Core\Image\ImageInterface $expected_image
+   * @param ImageInterface $expected_image
    *   A GD image resource for the expected image.
-   * @param \Drupal\Core\Image\ImageInterface $actual_image
+   * @param ImageInterface $actual_image
    *   A GD image resource for the actual image.
    * @param int $max_diff
    *   (optional) The maximum allowed difference, range from 0 to 255. Defaults
@@ @@
    *
    * Some difference can be allowed to account for e.g. compression artifacts.
    *
-   * @param \Drupal\Core\Image\ImageInterface $expected_image
+   * @param ImageInterface $expected_image
    *   A GD image resource for the expected image.
-   * @param \Drupal\Core\Image\ImageInterface $actual_image
+   * @param ImageInterface $actual_image
    *   A GD image resource for the actual image.
    * @param int $max_diff
    *   (optional) The maximum allowed difference, range from 0 to 255. Defaults
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/image_effects/tests/src/Functional/Effect/TextOverlayTest.php:115

    ---------- begin diff ----------
@@ @@
       $image = $this->imageFactory->get($original_uri);

       // Load Image Style and get expected derivative URL.
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));

       // Check that ::applyEffect generates image with expected dimensions
       // and colors at corners.
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/image_effects/tests/src/Functional/Effect/SmartCropTest.php:66

    ---------- begin diff ----------
@@ @@
       $image = $this->imageFactory->get($original_uri);
       $this->assertEquals(40, $image->getWidth());
       $this->assertEquals(40, $image->getHeight());
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
       $variables = [
         '#theme' => 'image_style',
         '#style_name' => 'image_effects_test',
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/image_effects/tests/src/Functional/Effect/SetCanvasTest.php:58

    ---------- begin diff ----------
@@ @@
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ @@
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/image_effects/tests/src/Functional/Effect/ScaleAndSmartCropTest.php:56

    ---------- begin diff ----------
@@ @@

         // Check that ::transformDimensions returns expected dimensions.
         $image = $this->imageFactory->get($original_uri);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
@@ @@

         // Check that ::transformDimensions returns expected dimensions.
         $image = $this->imageFactory->get($original_uri);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/image_effects/tests/src/Functional/Effect/RotateTest.php:136

    ---------- begin diff ----------
@@ @@
         }
         $this->assertSame(40, $image->getWidth(), $test_message);
         $this->assertSame(20, $image->getHeight(), $test_message);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
@@ @@
     $image = $this->imageFactory->get($original_uri);
     $this->assertSame(40, $image->getWidth());
     $this->assertSame(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/image_effects/tests/src/Functional/Effect/ResizePercentageTest.php:147

    ---------- begin diff ----------
@@ @@
       $image = $this->imageFactory->get($original_uri);
       $this->assertEquals(40, $image->getWidth());
       $this->assertEquals(20, $image->getHeight());
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
       $variables = [
         '#theme' => 'image_style',
         '#style_name' => 'image_effects_test',
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/image_effects/tests/src/Functional/Effect/RelativeCropTest.php:49

    ---------- begin diff ----------
@@ @@
     $this->assertEquals(14, $image_gd->getHeight());

     $derivative_uri = $this->testImageStyle->buildUri($test_file_uris['border']);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($test_file_uris['border']));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($test_file_uris['border']));

     // Test that no cropping will be done if the ratio matches the original.
     $test_data['Matching ratio'] = [
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/image_effects/tests/src/Functional/Effect/InterlaceTest.php:71

    ---------- begin diff ----------
@@ @@
   /**
    * Checks if this is an interlaced PNG.
    *
-   * @param \Drupal\Core\Image\ImageInterface $image
+   * @param ImageInterface $image
    *   An image object that need to be checked.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/image_effects/tests/src/Functional/Effect/ImagemagickArgumentsTest.php:54

    ---------- begin diff ----------
@@ @@

     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ @@
     // Check that ::transformDimensions does not provide dimension
     // attributes.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ @@

     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ @@

     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/image_effects/tests/src/Functional/Effect/BackgroundTest.php:54

    ---------- begin diff ----------
@@ @@
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/image_effects/tests/src/Functional/Effect/AutoOrientTest.php:89

    ---------- begin diff ----------
@@ @@
       $this->assertEquals($data['original_height'], $image->getHeight());

       // Get expected derivative URL.
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));

       // Check that ::transformDimensions returns expected dimensions.
       $variables = [
@@ @@

     $test_data = [];
     for ($i = 1; $i < 9; $i++) {
-      $test_data[$i]['test_file'] = drupal_get_path('module', 'image_effects') . "/tests/images/image-test-exif-orientation-$i.jpeg";
+      $test_data[$i]['test_file'] = \Drupal::service('extension.list.module')->getPath('image_effects') . "/tests/images/image-test-exif-orientation-$i.jpeg";
     }

     foreach ($test_data as $data) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/image_effects/tests/src/Functional/Effect/AspectSwitcherTest.php:117

    ---------- begin diff ----------
@@ @@
     // landscape.
     // Check that ::transformDimensions returns expected dimensions.
     $original_landscape_image = $image_factory->get($original_landscape_uri);
-    $derivative_landscape_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_landscape_uri));
+    $derivative_landscape_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_landscape_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
@@ @@
     // portrait.
     // Check that ::transformDimensions returns expected dimensions.
     $original_portrait_image = $image_factory->get($original_portrait_uri);
-    $derivative_portrait_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_portrait_uri));
+    $derivative_portrait_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_portrait_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
@@ @@
     // Check that no changes are made when source image is portrait.
     // Check that ::transformDimensions returns expected dimensions.
     $original_portrait_image = $image_factory->get($original_portrait_uri);
-    $derivative_portrait_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_portrait_uri));
+    $derivative_portrait_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_portrait_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/image_effects/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/ImageSelectionImageEffect.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/image_effects/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/FontSelectionImageEffect.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsFontSelectorPluginInterface
+   * @var ImageEffectsFontSelectorPluginInterface
    */
   protected $fontSelector;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/image_effects/src/ProxyClass/ImageEffectsUninstallValidator.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\image_effects\ProxyClass {

+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\image_effects\ImageEffectsUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class ImageEffectsUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class ImageEffectsUninstallValidator implements ModuleUninstallValidatorInterface
     {

-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;

         /**
          * The id of the original proxied service.
@@ @@
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;

@@ @@
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ @@
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


19) modules/contrib/image_effects/src/Plugin/image_effects/ImageSelector/Dropdown.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The image_effects logger.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, LoggerInterface $logger, ImageFactory $image_factory, MessengerInterface $messenger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/image_effects/src/Plugin/image_effects/FontSelector/Basic.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The file metadata manager service.
    *
-   * @var \Drupal\file_mdm\FileMetadataManagerInterface
+   * @var FileMetadataManagerInterface
    */
   protected $fileMetadataManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The image_effects logger.
-   * @param \Drupal\file_mdm\FileMetadataManagerInterface $file_metadata_manager
+   * @param FileMetadataManagerInterface $file_metadata_manager
    *   The file metadata manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, LoggerInterface $logger, FileMetadataManagerInterface $file_metadata_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/TextToWrapper.php:287

    ---------- begin diff ----------
@@ @@
    *
    * Credit to Ruquay K Calloway.
    *
-   * @param \Drupal\image_effects\Component\PositionedRectangle $rect
+   * @param PositionedRectangle $rect
    *   A PositionedRectangle object, including basepoint.
    * @param string $rgba
    *   RGBA color of the rectangle.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/gd/GDOperationTrait.php:61

    ---------- begin diff ----------
@@ @@
    * GD requires a simple array of point coordinates in its
    * imagepolygon() function.
    *
-   * @param \Drupal\image_effects\Component\PositionedRectangle $rect
+   * @param PositionedRectangle $rect
    *   A PositionedRectangle object.
    *
    * @return array
@@ @@
    * @param string $height
    *   The height of the crop.
    *
-   * @return \Drupal\image_effects\Component\PositionedRectangle
+   * @return PositionedRectangle
    *   The PositionedRectangle object marking the crop area.
    */
   protected function getEntropyCropBySlicing($src, $width, $height) {
@@ @@
    * @param int $grid_sub_columns
    *   The number of columns of the sub-grid for the sum calculation.
    *
-   * @return \Drupal\image_effects\Component\PositionedRectangle
+   * @return PositionedRectangle
    *   The PositionedRectangle object marking the crop area.
    */
   protected function getEntropyCropByGridding($src, $crop_width, $crop_height, $simulate, $grid_width, $grid_height, $grid_rows, $grid_columns, $grid_sub_rows, $grid_sub_columns) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


23) modules/contrib/image_effects/src/Plugin/ImageEffectsPluginManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\image_effects\Plugin;

+use Drupal\Core\Config\Config;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * The configuration object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    * @param string $type
    *   The plugin type, for example 'color_selector'.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, $type, ConfigFactoryInterface $config_factory) {
@@ @@
    * @param string $plugin_id
    *   The plugin id.
    *
-   * @return \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @return ImageEffectsPluginBaseInterface
    *   An instance of the specified 'image_effects' plugin.
    */
   public function getPlugin($plugin_id = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/image_effects/src/Plugin/ImageEffectsPluginBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\image_effects\Plugin;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\PluginBase;
@@ @@
   /**
    * Configuration object for image_effects.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The image_effects logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The image_effects logger.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


25) modules/contrib/image_effects/src/Plugin/ImageEffect/WatermarkImageEffect.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface $image_selector
+   * @param ImageEffectsPluginBaseInterface $image_selector
    *   The image selector plugin.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsPluginBaseInterface $image_selector) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/image_effects/src/Plugin/ImageEffect/TextOverlayImageEffect.php:41

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The Image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The font selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsFontSelectorPluginInterface
+   * @var ImageEffectsFontSelectorPluginInterface
    */
   protected $fontSelector;

@@ @@
   /**
    * The token resolution service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsFontSelectorPluginInterface $font_selector_plugin
+   * @param ImageEffectsFontSelectorPluginInterface $font_selector_plugin
    *   The font selector plugin.
-   * @param \Drupal\Core\Utility\Token $token_service
+   * @param Token $token_service
    *   The token resolution service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsFontSelectorPluginInterface $font_selector_plugin, Token $token_service, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/image_effects/src/Plugin/ImageEffect/MaskImageEffect.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface $image_selector
+   * @param ImageEffectsPluginBaseInterface $image_selector
    *   The image selector plugin.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsPluginBaseInterface $image_selector) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/image_effects/src/Plugin/ImageEffect/BackgroundImageEffect.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;

@@ @@
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface $image_selector
+   * @param ImageEffectsPluginBaseInterface $image_selector
    *   The image selector plugin.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsPluginBaseInterface $image_selector) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/image_effects/src/Plugin/ImageEffect/AutoOrientImageEffect.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The file metadata manager service.
    *
-   * @var \Drupal\file_mdm\FileMetadataManagerInterface
+   * @var FileMetadataManagerInterface
    */
   protected $fileMetadataManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\file_mdm\FileMetadataManagerInterface $file_metadata_manager
+   * @param FileMetadataManagerInterface $file_metadata_manager
    *   The file metadata manager service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, FileMetadataManagerInterface $file_metadata_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/image_effects/src/Plugin/ImageEffect/AspectSwitcherImageEffect.php:201

    ---------- begin diff ----------
@@ @@
    * @param string $image_style_name
    *   The name of the image style to get.
    *
-   * @return \Drupal\image\Entity\ImageStyle|null|false
+   * @return ImageStyle|null|false
    *   The image style object, or NULL if the name is NULL, or FALSE if the
    *   image style went missing from the db.
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/image_effects/src/ImageEffectsUninstallValidator.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new ImageEffectsUninstallValidator.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, TranslationInterface $string_translation) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


32) modules/contrib/image_effects/src/ImageEffectsConverter.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Converts a Drupal core's Rotate effect(s) to Image Effects.
    *
-   * @param \Drupal\image\Entity\ImageStyle $style
+   * @param ImageStyle $style
    *   The ImageStyle containing the effect(s) to convert.
    *
    * @return bool
@@ @@
   /**
    * Converts an Image Effects' Rotate effect(s) to Drupal core.
    *
-   * @param \Drupal\image\Entity\ImageStyle $style
+   * @param ImageStyle $style
    *   The ImageStyle containing the effect(s) to convert.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


33) modules/contrib/image_effects/src/Form/SettingsForm.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The color selector plugin manager.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginManager
+   * @var ImageEffectsPluginManager
    */
   protected $colorManager;

@@ @@
   /**
    * The image selector plugin manager.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginManager
+   * @var ImageEffectsPluginManager
    */
   protected $imageManager;

@@ @@
   /**
    * The font selector plugin manager.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginManager
+   * @var ImageEffectsPluginManager
    */
   protected $fontManager;

@@ @@
   /**
    * Constructs the class for image_effects settings form.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginManager $color_plugin_manager
+   * @param ImageEffectsPluginManager $color_plugin_manager
    *   The color selector plugin manager.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginManager $image_plugin_manager
+   * @param ImageEffectsPluginManager $image_plugin_manager
    *   The image selector plugin manager.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginManager $font_plugin_manager
+   * @param ImageEffectsPluginManager $font_plugin_manager
    *   The font selector plugin manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ImageEffectsPluginManager $color_plugin_manager, ImageEffectsPluginManager $image_plugin_manager, ImageEffectsPluginManager $font_plugin_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


34) modules/contrib/image_effects/src/Element/ImageEffectsPxPerc.php:50

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


35) modules/contrib/image_effects/src/Element/ImageEffectsColor.php:72

    ---------- begin diff ----------
@@ @@
    *      hidden, and the value returned is NULL.
    *     '#allow_opacity' - if set to TRUE, a textfield is displayed to capture
    *      the 'opacity' value, as a percentage.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


36) modules/contrib/image_effects/src/Commands/ImageEffectsCommands.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;

@@ @@
   /**
    * The image effects converter.
    *
-   * @var \Drupal\image_effects\ImageEffectsConverter
+   * @var ImageEffectsConverter
    */
   private $imageEffectsConverter;

@@ @@
   /**
    * Constructs an ImageEffectsCommands object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\image_effects\ImageEffectsConverter $image_effects_converter
+   * @param ImageEffectsConverter $image_effects_converter
    *   The image effects converter.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ImageEffectsConverter $image_effects_converter) {
@@ @@
    *   When not null, the query will be limited to ImageStyle entities whose
    *   label contain the value indicated.
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   The entity query.
    */
   private function getImageStyleQuery(?string $name_contains, ?string $label_contains): QueryInterface {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


37) modules/contrib/image_effects/image_effects.api.php:11

    ---------- begin diff ----------
@@ @@
  *
  * @param string $text
  *   The text string to be altered.
- * @param \Drupal\image\ConfigurableImageEffectBase $image_effect
+ * @param ConfigurableImageEffectBase $image_effect
  *   The Text Overlay image effect plugin for which text need to be altered.
  */
 function hook_image_effects_text_overlay_text_alter(&$text, ConfigurableImageEffectBase $image_effect) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Watermark.php" file, due to:                                       
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/TextToWrapper.php" file, due to:                                   
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Strip.php" file, due to:                                           
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/SmartCrop.php" file, due to:                                       
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/SetGifTransparentColor.php" file, due to:                          
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/SetCanvas.php" file, due to:                                       
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/ScaleAndSmartCrop.php" file, due to:                               
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Rotate.php" file, due to:                                          
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/ReplaceImage.php" file, due to:                                    
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Pixelate.php" file, due to:                                        
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Opacity.php" file, due to:                                         
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Mirror.php" file, due to:                                          
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Mask.php" file, due to:                                            
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Invert.php" file, due to:                                          
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Interlace.php" file, due to:                                       
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/ImagemagickArguments.php" file, due to:                            
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/GaussianBlur.php" file, due to:                                    
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/DrawRectangle.php" file, due to:                                   
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/DrawEllipse.php" file, due to:                                     
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Convolution.php" file, due to:                                     
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Contrast.php" file, due to:                                        
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Colorshift.php" file, due to:                                      
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Brightness.php" file, due to:                                      
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/Background.php" file, due to:                                      
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/image_effects/src/Plugin/ImageToolkit/Operation/imagemag
         ick/AutoOrient.php" file, due to:                                      
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

