diff --git a/src/FloodByPassService.php b/src/FloodByPassService.php
index a4e8c80..07d3a6e 100644
--- a/src/FloodByPassService.php
+++ b/src/FloodByPassService.php
@@ -15,28 +15,28 @@ class FloodByPassService implements FloodByPassServiceInterface {
   /**
    * Drupal\Core\Flood\FloodInterface definition.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;
 
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Drupal\Core\Database\Driver\mysql\Connection definition.
    *
-   * @var \Drupal\Core\Database\Driver\mysql\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
diff --git a/tests/src/Functional/UserLoginFloodByPassTest.php b/tests/src/Functional/UserLoginFloodByPassTest.php
index f35b337..96724c6 100644
--- a/tests/src/Functional/UserLoginFloodByPassTest.php
+++ b/tests/src/Functional/UserLoginFloodByPassTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\flood_bypass\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\user\Entity\User;
 use Drupal;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
@@ -23,7 +25,7 @@ class UserLoginFloodByPassTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -57,7 +59,7 @@ class UserLoginFloodByPassTest extends BrowserTestBase {
   /**
    * Make an unsuccessful login attempt.
    *
-   * @param \Drupal\user\Entity\User $account
+   * @param User $account
    *   A user object with name and passRaw attributes for the login attempt.
    * @param mixed $flood_trigger
    *   (optional) Whether or not to expect that the flood control mechanism
@@ -72,28 +74,32 @@ class UserLoginFloodByPassTest extends BrowserTestBase {
       'name' => $account->getUsername(),
       'pass' => $account->passRaw,
     ];
-    $this->drupalPostForm('user/login', $edit, t('Log in'));
+    $this->drupalGet('user/login');
+    $this->submitForm($edit, t('Log in'));
     $this->assertNoFieldByXPath("//input[@name='pass' and @value!='']", NULL, 'Password value attribute is blank.');
     if (isset($flood_trigger)) {
       if ($flood_trigger == 'user') {
-        $this->assertRaw(Drupal::translation()
+        $this->assertSession()->responseContains(Drupal::translation()
           ->formatPlural($this->config('user.flood')
             ->get('user_limit'), 'There has been more than one failed login attempt for this account. It is temporarily blocked. Try again later or <a href=":url">request a new password</a>.', 'There have been more than @count failed login attempts for this account. It is temporarily blocked. Try again later or <a href=":url">request a new password</a>.', [':url' => Url::fromRoute('user.pass')]));
       }
       else {
         // No uid, so the limit is IP-based.
-        $this->assertRaw(t('Too many failed login attempts from your IP address. This IP address is temporarily blocked. Try again later or <a href=":url">request a new password</a>.', [':url' => Url::fromRoute('user.pass')]));
+        $this->assertSession()->responseContains(t('Too many failed login attempts from your IP address. This IP address is temporarily blocked. Try again later or <a href=":url">request a new password</a>.', [':url' => Url::fromRoute('user.pass')]));
       }
     }
     else {
-      $this->assertText(t('Unrecognized username or password. Forgot your password?'));
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+      // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+      $this->assertSession()->pageTextContains(t('Unrecognized username or password. Forgot your password?'));
     }
   }
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
   }
 }
