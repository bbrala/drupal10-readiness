diff --git a/domain_robots_txt.install b/domain_robots_txt.install
index daeabd8..5b66cf3 100644
--- a/domain_robots_txt.install
+++ b/domain_robots_txt.install
@@ -14,7 +14,7 @@ use Drupal\domain_robots_txt\Form\RobotsTxtDomainForm;
 function domain_robots_txt_install() {
   // Update config for all domains.
   $content = '';
-  $file = drupal_get_path('module', 'domain_robots_txt') . '/default.robots.txt';
+  $file = \Drupal::service('extension.list.module')->getPath('domain_robots_txt') . '/default.robots.txt';
   if (file_exists($file) && is_readable($file)) {
     $content = file_get_contents($file);
   }
diff --git a/src/Controller/RobotsTxtDomainsController.php b/src/Controller/RobotsTxtDomainsController.php
index 67e0d0f..fc27369 100644
--- a/src/Controller/RobotsTxtDomainsController.php
+++ b/src/Controller/RobotsTxtDomainsController.php
@@ -26,25 +26,25 @@ class RobotsTxtDomainsController extends ControllerBase {
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Initializes a content translation controller.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\domain\DomainNegotiator $domain_negotiator
+   * @param DomainNegotiator $domain_negotiator
    *   A content translation manager instance.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, DomainNegotiator $domain_negotiator, ModuleHandlerInterface $module_handler) {
@@ -68,7 +68,7 @@ class RobotsTxtDomainsController extends ControllerBase {
   /**
    * Serves the configured robots.txt file.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The robots.txt file as a response object with 'text/plain' content type.
    */
   public function content() {
diff --git a/src/Form/RobotsTxtDomainForm.php b/src/Form/RobotsTxtDomainForm.php
index c28b94d..d856e3d 100644
--- a/src/Form/RobotsTxtDomainForm.php
+++ b/src/Form/RobotsTxtDomainForm.php
@@ -24,11 +24,11 @@ class RobotsTxtDomainForm extends ConfigFormBase {
   /**
    * Constructs Drupal\domain_robots_txt\Form\RobotsTxtDomainForm class.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   Route match.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, RouteMatchInterface $routeMatch, MessengerInterface $messenger) {
diff --git a/tests/src/Functional/DomainRobotsTxtAccessTest.php b/tests/src/Functional/DomainRobotsTxtAccessTest.php
index 2793688..eb965a0 100644
--- a/tests/src/Functional/DomainRobotsTxtAccessTest.php
+++ b/tests/src/Functional/DomainRobotsTxtAccessTest.php
@@ -34,9 +34,7 @@ class DomainRobotsTxtAccessTest extends DomainTestBase {
     $this->drupalLogin($this->adminUser);
     $domain = $this->getRandomActiveDomain();
     $this->drupalGet('/admin/config/domain/robots_txt/' . $domain->id());
-    $this->assertFieldById('edit-robots-txt',
-      NULL,
-      'The textarea for configuring robots.txt is shown.');
+    $this->assertSession()->fieldExists('edit-robots-txt');
   }
 
   /**
@@ -48,10 +46,8 @@ class DomainRobotsTxtAccessTest extends DomainTestBase {
     $this->drupalLogin($this->normal_user);
     $domain = $this->getRandomActiveDomain();
     $this->drupalGet('/admin/config/domain/robots_txt/' . $domain->id());
-    $this->assertResponse(403);
-    $this->assertNoFieldById('edit-robots-txt',
-      NULL,
-      'The textarea for configuring robots.txt is not shown for users without appropriate permissions.');
+    $this->assertSession()->statusCodeEquals(403);
+    $this->assertSession()->fieldNotExists('edit-robots-txt');
   }
 
 }
