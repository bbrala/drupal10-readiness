diff --git a/src/Commands/WardenCommands.php b/src/Commands/WardenCommands.php
index 9dae911..21b9264 100644
--- a/src/Commands/WardenCommands.php
+++ b/src/Commands/WardenCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\warden\Commands;
 
+use Drupal\warden\Service\WardenManager;
 use Drush\Commands\DrushCommands;
 
 /**
@@ -78,7 +79,7 @@ class WardenCommands extends DrushCommands {
   public function showModuleData() {
     module_load_include('inc', 'warden', 'warden.page');
 
-    /** @var \Drupal\warden\Service\WardenManager $warden_manager */
+    /** @var WardenManager $warden_manager */
     $warden_manager = \Drupal::service('warden.manager');
     $data = $warden_manager->generateSiteData();
     $this->output()->writeln(json_encode($data));
diff --git a/src/Controller/DefaultController.php b/src/Controller/DefaultController.php
index f1c3fc1..edb0119 100644
--- a/src/Controller/DefaultController.php
+++ b/src/Controller/DefaultController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\warden\Controller;
 
+use WardenApi\Exception\EncryptionException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactory;
@@ -54,7 +55,7 @@ class DefaultController extends ControllerBase {
   }
 
   /**
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    */
   public function getWardenConfig() {
     return $this->wardenConfig;
@@ -106,7 +107,7 @@ class DefaultController extends ControllerBase {
    *
    * @return string
    * @throws \Exception
-   * @throws \WardenApi\Exception\EncryptionException
+   * @throws EncryptionException
    */
   protected function generateWardenRegistrationRedirect() {
     global $base_url;
diff --git a/src/Service/WardenManager.php b/src/Service/WardenManager.php
index 8b75511..7bdbb41 100644
--- a/src/Service/WardenManager.php
+++ b/src/Service/WardenManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\warden\Service;
 
+use Drupal\Core\File\FileSystemInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Extension\ExtensionDiscovery;
@@ -345,7 +346,7 @@ class WardenManager extends Api {
   }
 
   /**
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    */
   protected function getThemes() {
     if (!isset($this->themes)) {
@@ -394,7 +395,7 @@ class WardenManager extends Api {
       $libraryDir = \Drupal::root() . '/libraries';
       if (file_exists($libraryDir)) {
         // Scan for package.json files for libraries that have this.
-        $listing = \Drupal\Core\File\FileSystemInterface::scanDirectory($libraryDir, '/^package.json/');
+        $listing = FileSystemInterface::scanDirectory($libraryDir, '/^package.json/');
         $this->setLibraries($listing);
       }
     }
@@ -403,7 +404,7 @@ class WardenManager extends Api {
   }
 
   /**
-   * @return \Drupal\Core\Extension\InfoParser
+   * @return InfoParser
    */
   protected function getInfoParser() {
     if (empty($this->infoParser)) {
@@ -414,7 +415,7 @@ class WardenManager extends Api {
   }
 
   /**
-   * @param \Drupal\Core\Extension\InfoParser $infoParser
+   * @param InfoParser $infoParser
    * @return $this
    */
   public function setInfoParser(InfoParser $infoParser) {
diff --git a/tests/src/Unit/Service/WardenManagerTest.php b/tests/src/Unit/Service/WardenManagerTest.php
index fb8da2d..50fc3b9 100644
--- a/tests/src/Unit/Service/WardenManagerTest.php
+++ b/tests/src/Unit/Service/WardenManagerTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\warden\Unit\Service;
 
+use Drupal\Core\Extension\InfoParser;
+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\Core\Config\ConfigFactory;
 use Drupal\Tests\UnitTestCase;
 use Drupal\warden\Service\WardenManager;
 use Drupal\Core\Extension\Extension;
@@ -23,19 +26,19 @@ class WardenManagerTest extends UnitTestCase {
   protected $token;
 
   /**
-   * @var \Drupal\Core\Extension\InfoParser|\PHPUnit_Framework_MockObject_MockObject
+   * @var InfoParser|MockObject
    */
   protected $infoParser;
 
   /**
-   * @var \Drupal\Core\Config\ConfigFactory|\PHPUnit_Framework_MockObject_MockObject
+   * @var ConfigFactory|MockObject
    */
   protected $configFactory;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->token = hash('sha256', 42);
@@ -101,10 +104,10 @@ class WardenManagerTest extends UnitTestCase {
   /**
    * @param string $name
    * @param string $type
-   * @return Extension|\PHPUnit_Framework_MockObject_MockObject
+   * @return Extension|MockObject
    */
   protected function getMockExtension($name, $type = 'contrib') {
-    /** @var Extension|\PHPUnit_Framework_MockObject_MockObject $module_b */
+    /** @var Extension|MockObject $module_b */
     $extension = $this->createMock('Drupal\Core\Extension\Extension', array(), array(), '', FALSE);
     $extension->expects($this->once())
       ->method('getPathname')
