modules/contrib/r4032login/r4032login.install
modules/contrib/r4032login/src/Event/RedirectEvent.php
modules/contrib/r4032login/src/EventSubscriber/R4032LoginSubscriber.php
modules/contrib/r4032login/src/Form/AnonymousSettingsForm.php
modules/contrib/r4032login/src/Form/AuthenticatedSettingsForm.php
modules/contrib/r4032login/src/Form/SettingsForm.php
modules/contrib/r4032login/src/Plugin/migrate/process/R4032loginPath.php
modules/contrib/r4032login/tests/fixtures/drupal7.php
modules/contrib/r4032login/tests/src/Functional/AuthenticatedNotFoundOptionTest.php
modules/contrib/r4032login/tests/src/Functional/AuthenticatedRedirectCustomMessageTest.php
modules/contrib/r4032login/tests/src/Functional/AuthenticatedRedirectTest.php
modules/contrib/r4032login/tests/src/Functional/BaseRedirectTest.php
modules/contrib/r4032login/tests/src/Functional/ChangeAccessDeniedMessageTest.php
modules/contrib/r4032login/tests/src/Functional/ChangeLoginFormPathTest.php
modules/contrib/r4032login/tests/src/Functional/ChangeMessageTypeTest.php
modules/contrib/r4032login/tests/src/Functional/DestinationParameterOverrideTest.php
modules/contrib/r4032login/tests/src/Functional/DisplayAccessDeniedMessageTest.php
modules/contrib/r4032login/tests/src/Functional/PreserveQueryStringTest.php
modules/contrib/r4032login/tests/src/Functional/RedirectCacheTest.php
modules/contrib/r4032login/tests/src/Functional/RedirectNoIndexHeaderTest.php
modules/contrib/r4032login/tests/src/Functional/RedirectStatusCodeTest.php
modules/contrib/r4032login/tests/src/Functional/RedirectToDestinationFileTest.php
modules/contrib/r4032login/tests/src/Functional/RedirectToDestinationTest.php
modules/contrib/r4032login/tests/src/Functional/RedirectToProtectedFrontPageTest.php
modules/contrib/r4032login/tests/src/Functional/SettingsUpdateTest.php
modules/contrib/r4032login/tests/src/Functional/SkipRedirectTest.php
modules/contrib/r4032login/tests/src/Kernel/R4032loginMigrateTest.php
modules/contrib/r4032login/tests/src/Unit/R4032LoginSubscriberTest.php

21 files with changes
=====================

1) modules/contrib/r4032login/tests/src/Unit/R4032LoginSubscriberTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Unit {

+  use PHPUnit\Framework\MockObject\MockObject;
+  use Drupal\Core\Config\ConfigFactoryInterface;
+  use Drupal\Core\Session\AccountInterface;
+  use Drupal\Core\Path\PathMatcherInterface;
+  use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+  use Drupal\Core\Messenger\MessengerInterface;
+  use Drupal\Core\Utility\UnroutedUrlAssemblerInterface;
+  use Drupal\Tests\Core\Routing\TestRouterInterface;
+  use Drupal\Core\Routing\RedirectDestinationInterface;
   use Drupal\Core\DependencyInjection\ContainerBuilder;
   use Drupal\Core\Url;
   use Drupal\r4032login\EventSubscriber\R4032LoginSubscriber;
@@ @@
     /**
      * The mocked HTTP kernel.
      *
-     * @var \Symfony\Component\HttpKernel\HttpKernelInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var HttpKernelInterface|MockObject
      */
     protected $kernel;

@@ @@
     /**
      * The mocked configuration factory.
      *
-     * @var \Drupal\Core\Config\ConfigFactoryInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var ConfigFactoryInterface|MockObject
      */
     protected $configFactory;

@@ @@
     /**
      * The mocked current user.
      *
-     * @var \Drupal\Core\Session\AccountInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var AccountInterface|MockObject
      */
     protected $currentUser;

@@ @@
     /**
      * The path matcher.
      *
-     * @var \Drupal\Core\Path\PathMatcherInterface
+     * @var PathMatcherInterface
      */
     protected $pathMatcher;

@@ @@
     /**
      * An event dispatcher instance to use for map events.
      *
-     * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+     * @var EventDispatcherInterface
      */
     protected $eventDispatcher;

@@ @@
     /**
      * The messenger service.
      *
-     * @var \Drupal\Core\Messenger\MessengerInterface
+     * @var MessengerInterface
      */
     protected $messenger;

@@ @@
     /**
      * The mocked unrouted URL assembler.
      *
-     * @var \Drupal\Core\Utility\UnroutedUrlAssemblerInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var UnroutedUrlAssemblerInterface|MockObject
      */
     protected $urlAssembler;

@@ @@
     /**
      * The mocked router.
      *
-     * @var \Drupal\Tests\Core\Routing\TestRouterInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var TestRouterInterface|MockObject
      */
     protected $router;

@@ @@
     /**
      * The mocked redirect destination service.
      *
-     * @var \Drupal\Core\Routing\RedirectDestinationInterface|\PHPUnit_Framework_MockObject_MockObject
+     * @var RedirectDestinationInterface|MockObject
      */
     protected $redirectDestination;

@@ @@
     /**
      * {@inheritdoc}
      */
-    protected function setUp() {
+    protected function setUp(): void {
       $this->kernel = $this->createMock('Symfony\Component\HttpKernel\HttpKernelInterface');
       $this->configFactory = $this->getConfigFactoryStub([
         'r4032login.settings' => [
@@ @@
         $r4032login,
         'on403',
       ]);
-      $dispatcher->dispatch(KernelEvents::EXCEPTION, $event);
+      $dispatcher->dispatch($event, KernelEvents::EXCEPTION);

       $response = $event->getResponse();
       $this->assertNull($response);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/r4032login/tests/src/Functional/SkipRedirectTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $config = $this->config('r4032login.settings');
@@ @@
    *
    * @dataProvider skipRedirectDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testSkipRedirect($path, $code, $destination, $negate) {
     $this->config('r4032login.settings')->set('match_noredirect_negate', $negate)->save();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/r4032login/tests/src/Functional/SettingsUpdateTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
    *
    * @dataProvider settingsUpdateDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws ExpectationException
+   * @throws EntityStorageException
    */
   public function testSettingsUpdate(array $permissions, $admin) {
     $webUser = $this->drupalCreateUser($permissions, NULL, $admin);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/r4032login/tests/src/Functional/RedirectToProtectedFrontPageTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Set the front page as a protected page.
@@ @@
   /**
    * Test the redirection.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testRedirectToProtectedFrontPage() {
     // Assert there is the redirection since the node is not published.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/r4032login/tests/src/Functional/RedirectToDestinationFileTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Drupal\user\Entity\User;
+use Drupal\file\FileInterface;
 use Drupal\file\Entity\File;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user to log on.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->user = $this->drupalCreateUser([], NULL, TRUE);

     $filename = 'sample with spaces.pdf';
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = File::create([
       'uri' => 'private://' . $filename,
       'uid' => $this->user->id(),
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/r4032login/tests/src/Functional/RedirectStatusCodeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
    * @param int $expectedCode
    *   Expected redirect code.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *
    * @dataProvider redirectStatusCodeDataProvider
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/r4032login/tests/src/Functional/RedirectNoIndexHeaderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * Test the behavior of the "Add X-Robots-Tag: noindex header" option.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function testRedirectNoIndexHeader() {
     $client = $this->getHttpClient();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


8) modules/contrib/r4032login/tests/src/Functional/RedirectCacheTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Drupal\node\NodeInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\file\Entity\File;
 use Drupal\node\Entity\NodeType;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   /**
    * An unpublished node used for tests.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $unpublishedNode;

@@ @@
   /**
    * An published node used for tests.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $publishedNode;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Disable the access denied message so the cache will be set.
@@ @@
   /**
    * Test node access redirect behavior in cached context.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testNodeRedirectCache() {
     // Assert there is the redirection since the node is not published.
@@ @@
   /**
    * Tests private file redirect behavior in cached context.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testPrivateFileRedirectCache() {
     // Assert there is the redirection since the node is not published.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/r4032login/tests/src/Functional/PreserveQueryStringTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * Tests query string preservation.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testPreserveQueryString() {
     $this->drupalGet('admin/modules', [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


10) modules/contrib/r4032login/tests/src/Functional/DisplayAccessDeniedMessageTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * Test activation and deactivation of the "User login access denied" message.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testDisplayAccessDeniedMessage() {
     $config = $this->config('r4032login.settings');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


11) modules/contrib/r4032login/tests/src/Functional/DestinationParameterOverrideTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $config = $this->config('r4032login.settings');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/r4032login/tests/src/Functional/ChangeMessageTypeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ElementNotFoundException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
    *
    * @dataProvider changeMessageTypeDataProvider
    *
-   * @throws \Behat\Mink\Exception\ElementNotFoundException
+   * @throws ElementNotFoundException
    */
   public function testChangeMessageType($optionValue, $selector) {
     $config = $this->config('r4032login.settings');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/r4032login/tests/src/Functional/ChangeLoginFormPathTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
    *
    * @dataProvider changeLoginFormPathDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testChangeLoginFormPath($optionValue, $path, $destination) {
     $config = $this->config('r4032login.settings');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/r4032login/tests/src/Functional/ChangeAccessDeniedMessageTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $config = $this->config('r4032login.settings');
@@ @@
   /**
    * Test that is it possible to change the "User login access denied" message.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testChangeAccessDeniedMessage() {
     $this->drupalGet('admin/config');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/r4032login/tests/src/Functional/BaseRedirectTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
    *
    * @dataProvider baseRedirectDataProvider
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testBaseRedirect($path, $code, $destination) {
     $this->drupalGet($path);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/r4032login/tests/src/Functional/AuthenticatedRedirectTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A regular user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->webUser = $this->drupalCreateUser();
@@ @@
    * @param string $destination
    *   Resulting URL.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *
    * @dataProvider baseRedirectDataProvider
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/r4032login/tests/src/Functional/AuthenticatedRedirectCustomMessageTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A regular user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;

@@ @@
    * @param string $selector
    *   The selector to look for the message within.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *
    * @dataProvider baseRedirectMessageDataProvider
    */
@@ @@
   /**
    * Test authenticated message will not appear if disabled.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testDisabledAuthenticatedRedirectMessage() {
     $config = $this->config('r4032login.settings');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/r4032login/tests/src/Functional/AuthenticatedNotFoundOptionTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\r4032login\Functional;

+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A regular user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->webUser = $this->drupalCreateUser();
@@ @@
   /**
    * Test the not found option for authenticated user.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testAuthenticatedRedirect() {
     $config = $this->config('r4032login.settings');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/r4032login/src/Form/AuthenticatedSettingsForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The path validator service.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;

@@ @@
   /**
    * Constructs a AuthenticatedSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Defines the configuration object factory.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/r4032login/src/Form/AnonymousSettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The path validator service.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;

@@ @@
   /**
    * Constructs an AnonymousSettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Defines the configuration object factory.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/r4032login/src/EventSubscriber/R4032LoginSubscriber.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;

@@ @@
   /**
    * An event dispatcher instance to use for map events.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;

@@ @@
   /**
    * Constructs a new R4032LoginSubscriber.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountInterface $current_user, PathMatcherInterface $path_matcher, EventDispatcherInterface $event_dispatcher, MessengerInterface $messenger, RedirectDestinationInterface $redirect_destination) {
@@ @@
   /**
    * Redirects on 403 Access Denied kernel exceptions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ExceptionEvent $event
+   * @param ExceptionEvent $event
    *   The Event to process.
    */
   public function on403(ExceptionEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 21 files have been changed by Rector                                      

