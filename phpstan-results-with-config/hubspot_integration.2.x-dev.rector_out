modules/contrib/hubspot_integration/hubspot_integration.install
modules/contrib/hubspot_integration/hubspot_integration.module
modules/contrib/hubspot_integration/hubspot_integration.views.inc
modules/contrib/hubspot_integration/src/Controller/HubspotAPIAjaxController.php
modules/contrib/hubspot_integration/src/Controller/HubspotIntegrationController.php
modules/contrib/hubspot_integration/src/Form/HubspotAdminForm.php
modules/contrib/hubspot_integration/src/Form/HubspotMappingForm.php
modules/contrib/hubspot_integration/src/Form/HubspotSortForm.php
modules/contrib/hubspot_integration/src/Plugin/Block/HubspotJSFormBlock.php
modules/contrib/hubspot_integration/src/Plugin/Field/FieldFormatter/HubspotBehaviourFormatter.php
modules/contrib/hubspot_integration/src/Plugin/Field/FieldFormatter/HubspotFormFormatter.php
modules/contrib/hubspot_integration/src/Plugin/Field/FieldType/HubspotBehaviourField.php
modules/contrib/hubspot_integration/src/Plugin/Field/FieldType/HubspotFormItem.php
modules/contrib/hubspot_integration/src/Plugin/Field/FieldWidget/HubspotBehaviourWidget.php
modules/contrib/hubspot_integration/src/Plugin/Field/FieldWidget/HubspotFormWidget.php
modules/contrib/hubspot_integration/src/Plugin/views/argument/HubspotTidDepth.php
modules/contrib/hubspot_integration/src/Plugin/views/argument_default/HubspotTid.php
modules/contrib/hubspot_integration/src/Plugin/views/sort/HubspotTerms.php
modules/contrib/hubspot_integration/src/Services/HubspotAPI.php

15 files with changes
=====================

1) modules/contrib/hubspot_integration/src/Services/HubspotAPI.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hubspot_integration\Services;

+use Drupal\Component\Render\MarkupInterface;
+use Drupal\taxonomy\TermInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Database\Connection;
 use Symfony\Component\HttpFoundation\Session\Session;
@@ @@

   /**
    * Constructs a new HubspotAPI object.
-   * @param \Drupal\Core\Database\Connection $connection
-   * @param \Symfony\Component\HttpFoundation\Session\Session $session
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param Connection $connection
+   * @param Session $session
+   * @param ConfigFactory $config_factory
    */
   public function __construct(Connection $connection, Session $session, ConfigFactory $config_factory) {
     $this->database = $connection;
@@ @@
    * Get the config name for the hubspot integration module settings
    *
    * @param unknown $name
-   * @return mixed|NULL|array|\Drupal\Component\Render\MarkupInterface|string|unknown[]|array[]
+   * @return mixed|NULL|array|MarkupInterface|string|unknown[]|array[]
    */
   public function getConfig($name) {
     return $this->config_factory->get('hubspot_integration.settings')->get($name);
@@ @@
    * Set the config name for the hubspot integration module settings
    *
    * @param unknown $name
-   * @return mixed|NULL|array|\Drupal\Component\Render\MarkupInterface|string|unknown[]|array[]
+   * @return mixed|NULL|array|MarkupInterface|string|unknown[]|array[]
    */
   public function setConfig($name, $value) {
     return $this->config_factory->getEditable('hubspot_integration.settings')->set($name, $value)->save();
@@ @@
     if (!empty($tids[0])) { // compile the sort in order to get the min values for the tids

       foreach ($tids as $tid) {
-        /** @var \Drupal\taxonomy\TermInterface $term */
+        /** @var TermInterface $term */
         $term = Term::load($tid);
         $vid = $term->bundle();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/hubspot_integration/src/Plugin/views/sort/HubspotTerms.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The hubspot api.
    *
-   * @var \Drupal\hubspot_integration\Services\HubspotAPI
+   * @var HubspotAPI
    */
   protected $hubspot_api;

@@ @@
   /**
    * The views handler manager.
    *
-   * @var \Drupal\views\Plugin\ViewsHandlerManager
+   * @var ViewsHandlerManager
    */
   protected $joinHandler;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\hubspot_integration\Services\HubspotAPI $hubspot_api
+   * @param HubspotAPI $hubspot_api
    *   The Hubspot API
-   * @param \Drupal\views\Plugin\ViewsHandlerManager $join_handler
+   * @param ViewsHandlerManager $join_handler
    *   The views handler manager.
    */
   public function __construct(array $configuration,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/hubspot_integration/src/Plugin/views/argument_default/HubspotTid.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The vocabulary storage.
    *
-   * @var \Drupal\taxonomy\VocabularyStorageInterface
+   * @var VocabularyStorageInterface
    */
   protected $vocabularyStorage;

@@ @@
   /**
    * The Hubspot API.
    *
-   * @var \Drupal\hubspot_integration\Services\HubspotAPI
+   * @var HubspotAPI
    */
   protected $hubspot_api;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.   *
-   * @param \Drupal\taxonomy\VocabularyStorageInterface $vocabulary_storage
+   * @param VocabularyStorageInterface $vocabulary_storage
    *   The vocabulary storage.
    * @param \Drupal\hubspot_integration\Services\HubspotAPI
    *   The Hubspot API.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/hubspot_integration/src/Plugin/views/argument/HubspotTidDepth.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The vocabulary storage.
    *
-   * @var \Drupal\taxonomy\VocabularyStorageInterface
+   * @var VocabularyStorageInterface
    */
   protected $vocabularyStorage;

@@ @@
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The Hubspot API.
    *
-   * @var \Drupal\hubspot_integration\Services\HubspotAPI
+   * @var HubspotAPI
    */
   protected $hubspot_api;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.   *
-   * @param \Drupal\taxonomy\VocabularyStorageInterface $vocabulary_storage
+   * @param VocabularyStorageInterface $vocabulary_storage
    *   The vocabulary storage.
    * @param \Drupal\hubspot_integration\Services\HubspotAPI
    *   The Hubspot API.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/hubspot_integration/src/Plugin/Field/FieldWidget/HubspotBehaviourWidget.php:20

    ---------- begin diff ----------
@@ @@
  */
  
 class HubspotBehaviourWidget extends WidgetBase implements WidgetInterface {
-  
+
   /**
    * {@inheritdoc}
    */
   protected function getSettingOptions($setting_name) {
     $options = [];
-    
+
     switch($setting_name) {
       case 'hs_behaviour':
         $options = [
@@ @@
         ];
         break;
     }
-    
+
     return !empty($options) ? $options : NULL;
   }
-  
+
   /**
    * {@inheritdoc}
    */
@@ @@
       'hs_behaviour' => 'default',
     ];
   }
-  
+
   /**
    * {@inheritdoc}
    */
   public function settingsSummary() {
     $summary = [];
-    
+
     //$summary[] = $this->t('Hubspot Default Behaviour: @hs_behaviour', ['@hs_behaviour' => $this->getSetting('hs_behaviour')]);
-    
+
     return $summary;
   }
-  
+
   /**
    * {@inheritdoc}
    *
@@ @@
    */
   public function formElement(FieldItemListInterface $items, $delta, array $element, array &$form, FormStateInterface $form_state) {
     $value = isset($items[$delta]->hs_behaviour) ? $items[$delta]->hs_behaviour : '';
-    
+
     $element = [
       '#type' => 'radios',
       '#options' => $this->getSettingOptions('hs_behaviour'),
@@ @@
       '#default_value' => $value,
       '#required' => TRUE,
     ];
-    
+
     return ['hs_behaviour' => $element];
   }
-  
+
   /**
    * {@inheritdoc}
    */
   /*public function form(FieldItemListInterface $items, array &$form, FormStateInterface $form_state, $get_delta = NULL) {
     $elements = [];
-    
+
     $elements['hs_behaviour'] = array(
       '#type' => 'radios',
       '#options' => $this->getSettingOptions('hs_behaviour'),
@@ @@
       '#default_value' => $this->getSetting('hs_behaviour'),
       '#required' => TRUE,
     );
-    
+
     return $elements;
   }*/
   
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/hubspot_integration/src/Plugin/Field/FieldFormatter/HubspotFormFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hubspot_integration\Plugin\Field\FieldFormatter;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FormatterBase;
 use Drupal\Core\Field\FieldItemListInterface;
@@ @@
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, HubspotAPI $hubspot_api) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $label, $view_mode, $third_party_settings);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/hubspot_integration/src/Plugin/Field/FieldFormatter/HubspotBehaviourFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hubspot_integration\Plugin\Field\FieldFormatter;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ @@
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, HubspotAPI $hubspot_api) {
     parent::__construct($plugin_id, $plugin_definition, $field_definition, $settings, $label, $view_mode, $third_party_settings);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/hubspot_integration/src/Plugin/Block/HubspotJSFormBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hubspot_integration\Plugin\Block;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   protected $hubspot_api;
   
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
@@ @@
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, HubspotAPI $hubspot_api) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/hubspot_integration/src/Form/HubspotSortForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hubspot_integration\Form;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The Hupspot API service.
    *
-   * @var \Drupal\hubspot_integration\Services\HubspotAPI
+   * @var HubspotAPI
    */
   protected $hubspotApi;

@@ @@
   /**
    * Constructs a HubspotSortForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\hubspot_integration\Services\HubspotAPI $hubspotApi
+   * @param HubspotAPI $hubspotApi
    *   The Hupspot API service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, HubspotAPI $hubspotApi) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitRemoveItemForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
    *
    * @param string $vocabularyId
    *   The identifier of the hubspot configuration type.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    *   The form item structure.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getSortItemFormByVocabulary($vocabularyId, FormStateInterface $form_state) {
     // Set variables.
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitSortItemForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
   /**
    * Get sort item settings from form_state values.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/hubspot_integration/src/Form/HubspotMappingForm.php:14

    ---------- begin diff ----------
@@ @@
  */
 class HubspotMappingForm extends ConfigFormBase {
   protected $config_factory = NULL;
-  /** @var \Drupal\hubspot_integration\Services\HubspotAPI $hubspot_api */
+  /** @var HubspotAPI $hubspot_api */
   protected $hubspot_api = NULL;
   protected $properties = [];
   protected $mapping = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/hubspot_integration/src/Form/HubspotAdminForm.php:13

    ---------- begin diff ----------
@@ @@
  */
 class HubspotAdminForm extends ConfigFormBase {
   
-  /** @var \Drupal\hubspot_integration\Services\HubspotAPI $hubspot_api */
+  /** @var HubspotAPI $hubspot_api */
   protected $hubspot_api;
   
   /**
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/hubspot_integration/src/Controller/HubspotIntegrationController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\hubspot_integration\Controller;

+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Drupal\hubspot_integration\Services\HubspotAPI;
@@ @@
   /**
    * The HubspotApi service.
    *
-   * @var \Drupal\hubspot_integration\Services\HubspotAPI
+   * @var HubspotAPI
    */
   protected $hubspot_api;

@@ @@
   /**
    * The request service.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * Constructs a HubspotIntegrationController object.
    *
-   * @param \Drupal\hubspot_integration\Services\HubspotAPI $hubspot_api
+   * @param HubspotAPI $hubspot_api
    *   The HubspotApi service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(
@@ @@
    * @param string $persona_id
    *   The persona_id value.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   Return a redirect response in most cases.
    */
   public function setPersona($persona_id) {
@@ @@
       );
       if (empty($issetCookie) ||  $issetCookie !== $cookie_value) {
         $response->headers->setCookie(
-          new Cookie(
-            $cookie_key,
-            $cookie_value
-          )
+          Cookie::create($cookie_key, $cookie_value)
         );
       }
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * NewToStaticCallRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/hubspot_integration/src/Controller/HubspotAPIAjaxController.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs a HubspotAPIAjaxController object.
    *
-   * @param \Drupal\hubspot_integration\Services\HubspotAPI $hubspot_api
+   * @param HubspotAPI $hubspot_api
    *   The HubspotApi service.
    */
   public function __construct(HubspotAPI $hubspot_api) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/hubspot_integration/hubspot_integration.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\hubspot_integration\Services\HubspotAPI;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
@@ @@
 function hubspot_integration_page_attachments(&$page) {
   $config = \Drupal::config('hubspot_integration.settings');
   $client_id = $config->get('client_id');
-  /** @var \Drupal\hubspot_integration\Services\HubspotAPI $hubspot_api */
+  /** @var HubspotAPI $hubspot_api */
   $hubspot_api = \Drupal::service('hubspot_integration.api');

   if (!empty($client_id)) {
@@ @@

 function hubspot_integration_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
   if (isset($entity->field_hs_behaviour)) {
-    /** @var \Drupal\hubspot_integration\Services\HubspotAPI $hubspot_api */
+    /** @var HubspotAPI $hubspot_api */
     $behaviour = $entity->get('field_hs_behaviour')->getString();

     if ($behaviour!='default') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


15) modules/contrib/hubspot_integration/hubspot_integration.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Field\FieldStorageDefinitionListenerInterface;
 /**
  * Implements hook_install().
  */
 function hubspot_integration_install() {
   // Create field storage for the 'Hubspot Persona' base field.
-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager */
+  /** @var EntityFieldManagerInterface $entity_field_manager */
   $entity_field_manager = \Drupal::service('entity_field.manager');
-  /** @var \Drupal\Core\Field\FieldStorageDefinitionListenerInterface $field_storage_definition_listener */
+  /** @var FieldStorageDefinitionListenerInterface $field_storage_definition_listener */
   $field_storage_definition_listener = \Drupal::service('field_storage_definition.listener');

   $node_definition = $entity_field_manager->getFieldStorageDefinitions('node')['hs_persona'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 15 files have been changed by Rector                                      

