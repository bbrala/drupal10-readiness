diff --git a/migrate_example_advanced/migrate_example_advanced.install b/migrate_example_advanced/migrate_example_advanced.install
index 2023bde..5068a9a 100644
--- a/migrate_example_advanced/migrate_example_advanced.install
+++ b/migrate_example_advanced/migrate_example_advanced.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\migrate_plus\Entity\MigrationInterface;
 /**
  * @file
  * Install, update and uninstall functions for migrate_example_advanced module.
@@ -16,7 +17,7 @@ use Drupal\migrate_plus\Entity\Migration;
  * site root and here rewrite them to fully-qualified paths.
  */
 function migrate_example_advanced_install() {
-  /** @var \Drupal\migrate_plus\Entity\MigrationInterface $wine_role_xml_migration */
+  /** @var MigrationInterface $wine_role_xml_migration */
   $wine_role_xml_migration = Migration::load('wine_role_xml');
   if ($wine_role_xml_migration) {
     $source = $wine_role_xml_migration->get('source');
@@ -29,7 +30,7 @@ function migrate_example_advanced_install() {
     $wine_role_xml_migration->set('source', $source);
     $wine_role_xml_migration->save();
   }
-  /** @var \Drupal\migrate_plus\Entity\MigrationInterface $wine_role_json_migration */
+  /** @var MigrationInterface $wine_role_json_migration */
   $wine_role_json_migration = Migration::load('wine_role_json');
   if ($wine_role_json_migration) {
     $source = $wine_role_json_migration->get('source');
@@ -42,7 +43,7 @@ function migrate_example_advanced_install() {
     $wine_role_json_migration->set('source', $source);
     $wine_role_json_migration->save();
   }
-  /** @var \Drupal\migrate_plus\Entity\MigrationInterface $wine_variety_multi_xml_migration */
+  /** @var MigrationInterface $wine_variety_multi_xml_migration */
   $wine_variety_multi_xml_migration = Migration::load('wine_variety_multi_xml');
   if ($wine_variety_multi_xml_migration) {
     $source = $wine_variety_multi_xml_migration->get('source');
diff --git a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/PositionResource.php b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/PositionResource.php
index 20fe34a..66dc6eb 100644
--- a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/PositionResource.php
+++ b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/PositionResource.php
@@ -21,7 +21,7 @@ class PositionResource extends ResourceBase {
   /**
    * Responds to GET requests.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The response containing the position data.
    */
   public function get() {
diff --git a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyItems.php b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyItems.php
index 670134c..e12c231 100644
--- a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyItems.php
+++ b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyItems.php
@@ -24,7 +24,7 @@ class VarietyItems extends ResourceBase {
    * @param string $variety
    *   Machine name of the variety to retrieve.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The response containing the requested variety data.
    */
   public function get($variety = NULL) {
diff --git a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyList.php b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyList.php
index bb4bb60..600f304 100644
--- a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyList.php
+++ b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyList.php
@@ -21,7 +21,7 @@ class VarietyList extends ResourceBase {
   /**
    * Responds to GET requests.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The response containing the requested variety data.
    */
   public function get() {
diff --git a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyMultiFiles.php b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyMultiFiles.php
index 5db35b5..ba74223 100644
--- a/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyMultiFiles.php
+++ b/migrate_example_advanced/migrate_example_advanced_setup/src/Plugin/rest/resource/VarietyMultiFiles.php
@@ -24,7 +24,7 @@ class VarietyMultiFiles extends ResourceBase {
    * @param string $type
    *   'red', 'white', or NULL to return all varieties.
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The response containing the requested variety data.
    */
   public function get($type = NULL) {
diff --git a/src/Annotation/Authentication.php b/src/Annotation/Authentication.php
index 5b63e1a..b1e0578 100644
--- a/src/Annotation/Authentication.php
+++ b/src/Annotation/Authentication.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -28,7 +29,7 @@ class Authentication extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/DataFetcher.php b/src/Annotation/DataFetcher.php
index 5c6e24c..812c77a 100644
--- a/src/Annotation/DataFetcher.php
+++ b/src/Annotation/DataFetcher.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -28,7 +29,7 @@ class DataFetcher extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/DataParser.php b/src/Annotation/DataParser.php
index 6bc01e2..d637135 100644
--- a/src/Annotation/DataParser.php
+++ b/src/Annotation/DataParser.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -28,7 +29,7 @@ class DataParser extends Plugin {
   /**
    * The title of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/AuthenticationPluginManager.php b/src/AuthenticationPluginManager.php
index 041094e..d2fe534 100644
--- a/src/AuthenticationPluginManager.php
+++ b/src/AuthenticationPluginManager.php
@@ -22,9 +22,9 @@ class AuthenticationPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/DataFetcherPluginInterface.php b/src/DataFetcherPluginInterface.php
index f35042f..83c21c7 100644
--- a/src/DataFetcherPluginInterface.php
+++ b/src/DataFetcherPluginInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus;
 
+use Psr\Http\Message\ResponseInterface;
 /**
  * Defines an interface for data fetchers.
  *
@@ -42,7 +43,7 @@ interface DataFetcherPluginInterface {
    * @param string $url
    *   URL to retrieve from.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   The HTTP response message.
    */
   public function getResponse($url);
diff --git a/src/DataFetcherPluginManager.php b/src/DataFetcherPluginManager.php
index 941252e..7716a77 100644
--- a/src/DataFetcherPluginManager.php
+++ b/src/DataFetcherPluginManager.php
@@ -22,9 +22,9 @@ class DataFetcherPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/DataParserPluginBase.php b/src/DataParserPluginBase.php
index a4c81cd..7234548 100644
--- a/src/DataParserPluginBase.php
+++ b/src/DataParserPluginBase.php
@@ -53,7 +53,7 @@ abstract class DataParserPluginBase extends PluginBase implements DataParserPlug
   /**
    * The data retrieval client.
    *
-   * @var \Drupal\migrate_plus\DataFetcherPluginInterface
+   * @var DataFetcherPluginInterface
    */
   protected $dataFetcher;
 
@@ -76,7 +76,7 @@ abstract class DataParserPluginBase extends PluginBase implements DataParserPlug
   /**
    * Returns the initialized data fetcher plugin.
    *
-   * @return \Drupal\migrate_plus\DataFetcherPluginInterface
+   * @return DataFetcherPluginInterface
    *   The data fetcher plugin.
    */
   public function getDataFetcherPlugin() {
diff --git a/src/DataParserPluginManager.php b/src/DataParserPluginManager.php
index 65d92b1..6efecb5 100644
--- a/src/DataParserPluginManager.php
+++ b/src/DataParserPluginManager.php
@@ -22,9 +22,9 @@ class DataParserPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Entity/Migration.php b/src/Entity/Migration.php
index c5a04d2..a2146ed 100644
--- a/src/Entity/Migration.php
+++ b/src/Entity/Migration.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus\Entity;
 
+use Drupal\migrate\Plugin\MigrationPluginManagerInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -81,11 +82,11 @@ class Migration extends ConfigEntityBase implements MigrationInterface {
    * @param string $new_plugin_id
    *   ID to use for the new configuration entity.
    *
-   * @return \Drupal\migrate_plus\Entity\MigrationInterface
+   * @return MigrationInterface
    *   A Migration configuration entity (not saved to persistent storage).
    */
   public static function createEntityFromPlugin($plugin_id, $new_plugin_id) {
-    /** @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface $plugin_manager */
+    /** @var MigrationPluginManagerInterface $plugin_manager */
     $plugin_manager = \Drupal::service('plugin.manager.migration');
     /** @var \Drupal\migrate\Plugin\Migration $migration_plugin */
     $migration_plugin = $plugin_manager->createInstance($plugin_id);
diff --git a/src/Event/MigratePrepareRowEvent.php b/src/Event/MigratePrepareRowEvent.php
index 7972cb7..b00130e 100644
--- a/src/Event/MigratePrepareRowEvent.php
+++ b/src/Event/MigratePrepareRowEvent.php
@@ -15,32 +15,32 @@ class MigratePrepareRowEvent extends Event {
   /**
    * Row object.
    *
-   * @var \Drupal\migrate\Row
+   * @var Row
    */
   protected $row;
 
   /**
    * Migration source plugin.
    *
-   * @var \Drupal\migrate\Plugin\MigrateSourceInterface
+   * @var MigrateSourceInterface
    */
   protected $source;
 
   /**
    * Migration plugin.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
   /**
    * Constructs a prepare-row event object.
    *
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   Row of source data to be analyzed/manipulated.
-   * @param \Drupal\migrate\Plugin\MigrateSourceInterface $source
+   * @param MigrateSourceInterface $source
    *   Source plugin that is the source of the event.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   Migration entity.
    */
   public function __construct(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {
@@ -52,7 +52,7 @@ class MigratePrepareRowEvent extends Event {
   /**
    * Gets the row object.
    *
-   * @return \Drupal\migrate\Row
+   * @return Row
    *   The row object about to be imported.
    */
   public function getRow() {
@@ -62,7 +62,7 @@ class MigratePrepareRowEvent extends Event {
   /**
    * Gets the source plugin.
    *
-   * @return \Drupal\migrate\Plugin\MigrateSourceInterface
+   * @return MigrateSourceInterface
    *   The source plugin firing the event.
    */
   public function getSource() {
@@ -72,7 +72,7 @@ class MigratePrepareRowEvent extends Event {
   /**
    * Gets the migration plugin.
    *
-   * @return \Drupal\migrate\Plugin\MigrationInterface
+   * @return MigrationInterface
    *   The migration entity being imported.
    */
   public function getMigration() {
diff --git a/src/Plugin/MigrationConfigDeriver.php b/src/Plugin/MigrationConfigDeriver.php
index d668921..48c0130 100644
--- a/src/Plugin/MigrationConfigDeriver.php
+++ b/src/Plugin/MigrationConfigDeriver.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus\Plugin;
 
+use Drupal\migrate_plus\Entity\MigrationInterface;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\migrate_plus\Entity\Migration;
 
@@ -18,7 +19,7 @@ class MigrationConfigDeriver extends DeriverBase {
     // clearing our internal cache.
     $this->derivatives = [];
     $migrations = Migration::loadMultiple();
-    /** @var \Drupal\migrate_plus\Entity\MigrationInterface $migration */
+    /** @var MigrationInterface $migration */
     foreach ($migrations as $id => $migration) {
       if (!$migration->status()) {
         continue;
diff --git a/src/Plugin/migrate/destination/Table.php b/src/Plugin/migrate/destination/Table.php
index 00d2415..44de1ea 100755
--- a/src/Plugin/migrate/destination/Table.php
+++ b/src/Plugin/migrate/destination/Table.php
@@ -96,7 +96,7 @@ class Table extends DestinationBase implements ContainerFactoryPluginInterface,
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $dbConnection;
 
@@ -130,9 +130,9 @@ class Table extends DestinationBase implements ContainerFactoryPluginInterface,
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration, Connection $connection) {
diff --git a/src/Plugin/migrate/process/Dom.php b/src/Plugin/migrate/process/Dom.php
index 9764887..06f76a2 100644
--- a/src/Plugin/migrate/process/Dom.php
+++ b/src/Plugin/migrate/process/Dom.php
@@ -137,9 +137,9 @@ class Dom extends ProcessPluginBase {
    *
    * @param mixed $value
    *   The string to be imported.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process. Normally, just transforming the value
    *   is adequate but very rarely you might need to change two columns at the
    *   same time or something like that.
@@ -150,7 +150,7 @@ class Dom extends ProcessPluginBase {
    * @return \DOMDocument
    *   The document object based on the provided string.
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    *   When the received $value is not a string.
    */
   public function import($value, MigrateExecutableInterface $migrate_executable, Row $row, $destination_property) {
@@ -202,9 +202,9 @@ class Dom extends ProcessPluginBase {
    *
    * @param mixed $value
    *   The document to be exported.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process. Normally, just transforming the value
    *   is adequate but very rarely you might need to change two columns at the
    *   same time or something like that.
@@ -215,7 +215,7 @@ class Dom extends ProcessPluginBase {
    * @return string
    *   The HTML string corresponding to the provided document object.
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    *   When the received $value is not a \DOMDocument.
    */
   public function export($value, MigrateExecutableInterface $migrate_executable, Row $row, $destination_property) {
diff --git a/src/Plugin/migrate/process/DomApplyStyles.php b/src/Plugin/migrate/process/DomApplyStyles.php
index 995085c..4f0cc0a 100644
--- a/src/Plugin/migrate/process/DomApplyStyles.php
+++ b/src/Plugin/migrate/process/DomApplyStyles.php
@@ -66,7 +66,7 @@ class DomApplyStyles extends DomProcessBase implements ContainerFactoryPluginInt
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
@@ -124,7 +124,7 @@ class DomApplyStyles extends DomProcessBase implements ContainerFactoryPluginInt
    * @param string $format
    *   The text format from which to get configured styles.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   protected function setStyles($format) {
     if (empty($format) || !is_string($format)) {
@@ -144,7 +144,7 @@ class DomApplyStyles extends DomProcessBase implements ContainerFactoryPluginInt
   /**
    * Validate the configured rules.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   protected function validateRules() {
     if (!array_key_exists('rules', $this->configuration) || !is_array($this->configuration['rules'])) {
diff --git a/src/Plugin/migrate/process/DomMigrationLookup.php b/src/Plugin/migrate/process/DomMigrationLookup.php
index fa68d17..205d572 100644
--- a/src/Plugin/migrate/process/DomMigrationLookup.php
+++ b/src/Plugin/migrate/process/DomMigrationLookup.php
@@ -70,14 +70,14 @@ class DomMigrationLookup extends DomStrReplace implements ContainerFactoryPlugin
   /**
    * The migration to be executed.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
   /**
    * The process plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigratePluginManagerInterface
+   * @var MigratePluginManagerInterface
    */
   protected $processPluginManager;
 
diff --git a/src/Plugin/migrate/process/DomProcessBase.php b/src/Plugin/migrate/process/DomProcessBase.php
index 05981ba..33c5998 100644
--- a/src/Plugin/migrate/process/DomProcessBase.php
+++ b/src/Plugin/migrate/process/DomProcessBase.php
@@ -37,7 +37,7 @@ abstract class DomProcessBase extends ProcessPluginBase {
    *   The name of the destination being processed. Used to generate an error
    *   message.
    *
-   * @throws \Drupal\migrate\MigrateSkipRowException
+   * @throws MigrateSkipRowException
    *   If $value is not a \DOMDocument object.
    */
   protected function init($value, $destination_property) {
diff --git a/src/Plugin/migrate/process/EntityGenerate.php b/src/Plugin/migrate/process/EntityGenerate.php
index ab94bb4..0ddb49f 100644
--- a/src/Plugin/migrate/process/EntityGenerate.php
+++ b/src/Plugin/migrate/process/EntityGenerate.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\migrate_plus\Plugin\migrate\process;
 
+use Drupal\migrate\Plugin\MigratePluginManagerInterface;
+use Drupal\migrate\Plugin\migrate\process\Get;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\migrate\MigrateExecutableInterface;
 use Drupal\migrate\Plugin\MigrationInterface;
@@ -50,28 +52,28 @@ class EntityGenerate extends EntityLookup {
   /**
    * The row from the source to process.
    *
-   * @var \Drupal\migrate\Row
+   * @var Row
    */
   protected $row;
 
   /**
    * The migrate executable.
    *
-   * @var \Drupal\migrate\MigrateExecutableInterface
+   * @var MigrateExecutableInterface
    */
   protected $migrateExecutable;
 
   /**
    * The MigratePluginManager instance.
    *
-   * @var \Drupal\migrate\Plugin\MigratePluginManagerInterface
+   * @var MigratePluginManagerInterface
    */
   protected $processPluginManager;
 
   /**
    * The get process plugin instance.
    *
-   * @var \Drupal\migrate\Plugin\migrate\process\Get
+   * @var Get
    */
   protected $getProcessPlugin;
 
diff --git a/src/Plugin/migrate/process/EntityLookup.php b/src/Plugin/migrate/process/EntityLookup.php
index 3581fe6..a49578a 100644
--- a/src/Plugin/migrate/process/EntityLookup.php
+++ b/src/Plugin/migrate/process/EntityLookup.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\migrate_plus\Plugin\migrate\process;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\MigrateException;
@@ -87,28 +90,28 @@ class EntityLookup extends ProcessPluginBase implements ContainerFactoryPluginIn
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The migration.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
   /**
    * The selection plugin.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface
+   * @var SelectionPluginManagerInterface
    */
   protected $selectionPluginManager;
 
diff --git a/src/Plugin/migrate/process/EntityValue.php b/src/Plugin/migrate/process/EntityValue.php
index 4c4026b..fa38449 100644
--- a/src/Plugin/migrate/process/EntityValue.php
+++ b/src/Plugin/migrate/process/EntityValue.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\migrate_plus\Plugin\migrate\process;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Entity\RevisionableStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -50,7 +54,7 @@ class EntityValue extends ProcessPluginBase implements ContainerFactoryPluginInt
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -71,7 +75,7 @@ class EntityValue extends ProcessPluginBase implements ContainerFactoryPluginInt
   /**
    * The storage for the configured entity type.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface|\Drupal\Core\Entity\RevisionableStorageInterface
+   * @var EntityStorageInterface|RevisionableStorageInterface
    */
   protected $entityStorage;
 
@@ -91,11 +95,11 @@ class EntityValue extends ProcessPluginBase implements ContainerFactoryPluginInt
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    * @throws \InvalidArgumentException
    */
   public function __construct(
@@ -189,7 +193,7 @@ class EntityValue extends ProcessPluginBase implements ContainerFactoryPluginInt
    * @param array $ids
    *   The entity IDs.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   The entities.
    */
   protected function loadEntities(array $ids) {
diff --git a/src/Plugin/migrate/process/FileBlob.php b/src/Plugin/migrate/process/FileBlob.php
index da1a854..5220924 100644
--- a/src/Plugin/migrate/process/FileBlob.php
+++ b/src/Plugin/migrate/process/FileBlob.php
@@ -76,7 +76,7 @@ class FileBlob extends ProcessPluginBase implements ContainerFactoryPluginInterf
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -89,7 +89,7 @@ class FileBlob extends ProcessPluginBase implements ContainerFactoryPluginInterf
    *   The plugin ID.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, FileSystemInterface $file_system) {
diff --git a/src/Plugin/migrate/process/SkipOnValue.php b/src/Plugin/migrate/process/SkipOnValue.php
index d05cdaf..9e636c6 100644
--- a/src/Plugin/migrate/process/SkipOnValue.php
+++ b/src/Plugin/migrate/process/SkipOnValue.php
@@ -78,9 +78,9 @@ class SkipOnValue extends ProcessPluginBase {
    *
    * @param mixed $value
    *   The input value.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process.
    * @param string $destination_property
    *   The destination property currently worked on. This is only used together
@@ -89,7 +89,7 @@ class SkipOnValue extends ProcessPluginBase {
    * @return mixed
    *   The input value, $value, if it doesn't evaluate to a configured value.
    *
-   * @throws \Drupal\migrate\MigrateSkipRowException
+   * @throws MigrateSkipRowException
    *   Thrown if the source property evaluates to a configured value and the
    *   row should be skipped, records with STATUS_IGNORED status in the map.
    */
@@ -121,9 +121,9 @@ class SkipOnValue extends ProcessPluginBase {
    *
    * @param mixed $value
    *   The input value.
-   * @param \Drupal\migrate\MigrateExecutableInterface $migrate_executable
+   * @param MigrateExecutableInterface $migrate_executable
    *   The migration in which this process is being executed.
-   * @param \Drupal\migrate\Row $row
+   * @param Row $row
    *   The row from the source to process.
    * @param string $destination_property
    *   The destination property currently worked on. This is only used together
@@ -132,7 +132,7 @@ class SkipOnValue extends ProcessPluginBase {
    * @return mixed
    *   The input value, $value, if it doesn't evaluate to a configured value.
    *
-   * @throws \Drupal\migrate\MigrateSkipProcessException
+   * @throws MigrateSkipProcessException
    *   Thrown if the source property evaluates to a configured value and rest
    *   of the process should be skipped.
    */
diff --git a/src/Plugin/migrate/process/Transliteration.php b/src/Plugin/migrate/process/Transliteration.php
index 1ee48da..3b713fb 100644
--- a/src/Plugin/migrate/process/Transliteration.php
+++ b/src/Plugin/migrate/process/Transliteration.php
@@ -45,7 +45,7 @@ class Transliteration extends ProcessPluginBase implements ContainerFactoryPlugi
   /**
    * The transliteration service.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;
 
@@ -58,7 +58,7 @@ class Transliteration extends ProcessPluginBase implements ContainerFactoryPlugi
    *   The plugin ID.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Component\Transliteration\TransliterationInterface $transliteration
+   * @param TransliterationInterface $transliteration
    *   The transliteration service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, TransliterationInterface $transliteration) {
diff --git a/src/Plugin/migrate/source/Url.php b/src/Plugin/migrate/source/Url.php
index 242223b..a89f76b 100644
--- a/src/Plugin/migrate/source/Url.php
+++ b/src/Plugin/migrate/source/Url.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus\Plugin\migrate\source;
 
+use Drupal\migrate_plus\DataParserPluginInterface;
 use Drupal\migrate\Plugin\MigrationInterface;
 
 /**
@@ -23,7 +24,7 @@ class Url extends SourcePluginExtension {
   /**
    * The data parser plugin.
    *
-   * @var \Drupal\migrate_plus\DataParserPluginInterface
+   * @var DataParserPluginInterface
    */
   protected $dataParserPlugin;
 
@@ -54,7 +55,7 @@ class Url extends SourcePluginExtension {
   /**
    * Returns the initialized data parser plugin.
    *
-   * @return \Drupal\migrate_plus\DataParserPluginInterface
+   * @return DataParserPluginInterface
    *   The data parser plugin.
    */
   public function getDataParserPlugin() {
diff --git a/src/Plugin/migrate_plus/data_fetcher/Http.php b/src/Plugin/migrate_plus/data_fetcher/Http.php
index 46f2451..73e33c5 100755
--- a/src/Plugin/migrate_plus/data_fetcher/Http.php
+++ b/src/Plugin/migrate_plus/data_fetcher/Http.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\migrate_plus\Plugin\migrate_plus\data_fetcher;
 
+use GuzzleHttp\Client;
+use Drupal\migrate_plus\AuthenticationPluginInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate\MigrateException;
 use Drupal\migrate_plus\DataFetcherPluginBase;
@@ -33,7 +35,7 @@ class Http extends DataFetcherPluginBase implements ContainerFactoryPluginInterf
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -47,7 +49,7 @@ class Http extends DataFetcherPluginBase implements ContainerFactoryPluginInterf
   /**
    * The data retrieval client.
    *
-   * @var \Drupal\migrate_plus\AuthenticationPluginInterface
+   * @var AuthenticationPluginInterface
    */
   protected $authenticationPlugin;
 
@@ -66,7 +68,7 @@ class Http extends DataFetcherPluginBase implements ContainerFactoryPluginInterf
   /**
    * Returns the initialized authentication plugin.
    *
-   * @return \Drupal\migrate_plus\AuthenticationPluginInterface
+   * @return AuthenticationPluginInterface
    *   The authentication plugin.
    */
   public function getAuthenticationPlugin() {
diff --git a/src/Plugin/migrate_plus/data_parser/Json.php b/src/Plugin/migrate_plus/data_parser/Json.php
index 0a15eef..620a8f8 100755
--- a/src/Plugin/migrate_plus/data_parser/Json.php
+++ b/src/Plugin/migrate_plus/data_parser/Json.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_plus\Plugin\migrate_plus\data_parser;
 
+use GuzzleHttp\Exception\RequestException;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\migrate_plus\DataParserPluginBase;
 
@@ -31,7 +32,7 @@ class Json extends DataParserPluginBase implements ContainerFactoryPluginInterfa
    * @return array
    *   The selected data to be iterated.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    */
   protected function getSourceData($url) {
     $response = $this->getDataFetcherPlugin()->getResponseContent($url);
diff --git a/src/Plugin/migrate_plus/data_parser/Soap.php b/src/Plugin/migrate_plus/data_parser/Soap.php
index 3f8a754..b84e12d 100755
--- a/src/Plugin/migrate_plus/data_parser/Soap.php
+++ b/src/Plugin/migrate_plus/data_parser/Soap.php
@@ -48,7 +48,7 @@ class Soap extends DataParserPluginBase implements ContainerFactoryPluginInterfa
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\migrate\Exception\RequirementsException
+   * @throws RequirementsException
    *   If PHP SOAP extension is not installed.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition) {
@@ -66,7 +66,7 @@ class Soap extends DataParserPluginBase implements ContainerFactoryPluginInterfa
    *
    * @throws \SoapFault
    *   If there's an error in a SOAP call.
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    *   If we can't resolve the SOAP function or its response property.
    */
   protected function openSourceUrl($url) {
diff --git a/src/Plugin/migrate_plus/data_parser/Xml.php b/src/Plugin/migrate_plus/data_parser/Xml.php
index ca90134..f2b01a2 100644
--- a/src/Plugin/migrate_plus/data_parser/Xml.php
+++ b/src/Plugin/migrate_plus/data_parser/Xml.php
@@ -140,7 +140,7 @@ class Xml extends DataParserPluginBase {
    *   A \SimpleXmlElement when the document is parseable, or false if a
    *   parsing error occurred.
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    */
   protected function getSimpleXml() {
     $node = $this->reader->expand();
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 02edda0..f5275f3 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migrate_plus\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -27,7 +28,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
diff --git a/tests/src/Kernel/EntityLookupAccessTest.php b/tests/src/Kernel/EntityLookupAccessTest.php
index 794484f..1741b08 100644
--- a/tests/src/Kernel/EntityLookupAccessTest.php
+++ b/tests/src/Kernel/EntityLookupAccessTest.php
@@ -31,14 +31,14 @@ class EntityLookupAccessTest extends KernelTestBase {
   /**
    * A user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * A test entity.
    *
-   * @var \Drupal\entity_test\Entity\EntityTest
+   * @var EntityTest
    */
   protected $entity;
 
diff --git a/tests/src/Kernel/MigrateTableIncrementTest.php b/tests/src/Kernel/MigrateTableIncrementTest.php
index f145498..75baf91 100755
--- a/tests/src/Kernel/MigrateTableIncrementTest.php
+++ b/tests/src/Kernel/MigrateTableIncrementTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel;
 
+use Drupal\Core\Database\Connection;
+use Drupal\migrate\MigrateException;
 use Drupal\migrate\MigrateExecutable;
 use Drupal\Tests\migrate\Kernel\MigrateTestBase;
 
@@ -17,7 +19,7 @@ class MigrateTableIncrementTest extends MigrateTestBase {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -121,7 +123,7 @@ class MigrateTableIncrementTest extends MigrateTestBase {
    *
    * @dataProvider tableDestinationMigration
    *
-   * @throws \Drupal\migrate\MigrateException
+   * @throws MigrateException
    */
   public function testTableDestination(array $definition) {
     $migration = \Drupal::service('plugin.manager.migration')->createStubMigration($definition);
diff --git a/tests/src/Kernel/MigrateTableTest.php b/tests/src/Kernel/MigrateTableTest.php
index 27e2eb9..44afd36 100755
--- a/tests/src/Kernel/MigrateTableTest.php
+++ b/tests/src/Kernel/MigrateTableTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel;
 
+use Drupal\Core\Database\Connection;
+use Drupal\migrate\Plugin\MigrationInterface;
 use Drupal\migrate\MigrateExecutable;
 use Drupal\migrate\Plugin\MigrateIdMapInterface;
 use Drupal\migrate\Row;
@@ -20,7 +22,7 @@ class MigrateTableTest extends MigrateTestBase {
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -213,6 +215,7 @@ class MigrateTableTest extends MigrateTestBase {
    * Tests table update.
    *
    * @dataProvider tableDestinationMigration
+   * @doesNotPerformAssertions
    */
   public function testTableUpdate(array $definition): void {
     // Make sure migration overwrites the original data for the first row.
@@ -225,7 +228,7 @@ class MigrateTableTest extends MigrateTestBase {
       ->fields($original_values)
       ->execute();
 
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration */
+    /** @var MigrationInterface $migration */
     $migration = \Drupal::service('plugin.manager.migration')
       ->createStubMigration($definition);
     $migration->getIdMap()->saveIdMapping(new Row($original_values,
diff --git a/tests/src/Kernel/MigrationConfigEntityTest.php b/tests/src/Kernel/MigrationConfigEntityTest.php
index f7f9841..541ba25 100644
--- a/tests/src/Kernel/MigrationConfigEntityTest.php
+++ b/tests/src/Kernel/MigrationConfigEntityTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel;
 
+use Drupal\migrate\Plugin\MigrationPluginManager;
+use Drupal\migrate\Plugin\MigrationInterface;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\migrate\MigrateExecutable;
 use Drupal\migrate_plus\Entity\Migration;
@@ -30,7 +32,7 @@ class MigrationConfigEntityTest extends MigrateTestBase {
   /**
    * The plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManager
+   * @var MigrationPluginManager
    */
   protected $pluginManager;
 
@@ -116,7 +118,7 @@ class MigrationConfigEntityTest extends MigrateTestBase {
    */
   public function testImport(): void {
     $this->installConfig('migrate_plus_test');
-    /** @var \Drupal\migrate\Plugin\MigrationInterface $migration */
+    /** @var MigrationInterface $migration */
     $migration = $this->pluginManager->createInstance('fruit_terms');
     $id_map = $migration->getIdMap();
     $executable = new MigrateExecutable($migration, $this);
diff --git a/tests/src/Kernel/MigrationGroupTest.php b/tests/src/Kernel/MigrationGroupTest.php
index eb62bb4..64f1062 100644
--- a/tests/src/Kernel/MigrationGroupTest.php
+++ b/tests/src/Kernel/MigrationGroupTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel;
 
+use Drupal\migrate_plus\Entity\MigrationGroupInterface;
+use Drupal\migrate_plus\Entity\MigrationInterface;
+use Drupal\migrate\Plugin\MigrationPluginManagerInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migrate_plus\Entity\Migration;
 use Drupal\migrate_plus\Entity\MigrationGroup;
@@ -24,7 +27,7 @@ class MigrationGroupTest extends KernelTestBase {
   public function testConfigurationMerge(): void {
     $group_id = 'test_group';
 
-    /** @var \Drupal\migrate_plus\Entity\MigrationGroupInterface $migration_group */
+    /** @var MigrationGroupInterface $migration_group */
     $group_configuration = [
       'id' => $group_id,
       'shared_configuration' => [
@@ -46,7 +49,7 @@ class MigrationGroupTest extends KernelTestBase {
     $this->container->get('entity_type.manager')->getStorage('migration_group')
       ->create($group_configuration)->save();
 
-    /** @var \Drupal\migrate_plus\Entity\MigrationInterface $migration */
+    /** @var MigrationInterface $migration */
     $migration = $this->container->get('entity_type.manager')
       ->getStorage('migration')->create([
         'id' => 'specific_migration',
@@ -99,7 +102,7 @@ class MigrationGroupTest extends KernelTestBase {
    * Test that deleting a group deletes its migrations.
    */
   public function testDelete(): void {
-    /** @var \Drupal\migrate_plus\Entity\MigrationGroupInterface $migration_group */
+    /** @var MigrationGroupInterface $migration_group */
     $group_configuration = [
       'id' => 'test_group',
     ];
@@ -107,7 +110,7 @@ class MigrationGroupTest extends KernelTestBase {
       ->getStorage('migration_group')->create($group_configuration);
     $migration_group->save();
 
-    /** @var \Drupal\migrate_plus\Entity\MigrationInterface $migration */
+    /** @var MigrationInterface $migration */
     $migration = $this->container->get('entity_type.manager')
       ->getStorage('migration')->create([
         'id' => 'specific_migration',
@@ -120,11 +123,11 @@ class MigrationGroupTest extends KernelTestBase {
       ]);
     $migration->save();
 
-    /** @var \Drupal\migrate_plus\Entity\MigrationGroupInterface $loaded_migration_group */
+    /** @var MigrationGroupInterface $loaded_migration_group */
     $loaded_migration_group = MigrationGroup::load('test_group');
     $loaded_migration_group->delete();
 
-    /** @var \Drupal\migrate_plus\Entity\MigrationInterface $loaded_migration */
+    /** @var MigrationInterface $loaded_migration */
     $loaded_migration = Migration::load('specific_migration');
     $this->assertNull($loaded_migration);
   }
@@ -135,7 +138,7 @@ class MigrationGroupTest extends KernelTestBase {
   public function testDefaultGroup(): void {
     $this->installConfig('migrate_plus_test');
 
-    /** @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface $pluginManager */
+    /** @var MigrationPluginManagerInterface $pluginManager */
     $pluginManager = \Drupal::service('plugin.manager.migration');
     $migration = $pluginManager->getDefinition('dummy');
     $this->assertEquals($migration['migration_group'], 'default', 'Migrations without an explicit group are assigned the default group.');
diff --git a/tests/src/Kernel/Plugin/migrate/process/DefaultEntityValueTest.php b/tests/src/Kernel/Plugin/migrate/process/DefaultEntityValueTest.php
index 1d4769b..ed82be8 100644
--- a/tests/src/Kernel/Plugin/migrate/process/DefaultEntityValueTest.php
+++ b/tests/src/Kernel/Plugin/migrate/process/DefaultEntityValueTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate\process;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migrate\MigrateExecutableInterface;
 use Drupal\migrate\Plugin\MigrateDestinationInterface;
@@ -17,6 +18,7 @@ use Drupal\Tests\user\Traits\UserCreationTrait;
  */
 class DefaultEntityValueTest extends KernelTestBase {
 
+  use ProphecyTrait;
   use UserCreationTrait;
 
   /**
diff --git a/tests/src/Kernel/Plugin/migrate/process/EntityGenerateTest.php b/tests/src/Kernel/Plugin/migrate/process/EntityGenerateTest.php
index 32b4c7e..6e0bafb 100644
--- a/tests/src/Kernel/Plugin/migrate/process/EntityGenerateTest.php
+++ b/tests/src/Kernel/Plugin/migrate/process/EntityGenerateTest.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate\process;
 
+use Drupal\migrate\Plugin\MigrationPluginManager;
+use Drupal\migrate\Plugin\Migration;
+use Drupal\Core\Entity\EntityStorageBase;
+use Drupal\Core\Entity\ContentEntityStorageInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Language\LanguageInterface;
@@ -64,7 +68,7 @@ class EntityGenerateTest extends KernelTestBase implements MigrateMessageInterfa
   /**
    * The migration plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManager
+   * @var MigrationPluginManager
    */
   protected $migrationPluginManager;
 
@@ -147,12 +151,12 @@ class EntityGenerateTest extends KernelTestBase implements MigrateMessageInterfa
       }
     }
 
-    /** @var \Drupal\migrate\Plugin\Migration $migration */
+    /** @var Migration $migration */
     $migration = $this->migrationPluginManager->createStubMigration($definition);
     $reflector = new \ReflectionObject($migration->getDestinationPlugin());
     $attribute = $reflector->getProperty('storage');
     $attribute->setAccessible(true);
-    /** @var \Drupal\Core\Entity\EntityStorageBase $storage */
+    /** @var EntityStorageBase $storage */
     $storage = $attribute->getValue($migration->getDestinationPlugin());
     $migrationExecutable = (new MigrateExecutable($migration, $this));
     $migrationExecutable->import();
@@ -263,7 +267,7 @@ class EntityGenerateTest extends KernelTestBase implements MigrateMessageInterfa
         'plugin' => 'entity:node',
       ],
     ];
-    /** @var \Drupal\migrate\Plugin\Migration $migration */
+    /** @var Migration $migration */
     $migration = $this->migrationPluginManager->createStubMigration($definition);
     $migrationExecutable = (new MigrateExecutable($migration, $this));
     $migrationExecutable->import();
@@ -305,7 +309,7 @@ class EntityGenerateTest extends KernelTestBase implements MigrateMessageInterfa
         'plugin' => 'entity:node',
       ],
     ];
-    /** @var \Drupal\migrate\Plugin\Migration $migration */
+    /** @var Migration $migration */
     $migration = $this->migrationPluginManager->createStubMigration($definition);
     $migrationExecutable = (new MigrateExecutable($migration, $this));
     $migrationExecutable->import();
@@ -981,7 +985,7 @@ class EntityGenerateTest extends KernelTestBase implements MigrateMessageInterfa
    *   The entity identifier.
    */
   private function createTestData($storageName, array $values) {
-    /** @var \Drupal\Core\Entity\ContentEntityStorageInterface $storage */
+    /** @var ContentEntityStorageInterface $storage */
     $storage = $this->container
       ->get('entity_type.manager')
       ->getStorage($storageName);
diff --git a/tests/src/Kernel/Plugin/migrate/process/EntityLookupTest.php b/tests/src/Kernel/Plugin/migrate/process/EntityLookupTest.php
index e5a205e..7c89cff 100644
--- a/tests/src/Kernel/Plugin/migrate/process/EntityLookupTest.php
+++ b/tests/src/Kernel/Plugin/migrate/process/EntityLookupTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate\process;
 
+use Drupal\migrate\MigrateExecutable;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migrate\Row;
 use Drupal\Tests\node\Traits\NodeCreationTrait;
@@ -21,7 +23,7 @@ class EntityLookupTest extends KernelTestBase {
   /**
    * The migrate executable mock object.
    *
-   * @var \Drupal\migrate\MigrateExecutable|\PHPUnit\Framework\MockObject\MockObject
+   * @var MigrateExecutable|MockObject
    */
   protected $migrateExecutable;
 
@@ -47,9 +49,7 @@ class EntityLookupTest extends KernelTestBase {
     $this->installEntitySchema('node');
     $this->installConfig(['filter']);
 
-    $this->migrateExecutable = $this->getMockBuilder('Drupal\migrate\MigrateExecutable')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->migrateExecutable = $this->createMock('Drupal\migrate\MigrateExecutable');
 
     $test_nodes = [
       ['title' => 'foo 1'],
diff --git a/tests/src/Kernel/Plugin/migrate/process/EntityValueTest.php b/tests/src/Kernel/Plugin/migrate/process/EntityValueTest.php
index 9ffe665..1a4b24b 100644
--- a/tests/src/Kernel/Plugin/migrate/process/EntityValueTest.php
+++ b/tests/src/Kernel/Plugin/migrate/process/EntityValueTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate\process;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\migrate_plus\Plugin\migrate\process\EntityValue;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migrate\MigrateException;
 use Drupal\migrate\MigrateExecutableInterface;
@@ -18,6 +20,7 @@ use Drupal\node\Entity\NodeType;
  */
 class EntityValueTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * The generated title.
    *
@@ -42,7 +45,7 @@ class EntityValueTest extends KernelTestBase {
   /**
    * The plugin to test.
    *
-   * @var \Drupal\migrate_plus\Plugin\migrate\process\EntityValue
+   * @var EntityValue
    */
   protected $plugin;
 
diff --git a/tests/src/Kernel/Plugin/migrate/process/FileBlobTest.php b/tests/src/Kernel/Plugin/migrate/process/FileBlobTest.php
index 378965c..620cbd3 100644
--- a/tests/src/Kernel/Plugin/migrate/process/FileBlobTest.php
+++ b/tests/src/Kernel/Plugin/migrate/process/FileBlobTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate\process;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\migrate\Plugin\MigratePluginManagerInterface;
+use Drupal\migrate_plus\Plugin\migrate\process\FileBlob;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migrate\MigrateExecutableInterface;
@@ -16,6 +19,7 @@ use Drupal\Tests\user\Traits\UserCreationTrait;
  */
 class FileBlobTest extends KernelTestBase {
 
+  use ProphecyTrait;
   use UserCreationTrait;
 
   /**
@@ -30,7 +34,7 @@ class FileBlobTest extends KernelTestBase {
   /**
    * The process plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigratePluginManagerInterface
+   * @var MigratePluginManagerInterface
    */
   protected $pluginManager;
 
@@ -51,7 +55,7 @@ class FileBlobTest extends KernelTestBase {
   /**
    * The filesystem interface.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $filesystem;
 
@@ -201,11 +205,11 @@ EOT;
    * @covers ::transform
    */
   public function testFileCreation(): void {
-    /** @var \Drupal\migrate\MigrateExecutableInterface $executable */
+    /** @var MigrateExecutableInterface $executable */
     $executable = $this->prophesize(MigrateExecutableInterface::class)->reveal();
     $row = new Row([], []);
     $value = ['public://cat.jpeg', base64_decode($this->blob, TRUE)];
-    /** @var \Drupal\migrate_plus\Plugin\migrate\process\FileBlob $file_blob */
+    /** @var FileBlob $file_blob */
     $file_blob = $this->pluginManager->createInstance('file_blob');
     $file = $file_blob->transform($value, $executable, $row, 'destination_property');
     $this->assertEquals('public://cat.jpeg', $file);
@@ -213,9 +217,9 @@ EOT;
     $configuration = [
       'reuse' => FileSystemInterface::EXISTS_ERROR,
     ];
-    /** @var \Drupal\migrate_plus\Plugin\migrate\process\FileBlob $file_blob */
+    /** @var FileBlob $file_blob */
     $file_blob = $this->pluginManager->createInstance('file_blob', $configuration);
-    /** @var \Drupal\migrate\MigrateExecutableInterface $executable */
+    /** @var MigrateExecutableInterface $executable */
     $file = $file_blob->transform($value, $executable, $row, 'destination_property');
     $this->assertEquals('public://cat.jpeg', $file);
     $this->assertEquals($this->sha1sum, sha1_file($file));
diff --git a/tests/src/Kernel/Plugin/migrate/process/ServiceTest.php b/tests/src/Kernel/Plugin/migrate/process/ServiceTest.php
index 5908686..339b424 100644
--- a/tests/src/Kernel/Plugin/migrate/process/ServiceTest.php
+++ b/tests/src/Kernel/Plugin/migrate/process/ServiceTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate\process;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\migrate\Plugin\MigratePluginManagerInterface;
+use Drupal\migrate_plus\Plugin\migrate\process\Service;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migrate\MigrateExecutableInterface;
 use Drupal\migrate\Row;
@@ -14,6 +17,7 @@ use Drupal\migrate\Row;
  */
 class ServiceTest extends KernelTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ -26,7 +30,7 @@ class ServiceTest extends KernelTestBase {
   /**
    * The process plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigratePluginManagerInterface
+   * @var MigratePluginManagerInterface
    */
   protected $pluginManager;
 
@@ -45,14 +49,14 @@ class ServiceTest extends KernelTestBase {
    * @covers ::create
    */
   public function testValidConfig(): void {
-    /** @var \Drupal\migrate\MigrateExecutableInterface $executable */
+    /** @var MigrateExecutableInterface $executable */
     $executable = $this->prophesize(MigrateExecutableInterface::class)->reveal();
     $row = new Row([], []);
     $configuration = [
       'service' => 'email.validator',
       'method' => 'isValid',
     ];
-    /** @var \Drupal\migrate_plus\Plugin\migrate\process\Service $service */
+    /** @var Service $service */
     $service = $this->pluginManager->createInstance('service', $configuration);
 
     // Test a valid email address.
diff --git a/tests/src/Kernel/Plugin/migrate/source/TableTest.php b/tests/src/Kernel/Plugin/migrate/source/TableTest.php
index d01f02f..7fae42c 100644
--- a/tests/src/Kernel/Plugin/migrate/source/TableTest.php
+++ b/tests/src/Kernel/Plugin/migrate/source/TableTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate\source;
 
+use Drupal\migrate\Plugin\MigrationPluginManager;
 use Drupal\migrate\Exception\RequirementsException;
 use Drupal\Tests\migrate_drupal\Kernel\d7\MigrateDrupal7TestBase;
 
@@ -22,7 +23,7 @@ class TableTest extends MigrateDrupal7TestBase {
   /**
    * The migration plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManager
+   * @var MigrationPluginManager
    */
   protected $migrationPluginManager;
 
diff --git a/tests/src/Kernel/Plugin/migrate_plus/data_parser/BaseXmlTest.php b/tests/src/Kernel/Plugin/migrate_plus/data_parser/BaseXmlTest.php
index 9d2e06b..5693842 100644
--- a/tests/src/Kernel/Plugin/migrate_plus/data_parser/BaseXmlTest.php
+++ b/tests/src/Kernel/Plugin/migrate_plus/data_parser/BaseXmlTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate_plus\data_parser;
 
+use Drupal\migrate_plus\DataParserPluginManager;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\migrate_plus\DataParserPluginInterface;
 
@@ -29,7 +30,7 @@ abstract class BaseXmlTest extends KernelTestBase {
   /**
    * The plugin manager.
    *
-   * @var \Drupal\migrate_plus\DataParserPluginManager
+   * @var DataParserPluginManager
    */
   protected $pluginManager;
 
@@ -208,7 +209,7 @@ abstract class BaseXmlTest extends KernelTestBase {
   /**
    * Returns a parse object with active configuration.
    *
-   * @return \Drupal\migrate_plus\DataParserPluginInterface
+   * @return DataParserPluginInterface
    *   Data parser object.
    */
   abstract protected function getParser(): DataParserPluginInterface;
diff --git a/tests/src/Kernel/Plugin/migrate_plus/data_parser/JsonTest.php b/tests/src/Kernel/Plugin/migrate_plus/data_parser/JsonTest.php
index 8659f3d..ccbc215 100644
--- a/tests/src/Kernel/Plugin/migrate_plus/data_parser/JsonTest.php
+++ b/tests/src/Kernel/Plugin/migrate_plus/data_parser/JsonTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Kernel\Plugin\migrate_plus\data_parser;
 
+use Drupal\migrate_plus\DataParserPluginManager;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -26,7 +28,7 @@ class JsonTest extends KernelTestBase {
   /**
    * The plugin manager.
    *
-   * @var \Drupal\migrate_plus\DataParserPluginManager
+   * @var DataParserPluginManager
    */
   protected $pluginManager;
 
@@ -57,7 +59,7 @@ class JsonTest extends KernelTestBase {
    *
    * @dataProvider providerTestMissingProperties
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    * @throws \Exception
    */
   public function testMissingProperties($file, array $ids, array $fields, array $expected): void {
diff --git a/tests/src/Unit/DataParserPluginBaseTest.php b/tests/src/Unit/DataParserPluginBaseTest.php
index 3aea50e..b8bbcc5 100644
--- a/tests/src/Unit/DataParserPluginBaseTest.php
+++ b/tests/src/Unit/DataParserPluginBaseTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migrate_plus\Unit;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\migrate_plus\DataParserPluginBase;
 use Drupal\Tests\migrate\Unit\MigrateTestCase;
 
@@ -57,7 +58,7 @@ class DataParserPluginBaseTest extends MigrateTestCase {
    * @param array $configuration
    *   The configuration to pass to the data parser.
    *
-   * @return \PHPUnit\Framework\MockObject\MockObject|\Drupal\Tests\migrate_plus\Unit\DataParserPluginBaseMock
+   * @return MockObject|\Drupal\Tests\migrate_plus\Unit\DataParserPluginBaseMock
    *   An mock instance of DataParserPluginBase.
    */
   protected function getMockedDataParser(array $configuration = []) {
diff --git a/tests/src/Unit/data_fetcher/FileTest.php b/tests/src/Unit/data_fetcher/FileTest.php
index 746f44a..f365982 100644
--- a/tests/src/Unit/data_fetcher/FileTest.php
+++ b/tests/src/Unit/data_fetcher/FileTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migrate_plus\Unit\data_fetcher;
 
+use org\bovigo\vfs\vfsStreamDirectory;
 use Drupal\migrate\MigrateException;
 use Drupal\migrate_plus\Plugin\migrate_plus\data_fetcher\File;
 use Drupal\Tests\migrate\Unit\MigrateTestCase;
@@ -76,7 +77,7 @@ class FileTest extends MigrateTestCase {
   /**
    * Define virtual dir where we'll be creating files in/fetching files from.
    *
-   * @var \org\bovigo\vfs\vfsStreamDirectory
+   * @var vfsStreamDirectory
    */
   private $baseDir;
 
diff --git a/tests/src/Unit/data_fetcher/HttpTest.php b/tests/src/Unit/data_fetcher/HttpTest.php
index 48d3663..4632538 100644
--- a/tests/src/Unit/data_fetcher/HttpTest.php
+++ b/tests/src/Unit/data_fetcher/HttpTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migrate_plus\Unit\data_fetcher;
 
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\migrate\MigrateException;
 use Drupal\migrate_plus\DataFetcherPluginBase;
 use Drupal\migrate_plus\Plugin\migrate_plus\authentication\Basic;
@@ -80,7 +81,7 @@ class HttpTest extends MigrateTestCase {
   /**
    * Mocked up Basic authentication plugin.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var MockObject
    */
   private $basicAuthenticator = NULL;
 
@@ -89,9 +90,7 @@ class HttpTest extends MigrateTestCase {
    */
   public function setUp(): void {
     // Mock up a Basic authentication plugin that will be used in requests.
-    $basic_authenticator = $this->getMockBuilder(Basic::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $basic_authenticator = $this->createMock(Basic::class);
 
     $basic_authenticator->method('getAuthenticationOptions')
       ->will($this->returnValue([
@@ -180,7 +179,7 @@ class TestHttp extends Http {
   /**
    * Mocked authenticator plugin.
    *
-   * @var \PHPUnit_Framework_MockObject_MockObject
+   * @var MockObject
    */
   public $authenticator = NULL;
 
@@ -230,7 +229,7 @@ class TestHttp extends Http {
    *
    * So we can mock the authentication plugin.
    *
-   * @return \PHPUnit_Framework_MockObject_MockObject
+   * @return MockObject
    *   A mocked authentication plugin.
    */
   public function getAuthenticationPlugin() {
diff --git a/tests/src/Unit/process/DomApplyStylesTest.php b/tests/src/Unit/process/DomApplyStylesTest.php
index 5ed3e54..b66bfe4 100644
--- a/tests/src/Unit/process/DomApplyStylesTest.php
+++ b/tests/src/Unit/process/DomApplyStylesTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Unit\process;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Config\ConfigFactory;
@@ -18,6 +20,7 @@ use Drupal\Tests\migrate\Unit\process\MigrateProcessTestCase;
  */
 class DomApplyStylesTest extends MigrateProcessTestCase {
 
+  use ProphecyTrait;
   /**
    * Example configuration for the dom_apply_styles process plugin.
    *
@@ -41,7 +44,7 @@ class DomApplyStylesTest extends MigrateProcessTestCase {
   /**
    * Mock a config factory object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory = NULL;
 
diff --git a/tests/src/Unit/process/DomMigrationLookupTest.php b/tests/src/Unit/process/DomMigrationLookupTest.php
index 278eac2..ee7d97d 100644
--- a/tests/src/Unit/process/DomMigrationLookupTest.php
+++ b/tests/src/Unit/process/DomMigrationLookupTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\migrate_plus\Unit\process;
 
+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\migrate\Plugin\MigratePluginManagerInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Utility\Html;
 use Drupal\migrate\MigrateSkipRowException;
@@ -19,6 +21,7 @@ use Drupal\Tests\migrate\Unit\process\MigrateProcessTestCase;
  */
 class DomMigrationLookupTest extends MigrateProcessTestCase {
 
+  use ProphecyTrait;
   /**
    * Example configuration for the dom_migration_lookup process plugin.
    *
@@ -44,14 +47,14 @@ class DomMigrationLookupTest extends MigrateProcessTestCase {
   /**
    * Mock a migration.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected $migration;
 
   /**
    * Mock a process plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigratePluginManagerInterface
+   * @var MigratePluginManagerInterface
    */
   protected $processPluginManager;
 
diff --git a/tests/src/Unit/process/TransliterationTest.php b/tests/src/Unit/process/TransliterationTest.php
index bcd1bcb..8f5529a 100644
--- a/tests/src/Unit/process/TransliterationTest.php
+++ b/tests/src/Unit/process/TransliterationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\migrate_plus\Unit\process;
 
+use Drupal\Component\Transliteration\TransliterationInterface;
 use Drupal\Component\Transliteration\PhpTransliteration;
 use Drupal\migrate\MigrateExecutableInterface;
 use Drupal\migrate\Row;
@@ -19,7 +20,7 @@ class TransliterationTest extends MigrateProcessTestCase {
   /**
    * A transliteration instance.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;
 
@@ -28,12 +29,8 @@ class TransliterationTest extends MigrateProcessTestCase {
    */
   protected function setUp(): void {
     $this->transliteration = new PhpTransliteration();
-    $this->row = $this->getMockBuilder(Row::class)
-      ->disableOriginalConstructor()
-      ->getMock();
-    $this->migrateExecutable = $this->getMockBuilder(MigrateExecutableInterface::class)
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->row = $this->createMock(Row::class);
+    $this->migrateExecutable = $this->createMock(MigrateExecutableInterface::class);
     parent::setUp();
   }
 
@@ -53,6 +50,7 @@ class TransliterationTest extends MigrateProcessTestCase {
    * Tests deprecation notice of Transliteration process plugin.
    *
    * @group legacy
+   * @doesNotPerformAssertions
    */
   public function testDeprecationMessage() {
     $this->expectDeprecation("Drupal\migrate_plus\Plugin\migrate\process\Transliteration is deprecated in migrate_plus:8.x-5.3 and is removed from migrate_plus:6.0.0. Use Drupal\migrate_plus\Plugin\migrate\process\Service process plugin instead. See https://www.drupal.org/node/3255994");
