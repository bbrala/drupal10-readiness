modules/contrib/bulk_author_update/bulk_author_update.install
modules/contrib/bulk_author_update/bulk_author_update.module
modules/contrib/bulk_author_update/src/Form/BulkAuthorUpdateAdminConfigForm.php
modules/contrib/bulk_author_update/src/Plugin/Action/UpdateUserAction.php
modules/contrib/bulk_author_update/tests/src/Functional/ConfigFormTest.php

2 files with changes
====================

1) modules/contrib/bulk_author_update/tests/src/Functional/ConfigFormTest.php:34

    ---------- begin diff ----------
@@ @@

     $this->drupalLogin($account);
     $this->drupalGet('/admin/content/bulkauthorupdate/config');
-    $this->assertText('Bulk Author Update Configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Bulk Author Update Configuration');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bulk_author_update/src/Form/BulkAuthorUpdateAdminConfigForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * Provides an interface for an entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * Provides an interface for entity type managers.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * ReportWorkerBase constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service the instance should use.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Provides an interface for an entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Provides an interface for entity type managers.
    */
   public function __construct(StateInterface $state, EntityFieldManagerInterface $entity_field_manager, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
       $default_user = User::load($data['author']);
       // Get the user image.
       if ($default_user->user_picture && !$default_user->user_picture->isEmpty()) {
-        $displayImg = file_create_url($default_user->user_picture->entity->getFileUri());
+        $displayImg = \Drupal::service('file_url_generator')->generateAbsoluteString($default_user->user_picture->entity->getFileUri());
       }
       else {
         $displayImg = '';
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

