modules/contrib/lupus_ce_renderer/lupus_ce_renderer.api.php
modules/contrib/lupus_ce_renderer/src/Cache/CustomElementsJsonResponse.php
modules/contrib/lupus_ce_renderer/src/Controller/CustomElementsController.php
modules/contrib/lupus_ce_renderer/src/CustomElementsRenderer.php
modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsControllerSubscriber.php
modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsDynamicResponseSubscriber.php
modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsFormatSubscriber.php
modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsHttpExceptionSubscriber.php
modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsRedirectResponseSubscriber.php
modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsRouteSubscriber.php
modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsViewSubscriber.php
modules/contrib/lupus_ce_renderer/src/LupusCeRendererServiceProvider.php
modules/contrib/lupus_ce_renderer/src/Routing/CustomElementsRequestFormatRouteFilter.php
modules/contrib/lupus_ce_renderer/tests/src/Functional/LupusCeRendererAccessTest.php
modules/contrib/lupus_ce_renderer/tests/src/Functional/LupusCeRendererApiResponseTest.php
modules/contrib/lupus_ce_renderer/tests/src/Functional/LupusCeRendererContentTest.php

11 files with changes
=====================

1) modules/contrib/lupus_ce_renderer/tests/src/Functional/LupusCeRendererContentTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\lupus_ce_renderer\Functional;

+use Drupal\node\NodeInterface;
+use Drupal\user\UserInterface;
 use Drupal\lupus_ce_renderer\CustomElementsRenderer;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * The node to use for testing.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;

@@ @@
   /**
    * A user with administrative permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/lupus_ce_renderer/tests/src/Functional/LupusCeRendererApiResponseTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\lupus_ce_renderer\Functional;

+use Drupal\node\NodeInterface;
+use Drupal\user\UserInterface;
 use Drupal\lupus_ce_renderer\CustomElementsRenderer;
 use Drupal\Tests\BrowserTestBase;
 use PHPUnit\Framework\Assert;
@@ @@
   /**
    * The node to use for testing.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;

@@ @@
   /**
    * A user with administrative permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/lupus_ce_renderer/tests/src/Functional/LupusCeRendererAccessTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\lupus_ce_renderer\Functional;

+use Drupal\node\NodeInterface;
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * The node to use for testing.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;

@@ @@
   /**
    * A user with administrative permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsViewSubscriber.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The custom element renderer.
    *
-   * @var \Drupal\lupus_ce_renderer\CustomElementsRenderer
+   * @var CustomElementsRenderer
    */
   protected $customElementRenderer;

@@ @@
   /**
    * Constructs the object.
    *
-   * @param \Drupal\lupus_ce_renderer\CustomElementsRenderer $customElementRenderer
+   * @param CustomElementsRenderer $customElementRenderer
    *   The custom element renderer.
    */
   public function __construct(CustomElementsRenderer $customElementRenderer) {
@@ @@
   /**
    * Sets a response given a custom element.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ViewEvent $event
+   * @param ViewEvent $event
    *   The event to process.
    */
   public function onKernelView(ViewEvent $event) {
@@ @@
   /**
    * Handles http 4xx responses gracefully.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ViewEvent $event
+   * @param ViewEvent $event
    *   The event to process.
    *
    * @see \Drupal\lupus_ce_renderer\EventSubscriber\CustomElementsHttpExceptionSubscriber
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsRedirectResponseSubscriber.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs the object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
    */
   public function __construct(ModuleHandlerInterface $moduleHandler) {
@@ @@
   /**
    * Handles the response.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
   public function onResponse(ResponseEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsFormatSubscriber.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Responds to kernel responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The event.
    */
   public function onKernelResponse(ResponseEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsDynamicResponseSubscriber.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The custom element renderer.
    *
-   * @var \Drupal\lupus_ce_renderer\CustomElementsRenderer
+   * @var CustomElementsRenderer
    */
   protected $customElementRenderer;

@@ @@
   /**
    * Constructs the object.
    *
-   * @param \Drupal\lupus_ce_renderer\CustomElementsRenderer $customElementRenderer
+   * @param CustomElementsRenderer $customElementRenderer
    *   The custom element renderer.
    */
   public function __construct(CustomElementsRenderer $customElementRenderer) {
@@ @@
   /**
    * Stores a response in case of a Dynamic Page Cache miss, if cacheable.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
   public function onResponse(ResponseEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/lupus_ce_renderer/src/EventSubscriber/CustomElementsControllerSubscriber.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The controller resolver.
    *
-   * @var \Drupal\Core\Controller\ControllerResolverInterface
+   * @var ControllerResolverInterface
    */
   protected $controllerResolver;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Controller\ControllerResolverInterface $controller_resolver
+   * @param ControllerResolverInterface $controller_resolver
    *   The controller resolver.
    */
   public function __construct(ControllerResolverInterface $controller_resolver) {
@@ @@
   /**
    * Take over entity view routes.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ControllerEvent $event
+   * @param ControllerEvent $event
    *   The event.
    */
   public function onKernelController(ControllerEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/lupus_ce_renderer/src/CustomElementsRenderer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\lupus_ce_renderer;

+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Core\Link;
 use drunomics\ServiceUtils\Core\Routing\CurrentRouteMatchTrait;
 use drunomics\ServiceUtils\Symfony\HttpFoundation\RequestStackTrait;
 use Drupal\Core\Access\AccessResult;
@@ @@
   /**
    * The title resolver.
    *
-   * @var \Drupal\Core\Controller\TitleResolverInterface
+   * @var TitleResolverInterface
    */
   protected $titleResolver;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The messenger interface.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The block plugin manager.
    *
-   * @var \Drupal\Core\Block\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
   /**
    * The drupal settings.
    *
-   * @var \Drupal\Core\Site\Settings
+   * @var Settings
    */
   protected $settings;

@@ @@
   /**
    * The metatag manager.
    *
-   * @var \Drupal\metatag\MetatagManagerInterface
+   * @var MetatagManagerInterface
    */
   protected $metatagManager;

@@ @@
   /**
    * The kill switch.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;

@@ @@
   /**
    * Constructs the renderer.
    *
-   * @param \Drupal\Core\Controller\TitleResolverInterface $title_resolver
+   * @param TitleResolverInterface $title_resolver
    *   The title resolver.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    * @param array $renderer_config
    *   The renderer configuration array.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger interface.
-   * @param \Drupal\Core\Block\BlockManager $blockManager
+   * @param BlockManager $blockManager
    *   The block manager.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The drupal settings.
-   * @param \Drupal\metatag\MetatagManagerInterface $metatagManager
+   * @param MetatagManagerInterface $metatagManager
    *   The module handler.
-   * @param \Drupal\Core\PageCache\ResponsePolicy\KillSwitch $killSwitch
+   * @param KillSwitch $killSwitch
    *   The kill switch.
    */
   public function __construct(TitleResolverInterface $title_resolver, RendererInterface $renderer, array $renderer_config, ModuleHandlerInterface $module_handler, MessengerInterface $messenger, BlockManager $blockManager, Settings $settings, MetatagManagerInterface $metatagManager, KillSwitch $killSwitch) {
@@ @@
   /**
    * Renders the given custom element into a response.
    *
-   * @param \Drupal\custom_elements\CustomElement $custom_element
+   * @param CustomElement $custom_element
    *   The custom element.
    * @param string $format
    *   (optional) The content format, markup or json.
@@ @@
    *   (optional) The response attribute to select. Allows selecting parts of
    *   the response. Only supports 'content' at the moment. Defaults to NULL.
    *
-   * @return \Drupal\lupus_ce_renderer\Cache\CustomElementsJsonResponse|\Drupal\Core\Cache\CacheableResponse
+   * @return CustomElementsJsonResponse|CacheableResponse
    *   The response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    *   Thrown when entity loading goes wrong.
    */
   public function renderResponse(CustomElement $custom_element, $format = 'markup', $select = NULL) {
@@ @@
    * @return array[]
    *   Data array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getDynamicContent() {
     return [
@@ @@
   /**
    * Get breadcrumbs data and markup.
    *
-   * @param \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata
+   * @param BubbleableMetadata $bubbleable_metadata
    *   The bubbleable metatada.
    *
    * @return array
    *   Array of breadcrumbs and markup data.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   private function getBreadcrumbs(BubbleableMetadata &$bubbleable_metadata) {
     try {
@@ @@
       $breadcrumb_block = $this->blockManager->createInstance('system_breadcrumb_block', []);
       $breadcrumb_render = $breadcrumb_block->build();
       if (!empty($breadcrumb_render['#links'])) {
-        /** @var \Drupal\Core\Link $crumb */
+        /** @var Link $crumb */
         foreach ($breadcrumb_render['#links'] as $crumb) {
           $text = $crumb->getText();
           if (is_array($crumb->getText()) && isset($text['#markup'])) {
@@ @@
    * @return array
    *   Array of local-task links.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   private function getLocalTasks() {
     $local_tasks = [];
@@ @@
     $local_tasks = [];
     if (!empty($render_links)) {
       foreach ($render_links as $render_link) {
-        /** @var \Drupal\Core\Access\AccessResult $access */
+        /** @var AccessResult $access */
         $access = $render_link['#access'] ?? FALSE;
         // Check access to links.
         if ($access instanceof AccessResult && $access->isAllowed() || $access === TRUE) {
@@ @@
   /**
    * Get metatags.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match, for context.
    *
    * @return array
@@ @@
    *
    * @param array $data
    *   Response data.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request.
    */
   private function modifyResponseData(array &$data, Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/lupus_ce_renderer/src/Controller/CustomElementsController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\lupus_ce_renderer\Controller;

+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use drunomics\ServiceUtils\Core\Entity\EntityTypeManagerTrait;
 use drunomics\ServiceUtils\Core\Routing\CurrentRouteMatchTrait;
 use Drupal\Core\Entity\EntityInterface;
@@ @@
    * @param string $view_mode
    *   (optional) The view mode to use. Defaults to 'full'.
    *
-   * @return \Drupal\custom_elements\CustomElement
+   * @return CustomElement
    *   Returns CustomElement object.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   public function entityView($view_mode = 'full') {
     // Get the current entity type ID from the raw parameters, it's the first
@@ @@
   /**
    * Preview an entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $node_preview
+   * @param EntityInterface $node_preview
    *   The entity / node to preview.
    * @param string $view_mode
    *   The view mode to use.
    *
-   * @return \Drupal\custom_elements\CustomElement
+   * @return CustomElement
    *   Returns CustomElement object.
    */
   public function entityPreview(EntityInterface $node_preview, $view_mode = 'full') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


11) modules/contrib/lupus_ce_renderer/lupus_ce_renderer.api.php:15

    ---------- begin diff ----------
@@ @@
  *
  * @param array $data
  *   The response data.
- * @param \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata
+ * @param BubbleableMetadata $bubbleable_metadata
  *   The cache metadata.
- * @param \Symfony\Component\HttpFoundation\Request $request
+ * @param Request $request
  *   The request being handled.
  */
 function hook_lupus_ce_renderer_response_alter(array $data, BubbleableMetadata $bubbleable_metadata, Request $request) {
    ----------- end diff -----------

 [OK] 11 files have been changed by Rector                                      

