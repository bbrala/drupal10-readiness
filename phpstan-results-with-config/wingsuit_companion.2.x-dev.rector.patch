diff --git a/modules/wingsuit_lb/src/EventSubscriber/LayoutBuilderBrowserEventSubscriber.php b/modules/wingsuit_lb/src/EventSubscriber/LayoutBuilderBrowserEventSubscriber.php
index 7aa9c41..cb89fd9 100644
--- a/modules/wingsuit_lb/src/EventSubscriber/LayoutBuilderBrowserEventSubscriber.php
+++ b/modules/wingsuit_lb/src/EventSubscriber/LayoutBuilderBrowserEventSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wingsuit_lb\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ViewEvent;
+use Drupal\layout_builder\Plugin\SectionStorage\OverridesSectionStorage;
 use Drupal\Core\Ajax\AjaxHelperTrait;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Render\Markup;
@@ -11,7 +13,6 @@ use Drupal\file\Entity\File;
 use Drupal\layout_builder\SectionStorageInterface;
 use Drupal\section_library\Entity\SectionLibraryTemplate;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -27,7 +28,7 @@ class LayoutBuilderBrowserEventSubscriber implements EventSubscriberInterface {
   /**
    * Add layout-builder-browser class layout_builder.choose_block build block.
    */
-  public function onView(GetResponseForControllerResultEvent $event) {
+  public function onView(ViewEvent $event) {
     $request = $event->getRequest();
     $route = $request->attributes->get('_route');
     if ($route == 'layout_builder.choose_section') {
@@ -49,7 +50,7 @@ class LayoutBuilderBrowserEventSubscriber implements EventSubscriberInterface {
         $item['#attributes']['class'][] = 'ws-lb-link';
       }
       $request = $event->getRequest();
-      /** @var \Drupal\layout_builder\Plugin\SectionStorage\OverridesSectionStorage $section_storage */
+      /** @var OverridesSectionStorage $section_storage */
       $section_storage = $request->attributes->get('section_storage');
       $delta = $request->attributes->get('delta');
       $add_library = [
@@ -122,7 +123,7 @@ class LayoutBuilderBrowserEventSubscriber implements EventSubscriberInterface {
   /**
    * Gets a render array of section links.
    *
-   * @param \Drupal\layout_builder\SectionStorageInterface $section_storage
+   * @param SectionStorageInterface $section_storage
    *   The section storage.
    * @param int $delta
    *   The region the section is going in.
@@ -141,16 +142,13 @@ class LayoutBuilderBrowserEventSubscriber implements EventSubscriberInterface {
       $attributes['class'][] = 'js-layout-builder-section-library-link';
       $attributes['class'][] = 'ws-lb-link';
       // Default library image.
-      $img_path = drupal_get_path(
-          'module',
-          'wingsuit_lb'
-        ) . '/images/section-empty-icon.svg';
+      $img_path = \Drupal::service('extension.list.module')->getPath('wingsuit_lb') . '/images/section-empty-icon.svg';
       if ($fid = $section->get('image')->target_id) {
         $file = File::load($fid);
         $img_path = $file->getFileUri();
       }
 
-      $icon_url = file_url_transform_relative(file_create_url($img_path));
+      $icon_url = \Drupal::service('file_url_generator')->generateString($img_path);
       $link = [
         '#type' => 'link',
         '#title' => Markup::create(
diff --git a/modules/wingsuit_lb/wingsuit_lb.module b/modules/wingsuit_lb/wingsuit_lb.module
index 8c4ecf2..90af015 100644
--- a/modules/wingsuit_lb/wingsuit_lb.module
+++ b/modules/wingsuit_lb/wingsuit_lb.module
@@ -94,11 +94,8 @@ function wingsuit_lb_preprocess_wingsuit_lb_icon(&$variables) {
   $type = $variables['icon_type'];
   if ($uri === NULL) {
     $filename = $type === 'block' ? 'block-empty-icon.svg' : 'section-empty-icon.svg';
-    $img_path = drupal_get_path(
-        'module',
-        'wingsuit_lb'
-      ) . '/images/' . $filename;
-    $variables['uri'] = file_url_transform_relative(file_create_url($img_path));
+    $img_path = \Drupal::service('extension.list.module')->getPath('wingsuit_lb') . '/images/' . $filename;
+    $variables['uri'] = \Drupal::service('file_url_generator')->generateString($img_path);
   }
 }
 
diff --git a/modules/wingsuit_link/wingsuit_link.module b/modules/wingsuit_link/wingsuit_link.module
index 24a0611..3369331 100644
--- a/modules/wingsuit_link/wingsuit_link.module
+++ b/modules/wingsuit_link/wingsuit_link.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\link\Plugin\Field\FieldType\LinkItem;
+use Drupal\ui_patterns\Element\PatternContext;
 use Drupal\ui_patterns_settings\UiPatternsSettings;
 use Drupal\ui_patterns\UiPatterns;
 
@@ -69,7 +71,7 @@ function wingsuit_link_ui_pattern_settings_variant_alter(
 ) {
   if ($context['#pattern_id'] === 'button') {
     $pattern_context = $context['#pattern_context'];
-    /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $link */
+    /** @var LinkItem $link */
     $link = $pattern_context->getProperty('item');
     if ($link !== NULL) {
       $values = $link->get('options')->getValue();
@@ -90,9 +92,9 @@ function wingsuit_link_ui_pattern_settings_settings_alter(
   array $context
 ) {
   if ($context['#pattern_id'] === 'button') {
-    /** @var \Drupal\ui_patterns\Element\PatternContext $pattern_context */
+    /** @var PatternContext $pattern_context */
     $pattern_context = $context['#pattern_context'];
-    /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $link */
+    /** @var LinkItem $link */
     $link = $pattern_context->getProperty('item');
     if ($link !== NULL) {
       $options = $link->get('options');
diff --git a/modules/wingsuit_page_manager/src/Theme/PageManagerThemeNegotiator.php b/modules/wingsuit_page_manager/src/Theme/PageManagerThemeNegotiator.php
index 6004297..67016f8 100644
--- a/modules/wingsuit_page_manager/src/Theme/PageManagerThemeNegotiator.php
+++ b/modules/wingsuit_page_manager/src/Theme/PageManagerThemeNegotiator.php
@@ -14,14 +14,14 @@ class PageManagerThemeNegotiator implements ThemeNegotiatorInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * PageManagerThemeNegotiator constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ -45,7 +45,7 @@ class PageManagerThemeNegotiator implements ThemeNegotiatorInterface {
   /**
    * Determine the active theme for the current route.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
    *
    * @return string
diff --git a/modules/wingsuit_ui_patterns/src/Plugin/Deriver/LibraryDeriver.php b/modules/wingsuit_ui_patterns/src/Plugin/Deriver/LibraryDeriver.php
index 43fa475..4b85714 100644
--- a/modules/wingsuit_ui_patterns/src/Plugin/Deriver/LibraryDeriver.php
+++ b/modules/wingsuit_ui_patterns/src/Plugin/Deriver/LibraryDeriver.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wingsuit_ui_patterns\Plugin\Deriver;
 
+use Drupal\Core\Extension\Extension;
 use Drupal\Component\Serialization\Yaml;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Extension\ExtensionDiscovery;
@@ -44,21 +45,21 @@ class LibraryDeriver extends AbstractYamlPatternsDeriver {
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Extension discovery class.
    *
-   * @var \Drupal\Core\Extension\ExtensionDiscovery
+   * @var ExtensionDiscovery
    */
   protected $extensionDiscovery;
 
@@ -81,17 +82,17 @@ class LibraryDeriver extends AbstractYamlPatternsDeriver {
    *
    * @param string $base_plugin_id
    *   The base plugin ID.
-   * @param \Drupal\Core\TypedData\TypedDataManager $typed_data_manager
+   * @param TypedDataManager $typed_data_manager
    *   Typed data manager service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param MessengerInterface $messenger
+   * @param FileSystemInterface $file_system
    * @param string $root
    *   Application root directory.
    * @param array $extensions
    *   File extensions.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler service.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   Theme handler service.
    * @param ConfigFactory $config_factory
    *   Config factory service.
@@ -231,7 +232,7 @@ class LibraryDeriver extends AbstractYamlPatternsDeriver {
    *   Array of extensions keyed by their path location.
    */
   protected function getExtensionLocations() {
-    /** @var \Drupal\Core\Extension\Extension[] $extensions */
+    /** @var Extension[] $extensions */
     if (empty($this->extensionLocations)) {
       $extensions = $this->extensionDiscovery->scan('theme') + $this->extensionDiscovery->scan('module');
       foreach ($extensions as $name => $extension) {
diff --git a/modules/wingsuit_ui_patterns/src/Plugin/UiPatterns/Pattern/LibraryPattern.php b/modules/wingsuit_ui_patterns/src/Plugin/UiPatterns/Pattern/LibraryPattern.php
index d17dcf9..33d6382 100644
--- a/modules/wingsuit_ui_patterns/src/Plugin/UiPatterns/Pattern/LibraryPattern.php
+++ b/modules/wingsuit_ui_patterns/src/Plugin/UiPatterns/Pattern/LibraryPattern.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wingsuit_ui_patterns\Plugin\UiPatterns\Pattern;
 
+use Drupal\Core\Extension\Extension;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Extension\ThemeHandlerInterface;
 use Drupal\ui_patterns\Definition\PatternDefinition;
@@ -23,7 +24,7 @@ class LibraryPattern extends PatternBase {
   /**
    * Theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -63,14 +64,14 @@ class LibraryPattern extends PatternBase {
   /**
    * Process 'custom hook theme' definition property.
    *
-   * @param \Drupal\ui_patterns\Definition\PatternDefinition $definition
+   * @param PatternDefinition $definition
    *   Pattern definition array.
    *
    * @return array
    *   Processed hook definition portion.
    */
   protected function processCustomThemeHookProperty(PatternDefinition $definition) {
-    /** @var \Drupal\Core\Extension\Extension $module */
+    /** @var Extension $module */
     $return = [];
     if (!$definition->hasCustomThemeHook() && $this->moduleHandler->moduleExists($definition->getProvider())) {
       $module = $this->moduleHandler->getModule($definition->getProvider());
@@ -100,7 +101,7 @@ class LibraryPattern extends PatternBase {
   /**
    * Process 'template' definition property.
    *
-   * @param \Drupal\ui_patterns\Definition\PatternDefinition $definition
+   * @param PatternDefinition $definition
    *   Pattern definition array.
    *
    * @return array
diff --git a/modules/wingsuit_ui_patterns/wingsuit_ui_patterns.module b/modules/wingsuit_ui_patterns/wingsuit_ui_patterns.module
index bf5345a..82d294c 100644
--- a/modules/wingsuit_ui_patterns/wingsuit_ui_patterns.module
+++ b/modules/wingsuit_ui_patterns/wingsuit_ui_patterns.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Layout\LayoutDefinition;
+use Drupal\ui_patterns\Definition\PatternDefinition;
 /**
  * @file
  * Contains ui patterns hooks.
@@ -17,7 +19,7 @@ function wingsuit_ui_patterns_plugin_filter_layout_alter(array &$definitions, ar
 
   /**
    * @var string $key
-   * @var \Drupal\Core\Layout\LayoutDefinition $definition
+   * @var LayoutDefinition $definition
    */
   foreach ($definitions as $key => $definition) {
     if ($definition->getProvider() !== 'wingsuit_companion' && $use_only_wingsuit_layouts === TRUE) {
@@ -34,7 +36,7 @@ function wingsuit_ui_patterns_plugin_filter_layout_alter(array &$definitions, ar
 function wingsuit_ui_patterns_ui_patterns_info_alter(&$definitions) {
   /**
    * @var $key
-   * @var \Drupal\ui_patterns\Definition\PatternDefinition $definition
+   * @var PatternDefinition $definition
    */
   foreach ($definitions as $key => $definition) {
     $additional = $definition->getAdditional();
diff --git a/src/StreamWrapper/WingsuitStreamWrapper.php b/src/StreamWrapper/WingsuitStreamWrapper.php
index 45bd9e6..ff05797 100644
--- a/src/StreamWrapper/WingsuitStreamWrapper.php
+++ b/src/StreamWrapper/WingsuitStreamWrapper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wingsuit_companion\StreamWrapper;
 
+use Drupal\Core\Extension\ThemeHandlerInterface;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\StreamWrapper\LocalReadOnlyStream;
 use Drupal\system_stream_wrapper\StreamWrapper\ExtensionStreamBase;
@@ -14,7 +16,7 @@ class WingsuitStreamWrapper extends LocalReadOnlyStream {
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -74,7 +76,7 @@ class WingsuitStreamWrapper extends LocalReadOnlyStream {
   /**
    * Returns the current request object.
    *
-   * @return \Symfony\Component\HttpFoundation\Request
+   * @return Request
    *   The current request object.
    */
   protected function getRequest() {
