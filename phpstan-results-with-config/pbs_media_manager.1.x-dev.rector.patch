diff --git a/pbs_media_manager.api.php b/pbs_media_manager.api.php
index b7b5ef4..347983e 100644
--- a/pbs_media_manager.api.php
+++ b/pbs_media_manager.api.php
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 /**
  * @file
  * Describes methods to change Show, Season, and Episode nodes before saving.
@@ -50,9 +52,9 @@ function hook_pbs_media_manager_operation_alter(&$operation, array $context) {
  *
  * One way is to implement hook_entity_presave().
  */
-function my_module_entity_presave(\Drupal\Core\Entity\EntityInterface $entity) {
+function my_module_entity_presave(EntityInterface $entity) {
 
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+  /** @var ConfigFactoryInterface $config_factory */
   $config_factory = \Drupal::configFactory();
   $config = $config_factory->get('pbs_media_manager.settings');
   $show_type = $config->get('shows.drupal_show_content');
diff --git a/pbs_media_manager.module b/pbs_media_manager.module
index db532d8..5684787 100644
--- a/pbs_media_manager.module
+++ b/pbs_media_manager.module
@@ -1,5 +1,10 @@
 <?php
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\pbs_media_manager\ShowManager;
+use Drupal\pbs_media_manager\SeasonManager;
+use Drupal\pbs_media_manager\EpisodeManager;
+use Drupal\pbs_media_manager\SpecialManager;
 /**
  * @file
  * Hooks for the Media Manager module.
@@ -18,10 +23,10 @@ use Drupal\Core\Url;
  */
 function pbs_media_manager_cron() {
 
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+  /** @var ConfigFactoryInterface $config_factory */
   $config_factory = \Drupal::service('config.factory');
   $config = $config_factory->get('pbs_media_manager.settings');
-  /** @var \Drupal\pbs_media_manager\ShowManager $showManager */
+  /** @var ShowManager $showManager */
   $showManager = Drupal::service('pbs_media_manager.show_manager');
 
   $request_time = Drupal::time()->getRequestTime();
@@ -38,17 +43,17 @@ function pbs_media_manager_cron() {
     if ($diff > $interval) {
       $showManager->updateQueue();
       if ($config->get('seasons.season_sync_enable')) {
-        /** @var \Drupal\pbs_media_manager\SeasonManager $seasonManager */
+        /** @var SeasonManager $seasonManager */
         $seasonManager = Drupal::service('pbs_media_manager.season_manager');
         $seasonManager->updateQueue();
       }
       if ($config->get('episodes.episode_sync_enable')) {
-        /** @var \Drupal\pbs_media_manager\EpisodeManager $episodeManager */
+        /** @var EpisodeManager $episodeManager */
         $episodeManager = Drupal::service('pbs_media_manager.episode_manager');
         $episodeManager->updateQueue();
       }
       if ($config->get('episodes.episode_sync_enable')) {
-        /** @var \Drupal\pbs_media_manager\SpecialManager $specialManager */
+        /** @var SpecialManager $specialManager */
         $specialManager = Drupal::service('pbs_media_manager.special_manager');
         $specialManager->updateQueue();
       }
@@ -61,7 +66,7 @@ function pbs_media_manager_cron() {
  */
 function pbs_media_manager_form_alter(&$form, FormStateInterface $form_state, $form_id) {
 
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+  /** @var ConfigFactoryInterface $config_factory */
   $config_factory = \Drupal::service('config.factory');
   $config = $config_factory->get('pbs_media_manager.settings');
   $show_vocab = $config->get('shows.show_vocabulary');
@@ -97,7 +102,7 @@ function _form_validation_number_title_validate(&$form, FormStateInterface $form
  */
 function _pbs_media_manager_term_id_from_show_guid($show_guid) {
 
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+  /** @var ConfigFactoryInterface $config_factory */
   $config_factory = \Drupal::service('config.factory');
   $config = $config_factory->get('pbs_media_manager.settings');
   $show_vocab = $config->get('shows.show_vocabulary');
