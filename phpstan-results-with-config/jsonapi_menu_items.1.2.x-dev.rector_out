modules/contrib/jsonapi_menu_items/src/Plugin/Derivative/MenuItemsLinkProviderDeriver.php
modules/contrib/jsonapi_menu_items/src/Plugin/jsonapi_hypermedia/LinkProvider/MenuItemsLinkProvider.php
modules/contrib/jsonapi_menu_items/src/Resource/MenuItemsResource.php
modules/contrib/jsonapi_menu_items/src/Routing/Routes.php
modules/contrib/jsonapi_menu_items/tests/src/Functional/HypermediaIntegrationTest.php
modules/contrib/jsonapi_menu_items/tests/src/Functional/JsonapiMenuItemsTest.php

3 files with changes
====================

1) modules/contrib/jsonapi_menu_items/tests/src/Functional/JsonapiMenuItemsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\jsonapi_menu_items\Functional;

+use Drupal\Core\Session\AccountInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Url;
 use Drupal\menu_link_content\Entity\MenuLinkContent;
@@ @@
   /**
    * The account to use for authentication.
    *
-   * @var null|\Drupal\Core\Session\AccountInterface
+   * @var null|AccountInterface
    */
   protected $account;

@@ @@
       '%title' => $link_title,
       '%base_path' => Url::fromRoute('<front>')->toString(),
     ]));
-    $this->assertEqual($expected_items['data'], $content['data']);
+    $this->assertEquals($expected_items['data'], $content['data']);

     // Assert response is cached with appropriate cacheability metadata such
     // that re-saving the link with a new title yields the new title in a
@@ @@
     $match = array_filter($content['data'], function (array $item) use ($content_link) {
       return $item['id'] === 'menu_link_content:' . $content_link->uuid();
     });
-    $this->assertEqual($new_title, reset($match)['attributes']['title']);
+    $this->assertEquals($new_title, reset($match)['attributes']['title']);

     // Add another link and ensue cacheability metadata ensures the new item
     // appears in a subsequent request.
@@ @@
    * @param string $parent
    *   The menu link parent id.
    *
-   * @return Drupal\menu_link_content\Entity\MenuLinkContent
+   * @return MenuLinkContent
    *   The menu link.
    */
   protected function createMenuLink(string $title, string $parent) {
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/jsonapi_menu_items/src/Resource/MenuItemsResource.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\jsonapi_menu_items\Resource;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\GeneratedUrl;
@@ @@
   /**
    * Process the resource request.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
-   * @param \Drupal\system\MenuInterface $menu
+   * @param MenuInterface $menu
    *   The menu.
    *
-   * @return \Drupal\jsonapi\ResourceResponse
+   * @return ResourceResponse
    *   The response.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function process(Request $request, MenuInterface $menu): ResourceResponse {
     $cacheability = new CacheableMetadata();
@@ @@
   /**
    * Apply filters to the menu parameters.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request.
-   * @param \Drupal\Core\Menu\MenuTreeParameters $parameters
+   * @param MenuTreeParameters $parameters
    *   The cache metadata.
    *
-   * @return \Drupal\Core\Menu\MenuTreeParameters
+   * @return MenuTreeParameters
    *   The Menu Tree Parameters object.
    */
   protected function applyFiltersToParams(Request $request, MenuTreeParameters $parameters) {
@@ @@
    *   The menu tree.
    * @param array $items
    *   The already created items.
-   * @param \Drupal\Core\Cache\CacheableMetadata $cache
+   * @param CacheableMetadata $cache
    *   The cacheable metadata.
    */
   protected function getMenuItems(array $tree, array &$items, CacheableMetadata $cache) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/jsonapi_menu_items/src/Plugin/Derivative/MenuItemsLinkProviderDeriver.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;

@@ @@
   /**
    * Constructs new MenuItemsLinkProvider.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $menu_storage
+   * @param EntityStorageInterface $menu_storage
    *   The menu storage.
    */
   public function __construct(EntityStorageInterface $menu_storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

