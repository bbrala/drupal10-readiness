modules/contrib/a11y_form_helpers/a11y_form_helpers.module
modules/contrib/a11y_form_helpers/src/A11yFormHelpersRenderElement.php
modules/contrib/a11y_form_helpers/src/Annotation/AutocompleteAttribute.php
modules/contrib/a11y_form_helpers/src/AutocompleteAttributeManager.php
modules/contrib/a11y_form_helpers/src/AutocompleteAttributeManagerInterface.php
modules/contrib/a11y_form_helpers/src/Plugin/AutocompleteAttribute/GivenName.php
modules/contrib/a11y_form_helpers/src/Plugin/AutocompleteAttribute/Name.php
modules/contrib/a11y_form_helpers/src/Plugin/AutocompleteAttributePluginBase.php
modules/contrib/a11y_form_helpers/src/Plugin/AutocompleteAttributePluginBaseInterface.php

3 files with changes
====================

1) modules/contrib/a11y_form_helpers/src/Plugin/AutocompleteAttributePluginBaseInterface.php:13

    ---------- begin diff ----------
@@ @@
    *
    * @param array $element
    *   The element to alter.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    * @param array $context
    *   The context of the field widget.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/a11y_form_helpers/src/AutocompleteAttributeManager.php:20

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cacheBackend, ModuleHandlerInterface $moduleHandler) {
@@ @@
   public function getPurposes($field_type = NULL) {
     $purposes = [];

-    /** @var \Drupal\a11y_form_helpers\Plugin\AutocompleteAttributePluginBaseInterface $plugin */
+    /** @var AutocompleteAttributePluginBaseInterface $plugin */
     foreach ($this->getDefinitions() as $plugin) {
       if (!$field_type) {
         $purposes[$plugin['id']] = $plugin['label'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/a11y_form_helpers/a11y_form_helpers.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\a11y_form_helpers\AutocompleteAttributeManagerInterface;
+use Drupal\a11y_form_helpers\AutocompleteAttributeManager;
+use Drupal\a11y_form_helpers\Plugin\AutocompleteAttributePluginBaseInterface;
 /**
  * @file
  * Hooks and alters for A11Y Form Helpers.
@@ @@
   // Replace default theme form-element.html.twig template from core.
   if (strpos($theme_registry['form_element']['theme path'], 'core/') === 0) {
     $path = array_reverse(explode('/', $theme_registry['form_element']['theme path']));
-    $module_path = drupal_get_path('module', 'a11y_form_helpers');
+    $module_path = \Drupal::service('extension.list.module')->getPath('a11y_form_helpers');

     if (file_exists($module_path . '/templates/' . $path[0])) {
       $theme_registry['form_element']['path'] = $module_path . '/templates/' . $path[0];
@@ @@
   // Replace default theme fieldset.html.twig template from core.
   if (strpos($theme_registry['fieldset']['theme path'], 'core/') === 0) {
     $path = array_reverse(explode('/', $theme_registry['fieldset']['theme path']));
-    $module_path = drupal_get_path('module', 'a11y_form_helpers');
+    $module_path = \Drupal::service('extension.list.module')->getPath('a11y_form_helpers');

     if (file_exists($module_path . '/templates/' . $path[0])) {
       $theme_registry['fieldset']['path'] = $module_path . '/templates/' . $path[0];
@@ @@
  * Implements hook_field_widget_third_party_settings_form().
  */
 function a11y_form_helpers_field_widget_third_party_settings_form(WidgetInterface $plugin, FieldDefinitionInterface $field_definition, $form_mode, array $form, FormStateInterface $form_state) {
-  /** @var \Drupal\a11y_form_helpers\AutocompleteAttributeManagerInterface $autocompleteAttrManager */
+  /** @var AutocompleteAttributeManagerInterface $autocompleteAttrManager */
   $autocompleteAttrManager = \Drupal::service('a11y_form_helpers.autocomplete_attribute');

   try {
@@ @@
   $purpose = $context['widget']->getThirdPartySetting('a11y_form_helpers', 'purpose');

   if (!empty($purpose)) {
-    /** @var \Drupal\a11y_form_helpers\AutocompleteAttributeManager $autocomplete_attr_manager */
+    /** @var AutocompleteAttributeManager $autocomplete_attr_manager */
     $autocomplete_attr_manager = \Drupal::service('a11y_form_helpers.autocomplete_attribute');

     $summary[] = t('Purpose: @key', [
@@ @@
   }

   try {
-    /** @var \Drupal\a11y_form_helpers\AutocompleteAttributeManager $autocomplete_attr_manager */
+    /** @var AutocompleteAttributeManager $autocomplete_attr_manager */
     $autocomplete_attr_manager = \Drupal::service('a11y_form_helpers.autocomplete_attribute');

     if ($autocomplete_attr_manager->hasDefinition($plugin_id)) {
-      /** @var \Drupal\a11y_form_helpers\Plugin\AutocompleteAttributePluginBaseInterface $plugin */
+      /** @var AutocompleteAttributePluginBaseInterface $plugin */
       $plugin = $autocomplete_attr_manager->createInstance($plugin_id);

       $plugin->fieldWidgetFormAlter($element, $form_state, $context);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

