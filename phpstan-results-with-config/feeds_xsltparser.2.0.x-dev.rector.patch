diff --git a/feeds_xsltparser.install b/feeds_xsltparser.install
index 33db645..f08cf97 100644
--- a/feeds_xsltparser.install
+++ b/feeds_xsltparser.install
@@ -1,9 +1,10 @@
 <?php
+
+use Drupal\Core\Url;
 /**
  * @file
  * Installation related hooks for Feeds XSLT Pipeline Parser plugin.
  */
-
 /**
  * Implements hook_requirements().
  */
@@ -19,7 +20,7 @@ function feeds_xsltparser_requirements($phase) {
   ];
   if (!$has_domdocument) {
     $requirements['feeds_xsltparser_php_domdocument']['severity'] = REQUIREMENT_ERROR;
-    $requirements['feeds_xsltparser_php_domdocument']['description'] = t('The feeds XSLT pipeline parser module requires the DOMDocument class to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => \Drupal\Core\Url::fromRoute('system.php')]);
+    $requirements['feeds_xsltparser_php_domdocument']['description'] = t('The feeds XSLT pipeline parser module requires the DOMDocument class to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => Url::fromRoute('system.php')]);
   }
 
   $requirements['feeds_xsltparser_php_xsl'] = [
@@ -28,7 +29,7 @@ function feeds_xsltparser_requirements($phase) {
   ];
   if (!$has_xsl) {
     $requirements['feeds_xsltparser_php_xsl']['severity'] = REQUIREMENT_ERROR;
-    $requirements['feeds_xsltparser_php_xsl']['description'] = t('The feeds XSLT pipeline parser module requires the PHP XSL extension to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => \Drupal\Core\Url::fromRoute('system.php')]);
+    $requirements['feeds_xsltparser_php_xsl']['description'] = t('The feeds XSLT pipeline parser module requires the PHP XSL extension to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', ['@link-phpinfo' => Url::fromRoute('system.php')]);
   }
 
   return $requirements;
diff --git a/src/FeedsXSLTChainLogProxy.php b/src/FeedsXSLTChainLogProxy.php
index 82b9223..4ff650f 100644
--- a/src/FeedsXSLTChainLogProxy.php
+++ b/src/FeedsXSLTChainLogProxy.php
@@ -15,7 +15,7 @@ class FeedsXSLTChainLogProxy implements XSLTChainLogProxy {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\feeds\StateInterface
+   * @var StateInterface
    */
   private $state;
   private $originalError;
diff --git a/src/XSLTChain.php b/src/XSLTChain.php
index 63047f5..7c2e882 100644
--- a/src/XSLTChain.php
+++ b/src/XSLTChain.php
@@ -12,7 +12,7 @@ class XSLTChain implements XSLTPipe {
   private $xmlLastRecordErrors = FALSE;
 
   /**
-   * @var \Drupal\feeds_xsltparser\XSLTChainLogProxy
+   * @var XSLTChainLogProxy
    */
   private $logproxy;
 
diff --git a/src/XSLTMap.php b/src/XSLTMap.php
index 1ee4c55..2f015a6 100644
--- a/src/XSLTMap.php
+++ b/src/XSLTMap.php
@@ -17,7 +17,7 @@ class XSLTMap implements XSLTPipe {
   private $xsltParamKeyName;
 
   /**
-   * @var \Drupal\feeds_xsltparser\XSLTPipe
+   * @var XSLTPipe
    */
   private $preproc;
 
diff --git a/src/XSLTRepeat.php b/src/XSLTRepeat.php
index 645759d..89a9d31 100644
--- a/src/XSLTRepeat.php
+++ b/src/XSLTRepeat.php
@@ -12,7 +12,7 @@ class XSLTRepeat implements \Iterator, XSLTPipe {
   /**
    * XSLTPipe which will be repeated for each key
    *
-   * @var \Drupal\feeds_xsltparser\XSLTPipe
+   * @var XSLTPipe
    */
   private $pipe;
 
@@ -20,7 +20,7 @@ class XSLTRepeat implements \Iterator, XSLTPipe {
    * XSLTChain executed from within XSLTMap::run to determine the number times
    * the pipe should be ran.
    *
-   * @var \Drupal\feeds_xsltparser\XSLTChain
+   * @var XSLTChain
    */
   private $counter;
 
diff --git a/tests/src/Unit/XSLTRepeatTestCase.php b/tests/src/Unit/XSLTRepeatTestCase.php
index 96d894b..1d278f0 100644
--- a/tests/src/Unit/XSLTRepeatTestCase.php
+++ b/tests/src/Unit/XSLTRepeatTestCase.php
@@ -68,6 +68,7 @@ class XSLTRepeatTestCase extends UnitTestCase {
   /**
    * Ensure that repeater does not repeat a given stylesheet if result of
    * applying the counter stylesheet is zero.
+   * @doesNotPerformAssertions
    */
   function testRepeatZero() {
     if (!$this->xsl_available) {
