modules/contrib/social_links/social_links.api.php
modules/contrib/social_links/social_links.module
modules/contrib/social_links/src/Service/SocialLinkFactory.php
modules/contrib/social_links/src/SocialLink.php
modules/contrib/social_links/src/SocialLinkInterface.php
modules/contrib/social_links/src/SocialLinkPopUp.php

3 files with changes
====================

1) modules/contrib/social_links/src/SocialLinkInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_links;

+use Drupal\Core\Link;
 use Drupal\Core\Entity\EntityInterface;

 interface SocialLinkInterface {
@@ @@
   /**
    * Render link for a given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to render the links for.
    *
-   * @return \Drupal\Core\Link
+   * @return Link
    *   Link object.
    */
   public function render(EntityInterface $entity);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/social_links/src/SocialLink.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_links;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Render\Markup;
@@ @@
   /**
    * Render link for a given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to render the links for.
    *
-   * @return \Drupal\Core\Link
+   * @return Link
    *   Link object.
    */
   public function render(EntityInterface $entity) {
@@ @@
    *
    * If SVG is set, render it and add it in place of the title.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup|mixed
+   * @return TranslatableMarkup|mixed
    *   Translatable title or SVG.
    */
   protected function getLinkTitle() {
@@ @@
           '<svg class="icon"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#' . $svg . '"></use></svg>'
         )
       ];
-      return render($svg);
+      return \Drupal::service('renderer')->render($svg);
     }

     return t(ucfirst($this->getName()));
@@ @@
    *
    * @param array $linkOptions
    *   Link options.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The given entity.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/social_links/src/Service/SocialLinkFactory.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_links\Service;

+use Drupal\Core\Extension\ModuleHandler;
+use Drupal\Core\Logger\LoggerChannelFactory;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ @@
   protected $themeFunction = 'item_list';

   /**
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;

   /**
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $logger;

@@ @@
   /**
    * Get render array of all links for a given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to render the links for.
    * @param string $themeOverride
    *   Theme function to use instead of the default 'item_list'.
@@ @@
   /**
    * Get a render array of links for a given entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity to add the links to.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 3 files have been changed by Rector                                       

