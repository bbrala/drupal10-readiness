diff --git a/drutopia_findit_search.module b/drutopia_findit_search.module
index 258aad2..1cf84b1 100644
--- a/drutopia_findit_search.module
+++ b/drutopia_findit_search.module
@@ -1,5 +1,7 @@
 <?php
 
+use Solarium\QueryType\Select\Query\Query;
+use Drupal\search_api\Query\QueryInterface;
 function drutopia_findit_search_theme($existing, $type, $theme, $path) {
   return [
     'findit_search_tab' => [
@@ -38,7 +40,7 @@ function drutopia_findit_search_theme($existing, $type, $theme, $path) {
  * And actually modifying the 'q' portion has to be done in hook_search_api_solr_converted_query_alter().
  *
  */
-function drutopia_findit_search_search_api_solr_query_alter(\Solarium\QueryType\Select\Query\Query $solarium_query, \Drupal\search_api\Query\QueryInterface $query) {
+function drutopia_findit_search_search_api_solr_query_alter(Query $solarium_query, QueryInterface $query) {
   $index = $query->getIndex();
   $fields = $index->getServerInstance()->getBackend()->getSolrFieldNames($index);
 
@@ -56,7 +58,7 @@ function drutopia_findit_search_search_api_solr_query_alter(\Solarium\QueryType\
 /**
  * Implements hook_findit_search_api_solr_converted_query_alter().
  */
-function drutopia_findit_search_search_api_solr_converted_query_alter(\Solarium\QueryType\Select\Query\Query $solarium_query, \Drupal\search_api\Query\QueryInterface $query) {
+function drutopia_findit_search_search_api_solr_converted_query_alter(Query $solarium_query, QueryInterface $query) {
   $index = $query->getIndex();
   $fields = $index->getServerInstance()->getBackend()->getSolrFieldNames($index);
 
diff --git a/src/Controller/SearchController.php b/src/Controller/SearchController.php
index adaef0e..7db42dc 100644
--- a/src/Controller/SearchController.php
+++ b/src/Controller/SearchController.php
@@ -4,6 +4,7 @@
 namespace Drupal\drutopia_findit_search\Controller;
 
 
+use Drupal\search_api\SearchApiException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\search_api\Item\Item;
 
@@ -16,7 +17,7 @@ class SearchController extends ControllerBase {
    * Executes solr query using
    *
    * @return array
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function search() {
     $result = \Drupal::service('drutopia_findit_search.prepared_query')->getResults();
diff --git a/src/Controller/UpcomingEventsController.php b/src/Controller/UpcomingEventsController.php
index 83160c1..9666c9a 100644
--- a/src/Controller/UpcomingEventsController.php
+++ b/src/Controller/UpcomingEventsController.php
@@ -3,6 +3,7 @@
 
 namespace Drupal\drutopia_findit_search\Controller;
 
+use Drupal\search_api\SearchApiException;
 use DateTime;
 use DateTimeZone;
 use Drupal\node\NodeInterface;
@@ -29,7 +30,7 @@ class UpcomingEventsController extends ControllerBase {
    * Executes solr query using
    *
    * @return array
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function list() {
 
diff --git a/src/Form/FiltersForm.php b/src/Form/FiltersForm.php
index 966a374..578d67c 100644
--- a/src/Form/FiltersForm.php
+++ b/src/Form/FiltersForm.php
@@ -179,7 +179,7 @@ class FiltersForm extends FormBase {
       '#title_display' => 'invisible',
       '#options' => $neighborhood_options,
       '#multiple' => TRUE,
-      '#svg' => drupal_get_path('module', 'drutopia_findit_search') . '/images/cambridge-simplified-map.svg',
+      '#svg' => \Drupal::service('extension.list.module')->getPath('drutopia_findit_search') . '/images/cambridge-simplified-map.svg',
       '#default_value' => $this->getRequest()->query->get('neighborhoods'),
       '#field_suffix' => $inline_submit,
     ];
diff --git a/src/Form/SearchbarSmallBlockForm.php b/src/Form/SearchbarSmallBlockForm.php
index 09d6e57..3245fd3 100644
--- a/src/Form/SearchbarSmallBlockForm.php
+++ b/src/Form/SearchbarSmallBlockForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\drutopia_findit_search\Form;
 
+use Drupal\Core\Url;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -34,7 +35,7 @@ class SearchbarSmallBlockForm extends FormBase {
 
     $form['#attributes']['class'] = ['findit-search-bar'];
 
-    $url = \Drupal\Core\Url::fromRoute('findit_search.search');
+    $url = Url::fromRoute('findit_search.search');
     $form['#action'] = $url->toString();
     $form['#method'] = 'get';
 
diff --git a/src/Plugin/Block/FiltersBlock.php b/src/Plugin/Block/FiltersBlock.php
index 6eb068a..8479882 100644
--- a/src/Plugin/Block/FiltersBlock.php
+++ b/src/Plugin/Block/FiltersBlock.php
@@ -40,8 +40,8 @@ class FiltersBlock extends BlockBase implements ContainerFactoryPluginInterface
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
-   * @param \Drupal\drutopia_findit_search\PreparedQuery $query
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param PreparedQuery $query
+   * @param RequestStack $request_stack
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, PreparedQuery $query, RequestStack $request_stack) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
diff --git a/src/Plugin/search_api/processor/AddDerivedFields.php b/src/Plugin/search_api/processor/AddDerivedFields.php
index 43c0def..3d62ec5 100644
--- a/src/Plugin/search_api/processor/AddDerivedFields.php
+++ b/src/Plugin/search_api/processor/AddDerivedFields.php
@@ -4,6 +4,10 @@
 namespace Drupal\drutopia_findit_search\Plugin\search_api\processor;
 
 
+use Drupal\search_api\Item\Item;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\search_api\SearchApiException;
 use DateTime;
 use DateTimeZone;
 use Drupal\search_api\Datasource\DatasourceInterface;
@@ -80,11 +84,11 @@ class AddDerivedFields extends ProcessorPluginBase {
    * - set places as not available online
    * - set events and programs not explicitly virtual as not available online.
    *
-   * @param \Drupal\search_api\Item\Item[] $items
+   * @param Item[] $items
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws SearchApiException
    */
   public function preprocessIndexItems(array $items) {
     foreach ($items as $item) {
@@ -140,14 +144,14 @@ class AddDerivedFields extends ProcessorPluginBase {
   /**
    * Returns terms from programs and events of the given organization.
    *
-   * @param \Drupal\node\Entity\Node $node
+   * @param Node $node
    *   The organization.
    *
    * @param string $field_name
    *   The name of the taxonomy term reference field.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    *
    * @return array
    *   The names of terms from all the associated programs and events.
diff --git a/src/Plugin/search_api/processor/ManualBoost.php b/src/Plugin/search_api/processor/ManualBoost.php
index 8380097..4187202 100644
--- a/src/Plugin/search_api/processor/ManualBoost.php
+++ b/src/Plugin/search_api/processor/ManualBoost.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\drutopia_findit_search\Plugin\search_api\processor;
 
+use Drupal\search_api\Item\ItemInterface;
 use Drupal\search_api\Processor\ProcessorPluginBase;
 
 /**
@@ -38,7 +39,7 @@ class ManualBoost extends ProcessorPluginBase {
    */
   public function preprocessIndexItems(array $items) {
 
-    /** @var \Drupal\search_api\Item\ItemInterface $item */
+    /** @var ItemInterface $item */
     foreach ($items as $item) {
       $opportunity = $item->getOriginalObject()->getEntity();
       $manual_boost = $opportunity->field_findit_boost->value;
diff --git a/src/PreparedQuery.php b/src/PreparedQuery.php
index 89b2098..aa30ea6 100644
--- a/src/PreparedQuery.php
+++ b/src/PreparedQuery.php
@@ -4,6 +4,8 @@
 namespace Drupal\drutopia_findit_search;
 
 
+use Drupal\search_api\Query\ResultSetInterface;
+use Drupal\search_api\SearchApiException;
 use Drupal\Core\Language\LanguageManager;
 use Drupal\node\NodeInterface;
 use Drupal\search_api\Entity\Index;
@@ -160,8 +162,8 @@ class PreparedQuery {
    *
    * The entities found by this query are bulk loaded.
    *
-   * @return \Drupal\search_api\Query\ResultSetInterface
-   * @throws \Drupal\search_api\SearchApiException
+   * @return ResultSetInterface
+   * @throws SearchApiException
    */
   public function getResults() {
     if (!$this->query->hasExecuted()) {
@@ -188,7 +190,7 @@ class PreparedQuery {
    *   The field name.
    *
    * @return array
-   * @throws \Drupal\search_api\SearchApiException
+   * @throws SearchApiException
    */
   public function getFacetMatchesByField($field) {
     $facet_fields = $this->getResults()->getExtraData('search_api_facets');
diff --git a/src/TodaysEvents.php b/src/TodaysEvents.php
index 9e3991d..e47393b 100644
--- a/src/TodaysEvents.php
+++ b/src/TodaysEvents.php
@@ -4,6 +4,8 @@
 namespace Drupal\drutopia_findit_search;
 
 
+use Drupal\search_api\Query\ResultSetInterface;
+use Drupal\search_api\SearchApiException;
 use DateTime;
 use DateTimeZone;
 use Drupal\node\NodeInterface;
@@ -51,8 +53,8 @@ class TodaysEvents {
    *
    * The entities found by this query are bulk loaded.
    *
-   * @return \Drupal\search_api\Query\ResultSetInterface
-   * @throws \Drupal\search_api\SearchApiException
+   * @return ResultSetInterface
+   * @throws SearchApiException
    */
   public function getResults() {
     if (!$this->query->hasExecuted()) {
