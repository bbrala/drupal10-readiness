modules/contrib/mob_queue/mob_queue.api.php
modules/contrib/mob_queue/mob_queue.drush.inc
modules/contrib/mob_queue/mob_queue.module
modules/contrib/mob_queue/src/Commands/MobQueueCommands.php
modules/contrib/mob_queue/src/Form/MobQueueSettings.php
modules/contrib/mob_queue/src/QueueJobOperator.php

4 files with changes
====================

1) modules/contrib/mob_queue/src/QueueJobOperator.php:14

    ---------- begin diff ----------
@@ @@
 class QueueJobOperator {

   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The queue service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;

   /**
-   * @var \Drupal\Core\Queue\QueueWorkerManagerInterface
+   * @var QueueWorkerManagerInterface
    */
   protected $queueManager;

   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * CronJobDiscovery constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Queue\QueueWorkerManagerInterface $queue_manager
+   * @param QueueWorkerManagerInterface $queue_manager
    *   The queue manager.
    */
   public function __construct(ModuleHandlerInterface $module_handler, QueueFactory $queue_factory, QueueWorkerManagerInterface $queue_manager, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/mob_queue/src/Form/MobQueueSettings.php:41

    ---------- begin diff ----------
@@ @@
     return ['mob_queue.settings'];
   }

-  public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state) {
+  public function buildForm(array $form, FormStateInterface $form_state) {
     //$queues = \Drupal::moduleHandler()->invokeAll('cron_queue_info');
     $queues = \Drupal::service('mob_queue.operator')->discoverQueueJobs();
     $config = $this->config('mob_queue.settings');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/mob_queue/src/Commands/MobQueueCommands.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;

@@ @@
   /**
    * Mob Queue Operator.
    *
-   * @var \Drupal\mob_queue\QueueJobOperator
+   * @var QueueJobOperator
    */
   protected $mobQueueOperator;

@@ @@
   /**
    * MobQueueCommands constructor.
    *
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $accountSwitcher
+   * @param AccountSwitcherInterface $accountSwitcher
    *   Account Switcher.
-   * @param \Drupal\mob_queue\QueueJobOperator $mobQueueOperator
+   * @param QueueJobOperator $mobQueueOperator
    *   Mob Queue Operator.
    */
   public function __construct(AccountSwitcherInterface $accountSwitcher, QueueJobOperator $mobQueueOperator) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/mob_queue/mob_queue.drush.inc:0

    ---------- begin diff ----------
@@ @@
 <?php
+use Drupal\Core\Session\AnonymousUserSession;
 /**
  * @file
  * Drush commands for Drush Queue Handling.
@@ @@
   // Force the current user to anonymous to ensure consistent permissions on
   // cron runs.
   $accountSwitcher = \Drupal::service('account_switcher');
-  $accountSwitcher->switchTo(new Drupal\Core\Session\AnonymousUserSession());
+  $accountSwitcher->switchTo(new AnonymousUserSession());

   // Try to allocate enough time to run all the hook_cron implementations.
   Environment::setTimeLimit($time);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

