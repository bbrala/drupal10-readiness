modules/contrib/dblog_persistent/dblog_persistent.install
modules/contrib/dblog_persistent/src/ChannelListBuilder.php
modules/contrib/dblog_persistent/src/Controller/DbLogPersistentController.php
modules/contrib/dblog_persistent/src/DbLogPersistentStorage.php
modules/contrib/dblog_persistent/src/DbLogPersistentStorageInterface.php
modules/contrib/dblog_persistent/src/Entity/Channel.php
modules/contrib/dblog_persistent/src/Entity/ChannelInterface.php
modules/contrib/dblog_persistent/src/Form/ChannelClearForm.php
modules/contrib/dblog_persistent/src/Form/ChannelDeleteForm.php
modules/contrib/dblog_persistent/src/Form/ChannelForm.php
modules/contrib/dblog_persistent/src/Logger/DbLogPersistent.php
modules/contrib/dblog_persistent/tests/src/Kernel/DBLogPersistentTest.php

8 files with changes
====================

1) modules/contrib/dblog_persistent/tests/src/Kernel/DBLogPersistentTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The dblog_persistent.storage service.
    *
-   * @var \Drupal\dblog_persistent\DbLogPersistentStorageInterface
+   * @var DbLogPersistentStorageInterface
    */
   private DbLogPersistentStorageInterface $storage;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/dblog_persistent/src/Logger/DbLogPersistent.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The entity_type.manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $manager;

@@ @@
   /**
    * The dblog_persistent.storage service.
    *
-   * @var \Drupal\dblog_persistent\DbLogPersistentStorageInterface
+   * @var DbLogPersistentStorageInterface
    */
   protected DbLogPersistentStorageInterface $storage;

@@ @@
   /**
    * All dblog_persistent_channel entities.
    *
-   * @var \Drupal\dblog_persistent\Entity\ChannelInterface[]
+   * @var ChannelInterface[]
    */
   private array $channels;

@@ @@
   /**
    * DbLogPersistent constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database service.
-   * @param \Drupal\Core\Logger\LogMessageParserInterface $parser
+   * @param LogMessageParserInterface $parser
    *   The logger.log_message_parser service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $manager
+   * @param EntityTypeManagerInterface $manager
    *   The entity_type.manager service.
-   * @param \Drupal\dblog_persistent\DbLogPersistentStorageInterface $storage
+   * @param DbLogPersistentStorageInterface $storage
    *   The dblog_persistent.storage service.
    */
   public function __construct(Connection $connection,
@@ @@
    * @param array $context
    *   The message context variables.
    *
-   * @return \Drupal\dblog_persistent\Entity\ChannelInterface[]
+   * @return ChannelInterface[]
    *   List of persistent log channels.
    */
   protected function getChannels(int $level,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/dblog_persistent/src/Form/ChannelForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\dblog_persistent\Form;

+use Drupal\dblog_persistent\Entity\ChannelInterface;
+use Drupal\Core\Entity\Exception\UndefinedLinkTemplateException;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityForm;
@@ @@
   /**
    * The dblog_persistent.storage service.
    *
-   * @var \Drupal\dblog_persistent\DbLogPersistentStorageInterface
+   * @var DbLogPersistentStorageInterface
    */
   protected DbLogPersistentStorageInterface $storage;

@@ @@
   /**
    * DBLogPersistentTypeForm constructor.
    *
-   * @param \Drupal\dblog_persistent\DbLogPersistentStorageInterface $storage
+   * @param DbLogPersistentStorageInterface $storage
    *   The dblog_persistent.storage service.
    */
   public function __construct(DbLogPersistentStorageInterface $storage) {
@@ @@
   public function form(array $form, FormStateInterface $form_state): array {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\dblog_persistent\Entity\ChannelInterface $entity */
+    /** @var ChannelInterface $entity */
     $entity = $this->entity;

     $form['label'] = [
@@ @@
                                             FormStateInterface $form_state): void {
     parent::copyFormValuesToEntity($entity, $form, $form_state);

-    /** @var \Drupal\dblog_persistent\Entity\ChannelInterface $entity */
+    /** @var ChannelInterface $entity */
     // Remove non-entity fields.
     $entity->set('_types_extra', NULL);

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\Exception\UndefinedLinkTemplateException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws UndefinedLinkTemplateException
+   * @throws EntityMalformedException
    */
   public function save(array $form, FormStateInterface $form_state) {
     $status = parent::save($form, $form_state);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/dblog_persistent/src/Form/ChannelDeleteForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The dblog_persistent.storage service.
    *
-   * @var \Drupal\dblog_persistent\DbLogPersistentStorageInterface
+   * @var DbLogPersistentStorageInterface
    */
   protected DbLogPersistentStorageInterface $storage;

@@ @@
   /**
    * ChannelDeleteForm constructor.
    *
-   * @param \Drupal\dblog_persistent\DbLogPersistentStorageInterface $storage
+   * @param DbLogPersistentStorageInterface $storage
    *   The dblog_persistent.storage service.
    */
   public function __construct(DbLogPersistentStorageInterface $storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/dblog_persistent/src/Form/ChannelClearForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\dblog_persistent\Form;

+use Drupal\Core\Entity\Exception\UndefinedLinkTemplateException;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ @@
   /**
    * The dblog_persistent.storage service.
    *
-   * @var \Drupal\dblog_persistent\DbLogPersistentStorageInterface
+   * @var DbLogPersistentStorageInterface
    */
   protected DbLogPersistentStorageInterface $storage;

@@ @@
   /**
    * ChannelClearForm constructor.
    *
-   * @param \Drupal\dblog_persistent\DbLogPersistentStorageInterface $storage
+   * @param DbLogPersistentStorageInterface $storage
    *   The dblog_persistent.storage service.
    */
   public function __construct(DbLogPersistentStorageInterface $storage) {
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\Exception\UndefinedLinkTemplateException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws UndefinedLinkTemplateException
+   * @throws EntityMalformedException
    */
   public function getCancelUrl(): Url {
     return $this->entity->toUrl('collection');
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\Exception\UndefinedLinkTemplateException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws UndefinedLinkTemplateException
+   * @throws EntityMalformedException
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
     parent::submitForm($form, $form_state);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/dblog_persistent/src/DbLogPersistentStorage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\dblog_persistent;

+use Drupal\Core\Database\IntegrityConstraintViolationException;
+use Drupal\Core\Database\DatabaseExceptionWrapper;
+use Drupal\Core\Database\Query\SelectInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Database\Database;
 use Drupal\Core\Database\DatabaseException;
@@ @@
   /**
    * The database service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected Connection $database;

@@ @@
   /**
    * DbLogPersistentLoader constructor.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database service.
    */
   public function __construct(Connection $database) {
@@ @@
    * {@inheritdoc}
    *
    * @throws \InvalidArgumentException
-   * @throws \Drupal\Core\Database\IntegrityConstraintViolationException
-   * @throws \Drupal\Core\Database\DatabaseExceptionWrapper
+   * @throws IntegrityConstraintViolationException
+   * @throws DatabaseExceptionWrapper
    */
   public function getTypes(): array {
     if (!isset($this->types)) {
@@ @@
    * {@inheritdoc}
    *
    * @throws \InvalidArgumentException
-   * @throws \Drupal\Core\Database\IntegrityConstraintViolationException
-   * @throws \Drupal\Core\Database\DatabaseExceptionWrapper
+   * @throws IntegrityConstraintViolationException
+   * @throws DatabaseExceptionWrapper
    */
   public function countChannel(string $channel): int {
     // Counting all channels at once saves some queries.
@@ @@
    * {@inheritdoc}
    *
    * @throws \PDOException
-   * @throws \Drupal\Core\Database\DatabaseException
+   * @throws DatabaseException
    */
   public function writeLog(string $channel, array $fields): void {
     $this->reset();
@@ @@
    * {@inheritdoc}
    */
   public function getChannel(string $channel, int $count = NULL, array $header = NULL): iterable {
-    /** @var \Drupal\Core\Database\Query\SelectInterface $query */
+    /** @var SelectInterface $query */
     $query = $this->database->select(static::$table, 'w')
       ->extend(PagerSelectExtender::class)
       ->extend(TableSortExtender::class);
@@ @@
     $query->condition('w.channel', $channel);

     if ($count) {
-      /** @var \Drupal\Core\Database\Query\PagerSelectExtender $query */
+      /** @var PagerSelectExtender $query */
       $query = $query->limit(50);
     }
     if ($header) {
-      /** @var \Drupal\Core\Database\Query\TableSortExtender $query */
+      /** @var TableSortExtender $query */
       $query = $query->orderByHeader($header);
     }

@@ @@
    * {@inheritdoc}
    *
    * @throws \InvalidArgumentException
-   * @throws \Drupal\Core\Database\IntegrityConstraintViolationException
-   * @throws \Drupal\Core\Database\DatabaseExceptionWrapper
+   * @throws IntegrityConstraintViolationException
+   * @throws DatabaseExceptionWrapper
    */
   public function getEvent(int $event_id): ?object {
     return $this->database
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/dblog_persistent/src/Controller/DbLogPersistentController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\dblog_persistent\Controller;

+use Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException;
+use Symfony\Component\DependencyInjection\Exception\ServiceCircularReferenceException;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Component\Utility\Xss;
@@ @@
   /**
    * Log message storage.
    *
-   * @var \Drupal\dblog_persistent\DbLogPersistentStorageInterface
+   * @var DbLogPersistentStorageInterface
    */
   protected DbLogPersistentStorageInterface $storage;

@@ @@
   /**
    * User storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected UserStorageInterface $userStorage;

@@ @@
   /**
    * Date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;

@@ @@
   /**
    * DbLogChannelViewBuilder constructor.
    *
-   * @param \Drupal\dblog_persistent\DbLogPersistentStorageInterface $storage
+   * @param DbLogPersistentStorageInterface $storage
    *   Log message storage.
-   * @param \Drupal\user\UserStorageInterface $userStorage
+   * @param UserStorageInterface $userStorage
    *   User storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   Date formatter.
    */
   public function __construct(DbLogPersistentStorageInterface $storage,
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException
-   * @throws \Symfony\Component\DependencyInjection\Exception\ServiceCircularReferenceException
+   * @throws ServiceNotFoundException
+   * @throws ServiceCircularReferenceException
    */
   public static function create(ContainerInterface $container): self {
     return new static(
@@ @@
   /**
    * Displays a listing of database log messages.
    *
-   * @param \Drupal\dblog_persistent\Entity\ChannelInterface $dblog_persistent_channel
+   * @param ChannelInterface $dblog_persistent_channel
    *   The log channel to display.
    *
    * @return array
@@ @@
   /**
    * Render the page title.
    *
-   * @param \Drupal\dblog_persistent\Entity\ChannelInterface $dblog_persistent_channel
+   * @param ChannelInterface $dblog_persistent_channel
    *   The log channel to display.
    *
    * @return \Drupal\Core\StringTranslation\TranslatableMarkup
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/dblog_persistent/src/ChannelListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\dblog_persistent;

+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\dblog_persistent\Entity\ChannelInterface;
+use Drupal\dblog_persistent\Entity\Channel;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
   /**
    * The dblog_persistent.storage service.
    *
-   * @var \Drupal\dblog_persistent\DbLogPersistentStorageInterface
+   * @var DbLogPersistentStorageInterface
    */
   protected DbLogPersistentStorageInterface $logStorage;

@@ @@
   /**
    * DbLogPersistentTypeListBuilder constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The dblog_persistent_channel type.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The dblog_persistent_channel storage.
-   * @param \Drupal\dblog_persistent\DbLogPersistentStorageInterface $loader
+   * @param DbLogPersistentStorageInterface $loader
    *   The dblog_persistent.storage service.
    */
   public function __construct(EntityTypeInterface $entity_type,
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function buildRow(EntityInterface $entity): array {
-    /** @var \Drupal\dblog_persistent\Entity\ChannelInterface $entity */
+    /** @var ChannelInterface $entity */
     $row['label'] = $entity->label();
     $filters = [];
     if ($types = $entity->getTypes()) {
@@ @@

     $row['count'] = $this->logStorage->countChannel($entity->id());
     if ($row['count']) {
-      /** @var \Drupal\dblog_persistent\Entity\Channel $entity */
+      /** @var Channel $entity */
       $row['count'] = [
         'data' => [
           '#type' => 'link',
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function getDefaultOperations(EntityInterface $entity): array {
     $operations = parent::getDefaultOperations($entity);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 8 files have been changed by Rector                                       

