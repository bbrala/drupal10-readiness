modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Context/Context.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Entity/EntityHasTranslation.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Entity/EntityTranslationFromContext.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageRelativeUrl.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/File/FileUrl.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Image/ImageResourceRelativeUrl.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Language/CurrentLanguage.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Routing/CurrentUrl.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Routing/IsFrontPage.php
modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Routing/PathWithQueryString.php

7 files with changes
====================

1) modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Routing/PathWithQueryString.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Routing;

+use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Url;
 use Drupal\graphql\GraphQL\Cache\CacheableValue;
@@ @@
   /**
    * Symfony\Component\HttpFoundation\RequestStack definition.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Routing/IsFrontPage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Routing;

+use Drupal\Core\Path\PathMatcherInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\graphql\GraphQL\Execution\ResolveContext;
 use Drupal\graphql\Plugin\GraphQL\Fields\FieldPluginBase;
@@ @@
   /**
    * Drupal\Core\Path\PathMatcherInterface definition.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Language/CurrentLanguage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Language;

+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\graphql\GraphQL\Execution\ResolveContext;
 use Drupal\graphql\Plugin\GraphQL\Fields\FieldPluginBase;
@@ @@
   /**
    * Drupal\Core\Language\LanguageManagerInterface definition.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Image/ImageResourceRelativeUrl.php:25

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   protected function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
-    yield file_url_transform_relative($value['url']);
+    yield \Drupal::service('file_url_generator')->transformRelative($value['url']);
   }

 }
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/File/FileUrl.php:24

    ---------- begin diff ----------
@@ @@
    */
   public function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
     if ($value instanceof FileInterface) {
-      $absolute_url = file_create_url($value->getFileUri());
-      yield file_url_transform_relative($absolute_url);
+      $absolute_url = \Drupal::service('file_url_generator')->generateAbsoluteString($value->getFileUri());
+      yield \Drupal::service('file_url_generator')->transformRelative($absolute_url);
     }
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Entity/Fields/Image/ImageRelativeUrl.php:28

    ---------- begin diff ----------
@@ @@
    */
   protected function resolveValues($value, array $args, ResolveContext $context, ResolveInfo $info) {
     if ($value instanceof ImageItem && $value->entity && $value->entity->access('view')) {
-      $absolute_url = file_create_url($value->entity->getFileUri());
-      yield file_url_transform_relative($absolute_url);
+      $absolute_url = \Drupal::service('file_url_generator')->generateAbsoluteString($value->entity->getFileUri());
+      yield \Drupal::service('file_url_generator')->transformRelative($absolute_url);
     }
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/graphql_extras/src/Plugin/GraphQL/Fields/Entity/EntityHasTranslation.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\graphql_extras\Plugin\GraphQL\Fields\Entity;

+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * Drupal\Core\Language\LanguageManagerInterface definition.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

