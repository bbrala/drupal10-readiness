diff --git a/config_patch.info.yml b/config_patch.info.yml
index 5d7f599..f90db52 100644
--- a/config_patch.info.yml
+++ b/config_patch.info.yml
@@ -1,6 +1,6 @@
 name: 'Config Patch'
 type: module
 description: 'Create patches from configuration diffs'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 package: 'Config'
 configure: config_patch.settings
diff --git a/src/Annotation/ConfigPatchOutput.php b/src/Annotation/ConfigPatchOutput.php
index fa9a819..0362ceb 100644
--- a/src/Annotation/ConfigPatchOutput.php
+++ b/src/Annotation/ConfigPatchOutput.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_patch\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class ConfigPatchOutput extends Plugin {
   /**
    * The human-readable name of the output type.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -34,7 +35,7 @@ class ConfigPatchOutput extends Plugin {
    *
    * Used as a hint on the patch create form.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Commands/ConfigPatchCommands.php b/src/Commands/ConfigPatchCommands.php
index 34215cf..e5339d9 100644
--- a/src/Commands/ConfigPatchCommands.php
+++ b/src/Commands/ConfigPatchCommands.php
@@ -18,14 +18,14 @@ class ConfigPatchCommands extends DrushCommands {
   /**
    * The comparer service.
    *
-   * @var \Drupal\config_patch\ConfigCompare
+   * @var ConfigCompare
    */
   protected $configCompare;
 
   /**
    * ConfigPatchCommands constructor.
    *
-   * @param \Drupal\config_patch\ConfigCompare $configCompare
+   * @param ConfigCompare $configCompare
    *   Comparer service.
    */
   public function __construct(ConfigCompare $configCompare) {
diff --git a/src/ConfigCompare.php b/src/ConfigCompare.php
index 5577f2c..ee29527 100644
--- a/src/ConfigCompare.php
+++ b/src/ConfigCompare.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\config_patch;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\config_patch\Plugin\config_patch\output\OutputPluginInterface;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ -29,7 +32,7 @@ class ConfigCompare {
   /**
    * The sync configuration object.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $syncStorage;
 
@@ -38,62 +41,62 @@ class ConfigCompare {
    *
    * See https://www.drupal.org/node/3037022.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $exportStorage;
 
   /**
    * The configuration manager.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The output plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $outputPluginManager;
 
   /**
    * Patch output plugin.
    *
-   * @var \Drupal\config_patch\Plugin\config_patch\output\OutputPluginInterface
+   * @var OutputPluginInterface
    */
   protected $outputPlugin;
 
   /**
    * Caching.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * ConfigCompare constructor.
    *
-   * @param \Drupal\Core\Config\StorageInterface $sync_storage
+   * @param StorageInterface $sync_storage
    *   Sync storage.
-   * @param \Drupal\Core\Config\StorageInterface $export_storage
+   * @param StorageInterface $export_storage
    *   Export storage.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $config_manager
+   * @param ConfigManagerInterface $config_manager
    *   Config manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   For module config.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $output_plugin_manager
+   * @param PluginManagerInterface $output_plugin_manager
    *   Manage patch output plugins.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Caching.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function __construct(StorageInterface $sync_storage, StorageInterface $export_storage, ConfigManagerInterface $config_manager, ConfigFactoryInterface $config_factory, PluginManagerInterface $output_plugin_manager, CacheBackendInterface $cacheBackend) {
     $this->syncStorage = $sync_storage;
@@ -369,7 +372,7 @@ class ConfigCompare {
   /**
    * Sets output plugin.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function setOutputPlugin($plugin_id) {
     $this->outputPlugin = $this->outputPluginManager->createInstance($plugin_id);
diff --git a/src/Controller/ConfigPatchToolbar.php b/src/Controller/ConfigPatchToolbar.php
index 3047b2d..05af106 100644
--- a/src/Controller/ConfigPatchToolbar.php
+++ b/src/Controller/ConfigPatchToolbar.php
@@ -21,23 +21,23 @@ class ConfigPatchToolbar extends ControllerBase {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * Config compare service.
    *
-   * @var \Drupal\config_patch\ConfigCompare
+   * @var ConfigCompare
    */
   protected $configCompare;
 
   /**
    * ToolbarHandler constructor.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
-   * @param \Drupal\config_patch\ConfigCompare $configCompare
+   * @param ConfigCompare $configCompare
    *   Config comparer.
    */
   public function __construct(AccountProxyInterface $account, ConfigCompare $configCompare) {
@@ -58,7 +58,7 @@ class ConfigPatchToolbar extends ControllerBase {
   /**
    * Get config changes with ajax.
    *
-   * @return Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An ajax response with configuration changes.
    */
   public function toolbarAjax() {
diff --git a/src/EventSubscriber/ConfigSubscriber.php b/src/EventSubscriber/ConfigSubscriber.php
index b19cdcb..4177bd5 100644
--- a/src/EventSubscriber/ConfigSubscriber.php
+++ b/src/EventSubscriber/ConfigSubscriber.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\config_patch\EventSubscriber;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\Core\Config\ConfigEvents;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -17,14 +17,14 @@ class ConfigSubscriber implements EventSubscriberInterface {
   /**
    * Invalidation service.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagInvalidator;
 
   /**
    * ConfigSubscriber constructor.
    *
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cacheTagsInvalidator
+   * @param CacheTagsInvalidatorInterface $cacheTagsInvalidator
    *   Invalidation service.
    */
   public function __construct(CacheTagsInvalidatorInterface $cacheTagsInvalidator) {
@@ -45,7 +45,7 @@ class ConfigSubscriber implements EventSubscriberInterface {
   /**
    * Config change callback.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The caught event.
    */
   public function onConfigChange(Event $event) {
diff --git a/src/Form/ConfigPatch.php b/src/Form/ConfigPatch.php
index df48f75..31f1ded 100644
--- a/src/Form/ConfigPatch.php
+++ b/src/Form/ConfigPatch.php
@@ -17,7 +17,7 @@ class ConfigPatch extends FormBase {
   /**
    * The config comparison service.
    *
-   * @var \Drupal\config_patch\ConfigCompare
+   * @var ConfigCompare
    */
   protected $configCompare;
 
diff --git a/src/Form/ConfigPatchSettings.php b/src/Form/ConfigPatchSettings.php
index 5846b07..7331a4e 100644
--- a/src/Form/ConfigPatchSettings.php
+++ b/src/Form/ConfigPatchSettings.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\config_patch\Form;
 
+use Drupal\Component\Plugin\PluginManagerInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -14,14 +16,14 @@ class ConfigPatchSettings extends ConfigFormBase {
   /**
    * Output plugins.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $outputPluginManager;
 
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
diff --git a/src/Plugin/Derivative/OutputLocalTasks.php b/src/Plugin/Derivative/OutputLocalTasks.php
index 0539e7b..4b7943e 100644
--- a/src/Plugin/Derivative/OutputLocalTasks.php
+++ b/src/Plugin/Derivative/OutputLocalTasks.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\config_patch\Plugin\Derivative;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Plugin\Derivative\DeriverBase;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -18,23 +19,23 @@ class OutputLocalTasks extends DeriverBase implements ContainerDeriverInterface
   /**
    * Output plugin manager.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $pluginManager;
 
   /**
    * Configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * OutputLocalTasks constructor.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $pluginManager
+   * @param PluginManagerInterface $pluginManager
    *   Output plugin manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Get module config from the factory.
    */
   public function __construct(PluginManagerInterface $pluginManager, ConfigFactoryInterface $config_factory) {
diff --git a/src/Plugin/config_patch/output/OutputPluginInterface.php b/src/Plugin/config_patch/output/OutputPluginInterface.php
index 7e904e0..1914dae 100644
--- a/src/Plugin/config_patch/output/OutputPluginInterface.php
+++ b/src/Plugin/config_patch/output/OutputPluginInterface.php
@@ -31,7 +31,7 @@ interface OutputPluginInterface extends PluginInspectionInterface, DerivativeIns
    *
    * @param array $patches
    *   The array of patches (per collection).
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the Config Patch form at submission.
    */
   public function output(array $patches, FormStateInterface $form_state);
@@ -41,7 +41,7 @@ interface OutputPluginInterface extends PluginInspectionInterface, DerivativeIns
    *
    * @param array $form
    *   The form build.
-   * @param Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the Config Patch form at submission.
    */
   public function alterForm(array $form, FormStateInterface $form_state);
diff --git a/src/PluginManager.php b/src/PluginManager.php
index 0bf5470..baa5bae 100644
--- a/src/PluginManager.php
+++ b/src/PluginManager.php
@@ -23,9 +23,9 @@ class PluginManager extends DefaultPluginManager implements FallbackPluginManage
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(string $type, \Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 0ba181b..73adc59 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\config_patch\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,7 +23,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
@@ -34,7 +35,7 @@ class LoadTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
