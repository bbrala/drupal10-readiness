modules/contrib/advagg/advagg.developer-documentation.php
modules/contrib/advagg/advagg.drush.inc
modules/contrib/advagg/advagg.install
modules/contrib/advagg/advagg.module
modules/contrib/advagg/advagg_bundler/advagg_bundler.install
modules/contrib/advagg/advagg_bundler/src/Asset/AdvaggCssCollectionGrouper.php
modules/contrib/advagg/advagg_bundler/src/Asset/AdvaggJsCollectionGrouper.php
modules/contrib/advagg/advagg_bundler/src/EventSubscriber/MinificationSubscriber.php
modules/contrib/advagg/advagg_bundler/src/Form/SettingsForm.php
modules/contrib/advagg/advagg_bundler/tests/modules/advagg_bundler_test/advagg_bundler_test.module
modules/contrib/advagg/advagg_bundler/tests/src/Functional/BundlerTest.php
modules/contrib/advagg/advagg_bundler/tests/src/Kernel/Form/SettingsFormTest.php
modules/contrib/advagg/advagg_cdn/advagg_cdn.install
modules/contrib/advagg/advagg_cdn/advagg_cdn.module
modules/contrib/advagg/advagg_cdn/src/Form/SettingsForm.php
modules/contrib/advagg/advagg_cdn/tests/src/Functional/CdnTest.php
modules/contrib/advagg/advagg_cdn/tests/src/Kernel/Form/SettingsFormTest.php
modules/contrib/advagg/advagg_css_minify/advagg_css_minify.install
modules/contrib/advagg/advagg_css_minify/src/Asset/CssMinifier.php
modules/contrib/advagg/advagg_css_minify/src/EventSubscriber/MinificationSubscriber.php
modules/contrib/advagg/advagg_css_minify/src/Form/SettingsForm.php
modules/contrib/advagg/advagg_css_minify/tests/src/Functional/CssMinifyPagesTest.php
modules/contrib/advagg/advagg_css_minify/tests/src/Kernel/Asset/CssMinifierUnitTest.php
modules/contrib/advagg/advagg_css_minify/tests/src/Kernel/Form/SettingsFormTest.php
modules/contrib/advagg/advagg_ext_minify/advagg_ext_minify.install
modules/contrib/advagg/advagg_ext_minify/src/Asset/Minifier.php
modules/contrib/advagg/advagg_ext_minify/src/EventSubscriber/MinificationSubscriber.php
modules/contrib/advagg/advagg_ext_minify/src/Form/SettingsForm.php
modules/contrib/advagg/advagg_ext_minify/tests/src/Functional/ExtMinifyPagesTest.php
modules/contrib/advagg/advagg_ext_minify/tests/src/Kernel/Form/SettingsFormTest.php
modules/contrib/advagg/advagg_js_minify/advagg_js_minify.install
modules/contrib/advagg/advagg_js_minify/jshrink.inc
modules/contrib/advagg/advagg_js_minify/jsminplus.inc
modules/contrib/advagg/advagg_js_minify/jspacker.inc
modules/contrib/advagg/advagg_js_minify/jsqueeze.inc
modules/contrib/advagg/advagg_js_minify/src/Asset/JsMinifier.php
modules/contrib/advagg/advagg_js_minify/src/EventSubscriber/MinificationSubscriber.php
modules/contrib/advagg/advagg_js_minify/src/Form/SettingsForm.php
modules/contrib/advagg/advagg_js_minify/tests/src/Functional/JsMinifyPagesTest.php
modules/contrib/advagg/advagg_js_minify/tests/src/Kernel/Asset/JsMinifierUnitTest.php
modules/contrib/advagg/advagg_js_minify/tests/src/Kernel/Form/SettingsFormTest.php
modules/contrib/advagg/advagg_mod/advagg_mod.install
modules/contrib/advagg/advagg_mod/advagg_mod.module
modules/contrib/advagg/advagg_mod/src/Asset/AsyncJs.php
modules/contrib/advagg/advagg_mod/src/Asset/DeferCss.php
modules/contrib/advagg/advagg_mod/src/Asset/DeferJs.php
modules/contrib/advagg/advagg_mod/src/Asset/RemoveConsoleLog.php
modules/contrib/advagg/advagg_mod/src/Asset/TranslateCss.php
modules/contrib/advagg/advagg_mod/src/EventSubscriber/InitSubscriber.php
modules/contrib/advagg/advagg_mod/src/Form/SettingsForm.php
modules/contrib/advagg/advagg_mod/tests/src/Functional/ModifierPagesTest.php
modules/contrib/advagg/advagg_mod/tests/src/Kernel/Form/SettingsFormTest.php
modules/contrib/advagg/advagg_old_ie_compatibility/advagg_old_ie_compatibility.install
modules/contrib/advagg/advagg_old_ie_compatibility/src/Asset/AdvaggCssCollectionGrouper.php
modules/contrib/advagg/advagg_old_ie_compatibility/src/EventSubscriber/CssSubscriber.php
modules/contrib/advagg/advagg_old_ie_compatibility/src/Form/SettingsForm.php
modules/contrib/advagg/advagg_old_ie_compatibility/tests/src/Kernel/Form/SettingsFormTest.php
modules/contrib/advagg/advagg_validator/src/Form/BaseValidatorForm.php
modules/contrib/advagg/advagg_validator/src/Form/CssLintForm.php
modules/contrib/advagg/advagg_validator/src/Form/CssW3Form.php
modules/contrib/advagg/advagg_validator/src/Form/JsHintForm.php
modules/contrib/advagg/advagg_validator/tests/src/Functional/ValidatorPagesTest.php
modules/contrib/advagg/advagg_validator/tests/src/Kernel/Form/CssLintFormTest.php
modules/contrib/advagg/advagg_validator/tests/src/Kernel/Form/CssW3FormTest.php
modules/contrib/advagg/advagg_validator/tests/src/Kernel/Form/JsHintFormTest.php
modules/contrib/advagg/src/AdvaggSettersTrait.php
modules/contrib/advagg/src/Asset/AssetOptimizationEvent.php
modules/contrib/advagg/src/Asset/AssetOptimizer.php
modules/contrib/advagg/src/Asset/CssOptimizer.php
modules/contrib/advagg/src/Asset/JsOptimizer.php
modules/contrib/advagg/src/Asset/SingleAssetOptimizerBase.php
modules/contrib/advagg/src/Commands/AdvaggCommands.php
modules/contrib/advagg/src/EventSubscriber/ResponseSubscriber.php
modules/contrib/advagg/src/Form/AdvaggFormBase.php
modules/contrib/advagg/src/Form/InfoForm.php
modules/contrib/advagg/src/Form/OperationsForm.php
modules/contrib/advagg/src/Form/SettingsForm.php
modules/contrib/advagg/tests/modules/advagg_test/advagg_test.module
modules/contrib/advagg/tests/src/Functional/AdminPagesTest.php
modules/contrib/advagg/tests/src/Functional/AdvaggFunctionalTestBase.php
modules/contrib/advagg/tests/src/Functional/AdvaggPathManipulationTest.php
modules/contrib/advagg/tests/src/Functional/CombineMediaQueriesTest.php
modules/contrib/advagg/tests/src/Kernel/Asset/CssOptimizerUnitTest.php
modules/contrib/advagg/tests/src/Kernel/Form/InfoFormTest.php
modules/contrib/advagg/tests/src/Kernel/Form/OperationsFormTest.php
modules/contrib/advagg/tests/src/Kernel/Form/SettingsFormTest.php

54 files with changes
=====================

1) modules/contrib/advagg/tests/src/Kernel/Form/SettingsFormTest.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The Advagg settingForm.
    *
-   * @var \Drupal\advagg\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->settingsForm = SettingsForm::create($this->container);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/advagg/tests/src/Kernel/Form/OperationsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The Operations form object under test.
    *
-   * @var \Drupal\advagg\Form\OperationsForm
+   * @var OperationsForm
    */
   protected $operationsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/advagg/tests/src/Kernel/Form/InfoFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The Info form object under test.
    *
-   * @var \Drupal\advagg\Form\InfoForm
+   * @var InfoForm
    */
   protected $infoForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/advagg/tests/src/Kernel/Asset/CssOptimizerUnitTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\advagg\Kernel\Asset;

+use Drupal\advagg\Asset\CssOptimizer;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The Optimizer.
    *
-   * @var \Drupal\advagg\Asset\CssOptimizer
+   * @var CssOptimizer
    */
   protected $optimizer;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('advagg');
     $this->optimizer = \Drupal::service('advagg.optimizer.css');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/advagg/tests/src/Functional/AdvaggFunctionalTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\advagg\functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer site configuration',
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/advagg/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg\Form;

+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\advagg\Asset\AssetOptimizer;
 use Drupal\Core\Cache\Cache;
@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg.settings');
     $htaccess = FALSE;
     if ($config->get('immutable') != $form_state->getValue('immutable')) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/advagg/src/Form/OperationsForm.php:265

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function toggleBypassCookie(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/advagg/src/Form/InfoForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg\Form;

+use Drupal\Core\Theme\Registry;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\Core\StringTranslation\Translator\TranslatorInterface;
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
   /**
    * The theme registry service.
    *
-   * @var \Drupal\Core\Theme\Registry
+   * @var Registry
    */
   protected $themeRegistry;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The string translation service.
    *
-   * @var \Drupal\Core\StringTranslation\Translator\TranslatorInterface
+   * @var TranslatorInterface
    */
   protected $translation;

@@ @@
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function getFileInfoSubmit(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function getFileInfoValidate(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/advagg/src/EventSubscriber/ResponseSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg\EventSubscriber;

+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Render\HtmlResponse;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

 /**
@@ @@
   /**
    * A config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Constructs the Subscriber object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Passes HtmlResponse responses on to other functions if enabled.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function processResponse(FilterResponseEvent $event) {
+  public function processResponse(ResponseEvent $event) {
     // Only subscribe to the event if DNS prefetching is enabled.
     if ($this->config->get('dns_prefetch')) {
       $response = $event->getResponse();
@@ @@
   /**
    * Force absolute paths.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function forceAbsolutePaths(FilterResponseEvent $response) {
+  public function forceAbsolutePaths(ResponseEvent $response) {
     // Skip if not enabled.
     if (!$this->config->get('path.convert.absolute')) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/advagg/src/Commands/AdvaggCommands.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg\Commands;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * An editable config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $advaggConfig;

@@ @@
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * Provides helpers to operate on files and stream wrappers.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs the commands instance.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The AdvAgg cache.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   Provides helpers to operate on files and stream wrappers.
    */
   public function __construct(CacheBackendInterface $cache, ConfigFactoryInterface $config_factory, FileSystemInterface $file_system) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/advagg/src/Asset/SingleAssetOptimizerBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg\Asset;

+use Drupal\Core\Config\Config;
 use Psr\Log\LoggerInterface;

 /**
@@ @@
   /**
    * Logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * A config object for optimizer.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Construct the optimizer.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A PSR compatible logger.
    */
   public function __construct(LoggerInterface $logger) {
@@ @@
    */
   public function addLicense(&$contents, $path) {
     if ($this->config->get('add_license')) {
-      $url = file_create_url($path);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
       $contents = "/* Source and licensing information for the line(s) below can be found at $url. */\n" . $contents . "\n/* Source and licensing information for the above line(s) can be found at $url. */";
     }
   }
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


12) modules/contrib/advagg/src/Asset/JsOptimizer.php:122

    ---------- begin diff ----------
@@ @@
    */
   protected function optimizeFile(array &$asset, array $data) {
     $asset_event = new AssetOptimizationEvent($data['contents'], $asset, $data);
-    $this->eventDispatcher->dispatch(AssetOptimizationEvent::JS, $asset_event);
+    $this->eventDispatcher->dispatch($asset_event, AssetOptimizationEvent::JS);
     $contents = $asset_event->getContent();
     $asset = $asset_event->getAsset();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/advagg/src/Asset/CssOptimizer.php:87

    ---------- begin diff ----------
@@ @@
       $asset['media'] = 'all';
     }
     $asset_event = new AssetOptimizationEvent($contents, $asset, $data);
-    $this->eventDispatcher->dispatch(AssetOptimizationEvent::CSS, $asset_event);
+    $this->eventDispatcher->dispatch($asset_event, AssetOptimizationEvent::CSS);
     $contents = $asset_event->getContent();
     $asset = $asset_event->getAsset();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/advagg/src/Asset/AssetOptimizer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg\Asset;

+use Drupal\Core\Config\Config;
 use Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * A config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Event Dispatcher service.
    *
-   * @var \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher
+   * @var ContainerAwareEventDispatcher
    */
   protected $eventDispatcher;

@@ @@
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs the Optimizer object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher $event_dispatcher
+   * @param ContainerAwareEventDispatcher $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The AdvAgg cache.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ContainerAwareEventDispatcher $event_dispatcher, CacheBackendInterface $cache) {
@@ @@
     if (!$regenerate && file_exists($file)) {
       return;
     }
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = \Drupal::config('advagg.settings');
     if ($extension === 'js') {
       $type = 'application/javascript';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


15) modules/contrib/advagg/src/Asset/AssetOptimizationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg\Asset;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * @defgroup advagg_optimization_event Asset Optimization Event
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/advagg/src/AdvaggSettersTrait.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * The CSS asset collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected $cssCollectionOptimizer;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The File System service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Set File System service.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The File System service.
    *
    * @return $this
@@ @@
   /**
    * The JavaScript asset collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected $jsCollectionOptimizer;

@@ @@
   /**
    * The core language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The Guzzle HTTP Client.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;

@@ @@
   /**
    * The private key service.
    *
-   * @var \Drupal\Core\PrivateKey
+   * @var PrivateKey
    */
   protected $privateKey;

@@ @@
   /**
    * The Drupal renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The theme registry service.
    *
-   * @var \Drupal\Core\Theme\Registry
+   * @var Registry
    */
   protected $themeRegistry;

@@ @@
   /**
    * Obtaining system time.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The set cache backend.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   The AdvAgg cache.
    *
    * @return $this
@@ @@
   /**
    * Set CSS asset collection optimizer service.
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $cssCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $cssCollectionOptimizer
    *   The CSS asset collection optimizer service.
    *
    * @return $this
@@ @@
   /**
    * Set date formatter service.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter service.
    *
    * @return $this
@@ @@
   /**
    * Set http client.
    *
-   * @param \GuzzleHttp\ClientInterface $httpClient
+   * @param ClientInterface $httpClient
    *   The renderer.
    *
    * @return $this
@@ @@
   /**
    * Set JavaScript asset collection optimizer service.
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $jsCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $jsCollectionOptimizer
    *   The JavaScript asset collection optimizer service.
    *
    * @return $this
@@ @@
   /**
    * Set language manager service.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   The core language manager service.
    *
    * @return $this
@@ @@
   /**
    * Set module handler.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler service.
    *
    * @return $this
@@ @@
   /**
    * Set private key service.
    *
-   * @param \Drupal\Core\PrivateKey $privateKey
+   * @param PrivateKey $privateKey
    *   The private key service.
    *
    * @return $this
@@ @@
   /**
    * Set renderer.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    *
    * @return $this
@@ @@
   /**
    * Set state service.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    *
    * @return $this
@@ @@
   /**
    * The theme registry service.
    *
-   * @param \Drupal\Core\Theme\Registry $themeRegistry
+   * @param Registry $themeRegistry
    *   The theme registry.
    *
    * @return $this
@@ @@
   /**
    * Obtaining system time.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The system time.
    *
    * @return $this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


17) modules/contrib/advagg/advagg_validator/tests/src/Kernel/Form/JsHintFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The validator JsHint settings form object under test.
    *
-   * @var \Drupal\advagg_validator\Form\JsHintForm
+   * @var JsHintForm
    */
   protected $jsHintForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/advagg/advagg_validator/tests/src/Kernel/Form/CssW3FormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The validator css W3 settings form object under test.
    *
-   * @var \Drupal\advagg_validator\Form\CssW3Form
+   * @var CssW3Form
    */
   protected $cssW3Form;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/advagg/advagg_validator/tests/src/Kernel/Form/CssLintFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The Modifier Minification settings form object under test.
    *
-   * @var \Drupal\advagg_validator\Form\CssLintForm
+   * @var CssLintForm
    */
   protected $cssLintForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/advagg/advagg_validator/src/Form/CssW3Form.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_validator\Form;

+use GuzzleHttp\Client;
+use Drupal\Core\Render\RendererInterface;
 use DOMDocument;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The Guzzle HTTP Client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * The Drupal renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function ajaxCheck(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/advagg/advagg_validator/src/Form/BaseValidatorForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_validator\Form;

+use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\advagg\Form\AdvaggFormBase;
 use Drupal\Component\Render\HtmlEscapedText;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The StreamWrapper manage.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/advagg/advagg_old_ie_compatibility/tests/src/Kernel/Form/SettingsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The Modifier Minification settings form object under test.
    *
-   * @var \Drupal\advagg_old_ie_compatibility\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/advagg/advagg_old_ie_compatibility/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_old_ie_compatibility\Form;

+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
   /**
    * The Advagg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The core language manager service.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_old_ie_compatibility.settings');
     $config
       ->set('active', $form_state->getValue('active'))
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


24) modules/contrib/advagg/advagg_old_ie_compatibility/src/EventSubscriber/CssSubscriber.php:17

    ---------- begin diff ----------
@@ @@
    * this is acceptable since that reduces performance hit and an exact number
    * is unimportant.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function scan(AssetOptimizationEvent $asset) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


25) modules/contrib/advagg/advagg_old_ie_compatibility/src/Asset/AdvaggCssCollectionGrouper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_old_ie_compatibility\Asset;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Asset\AssetCollectionGrouperInterface;
 use Drupal\Core\Asset\CssCollectionGrouper;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * A config object for optimizer.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/advagg/advagg_mod/tests/src/Kernel/Form/SettingsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The Modifier Minification settings form object under test.
    *
-   * @var \Drupal\advagg_mod\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/advagg/advagg_mod/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_mod\Form;

+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_mod.settings');
     $config
       ->set('css_adjust_sort_browsers', $form_state->getValue('css_adjust_sort_browsers'))
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/advagg/advagg_mod/src/EventSubscriber/InitSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_mod\EventSubscriber;

+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\advagg\Asset\AssetOptimizationEvent;
 use Drupal\advagg_mod\Asset\AsyncJs;
 use Drupal\advagg_mod\Asset\DeferCss;
@@ @@
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Render\HtmlResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;

@@ @@
   /**
    * A config object for the advagg_mod configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * A config object for the advagg configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $advaggConfig;

@@ @@
   /**
    * The CSS translator service.
    *
-   * @var \Drupal\advagg_mod\Asset\TranslateCss
+   * @var TranslateCss
    */
   protected $translator;

@@ @@
   /**
    * The CSS defer service.
    *
-   * @var \Drupal\advagg_mod\Asset\DeferCss
+   * @var DeferCss
    */
   protected $cssDeferer;

@@ @@
   /**
    * The JS defer service.
    *
-   * @var \Drupal\advagg_mod\Asset\DeferJs
+   * @var DeferJs
    */
   protected $jsDeferer;

@@ @@
   /**
    * The JS asyncer service.
    *
-   * @var \Drupal\advagg_mod\Asset\AsyncJs
+   * @var AsyncJs
    */
   protected $jsAsyncer;

@@ @@
   /**
    * The Console.log remover.
    *
-   * @var \Drupal\advagg_mod\Asset\RemoveConsoleLog
+   * @var RemoveConsoleLog
    */
   protected $consoleLogRemover;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
   /**
    * Constructs the Subscriber object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\advagg_mod\Asset\TranslateCss $translator
+   * @param TranslateCss $translator
    *   The translator service.
-   * @param \Drupal\advagg_mod\Asset\DeferCss $deferer
+   * @param DeferCss $deferer
    *   The CSS deferer.
    * @param \Drupal\Advagg_mod\Asset\AsyncJs $js_asyncer
    *   The JS asyncer.
-   * @param \Drupal\advagg_mod\Asset\DeferJs $js_deferer
+   * @param DeferJs $js_deferer
    *   The JS deferer.
    * @param \Drupal\Advagg_mod\Asset\RemoveConsoleLog $js_console_log
    *   The class to remove console.log() calls.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(ConfigFactoryInterface $config_factory, TranslateCss $translator, DeferCss $deferer, AsyncJs $js_asyncer, DeferJs $js_deferer, RemoveConsoleLog $js_console_log, FileSystemInterface $file_system) {
@@ @@
   /**
    * Pass the CSS to the translator.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $assetOptimizationEvent
+   * @param AssetOptimizationEvent $assetOptimizationEvent
    *   The CSS optimization event.
    */
   public function translateCss(AssetOptimizationEvent $assetOptimizationEvent) {
@@ @@
   /**
    * Pass the JS to the modifier if enabled to remove console logging.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $assetOptimizationEvent
+   * @param AssetOptimizationEvent $assetOptimizationEvent
    *   The JS optimization event.
    */
   public function removeConsoleLog(AssetOptimizationEvent $assetOptimizationEvent) {
@@ @@
   /**
    * Apply CSS defer actions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function deferCss(FilterResponseEvent $response) {
+  public function deferCss(ResponseEvent $response) {
     // Skip if not enabled.
     if (!advagg_mod_css_defer_active()) {
       return;
@@ @@
   /**
    * Apply defer JS changes.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function deferJs(FilterResponseEvent $response) {
+  public function deferJs(ResponseEvent $response) {
     // Skip if not enabled.
     if (!$this->config->get('js_defer')) {
       return;
@@ @@
   /**
    * Apply CSS defer actions.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $response
+   * @param ResponseEvent $response
    *   The response event object.
    */
-  public function asyncJs(FilterResponseEvent $response) {
+  public function asyncJs(ResponseEvent $response) {
     // Skip if not enabled.
     if (!$this->config->get('js_async') || $this->config->get('js_defer')) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


29) modules/contrib/advagg/advagg_mod/src/Asset/TranslateCss.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/advagg/advagg_mod/src/Asset/DeferJs.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The Drupal module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * DeferCss constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The Drupal module handler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleHandlerInterface $module_handler) {
@@ @@

     // Admin Toolbar 8x fails when deferred.
     if ($this->moduleHandler->moduleExists('admin_toolbar')) {
-      $this->skipList[] = Crypt::hashBase64(drupal_get_path('module', 'admin_toolbar') . '/js/admin_toolbar.js' . $this->counter);
+      $this->skipList[] = Crypt::hashBase64(\Drupal::service('extension.list.module')->getPath('admin_toolbar') . '/js/admin_toolbar.js' . $this->counter);
     }
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


31) modules/contrib/advagg/advagg_mod/src/Asset/DeferCss.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * DeferCss constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@

     // Put JS inline if configured.
     if ($this->deferMethod === 0) {
-      $path = drupal_get_path('module', 'advagg_mod') . '/js/loadCSS.js';
+      $path = \Drupal::service('extension.list.module')->getPath('advagg_mod') . '/js/loadCSS.js';
       if (!strpos($content, $path)) {
         $path = Crypt::hashBase64($path . $this->counter);
       }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


32) modules/contrib/advagg/advagg_mod/advagg_mod.module:15

    ---------- begin diff ----------
@@ @@
   }
   $config = \Drupal::config('advagg_mod.settings');
   // Use the current file system path for advagg_mod.
-  $module_path = drupal_get_path('module', 'advagg_mod');
+  $module_path = \Drupal::service('extension.list.module')->getPath('advagg_mod');
   if (isset($js[$module_path . '/js/loadCSS.js'])) {
     if ($config->get('css_defer_js_code') === 4) {
       $js[$module_path . '/js/loadCSS.js']['type'] = 'external';
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


33) modules/contrib/advagg/advagg_js_minify/tests/src/Kernel/Form/SettingsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The JS Minification settings form object under test.
    *
-   * @var \Drupal\advagg_js_minify\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


34) modules/contrib/advagg/advagg_js_minify/tests/src/Kernel/Asset/JsMinifierUnitTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\advagg_js_minify\Kernel\Asset;

+use Drupal\advagg_js_minify\Asset\JsMinifier;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The Minifier.
    *
-   * @var \Drupal\advagg_js_minify\Asset\JsMinifier
+   * @var JsMinifier
    */
   protected $optimizer;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('advagg_js_minify');
     $this->optimizer = \Drupal::service('advagg.js_minifier');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


35) modules/contrib/advagg/advagg_js_minify/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_js_minify\Form;

+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_js_minify.settings');
     $form = [];
     if ($this->config('advagg.settings')->get('cache_level') === 0) {
@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_js_minify.settings');

     // Clear Caches.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


36) modules/contrib/advagg/advagg_js_minify/src/EventSubscriber/MinificationSubscriber.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;

@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
    */
   public function __construct(SingleAssetOptimizerBase $minifier) {
@@ @@
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The optimization event.
    */
   public function minify(AssetOptimizationEvent $asset) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


37) modules/contrib/advagg/advagg_js_minify/src/Asset/JsMinifier.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_js_minify\Asset;

+use JShrink\Minifier;
+use Patchwork\JSqueeze;
 use Drupal\Component\Utility\Unicode;
 use Drupal\advagg\Asset\SingleAssetOptimizerBase;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
@@ @@

     // Only include jsminplus.inc if the JSMinPlus class doesn't exist.
     if (!class_exists('\JSMinPlus')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jsminplus.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jsminplus.inc';
       $nesting_level = ini_get('xdebug.max_nesting_level');
       if (!empty($nesting_level) && $nesting_level < 200) {
         ini_set('xdebug.max_nesting_level', 200);
@@ @@
   public function minifyJspacker(&$contents) {
     // Use Packer on the contents of the aggregated file.
     if (!class_exists('\JavaScriptPacker')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jspacker.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jspacker.inc';
     }

     // Add semicolons to the end of lines if missing.
@@ @@

     // Only include jshrink.inc if the JShrink\Minifier class doesn't exist.
     if (!class_exists('\JShrink\Minifier')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jshrink.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jshrink.inc';
       $nesting_level = ini_get('xdebug.max_nesting_level');
       if (!empty($nesting_level) && $nesting_level < 200) {
         ini_set('xdebug.max_nesting_level', 200);
@@ @@
     try {
       // JShrink the contents of the aggregated file.
       // @codingStandardsIgnoreLine
-      $contents = \JShrink\Minifier::minify($contents, ['flaggedComments' => FALSE]);
+      $contents = Minifier::minify($contents, ['flaggedComments' => FALSE]);

       // Capture any output from JShrink.
       $error = trim(ob_get_contents());
@@ @@

     // Only include jshrink.inc if the Patchwork\JSqueeze class doesn't exist.
     if (!class_exists('\Patchwork\JSqueeze')) {
-      include drupal_get_path('module', 'advagg_js_minify') . '/jsqueeze.inc';
+      include \Drupal::service('extension.list.module')->getPath('advagg_js_minify') . '/jsqueeze.inc';
       $nesting_level = ini_get('xdebug.max_nesting_level');
       if (!empty($nesting_level) && $nesting_level < 200) {
         ini_set('xdebug.max_nesting_level', 200);
@@ @@
     try {
       // Minify the contents of the aggregated file.
       // @codingStandardsIgnoreLine
-      $jz = new \Patchwork\JSqueeze();
+      $jz = new JSqueeze();
       $contents = $jz->squeeze(
         $contents,
         TRUE,
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


38) modules/contrib/advagg/advagg_ext_minify/tests/src/Kernel/Form/SettingsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The External Minification settings form object under test.
    *
-   * @var \Drupal\advagg_ext_minify\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


39) modules/contrib/advagg/advagg_ext_minify/src/EventSubscriber/MinificationSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_ext_minify\EventSubscriber;

+use Drupal\Core\Config\Config;
 use Drupal\advagg\Asset\AssetOptimizationEvent;
 use Drupal\advagg\Asset\SingleAssetOptimizerBase;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;

@@ @@
   /**
    * The minifier configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(SingleAssetOptimizerBase $minifier, ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function minifyCss(AssetOptimizationEvent $asset) {
@@ @@
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function minifyJs(AssetOptimizationEvent $asset) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


40) modules/contrib/advagg/advagg_ext_minify/src/Asset/Minifier.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * File System Service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $file;

@@ @@
    *
    * @param string $root
    *   Gets the app root.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\File\FileSystemInterface $file
+   * @param FileSystemInterface $file
    *   The filesystem service.
    */
   public function __construct(string $root, LoggerInterface $logger, ConfigFactoryInterface $config_factory, FileSystemInterface $file) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


41) modules/contrib/advagg/advagg_css_minify/tests/src/Kernel/Form/SettingsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The CSS Minify settings form object under test.
    *
-   * @var \Drupal\advagg_css_minify\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


42) modules/contrib/advagg/advagg_css_minify/tests/src/Kernel/Asset/CssMinifierUnitTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\advagg_css_minify\Kernel\Asset;

+use Drupal\advagg_css_minify\Asset\CssMinifier;
 use Drupal\KernelTests\KernelTestBase;

 /**
@@ @@
   /**
    * The Minifier.
    *
-   * @var \Drupal\advagg_css_minify\Asset\CssMinifier
+   * @var CssMinifier
    */
   protected $optimizer;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig('advagg_css_minify');
     $this->optimizer = \Drupal::service('advagg.css_minifier');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


43) modules/contrib/advagg/advagg_css_minify/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_css_minify\Form;

+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
   /**
    * The AdvAgg cache.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_css_minify.settings');
     $form = [];
     if ($this->config('advagg.settings')->get('cache_level') === 0) {
@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_css_minify.settings');

     // Clear Caches.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


44) modules/contrib/advagg/advagg_css_minify/src/EventSubscriber/MinificationSubscriber.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;

@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
    */
   public function __construct(SingleAssetOptimizerBase $minifier) {
@@ @@
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The asset optimization event.
    */
   public function minify(AssetOptimizationEvent $asset) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


45) modules/contrib/advagg/advagg_css_minify/src/Asset/CssMinifier.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


46) modules/contrib/advagg/advagg_cdn/tests/src/Kernel/Form/SettingsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The CDN settings form object under test.
    *
-   * @var \Drupal\advagg_cdn\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


47) modules/contrib/advagg/advagg_cdn/advagg_cdn.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\Config;
 /**
  * @file
  * Handles Advanced Aggregation installation and upgrade tasks.
@@ @@
  * Update selected jQuery/jQuery UI versions to latest used in Drupal core.
  */
 function advagg_cdn_update_8300() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::configFactory()->getEditable('advagg_cdn.settings');
   $config
     ->set('jquery_version', '3.2.1')
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


48) modules/contrib/advagg/advagg_bundler/tests/src/Kernel/Form/SettingsFormTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The Bundler settings form object under test.
    *
-   * @var \Drupal\advagg_bundler\Form\SettingsForm
+   * @var SettingsForm
    */
   protected $settingsForm;

@@ @@
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installConfig(static::$modules);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


49) modules/contrib/advagg/advagg_bundler/src/Form/SettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\advagg_bundler\Form;

+use Drupal\Core\Config\Config;
 use Drupal\advagg\AdvaggSettersTrait;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_bundler.settings');
     $form['active'] = [
       '#type' => 'checkbox',
@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('advagg_bundler.settings')
       ->set('active', $form_state->getValue('active'))
       ->set('css.max', $form_state->getValue('max_css'))
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


50) modules/contrib/advagg/advagg_bundler/src/EventSubscriber/MinificationSubscriber.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The minifier.
    *
-   * @var \Drupal\advagg\Asset\SingleAssetOptimizerBase
+   * @var SingleAssetOptimizerBase
    */
   protected $minifier;

@@ @@
   /**
    * Construct the optimizer instance.
    *
-   * @param \Drupal\advagg\Asset\SingleAssetOptimizerBase $minifier
+   * @param SingleAssetOptimizerBase $minifier
    *   The minifier.
    */
   public function __construct(SingleAssetOptimizerBase $minifier) {
@@ @@
   /**
    * Pass the minification over to the minification service.
    *
-   * @param \Drupal\advagg\Asset\AssetOptimizationEvent $asset
+   * @param AssetOptimizationEvent $asset
    *   The optimization event.
    */
   public function minify(AssetOptimizationEvent $asset) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


51) modules/contrib/advagg/advagg_bundler/src/Asset/AdvaggJsCollectionGrouper.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Construct the grouper instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


52) modules/contrib/advagg/advagg_bundler/src/Asset/AdvaggCssCollectionGrouper.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Construct the grouper instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


53) modules/contrib/advagg/advagg.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\Config;
 /**
  * @file
  * Handles Advanced Aggregation installation and upgrade tasks.
@@ @@
  * Update Configuration options for 8.x-3.x.
  */
 function advagg_update_8301() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::configFactory()->getEditable('advagg.settings');
   $config
     ->clear('serializer')
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


54) modules/contrib/advagg/advagg.drush.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\Config;
 /**
  * @file
  * Drush commands for Advanced CSS/JS Aggregation.
@@ @@
       return dt('Remove all generated files. Useful if you think some of the generated files got corrupted and thus need to be deleted.');

     case 'drush:advagg-force-new-aggregates':
-      /** @var \Drupal\Core\Config\Config $config */
+      /** @var Config $config */
       $config = \Drupal::service('config.factory')->get('advagg.settings');
       return dt('Force the creation of all new optimized files by incrementing a global counter. Current value of counter: %value. This is may be useful if a CDN has cached an something incorrectly as it will force new ones to be used even if nothing else has changed.', [
         '%value' => $config->get('global_counter'),
@@ @@
  * Callback function for drush advagg-disable.
  */
 function drush_advagg_disable() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::service('config.factory')->getEditable('advagg.settings');
   $config->set('enabled', 0)->save();
   \Drupal::logger(dt('All Advagg functionality is disabled.'), 'ok');
@@ @@
  * Callback function for drush advagg-enable.
  */
 function drush_advagg_enable() {
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::service('config.factory')->getEditable('advagg.settings');
   $config->set('enabled', 1)->save();
   \Drupal::logger(dt('All Advagg functionality is enabled.'), 'ok');
@@ @@
   drush_advagg_clear_all_files();

   // Increment counter.
-  /** @var \Drupal\Core\Config\Config $config */
+  /** @var Config $config */
   $config = \Drupal::service('config.factory')->getEditable('advagg.settings');
   $new_value = $config->get('global_counter') + 1;
   $config->set('global_counter', $new_value)->save();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 54 files have been changed by Rector                                      

