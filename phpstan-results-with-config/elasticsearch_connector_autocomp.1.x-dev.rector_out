modules/contrib/elasticsearch_connector_autocomp/elasticsearch_connector_autocomp.module
modules/contrib/elasticsearch_connector_autocomp/src/EventSubscriber/DefaultSubscriber.php
modules/contrib/elasticsearch_connector_autocomp/src/Plugin/search_api/data_type/TextNgramDataType.php
modules/contrib/elasticsearch_connector_autocomp/tests/src/Functional/LoadTest.php
modules/contrib/elasticsearch_connector_autocomp/tests/src/FunctionalJavascript/IndexFormTest.php

4 files with changes
====================

1) modules/contrib/elasticsearch_connector_autocomp/tests/src/FunctionalJavascript/IndexFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\elasticsearch_connector_autocomp\FunctionalJavascript;

+use Drupal\search_api\IndexInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;

 /**
@@ @@
    * Tests confirm form behaviour.
    */
   public function internalTestConfirmForm() {
-    /** @var \Drupal\search_api\IndexInterface $index */
+    /** @var IndexInterface $index */
     $indexStorage = $this->container->get('entity_type.manager')->getStorage('search_api_index');
     $index = $indexStorage->load('elasticsearch_index');

@@ @@
    * Tests showing fields for taxonomy based indices.
    */
   public function internalTestTaxonomyIndex() {
-    /** @var \Drupal\search_api\IndexInterface $index */
+    /** @var IndexInterface $index */
     $indexStorage = $this->container->get('entity_type.manager')->getStorage('search_api_index');

     // Test hook_form_search_api_index_fields_alter, see issue #3006322.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/elasticsearch_connector_autocomp/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\elasticsearch_connector_autocomp\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/elasticsearch_connector_autocomp/src/EventSubscriber/DefaultSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\elasticsearch_connector_autocomp\EventSubscriber;

+use Symfony\Contracts\EventDispatcher\Event;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\search_api\Entity\Index;
 use Drupal\Core\Database\Connection;
 use Drupal\elasticsearch_connector\ElasticSearch\Parameters\Factory\IndexFactory;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Class DefaultSubscriber.
@@ @@
   /**
    * Connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $connection;

@@ @@
   /**
    * Constructs a new DefaultSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The connection service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, Connection $connection) {
@@ @@
   /**
    * Called on elasticsearch_connector.prepare_index_mapping event.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The event.
    */
   public function elasticsearchConnectorPrepareIndexMapping(Event $event) {
@@ @@
   /**
    * Called on elasticsearch_connector.prepare_index event.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The event.
    */
   public function elasticsearchConnectorPrepareIndex(Event $event) {
@@ @@
    * @param string $index_name
    *   The long index name as a string.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The loaded index or NULL.
    */
   private function loadIndexFromIndexName($index_name) {
     $index_storage = $this->entityTypeManager->getStorage('search_api_index');
-    /** @var \Drupal\search_api\Entity\Index[] $search_api_indexes */
+    /** @var Index[] $search_api_indexes */
     $search_api_indexes = $index_storage->loadMultiple();

     foreach ($search_api_indexes as $search_api_index) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/elasticsearch_connector_autocomp/elasticsearch_connector_autocomp.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\search_api\Form\IndexForm;
+use Drupal\search_api\IndexInterface;
 /**
  * @file
  * Contains elasticsearch_connector_autocomp.module.
@@ @@
  *
  * @param array $form
  *   An associative array containing the structure of the form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  */
 function elasticsearch_connector_autocomp_form_search_api_index_form_submit(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\search_api\Form\IndexForm $formObject */
+  /** @var IndexForm $formObject */
   $formObject = $form_state->getFormObject();
-  /** @var \Drupal\search_api\IndexInterface $index */
+  /** @var IndexInterface $index */
   $index = $formObject->getEntity();
   $new_state = $index->getThirdPartySetting('elasticsearch_connector', 'ngram_filter_enabled', FALSE);
   $new_state_config = $index->getThirdPartySetting('elasticsearch_connector', 'ngram_config', FALSE);
@@ @@
  * Implements hook_form_FORM_ID_alter().
  */
 function elasticsearch_connector_autocomp_form_search_api_index_fields_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\search_api\IndexInterface $index_entity */
+  /** @var IndexInterface $index_entity */
   $index_entity = $form_state->getFormObject()->getEntity();
   $ngram_index_analyzer_enabled = $index_entity->getThirdPartySetting('elasticsearch_connector', 'ngram_filter_enabled', FALSE);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [WARNING] 2 nodes were removed                                                 

 [OK] 4 files have been changed by Rector                                       

