diff --git a/src/Service/TranslationFormFieldsPreviews.php b/src/Service/TranslationFormFieldsPreviews.php
index 894f9ff..3a9771e 100644
--- a/src/Service/TranslationFormFieldsPreviews.php
+++ b/src/Service/TranslationFormFieldsPreviews.php
@@ -42,69 +42,69 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Content entity to operate on.
    *
-   * @var \Drupal\Core\Entity\ContentEntityInterface|null
+   * @var ContentEntityInterface|null
    */
   protected $entity = NULL;
   /**
    * Language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
   /**
    * Renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
   /**
    * Theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
   /**
    * Current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The content translation manager.
    *
-   * @var \Drupal\content_translation\ContentTranslationManagerInterface
+   * @var ContentTranslationManagerInterface
    */
   protected $manager;
 
   /**
    * TranslationFormFieldsPreviews constructor.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   Language manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   Renderer service.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   Theme manager.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $match
+   * @param RouteMatchInterface $match
    *   Current route match.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\content_translation\ContentTranslationManagerInterface $manager
+   * @param ContentTranslationManagerInterface $manager
    *   The content translation manager service.
    */
   public function __construct(
@@ -143,7 +143,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Set content entity to operate on.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Content entity object.
    *
    * @return \Drupal\translation_form\Service\TranslationFormFieldsPreviews
@@ -157,7 +157,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Get languages for preview.
    *
-   * @return \Drupal\Core\Language\LanguageInterface[]
+   * @return LanguageInterface[]
    *   Language objects available for preview.
    */
   public function getPreviewLanguages() {
@@ -195,7 +195,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Get target language object.
    *
-   * @return \Drupal\Core\Language\LanguageInterface|mixed|null
+   * @return LanguageInterface|mixed|null
    *   Target language object.
    */
   protected function getTargetLanguage() {
@@ -208,7 +208,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Get source language object.
    *
-   * @return \Drupal\Core\Language\LanguageInterface|mixed|null
+   * @return LanguageInterface|mixed|null
    *   Source language object.
    */
   public function getSourceLanguage() {
@@ -240,7 +240,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
    * @param string $langcode
    *   Language ID.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    *   Translation object or NULL if translation doesn't exist.
    */
   public function getTranslation($langcode) {
@@ -252,7 +252,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Get field names of the field widgets we need to alter.
    *
-   * @param \Drupal\Core\Entity\Entity\EntityFormDisplay $display
+   * @param EntityFormDisplay $display
    *   Entity display.
    *
    * @return array
@@ -268,7 +268,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
    *
    * @param array $fields
    *   Array of field names.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $translation
+   * @param ContentEntityInterface $translation
    *   Translation version of the node.
    * @param bool $rendered
    *   Optional. Render fields or not. Defaults to TRUE.
@@ -445,8 +445,12 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
       ->setRouteParameter('language', $language->getId());
 
     // We have different urls for translations.
-    if ($this->routeMatch->getRouteName() == $entity->urlInfo('edit-form')->getRouteName()) {
-      $form_state->setRedirect($entity->urlInfo('edit-form')->getRouteName(), [
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Please confirm that `$entity` is an instance of `Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+    if ($this->routeMatch->getRouteName() == $entity->toUrl('edit-form')->getRouteName()) {
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Please confirm that `$entity` is an instance of `Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+      $form_state->setRedirect($entity->toUrl('edit-form')->getRouteName(), [
         $entity_type_id => $entity->id(),
         'language_source' => $source,
       ]);
@@ -476,11 +480,11 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
    *
    * @param string $entity_type
    *   The type of the entity.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity whose form is being built.
    * @param array $form
    *   Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   FormState.
    *
    * @see \Drupal\content_translation\ContentTranslationHandler::entityFormAlter()
@@ -497,7 +501,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Retrieves the source language for the translation being created.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return string
@@ -513,7 +517,7 @@ class TranslationFormFieldsPreviews implements ContainerInjectionInterface {
   /**
    * Returns the languages the data is translated to.
    *
-   * @return \Drupal\Core\Language\LanguageInterface[]
+   * @return LanguageInterface[]
    *   An associative array of language objects, keyed by language codes.
    */
   public function getTranslationLanguages() {
