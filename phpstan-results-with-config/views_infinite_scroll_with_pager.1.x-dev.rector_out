modules/contrib/views_infinite_scroll_with_pager/src/EventSubscriber/AjaxResponseSubscriber.php
modules/contrib/views_infinite_scroll_with_pager/src/Plugin/views/pager/InfiniteScrollWithPager.php
modules/contrib/views_infinite_scroll_with_pager/views_infinite_scroll_with_pager.module

2 files with changes
====================

1) modules/contrib/views_infinite_scroll_with_pager/views_infinite_scroll_with_pager.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Pager\PagerManagerInterface;
 /**
  * @file
  * Module file for views_infinite_scroll.
@@ @@
 function views_infinite_scroll_with_pager_preprocess_views_infinite_scroll_with_pager(&$vars) {
   // The important parts we needed lifted wholesale from
   // template_preprocess_views_mini_pager().
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');
   $element = $vars['element'];
   $pager = $pager_manager->getPager($element);
@@ @@
 }

 function views_infinite_scroll_with_pager_build_item_page(&$vars,$parameters,$element,$index) {
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');
   $options['query'] = $pager_manager->getUpdatedParameters($parameters, $element, $index);
   unset($options['query']['next']);
@@ @@
 }

 function views_infinite_scroll_with_pager_build_item(&$vars,$parameters,$element,$index,$name) {
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');
   $options['query'] = $pager_manager->getUpdatedParameters($parameters, $element, $index);
   unset($options['query']['next']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/views_infinite_scroll_with_pager/src/EventSubscriber/AjaxResponseSubscriber.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * Renders the ajax commands right before preparing the result.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The response event, which contains the possible AjaxResponse object.
    */
   public function onResponse(ResponseEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

