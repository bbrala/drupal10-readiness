modules/contrib/frontpage_disable/src/EventSubscriber/FrontpageDisableEventSubscriber.php
modules/contrib/frontpage_disable/src/Form/FrontpageDisableConfigForm.php
modules/contrib/frontpage_disable/tests/src/Kernel/FrontpageDisableComponentsTest.php
modules/contrib/frontpage_disable/tests/src/Kernel/FrontpageDisableConfigTest.php
modules/contrib/frontpage_disable/tests/src/Kernel/FrontpageDisableInstallationTest.php
modules/contrib/frontpage_disable/tests/src/Kernel/FrontpageDisableRedirectTest.php

4 files with changes
====================

1) modules/contrib/frontpage_disable/tests/src/Kernel/FrontpageDisableRedirectTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\frontpage_disable\Kernel;

+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\HttpKernel\HttpKernelInterface;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\Core\Routing\LocalRedirectResponse;
 use Drupal\Core\Routing\TrustedRedirectResponse;
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['frontpage_disable', 'user', 'system']);
   }
@@ @@
   /**
    * Perform HTTP request to the frontpage.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Response object.
    *
    * @throws \Exception
    */
   protected function requestToFrontpage() {
-    /** @var \Symfony\Component\HttpKernel\HttpKernelInterface $http_kernel */
+    /** @var HttpKernelInterface $http_kernel */
     $http_kernel = $this->container->get('http_kernel');
     $request = Request::create(Url::fromRoute('<front>')->toString());
     return $http_kernel->handle($request);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/frontpage_disable/tests/src/Kernel/FrontpageDisableConfigTest.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['frontpage_disable', 'user', 'system']);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/frontpage_disable/tests/src/Kernel/FrontpageDisableComponentsTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->installConfig(['frontpage_disable', 'user', 'system']);
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/frontpage_disable/src/EventSubscriber/FrontpageDisableEventSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\frontpage_disable\EventSubscriber;

+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Path\PathMatcherInterface;
@@ @@
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * Config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
   /**
    * Path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;

@@ @@
   /**
    * FrontpageDisableEventSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   Path matcher.
    */
   public function __construct(
@@ @@
   /**
    * Process disabling frontpage and redirecting to another page.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   GetResponseEvent object.
    */
-  public function processDisablingFrontpage(GetResponseEvent $event) {
+  public function processDisablingFrontpage(RequestEvent $event) {
     // Ensure current page is the frontpage and it is disabled.
     if ($this->pathMatcher->isFrontPage() && $this->isDisabled()) {
       // Build redirect object.
@@ @@
   /**
    * Build redirect response.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|null
+   * @return RedirectResponse|null
    *   Redirect response object.
    */
   protected function buildRedirect() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 4 files have been changed by Rector                                       

