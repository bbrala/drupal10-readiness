diff --git a/src/Controller/ImageHotspotsController.php b/src/Controller/ImageHotspotsController.php
index fae0895..f4d0a23 100644
--- a/src/Controller/ImageHotspotsController.php
+++ b/src/Controller/ImageHotspotsController.php
@@ -22,7 +22,7 @@ class ImageHotspotsController extends ControllerBase {
    * @param string $hid
    *   Hotspot id.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse
    */
   public function deleteAction($hid) {
@@ -32,7 +32,7 @@ class ImageHotspotsController extends ControllerBase {
     }
     else {
       try {
-        /** @var \Drupal\image_hotspots\Entity\ImageHotspot $hotspot */
+        /** @var ImageHotspot $hotspot */
         $hotspot = ImageHotspot::load($hid);
         $target = $hotspot->getTarget();
         $hotspot->delete();
@@ -52,10 +52,10 @@ class ImageHotspotsController extends ControllerBase {
   /**
    * Creates hotspot with values from request data.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request from user to change hotspot.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse
    */
   public function createAction(Request $request) {
@@ -91,10 +91,10 @@ class ImageHotspotsController extends ControllerBase {
    *
    * @param string $hid
    *   Hotspot id.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request from user to change hotspot.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse
    */
   public function updateAction($hid, Request $request) {
@@ -103,7 +103,7 @@ class ImageHotspotsController extends ControllerBase {
       $parameters['error'] = $this->t('You did a lot actions with hotspots and can not update this hotspot right now. Wait some seconds before you can do it again.');
     }
     else {
-      /** @var \Drupal\image_hotspots\Entity\ImageHotspot $hotspot */
+      /** @var ImageHotspot $hotspot */
       $hotspot = ImageHotspot::load($hid);
       if (is_null($hotspot)) {
         $code = 404;
@@ -149,9 +149,9 @@ class ImageHotspotsController extends ControllerBase {
    *   Hotspot id.
    * @param $langcode
    *   Language ID.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    */
   public function translateAction($hid, $langcode, Request $request) {
     if (!$this->accessCallback()) {
diff --git a/src/Plugin/Field/FieldFormatter/ImageHotspotsFormatter.php b/src/Plugin/Field/FieldFormatter/ImageHotspotsFormatter.php
index df7e731..536f1a8 100644
--- a/src/Plugin/Field/FieldFormatter/ImageHotspotsFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageHotspotsFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\image_hotspots\Plugin\Field\FieldFormatter;
 
+use Drupal\file\FileInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -29,7 +30,7 @@ class ImageHotspotsFormatter extends ImageFormatter implements ContainerFactoryP
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -40,7 +41,7 @@ class ImageHotspotsFormatter extends ImageFormatter implements ContainerFactoryP
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -50,11 +51,11 @@ class ImageHotspotsFormatter extends ImageFormatter implements ContainerFactoryP
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The image style storage.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, EntityStorageInterface $image_style_storage, LanguageManagerInterface $language_manager) {
@@ -124,7 +125,7 @@ class ImageHotspotsFormatter extends ImageFormatter implements ContainerFactoryP
 
     $default_lang = $this->languageManager->getDefaultLanguage()->getId();
 
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     foreach ($files as $delta => $file) {
       $info['fid'] = $file->id();
       $hotspots = ImageHotspot::loadByTarget($info);
@@ -154,7 +155,7 @@ class ImageHotspotsFormatter extends ImageFormatter implements ContainerFactoryP
       }
 
       // Attach hotspots data to js settings.
-      /** @var \Drupal\image_hotspots\Entity\ImageHotspot $hotspot */
+      /** @var ImageHotspot $hotspot */
       $hotspots_to_show = [];
       foreach ($hotspots as $hid => $hotspot) {
         $title = $hotspot->getTitle();
diff --git a/src/Plugin/QueueWorker/CronHotspotsWorker.php b/src/Plugin/QueueWorker/CronHotspotsWorker.php
index 54905be..97768a5 100644
--- a/src/Plugin/QueueWorker/CronHotspotsWorker.php
+++ b/src/Plugin/QueueWorker/CronHotspotsWorker.php
@@ -21,7 +21,7 @@ class CronHotspotsWorker extends QueueWorkerBase implements ContainerFactoryPlug
   /**
    * The image hotspots storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $hotspotsStorage;
 
