diff --git a/file_upload_options.module b/file_upload_options.module
index b73c1d0..b88aa4b 100644
--- a/file_upload_options.module
+++ b/file_upload_options.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\ImmutableConfig;
 /**
  * @file
  * Contains file_upload_options.module.
@@ -127,7 +128,7 @@ function file_upload_options_get_file_fields(array &$container) {
  *
  * @param array $element
  *   The FAPI element whose values are being saved.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The current state of the form.
  *
  * @return array|false
@@ -192,7 +193,7 @@ function file_upload_options_file_managed_file_save_upload(array $element, FormS
   if ($files_uploaded) {
     // Get replace option.
     $fileUploadService = \Drupal::service('file_upload_options.file_upload_service');
-    /** @var \Drupal\Core\Config\ImmutableConfig $config */
+    /** @var ImmutableConfig $config */
     $config = $fileUploadService->getConfig();
     $replaceOption = FileSystemInterface::EXISTS_RENAME;
     if ($isCustomField) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index a9464d8..2bd9425 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -19,35 +19,35 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Field definition.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * File upload service.
    *
-   * @var \Drupal\file_upload_options\Services\FileUploadService
+   * @var FileUploadService
    */
   protected $fileUploadServce;
 
@@ -61,15 +61,15 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
+   * @param EntityFieldManagerInterface $entityFieldManager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entityTypeBundleInfo
+   * @param EntityTypeBundleInfoInterface $entityTypeBundleInfo
    *   The entity type bundle info.
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The file system service.
-   * @param \Drupal\file_upload_options\Services\FileUploadService $fileUploadService
+   * @param FileUploadService $fileUploadService
    *   The file upload service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, EntityFieldManagerInterface $entityFieldManager, EntityTypeBundleInfoInterface $entityTypeBundleInfo, FileSystemInterface $fileSystem, FileUploadService $fileUploadService) {
diff --git a/src/Plugin/rest/resource/FileUploadOptionsResource.php b/src/Plugin/rest/resource/FileUploadOptionsResource.php
index 4d7d85c..1a27920 100644
--- a/src/Plugin/rest/resource/FileUploadOptionsResource.php
+++ b/src/Plugin/rest/resource/FileUploadOptionsResource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\file_upload_options\Plugin\rest\resource;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\File\Exception\FileException;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\file\Plugin\rest\resource\FileUploadResource;
@@ -18,7 +19,7 @@ class FileUploadOptionsResource extends FileUploadResource {
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $fileUploadOptionsConfig;
 
@@ -32,7 +33,7 @@ class FileUploadOptionsResource extends FileUploadResource {
   /**
    * Creates a file from an endpoint.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    * @param string $entity_type_id
    *   The entity type ID.
@@ -42,10 +43,10 @@ class FileUploadOptionsResource extends FileUploadResource {
    * @param string $field_name
    *   The field name.
    *
-   * @return \Drupal\rest\ModifiedResourceResponse
+   * @return ModifiedResourceResponse
    *   A 201 response, on success.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\HttpException
+   * @throws HttpException
    *   Thrown when temporary files cannot be written, a lock cannot be acquired,
    *   or when temporary files cannot be moved to their new location.
    */
diff --git a/src/Services/FileUploadService.php b/src/Services/FileUploadService.php
index 8dbad83..812b1a7 100644
--- a/src/Services/FileUploadService.php
+++ b/src/Services/FileUploadService.php
@@ -20,34 +20,34 @@ class FileUploadService {
   /**
    * Field definition.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
+   * @param EntityFieldManagerInterface $entityFieldManager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entityTypeBundleInfo
+   * @param EntityTypeBundleInfoInterface $entityTypeBundleInfo
    *   The entity type bundle info.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The configuration factory service.
    */
   public function __construct(
