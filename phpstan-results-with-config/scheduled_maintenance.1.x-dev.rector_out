modules/contrib/scheduled_maintenance/scheduled_maintenance.module
modules/contrib/scheduled_maintenance/src/EventSubscriber/ScheduledMaintenanceSubscriber.php
modules/contrib/scheduled_maintenance/src/ScheduledMaintenance.php
modules/contrib/scheduled_maintenance/tests/src/Functional/InstallTest.php
modules/contrib/scheduled_maintenance/tests/src/Functional/MaintenanceModeTest.php
modules/contrib/scheduled_maintenance/tests/src/Functional/SettingsFormTest.php

5 files with changes
====================

1) modules/contrib/scheduled_maintenance/tests/src/Functional/SettingsFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\scheduled_maintenance\Functional;

+use Drupal\User\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * The test admin user.
    *
-   * @var \Drupal\User\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Test the settings form and confirm fields.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testSettingsForm() {
     // Check and make sure settings page loads.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/scheduled_maintenance/tests/src/Functional/MaintenanceModeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\scheduled_maintenance\Functional;

+use Drupal\User\UserInterface;
+use Behat\Mink\Exception\ResponseTextException;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * The test admin user.
    *
-   * @var \Drupal\User\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Test scheduled maintenance mode.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ResponseTextException
+   * @throws ExpectationException
    */
   public function testMaintenanceMode() {
     $admin_message = 'Operating in maintenance mode. Go online.';
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/scheduled_maintenance/src/ScheduledMaintenance.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\scheduled_maintenance;

+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * The config factory object.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;

@@ @@
   /**
    * The current user service.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory object.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user object.
    */
   public function __construct(ConfigFactory $config_factory, AccountProxyInterface $current_user) {
@@ @@
   /**
    * Get configuration.
    *
-   * @return \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @return Config|ImmutableConfig
    *   Returns the config.
    */
   public function getConfig() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/scheduled_maintenance/src/EventSubscriber/ScheduledMaintenanceSubscriber.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The scheduled maintenance service.
    *
-   * @var \Drupal\scheduled_maintenance\ScheduledMaintenance
+   * @var ScheduledMaintenance
    */
   protected $scheduledMaintenance;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\scheduled_maintenance\ScheduledMaintenance $scheduled_maintenance
+   * @param ScheduledMaintenance $scheduled_maintenance
    *   The scheduled maintenance service.
    */
   public function __construct(
@@ @@
   /**
    * Checks if a scheduled maintenance should be started.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent|\Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent|RequestEvent $event
    *   The request event.
    */
   public function checkForScheduledMaintenance($event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/scheduled_maintenance/scheduled_maintenance.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\scheduled_maintenance\ScheduledMaintenance;
 /**
  * @file
  * Allow users to define a scheduled maintenance.
@@ @@
  * Implements hook_form_FORM_ID_alter().
  */
 function scheduled_maintenance_form_system_site_maintenance_mode_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\scheduled_maintenance\ScheduledMaintenance $service */
+  /** @var ScheduledMaintenance $service */
   $service = \Drupal::service('scheduled_maintenance');
   $config = $service->getConfig();

@@ @@
  *
  * @param array $form
  *   The form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function scheduled_maintenance_form_submit(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\scheduled_maintenance\ScheduledMaintenance $service */
+  /** @var ScheduledMaintenance $service */
   $service = \Drupal::service('scheduled_maintenance');
   $config = $service->getConfig();

   $time = '';
   if (!empty($form_state->getValue('time')) && $form_state->getValue('time') instanceof DrupalDateTime) {
-    /** @var \Drupal\Core\Datetime\DrupalDateTime $date_time */
+    /** @var DrupalDateTime $date_time */
     $date_time = $form_state->getValue('time');
     $time = $date_time->format($service->getDefaultDateFormat());
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

