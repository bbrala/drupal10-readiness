diff --git a/bootstrap_layout_builder.info.yml b/bootstrap_layout_builder.info.yml
index 0a06d0b..96810f6 100644
--- a/bootstrap_layout_builder.info.yml
+++ b/bootstrap_layout_builder.info.yml
@@ -1,8 +1,7 @@
 name: 'Bootstrap Layout Builder'
 description: 'Add Bootstrap Grid support to Layout Builder module.'
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: bootstrap_layout_builder.settings
 package: 'Layout Builder'
 dependencies:
diff --git a/bootstrap_layout_builder.install b/bootstrap_layout_builder.install
index df6871c..77621f6 100644
--- a/bootstrap_layout_builder.install
+++ b/bootstrap_layout_builder.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\StorageInterface;
 /**
  * @file
  * Installation and updating routines.
@@ -11,11 +12,11 @@ use Drupal\Core\Config\FileStorage;
  * Creates the new Bootstrap Layout Builder settings.
  */
 function bootstrap_layout_builder_update_8001() {
-  $path = drupal_get_path('module', 'bootstrap_layout_builder') . '/config/install';
+  $path = \Drupal::service('extension.list.module')->getPath('bootstrap_layout_builder') . '/config/install';
   $source = new FileStorage($path);
   $config_name = 'bootstrap_layout_builder.settings';
 
-  /** @var \Drupal\Core\Config\StorageInterface $active_storage */
+  /** @var StorageInterface $active_storage */
   $active_storage = \Drupal::service('config.storage');
   $active_storage->write($config_name, $source->read($config_name));
 }
diff --git a/composer.json b/composer.json
index 23ac211..12564b2 100644
--- a/composer.json
+++ b/composer.json
@@ -5,8 +5,8 @@
   "license": "GPL-2.0+",
   "description": "Add Bootstrap Grid support to Layout Builder module.",
   "require": {
-      "drupal/core": "^8.7.7 || ^9",
       "drupal/media_library_form_element": "^2.0",
-      "drupal/media_library_theme_reset": "^1.0"
+      "drupal/media_library_theme_reset": "^1.0",
+    "drupal/core": "^9.3 || ^10"
   }
 }
diff --git a/src/Form/BreakpointForm.php b/src/Form/BreakpointForm.php
index 7b009a7..05ba61b 100644
--- a/src/Form/BreakpointForm.php
+++ b/src/Form/BreakpointForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bootstrap_layout_builder\Form;
 
+use Drupal\bootstrap_layout_builder\BreakpointInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -16,14 +17,14 @@ class BreakpointForm extends EntityForm implements ContainerInjectionInterface {
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a BootstrapLayoutBuilderBreakpointsForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(MessengerInterface $messenger) {
@@ -45,7 +46,7 @@ class BreakpointForm extends EntityForm implements ContainerInjectionInterface {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\bootstrap_layout_builder\BreakpointInterface $breakpoint */
+    /** @var BreakpointInterface $breakpoint */
     $breakpoint = $this->entity;
 
     $form['label'] = [
diff --git a/src/Form/LayoutForm.php b/src/Form/LayoutForm.php
index 9bf2cda..265ab3b 100644
--- a/src/Form/LayoutForm.php
+++ b/src/Form/LayoutForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bootstrap_layout_builder\Form;
 
+use Drupal\bootstrap_layout_builder\LayoutInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -16,14 +17,14 @@ class LayoutForm extends EntityForm implements ContainerInjectionInterface {
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a BootstrapLayoutBuilderBreakpointsForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(MessengerInterface $messenger) {
@@ -45,7 +46,7 @@ class LayoutForm extends EntityForm implements ContainerInjectionInterface {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\bootstrap_layout_builder\LayoutInterface $layout */
+    /** @var LayoutInterface $layout */
     $layout = $this->entity;
 
     $form['label'] = [
diff --git a/src/Form/LayoutOptionForm.php b/src/Form/LayoutOptionForm.php
index 35651c7..9d12e05 100644
--- a/src/Form/LayoutOptionForm.php
+++ b/src/Form/LayoutOptionForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\bootstrap_layout_builder\Form;
 
+use Drupal\bootstrap_layout_builder\LayoutOptionInterface;
+use Drupal\bootstrap_layout_builder\LayoutInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityForm;
@@ -27,25 +29,25 @@ class LayoutOptionForm extends EntityForm implements ContainerInjectionInterface
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a BootstrapLayoutBuilderBreakpointsForm object.
    *
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $route_match
+   * @param CurrentRouteMatch $route_match
    *   The route match service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(CurrentRouteMatch $route_match, EntityTypeManagerInterface $entity_type_manager, MessengerInterface $messenger) {
@@ -68,7 +70,7 @@ class LayoutOptionForm extends EntityForm implements ContainerInjectionInterface
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\bootstrap_layout_builder\LayoutOptionInterface
+   * @var LayoutOptionInterface
    */
   protected $entity;
 
@@ -78,7 +80,7 @@ class LayoutOptionForm extends EntityForm implements ContainerInjectionInterface
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\bootstrap_layout_builder\LayoutInterface $layout */
+    /** @var LayoutInterface $layout */
     $option = $this->entity;
 
     $form['label'] = [
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 07cd437..890c926 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -18,23 +18,23 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * Constructs a SettingsForm object.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info) {
@@ -84,7 +84,7 @@ class SettingsForm extends ConfigFormBase {
     $form['hide_section_settings'] = [
       '#type' => 'checkbox',
       '#title' => $this->t('Hide "Advanced Settings"'),
-      '#description' => $this->t('<img src="/' . drupal_get_path('module', 'bootstrap_layout_builder') . '/images/drupal-ui/toggle-advanced-settings.png" alt="Toggle Advanced Settings Tab Visibility" title="Toggle Advanced Settings Tab Visibility">'),
+      '#description' => $this->t('<img src="/' . \Drupal::service('extension.list.module')->getPath('bootstrap_layout_builder') . '/images/drupal-ui/toggle-advanced-settings.png" alt="Toggle Advanced Settings Tab Visibility" title="Toggle Advanced Settings Tab Visibility">'),
       '#default_value' => $config->get('hide_section_settings'),
     ];
 
diff --git a/src/LayoutInterface.php b/src/LayoutInterface.php
index 0320b25..5355170 100644
--- a/src/LayoutInterface.php
+++ b/src/LayoutInterface.php
@@ -12,7 +12,7 @@ interface LayoutInterface extends ConfigEntityInterface {
   /**
    * Returns all the options from a layout options sorted correctly.
    *
-   * @return \Drupal\bootstrap_layout_builder\LayoutOptionInterface[]
+   * @return LayoutOptionInterface[]
    *   An array of layout options entities.
    */
   public function getLayoutOptions();
diff --git a/src/Plugin/Deriver/BootstrapLayoutDeriver.php b/src/Plugin/Deriver/BootstrapLayoutDeriver.php
index ea1444c..61b748a 100644
--- a/src/Plugin/Deriver/BootstrapLayoutDeriver.php
+++ b/src/Plugin/Deriver/BootstrapLayoutDeriver.php
@@ -20,14 +20,14 @@ class BootstrapLayoutDeriver extends DeriverBase implements ContainerDeriverInte
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new BootstrapLayoutDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/Layout/BootstrapLayout.php b/src/Plugin/Layout/BootstrapLayout.php
index 83c0d08..25aad47 100644
--- a/src/Plugin/Layout/BootstrapLayout.php
+++ b/src/Plugin/Layout/BootstrapLayout.php
@@ -24,14 +24,14 @@ class BootstrapLayout extends LayoutDefault implements ContainerFactoryPluginInt
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -44,9 +44,9 @@ class BootstrapLayout extends LayoutDefault implements ContainerFactoryPluginInt
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $configFactory, EntityTypeManagerInterface $entity_type_manager) {
@@ -324,7 +324,7 @@ class BootstrapLayout extends LayoutDefault implements ContainerFactoryPluginInt
           'title' => $tab['title'],
           'target' => $tab['machine_name'],
           'active' => isset($tab['active']) && $tab['active'] == TRUE ? 'active' : '',
-          'icon' => t('<img class="blb_icon" src="/' . drupal_get_path('module', 'bootstrap_layout_builder') . '/images/ui/' . ($tab['icon'] ? $tab['icon'] : 'default.svg') . '" />'),
+          'icon' => t('<img class="blb_icon" src="/' . \Drupal::service('extension.list.module')->getPath('bootstrap_layout_builder') . '/images/ui/' . ($tab['icon'] ? $tab['icon'] : 'default.svg') . '" />'),
         ],
       ];
 
