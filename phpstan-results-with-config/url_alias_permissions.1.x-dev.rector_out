modules/contrib/url_alias_permissions/src/UrlAliasPermPermissions.php
modules/contrib/url_alias_permissions/tests/fixtures/update/url-alias-permissions-update-8000.php
modules/contrib/url_alias_permissions/tests/modules/url_alias_permissions_test.module
modules/contrib/url_alias_permissions/tests/src/Functional/EntityWithoutBundleFormTest.php
modules/contrib/url_alias_permissions/tests/src/Functional/NodeFormTest.php
modules/contrib/url_alias_permissions/tests/src/Functional/TaxonomyTermFormTest.php
modules/contrib/url_alias_permissions/tests/src/Functional/Update/UrlAliasPermissionsUpdate8001.php
modules/contrib/url_alias_permissions/tests/src/Kernel/UrlAliasPermissionsTest.php
modules/contrib/url_alias_permissions/url_alias_permissions.install
modules/contrib/url_alias_permissions/url_alias_permissions.module

6 files with changes
====================

1) modules/contrib/url_alias_permissions/tests/src/Kernel/UrlAliasPermissionsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\url_alias_permissions\Kernel;

+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
 use Drupal\Tests\taxonomy\Traits\TaxonomyTestTrait;
@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * The node type storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeTypeStorage;

@@ @@
   /**
    * The url alias permissions callback.
    *
-   * @var \Drupal\url_alias_permissions\UrlAliasPermPermissions
+   * @var UrlAliasPermPermissions
    */
   protected $urlAliasPermPermissions;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/url_alias_permissions/tests/src/Functional/Update/UrlAliasPermissionsUpdate8001.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\url_alias_permissions\Functional\Update;

+use Drupal\user\RoleStorageInterface;
+use Drupal\user\Entity\Role;
 use Drupal\FunctionalTests\Update\UpdatePathTestBase;

 /**
@@ @@
   /**
    * The role storage.
    *
-   * @var \Drupal\user\RoleStorageInterface
+   * @var RoleStorageInterface
    */
   protected $roleStorage;

@@ @@
     // anonymous user because the administrator role is an admin role and
     // always return true when calling hasPermission. Even when the permission
     // no longer exists.
-    /** @var \Drupal\user\Entity\Role $authenticated */
+    /** @var Role $authenticated */
     $authenticated = $this->roleStorage->loadUnchanged('authenticated');
     $this->assertTrue($authenticated->hasPermission('edit article URL alias'));
     $this->assertFalse($authenticated->hasPermission('edit page URL alias'));

-    /** @var \Drupal\user\Entity\Role $anonymous */
+    /** @var Role $anonymous */
     $anonymous = $this->roleStorage->loadUnchanged('anonymous');
     $this->assertTrue($anonymous->hasPermission('edit article URL alias'));
     $this->assertTrue($anonymous->hasPermission('edit page URL alias'));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/url_alias_permissions/tests/src/Functional/TaxonomyTermFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\url_alias_permissions\Functional;

+use Drupal\taxonomy\VocabularyInterface;
+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\taxonomy\Traits\TaxonomyTestTrait;

@@ @@
   /**
    * A taxonomy vocabulary.
    *
-   * @var \Drupal\taxonomy\VocabularyInterface
+   * @var VocabularyInterface
    */
   protected $vocabulary;

@@ @@
   /**
    * A user with the permission to edit the URL alias.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userWithUrlAliasPermissions;

@@ @@
   /**
    * A user without the permission to edit the URL alias.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userWithoutUrlAliasPermissions;

@@ @@
   /**
    * The taxonomy term storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $taxonomyTermStorage;

@@ @@
    * @param bool $reset
    *   (optional) Whether to reset the entity cache.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|false
+   * @return EntityInterface|false
    *   The term entity when found, else NULL.
    */
   protected function getTermByName(string $name, string $vocabulary_id, bool $reset = FALSE) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/url_alias_permissions/tests/src/Functional/NodeFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\url_alias_permissions\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A user with the permission to edit the URL alias.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userWithUrlAliasPermissions;

@@ @@
   /**
    * A user without the permission to edit the URL alias.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userWithoutUrlAliasPermissions;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/url_alias_permissions/tests/src/Functional/EntityWithoutBundleFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\url_alias_permissions\Functional;

+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A user with the permission to edit the URL alias.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userWithUrlAliasPermissions;

@@ @@
   /**
    * A user without the permission to edit the URL alias.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userWithoutUrlAliasPermissions;

@@ @@
   /**
    * The entity test storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityTestStorage;

@@ @@
    * @param bool $reset
    *   (optional) Whether to reset the entity cache.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|false
+   * @return EntityInterface|false
    *   The entity_test when found, else FALSE.
    */
   protected function getEntityTestByName(string $name, bool $reset = FALSE) {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/url_alias_permissions/src/UrlAliasPermPermissions.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a UrlAliasPermPermissions instance.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

