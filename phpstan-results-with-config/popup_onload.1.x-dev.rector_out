modules/contrib/popup_onload/modules/popup_onload_statistics/popup_onload_statistics.admin.inc
modules/contrib/popup_onload/modules/popup_onload_statistics/popup_onload_statistics.install
modules/contrib/popup_onload/modules/popup_onload_statistics/popup_onload_statistics.module
modules/contrib/popup_onload/modules/popup_onload_statistics/popup_onload_statistics.theme.inc
modules/contrib/popup_onload/popup_onload.api.php
modules/contrib/popup_onload/popup_onload.install
modules/contrib/popup_onload/popup_onload.module
modules/contrib/popup_onload/popup_onload.page.inc
modules/contrib/popup_onload/src/Controller/PopupOnloadController.php
modules/contrib/popup_onload/src/Entity/PopupOnLoad.php
modules/contrib/popup_onload/src/Entity/PopupOnLoadInterface.php
modules/contrib/popup_onload/src/Form/PopupOnLoadForm.php
modules/contrib/popup_onload/src/Form/PopupOnLoadSettingsForm.php
modules/contrib/popup_onload/src/PopupOnLoadAccessControlHandler.php
modules/contrib/popup_onload/src/PopupOnLoadHtmlRouteProvider.php
modules/contrib/popup_onload/src/PopupOnLoadListBuilder.php
modules/contrib/popup_onload/tests/src/Functional/LoadTest.php

8 files with changes
====================

1) modules/contrib/popup_onload/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\popup_onload\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/popup_onload/src/PopupOnLoadHtmlRouteProvider.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/popup_onload/src/PopupOnLoadAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\popup_onload;

+use Drupal\popup_onload\Entity\PopupOnLoadInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\popup_onload\Entity\PopupOnLoadInterface $entity */
+    /** @var PopupOnLoadInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/popup_onload/src/Form/PopupOnLoadSettingsForm.php:50

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/popup_onload/src/Form/PopupOnLoadForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Drupal\Core\Messenger\MessengerInterface definition.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/popup_onload/src/Controller/PopupOnloadController.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Get popup.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Return response with popup settings.
    */
   public function getPopup() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/popup_onload/popup_onload.module:192

    ---------- begin diff ----------
@@ @@
   $expire_seconds = PopupOnLoadSettingsForm::popupOnLoadGetDefaults(POPUP_ONLOAD_VAR_COOKIE_LIFETIME, POPUP_ONLOAD_DEFAULT_COOKIE_LIFETIME);
   $cur_time = time();
   $response = new Response();
-  $cookie = new Cookie($cookie_name, $cur_time, $cur_time + $expire_seconds, '/');
+  $cookie = Cookie::create($cookie_name, $cur_time, $cur_time + $expire_seconds, '/');
   $response->headers->setCookie($cookie);
   $response->sendHeaders();
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * NewToStaticCallRector


8) modules/contrib/popup_onload/modules/popup_onload_statistics/popup_onload_statistics.module:45

    ---------- begin diff ----------
@@ @@
  * Add popup statistics JS to the page.
  */
 function popup_onload_statistics_add_js() {
-  drupal_add_js(drupal_get_path('module', 'popup_onload_statistics') . '/popup_onload_statistics.js');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('popup_onload_statistics') . '/popup_onload_statistics.js');
 }

 /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

