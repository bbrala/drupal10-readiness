modules/contrib/tenon_io/src/Controller/ReportController.php
modules/contrib/tenon_io/src/Form/AdminSettings.php
modules/contrib/tenon_io/src/Service/TenonIo.php
modules/contrib/tenon_io/src/Service/TenonIoInterface.php
modules/contrib/tenon_io/src/TenonIoResponseException.php
modules/contrib/tenon_io/tenon_io.install
modules/contrib/tenon_io/tenon_io.module

3 files with changes
====================

1) modules/contrib/tenon_io/tenon_io.module:116

    ---------- begin diff ----------
@@ @@
       'uaString'        => $config->get('browser.user_agent'),
       'viewPortHeight'  => $config->get('browser.height'),
       'viewPortWidth'   => $config->get('browser.width'),
-      'moduleBasePath'  => base_path() . drupal_get_path('module', 'tenon_io'),
+      'moduleBasePath'  => base_path() . \Drupal::service('extension.list.module')->getPath('tenon_io'),
       'issuesCount'     => $issues_count_cache,
     ];
     $attachments['#attached']['drupalSettings']['tenon_io'] = $settings;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


2) modules/contrib/tenon_io/src/Service/TenonIo.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tenon_io\Service;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigException;
@@ @@
   /**
    * Tenon.io config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * Guzzle HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * Default cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * TenonIo constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory to get the settings from.
-   * @param \GuzzleHttp\Client $client
+   * @param Client $client
    *   The Guzzle HTTP client to make requests to the API.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The default cache backend to store data.
    */
   public function __construct(ConfigFactoryInterface $configFactory, Client $client, CacheBackendInterface $cache) {
@@ @@
    * @param array $data
    *   The data to send to the API.
    *
-   * @return \Psr\Http\Message\ResponseInterface
+   * @return ResponseInterface
    *   The API response object.
    */
   protected function queryApi($endpoint, array $data) {
@@ @@
   /**
    * Handles a response to figure out if an error occured.
    *
-   * @param \Psr\Http\Message\ResponseInterface $response
+   * @param ResponseInterface $response
    *   The response.
    *
-   * @throws \Drupal\tenon_io\TenonIoResponseException
+   * @throws TenonIoResponseException
    *   An exception explaining what happened.
    */
   protected function handleResponse(ResponseInterface $response) {
@@ @@
    *   Array of data composed of:
    *   - Options to send to the request.
    *
-   * @throws \Drupal\Core\Config\ConfigException
+   * @throws ConfigException
    *   If the API key is not defined.
    */
   protected function getQueryData() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/tenon_io/src/Controller/ReportController.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The TenonIo service.
    *
-   * @var \Drupal\tenon_io\Service\TenonIoInterface
+   * @var TenonIoInterface
    */
   protected $tenonIo;

@@ @@
   /**
    * The TenonIo logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * TenonIo reports controller constructor.
    *
-   * @param \Drupal\tenon_io\Service\TenonIoInterface $tenonIo
+   * @param TenonIoInterface $tenonIo
    *   The TenonIo service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The TenonIo logger.
    */
   public function __construct(TenonIoInterface $tenonIo, LoggerInterface $logger) {
@@ @@
   /**
    * Tenon.io report page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The HTTP request.
    *
    * @return array
@@ @@
   /**
    * Tenon.io ajax report page.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The HTTP request.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The Ajax response object.
    */
   public function ajaxPage(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

