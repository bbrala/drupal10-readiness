diff --git a/Commands/bootstrap_storybook/SubThemeCommands.php b/Commands/bootstrap_storybook/SubThemeCommands.php
index 809f230..540fca8 100644
--- a/Commands/bootstrap_storybook/SubThemeCommands.php
+++ b/Commands/bootstrap_storybook/SubThemeCommands.php
@@ -4,6 +4,10 @@ declare(strict_types = 1);
 
 namespace Drush\Commands\bootstrap_storybook;
 
+use Drupal\Core\Extension\Extension;
+use Drupal\Core\Archiver\ArchiverManager;
+use Drupal\Core\Archiver\ArchiverInterface;
+use Symfony\Component\Finder\SplFileInfo;
 use Consolidation\AnnotatedCommand\CommandData;
 use Consolidation\AnnotatedCommand\CommandError;
 use Drupal\Component\Utility\UrlHelper;
@@ -30,12 +34,12 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
   use FilesystemTaskLoader;
 
   /**
-   * @var \Drupal\bootstrap_storybook\SubThemeGenerator
+   * @var SubThemeGenerator
    */
   protected $subThemeCreator;
 
   /**
-   * @var \Symfony\Component\Filesystem\Filesystem
+   * @var Filesystem
    */
   protected $fs;
 
@@ -87,11 +91,11 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
     $kit = $options['kit'];
 
     // @todo Use extension service.
-    $bootstrap_storybookDir = drupal_get_path('theme', 'bootstrap_storybook');
+    $bootstrap_storybookDir = \Drupal::service('extension.list.theme')->getPath('bootstrap_storybook');
     $srcDir = "$bootstrap_storybookDir/src/kits/{$kit}";
 
     // Find kit from other active themes.
-    /** @var \Drupal\Core\Extension\Extension[] $themes */
+    /** @var Extension[] $themes */
     foreach (\Drupal::service('theme_handler')->listInfo() as $theme) {
       $path = "{$theme->getPath()}/src/kits/{$kit}";
       if ($this->fs->exists($path)) {
@@ -146,11 +150,11 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
 
         $data['srcDir'] = "{$data['path']}/kit";
 
-        /** @var \Drupal\Core\Archiver\ArchiverManager $extractorManager */
+        /** @var ArchiverManager $extractorManager */
         $extractorManager = \Drupal::service('plugin.manager.archiver');
 
         try {
-          /** @var \Drupal\Core\Archiver\ArchiverInterface $extractorInstance */
+          /** @var ArchiverInterface $extractorInstance */
           $extractorInstance = $extractorManager->getInstance(['filepath' => $data['packPath']]);
           $extractorInstance->extract($data['srcDir']);
         }
@@ -251,7 +255,7 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
   /**
    * @hook validate @bootstrap_storybookArgLabel
    *
-   * @return null|\Consolidation\AnnotatedCommand\CommandError
+   * @return null|CommandError
    */
   public function onHookValidatebootstrap_storybookArgLabel(CommandData $commandData): ?CommandError {
     $annotationKey = 'bootstrap_storybookArgLabel';
@@ -345,12 +349,12 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
   }
 
   /**
-   * @param \Consolidation\AnnotatedCommand\CommandError[] $commandErrors
+   * @param CommandError[] $commandErrors
    */
   protected function aggregateCommandErrors(array $commandErrors): ?CommandError {
     $errorCode = 0;
     $messages = [];
-    /** @var \Consolidation\AnnotatedCommand\CommandError $commandError */
+    /** @var CommandError $commandError */
     foreach (array_filter($commandErrors) as $commandError) {
       $messages[] = $commandError->getOutputData();
       $errorCode = max($errorCode, $commandError->getExitCode());
@@ -418,7 +422,7 @@ class SubThemeCommands extends DrushCommands implements BuilderAwareInterface {
     $directDescendants = $this->getDirectDescendants($parentDir);
     $iterator = $directDescendants->getIterator();
     $iterator->rewind();
-    /** @var \Symfony\Component\Finder\SplFileInfo $firstFile */
+    /** @var SplFileInfo $firstFile */
     $firstFile = $iterator->current();
     if ($directDescendants->count() === 1 && $firstFile->isDir()) {
       return $firstFile->getPathname();
diff --git a/includes/comment.inc b/includes/comment.inc
index 770f4d3..95ed05f 100644
--- a/includes/comment.inc
+++ b/includes/comment.inc
@@ -1,15 +1,15 @@
 <?php
 
+use Drupal\comment\CommentInterface;
 /**
  * @file
  * Theme and preprocess functions for comments.
  */
-
 /**
  *
  */
 function bootstrap_storybook_theme_suggestions_comment_alter(array &$suggestions, array $variables) {
-  /** @var \Drupal\comment\CommentInterface $comment */
+  /** @var CommentInterface $comment */
   $comment = $variables['elements']['#comment'];
   $commented_entity = $comment
     ->getCommentedEntity();
diff --git a/includes/html.inc b/includes/html.inc
index 9c80490..51e1b54 100644
--- a/includes/html.inc
+++ b/includes/html.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\node\Entity\Node;
 /**
  * @file
  * Theme and preprocess functions for html wrapper.
@@ -40,10 +41,9 @@ function bootstrap_storybook_preprocess_html(&$variables) {
  * Add additional template suggestion based on node type.
  */
 function bootstrap_storybook_theme_suggestions_html_alter(array &$suggestions, array $variables) {
-  /** @var \Drupal\node\Entity\Node $node */
-  
+  /** @var Node $node */
   $node = \Drupal::routeMatch()->getParameter('node');
-  if ($node instanceof \Drupal\node\NodeInterface) {
+  if ($node instanceof NodeInterface) {
     $suggestions[] = 'html__node__' . $node->getType();
   }
 }
diff --git a/includes/menu.inc b/includes/menu.inc
index c6bc39c..ab0d0ef 100644
--- a/includes/menu.inc
+++ b/includes/menu.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Url;
 /**
  * @file
  * Theme and preprocess functions for menus.
@@ -57,7 +58,7 @@ function bootstrap_storybook_preprocess_links__dropbutton(&$variables) {
   // Get the first link and use it for the dropbutton.
   $link = reset($links);
 
-  /** @var \Drupal\Core\Url $url */
+  /** @var Url $url */
   $variables['split'] = FALSE;
   if (isset($link['link']) && ($url = $link['link']['#url'])) {
     $button = $link['link'];
diff --git a/includes/page.inc b/includes/page.inc
index 2610577..ec8752d 100644
--- a/includes/page.inc
+++ b/includes/page.inc
@@ -20,7 +20,7 @@ function bootstrap_storybook_preprocess_page(&$variables) {
  */
 function bootstrap_storybook_theme_suggestions_page_alter(array &$suggestions, array $variables) {
   // * Add a template suggestions for node type.
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   if ($node = \Drupal::routeMatch()->getParameter('node')) {
     if (is_numeric($node)) {
       $node = Node::load($node);
diff --git a/includes/taxonomy.inc b/includes/taxonomy.inc
index b194deb..1b7e43a 100644
--- a/includes/taxonomy.inc
+++ b/includes/taxonomy.inc
@@ -1,15 +1,15 @@
 <?php
 
+use Drupal\taxonomy\TermInterface;
 /**
  * @file
  * Theme and preprocess functions for taxonomy and vocabularies.
  */
-
 /**
  * Implements hook_theme_suggestions_taxonomy_term_alter().
  */
 function bootstrap_storybook_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
-  /** @var \Drupal\taxonomy\TermInterface $term */
+  /** @var TermInterface $term */
   $term = $variables['elements']['#taxonomy_term'];
   $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
   // Add view mode theme suggestions.
diff --git a/src/SubThemeGenerator.php b/src/SubThemeGenerator.php
index 51bdc32..a160f41 100644
--- a/src/SubThemeGenerator.php
+++ b/src/SubThemeGenerator.php
@@ -14,12 +14,12 @@ use Symfony\Component\Finder\Finder;
 class SubThemeGenerator {
 
   /**
-   * @var \Symfony\Component\Filesystem\Filesystem
+   * @var Filesystem
    */
   protected $fs;
 
   /**
-   * @var \Symfony\Component\Finder\Finder
+   * @var Finder
    */
   protected $finder;
 
