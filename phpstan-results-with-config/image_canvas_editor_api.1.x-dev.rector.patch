diff --git a/image_canvas_editor_api.info.yml b/image_canvas_editor_api.info.yml
index 86d306b..c76d95c 100644
--- a/image_canvas_editor_api.info.yml
+++ b/image_canvas_editor_api.info.yml
@@ -1,7 +1,6 @@
 name: Image canvas editor API
 description: Exposes an API for having canvas editors for images.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 type: module
 dependencies:
   - image
diff --git a/src/Controller/EditorController.php b/src/Controller/EditorController.php
index 0bfad95..0673ae5 100644
--- a/src/Controller/EditorController.php
+++ b/src/Controller/EditorController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\image_canvas_editor_api\Controller;
 
+use Drupal\image_canvas_editor_api\Plugin\EditorInterface;
+use Drupal\file\Entity\File;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -20,7 +22,7 @@ class EditorController extends ControllerBase {
   /**
    * Editor plugin manager service.
    *
-   * @var \Drupal\image_canvas_editor_api\Plugin\EditorPluginManager
+   * @var EditorPluginManager
    */
   protected $pluginManager;
 
@@ -64,13 +66,13 @@ class EditorController extends ControllerBase {
     if (!empty($widget['settings']['editor'])) {
       $editor_id = $widget['settings']['editor'];
     }
-    /** @var \Drupal\image_canvas_editor_api\Plugin\EditorInterface $instance */
+    /** @var EditorInterface $instance */
     $instance = $this->pluginManager->createInstance($editor_id);
     if (!$file = $this->entityTypeManager->getStorage('file')->load($fid)) {
       throw new NotFoundHttpException();
     }
-    /** @var \Drupal\file\Entity\File $file */
-    $image_url = file_create_url($file->getFileUri());
+    /** @var File $file */
+    $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
     // Append some cache bust parameter. Could be a user is editing files over
     // and over again.
     $image_url .= '?cache_buster=' . time();
@@ -136,7 +138,7 @@ class EditorController extends ControllerBase {
     image_path_flush($file->getFileUri());
     return new JsonResponse([
       'fid' => $fid,
-      'url' => file_create_url($file->getFileUri()),
+      'url' => \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()),
     ]);
   }
 
diff --git a/src/Plugin/Field/FieldWidget/ImageCanvasEditorWidget.php b/src/Plugin/Field/FieldWidget/ImageCanvasEditorWidget.php
index bac0a03..bde186d 100644
--- a/src/Plugin/Field/FieldWidget/ImageCanvasEditorWidget.php
+++ b/src/Plugin/Field/FieldWidget/ImageCanvasEditorWidget.php
@@ -27,7 +27,7 @@ class ImageCanvasEditorWidget extends ImageWidget {
   /**
    * Image editor plugin manager.
    *
-   * @var \Drupal\image_canvas_editor_api\Plugin\EditorPluginManager
+   * @var EditorPluginManager
    */
   protected $pluginManager;
 
diff --git a/tests/src/FunctionalJavascript/WidgetAdminTest.php b/tests/src/FunctionalJavascript/WidgetAdminTest.php
index ccfd59f..6f7096a 100644
--- a/tests/src/FunctionalJavascript/WidgetAdminTest.php
+++ b/tests/src/FunctionalJavascript/WidgetAdminTest.php
@@ -29,7 +29,7 @@ class WidgetAdminTest extends ImageFieldTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $web_user = $this->drupalCreateUser(['bypass node access',
@@ -43,6 +43,7 @@ class WidgetAdminTest extends ImageFieldTestBase {
 
   /**
    * Test the fact that we can select image canvas editor as widget.
+   * @doesNotPerformAssertions
    */
   public function testAdminWidget() {
     $field_name = strtolower($this->randomMachineName());
