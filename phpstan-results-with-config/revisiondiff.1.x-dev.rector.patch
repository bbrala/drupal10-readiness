diff --git a/revisiondiff.info.yml b/revisiondiff.info.yml
index e92fdb2..38bb3d4 100644
--- a/revisiondiff.info.yml
+++ b/revisiondiff.info.yml
@@ -1,6 +1,6 @@
 name: RevisionDiff
 description: Provides an EntityReferenceRevision field formatter that shows a diff against the previous revision the current user has access to.
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^8.7.7 || ^9 || ^10
 type: module
 php: 7.0
 dependencies:
diff --git a/src/Plugin/Field/FieldFormatter/RevisionDiffFieldFormatter.php b/src/Plugin/Field/FieldFormatter/RevisionDiffFieldFormatter.php
index f105d6a..332652d 100644
--- a/src/Plugin/Field/FieldFormatter/RevisionDiffFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/RevisionDiffFieldFormatter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\revisiondiff\Plugin\Field\FieldFormatter;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\ContentEntityTypeInterface;
@@ -54,19 +57,19 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The field diff layout plugin manager service.
    *
-   * @var \Drupal\diff\DiffLayoutManager
+   * @var DiffLayoutManager
    */
   protected $diffLayoutManager;
 
@@ -77,7 +80,7 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -89,9 +92,9 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
    *   Any third party settings settings.
    * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\diff\DiffLayoutManager $diffLayoutManager
+   * @param DiffLayoutManager $diffLayoutManager
    *   The diff layout manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, LoggerChannelFactoryInterface $loggerFactory, EntityTypeManagerInterface $entityTypeManager, DiffLayoutManager $diffLayoutManager) {
@@ -165,13 +168,13 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
    *
    * @return array
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function viewElements(FieldItemListInterface $items, $langcode) {
 
     try {
-      /** @var \Drupal\diff\DiffLayoutInterface $diffLayoutHandler */
+      /** @var DiffLayoutInterface $diffLayoutHandler */
       $diffLayoutHandler = $this->diffLayoutManager->createInstance($this->getSetting('diff_layout'));
     }
     catch (PluginException $e) {
@@ -181,7 +184,7 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
 
     // @see ::isApplicable
     /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
-    /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
+    /** @var EntityReferenceFieldItemListInterface $items */
     $elements = [];
     foreach ($this->getEntitiesToView($items, $langcode) as $delta => $entity) {
       if ($this->isRecursion($items, $entity)) {
@@ -202,9 +205,9 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * Check for recusrion.
    *
-   * @param \Drupal\Core\Field\FieldItemListInterface $items
+   * @param FieldItemListInterface $items
    *   The items.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
    *
    * @return bool
@@ -251,15 +254,15 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * Build a single diff.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $leftRevision
+   * @param ContentEntityInterface $leftRevision
    *   The left revision.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $rightRevision
+   * @param ContentEntityInterface $rightRevision
    *   The right revision.
-   * @param \Drupal\diff\DiffLayoutInterface $diffLayoutHandler
+   * @param DiffLayoutInterface $diffLayoutHandler
    *   The diff layout handler.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    *
    * @see \Drupal\diff\Controller\PluginRevisionController::compareEntityRevisions
    */
@@ -288,18 +291,18 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * Load default revision.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $leftRevision
+   * @param ContentEntityInterface $leftRevision
    *   Some entity revision.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadDefaultRevision(ContentEntityInterface $leftRevision) {
     $entityType = $leftRevision->getEntityType();
     $entityStorage = $this->entityTypeManager->getStorage($entityType->id());
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = $entityStorage->load($leftRevision->id());
     return $entity;
   }
@@ -307,14 +310,14 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * Load the previous revision of an entity revision.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The current entity revision.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface
+   * @return ContentEntityInterface
    *   The previous entity revision.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getPreviousRevision(ContentEntityInterface $entity) {
     $revisionKey = $entity->getEntityType()->getKey('revision');
@@ -339,13 +342,12 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * Load previous revision via filtered query.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadPreviousRevision(ContentEntityInterface $entity) {
     // We keep entity access check. Note that this can lead to diff depending
@@ -362,11 +364,11 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
       ->condition($entityType->getKey('revision'), $entity->getLoadedRevisionId(), '<')
       ->pager(1)
       ->sort($entityType->getKey('revision'), 'DESC');
-    /** @var \Drupal\Core\Entity\ContentEntityInterface[] $result */
+    /** @var ContentEntityInterface[] $result */
     $result = $query->execute();
     if ($result) {
       $revisionId = key($result);
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $previousRevision */
+      /** @var ContentEntityInterface $previousRevision */
       $previousRevision = $entityStorage->loadRevision($revisionId);
       $previousRevision = $previousRevision->getTranslation($entity->language()
         ->getId());
@@ -380,12 +382,12 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * Load previous revision via PHP-postfiltered query.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadPreviousRevisionLegacy(ContentEntityInterface $entity) {
     // We keep entity access check. Note that this can lead to diff depending
@@ -400,14 +402,14 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
       ->allRevisions()
       ->condition($entityType->getKey('id'), $entity->id())
       ->sort($entityType->getKey('revision'), 'DESC');
-    /** @var \Drupal\Core\Entity\ContentEntityInterface[] $result */
+    /** @var ContentEntityInterface[] $result */
     $result = $query->execute();
     if ($result) {
       $revisionIds = array_keys($result);
       $currentRevisionIdIndex = array_search($entity->getRevisionId(), $revisionIds);
       if ($currentRevisionIdIndex !== FALSE && isset($revisionIds[$currentRevisionIdIndex + 1])) {
         $revisionId = $revisionIds[$currentRevisionIdIndex + 1];
-        /** @var \Drupal\Core\Entity\ContentEntityInterface $previousRevision */
+        /** @var ContentEntityInterface $previousRevision */
         $previousRevision = $entityStorage->loadRevision($revisionId);
         $previousRevision = $previousRevision->getTranslation($entity->language()->getId());
       }
@@ -424,12 +426,11 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * Create an empty revision.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *
-   * @return \Drupal\Core\Entity\EntityInterface|\Drupal\Core\Entity\RevisionLogInterface
-
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return EntityInterface|RevisionLogInterface
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function createEmptyRevision(ContentEntityInterface $entity) {
     $entityType = $entity->getEntityType();
@@ -445,7 +446,7 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
       ]));
     $previousRevision = $entityStorage->create($values);
     if ($entity instanceof RevisionLogInterface) {
-      /** @var \Drupal\Core\Entity\RevisionLogInterface $previousRevision */
+      /** @var RevisionLogInterface $previousRevision */
       $previousRevision->setRevisionUser($entity->getRevisionUser());
     }
     return $previousRevision;
@@ -454,7 +455,7 @@ class RevisionDiffFieldFormatter extends EntityReferenceRevisionsFormatterBase i
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   public static function isApplicable(FieldDefinitionInterface $field_definition) {
     // This formatter is only available for content entity target types.
diff --git a/tests/src/Functional/AdminPageTest.php b/tests/src/Functional/AdminPageTest.php
index c905885..f8357aa 100644
--- a/tests/src/Functional/AdminPageTest.php
+++ b/tests/src/Functional/AdminPageTest.php
@@ -33,7 +33,7 @@ class AdminPageTest extends BrowserTestBase {
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
