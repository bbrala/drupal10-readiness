diff --git a/getjwtonlogin.info.yml b/getjwtonlogin.info.yml
index 7a6e497..ecf1e44 100644
--- a/getjwtonlogin.info.yml
+++ b/getjwtonlogin.info.yml
@@ -2,6 +2,6 @@ name: getjwtonlogin
 type: module
 description: 'A module to get JWT on login'
 package: Development
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 dependencies:
   - jwt
diff --git a/src/EventSubscriber/JwtLoginSubscriber.php b/src/EventSubscriber/JwtLoginSubscriber.php
index 97714f2..d4075bb 100644
--- a/src/EventSubscriber/JwtLoginSubscriber.php
+++ b/src/EventSubscriber/JwtLoginSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\getjwtonlogin\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\Component\Serialization\Json;
 
@@ -35,7 +35,7 @@ class JwtLoginSubscriber implements EventSubscriberInterface
   /**
    * Add JWT access token to user login API response
    */
-  public function onHttpLoginResponse(FilterResponseEvent $event): void {
+  public function onHttpLoginResponse(ResponseEvent $event): void {
     // Halt if not user login request
     if ($this->currentPath->getPath() !== '/user/login') {
       return;
diff --git a/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php b/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
index fc8aa85..cfb9bd5 100644
--- a/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
+++ b/tests/src/Unit/EventSubscriber/JwtLoginSubscriberTest.php
@@ -2,12 +2,13 @@
 
 namespace Drupal\Tests\getjwtonlogin\Unit\EventSubscriber;
 
+use Drupal\jwt\Authentication\Provider\JwtAuth;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Serialization\Json;
 use Drupal\getjwtonlogin\EventSubscriber\JwtLoginSubscriber;
 use Drupal\Tests\UnitTestCase;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\HttpKernelInterface;
 
 /**
@@ -22,26 +23,24 @@ class JwtLoginSubscriberTest extends UnitTestCase {
   /**
    * The JWT Auth Service.
    *
-   * @var \Drupal\jwt\Authentication\Provider\JwtAuth
+   * @var JwtAuth
    */
   protected $jwtAuth;
 
   /**
    * The HTTP kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
-    $this->jwtAuth = $this->getMockBuilder('\Drupal\jwt\Authentication\Provider\JwtAuth')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $this->jwtAuth = $this->createMock('\Drupal\jwt\Authentication\Provider\JwtAuth');
     $this->jwtAuth->expects($this->any())
       ->method('generateToken')
       ->willReturn($this->getRandomGenerator()->string());
@@ -60,7 +59,7 @@ class JwtLoginSubscriberTest extends UnitTestCase {
     $request = new Request();
     $request->attributes->set('_route', 'user.logout.http');
     $response = new Response('{}', 200);
-    $event = new FilterResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
+    $event = new ResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
 
     // Call the event handler.
     $subscriber->onHttpLoginResponse($event);
@@ -81,7 +80,7 @@ class JwtLoginSubscriberTest extends UnitTestCase {
     $request = new Request();
     $request->attributes->set('_route', 'user.login.http');
     $response = new Response('{}', 400);
-    $event = new FilterResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
+    $event = new ResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
 
     // Call the event handler.
     $subscriber->onHttpLoginResponse($event);
@@ -102,7 +101,7 @@ class JwtLoginSubscriberTest extends UnitTestCase {
     $request = new Request();
     $request->attributes->set('_route', 'user.login.http');
     $response = new Response(JSON::encode(['current_user' => ['uid' => '1']]), 200);
-    $event = new FilterResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
+    $event = new ResponseEvent($this->httpKernel, $request, HttpKernelInterface::MASTER_REQUEST, $response);
 
     // Call the event handler.
     $subscriber->onHttpLoginResponse($event);
