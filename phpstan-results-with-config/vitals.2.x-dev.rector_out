modules/contrib/vitals/src/Annotation/VitalsCheck.php
modules/contrib/vitals/src/Controller/VitalsController.php
modules/contrib/vitals/src/Form/VitalsAdminForm.php
modules/contrib/vitals/src/Plugin/VitalsCheck/CmsVersion.php
modules/contrib/vitals/src/Plugin/VitalsCheck/PhpVersion.php
modules/contrib/vitals/src/Plugin/VitalsCheck/Themes.php
modules/contrib/vitals/src/Plugin/VitalsCheck/Updates.php
modules/contrib/vitals/src/Vitals.php
modules/contrib/vitals/src/VitalsCheckInterface.php
modules/contrib/vitals/src/VitalsCheckPluginBase.php
modules/contrib/vitals/src/VitalsCheckPluginManager.php
modules/contrib/vitals/tests/src/Functional/VitalsTest.php
modules/contrib/vitals/vitals.install
modules/contrib/vitals/vitals.module

5 files with changes
====================

1) modules/contrib/vitals/src/VitalsCheckPluginManager.php:16

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/vitals/src/Vitals.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\vitals;

+use Drupal\Core\Config\Config;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;

@@ @@
   /**
    * The plugin manager for the vitals checks.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $plugin_manager;

@@ @@
   /**
    * The config factory object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Constructs a new Vitals object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $plugin_manager
+   * @param PluginManagerInterface $plugin_manager
    *   The plugin manager for the vitals checks.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/vitals/src/Form/VitalsAdminForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\vitals\Form;

+use Drupal\Core\Config\Config;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
@@ @@
   /**
    * The config factory object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The the state object.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * Include the messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The plugin manager for the vitals checks.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $plugin_manager;

@@ @@
   /**
    * Constructs a new VitalsAdminForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\vitals\Vitals $vitals
+   * @param Vitals $vitals
    *   The object that gets the data.
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $plugin_manager
+   * @param PluginManagerInterface $plugin_manager
    *   The plugin manager for the vitals checks.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/vitals/src/Controller/VitalsController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\vitals\Controller;

+use Drupal\Core\Config\ImmutableConfig;
+use Psr\Log\LoggerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The the state object.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The flood service.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;

@@ @@
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The object that gets the data.
    *
-   * @var \Drupal\vitals\Vitals
+   * @var Vitals
    */
   protected $vitals;

@@ @@
   /**
    * Constructs a new VitalsController object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Core\Flood\FloodInterface $flood
+   * @param FloodInterface $flood
    *   The flood service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\vitals\Vitals $vitals
+   * @param Vitals $vitals
    *   The object that gets the data.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/vitals/src/Annotation/VitalsCheck.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\vitals\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 5 files have been changed by Rector                                       

