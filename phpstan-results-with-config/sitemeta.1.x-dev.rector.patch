diff --git a/sitemeta.module b/sitemeta.module
index ae83632..492b29b 100644
--- a/sitemeta.module
+++ b/sitemeta.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * This is the Sitemeta module.
@@ -160,7 +161,7 @@ function sitemeta_form_node_form_alter(&$form, FormStateInterface $form_state) {
  *
  * @param array $form
  *   Form object.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Current form state.
  */
 function sitemeta_form_node_form_validate(array $form, FormStateInterface $form_state) {
@@ -176,7 +177,7 @@ function sitemeta_form_node_form_validate(array $form, FormStateInterface $form_
  *
  * @param array $form
  *   Form object.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Current form state.
  */
 function sitemeta_validate_path(array $form, FormStateInterface $form_state) {
@@ -197,10 +198,10 @@ function sitemeta_validate_path(array $form, FormStateInterface $form_state) {
  *
  * @param array $form
  *   Form object.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   Current form state.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function sitemeta_form_node_form_submit(array $form, FormStateInterface $form_state) {
   $node = $form_state->getFormObject()->getEntity();
diff --git a/src/Form/SiteMetaForm.php b/src/Form/SiteMetaForm.php
index 55bbec7..bfa05d8 100644
--- a/src/Form/SiteMetaForm.php
+++ b/src/Form/SiteMetaForm.php
@@ -24,56 +24,56 @@ class SiteMetaForm extends ContentEntityForm {
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * The path alias manager.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The sitemeta service.
    *
-   * @var \Drupal\sitemeta\SitemetaGenerator
+   * @var SitemetaGenerator
    */
   protected $sitemetaGenerator;
 
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Constructs a new SiteMetaForm.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   The path alias manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\sitemeta\SitemetaGenerator $sitemetaGenerator
+   * @param SitemetaGenerator $sitemetaGenerator
    *   The sitemeta service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL, PathValidatorInterface $path_validator, AliasManagerInterface $alias_manager, MessengerInterface $messenger, SitemetaGenerator $sitemetaGenerator, RequestStack $request_stack) {
diff --git a/src/SiteMetaListBuilder.php b/src/SiteMetaListBuilder.php
index b935e06..e0ce460 100644
--- a/src/SiteMetaListBuilder.php
+++ b/src/SiteMetaListBuilder.php
@@ -19,18 +19,18 @@ class SiteMetaListBuilder extends EntityListBuilder {
   /**
    * The path alias manager.
    *
-   * @var Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $aliasManager;
 
   /**
    * Constructs a new EntityListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\path_alias\AliasManagerInterface $alias_manager
+   * @param AliasManagerInterface $alias_manager
    *   The path alias manager.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, AliasManagerInterface $alias_manager) {
diff --git a/src/SitemetaGenerator.php b/src/SitemetaGenerator.php
index 5f2d79e..906715e 100644
--- a/src/SitemetaGenerator.php
+++ b/src/SitemetaGenerator.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\sitemeta;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\path_alias\AliasManagerInterface;
 
@@ -13,7 +15,7 @@ class SitemetaGenerator {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -27,7 +29,7 @@ class SitemetaGenerator {
   /**
    * Constructs a new SitemetaGenerator object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    * @param \Drupal\Core\Path\AliasManagerInterface $alias_manager
    *   The path alias manager.
@@ -48,8 +50,8 @@ class SitemetaGenerator {
    * @return object|false
    *   Returns Sitemeta entity if exists else false.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getSiteMeta($path, $langcode) {
     $sitemeta = $this->entityTypeManager->getStorage('sitemeta')->loadByProperties(['path' => $path, 'langcode' => $langcode]);
@@ -77,8 +79,8 @@ class SitemetaGenerator {
    * @return object|bool
    *   Returns sitemeta if match is found or FALSE.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function wildcardCheck($path, $langcode) {
     $wildcards = $this->getAllWildcards();
@@ -104,8 +106,8 @@ class SitemetaGenerator {
    * @return array
    *   Returns an array of sitemeta entities.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getAllWildcards() {
     $allSitemeta = $this->entityTypeManager->getStorage('sitemeta')->loadMultiple();
