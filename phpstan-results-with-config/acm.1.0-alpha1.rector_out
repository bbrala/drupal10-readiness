modules/contrib/acm-acm/acm.api.php
modules/contrib/acm-acm/src/AcmAbstractEntity.php
modules/contrib/acm-acm/src/AcmCredential.php
modules/contrib/acm-acm/src/AcmCredentialsManager.php
modules/contrib/acm-acm/src/AcmEndpoint.php
modules/contrib/acm-acm/src/AcmEnvironment.php
modules/contrib/acm-acm/src/AcmInfoManager.php
modules/contrib/acm-acm/src/AcmParameter.php
modules/contrib/acm-acm/src/Form/AcmConfigForm.php

4 files with changes
====================

1) modules/contrib/acm-acm/src/Form/AcmConfigForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The info manager.
    *
-   * @var \Drupal\acm\AcmInfoManager
+   * @var AcmInfoManager
    */
   protected $infoManager;

@@ @@
   /**
    * The credentials manager.
    *
-   * @var \Drupal\acm\AcmCredentialsManager
+   * @var AcmCredentialsManager
    */
   protected $credentialsManager;

@@ @@
   /**
    * AcmConfigForm constructor.
    *
-   * @param \Drupal\acm\AcmInfoManager $info_manager
+   * @param AcmInfoManager $info_manager
    *   The info manager.
-   * @param \Drupal\acm\AcmCredentialsManager $credentials_manager
+   * @param AcmCredentialsManager $credentials_manager
    *   The credentials manager.
    */
   public function __construct(AcmInfoManager $info_manager, AcmCredentialsManager $credentials_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/acm-acm/src/AcmInfoManager.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Array of environments.
    *
-   * @var \Drupal\acm\AcmEnvironment[]
+   * @var AcmEnvironment[]
    */
   protected $environments;

@@ @@
   /**
    * Array of endpoints.
    *
-   * @var \Drupal\acm\AcmEndpoint[]
+   * @var AcmEndpoint[]
    */
   protected $endpoints;

@@ @@
   /**
    * Array of credential definitions.
    *
-   * @var \Drupal\acm\AcmCredential[]
+   * @var AcmCredential[]
    */
   protected $credentials;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;

@@ @@
   /**
    * AcmInfoManager constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   The module handler. Used to invoke hooks.
    */
   public function __construct(ModuleHandler $module_handler) {
@@ @@
   /**
    * Get environments.
    *
-   * @return \Drupal\acm\AcmEnvironment[]
+   * @return AcmEnvironment[]
    *   Array of environment instances.
    */
   public function getEnvironments() {
@@ @@
   /**
    * Get endpoints.
    *
-   * @return \Drupal\acm\AcmEndpoint[]
+   * @return AcmEndpoint[]
    *   Array of endpint instances.
    */
   public function getEndpoints() {
@@ @@
   /**
    * Get credential definitions.
    *
-   * @return \Drupal\acm\AcmCredential[]
+   * @return AcmCredential[]
    *   Array of credential definition instances.
    */
   public function getCredentials() {
@@ @@
    * @param string $class
    *   The class name to instantiate an instance.
    *
-   * @return \Drupal\acm\AcmAbstractEntity[]
+   * @return AcmAbstractEntity[]
    *   Array of instances.
    */
   protected function createInstances($hook, $class) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/acm-acm/src/AcmCredentialsManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\acm;

+use Drupal\Core\Config\Config;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManager;
@@ @@
   /**
    * The configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The config factory used to load credentials per environment.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Config storage to cache credentials per environment.
    *
-   * @var \Drupal\Core\Config\Config[]
+   * @var Config[]
    */
   protected $storages;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;

@@ @@
    *
    * Used to collect data about credentials entities.
    *
-   * @var \Drupal\acm\AcmInfoManager
+   * @var AcmInfoManager
    */
   protected $infoManager;

@@ @@
   /**
    * AcmCredentialsManager constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    * @param \Drupal\encrypt\EncryptService $encrypt_service
    *   The encrypt service.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\acm\AcmInfoManager $info_manager
+   * @param AcmInfoManager $info_manager
    *   The info manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EncryptService $encrypt_service, EntityTypeManager $entity_type_manager, AcmInfoManager $info_manager) {
@@ @@
    * @param string $name
    *   Endpoint name.
    *
-   * @return \Drupal\acm\AcmEndpoint|null
+   * @return AcmEndpoint|null
    *   Endpoint instance or NULL if endpoint with this name does not exist.
    */
   protected function getEndpointByName($name) {
@@ @@
   /**
    * Get all environments.
    *
-   * @return \Drupal\acm\AcmEnvironment[]
+   * @return AcmEnvironment[]
    *   Array of environment instances.
    */
   public function getEnvironments() {
@@ @@
    * @param string $name
    *   Environment name.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   The config storage to store environment.
    */
   protected function getEnvironmentStorage($name) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/acm-acm/src/AcmCredential.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Array of parameters.
    *
-   * @var \Drupal\acm\AcmParameter[]
+   * @var AcmParameter[]
    */
   protected $parameters;

@@ @@
   /**
    * Get parameters.
    *
-   * @return \Drupal\acm\AcmParameter[]
+   * @return AcmParameter[]
    *   Array of parameters.
    */
   public function getParameters() {
@@ @@
    * @param array $infos
    *   Array of paramter infos.
    *
-   * @return \Drupal\acm\AcmParameter[]
+   * @return AcmParameter[]
    *   Array of parameter instances.
    */
   protected function createParameterInstances(array $infos) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

