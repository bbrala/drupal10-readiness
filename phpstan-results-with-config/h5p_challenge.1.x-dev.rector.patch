diff --git a/modules/h5p_challenge_rest/src/Plugin/rest/resource/All.php b/modules/h5p_challenge_rest/src/Plugin/rest/resource/All.php
index 954579c..7bfd37b 100644
--- a/modules/h5p_challenge_rest/src/Plugin/rest/resource/All.php
+++ b/modules/h5p_challenge_rest/src/Plugin/rest/resource/All.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\h5p_challenge_rest\Plugin\rest\resource;
 
+use Drupal\Core\Database\Connection;
 use Drupal\rest\ModifiedResourceResponse;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ -30,7 +31,7 @@ class All extends ResourceBase {
   /**
    * Database connection instance.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -47,11 +48,10 @@ class All extends ResourceBase {
   /**
    * Responds to GET requests.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *
-   * @return \Drupal\rest\ResourceResponse
+   * @return ResourceResponse
    *   The HTTP response object.
-   *
    */
   public function get(Request $request) {
     $this->request = $request;
diff --git a/modules/h5p_challenge_rest/src/Plugin/rest/resource/ChallengeResults.php b/modules/h5p_challenge_rest/src/Plugin/rest/resource/ChallengeResults.php
index 259eabd..3f11a92 100644
--- a/modules/h5p_challenge_rest/src/Plugin/rest/resource/ChallengeResults.php
+++ b/modules/h5p_challenge_rest/src/Plugin/rest/resource/ChallengeResults.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\h5p_challenge_rest\Plugin\rest\resource;
 
+use Drupal\Core\Database\Connection;
 use Drupal\rest\ModifiedResourceResponse;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ -29,7 +30,7 @@ class ChallengeResults extends ResourceBase {
   /**
    * Database connection instance.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -44,15 +45,14 @@ class ChallengeResults extends ResourceBase {
   }
 
   /**
-   * Responds to GET requests.
-   *
-   * @param string $uuid
-   * @param \Symfony\Component\HttpFoundation\Request $request
-   *
-   * @return \Drupal\rest\ResourceResponse
-   *   The HTTP response object.
-   *
-   */
+     * Responds to GET requests.
+     *
+     * @param string $uuid
+     * @param Request $request
+     *
+     * @return ResourceResponse
+     *   The HTTP response object.
+     */
     public function get(string $uuid, Request $request) {
       $this->request = $request;
 
diff --git a/modules/h5p_challenge_rest/src/Plugin/rest/resource/FromAndUntilRestResourceTrait.php b/modules/h5p_challenge_rest/src/Plugin/rest/resource/FromAndUntilRestResourceTrait.php
index 8e367d2..224ec4b 100644
--- a/modules/h5p_challenge_rest/src/Plugin/rest/resource/FromAndUntilRestResourceTrait.php
+++ b/modules/h5p_challenge_rest/src/Plugin/rest/resource/FromAndUntilRestResourceTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\h5p_challenge_rest\Plugin\rest\resource;
 
+use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;
 
 trait FromAndUntilRestResourceTrait {
@@ -9,7 +10,7 @@ trait FromAndUntilRestResourceTrait {
   /**
    * HTTP Request
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
@@ -84,7 +85,7 @@ trait FromAndUntilRestResourceTrait {
    * any is present but can not be converted to timestamp or from timestamp
    * value is less than until.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\BadRequestHttpException
+   * @throws BadRequestHttpException
    *   Throws exception expected.
    */
   private function validateFromAndUntil() : void {
diff --git a/modules/h5p_challenge_rest/src/Plugin/rest/resource/PaginationResourceTrait.php b/modules/h5p_challenge_rest/src/Plugin/rest/resource/PaginationResourceTrait.php
index ca59768..dd72736 100644
--- a/modules/h5p_challenge_rest/src/Plugin/rest/resource/PaginationResourceTrait.php
+++ b/modules/h5p_challenge_rest/src/Plugin/rest/resource/PaginationResourceTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\h5p_challenge_rest\Plugin\rest\resource;
 
+use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;
 use Drupal\Core\Url;
 
@@ -10,7 +11,7 @@ trait PaginationResourceTrait {
   /**
    * HTTP Request
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
diff --git a/modules/h5p_challenge_rest/src/Plugin/rest/resource/UserChallenges.php b/modules/h5p_challenge_rest/src/Plugin/rest/resource/UserChallenges.php
index a8249cf..717f435 100644
--- a/modules/h5p_challenge_rest/src/Plugin/rest/resource/UserChallenges.php
+++ b/modules/h5p_challenge_rest/src/Plugin/rest/resource/UserChallenges.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\h5p_challenge_rest\Plugin\rest\resource;
 
+use Drupal\Core\Database\Connection;
 use Drupal\rest\ModifiedResourceResponse;
 use Drupal\rest\Plugin\ResourceBase;
 use Drupal\rest\ResourceResponse;
@@ -29,7 +30,7 @@ class UserChallenges extends ResourceBase {
   /**
    * Database connection instance.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -44,15 +45,14 @@ class UserChallenges extends ResourceBase {
   }
 
   /**
-   * Responds to GET requests.
-   *
-   * @param int $id
-   * @param \Symfony\Component\HttpFoundation\Request $request
-   *
-   * @return \Drupal\rest\ResourceResponse
-   *   The HTTP response object.
-   *
-   */
+    * Responds to GET requests.
+    *
+    * @param int $id
+    * @param Request $request
+    *
+    * @return ResourceResponse
+    *   The HTTP response object.
+    */
    public function get(int $id, Request $request) {
      $this->request = $request;
 
diff --git a/src/Controller/H5PChallengeController.php b/src/Controller/H5PChallengeController.php
index d9701f2..9ffa1b8 100644
--- a/src/Controller/H5PChallengeController.php
+++ b/src/Controller/H5PChallengeController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\h5p_challenge\Controller;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Component\Utility\EmailValidatorInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ -34,7 +35,7 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -48,28 +49,28 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Date formatter
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Mail manager
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * Challenge service
    *
-   * @var \Drupal\h5p_challenge\H5PChallengeServiceInterface
+   * @var H5PChallengeServiceInterface
    */
   protected $challengeService;
 
   /**
    * Language manager
    *
-   * @var \Drupal\language\ConfigurableLanguageManagerInterface
+   * @var ConfigurableLanguageManagerInterface
    */
   protected $languageManager;
 
@@ -83,21 +84,21 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Email validator
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   protected $emailValidator;
 
   /**
    * HTTP Client
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
   /**
    * H5P Challenge logger
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
@@ -138,7 +139,7 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Start new challenge
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   JSON response with possible additional data or message
    */
   public function createNew(Request $request) {
@@ -282,7 +283,7 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Join existing challenge
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   JSON response with possible additional data or message
    */
   public function startPlaying() {
@@ -352,7 +353,7 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Store results for challenge participant
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   JSON response with possible additional data or message
    */
   public function setFinished() {
@@ -635,7 +636,7 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Serve challenge results to be downloaded as CSV
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Challenge results file
    */
   public function resultsCsv(Request $request) {
@@ -837,7 +838,7 @@ final class H5PChallengeController extends ControllerBase {
   /**
    * Responds with challenge JS settings
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   JSON response with challenge settings
    */
   public function settings() {
diff --git a/src/FetchClass/H5PChallenge.php b/src/FetchClass/H5PChallenge.php
index c59ab81..4c7b2c7 100644
--- a/src/FetchClass/H5PChallenge.php
+++ b/src/FetchClass/H5PChallenge.php
@@ -218,7 +218,7 @@ class H5PChallenge {
   /**
    * Loads H5PContent entity
    *
-   * @return \Drupal\h5p\Entity\H5PContent|null
+   * @return H5PContent|null
    *   H5PContent entity if present, otherwise NULL
    */
   public function getContentEntity() : ?H5PContent {
diff --git a/src/Form/H5PChallengeDeleteForm.php b/src/Form/H5PChallengeDeleteForm.php
index babee99..ae4d559 100644
--- a/src/Form/H5PChallengeDeleteForm.php
+++ b/src/Form/H5PChallengeDeleteForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\h5p_challenge\Form;
 
+use Drupal\h5p_challenge\H5PChallengeServiceInterface;
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -21,14 +23,14 @@ class H5PChallengeDeleteForm extends FormBase {
   /**
    * Drupal\h5p_challenge\H5PChallengeServiceInterface definition.
    *
-   * @var \Drupal\h5p_challenge\H5PChallengeServiceInterface
+   * @var H5PChallengeServiceInterface
    */
   protected $h5pChallengeService;
 
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -207,10 +209,10 @@ class H5PChallengeDeleteForm extends FormBase {
    *
    * @param array $form
    *   An array with renderable form structure
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   FormState object.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   AjaxResponse object with dialog close command.
    */
   public function ajaxCancel(array $form, FormStateInterface $form_state) {
diff --git a/src/H5PChallengeService.php b/src/H5PChallengeService.php
index 7f10425..6496ccc 100644
--- a/src/H5PChallengeService.php
+++ b/src/H5PChallengeService.php
@@ -19,42 +19,42 @@ class H5PChallengeService implements H5PChallengeServiceInterface {
   /**
    * Drupal\Core\Database\Connection definition.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Drupal\Core\Config\ConfigFactory definition.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Date formatter
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Mail manager
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * Current user
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Language manager
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
diff --git a/src/H5PChallengeServiceInterface.php b/src/H5PChallengeServiceInterface.php
index 018ab67..2be1bff 100644
--- a/src/H5PChallengeServiceInterface.php
+++ b/src/H5PChallengeServiceInterface.php
@@ -78,7 +78,7 @@ interface H5PChallengeServiceInterface {
    *   Content identifier the challenge is created for
    * @param  string $code
    *   Challenge code that is unique in context of certain content
-   * @return \Drupal\h5p_challenge\FetchClass\H5PChallenge
+   * @return H5PChallenge
    *   Challenge instance or empty result
    */
   public function getChallengeByContentIdAndCode(int $contentId, string $code);
@@ -98,7 +98,7 @@ interface H5PChallengeServiceInterface {
    *
    * @param  string $uuid
    *   Challenge unique identifier
-   * @return \Drupal\h5p_challenge\FetchClass\H5PChallenge
+   * @return H5PChallenge
    *   Challenge instance or empty result
    */
   public function getChallengeByUuid(string $uuid);
@@ -106,7 +106,7 @@ interface H5PChallengeServiceInterface {
   /**
    * Returns CSV results for a challenge
    *
-   * @param  \Drupal\h5p_challenge\FetchClass\H5PChallenge $challenge
+   * @param H5PChallenge $challenge
    *   Challenge instance
    * @return string
    *   Results CSV
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index d92a786..3162e13 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\h5p_challenge\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
