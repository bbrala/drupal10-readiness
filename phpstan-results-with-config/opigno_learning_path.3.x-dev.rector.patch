diff --git a/modules/opigno_alter_entity_autocomplete/src/Controller/EntityAutocompleteController.php b/modules/opigno_alter_entity_autocomplete/src/Controller/EntityAutocompleteController.php
index 654c7ad..6fa5e63 100644
--- a/modules/opigno_alter_entity_autocomplete/src/Controller/EntityAutocompleteController.php
+++ b/modules/opigno_alter_entity_autocomplete/src/Controller/EntityAutocompleteController.php
@@ -14,7 +14,7 @@ class EntityAutocompleteController extends \Drupal\system\Controller\EntityAutoc
   /**
    * The autocomplete matcher for entity references.
    *
-   * @var \Drupal\opigno_alter_entity_autocomplete\EntityAutocompleteMatcherOverride
+   * @var EntityAutocompleteMatcherOverride
    */
   protected $matcher;
 
diff --git a/modules/opigno_alter_entity_autocomplete/src/Routing/AutocompleteRouteSubscriber.php b/modules/opigno_alter_entity_autocomplete/src/Routing/AutocompleteRouteSubscriber.php
index 82f58ef..e29efd7 100644
--- a/modules/opigno_alter_entity_autocomplete/src/Routing/AutocompleteRouteSubscriber.php
+++ b/modules/opigno_alter_entity_autocomplete/src/Routing/AutocompleteRouteSubscriber.php
@@ -13,7 +13,7 @@ class AutocompleteRouteSubscriber extends RouteSubscriberBase {
   /**
    * Alters route.
    *
-   * @param \Symfony\Component\Routing\RouteCollection $collection
+   * @param RouteCollection $collection
    *   Routes.
    */
   public function alterRoutes(RouteCollection $collection) {
diff --git a/modules/opigno_user_selection/src/Controller/OpignoUserSelectionController.php b/modules/opigno_user_selection/src/Controller/OpignoUserSelectionController.php
index c739637..063ba19 100644
--- a/modules/opigno_user_selection/src/Controller/OpignoUserSelectionController.php
+++ b/modules/opigno_user_selection/src/Controller/OpignoUserSelectionController.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\opigno_user_selection\Controller;
 
+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Entity\FieldableEntityInterface;
+use Drupal\user\Entity\User;
+use Drupal\group\Entity\Group;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Cache\Cache;
@@ -26,14 +30,14 @@ class OpignoUserSelectionController extends ControllerBase {
   /**
    * Service "request_stack" definition.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $currentRequest;
 
   /**
    * Service "group.membership_loader" definition.
    *
-   * @var \Drupal\group\GroupMembershipLoaderInterface
+   * @var GroupMembershipLoaderInterface
    */
   protected $groupMembershipLoader;
 
@@ -62,7 +66,7 @@ class OpignoUserSelectionController extends ControllerBase {
    * @opigno_deprecated
    */
   protected function getEntityField(EntityInterface $entity, string $field_name) {
-    /** @var \Drupal\Core\Entity\FieldableEntityInterface $user */
+    /** @var FieldableEntityInterface $user */
     if (
       $entity->hasField($field_name) &&
       !($field = $entity->get($field_name))->isEmpty()
@@ -83,12 +87,12 @@ class OpignoUserSelectionController extends ControllerBase {
    * @opigno_deprecated
    */
   public function getUserAvatar($user) {
-    $default_image = file_create_url(drupal_get_path('module', 'opigno_user_selection') . '/assets/profile.svg');
+    $default_image = \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('opigno_user_selection') . '/assets/profile.svg');
     $image_style = ImageStyle::load('thumbnail');
     if (!($image_style instanceof ImageStyle)) {
       return $default_image;
     }
-    /** @var \Drupal\Core\Entity\FieldableEntityInterface $user */
+    /** @var FieldableEntityInterface $user */
     if (!($file = $this->getEntityField($user, 'user_picture'))) {
       return $default_image;
     }
@@ -101,7 +105,7 @@ class OpignoUserSelectionController extends ControllerBase {
    * @opigno_deprecated
    */
   public function getGroupImage($type, $group) {
-    $default_image = file_create_url(drupal_get_path('module', 'opigno_user_selection') . '/assets/' . $type . '.svg');
+    $default_image = \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::service('extension.list.module')->getPath('opigno_user_selection') . '/assets/' . $type . '.svg');
 
     $image_style = ImageStyle::load('thumbnail');
     if (!($image_style instanceof ImageStyle)) {
@@ -137,7 +141,7 @@ class OpignoUserSelectionController extends ControllerBase {
     $meta = new CacheableMetadata();
     $meta->setCacheMaxAge(Cache::PERMANENT);
 
-    /** @var \Drupal\user\Entity\User[] $users */
+    /** @var User[] $users */
     $users = $this->entityTypeManager()
       ->getStorage('user')
       ->loadMultiple($data ?: []);
@@ -154,7 +158,7 @@ class OpignoUserSelectionController extends ControllerBase {
       $meta->addCacheableDependency($user);
 
       $memberships = $this->groupMembershipLoader->loadByUser($user);
-      /** @var \Drupal\user\Entity\User $user */
+      /** @var User $user */
       return [
         'id' => $user->id(),
         'name' => $user->getDisplayName(),
@@ -175,7 +179,7 @@ class OpignoUserSelectionController extends ControllerBase {
       return in_array((int) $user['id'], $data);
     });
 
-    /** @var \Drupal\group\Entity\Group[] $groups */
+    /** @var Group[] $groups */
     $groups = $this->entityTypeManager()
       ->getStorage('group')
       ->loadMultiple($groups_id ?: []);
@@ -184,7 +188,7 @@ class OpignoUserSelectionController extends ControllerBase {
       $meta->addCacheableDependency($group);
 
       $memberships = $this->groupMembershipLoader->loadByGroup($group);
-      /** @var \Drupal\group\Entity\Group $group */
+      /** @var Group $group */
       return $group->access('take') ? [
         "id" => $group->id(),
         "type" => $map[$group->bundle()],
@@ -237,7 +241,7 @@ class OpignoUserSelectionController extends ControllerBase {
       'opigno_class' => 'class',
     ];
 
-    /** @var \Drupal\group\Entity\Group[] $groups */
+    /** @var Group[] $groups */
     $groups = $this->entityTypeManager()
       ->getStorage('group')
       ->loadMultiple($data ?: []);
@@ -247,7 +251,7 @@ class OpignoUserSelectionController extends ControllerBase {
 
       $meta->addCacheableDependency($group);
 
-      /** @var \Drupal\group\Entity\Group $group */
+      /** @var Group $group */
       return [
         'id' => $group->id(),
         'name' => $group->label(),
@@ -287,7 +291,7 @@ class OpignoUserSelectionController extends ControllerBase {
       'add any members to calendar event',
       'message anyone regardless of groups',
     ], 'OR')->isAllowed();
-    /** @var \Drupal\Core\Session\AccountInterface[] $allowed_recipients */
+    /** @var AccountInterface[] $allowed_recipients */
     $allowed_recipients = opigno_messaging_get_all_recipients($show_all);
     foreach ($allowed_recipients as $allowed_recipient) {
       $mapped_recipients[$allowed_recipient->id()] = $allowed_recipient;
diff --git a/modules/opigno_user_selection/src/Element/EntitySelector.php b/modules/opigno_user_selection/src/Element/EntitySelector.php
index 2a55cc3..f4f7ec3 100644
--- a/modules/opigno_user_selection/src/Element/EntitySelector.php
+++ b/modules/opigno_user_selection/src/Element/EntitySelector.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\opigno_user_selection\Element;
 
+use Drupal\Core\Controller\ControllerResolver;
+use Drupal\Core\Access\AccessManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\BubbleableMetadata;
 use Drupal\Core\Render\Element\Select;
@@ -53,7 +55,7 @@ class EntitySelector extends Select {
       ($group = $element['#entity_selector_parameters']['group']) instanceof Group
     ) {
       /** @var \Drupal\opigno_user_selection\UserSelectionHelper $controller */
-      /** @var \Drupal\Core\Controller\ControllerResolver $controller_resolver */
+      /** @var ControllerResolver $controller_resolver */
       $controller_resolver = \Drupal::service('controller_resolver');
       $callable = $controller_resolver->getControllerFromDefinition($element['#entity_selector_option']);
       list($options, $default) = call_user_func_array($callable, [$group]);
@@ -86,7 +88,7 @@ class EntitySelector extends Select {
     }
     $url = Url::fromRoute($element['#entity_selector_route_name'], [])
       ->toString(TRUE);
-    /** @var \Drupal\Core\Access\AccessManagerInterface $access_manager */
+    /** @var AccessManagerInterface $access_manager */
     $access_manager = \Drupal::service('access_manager');
     $access = $access_manager->checkNamedRoute($element['#entity_selector_route_name'], [], \Drupal::currentUser(), TRUE);
 
diff --git a/opigno_learning_path.install b/opigno_learning_path.install
index 01bb0b1..e674899 100644
--- a/opigno_learning_path.install
+++ b/opigno_learning_path.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Config\CachedStorage;
 /**
  * @file
  * Install, update and uninstall functions for the module.
@@ -344,7 +345,7 @@ function opigno_learning_path_update_9001() {
  * Create a step lp block for aristotle theme.
  */
 function opigno_learning_path_update_9002() {
-  $config_path = drupal_get_path('module', 'opigno_learning_path') . '/config/optional';
+  $config_path = \Drupal::service('extension.list.module')->getPath('opigno_learning_path') . '/config/optional';
   /* @var Drupal\Core\Config\CachedStorage $config_storage */
   $storage = new FileStorage($config_path);
   $config_storage = \Drupal::service('config.storage');
@@ -373,7 +374,7 @@ function opigno_learning_path_update_9003() {
   }
 
   // Add taxonomy duration field.
-  $config_path = drupal_get_path('module', 'opigno_learning_path') . '/config/optional';
+  $config_path = \Drupal::service('extension.list.module')->getPath('opigno_learning_path') . '/config/optional';
   $storage = new FileStorage($config_path);
 
   $data = $storage->read('field.storage.group.field_learning_path_duration');
@@ -395,7 +396,7 @@ function opigno_learning_path_update_9003() {
   foreach ($durations as $item) {
     $tid = $item['tid'];
 
-    /** @var \Drupal\group\Entity\GroupInterface $lp */
+    /** @var GroupInterface $lp */
     foreach ($item['lps'] as $lp) {
       if (!$lp->hasField('field_learning_path_duration')) {
         continue;
@@ -474,13 +475,13 @@ function _opigno_learning_path_duration_terms_create(): array {
  * Import optional configs.
  */
 function opigno_learning_path_update_9004() {
-  $config_path = drupal_get_path('module', 'opigno_learning_path') . '/config/optional';
+  $config_path = \Drupal::service('extension.list.module')->getPath('opigno_learning_path') . '/config/optional';
   $files = \Drupal::service('file_system')
     ->scanDirectory($config_path, '/\.yml$/');
 
   // Import arbitrary config from a variable.
   $source = new FileStorage($config_path);
-  /** @var \Drupal\Core\Config\CachedStorage $config_storage */
+  /** @var CachedStorage $config_storage */
   $config_storage = \Drupal::service('config.storage');
   foreach ($files as $config) {
     $config_storage->delete($config->name);
diff --git a/opigno_learning_path.module b/opigno_learning_path.module
index 9d94efe..244d38d 100644
--- a/opigno_learning_path.module
+++ b/opigno_learning_path.module
@@ -1,5 +1,13 @@
 <?php
 
+use Drupal\group\GroupMembership;
+use Drupal\group\GroupMembershipLoaderInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\opigno_group_manager\OpignoGroupContentTypesManager;
+use Drupal\opigno_group_manager\OpignoGroupContent;
+use Drupal\opigno_module\Entity\OpignoAnswer;
 /**
  * @file
  * Contains opigno_learning_path.module.
@@ -475,7 +483,7 @@ function opigno_learning_path_preprocess_region(&$variables) {
           ],
         ],
       ])->toRenderable();
-      $variables['add_member_link'] = render($link);
+      $variables['add_member_link'] = \Drupal::service('renderer')->render($link);
     }
     else {
       $variables['add_member_link'] = [
@@ -709,7 +717,7 @@ function opigno_learning_path_get_step_list_aside() {
   $route = \Drupal::routeMatch();
 
   if (($entity = $route->getParameter('group')) !== NULL) {
-    /** @var \Drupal\group\Entity\GroupInterface $entity */
+    /** @var GroupInterface $entity */
     $args = [
       'group' => $entity->id(),
     ];
@@ -765,7 +773,7 @@ function opigno_learning_path_get_step_list_aside() {
     )->toRenderable();
   }
   elseif (($entity = $route->getParameter('opigno_module')) !== NULL) {
-    /** @var \Drupal\opigno_module\Entity\OpignoModule $entity */
+    /** @var OpignoModule $entity */
     $args = [
       'opigno_module' => $entity->id(),
     ];
@@ -843,7 +851,7 @@ function opigno_learning_path_get_step_list_aside() {
     ];
 
     $user = \Drupal::currentUser();
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = $route->getParameter('group');
     if (isset($group) && !$group->access('update', $user)) {
       unset($steps[1]);
@@ -1493,7 +1501,7 @@ function opigno_learning_path_group_membership_add_form_submit(array $form, Form
   $need_clear_cache = count($classes) > 1;
 
   // Load the learning path group.
-  /** @var \Drupal\group\Entity\Group $group */
+  /** @var Group $group */
   $group = \Drupal::routeMatch()->getParameter('group');
   $is_class = $group->getGroupType()->id() == 'opigno_class';
 
@@ -1508,7 +1516,7 @@ function opigno_learning_path_group_membership_add_form_submit(array $form, Form
       ->execute()->fetchField();
 
     if (!$is_class_added) {
-      /** @var \Drupal\group\Entity\Group $class */
+      /** @var Group $class */
       $group->addContent($class, 'subgroup:opigno_class');
 
       // Rebuild module and theme data to escape cache warnings when add more
@@ -1534,7 +1542,7 @@ function opigno_learning_path_group_membership_add_form_submit(array $form, Form
       $members = $class->getMembers();
 
       foreach ($members as $member) {
-        /** @var \Drupal\group\GroupMembership $member */
+        /** @var GroupMembership $member */
         $user = $member->getUser();
         $users[$user->id()] = $user;
       }
@@ -1554,7 +1562,7 @@ function opigno_learning_path_group_membership_add_form_submit(array $form, Form
     }
 
     // Add user to the learning path.
-    /** @var \Drupal\user\Entity\User $user */
+    /** @var User $user */
     $group->addMember($user);
 
     if ($is_class) {
@@ -1909,7 +1917,7 @@ function opigno_learning_path_entity_update(EntityInterface $entity) {
   if ($entity->getEntityTypeId() === 'user_module_status') {
     // Try to get training id from path.
     $route = \Drupal::routeMatch();
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = $route->getParameter('group');
     if (!empty($group)
       && $group instanceof Group
@@ -1923,7 +1931,7 @@ function opigno_learning_path_entity_update(EntityInterface $entity) {
     }
     if ($group_id) {
       /** @var \Drupal\opigno_module\Entity\UserModuleStatus $entity */
-      /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+      /** @var OpignoModule $module */
       $module = $entity->getModule();
       $module_id = $module->id();
       $account = \Drupal::currentUser();
@@ -2068,7 +2076,7 @@ function opigno_learning_path_get_student_managers($group) {
  */
 function opigno_learning_path_entity_presave(EntityInterface $entity) {
   if ($entity->bundle() == 'learning_path-group_membership') {
-    /** @var \Drupal\group\Entity\GroupContentInterface $entity */
+    /** @var GroupContentInterface $entity */
     LearningPathAccess::membershipPreSave($entity);
     $uid = $entity->getEntity()->id();
     $group = $entity->getGroup();
@@ -2223,13 +2231,13 @@ function opigno_learning_path_views_query_alter(ViewExecutable $view, QueryPlugi
     if (!$user->hasPermission('manage group members in any group')) {
       // If current user is not an admin and not a global user manager.
       // Get trainings where the current user is a user manager.
-      /** @var \Drupal\group\GroupMembershipLoaderInterface $membership_service */
+      /** @var GroupMembershipLoaderInterface $membership_service */
       $membership_service = \Drupal::service('group.membership_loader');
       $memberships = $membership_service->loadByUser($user, [
         'learning_path-user_manager',
       ]);
       $groups_ids = array_map(function ($membership) {
-        /** @var \Drupal\group\GroupMembership $membership */
+        /** @var GroupMembership $membership */
         return $membership->getGroup()->id();
       }, $memberships);
 
@@ -2263,7 +2271,7 @@ function opigno_learning_path_views_query_alter(ViewExecutable $view, QueryPlugi
 
   if ($view->id() === 'opigno_group_members_table') {
     // Add filter for only members of a training.
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = \Drupal::routeMatch()->getParameter('group');
     if ($group) {
       $members = $view->storage->get('group_members');
@@ -2359,7 +2367,7 @@ function opigno_learning_path_user_module_status_presave(UserModuleStatus $attem
 /**
  * Calculates module attempt score.
  *
- * @param \Drupal\opigno_module\Entity\UserModuleStatus $attempt
+ * @param UserModuleStatus $attempt
  *   Attempt object.
  *
  * @return int
@@ -2407,7 +2415,7 @@ function opigno_learning_path_get_module_best_score($id, $uid) {
  *   Training group ID.
  * @param int $uid
  *   User ID.
- * @param \Drupal\opigno_module\Entity\OpignoModule $module
+ * @param OpignoModule $module
  *   Opigno Module entity.
  * @param int $latest_cert_date
  *   Latest certification date.
@@ -2415,8 +2423,8 @@ function opigno_learning_path_get_module_best_score($id, $uid) {
  * @return array
  *   Data array about step in a group for a user.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_module_step($group_id, $uid, OpignoModule $module, $latest_cert_date = NULL) {
   $opigno_lps = Drupal::service('opigno_lps');
@@ -2430,15 +2438,15 @@ function opigno_learning_path_get_module_step($group_id, $uid, OpignoModule $mod
  *   Training group ID.
  * @param int $uid
  *   User ID.
- * @param \Drupal\group\Entity\GroupInterface $course
+ * @param GroupInterface $course
  *   Group entity of the course.
  *
  * @return array
  *   Data array about step in a group for a user.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_course_step($group_id, $uid, GroupInterface $course, $latest_cert_date = NULL) {
   $opigno_lps = Drupal::service('opigno_lps');
@@ -2458,8 +2466,8 @@ function opigno_learning_path_get_course_step($group_id, $uid, GroupInterface $c
  * @return array
  *   Data array about step in a group for a user.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_meeting_step($group_id, $uid, MeetingInterface $meeting) {
   $opigno_lps = Drupal::service('opigno_lps');
@@ -2479,8 +2487,8 @@ function opigno_learning_path_get_meeting_step($group_id, $uid, MeetingInterface
  * @return array
  *   Data array about step in a group for a user.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_ilt_step($group_id, $uid, ILTInterface $ilt) {
   $opigno_lps = Drupal::service('opigno_lps');
@@ -2500,9 +2508,9 @@ function opigno_learning_path_get_ilt_step($group_id, $uid, ILTInterface $ilt) {
  * @return array
  *   Info about each step in a group for a user.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_steps($group_id, $uid, $only_modules_and_courses = NULL, $latest_cert_date = NULL) {
   $key = "${group_id}_${uid}_${only_modules_and_courses}_${latest_cert_date}";
@@ -2518,16 +2526,16 @@ function opigno_learning_path_get_steps($group_id, $uid, $only_modules_and_cours
     }
 
     $entity_type_manager = \Drupal::entityTypeManager();
-    /** @var \Drupal\opigno_group_manager\OpignoGroupContentTypesManager $content_type_manager */
+    /** @var OpignoGroupContentTypesManager $content_type_manager */
     $content_type_manager = \Drupal::service('opigno_group_manager.content_types.manager');
 
-    /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $first_content */
+    /** @var OpignoGroupManagedContent $first_content */
     $managed_content = OpignoGroupManagedContent::getFirstStep($group_id);
     while ($managed_content) {
       $id = $managed_content->getEntityId();
       $type_id = $managed_content->getGroupContentTypeId();
       $type = $content_type_manager->createInstance($type_id);
-      /** @var \Drupal\opigno_group_manager\OpignoGroupContent $content */
+      /** @var OpignoGroupContent $content */
       $content = $type->getContent($id);
       if ($content === FALSE) {
         // If can't load step content, skip it. Assume user has got 100% score.
@@ -2537,15 +2545,15 @@ function opigno_learning_path_get_steps($group_id, $uid, $only_modules_and_cours
 
       switch ($type_id) {
         case 'ContentTypeModule':
-          /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+          /** @var OpignoModule $module */
           $module = $entity_type_manager
             ->getStorage('opigno_module')
             ->load($id);
           $step_info = opigno_learning_path_get_module_step($group_id, $uid, $module, $latest_cert_date);
 
-          /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+          /** @var OpignoModule $module */
           if ($module = OpignoModule::load($id)) {
-            /** @var \Drupal\opigno_module\Entity\UserModuleStatus[] $attempts */
+            /** @var UserModuleStatus[] $attempts */
             $attempts = $module->getModuleAttempts($user, NULL, $latest_cert_date, FALSE, $group_id);
             if (!empty($attempts)) {
               $attempts_raw[$id] = $attempts;
@@ -2655,7 +2663,7 @@ function opigno_learning_path_get_steps($group_id, $uid, $only_modules_and_cours
 function opigno_learning_path_best_attempt(array $attempts) {
   usort($attempts, function ($a, $b) {
     /** @var \Drupal\opigno_module\Entity\UserModuleStatus $a */
-    /** @var \Drupal\opigno_module\Entity\UserModuleStatus $b */
+    /** @var UserModuleStatus $b */
     $b_score = $b->getAttemptScore();
     $a_score = $a->getAttemptScore();
     return $b_score - $a_score;
@@ -2699,9 +2707,9 @@ function opigno_learning_path_get_course_modules($course_id) {
  * @return array
  *   Info about each step in a group for a user.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_all_steps($group_id, $uid, $only_modules_and_courses = NULL, $latest_cert_date = NULL) {
   $key = "${group_id}_${uid}_${only_modules_and_courses}_${latest_cert_date}";
@@ -2712,14 +2720,14 @@ function opigno_learning_path_get_all_steps($group_id, $uid, $only_modules_and_c
     $contents = OpignoGroupManagedContent::loadByGroupId($group_id);
     usort($contents, function ($a, $b) {
       /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $a */
-      /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $b */
+      /** @var OpignoGroupManagedContent $b */
       $b_y = $b->getCoordinateY();
       $a_y = $a->getCoordinateY();
       return $a_y > $b_y;
     });
 
     $entity_type_manager = \Drupal::entityTypeManager();
-    /** @var \Drupal\opigno_group_manager\OpignoGroupContentTypesManager $content_type_manager */
+    /** @var OpignoGroupContentTypesManager $content_type_manager */
     $content_type_manager = \Drupal::service('opigno_group_manager.content_types.manager');
 
     $managed_content = reset($contents);
@@ -2727,7 +2735,7 @@ function opigno_learning_path_get_all_steps($group_id, $uid, $only_modules_and_c
       $id = $managed_content->getEntityId();
       $type_id = $managed_content->getGroupContentTypeId();
       $type = $content_type_manager->createInstance($type_id);
-      /** @var \Drupal\opigno_group_manager\OpignoGroupContent $content */
+      /** @var OpignoGroupContent $content */
       $content = $type->getContent($id);
       if ($content === FALSE) {
         // If can't load step content, skip it. Assume user has got 100% score.
@@ -2737,15 +2745,15 @@ function opigno_learning_path_get_all_steps($group_id, $uid, $only_modules_and_c
 
       switch ($type_id) {
         case 'ContentTypeModule':
-          /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+          /** @var OpignoModule $module */
           $module = $entity_type_manager
             ->getStorage('opigno_module')
             ->load($id);
           $step_info = opigno_learning_path_get_module_step($group_id, $uid, $module, $latest_cert_date);
 
-          /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+          /** @var OpignoModule $module */
           if ($module = OpignoModule::load($id)) {
-            /** @var \Drupal\opigno_module\Entity\UserModuleStatus[] $attempts */
+            /** @var UserModuleStatus[] $attempts */
             $user = \Drupal::currentUser();
             $attempts = $module->getModuleAttempts($user, NULL, $latest_cert_date);
             $best_attempt = NULL;
@@ -2820,10 +2828,10 @@ function opigno_learning_path_get_all_steps($group_id, $uid, $only_modules_and_c
 function opigno_learning_path_get_module_activities($module_id, $uid, $step_state_counting = FALSE, $latest_cert_date = NULL, $group_id = NULL) {
   $user = User::load($uid);
 
-  /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+  /** @var OpignoModule $module */
   $module = OpignoModule::load($module_id);
 
-  /** @var \Drupal\opigno_module\Entity\UserModuleStatus[] $attempts */
+  /** @var UserModuleStatus[] $attempts */
   $attempts = $module->getModuleAttempts($user, NULL, $latest_cert_date, FALSE, $group_id);
 
   // Load activities for a module.
@@ -2831,12 +2839,12 @@ function opigno_learning_path_get_module_activities($module_id, $uid, $step_stat
   $activities = array_map(function ($activity) use ($user, $module, $attempts, $step_state_counting) {
     // Value returned by the OpignoModule::getModuleActivities()
     // is not an OpignoActivity.
-    /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
+    /** @var OpignoActivity $activity */
     $activity = OpignoActivity::load($activity->id);
 
-    /** @var \Drupal\opigno_module\Entity\OpignoAnswer[] $answers */
+    /** @var OpignoAnswer[] $answers */
     $answers = array_map(function ($attempt) use ($user, $module, $activity, $step_state_counting) {
-      /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
+      /** @var OpignoActivity $activity */
       $answer = $activity->getUserAnswer($module, $attempt, $user);
       if ($answer && $step_state_counting && $activity->hasField('opigno_evaluation_method') && $activity->get('opigno_evaluation_method')->value && !$answer->isEvaluated()) {
         $answer = NULL;
@@ -2872,9 +2880,9 @@ function opigno_learning_path_get_module_activities($module_id, $uid, $step_stat
  * @return array
  *   Info about each activity status for a user.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_activities($group_id, $uid, $latest_cert_date = NULL) {
   $activities = [];
@@ -3022,9 +3030,9 @@ function opigno_learning_path_get_step_status($step, $uid, $step_state_counting
  * @return int
  *   Completion time.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_completed_on($group_id, $uid, $only_mandatory = FALSE) {
   // Get all mandatory steps.
@@ -3063,7 +3071,7 @@ function opigno_learning_path_completed_on($group_id, $uid, $only_mandatory = FA
 /**
  * Returns attempted flag.
  *
- * @param array|\Drupal\group\Entity\GroupInterface $step
+ * @param array|GroupInterface $step
  *   Learning Path or Course Group entity,
  *   or step array, returned by opigno_learning_path_get_steps()
  * @param int $uid
@@ -3072,9 +3080,9 @@ function opigno_learning_path_completed_on($group_id, $uid, $only_mandatory = FA
  * @return bool
  *   Attempted flag.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_is_attempted($step, $uid) {
   if (is_array($step)) {
@@ -3098,7 +3106,7 @@ function opigno_learning_path_is_attempted($step, $uid) {
 /**
  * Returns LP passed flag.
  *
- * @param array|\Drupal\group\Entity\GroupInterface $step
+ * @param array|GroupInterface $step
  *   Learning Path or Course Group entity,
  *   or step array, returned by opigno_learning_path_get_steps()
  * @param int $uid
@@ -3109,9 +3117,9 @@ function opigno_learning_path_is_attempted($step, $uid) {
  * @return bool
  *   LP passed flag.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_is_passed($step, $uid, $current_attempt = FALSE) {
   if (is_array($step)) {
@@ -3160,16 +3168,16 @@ function opigno_learning_path_get_steps_current_attempt($group_id, $uid) {
     $module = [];
 
     $entity_type_manager = \Drupal::entityTypeManager();
-    /** @var \Drupal\opigno_group_manager\OpignoGroupContentTypesManager $content_type_manager */
+    /** @var OpignoGroupContentTypesManager $content_type_manager */
     $content_type_manager = \Drupal::service('opigno_group_manager.content_types.manager');
 
-    /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $first_content */
+    /** @var OpignoGroupManagedContent $first_content */
     $managed_content = OpignoGroupManagedContent::getFirstStep($group_id);
     while ($managed_content) {
       $id = $managed_content->getEntityId();
       $type_id = $managed_content->getGroupContentTypeId();
       $type = $content_type_manager->createInstance($type_id);
-      /** @var \Drupal\opigno_group_manager\OpignoGroupContent $content */
+      /** @var OpignoGroupContent $content */
       $content = $type->getContent($id);
       if ($content === FALSE) {
         // If can't load step content, skip it. Assume user has got 100% score.
@@ -3179,7 +3187,7 @@ function opigno_learning_path_get_steps_current_attempt($group_id, $uid) {
 
       switch ($type_id) {
         case 'ContentTypeModule':
-          /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+          /** @var OpignoModule $module */
           $module = $entity_type_manager
             ->getStorage('opigno_module')
             ->load($id);
@@ -3187,9 +3195,9 @@ function opigno_learning_path_get_steps_current_attempt($group_id, $uid) {
 
           $step_info["best score"] = $step_info["current attempt score"];
 
-          /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+          /** @var OpignoModule $module */
           if ($module = OpignoModule::load($id)) {
-            /** @var \Drupal\opigno_module\Entity\UserModuleStatus[] $attempts */
+            /** @var UserModuleStatus[] $attempts */
             $user = \Drupal::currentUser();
             $attempts = $module->getModuleAttempts($user, 'last');
             $attempts_raw[$id] = $attempts;
@@ -3266,9 +3274,9 @@ function opigno_learning_path_get_steps_current_attempt($group_id, $uid) {
  * @return int
  *   Score.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_score($gid, $uid, $current_attempt = FALSE, $latest_cert_date = NULL) {
   $steps = !$current_attempt ? opigno_learning_path_get_steps($gid, $uid, NULL, $latest_cert_date) :
@@ -3299,9 +3307,9 @@ function opigno_learning_path_get_score($gid, $uid, $current_attempt = FALSE, $l
  * @return int
  *   Time spent in seconds.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_get_time_spent($gid, $uid) {
   $steps = opigno_learning_path_get_steps($gid, $uid);
@@ -3325,8 +3333,8 @@ function opigno_learning_path_get_time_spent($gid, $uid) {
  * @return int
  *   Row ID.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_save_step_achievements(
   $gid,
@@ -3475,9 +3483,9 @@ function opigno_learning_path_save_step_achievements(
  * @param bool $with_meeting
  *   If training contains ILT or Live Meeting.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginException
+ * @throws PluginNotFoundException
  */
 function opigno_learning_path_save_achievements($gid, $uid, $with_meeting = FALSE) {
   if (empty($gid)) {
@@ -3488,7 +3496,7 @@ function opigno_learning_path_save_achievements($gid, $uid, $with_meeting = FALS
 
   $user = User::load($uid);
   $group = Group::load($gid);
-  /** @var \Drupal\group\GroupMembership $group_membership */
+  /** @var GroupMembership $group_membership */
   $group_membership = $group->getMember($user);
 
   // Format timestamps to the storage format.
@@ -3538,9 +3546,9 @@ function opigno_learning_path_save_achievements($gid, $uid, $with_meeting = FALS
 /**
  * Function to detect if user already started Learning path.
  *
- * @param \Drupal\group\Entity\Group $group
+ * @param Group $group
  *   Group.
- * @param \Drupal\Core\Session\AccountProxyInterface $user
+ * @param AccountProxyInterface $user
  *   User.
  *
  * @return mixed|bool
@@ -3739,11 +3747,11 @@ function opigno_learning_path_get_modules_ids_by_group(Group $group) {
   $group_content = $group->getContent('subgroup:opigno_course');
   foreach ($group_content as $content) {
     /** @var \Drupal\group\Entity\GroupContent $content */
-    /** @var \Drupal\group\Entity\Group $content_entity */
+    /** @var Group $content_entity */
     $course = $content->getEntity();
     $course_contents = $course->getContent('opigno_module_group');
     foreach ($course_contents as $course_content) {
-      /** @var \Drupal\opigno_module\Entity\OpignoModule $module_entity */
+      /** @var OpignoModule $module_entity */
       $module_entity = $course_content->getEntity();
       $modules[] = $module_entity->id();
     }
@@ -3752,7 +3760,7 @@ function opigno_learning_path_get_modules_ids_by_group(Group $group) {
   $group_content = $group->getContent('opigno_module_group');
   foreach ($group_content as $content) {
     /** @var \Drupal\group\Entity\GroupContent $content */
-    /** @var \Drupal\opigno_module\Entity\OpignoModule $content_entity */
+    /** @var OpignoModule $content_entity */
     $content_entity = $content->getEntity();
     $modules[] = $content_entity->id();
   }
@@ -3799,7 +3807,7 @@ function opigno_learning_path_system_breadcrumb_alter(Breadcrumb &$breadcrumb, R
   }
   if ($route_match->getRouteName() == 'forum.page') {
     $term = $route_match->getParameter('taxonomy_term');
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = LearningPathController::loadGroupByForum($term);
     if ($group) {
       $breadcrumb->addLink($group->toLink());
diff --git a/src/Controller/LearningPathAchievementController.php b/src/Controller/LearningPathAchievementController.php
index 766cfe3..4d4713c 100644
--- a/src/Controller/LearningPathAchievementController.php
+++ b/src/Controller/LearningPathAchievementController.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\opigno_learning_path\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\opigno_module\Entity\UserModuleStatus;
+use Drupal\opigno_module\Entity\OpignoAnswer;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\AppendCommand;
@@ -35,21 +40,21 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * Progress bar service.
    *
-   * @var \Drupal\opigno_learning_path\Progress
+   * @var Progress
    */
   protected $progress;
 
   /**
    * Formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -76,9 +81,9 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns max score that user can have in this module & activity.
    *
-   * @param \Drupal\opigno_module\Entity\OpignoModule $module
+   * @param OpignoModule $module
    *   Module object.
-   * @param \Drupal\opigno_module\Entity\OpignoActivity $activity
+   * @param OpignoActivity $activity
    *   Activity object.
    *
    * @return int
@@ -218,21 +223,21 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns module panel renderable array.
    *
-   * @param \Drupal\group\Entity\GroupInterface $training
+   * @param GroupInterface $training
    *   Group.
-   * @param null|\Drupal\group\Entity\GroupInterface $course
+   * @param null|GroupInterface $course
    *   Group.
-   * @param \Drupal\opigno_module\Entity\OpignoModule $module
+   * @param OpignoModule $module
    *   Module.
    *
    * @return array
    *   Module panel renderable array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function build_module_panel(GroupInterface $training, GroupInterface $course = NULL, OpignoModule $module, AccountInterface $account = NULL) {
-    /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
+    /** @var DateFormatterInterface $date_formatter */
     $date_formatter = \Drupal::service('date.formatter');
     $user = $this->currentUser($account);
     $moduleHandler = \Drupal::service('module_handler');
@@ -247,9 +252,9 @@ class LearningPathAchievementController extends ControllerBase {
       ? $date_formatter->format($completed_on, 'custom', 'F d, Y')
       : '';
 
-    /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+    /** @var OpignoModule $module */
     $module = OpignoModule::load($step['id']);
-    /** @var \Drupal\opigno_module\Entity\UserModuleStatus[] $attempts */
+    /** @var UserModuleStatus[] $attempts */
     $attempts = $module->getModuleAttempts($user, NULL, $latest_cert_date);
 
     if ($moduleHandler->moduleExists('opigno_skills_system') && $module->getSkillsActive() && $module->getModuleSkillsGlobal() && !empty($attempts)) {
@@ -276,9 +281,9 @@ class LearningPathAchievementController extends ControllerBase {
     else {
       $activities = $module->getModuleActivities();
     }
-    /** @var \Drupal\opigno_module\Entity\OpignoActivity[] $activities */
+    /** @var OpignoActivity[] $activities */
     $activities = array_map(function ($activity) {
-      /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
+      /** @var OpignoActivity $activity */
       return OpignoActivity::load($activity->id);
     }, $activities);
 
@@ -303,7 +308,7 @@ class LearningPathAchievementController extends ControllerBase {
     $activities_done = 0;
     $activities = array_map(function ($activity) use ($user, $module, $attempt, &$activities_done) {
       /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
-      /** @var \Drupal\opigno_module\Entity\OpignoAnswer $answer */
+      /** @var OpignoAnswer $answer */
       $answer = isset($attempt)
         ? $activity->getUserAnswer($module, $attempt, $user)
         : NULL;
@@ -435,9 +440,9 @@ class LearningPathAchievementController extends ControllerBase {
 
     $step = opigno_learning_path_get_module_step($parent->id(), $user->id(), $module, $latest_cert_date);
 
-    /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+    /** @var OpignoModule $module */
     $module = OpignoModule::load($step['id']);
-    /** @var \Drupal\opigno_module\Entity\UserModuleStatus[] $attempts */
+    /** @var UserModuleStatus[] $attempts */
     $attempts = $module->getModuleAttempts($user, NULL, $latest_cert_date);
 
     if ($moduleHandler->moduleExists('opigno_skills_system') && $module->getSkillsActive() && $module->getModuleSkillsGlobal() && !empty($attempts)) {
@@ -465,9 +470,9 @@ class LearningPathAchievementController extends ControllerBase {
     else {
       $activities = $module->getModuleActivities();
     }
-    /** @var \Drupal\opigno_module\Entity\OpignoActivity[] $activities */
+    /** @var OpignoActivity[] $activities */
     $activities = array_map(function ($activity) {
-      /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
+      /** @var OpignoActivity $activity */
       return OpignoActivity::load($activity->id);
     }, $activities);
 
@@ -492,7 +497,7 @@ class LearningPathAchievementController extends ControllerBase {
 
     $activities = array_map(function ($activity) use ($user, $module, $attempt) {
       /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
-      /** @var \Drupal\opigno_module\Entity\OpignoAnswer $answer */
+      /** @var OpignoAnswer $answer */
       $answer = isset($attempt)
         ? $activity->getUserAnswer($module, $attempt, $user)
         : NULL;
@@ -517,11 +522,11 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns course steps renderable array.
    *
-   * @param \Drupal\group\Entity\GroupInterface $training
+   * @param GroupInterface $training
    *   Parent training group entity.
-   * @param \Drupal\group\Entity\GroupInterface $course
+   * @param GroupInterface $course
    *   Course group entity.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   User account entity.
    *
    * @return array
@@ -549,7 +554,7 @@ class LearningPathAchievementController extends ControllerBase {
       list($approved, $approved_percent) = $this->getApprovedModuleByStep($step, $user, $latest_cert_date, $training);
       $badges = $this->getModulesStatusBadges($step, $training, $user->id());
 
-      /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+      /** @var OpignoModule $module */
       $module = OpignoModule::load($step['id']);
       return [
         '#theme' => 'opigno_learning_path_training_module',
@@ -577,9 +582,9 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns course passed steps.
    *
-   * @param \Drupal\group\Entity\GroupInterface $training
+   * @param GroupInterface $training
    *   Parent training group entity.
-   * @param \Drupal\group\Entity\GroupInterface $course
+   * @param GroupInterface $course
    *   Course group entity.
    *
    * @return array
@@ -697,7 +702,7 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns LP steps.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
    *
    * @return array
@@ -787,18 +792,18 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns training timeline.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
    *
    * @return array
    *   Training timeline.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
    */
   protected function build_training_timeline(GroupInterface $group) {
-    /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
+    /** @var DateFormatterInterface $date_formatter */
     $date_formatter = \Drupal::service('date.formatter');
     $user = $this->currentUser();
 
@@ -908,15 +913,15 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns training summary.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
    *
    * @return array
    *   Training summary.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
    */
   protected function build_training_summary(GroupInterface $group, AccountInterface $account = NULL) {
     $gid = $group->id();
@@ -927,15 +932,15 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Returns training array.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
    *
    * @return array
    *   Training array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
    */
   protected function build_training(GroupInterface $group = NULL, AccountInterface $account = NULL) {
     return [
@@ -956,14 +961,14 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Loads module panel with a AJAX.
    *
-   * @param \Drupal\group\Entity\GroupInterface $training
+   * @param GroupInterface $training
    *   Training group.
-   * @param null|\Drupal\group\Entity\GroupInterface $course
+   * @param null|GroupInterface $course
    *   Course group.
-   * @param \Drupal\opigno_module\Entity\OpignoModule $opigno_module
+   * @param OpignoModule $opigno_module
    *   Opigno module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response.
    */
   public function course_module_panel_ajax(GroupInterface $training, GroupInterface $course, OpignoModule $opigno_module) {
@@ -981,12 +986,12 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Loads module panel with a AJAX.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
-   * @param \Drupal\opigno_module\Entity\OpignoModule $opigno_module
+   * @param OpignoModule $opigno_module
    *   Opigno module.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response.
    */
   public function training_module_panel_ajax(GroupInterface $group, OpignoModule $opigno_module) {
@@ -1003,10 +1008,10 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Loads steps for a training with a AJAX.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response.
    */
   public function training_steps_ajax(Group $group) {
@@ -1030,12 +1035,12 @@ class LearningPathAchievementController extends ControllerBase {
   /**
    * Get the training progress page title.
    *
-   * @param \Drupal\group\Entity\GroupInterface|null $group
+   * @param GroupInterface|null $group
    *   The group entity to get statistics for.
-   * @param \Drupal\user\UserInterface|null $account
+   * @param UserInterface|null $account
    *   The user account to get statistics for.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The training progress page title.
    */
   public function buildTrainingProgressTitle(?GroupInterface $group = NULL, ?UserInterface $account = NULL): TranslatableMarkup {
@@ -1114,10 +1119,10 @@ class LearningPathAchievementController extends ControllerBase {
    *
    * @param array $attempts
    *   User module attempts.
-   * @param \Drupal\opigno_module\Entity\OpignoModule $module
+   * @param OpignoModule $module
    *   Module.
    *
-   * @return \Drupal\opigno_module\Entity\UserModuleStatus
+   * @return UserModuleStatus
    *   $attempt
    */
   protected function getTargetAttempt(array $attempts, OpignoModule $module) {
@@ -1137,7 +1142,7 @@ class LearningPathAchievementController extends ControllerBase {
    * @param int $page
    *   Page id.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Response.
    */
   public function page_ajax($page = 0) {
@@ -1219,7 +1224,7 @@ class LearningPathAchievementController extends ControllerBase {
       ) = $this->getApprovedModuleByStep($step, $user, $latest_cert_date, $group);
     $badges = $this->getModulesStatusBadges($step, $group, $user->id());
 
-    /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+    /** @var OpignoModule $module */
     $module = OpignoModule::load($step['id']);
     return [
       '#theme' => 'opigno_learning_path_training_module',
diff --git a/src/Controller/LearningPathContentController.php b/src/Controller/LearningPathContentController.php
index 2696694..70ec037 100644
--- a/src/Controller/LearningPathContentController.php
+++ b/src/Controller/LearningPathContentController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Controller;
 
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityInterface;
@@ -80,7 +81,7 @@ class LearningPathContentController extends ControllerBase {
       '#learning_path_id' => $gid,
       '#group_type' => $group_type,
       '#view_type' => $view_type,
-      '#next_link' => isset($next_link) ? render($next_link) : NULL,
+      '#next_link' => isset($next_link) ? \Drupal::service('renderer')->render($next_link) : NULL,
       '#user_has_info_card' => $tempstore->get('hide_info_card') ? FALSE : TRUE,
       '#parent_learning_path' => $group_type == 'learning_path' ? '?learning_path=' . $gid : '',
     ];
@@ -106,7 +107,7 @@ class LearningPathContentController extends ControllerBase {
       '#base_href' => $request->getPathInfo(),
       '#learning_path_id' => $group->id(),
       '#module_context' => 'false',
-      '#next_link' => isset($next_link) ? render($next_link) : NULL,
+      '#next_link' => isset($next_link) ? \Drupal::service('renderer')->render($next_link) : NULL,
       '#user_has_info_card' => $tempstore->get('hide_info_card') ? FALSE : TRUE,
     ];
   }
@@ -114,7 +115,7 @@ class LearningPathContentController extends ControllerBase {
   /**
    * Returns next link.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group.
    *
    * @return array|mixed[]|null
@@ -165,10 +166,10 @@ class LearningPathContentController extends ControllerBase {
    *
    * It returns all the LP courses in JSON format.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Response.
    */
   public function getCourses(Group $group) {
@@ -243,14 +244,14 @@ class LearningPathContentController extends ControllerBase {
    *
    * @param array $modules
    *   Initial modules array.
-   * @param \Drupal\Core\Entity\EntityInterface $group
+   * @param EntityInterface $group
    *   Training group.
    *
    * @return array
    *   Sorted modules array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function sortModulesArray(array $modules, EntityInterface $group): array {
     try {
@@ -384,7 +385,7 @@ class LearningPathContentController extends ControllerBase {
   /**
    * Returns conditional activities with the module.
    *
-   * @param \Drupal\opigno_module\Entity\OpignoModule $opigno_module
+   * @param OpignoModule $opigno_module
    *   Entity OpignoModule".
    * @param array $results
    *   Results.
@@ -473,7 +474,7 @@ class LearningPathContentController extends ControllerBase {
    * @param string $opigno_entity_id
    *   Entity ID.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Json response.
    */
   public function getModuleRequiredActivities($opigno_entity_type, $opigno_entity_id) {
diff --git a/src/Controller/LearningPathController.php b/src/Controller/LearningPathController.php
index f0fbd52..0964c1e 100644
--- a/src/Controller/LearningPathController.php
+++ b/src/Controller/LearningPathController.php
@@ -148,7 +148,7 @@ class LearningPathController extends ControllerBase {
       ],
       '#theme' => 'opigno_learning_path_training_content',
     ];
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = \Drupal::routeMatch()->getParameter('group');
     if(!($group instanceof GroupInterface)){
       // On of  case an anonymous user hasn't an access to the group.
diff --git a/src/Controller/LearningPathManagerController.php b/src/Controller/LearningPathManagerController.php
index 3f03cac..fbf0bad 100644
--- a/src/Controller/LearningPathManagerController.php
+++ b/src/Controller/LearningPathManagerController.php
@@ -104,7 +104,7 @@ class LearningPathManagerController extends ControllerBase {
     $item['entityId'] = $entity->id();
     $item['entityBundle'] = \Drupal::routeMatch()->getParameter('type');
     $item['title'] = $entity->get('label')->getString();
-    $item['imageUrl'] = ($file) ? file_create_url($file->getFileUri()) : '';
+    $item['imageUrl'] = ($file) ? \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri()) : '';
 
     $response->addCommand(
       new SettingsCommand([
diff --git a/src/Controller/LearningPathMembershipController.php b/src/Controller/LearningPathMembershipController.php
index 5ce5e75..60b2b54 100644
--- a/src/Controller/LearningPathMembershipController.php
+++ b/src/Controller/LearningPathMembershipController.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\opigno_learning_path\Controller;
 
+use Drupal\Core\Form\FormBuilder;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\group\Entity\GroupContentInterface;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\OpenModalDialogCommand;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ -26,14 +30,14 @@ class LearningPathMembershipController extends ControllerBase {
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;
 
@@ -97,10 +101,10 @@ class LearningPathMembershipController extends ControllerBase {
   /**
    * Returns response for the autocompletion.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing the autocomplete suggestions.
    */
   public function addUserToTrainingAutocompleteSelect(Group $group): array {
@@ -126,7 +130,7 @@ class LearningPathMembershipController extends ControllerBase {
     $uids = $query->execute();
     $users = User::loadMultiple($uids);
 
-    /** @var \Drupal\user\Entity\User $user */
+    /** @var User $user */
     foreach ($users as $user) {
       $id = $user->id();
       $name = $user->getDisplayName();
@@ -158,7 +162,7 @@ class LearningPathMembershipController extends ControllerBase {
       $classes = Group::loadMultiple($gids);
 
       $db_connection = \Drupal::service('database');
-      /** @var \Drupal\group\Entity\Group $class */
+      /** @var Group $class */
       foreach ($classes as $class) {
         // Check if class already added.
         $is_class_added = $db_connection->select('group_content_field_data', 'g_c_f_d')
@@ -202,7 +206,7 @@ class LearningPathMembershipController extends ControllerBase {
   /**
    * Returns response for the autocompletion.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    */
   public function addUserToTrainingAutocomplete(Group $group) {
     [$matches, $default] = $this->addUserToTrainingAutocompleteSelect($group);
@@ -212,10 +216,10 @@ class LearningPathMembershipController extends ControllerBase {
   /**
    * Returns response for the autocompletion.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing the autocomplete suggestions.
    */
   public function addUserToClassAutocomplete(Group $group) {
@@ -245,7 +249,7 @@ class LearningPathMembershipController extends ControllerBase {
 
       $users = User::loadMultiple($uids);
 
-      /** @var \Drupal\user\Entity\User $user */
+      /** @var User $user */
       foreach ($users as $user) {
         $id = $user->id();
         $name = $user->getDisplayName();
@@ -265,7 +269,7 @@ class LearningPathMembershipController extends ControllerBase {
   /**
    * Returns users of current group for the autocompletion.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing the autocomplete suggestions.
    */
   public function findUsersInGroupAutocomplete() {
@@ -274,7 +278,7 @@ class LearningPathMembershipController extends ControllerBase {
 
     if ($string) {
       $like_string = '%' . $this->connection->escapeLike($string) . '%';
-      /** @var \Drupal\group\Entity\Group $curr_group */
+      /** @var Group $curr_group */
       $curr_group = \Drupal::routeMatch()
         ->getParameter('group');
 
@@ -294,7 +298,7 @@ class LearningPathMembershipController extends ControllerBase {
       $uids = $query->execute();
       $users = User::loadMultiple($uids);
 
-      /** @var \Drupal\user\Entity\User $user */
+      /** @var User $user */
       foreach ($users as $user) {
         $id = $user->id();
         $name = $user->getDisplayName();
@@ -318,18 +322,18 @@ class LearningPathMembershipController extends ControllerBase {
   /**
    * Ajax callback for searching user in a training classes.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group object.
    * @param string $class_id
    *   Class group ID.
    * @param string $uid
    *   User ID.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax command or empty.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function findGroupMember(Group $group, $class_id, $uid) {
     $response = new AjaxResponse();
@@ -353,7 +357,7 @@ class LearningPathMembershipController extends ControllerBase {
       $users = [];
       $classes = [];
 
-      /** @var \Drupal\group\Entity\GroupContentInterface $item */
+      /** @var GroupContentInterface $item */
       foreach ($content as $item) {
         $entity = $item->getEntity();
         if ($entity === NULL) {
@@ -431,11 +435,11 @@ class LearningPathMembershipController extends ControllerBase {
    *
    * Removes member from learning path.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Response.
    */
   public function deleteUser() {
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = \Drupal::routeMatch()->getParameter('group');
     if (!isset($group)) {
       throw new NotFoundHttpException();
@@ -462,7 +466,7 @@ class LearningPathMembershipController extends ControllerBase {
    * Removes class from learning path.
    */
   public function deleteClass() {
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = \Drupal::routeMatch()->getParameter('group');
 
     $class_id = \Drupal::request()->query->get('class_id');
@@ -475,7 +479,7 @@ class LearningPathMembershipController extends ControllerBase {
     $content = $group->getContent();
     $account = $this->currentUser();
 
-    /** @var \Drupal\group\Entity\GroupContentInterface $item */
+    /** @var GroupContentInterface $item */
     foreach ($content as $item) {
       $entity = $item->getEntity();
       $type = $entity->getEntityTypeId();
@@ -497,7 +501,7 @@ class LearningPathMembershipController extends ControllerBase {
    * Toggles user role in learning path.
    */
   public function toggleRole() {
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = \Drupal::routeMatch()->getParameter('group');
     $query = \Drupal::request()->query;
     $uid = $query->get('uid');
@@ -540,7 +544,7 @@ class LearningPathMembershipController extends ControllerBase {
    * Validates user role in learning path.
    */
   public function validate() {
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = \Drupal::routeMatch()->getParameter('group');
     $gid = $group->id();
 
diff --git a/src/Controller/LearningPathProgress.php b/src/Controller/LearningPathProgress.php
index b24a537..fb007d2 100644
--- a/src/Controller/LearningPathProgress.php
+++ b/src/Controller/LearningPathProgress.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Controller;
 
+use Symfony\Component\HttpFoundation\Response;
 use Drupal\opigno_learning_path\Progress;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -18,7 +19,7 @@ class LearningPathProgress implements ContainerInjectionInterface {
   /**
    * The progress bar generator service.
    *
-   * @var \Drupal\opigno_learning_path\Progress
+   * @var Progress
    */
   protected $progressService;
 
@@ -53,7 +54,7 @@ class LearningPathProgress implements ContainerInjectionInterface {
    * @param string $class
    *   identifier for progress bar.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The response object.
    */
   public function getHTML(Group $group, User $account, int $latest_cert_date, string $class) {
diff --git a/src/Controller/LearningPathStepsController.php b/src/Controller/LearningPathStepsController.php
index 019b01a..87292d2 100644
--- a/src/Controller/LearningPathStepsController.php
+++ b/src/Controller/LearningPathStepsController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\opigno_learning_path\Controller;
 
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\opigno_module\Entity\UserModuleStatus;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\AppendCommand;
@@ -36,7 +38,7 @@ class LearningPathStepsController extends ControllerBase {
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
@@ -150,7 +152,7 @@ class LearningPathStepsController extends ControllerBase {
    * @param array $content
    *   The popup content.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The AJAX response to show the popup.
    */
   public function showPopup(array $content): AjaxResponse {
@@ -750,7 +752,7 @@ class LearningPathStepsController extends ControllerBase {
    * @return array
    */
   public function listSteps(Group $group) {
-    /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
+    /** @var DateFormatterInterface $date_formatter */
     $date_formatter = \Drupal::service('date.formatter');
 
     $group_id = $group->id();
@@ -825,10 +827,10 @@ class LearningPathStepsController extends ControllerBase {
    *
    * @param array $attempts
    *   User module attempts.
-   * @param \Drupal\opigno_module\Entity\OpignoModule $module
+   * @param OpignoModule $module
    *   Module.
    *
-   * @return \Drupal\opigno_module\Entity\UserModuleStatus
+   * @return UserModuleStatus
    *   $attempt
    */
   protected function getTargetAttempt(array $attempts, OpignoModule $module) {
diff --git a/src/Controller/OpignoPopupController.php b/src/Controller/OpignoPopupController.php
index f8b894e..3aef5e1 100644
--- a/src/Controller/OpignoPopupController.php
+++ b/src/Controller/OpignoPopupController.php
@@ -23,7 +23,7 @@ class OpignoPopupController extends ControllerBase {
   /**
    * OpignoPopupController constructor.
    *
-   * @param \Drupal\Core\Entity\EntityFormBuilderInterface $entity_form_builder
+   * @param EntityFormBuilderInterface $entity_form_builder
    *   The entity form builder service.
    */
   public function __construct(EntityFormBuilderInterface $entity_form_builder) {
@@ -42,7 +42,7 @@ class OpignoPopupController extends ControllerBase {
   /**
    * Close the modal.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function closeModal(): AjaxResponse {
@@ -55,10 +55,10 @@ class OpignoPopupController extends ControllerBase {
   /**
    * Get the delete group confirmation form.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   The group to be deleted.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The AJAX response object.
    */
   public function getDeleteGroupForm(GroupInterface $group): AjaxResponse {
@@ -68,10 +68,10 @@ class OpignoPopupController extends ControllerBase {
   /**
    * Get the delete opigno_module confirmation form.
    *
-   * @param \Drupal\opigno_module\Entity\OpignoModuleInterface $opigno_module
+   * @param OpignoModuleInterface $opigno_module
    *   The module entity to be deleted.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The AJAX response object.
    */
   public function getDeleteModuleForm(OpignoModuleInterface $opigno_module): AjaxResponse {
@@ -81,10 +81,10 @@ class OpignoPopupController extends ControllerBase {
   /**
    * Get the delete entity confirmation form.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be deleted.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The AJAX response object.
    */
   private function getDeleteEntityConfirmPopup(EntityInterface $entity): AjaxResponse {
diff --git a/src/Entity/LPManagedContent.php b/src/Entity/LPManagedContent.php
index cef2261..ddd066d 100644
--- a/src/Entity/LPManagedContent.php
+++ b/src/Entity/LPManagedContent.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Entity;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
@@ -35,7 +36,6 @@ class LPManagedContent extends ContentEntityBase {
    * todo: Not sure that we are still using this functional. We have the same functional for entity 'opigno_group_content'.
    * Table with that entity always is empty on DEV instances.
    */
-
   /**
    * Creates a new LPManagedContent object with the values passed in param.
    *
@@ -56,7 +56,7 @@ class LPManagedContent extends ContentEntityBase {
    * @param int $coordinate_y
    *   The Y coordinate for this content in the learning path.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|self
+   * @return EntityInterface|self
    *   LPManagedContent object.
    */
   public static function createWithValues(
diff --git a/src/Entity/LPManagedLink.php b/src/Entity/LPManagedLink.php
index 9193d46..d7dad9b 100644
--- a/src/Entity/LPManagedLink.php
+++ b/src/Entity/LPManagedLink.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Entity;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -41,7 +42,7 @@ class LPManagedLink extends ContentEntityBase {
    * @param int $required_score
    *   The required score to go from the parent to the child content.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|self
+   * @return EntityInterface|self
    *   LPManagedLink object.
    */
   public static function createWithValues(
diff --git a/src/Entity/LPModuleAvailability.php b/src/Entity/LPModuleAvailability.php
index a7e1f8a..10b5b49 100644
--- a/src/Entity/LPModuleAvailability.php
+++ b/src/Entity/LPModuleAvailability.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Entity;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
@@ -31,7 +32,7 @@ class LPModuleAvailability extends ContentEntityBase {
    *
    * It's not saved automatically. You need to do $obj->save().
    *
-   * @return \Drupal\Core\Entity\EntityInterface|self
+   * @return EntityInterface|self
    *   LPModuleAvailability object.
    */
   public static function createWithValues(
diff --git a/src/Entity/LPStatus.php b/src/Entity/LPStatus.php
index 922bdcd..5db0910 100644
--- a/src/Entity/LPStatus.php
+++ b/src/Entity/LPStatus.php
@@ -238,7 +238,7 @@ class LPStatus extends ContentEntityBase implements LPStatusInterface {
   /**
    * Gets training certificate expiration flag.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group object.
    *
    * @return bool
@@ -251,7 +251,7 @@ class LPStatus extends ContentEntityBase implements LPStatusInterface {
   /**
    * Gets training certificate expiration period.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group object.
    *
    * @return int|null
@@ -408,7 +408,7 @@ class LPStatus extends ContentEntityBase implements LPStatusInterface {
   /**
    * Returns flag if training certificate expired for the user.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group object.
    * @param int $uid
    *   User ID.
@@ -448,7 +448,7 @@ class LPStatus extends ContentEntityBase implements LPStatusInterface {
   /**
    * Returns training start date for displaying statistics.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group object.
    * @param int $uid
    *   User ID.
diff --git a/src/Entity/LatestActivity.php b/src/Entity/LatestActivity.php
index 284cc56..b728cec 100644
--- a/src/Entity/LatestActivity.php
+++ b/src/Entity/LatestActivity.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Entity;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Entity\ContentEntityBase;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ -194,9 +195,9 @@ class LatestActivity extends ContentEntityBase implements LatestActivityInterfac
    * @param $user_id
    *   The user ID.
    *
-   * @return \Drupal\opigno_learning_path\LatestActivityInterface
+   * @return LatestActivityInterface
    *   Created or updated entity.
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public static function insertGroupActivity($training_id, $module_id, $user_id) {
     $query = \Drupal::entityQuery('opigno_latest_group_activity');
diff --git a/src/EventSubscriber/LearningPathEventSubscriber.php b/src/EventSubscriber/LearningPathEventSubscriber.php
index ef870ae..273312d 100644
--- a/src/EventSubscriber/LearningPathEventSubscriber.php
+++ b/src/EventSubscriber/LearningPathEventSubscriber.php
@@ -2,12 +2,12 @@
 
 namespace Drupal\opigno_learning_path\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Url;
 use Drupal\opigno_learning_path\LearningPathContentTypesManager;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -54,16 +54,16 @@ class LearningPathEventSubscriber implements EventSubscriberInterface {
   /**
    * Event called when a request is sent.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
   }
 
   /**
    * Redirect from canonical module path to module edit.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The route building event.
    */
-  public function moduleRedirect(FilterResponseEvent $event) {
+  public function moduleRedirect(ResponseEvent $event) {
     $route = \Drupal::routeMatch();
     $route_name = $route->getRouteName();
     if ($route_name == 'entity.opigno_module.canonical') {
diff --git a/src/Form/DeleteAchievementsForm.php b/src/Form/DeleteAchievementsForm.php
index 211291a..964992f 100644
--- a/src/Form/DeleteAchievementsForm.php
+++ b/src/Form/DeleteAchievementsForm.php
@@ -21,14 +21,14 @@ class DeleteAchievementsForm extends ConfirmFormBase {
   /**
    * Group.
    *
-   * @var \Drupal\group\Entity\Group
+   * @var Group
    */
   protected $group;
 
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
diff --git a/src/Form/LearningPathCreateClassForm.php b/src/Form/LearningPathCreateClassForm.php
index 9f1d9b1..19a82fe 100644
--- a/src/Form/LearningPathCreateClassForm.php
+++ b/src/Form/LearningPathCreateClassForm.php
@@ -134,7 +134,7 @@ class LearningPathCreateClassForm extends FormBase {
     $users = User::loadMultiple($uids);
 
     // Create new class.
-    /** @var \Drupal\group\Entity\Group $class */
+    /** @var Group $class */
     $class = Group::create([
       'type' => 'opigno_class',
       'label' => $name,
diff --git a/src/Form/LearningPathCreateUserForm.php b/src/Form/LearningPathCreateUserForm.php
index aab5f68..c84dd1a 100644
--- a/src/Form/LearningPathCreateUserForm.php
+++ b/src/Form/LearningPathCreateUserForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Form;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
 use Drupal\Core\Form\FormBase;
@@ -140,7 +141,7 @@ class LearningPathCreateUserForm extends FormBase {
     $user = User::create();
     $user->enforceIsNew();
     $user->setUsername($name);
-    $user->setPassword(user_password());
+    $user->setPassword(\Drupal::service('password_generator')->generate());
     $user->setEmail($email);
     $user->set('init', $email);
     $user->set('langcode', $lang);
@@ -171,7 +172,7 @@ class LearningPathCreateUserForm extends FormBase {
   /**
    * Get entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity type manager.
    */
   protected function entityTypeManager() {
diff --git a/src/Form/LearningPathMembersForm.php b/src/Form/LearningPathMembersForm.php
index f33abdb..70f3d8f 100644
--- a/src/Form/LearningPathMembersForm.php
+++ b/src/Form/LearningPathMembersForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\opigno_learning_path\Form;
 
+use Drupal\group\Entity\Group;
+use Drupal\group\Entity\GroupContentInterface;
+use Drupal\user\Entity\User;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\Markup;
@@ -31,7 +34,7 @@ class LearningPathMembersForm extends FormBase {
     $content_manager_role = 'learning_path-content_manager';
     $class_manager_role = 'opigno_class-class_manager';
 
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = \Drupal::routeMatch()->getParameter('group');
     $group_bundle = $group->bundle();
 
@@ -90,7 +93,7 @@ class LearningPathMembersForm extends FormBase {
     $users = [];
     $classes = [];
 
-    /** @var \Drupal\group\Entity\GroupContentInterface $item */
+    /** @var GroupContentInterface $item */
     foreach ($content as $item) {
       $entity = $item->getEntity();
       if ($entity === NULL) {
@@ -144,7 +147,7 @@ class LearningPathMembersForm extends FormBase {
       $member_count = 0;
 
       $members = array_filter($users, function ($user) use ($class) {
-        /** @var \Drupal\group\Entity\Group $class_entity */
+        /** @var Group $class_entity */
         $class_entity = $class['entity'];
         return $class_entity->getMember($user['entity']) !== FALSE;
       });
@@ -168,14 +171,14 @@ class LearningPathMembersForm extends FormBase {
         $member_count = $members_view->total_rows;
       }
 
-      /** @var \Drupal\group\Entity\GroupContentInterface $class_group_content */
+      /** @var GroupContentInterface $class_group_content */
       $class_group_content = $class['group content'];
       $member_since_value = $class_group_content
         ->get('created')
         ->getValue()[0]['value'];
       $member_since = date('d/m/Y', $member_since_value);
 
-      /** @var \Drupal\group\Entity\Group $class_entity */
+      /** @var Group $class_entity */
       $class_entity = $class['entity'];
 
       $form[] = [
@@ -221,7 +224,7 @@ class LearningPathMembersForm extends FormBase {
         'members_table' => !empty($members_view_renderable) ? [
           '#type' => 'html_tag',
           '#tag' => 'div',
-          '#value' => render($members_view_renderable),
+          '#value' => \Drupal::service('renderer')->render($members_view_renderable),
           '#attributes' => [
             'id' => 'class-' . $class_entity->id(),
             'class' => ['class_members', 'class_members_row'],
@@ -262,13 +265,13 @@ class LearningPathMembersForm extends FormBase {
 
     if (!empty($individual_members)) {
       $rows = array_map(function ($member_info) use ($group, $student_manager_role, $content_manager_role, $class_manager_role) {
-        /** @var \Drupal\group\Entity\GroupContentInterface $user_group_content */
+        /** @var GroupContentInterface $user_group_content */
         $user_group_content = $member_info['group content'];
         $member_since_value = $user_group_content
           ->get('created')
           ->getValue()[0]['value'];
 
-        /** @var \Drupal\user\Entity\User $user_entity */
+        /** @var User $user_entity */
         $user_entity = $member_info['entity'];
         $member = $group->getMember($user_entity);
         $roles = $member->getRoles();
diff --git a/src/JoinService.php b/src/JoinService.php
index 6bc1dc5..2907558 100644
--- a/src/JoinService.php
+++ b/src/JoinService.php
@@ -14,14 +14,14 @@ class JoinService {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The entity form builder.
    *
-   * @var \Drupal\Core\Entity\EntityFormBuilderInterface
+   * @var EntityFormBuilderInterface
    */
   protected $entityFormBuilder;
 
diff --git a/src/LPResultAccessControlHandler.php b/src/LPResultAccessControlHandler.php
index 2377306..ffeb522 100644
--- a/src/LPResultAccessControlHandler.php
+++ b/src/LPResultAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path;
 
+use Drupal\group\Entity\Group;
 use Drupal\Core\Access\AccessException;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityAccessControlHandler;
@@ -23,7 +24,7 @@ class LPResultAccessControlHandler extends EntityAccessControlHandler {
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
     /** @var \Drupal\opigno_learning_path\Entity\LPResult $entity */
-    /** @var \Drupal\group\Entity\Group $group */
+    /** @var Group $group */
     $group = $entity->getLearningPath();
     $is_owner = $entity->getUserId() == $account->id();
     if (empty($group) || !is_object($group)) {
diff --git a/src/LPStatusInterface.php b/src/LPStatusInterface.php
index c4e68c5..d13324a 100644
--- a/src/LPStatusInterface.php
+++ b/src/LPStatusInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\opigno_learning_path;
 
+use Drupal\group\Entity\GroupInterface;
+use Drupal\user\Entity\User;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\opigno_moxtra\MeetingResultInterface;
@@ -35,7 +37,7 @@ interface LPStatusInterface extends ContentEntityInterface {
   /**
    * Gets the training entity.
    *
-   * @return \Drupal\group\Entity\GroupInterface
+   * @return GroupInterface
    *   The training entity.
    */
   public function getTraining();
@@ -73,7 +75,7 @@ interface LPStatusInterface extends ContentEntityInterface {
   /**
    * Gets the user entity.
    *
-   * @return \Drupal\user\Entity\User
+   * @return User
    *   The user entity.
    */
   public function getUser();
@@ -81,7 +83,7 @@ interface LPStatusInterface extends ContentEntityInterface {
   /**
    * Sets the user entity.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   User account.
    *
    * @return \Drupal\opigno_learning_path\LPStatusInterface
@@ -103,7 +105,7 @@ interface LPStatusInterface extends ContentEntityInterface {
    * @param string $status
    *   Training status.
    *
-   * @return \Drupal\opigno_learning_path\LatestActivityInterface
+   * @return LatestActivityInterface
    *   The called entity.
    */
   public function setStatus($status);
@@ -141,7 +143,7 @@ interface LPStatusInterface extends ContentEntityInterface {
    * @param int $timestamp
    *   The timestamp.
    *
-   * @return \Drupal\opigno_learning_path\LatestActivityInterface
+   * @return LatestActivityInterface
    *   The called entity.
    */
   public function setFinished($timestamp);
@@ -149,7 +151,7 @@ interface LPStatusInterface extends ContentEntityInterface {
   /**
    * Checks if the training finished.
    *
-   * @return \Drupal\opigno_learning_path\LatestActivityInterface
+   * @return LatestActivityInterface
    *   Boolean, true if the training was finished, false otherwise.
    */
   public function isFinished();
@@ -168,7 +170,7 @@ interface LPStatusInterface extends ContentEntityInterface {
    * @param int $timestamp
    *   The timestamp.
    *
-   * @return \Drupal\opigno_learning_path\LatestActivityInterface
+   * @return LatestActivityInterface
    *   The called entity.
    */
   public function setStarted($timestamp);
@@ -176,7 +178,7 @@ interface LPStatusInterface extends ContentEntityInterface {
   /**
    * Checks if the training finished.
    *
-   * @return \Drupal\opigno_learning_path\LatestActivityInterface
+   * @return LatestActivityInterface
    *   Boolean, true if the training was started, false otherwise.
    */
   public function isStarted();
diff --git a/src/LatestActivityAccessControlHandler.php b/src/LatestActivityAccessControlHandler.php
index 15eb4d7..8e0767d 100644
--- a/src/LatestActivityAccessControlHandler.php
+++ b/src/LatestActivityAccessControlHandler.php
@@ -21,7 +21,7 @@ class LatestActivityAccessControlHandler extends EntityAccessControlHandler {
    * $operation as defined in the routing.yml file.
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\opigno_learning_path\LatestActivityInterface $entity */
+    /** @var LatestActivityInterface $entity */
     // LatestActivity entity only used internally to track a latest activity
     // in trainings for the latest_active_trainings view.
     // Deny all edit operations to all users.
diff --git a/src/LatestActivityInterface.php b/src/LatestActivityInterface.php
index ca25b43..74fd502 100644
--- a/src/LatestActivityInterface.php
+++ b/src/LatestActivityInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\opigno_learning_path;
 
+use Drupal\group\Entity\GroupInterface;
+use Drupal\opigno_module\Entity\OpignoModuleInterface;
+use Drupal\user\Entity\User;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Session\AccountInterface;
 
@@ -34,7 +37,7 @@ interface LatestActivityInterface extends ContentEntityInterface {
   /**
    * Gets the training entity.
    *
-   * @return \Drupal\group\Entity\GroupInterface
+   * @return GroupInterface
    *   The training entity.
    */
   public function getTraining();
@@ -42,7 +45,7 @@ interface LatestActivityInterface extends ContentEntityInterface {
   /**
    * Sets the training entity.
    *
-   * @param \Drupal\group\Entity\GroupInterface $training
+   * @param GroupInterface $training
    *   The training entity.
    *
    * @return \Drupal\opigno_learning_path\LatestActivityInterface
@@ -72,7 +75,7 @@ interface LatestActivityInterface extends ContentEntityInterface {
   /**
    * Gets the module entity.
    *
-   * @return \Drupal\opigno_module\Entity\OpignoModuleInterface
+   * @return OpignoModuleInterface
    *   The module entity.
    */
   public function getModule();
@@ -80,7 +83,7 @@ interface LatestActivityInterface extends ContentEntityInterface {
   /**
    * Sets the module entity.
    *
-   * @param \Drupal\opigno_module\Entity\OpignoModuleInterface $module
+   * @param OpignoModuleInterface $module
    *   The module entity.
    *
    * @return \Drupal\opigno_learning_path\LatestActivityInterface
@@ -129,7 +132,7 @@ interface LatestActivityInterface extends ContentEntityInterface {
   /**
    * Gets the user entity.
    *
-   * @return \Drupal\user\Entity\User
+   * @return User
    *   The user entity.
    */
   public function getUser();
@@ -137,7 +140,7 @@ interface LatestActivityInterface extends ContentEntityInterface {
   /**
    * Sets the user entity.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   User account.
    *
    * @return \Drupal\opigno_learning_path\LatestActivityInterface
diff --git a/src/LearningPathAccess.php b/src/LearningPathAccess.php
index 049eb33..41170fe 100644
--- a/src/LearningPathAccess.php
+++ b/src/LearningPathAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path;
 
+use Drupal\group\Entity\GroupContentInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Database\Database;
 use Drupal\Core\Entity\EntityInterface;
@@ -175,12 +176,12 @@ class LearningPathAccess {
   /**
    * Sets roles on membership presave.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $membership
+   * @param EntityInterface $membership
    *   Membership object.
    */
   public static function membershipPreSave(EntityInterface &$membership) {
     if ($membership->isNew()) {
-      /** @var \Drupal\group\Entity\GroupContentInterface $membership */
+      /** @var GroupContentInterface $membership */
       $group = $membership->getGroup();
       $group_is_semiprivate = $group->hasField('field_learning_path_visibility')
         && $group->get('field_learning_path_visibility')->getValue() === 'semiprivate';
@@ -275,7 +276,7 @@ class LearningPathAccess {
   /**
    * Merges Learning Path group user status.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $membership
+   * @param EntityInterface $membership
    *   Membership object.
    *
    * @throws \Exception
@@ -283,7 +284,7 @@ class LearningPathAccess {
   public static function mergeUserStatus(EntityInterface $membership) {
     $message = \Drupal::request()->get('user_message');
     $message = !empty($message) ? Html::escape($message) : '';
-    /** @var \Drupal\group\Entity\GroupContentInterface $membership */
+    /** @var GroupContentInterface $membership */
     $group = $membership->getGroup();
     $uid = $membership->getEntity()->id();
     $gid = $group->id();
@@ -348,7 +349,7 @@ class LearningPathAccess {
       ->condition('mid', $membership->id());
     $result = $query->execute();
     if ($result) {
-      /** @var \Drupal\group\Entity\GroupContentInterface $membership */
+      /** @var GroupContentInterface $membership */
       $entity = $membership->getEntity();
       $group = $membership->getGroup();
       if (isset($entity) && isset($group)
@@ -554,9 +555,9 @@ class LearningPathAccess {
   /**
    * Returns uncompleted required trainings flag.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   Group.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   User account.
    *
    * @return bool|array
@@ -593,9 +594,9 @@ class LearningPathAccess {
   /**
    * Returns user course/class access flag.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   User account.
    *
    * @return bool
@@ -640,7 +641,7 @@ class LearningPathAccess {
    * @param string $role
    *   User role in group.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   User account.
    *
    * @param int $gid
diff --git a/src/LearningPathContent.php b/src/LearningPathContent.php
index 81873ba..02e6fb6 100644
--- a/src/LearningPathContent.php
+++ b/src/LearningPathContent.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\opigno_learning_path\Entity\LPManagedContent;
 
 /**
@@ -41,13 +42,13 @@ class LearningPathContent {
   /**
    * Returns LP content properties array to manager.
    *
-   * @param \Drupal\opigno_learning_path\Entity\LPManagedContent|null $content
+   * @param LPManagedContent|null $content
    *   LP content.
    *
    * @return array
    *   LP content properties array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function toManagerArray(LPManagedContent $content = NULL) {
     if ($content === NULL) {
diff --git a/src/LearningPathGroupOperationsLinks.php b/src/LearningPathGroupOperationsLinks.php
index 34bcf78..3da1f21 100644
--- a/src/LearningPathGroupOperationsLinks.php
+++ b/src/LearningPathGroupOperationsLinks.php
@@ -31,7 +31,7 @@ class LearningPathGroupOperationsLinks implements TrustedCallbackInterface{
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
@@ -42,7 +42,7 @@ class LearningPathGroupOperationsLinks implements TrustedCallbackInterface{
    *   The config factory service.
    * @param \Drupal\opigno_learning_path\ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
    */
   public function __construct(
@@ -65,7 +65,7 @@ class LearningPathGroupOperationsLinks implements TrustedCallbackInterface{
   /**
    * Prepare the render array to build the available LP action links.
    *
-   * @param \Drupal\group\Entity\GroupInterface $group
+   * @param GroupInterface $group
    *   The group to build links for.
    *
    * @return array
diff --git a/src/LearningPathMembersPluginBase.php b/src/LearningPathMembersPluginBase.php
index 7c9b2e2..b323f4f 100644
--- a/src/LearningPathMembersPluginBase.php
+++ b/src/LearningPathMembersPluginBase.php
@@ -34,7 +34,7 @@ abstract class LearningPathMembersPluginBase extends PluginBase implements Learn
   /**
    * Returns group members uids.
    *
-   * @param \Drupal\group\Entity\Group $group
+   * @param Group $group
    *   Group object.
    *
    * @return array|null
diff --git a/src/LearningPathValidator.php b/src/LearningPathValidator.php
index 2e62c8a..5ce871b 100644
--- a/src/LearningPathValidator.php
+++ b/src/LearningPathValidator.php
@@ -43,7 +43,7 @@ class LearningPathValidator {
   /**
    * Checks if module have at least one activity.
    *
-   * @param \Drupal\opigno_module\Entity\OpignoModule $module
+   * @param OpignoModule $module
    *   Opigno Module Entity.
    * @param int $redirect_step
    *   Step to redirect.
diff --git a/src/LpSteps.php b/src/LpSteps.php
index 48fc599..317c33b 100644
--- a/src/LpSteps.php
+++ b/src/LpSteps.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\opigno_learning_path;
 
+use Drupal\Core\Database\Connection;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\opigno_module\Entity\UserModuleStatus;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\opigno_module\Entity\OpignoModule;
@@ -20,21 +26,21 @@ class LpSteps {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The database layer.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The RequestStack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $moduleHandler;
 
@@ -56,7 +62,7 @@ class LpSteps {
     $results = &drupal_static(__FUNCTION__);
 
     if (!isset($results[$key])) {
-      /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $content */
+      /** @var OpignoGroupManagedContent $content */
       $content = current(OpignoGroupManagedContent::loadByProperties([
         'group_id' => $group_id,
         'group_content_type_id' => 'ContentTypeModule',
@@ -120,22 +126,22 @@ class LpSteps {
    *   Training group ID.
    * @param int $uid
    *   User ID.
-   * @param \Drupal\group\Entity\GroupInterface $course
+   * @param GroupInterface $course
    *   Group entity of the course.
    *
    * @return array
    *   Data array about step in a group for a user.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginException
+   * @throws PluginNotFoundException
    */
   public function getCourseStep($group_id, $uid, GroupInterface $course, $latest_cert_date = NULL) {
     $id = $course->id();
     $key = "{$group_id}_{$uid}_{$id}_{$latest_cert_date}";
     $results = &drupal_static(__FUNCTION__);
     if (!isset($results[$key])) {
-      /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $content */
+      /** @var OpignoGroupManagedContent $content */
       $content = current(OpignoGroupManagedContent::loadByProperties([
         'group_id' => $group_id,
         'group_content_type_id' => 'ContentTypeCourse',
@@ -249,15 +255,15 @@ class LpSteps {
    * @return array
    *   Data array about step in a group for a user.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getMeetingStep($group_id, $uid, MeetingInterface $meeting) {
     $id = $meeting->id();
     $key = "{$group_id}_{$uid}_$id";
     $results = &drupal_static(__FUNCTION__);
     if (!isset($results[$key])) {
-      /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $content */
+      /** @var OpignoGroupManagedContent $content */
       $content = current(OpignoGroupManagedContent::loadByProperties([
         'group_id' => $group_id,
         'group_content_type_id' => 'ContentTypeMeeting',
@@ -343,15 +349,15 @@ class LpSteps {
    * @return array
    *   Data array about step in a group for a user.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getIltStep($group_id, $uid, ILTInterface $ilt) {
     $id = $ilt->id();
     $key = "{$group_id}_{$uid}_$id";
     $results = &drupal_static(__FUNCTION__);
     if (!isset($results[$key])) {
-      /** @var \Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent $content */
+      /** @var OpignoGroupManagedContent $content */
       $content = current(OpignoGroupManagedContent::loadByProperties([
         'group_id' => $group_id,
         'group_content_type_id' => 'ContentTypeILT',
@@ -453,7 +459,7 @@ class LpSteps {
    */
   public function getTimeSpent($attempts) {
     return array_sum(array_map(function ($attempt) {
-      /** @var \Drupal\opigno_module\Entity\UserModuleStatus $attempt */
+      /** @var UserModuleStatus $attempt */
       $started = (int) $attempt->get('started')->getString();
       $finished = (int) $attempt->get('finished')->getString();
 
@@ -468,7 +474,7 @@ class LpSteps {
     return array_filter($options['attempts'], function ($attempt) use (
       $options
     ) {
-      /** @var \Drupal\opigno_module\Entity\UserModuleStatus $attempt */
+      /** @var UserModuleStatus $attempt */
       // Check that all actual module activities is evaluated.
       $evaluated = TRUE;
       $answered_count = 0;
@@ -537,7 +543,7 @@ class LpSteps {
     else {
       // Get finish date of the first attempt that has passed.
       $completed_on = !empty($passed_attempts) ? min(array_map(function ($attempt) {
-        /** @var \Drupal\opigno_module\Entity\UserModuleStatus $attempt */
+        /** @var UserModuleStatus $attempt */
         return (int) $attempt->get('finished')->getString();
       }, $passed_attempts)) : 0;
 
diff --git a/src/Plugin/Block/BackLinkBlock.php b/src/Plugin/Block/BackLinkBlock.php
index 22a4ca5..c0fef70 100644
--- a/src/Plugin/Block/BackLinkBlock.php
+++ b/src/Plugin/Block/BackLinkBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Plugin\Block;
 
+use Drupal\Component\Plugin\Context\ContextInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
@@ -20,7 +21,7 @@ use Drupal\system\Plugin\Block\SystemBreadcrumbBlock;
 class BackLinkBlock extends SystemBreadcrumbBlock implements ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\Component\Plugin\Context\ContextInterface[]|void
+   * @var ContextInterface[]|void
    */
   protected $isOverrideJS = NULL;
 
@@ -81,9 +82,9 @@ class BackLinkBlock extends SystemBreadcrumbBlock implements ContainerFactoryPlu
    */
   public function build() {
     $config = $this->configuration;
-    /** @var \Drupal\Core\Link[] $links */
+    /** @var Link[] $links */
     $links = $this->getLinks();
-    /** @var \Drupal\Core\Link $last_link */
+    /** @var Link $last_link */
     $last_link = array_pop($links);
     if ($last_link instanceof Link) {
       return [
diff --git a/src/Plugin/Block/DocumentsLastGroupBlock.php b/src/Plugin/Block/DocumentsLastGroupBlock.php
index 5eeeef7..2e35e67 100644
--- a/src/Plugin/Block/DocumentsLastGroupBlock.php
+++ b/src/Plugin/Block/DocumentsLastGroupBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\Plugin\Block;
 
+use Drupal\Component\Plugin\Context\ContextInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Url;
 
@@ -17,7 +18,7 @@ use Drupal\Core\Url;
 class DocumentsLastGroupBlock extends BlockBase {
 
   /**
-   * @var \Drupal\Component\Plugin\Context\ContextInterface[]|mixed
+   * @var ContextInterface[]|mixed
    */
   protected $groupId;
 
diff --git a/src/Plugin/Block/StepsBlock.php b/src/Plugin/Block/StepsBlock.php
index 7cf512d..9679187 100644
--- a/src/Plugin/Block/StepsBlock.php
+++ b/src/Plugin/Block/StepsBlock.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\opigno_learning_path\Plugin\Block;
 
+use Drupal\Component\Plugin\Exception\PluginException;
+use Drupal\opigno_group_manager\ContentTypeBase;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\opigno_group_manager\OpignoGroupContent;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheableMetadata;
@@ -31,7 +36,7 @@ class StepsBlock extends BlockBase implements ContainerFactoryPluginInterface, T
   /**
    * Service "opigno_group_manager.content_types.manager" definition.
    *
-   * @var \Drupal\opigno_group_manager\OpignoGroupContentTypesManager
+   * @var OpignoGroupContentTypesManager
    */
   protected $opignoGroupContentTypesManager;
 
@@ -128,7 +133,7 @@ class StepsBlock extends BlockBase implements ContainerFactoryPluginInterface, T
   /**
    * Process module list.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function processModuleList($elements) {
     foreach ($elements["steps"] as &$step) {
@@ -237,13 +242,12 @@ class StepsBlock extends BlockBase implements ContainerFactoryPluginInterface, T
   /**
    * Take a module link.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    * @todo Previously it can be take or next link, it should be researched.
-   *
    */
   protected function getLink($step): Url {
     $content_step = OpignoGroupManagedContent::load($step['cid']);
-    /** @var \Drupal\opigno_group_manager\ContentTypeBase $content_type */
+    /** @var ContentTypeBase $content_type */
     $content_type = $this->opignoGroupContentTypesManager->createInstance($content_step->getGroupContentTypeId());
     $step_url = $content_type->getStartContentUrl($content_step->getEntityId(), $this->getCurrentGroupId());
     return Url::fromRoute($step_url->getRouteName(), $step_url->getRouteParameters());
@@ -254,7 +258,7 @@ class StepsBlock extends BlockBase implements ContainerFactoryPluginInterface, T
    */
   public function getLinkToStart($step): ?Url {
     $link = NULL;
-    /** @var \Drupal\opigno_learning_path\Controller\LearningPathStepsController $controller */
+    /** @var LearningPathStepsController $controller */
     $controller = \Drupal::classResolver(LearningPathStepsController::class);
     if ($step['step_first']) {
       return $this->getLink($step);
@@ -283,8 +287,8 @@ class StepsBlock extends BlockBase implements ContainerFactoryPluginInterface, T
   /**
    * Loading a training/course and module entities by step array.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getTrainingAndCourse($step): array {
 
@@ -296,7 +300,7 @@ class StepsBlock extends BlockBase implements ContainerFactoryPluginInterface, T
       ];
     }
 
-    /** @var \Drupal\opigno_group_manager\OpignoGroupContent $content */
+    /** @var OpignoGroupContent $content */
     $content = $this->entityTypeManager()
       ->getStorage('opigno_group_content')
       ->load($step_training["cid"]);
diff --git a/src/Plugin/views/field/OpignoLearningPathProgress.php b/src/Plugin/views/field/OpignoLearningPathProgress.php
index 7879617..c6d370a 100644
--- a/src/Plugin/views/field/OpignoLearningPathProgress.php
+++ b/src/Plugin/views/field/OpignoLearningPathProgress.php
@@ -28,7 +28,7 @@ class OpignoLearningPathProgress extends FieldPluginBase {
   /**
    * Opigno learning path progress service.
    *
-   * @var \Drupal\opigno_learning_path\Progress
+   * @var Progress
    */
   protected $progress;
 
diff --git a/src/Progress.php b/src/Progress.php
index 881435c..0fe0a2a 100644
--- a/src/Progress.php
+++ b/src/Progress.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\opigno_learning_path;
 
+use Drupal\Core\Database\Connection;
+use Drupal\group\Entity\GroupInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\group\Entity\GroupContent;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Link;
 use Drupal\Core\Render\Markup;
@@ -24,21 +28,21 @@ class Progress {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The database layer.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The RequestStack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
@@ -255,7 +259,7 @@ class Progress {
    *   Renderable array.
    */
   public function getProgressBuildGroupPage(int $group_id, int $account_id, $latest_cert_date): array {
-    /** @var \Drupal\group\Entity\GroupInterface $group */
+    /** @var GroupInterface $group */
     $group = Group::load($group_id);
     $account = User::load($account_id);
 
@@ -454,7 +458,7 @@ class Progress {
    */
   public function getProgressBuildModulePage(int $group_id, int $account_id): array {
     $home_link = Link::createFromRoute(Markup::create($this->t('home') . '<i class="icon-home-2"></i>'), 'entity.group.canonical', ['group' => $group_id], ['attributes' => ['class' => ['w-100']]])->toRenderable();
-    $home_link = render($home_link);
+    $home_link = \Drupal::service('renderer')->render($home_link);
 
     $progress = $this->getProgressRound($group_id, $account_id);
 
@@ -497,10 +501,10 @@ class Progress {
     $group = Group::load($group_id);
     $account = User::load($account_id);
 
-    /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
+    /** @var DateFormatterInterface $date_formatter */
     $date_formatter = \Drupal::service('date.formatter');
 
-    /** @var \Drupal\group\Entity\GroupContent $member */
+    /** @var GroupContent $member */
     $member = $group->getMember($account)->getGroupContent();
     $registration = $member->getCreatedTime();
     $registration = $date_formatter->format($registration, 'custom', 'm/d/Y');
diff --git a/src/Traits/LearningPathAchievementTrait.php b/src/Traits/LearningPathAchievementTrait.php
index 9061be3..c94ced3 100644
--- a/src/Traits/LearningPathAchievementTrait.php
+++ b/src/Traits/LearningPathAchievementTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\opigno_learning_path\Traits;
 
+use Drupal\opigno_module\Entity\UserModuleStatus;
+use Drupal\opigno_module\Entity\OpignoAnswer;
 use Drupal\group\Entity\GroupInterface;
 use Drupal\opigno_group_manager\Controller\OpignoGroupManagerController;
 use Drupal\opigno_group_manager\OpignoGroupContext;
@@ -112,10 +114,10 @@ trait LearningPathAchievementTrait {
    *
    * @param array $attempts
    *   User module attempts.
-   * @param \Drupal\opigno_module\Entity\OpignoModule $module
+   * @param OpignoModule $module
    *   Module.
    *
-   * @return \Drupal\opigno_module\Entity\UserModuleStatus
+   * @return UserModuleStatus
    *   $attempt
    */
   protected function getTargetAttempt(array $attempts, OpignoModule $module) {
@@ -144,9 +146,9 @@ trait LearningPathAchievementTrait {
     $parent = isset($course) ? $course : $training;
     $step = opigno_learning_path_get_module_step($parent->id(), $user->id(), $module, $latest_cert_date);
 
-    /** @var \Drupal\opigno_module\Entity\OpignoModule $module */
+    /** @var OpignoModule $module */
     $module = OpignoModule::load($step['id']);
-    /** @var \Drupal\opigno_module\Entity\UserModuleStatus[] $attempts */
+    /** @var UserModuleStatus[] $attempts */
     $attempts = $module->getModuleAttempts($user, NULL, $latest_cert_date);
 
     if ($moduleHandler->moduleExists('opigno_skills_system') && $module->getSkillsActive() && $module->getModuleSkillsGlobal() && !empty($attempts)) {
@@ -174,9 +176,9 @@ trait LearningPathAchievementTrait {
     else {
       $activities = $module->getModuleActivities();
     }
-    /** @var \Drupal\opigno_module\Entity\OpignoActivity[] $activities */
+    /** @var OpignoActivity[] $activities */
     $activities = array_map(function ($activity) {
-      /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
+      /** @var OpignoActivity $activity */
       return OpignoActivity::load($activity->id);
     }, $activities);
     return [$activities, $attempts];
@@ -198,7 +200,7 @@ trait LearningPathAchievementTrait {
     $user = $this->currentUser();
 
     /** @var \Drupal\opigno_module\Entity\OpignoActivity $activity */
-    /** @var \Drupal\opigno_module\Entity\OpignoAnswer $answer */
+    /** @var OpignoAnswer $answer */
     $array_map = [];
     foreach ($activities as $key => $activity) {
       $answer = isset($attempt)
diff --git a/src/TwigExtension/DefaultTwigExtension.php b/src/TwigExtension/DefaultTwigExtension.php
index a53c7f9..3e397d2 100644
--- a/src/TwigExtension/DefaultTwigExtension.php
+++ b/src/TwigExtension/DefaultTwigExtension.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_learning_path\TwigExtension;
 
+use Drupal\opigno_learning_path\Progress;
 use Drupal\Core\Link;
 use Drupal\Core\Render\Markup;
 use Drupal\Core\Url;
@@ -187,7 +188,7 @@ class DefaultTwigExtension extends AbstractExtension {
           $link = [
             'title' => $joinLabel,
             'route' => 'user.login',
-            'args' => ['destination' => render($url)->toString()],
+            'args' => ['destination' => \Drupal::service('renderer')->render($url)->toString()],
           ];
         }
       }
@@ -204,7 +205,7 @@ class DefaultTwigExtension extends AbstractExtension {
       $link = [
         'title' => t('Create an account and subscribe'),
         'route' => 'user.login',
-        'args' => ['prev_path' => render($url)->toString()],
+        'args' => ['prev_path' => \Drupal::service('renderer')->render($url)->toString()],
       ];
     }
 
@@ -212,7 +213,7 @@ class DefaultTwigExtension extends AbstractExtension {
         $url = Url::fromRoute($link['route'], $link['args'], ['attributes' => $attributes]);
         $l = Link::fromTextAndUrl($link['title'], $url)->toRenderable();
 
-        return render($l);
+        return \Drupal::service('renderer')->render($l);
       }
     }
 
@@ -344,7 +345,7 @@ class DefaultTwigExtension extends AbstractExtension {
             '#type' => 'inline_template',
             '#template' => '<div class="top-text complete"><i class="fi fi-rr-lock"></i><div>{{"Complete"|t}}<br>{{top_text}}<br>{{"before"|t}}</div></div>',
             '#context' => [
-              'top_text' => render($top_text) ?? '',
+              'top_text' => \Drupal::service('renderer')->render($top_text) ?? '',
             ],
           ];
         }
@@ -454,7 +455,7 @@ class DefaultTwigExtension extends AbstractExtension {
       return [];
     }
 
-    /** @var \Drupal\opigno_learning_path\Progress $progress_service */
+    /** @var Progress $progress_service */
     $progress_service = \Drupal::service('opigno_learning_path.progress');
     if ($ajax) {
       $content = $progress_service->getProgressAjaxContainer($group->id(), $account->id(), '', $class);
diff --git a/tests/src/Functional/LearningPathBrowserTestBase.php b/tests/src/Functional/LearningPathBrowserTestBase.php
index 92212fc..2269b1e 100644
--- a/tests/src/Functional/LearningPathBrowserTestBase.php
+++ b/tests/src/Functional/LearningPathBrowserTestBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\opigno_learning_path\Functional;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\user\UserInterface;
+use Drupal\Core\Session\AccountSwitcherInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -26,21 +29,21 @@ abstract class LearningPathBrowserTestBase extends BrowserTestBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * A test user with group creation rights.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $groupCreator;
 
   /**
    * Account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
@@ -49,7 +52,7 @@ abstract class LearningPathBrowserTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->container->get('entity_type.manager');
     $this->accountSwitcher = $this->container->get('account_switcher');
diff --git a/tests/src/Functional/OpignoLinkConditionTest.php b/tests/src/Functional/OpignoLinkConditionTest.php
index c63823d..44517cb 100644
--- a/tests/src/Functional/OpignoLinkConditionTest.php
+++ b/tests/src/Functional/OpignoLinkConditionTest.php
@@ -17,7 +17,7 @@ class OpignoLinkConditionTest extends LearningPathBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // Install dependencies.
     \Drupal::service('module_installer')->install([
diff --git a/tests/src/Functional/OpignoModuleScoreTest.php b/tests/src/Functional/OpignoModuleScoreTest.php
index 3cab634..ef3c573 100644
--- a/tests/src/Functional/OpignoModuleScoreTest.php
+++ b/tests/src/Functional/OpignoModuleScoreTest.php
@@ -14,7 +14,7 @@ class OpignoModuleScoreTest extends LearningPathBrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     \Drupal::service('module_installer')->install([
       'opigno_statistics',
diff --git a/tests/src/Functional/TrainingContentTrait.php b/tests/src/Functional/TrainingContentTrait.php
index 0a2b643..edebdda 100644
--- a/tests/src/Functional/TrainingContentTrait.php
+++ b/tests/src/Functional/TrainingContentTrait.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\Tests\opigno_learning_path\Functional;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\opigno_module\Entity\OpignoAnswer;
+use Drupal\group\Plugin\GroupContentEnablerInterface;
 use Drupal\group\Entity\Group;
 use Drupal\group\Entity\GroupContent;
 use Drupal\opigno_group_manager\Entity\OpignoGroupManagedContent;
@@ -20,12 +25,12 @@ trait TrainingContentTrait {
    * @param array $values
    *   (optional) The values used to create the entity.
    *
-   * @return \Drupal\group\Entity\Group
+   * @return Group
    *   The created group entity of type learning_path.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function createGroup(array $values = []) {
     /* @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
@@ -45,14 +50,14 @@ trait TrainingContentTrait {
   /**
    * Add Module to a Training.
    *
-   * @param \Drupal\group\Entity\Group $training
+   * @param Group $training
    *   Group.
-   * @param \Drupal\opigno_module\Entity\OpignoModule $module
+   * @param OpignoModule $module
    *   Module.
    * @param int $is_mandatory
    *   Content is required.
    *
-   * @return \Drupal\group\Entity\Group
+   * @return Group
    *   The training with contents.
    */
   protected function addModuleToTraining(Group $training, OpignoModule $module, $is_mandatory = 1) {
@@ -68,12 +73,12 @@ trait TrainingContentTrait {
    * @param array $values
    *   Module values.
    *
-   * @return \Drupal\opigno_module\Entity\OpignoModule
+   * @return OpignoModule
    *   The Opigno module with activities.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   protected function createOpignoModule(array $values = []) {
     /* @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
@@ -129,7 +134,7 @@ trait TrainingContentTrait {
    * @return array
    *   An array of activities objects.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function createActivities(array $values, $number = 1) {
     $activities = [];
@@ -159,10 +164,10 @@ trait TrainingContentTrait {
    * @param int $score
    *   Score.
    *
-   * @return \Drupal\opigno_module\Entity\OpignoAnswer
+   * @return OpignoAnswer
    *   Opigno Answer entity.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function createAnswer($activity, $module, $attempt, $uid, $score) {
     $answer = \Drupal::entityTypeManager()->getStorage('opigno_answer')->create([
@@ -184,7 +189,7 @@ trait TrainingContentTrait {
    * Adds user group role.
    */
   protected function addGroupRoleForUser(Group $group, $user, $roles) {
-    /** @var \Drupal\group\Plugin\GroupContentEnablerInterface $plugin */
+    /** @var GroupContentEnablerInterface $plugin */
     $plugin = $group->getGroupType()->getContentPlugin('group_membership');
     $group_content = GroupContent::create([
       'type' => $plugin->getContentTypeConfigId(),
diff --git a/tests/src/FunctionalJavascript/LearningPathWebDriverTestBase.php b/tests/src/FunctionalJavascript/LearningPathWebDriverTestBase.php
index 0915159..2de22cb 100644
--- a/tests/src/FunctionalJavascript/LearningPathWebDriverTestBase.php
+++ b/tests/src/FunctionalJavascript/LearningPathWebDriverTestBase.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\opigno_learning_path\FunctionalJavascript;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\user\UserInterface;
+use Drupal\Core\Session\AccountSwitcherInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\opigno_learning_path\Functional\TrainingContentTrait;
 
@@ -26,21 +29,21 @@ abstract class LearningPathWebDriverTestBase extends WebDriverTestBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * A test user with group creation rights.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $groupCreator;
 
   /**
    * Account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
@@ -49,7 +52,7 @@ abstract class LearningPathWebDriverTestBase extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->entityTypeManager = $this->container->get('entity_type.manager');
     $this->accountSwitcher = $this->container->get('account_switcher');
