modules/contrib/imgix/imgix.install
modules/contrib/imgix/imgix.module
modules/contrib/imgix/src/Entity/ImgixImageStyle.php
modules/contrib/imgix/src/ImgixImageStyleFactory.php
modules/contrib/imgix/src/ImgixImageStyleFactoryInterface.php
modules/contrib/imgix/src/Plugin/ImageEffect/ImgixParamImageEffect.php
modules/contrib/imgix/src/Plugin/ImageEffect/QualityImageEffect.php
modules/contrib/imgix/src/Plugin/ImageEffect/ScaleAndCropImageEffect.php
modules/contrib/imgix/src/Plugin/ImageToolkit/ImgixToolkit.php
modules/contrib/imgix/src/Plugin/ImageToolkit/ImgixToolkitInterface.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/Convert.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/Crop.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/Desaturate.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/ImgixImageToolkitOperationBase.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/ImgixParam.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/Quality.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/Resize.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/Rotate.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/Scale.php
modules/contrib/imgix/src/Plugin/ImageToolkit/Operation/ScaleAndCrop.php

4 files with changes
====================

1) modules/contrib/imgix/src/Plugin/ImageToolkit/ImgixToolkit.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\imgix\Plugin\ImageToolkit;

+use Drupal\Core\ImageToolkit\ImageToolkitManager;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\ImageToolkit\ImageToolkitBase;
 use Drupal\Core\ImageToolkit\ImageToolkitInterface;
@@ @@
   /**
    * The image toolkit manager.
    *
-   * @var \Drupal\Core\ImageToolkit\ImageToolkitManager
+   * @var ImageToolkitManager
    */
   protected $imageToolkitManager;

@@ @@
   /**
    * The fallback image toolkit.
    *
-   * @var \Drupal\Core\ImageToolkit\ImageToolkitInterface
+   * @var ImageToolkitInterface
    */
   protected $fallbackToolkit;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/imgix/src/ImgixImageStyleFactory.php:13

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getImageStyleByParameters(array $params): ImageStyleInterface {
-    /** @var \Drupal\image\Entity\ImageStyle $imageStyle */
+    /** @var ImageStyle $imageStyle */
     $imageStyle = ImageStyle::create();

     /* @see Convert */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/imgix/src/Entity/ImgixImageStyle.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\imgix\Entity;

+use Drupal\Core\Image\ImageInterface;
 use Drupal\image\Entity\ImageStyle;
 use Drupal\imgix\Plugin\ImageToolkit\ImgixToolkit;
 use Imgix\UrlBuilder;
@@ @@
    * {@inheritdoc}
    */
   public function buildUrl($uri, $clean_urls = NULL) {
-    /** @var \Drupal\Core\Image\ImageInterface $image */
+    /** @var ImageInterface $image */
     $image = \Drupal::service('image.factory')->get($uri);
     $toolkit = $image->getToolkit();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/imgix/imgix.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\imgix\ImgixImageStyleFactoryInterface;
 /**
  * @file
  * Update hooks for the Imgix module.
@@ @@
  * Convert Imgix presets to image styles.
  */
 function imgix_update_8004(): string {
-  /** @var \Drupal\imgix\ImgixImageStyleFactoryInterface $factory */
+  /** @var ImgixImageStyleFactoryInterface $factory */
   $factory = \Drupal::service('imgix.image_style_factory');
   $config = \Drupal::configFactory()->getEditable('imgix.presets');
   $count = 0;
@@ @@
     ->condition('type', 'imgix')
     ->execute();

-  /** @var \Drupal\field\Entity\FieldStorageConfig $fieldStorage */
+  /** @var FieldStorageConfig $fieldStorage */
   foreach ($fieldStorageStorage->loadMultiple($fieldStorageConfigNames) as $fieldStorage) {
     $entityTypeId = $fieldStorage->getTargetEntityTypeId();
     $fieldName = $fieldStorage->getName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

