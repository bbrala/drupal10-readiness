diff --git a/language_combination.info.yml b/language_combination.info.yml
index befe203..fa5c4dd 100644
--- a/language_combination.info.yml
+++ b/language_combination.info.yml
@@ -1,8 +1,7 @@
 name: 'Language Combination'
 description: 'Provides a field that allows users to select language combinations.'
 type: module
-core: '8.x'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: 'Field types'
 dependencies:
   - drupal:language
diff --git a/language_combination.module b/language_combination.module
index 95d0ca5..995098b 100644
--- a/language_combination.module
+++ b/language_combination.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Language\LanguageInterface;
+use Drupal\Core\Entity\EntityFieldManager;
 /**
  * @file
  * Main module file for the Local Translator language combination module.
@@ -49,7 +51,7 @@ function language_combination_languages_predefined_list() {
  */
 function language_combination_form_views_exposed_form_alter(&$form, FormStateInterface $form_state) {
   $languages = array_map(function ($language) {
-    /** @var \Drupal\Core\Language\LanguageInterface $language */
+    /** @var LanguageInterface $language */
     return $language->getName();
   }, \Drupal::languageManager()->getLanguages());
   $children = Element::children($form);
@@ -73,7 +75,7 @@ function language_combination_form_views_exposed_form_alter(&$form, FormStateInt
  * Implements hook_views_data_alter().
  */
 function language_combination_views_data_alter(array &$data) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $manager */
+  /** @var EntityFieldManager $manager */
   $manager = \Drupal::service('entity_field.manager');
   $fields  = $manager->getFieldMapByFieldType('language_combination');
   if (!empty($fields)) {
diff --git a/tests/src/Functional/LanguageCombinationTest.php b/tests/src/Functional/LanguageCombinationTest.php
index 4c1ff6f..05f8ccb 100644
--- a/tests/src/Functional/LanguageCombinationTest.php
+++ b/tests/src/Functional/LanguageCombinationTest.php
@@ -34,7 +34,7 @@ class LanguageCombinationTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $user = $this->drupalCreateUser([
@@ -94,7 +94,8 @@ class LanguageCombinationTest extends BrowserTestBase {
       'language_combination[0][language_source]' => 'fr',
       'language_combination[0][language_target]' => 'fr',
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains("The 'from' and 'to' language fields can't have the same value.");
   }
 
@@ -108,7 +109,8 @@ class LanguageCombinationTest extends BrowserTestBase {
       'language_combination[0][language_source]' => 'fr',
       'language_combination[0][language_target]' => 'de',
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
     $this->assertSession()->pageTextContains('French to German');
   }
 
@@ -124,7 +126,8 @@ class LanguageCombinationTest extends BrowserTestBase {
       'language_combination[1][language_source]' => 'en',
       'language_combination[1][language_target]' => 'de',
     ];
-    $this->drupalPostForm('node/add/article', $edit, t('Save'));
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, t('Save'));
 
     $node = \Drupal::entityTypeManager()->getStorage('node')->load('1');
 
