modules/contrib/resque/modules/resque_queue_example/resque_queue_example.module
modules/contrib/resque/modules/resque_queue_example/src/Plugin/QueueWorker/Resque.php
modules/contrib/resque/resque.app.php
modules/contrib/resque/src/DrupalWorkerJob.php
modules/contrib/resque/src/Event/AfterEnqueue.php
modules/contrib/resque/src/Event/AfterFork.php
modules/contrib/resque/src/Event/AfterPerform.php
modules/contrib/resque/src/Event/AfterSchedule.php
modules/contrib/resque/src/Event/BeforeDelayedEnqueue.php
modules/contrib/resque/src/Event/BeforeEnqueue.php
modules/contrib/resque/src/Event/BeforeFirstFork.php
modules/contrib/resque/src/Event/BeforeFork.php
modules/contrib/resque/src/Event/BeforePerform.php
modules/contrib/resque/src/Event/EventBase.php
modules/contrib/resque/src/Event/EventInterface.php
modules/contrib/resque/src/Event/OnFailure.php
modules/contrib/resque/src/EventListenerInterface.php
modules/contrib/resque/src/EventListenerManager.php
modules/contrib/resque/src/Queue/QueueResqueFactory.php
modules/contrib/resque/src/Queue/Resque.php

5 files with changes
====================

1) modules/contrib/resque/src/Queue/QueueResqueFactory.php:14

    ---------- begin diff ----------
@@ @@
    * @param string $name
    *   Name of the queue.
    *
-   * @return \Drupal\resque\Queue\Resque
+   * @return Resque
    *   Queue manager instance.
    */
   public function get(string $name): Resque {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/resque/src/EventListenerManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\resque;

+use Psr\Container\ContainerInterface;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal;
 use Drupal\Core\Database\Database;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
@@ @@
   /**
    * Event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $dispatcher;

@@ @@
   /**
    * The service container.
    *
-   * @var \Psr\Container\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;

@@ @@
   /**
    * Drupal kernel instance.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected $kernel;

@@ @@
   /**
    * EventListenerManager constructor.
    *
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   Drupal kernel.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   Event dispatcher instance.
    */
   public function __construct(DrupalKernelInterface $kernel, EventDispatcherInterface $dispatcher) {
@@ @@
   /**
    * Event dispatcher wrapper.
    *
-   * @param \Symfony\Component\EventDispatcher\Event|mixed $event
+   * @param Event|mixed $event
    *   Event which need to be dispatched.
    */
   protected function dispatch(EventInterface $event): void {
@@ @@
     if ($this->bc) {
       /* @deprecated since 2.0.0 and removed from 2.1.0. */
       // Symfony 3.
-      $this->dispatcher->dispatch($event->getName(), $event);
+      $this->dispatcher->dispatch($event, $event->getName());
     }
     else {
       // Symfony 4+.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/resque/src/Event/EventBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\resque\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Class EventBase.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/resque/src/DrupalWorkerJob.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\resque;

+use Drupal\Core\Queue\QueueWorkerManager;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Psr\Container\ContainerInterface;

 /**
@@ @@
   /**
    * Queue worker manager instance.
    *
-   * @var \Drupal\Core\Queue\QueueWorkerManager|mixed
+   * @var QueueWorkerManager|mixed
    */
   protected $queueWorkerManager;

@@ @@
   /**
    * Inject require dependencies to perform queue item using Drupal API.
    *
-   * @param \Psr\Container\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container instance.
    */
   public function getDependencies(ContainerInterface $container): void {
@@ @@
   /**
    * Perform queue item.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    * @throws \Exception
    */
   public function perform(): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/resque/modules/resque_queue_example/src/Plugin/QueueWorker/Resque.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Example of injected service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 5 files have been changed by Rector                                       

