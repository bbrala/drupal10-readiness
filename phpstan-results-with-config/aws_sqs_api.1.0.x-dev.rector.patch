diff --git a/src/Controller/QueueList.php b/src/Controller/QueueList.php
index eb2b7da..dfb603d 100644
--- a/src/Controller/QueueList.php
+++ b/src/Controller/QueueList.php
@@ -18,23 +18,23 @@ class QueueList extends ControllerBase {
   /**
    * The Drupal SQS queue information service.
    *
-   * @var \Drupal\aws_sqs_api\Service\DrupalSqsQueueInformation
+   * @var DrupalSqsQueueInformation
    */
   protected $sqsQueueInformation;
 
   /**
    * The queue factory service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\aws_sqs_api\Service\DrupalSqsQueueInformation $info_svc
+   * @param DrupalSqsQueueInformation $info_svc
    *   The AWS information service.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory service.
    */
   public function __construct(DrupalSqsQueueInformation $info_svc, QueueFactory $queue_factory) {
@@ -136,7 +136,7 @@ class QueueList extends ControllerBase {
    *
    * @todo Add 'Revert overrides' option.
    *
-   * @param \Drupal\aws_sqs_api\Queue\AwsSqsQueue $queue
+   * @param AwsSqsQueue $queue
    *   The queue.
    *
    * @return array
diff --git a/src/Event/SqsQueueConfigEvent.php b/src/Event/SqsQueueConfigEvent.php
index ac152ea..db7599d 100644
--- a/src/Event/SqsQueueConfigEvent.php
+++ b/src/Event/SqsQueueConfigEvent.php
@@ -36,14 +36,14 @@ class SqsQueueConfigEvent extends Event {
   /**
    * Queue configuration definition.
    *
-   * @var \Drupal\aws_sqs_api\Queue\Configuration
+   * @var Configuration
    */
   protected $config;
 
   /**
    * Set the configuration definition.
    *
-   * @param \Drupal\aws_sqs_api\Queue\Configuration $config
+   * @param Configuration $config
    *   The queue configuration definition.
    */
   public function setConfiguration(Configuration $config) {
@@ -53,7 +53,7 @@ class SqsQueueConfigEvent extends Event {
   /**
    * Get the configuration definition.
    *
-   * @return \Drupal\aws_sqs_api\Queue\Configuration
+   * @return Configuration
    *   The queue configuration definition.
    */
   public function getConfiguration() {
diff --git a/src/EventSubscriber/SqsQueueCreate/SetFromGlobalDefaults.php b/src/EventSubscriber/SqsQueueCreate/SetFromGlobalDefaults.php
index 75dfa37..92188fb 100644
--- a/src/EventSubscriber/SqsQueueCreate/SetFromGlobalDefaults.php
+++ b/src/EventSubscriber/SqsQueueCreate/SetFromGlobalDefaults.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\aws_sqs_api\EventSubscriber\SqsQueueCreate;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\aws_sqs_api\Event\SqsQueueConfigEvent;
 use Drupal\aws_sqs_api\Form\GlobalDefaultsConfigurationForm;
 use Drupal\aws_sqs_api\Queue\AwsSqsQueue;
@@ -17,14 +18,14 @@ class SetFromGlobalDefaults implements EventSubscriberInterface {
   /**
    * The default config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $defaultConfig;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory service.
    */
   public function __construct(ConfigFactory $config_factory) {
@@ -47,7 +48,7 @@ class SetFromGlobalDefaults implements EventSubscriberInterface {
   /**
    * Set the configs according to the global defaults.
    *
-   * @param \Drupal\aws_sqs_api\Event\SqsQueueConfigEvent $event
+   * @param SqsQueueConfigEvent $event
    *   The SQS queue config auto-discovery event.
    */
   public function configure(SqsQueueConfigEvent $event) {
diff --git a/src/EventSubscriber/SqsQueueCreate/SetFromPlugin.php b/src/EventSubscriber/SqsQueueCreate/SetFromPlugin.php
index abae2d8..c484dc6 100644
--- a/src/EventSubscriber/SqsQueueCreate/SetFromPlugin.php
+++ b/src/EventSubscriber/SqsQueueCreate/SetFromPlugin.php
@@ -26,7 +26,7 @@ class SetFromPlugin implements EventSubscriberInterface {
   /**
    * Constructor.
    *
-   * @param \Drupal\aws_sqs_api\Event\SqsQueueConfigEvent $event
+   * @param SqsQueueConfigEvent $event
    *   The SQS queue config auto-discovery event.
    */
   public function configure(SqsQueueConfigEvent $event) {
diff --git a/src/EventSubscriber/SqsQueueCreate/SetFromQueueConfig.php b/src/EventSubscriber/SqsQueueCreate/SetFromQueueConfig.php
index 214746d..efa98c7 100644
--- a/src/EventSubscriber/SqsQueueCreate/SetFromQueueConfig.php
+++ b/src/EventSubscriber/SqsQueueCreate/SetFromQueueConfig.php
@@ -15,14 +15,14 @@ class SetFromQueueConfig implements EventSubscriberInterface {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory service.
    */
   public function __construct(ConfigFactory $config_factory) {
@@ -45,7 +45,7 @@ class SetFromQueueConfig implements EventSubscriberInterface {
   /**
    * Set the configs according to the global defaults.
    *
-   * @param \Drupal\aws_sqs_api\Event\SqsQueueConfigEvent $event
+   * @param SqsQueueConfigEvent $event
    *   The SQS queue config auto-discovery event.
    */
   public function configure(SqsQueueConfigEvent $event) {
diff --git a/src/EventSubscriber/SqsQueueCreate/SetHttpHandler.php b/src/EventSubscriber/SqsQueueCreate/SetHttpHandler.php
index 0827a21..7d903ff 100644
--- a/src/EventSubscriber/SqsQueueCreate/SetHttpHandler.php
+++ b/src/EventSubscriber/SqsQueueCreate/SetHttpHandler.php
@@ -14,7 +14,7 @@ class SetHttpHandler implements EventSubscriberInterface {
   /**
    * The http client service.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
@@ -24,7 +24,7 @@ class SetHttpHandler implements EventSubscriberInterface {
    * This ensures the SQS requests are handled by Drupal's HTTP client, so that
    * any client middleware (proxies/logging/etc) are applied.
    *
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   The HTTP client service.
    */
   public function __construct(ClientInterface $http_client) {
@@ -43,7 +43,7 @@ class SetHttpHandler implements EventSubscriberInterface {
   /**
    * Attach the HTTP client handler.
    *
-   * @param \Drupal\aws_sqs_api\Event\SqsQueueConfigEvent $event
+   * @param SqsQueueConfigEvent $event
    *   The SQS queue config auto-discovery event.
    */
   public function configure(SqsQueueConfigEvent $event) {
diff --git a/src/Form/ConfigureQueueForm.php b/src/Form/ConfigureQueueForm.php
index c77b92e..e25d38b 100644
--- a/src/Form/ConfigureQueueForm.php
+++ b/src/Form/ConfigureQueueForm.php
@@ -29,14 +29,14 @@ class ConfigureQueueForm extends ConfigFormBase {
    *
    * This is used to query a list of regions.
    *
-   * @var \Drupal\aws_sqs_api\Service\AwsInformation
+   * @var AwsInformation
    */
   protected $awsInformation;
 
   /**
    * Construct a configuration form for SQS defaults.
    *
-   * @param \Drupal\aws_sqs_api\Service\AwsInformation $aws_information
+   * @param AwsInformation $aws_information
    *   AWS information service.
    */
   public function __construct(AwsInformation $aws_information) {
diff --git a/src/Form/GlobalDefaultsConfigurationForm.php b/src/Form/GlobalDefaultsConfigurationForm.php
index d82cedc..2b109b6 100644
--- a/src/Form/GlobalDefaultsConfigurationForm.php
+++ b/src/Form/GlobalDefaultsConfigurationForm.php
@@ -28,14 +28,14 @@ class GlobalDefaultsConfigurationForm extends ConfigFormBase {
    *
    * This is used to query a list of regions.
    *
-   * @var \Drupal\aws_sqs_api\Service\AwsInformation
+   * @var AwsInformation
    */
   protected $awsInformation;
 
   /**
    * Construct a configuration form for SQS defaults.
    *
-   * @param \Drupal\aws_sqs_api\Service\AwsInformation $aws_information
+   * @param AwsInformation $aws_information
    *   AWS information service.
    */
   public function __construct(AwsInformation $aws_information) {
diff --git a/src/Form/PurgeQueueForm.php b/src/Form/PurgeQueueForm.php
index a74d994..5475ea4 100644
--- a/src/Form/PurgeQueueForm.php
+++ b/src/Form/PurgeQueueForm.php
@@ -15,7 +15,7 @@ class PurgeQueueForm extends ConfirmFormBase {
   /**
    * AWS SQS queue implementation.
    *
-   * @var \Drupal\aws_sqs_api\Queue\AwsSqsQueue
+   * @var AwsSqsQueue
    */
   protected $queue;
 
diff --git a/src/Queue/AwsSqsQueue.php b/src/Queue/AwsSqsQueue.php
index 36597ee..e2df4c1 100644
--- a/src/Queue/AwsSqsQueue.php
+++ b/src/Queue/AwsSqsQueue.php
@@ -80,7 +80,7 @@ class AwsSqsQueue implements QueueInterface {
   /**
    * Configuration for this queue implementation.
    *
-   * @var \Drupal\aws_sqs_api\Queue\Configuration
+   * @var Configuration
    */
   protected $queueConfiguration;
 
@@ -96,7 +96,7 @@ class AwsSqsQueue implements QueueInterface {
   /**
    * Drupal watchdog logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -121,7 +121,7 @@ class AwsSqsQueue implements QueueInterface {
   /**
    * Create a Drupal queue class to integrate with AWS SQS.
    *
-   * @param \Drupal\aws_sqs_api\Queue\Configuration $config
+   * @param Configuration $config
    *   The configuration properties for this queue.
    */
   public function __construct(Configuration $config) {
@@ -187,7 +187,7 @@ class AwsSqsQueue implements QueueInterface {
   /**
    * Set the serializer service for JSON.
    *
-   * @param \Drupal\serialization\Encoder\JsonEncoder $serializer
+   * @param JsonEncoder $serializer
    *   The JSON serializer service.
    */
   public function setSerializerJson(JsonEncoder $serializer) {
@@ -197,7 +197,7 @@ class AwsSqsQueue implements QueueInterface {
   /**
    * Set the serializer service for XML.
    *
-   * @param \Drupal\serialization\Encoder\XmlEncoder $serializer
+   * @param XmlEncoder $serializer
    *   The XML serializer service.
    */
   public function setSerializerXml(XmlEncoder $serializer) {
@@ -207,7 +207,7 @@ class AwsSqsQueue implements QueueInterface {
   /**
    * Set the logger service.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The logger service.
    */
   public function setLogger(LoggerInterface $logger) {
@@ -313,7 +313,7 @@ class AwsSqsQueue implements QueueInterface {
   /**
    * Get the configuration object.
    *
-   * @return \Drupal\aws_sqs_api\Queue\Configuration
+   * @return Configuration
    *   The configuration object.
    */
   public function getConfiguration() {
diff --git a/src/Routing/ParamConverter/QueueConverter.php b/src/Routing/ParamConverter/QueueConverter.php
index 0337d5a..ad17eff 100644
--- a/src/Routing/ParamConverter/QueueConverter.php
+++ b/src/Routing/ParamConverter/QueueConverter.php
@@ -15,14 +15,14 @@ class QueueConverter implements ParamConverterInterface {
   /**
    * The queue factory service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * Constructs a new paramater upcaster for queue IDs.
    *
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory service..
    */
   public function __construct(QueueFactory $queue_factory) {
@@ -34,7 +34,7 @@ class QueueConverter implements ParamConverterInterface {
    */
   public function convert($value, $definition, $name, array $defaults) {
     if (!empty($value) && is_string($value)) {
-      /** @var \Drupal\aws_sqs_api\Queue\AwsSqsQueue */
+      /** @var AwsSqsQueue */
       if ($queue = $this->queueFactory->get($value)) {
         if ($queue instanceof AwsSqsQueue) {
           return $queue;
diff --git a/src/Service/AwsClientFactory.php b/src/Service/AwsClientFactory.php
index 1f2bc84..5d6d429 100644
--- a/src/Service/AwsClientFactory.php
+++ b/src/Service/AwsClientFactory.php
@@ -36,7 +36,7 @@ class AwsClientFactory {
   /**
    * Constructor.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The Symfony event dispatcher.
    */
   public function __construct(EventDispatcherInterface $dispatcher) {
@@ -50,7 +50,7 @@ class AwsClientFactory {
    *   (optional) Default arguments to pass to the Ec2Client constructor.
    *   Arguments may be altered by the configuration event.
    *
-   * @return \Aws\Ec2\Ec2Client
+   * @return Ec2Client
    *   The EC2 client.
    */
   public function ec2Client(array $args = []) {
@@ -64,7 +64,7 @@ class AwsClientFactory {
    *   (optional) Default arguments to pass to the SqsClient constructor.
    *   Arguments may be altered by the configuration event.
    *
-   * @return \Aws\Sqs\SqsClient
+   * @return SqsClient
    *   The SQS client.
    */
   public function sqsClient(array $args = []) {
diff --git a/src/Service/AwsInformation.php b/src/Service/AwsInformation.php
index 5e4f628..174efbe 100644
--- a/src/Service/AwsInformation.php
+++ b/src/Service/AwsInformation.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\aws_sqs_api\Service;
 
+use Aws\Result;
 /**
  * Retrieve information from AWS about available regions and queues.
  */
@@ -10,14 +11,14 @@ class AwsInformation {
   /**
    * AWS client factory service.
    *
-   * @var \Drupal\aws_sqs_api\Service\AwsClientFactory
+   * @var AwsClientFactory
    */
   protected $clientFactory;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\aws_sqs_api\Service\AwsClientFactory $client_factory
+   * @param AwsClientFactory $client_factory
    *   The client factory service.
    */
   public function __construct(AwsClientFactory $client_factory) {
@@ -38,7 +39,7 @@ class AwsInformation {
     $args = $region ? ['region' => $region] : [];
     $client = $this->clientFactory->sqsClient($args);
 
-    /** @var \Aws\Result */
+    /** @var Result */
     $result = $client->listQueues([]);
 
     if ($urls = $result->get('QueueUrls')) {
diff --git a/src/Service/AwsSqsQueueFactory.php b/src/Service/AwsSqsQueueFactory.php
index 7cfb3b8..0ade469 100644
--- a/src/Service/AwsSqsQueueFactory.php
+++ b/src/Service/AwsSqsQueueFactory.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\aws_sqs_api\Service;
 
+use Psr\Log\LoggerInterface;
+use Drupal\aws_sqs_api\Queue\Configuration;
 use Drupal\aws_sqs_api\Queue\AwsSqsQueue;
 use Drupal\Core\Logger\LoggerChannelFactory;
 use Drupal\serialization\Encoder\JsonEncoder;
@@ -15,41 +17,41 @@ class AwsSqsQueueFactory {
   /**
    * Drupal queue information service.
    *
-   * @var \Drupal\aws_sqs_api\Service\DrupalSqsQueueInformation
+   * @var DrupalSqsQueueInformation
    */
   protected $drupalQueueInfoService;
 
   /**
    * Drupal watchdog logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Drupal JSON serializer service.
    *
-   * @var \Drupal\serialization\Encoder\JsonEncoder
+   * @var JsonEncoder
    */
   protected $serializerJson;
 
   /**
    * Drupal XML serializer service.
    *
-   * @var \Drupal\serialization\Encoder\XmlEncoder
+   * @var XmlEncoder
    */
   protected $serializerXml;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\aws_sqs_api\Service\DrupalSqsQueueInformation $queue_info
+   * @param DrupalSqsQueueInformation $queue_info
    *   Queue information service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   Logger factory.
-   * @param \Drupal\serialization\Encoder\JsonEncoder $serializer_json
+   * @param JsonEncoder $serializer_json
    *   Serializer service for JSON.
-   * @param \Drupal\serialization\Encoder\XmlEncoder $serializer_xml
+   * @param XmlEncoder $serializer_xml
    *   Serializer service for XML.
    */
   public function __construct(
@@ -74,7 +76,7 @@ class AwsSqsQueueFactory {
    *   Return an AwsSqsQueue object.
    */
   public function get($name) {
-    /** @var \Drupal\aws_sqs_api\Queue\Configuration */
+    /** @var Configuration */
     $configuration = $this->drupalQueueInfoService->getDefinition($name);
 
     $queue = new AwsSqsQueue($configuration);
diff --git a/src/Service/DrupalSqsQueueInformation.php b/src/Service/DrupalSqsQueueInformation.php
index 5f9dedb..0f59b44 100644
--- a/src/Service/DrupalSqsQueueInformation.php
+++ b/src/Service/DrupalSqsQueueInformation.php
@@ -16,7 +16,7 @@ class DrupalSqsQueueInformation {
   /**
    * The settings object.
    *
-   * @var \Drupal\Core\Site\Settings
+   * @var Settings
    */
   protected $settings;
 
@@ -25,25 +25,25 @@ class DrupalSqsQueueInformation {
    *
    * This is used to fetch the queue worker plugins and definitions.
    *
-   * @var \Drupal\Core\Queue\QueueWorkerManagerInterface
+   * @var QueueWorkerManagerInterface
    */
   protected $queueWorkerManager;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The Drupal settings service.
-   * @param \Drupal\Core\Queue\QueueWorkerManagerInterface $queue_worker_manager
+   * @param QueueWorkerManagerInterface $queue_worker_manager
    *   Queue worker manager service, to load the plugin definitions.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   The Symfony event dispatcher.
    */
   public function __construct(Settings $settings, QueueWorkerManagerInterface $queue_worker_manager, EventDispatcherInterface $dispatcher) {
@@ -65,7 +65,7 @@ class DrupalSqsQueueInformation {
   /**
    * Get the config definition for a particular queue.
    *
-   * @return \Drupal\aws_sqs_api\Queue\Configuration
+   * @return Configuration
    *   A queue configuration definition.
    */
   public function getDefinition($name) {
