diff --git a/search_api_attachments.api.php b/search_api_attachments.api.php
index c526418..fc66f7a 100644
--- a/search_api_attachments.api.php
+++ b/search_api_attachments.api.php
@@ -1,21 +1,21 @@
 <?php
 
+use Drupal\search_api\Item\ItemInterface;
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Hooks provided by the "Search API attachments" module.
  */
-
 /**
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Determines whether an attachment should be indexed.
  *
  * @param object $file
  *   A file object.
- * @param \Drupal\search_api\Item\ItemInterface $item
+ * @param ItemInterface $item
  *   The item the file was referenced in.
  * @param string $field_name
  *   The name of the field the file was referenced in.
@@ -23,7 +23,7 @@
  * @return bool|null
  *   Return FALSE if the attachment should not be indexed.
  */
-function hook_search_api_attachments_indexable($file, \Drupal\search_api\Item\ItemInterface $item, $field_name) {
+function hook_search_api_attachments_indexable($file, ItemInterface $item, $field_name) {
   // Don't index files on entities owned by our bulk upload bot accounts.
   if (in_array($item->getOriginalObject()->uid, my_module_blocked_uids())) {
     return FALSE;
@@ -35,10 +35,10 @@ function hook_search_api_attachments_indexable($file, \Drupal\search_api\Item\It
  *
  * @param object $file
  *   A file object.
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity where the file was referenced in.
  */
-function hook_search_api_attachments_content_extracted($file, \Drupal\Core\Entity\EntityInterface $entity) {
+function hook_search_api_attachments_content_extracted($file, EntityInterface $entity) {
   // Search for nodes using media item in specific fields.
   if ($entity->getEntityTypeId() === 'media') {
     $query = \Drupal::entityQuery('node')
diff --git a/search_api_attachments.module b/search_api_attachments.module
index 07b670f..cac75c7 100644
--- a/search_api_attachments.module
+++ b/search_api_attachments.module
@@ -37,7 +37,7 @@ function search_api_attachments_cache_flush() {
 /**
  * Helper function to delete a file extracted data cache.
  *
- * @param \Drupal\file\Entity\File $file
+ * @param File $file
  *   The file object.
  */
 function _search_api_attachments_delete_cache(File $file) {
diff --git a/src/ExtractFileValidator.php b/src/ExtractFileValidator.php
index 944c5c0..5478e1f 100644
--- a/src/ExtractFileValidator.php
+++ b/src/ExtractFileValidator.php
@@ -17,14 +17,14 @@ class ExtractFileValidator {
   /**
    * The mime type guesser.
    *
-   * @var \Symfony\Component\Mime\MimeTypeGuesserInterface
+   * @var MimeTypeGuesserInterface
    */
   protected $mimeTypeGuesser;
 
   /**
    * Constructs a new ExtractFileValidator class.
    *
-   * @param \Symfony\Component\Mime\MimeTypeGuesserInterface $mimeTypeGuesser
+   * @param MimeTypeGuesserInterface $mimeTypeGuesser
    *   Mime type guesser service.
    */
   public function __construct(MimeTypeGuesserInterface $mimeTypeGuesser) {
diff --git a/src/Form/TextExtractorFormSettings.php b/src/Form/TextExtractorFormSettings.php
index b8258cd..929e6f5 100644
--- a/src/Form/TextExtractorFormSettings.php
+++ b/src/Form/TextExtractorFormSettings.php
@@ -25,14 +25,14 @@ class TextExtractorFormSettings extends ConfigFormBase {
   /**
    * Text extractor plugin Manager.
    *
-   * @var \Drupal\search_api_attachments\TextExtractorPluginManager
+   * @var TextExtractorPluginManager
    */
   private $textExtractorPluginManager;
 
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -216,7 +216,7 @@ class TextExtractorFormSettings extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    */
   public function buildTextExtractorConfigForm(array &$form, FormStateInterface $form_state) {
@@ -264,7 +264,7 @@ class TextExtractorFormSettings extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    */
   public function buildTextExtractorTestResultForm(array &$form, FormStateInterface $form_state) {
@@ -303,7 +303,7 @@ class TextExtractorFormSettings extends ConfigFormBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state object.
    *
    * @return array
@@ -328,7 +328,7 @@ class TextExtractorFormSettings extends ConfigFormBase {
     $file = $this->entityTypeManager->getStorage('file')->loadByProperties($values);
     if (empty($file)) {
       // Copy the source file to public directory.
-      $source = drupal_get_path('module', 'search_api_attachments');
+      $source = \Drupal::service('extension.list.module')->getPath('search_api_attachments');
       $source .= '/data/search_api_attachments_test_extraction.pdf';
       copy($source, $filepath);
       // Create the file object.
@@ -347,7 +347,7 @@ class TextExtractorFormSettings extends ConfigFormBase {
   /**
    * Returns the text extractor plugin manager.
    *
-   * @return \Drupal\search_api_attachments\TextExtractorPluginManager
+   * @return TextExtractorPluginManager
    *   The text extractor plugin manager.
    */
   protected function getTextExtractorPluginManager() {
diff --git a/src/Plugin/Field/FieldFormatter/ExtractedText.php b/src/Plugin/Field/FieldFormatter/ExtractedText.php
index f095882..3c6b131 100644
--- a/src/Plugin/Field/FieldFormatter/ExtractedText.php
+++ b/src/Plugin/Field/FieldFormatter/ExtractedText.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_attachments\Plugin\Field\FieldFormatter;
 
+use Drupal\search_api_attachments\TextExtractorPluginInterface;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -33,49 +34,49 @@ class ExtractedText extends FileFormatterBase implements ContainerFactoryPluginI
   /**
    * Files extractor config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Search API Processor Plugin Manager.
    *
-   * @var \Drupal\search_api\Processor\ProcessorPluginManager
+   * @var ProcessorPluginManager
    */
   protected $processorPluginManager;
 
   /**
    * Search API Attachments Text Extractor Plugin Manager.
    *
-   * @var \Drupal\search_api_attachments\TextExtractorPluginManager
+   * @var TextExtractorPluginManager
    */
   protected $textExtractorPluginManager;
 
   /**
    * FilesExtractor processor plugin.
    *
-   * @var \Drupal\search_api_attachments\Plugin\search_api\processor\FilesExtractor
+   * @var FilesExtractor
    */
   protected $extractor;
 
   /**
    * Extraction plugin.
    *
-   * @var \Drupal\search_api_attachments\TextExtractorPluginInterface
+   * @var TextExtractorPluginInterface
    */
   protected $extractionMethod;
 
   /**
    * The extract file validator service.
    *
-   * @var \Drupal\search_api_attachments\ExtractFileValidator
+   * @var ExtractFileValidator
    */
   protected $extractFileValidator;
 
@@ -86,7 +87,7 @@ class ExtractedText extends FileFormatterBase implements ContainerFactoryPluginI
    *   The plugin id.
    * @param mixed $pluginDefinition
    *   The plugin definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $fieldDefinition
+   * @param FieldDefinitionInterface $fieldDefinition
    *   The field definitions.
    * @param array $settings
    *   The settings.
@@ -96,15 +97,15 @@ class ExtractedText extends FileFormatterBase implements ContainerFactoryPluginI
    *   The view mode.
    * @param array $thirdPartySettings
    *   The third party settings.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
-   * @param \Drupal\search_api\Processor\ProcessorPluginManager $processorPluginManager
+   * @param ProcessorPluginManager $processorPluginManager
    *   The processor plugin manager.
-   * @param \Drupal\search_api_attachments\TextExtractorPluginManager $textExtractorPluginManager
+   * @param TextExtractorPluginManager $textExtractorPluginManager
    *   The text extractor plugin manager.
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration.
-   * @param \Drupal\search_api_attachments\ExtractFileValidator $extractFileValidator
+   * @param ExtractFileValidator $extractFileValidator
    *   The extract file validator.
    */
   public function __construct($pluginId, $pluginDefinition, FieldDefinitionInterface $fieldDefinition, array $settings, $label, $viewMode, array $thirdPartySettings, ModuleHandlerInterface $moduleHandler, ProcessorPluginManager $processorPluginManager, TextExtractorPluginManager $textExtractorPluginManager, Config $config, ExtractFileValidator $extractFileValidator) {
@@ -175,9 +176,9 @@ class ExtractedText extends FileFormatterBase implements ContainerFactoryPluginI
   /**
    * Extracts content of given file.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity the file is attached to.
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
    *
    * @return string|null
diff --git a/src/Plugin/QueueWorker/ExtractorQueue.php b/src/Plugin/QueueWorker/ExtractorQueue.php
index a657659..fa2077b 100644
--- a/src/Plugin/QueueWorker/ExtractorQueue.php
+++ b/src/Plugin/QueueWorker/ExtractorQueue.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\search_api_attachments\Plugin\QueueWorker;
 
+use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\TranslatableInterface;
 use Drupal\Core\KeyValueStore\KeyValueFactoryInterface;
@@ -29,35 +30,35 @@ class ExtractorQueue extends QueueWorkerBase implements ContainerFactoryPluginIn
   /**
    * Text extractor service.
    *
-   * @var \Drupal\search_api_attachments\TextExtractorPluginManager
+   * @var TextExtractorPluginManager
    */
   protected $textExtractorPluginManager;
 
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Key value service.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueFactoryInterface
+   * @var KeyValueFactoryInterface
    */
   protected $keyValue;
 
   /**
    * The logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -95,7 +96,7 @@ class ExtractorQueue extends QueueWorkerBase implements ContainerFactoryPluginIn
    * @return object
    *   The plugin.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   protected function getExtractorPlugin() {
     // Get extractor configuration.
diff --git a/src/Plugin/search_api/processor/FilesExtractor.php b/src/Plugin/search_api/processor/FilesExtractor.php
index f81e375..52dbc2e 100644
--- a/src/Plugin/search_api/processor/FilesExtractor.php
+++ b/src/Plugin/search_api/processor/FilesExtractor.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\search_api_attachments\Plugin\search_api\processor;
 
+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Utility\Bytes;
@@ -67,56 +69,56 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
   /**
    * The plugin manager for our text extractor.
    *
-   * @var \Drupal\search_api_attachments\TextExtractorPluginManager
+   * @var TextExtractorPluginManager
    */
   protected $textExtractorPluginManager;
 
   /**
    * The extract file validator service.
    *
-   * @var \Drupal\search_api_attachments\ExtractFileValidator
+   * @var ExtractFileValidator
    */
   protected $extractFileValidator;
 
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Key value service.
    *
-   * @var \Drupal\Core\KeyValueStore\KeyValueFactoryInterface
+   * @var KeyValueFactoryInterface
    */
   protected $keyValue;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Search API field helper.
    *
-   * @var \Drupal\search_api\Utility\FieldsHelperInterface
+   * @var FieldsHelperInterface
    */
   protected $fieldHelper;
 
   /**
    * The logger service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -210,7 +212,7 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
             // Get type to manage media entity reference case.
             $type = $entity->get($field_name)->getFieldDefinition()->getType();
             if ($type == 'entity_reference') {
-              /** @var \Drupal\Core\Field\BaseFieldDefinition $field_def */
+              /** @var BaseFieldDefinition $field_def */
               $field_def = $entity->get($field_name)->getFieldDefinition();
               if ($field_def->getItemDefinition()->getSetting('target_type') === 'media') {
                 // This is a media field.
@@ -220,7 +222,7 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
                   if ($media !== NULL) {
                     $bundle_configuration = $media->getSource()->getConfiguration();
                     if (isset($bundle_configuration['source_field'])) {
-                      /** @var \Drupal\Core\Field\FieldItemListInterface $field_item */
+                      /** @var FieldItemListInterface $field_item */
                       foreach ($media->get($bundle_configuration['source_field'])->filterEmptyItems() as $field_item) {
                         if ($field_item->getFieldDefinition()->getType() === 'file') {
                           $value = $field_item->getValue();
@@ -263,11 +265,11 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
   /**
    * Extract non text file data or get it from cache if available and cache it.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity the file is attached to.
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
-   * @param \Drupal\search_api_attachments\TextExtractorPluginInterface $extractor_plugin
+   * @param TextExtractorPluginInterface $extractor_plugin
    *   The plugin used to extract file content.
    *
    * @return string
@@ -325,9 +327,9 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
   /**
    * Queue a failed extraction for later processing.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity the file is attached to.
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
    *
    * @return bool
@@ -419,7 +421,7 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
    *
    * @param object $file
    *   A file object.
-   * @param \Drupal\search_api\Item\ItemInterface $item
+   * @param ItemInterface $item
    *   The item the file was referenced in.
    * @param string|null $field_name
    *   The name of the field the file was referenced in, if applicable.
@@ -580,7 +582,7 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @see \Drupal\Core\Plugin\PluginFormInterface::validateConfigurationForm()
@@ -637,7 +639,7 @@ class FilesExtractor extends ProcessorPluginBase implements PluginFormInterface
    * @param array $form
    *   An associative array containing the structure of the plugin form as built
    *   by static::buildConfigurationForm().
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the complete form.
    *
    * @see \Drupal\Core\Plugin\PluginFormInterface::submitConfigurationForm()
diff --git a/src/Plugin/search_api_attachments/PdftotextExtractor.php b/src/Plugin/search_api_attachments/PdftotextExtractor.php
index 43decec..2b064a3 100644
--- a/src/Plugin/search_api_attachments/PdftotextExtractor.php
+++ b/src/Plugin/search_api_attachments/PdftotextExtractor.php
@@ -20,7 +20,7 @@ class PdftotextExtractor extends TextExtractorPluginBase {
   /**
    * Extract file with Pdftotext command line tool.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
    *
    * @return string
diff --git a/src/Plugin/search_api_attachments/PythonPdf2txtExtractor.php b/src/Plugin/search_api_attachments/PythonPdf2txtExtractor.php
index d568a61..fde41a0 100644
--- a/src/Plugin/search_api_attachments/PythonPdf2txtExtractor.php
+++ b/src/Plugin/search_api_attachments/PythonPdf2txtExtractor.php
@@ -20,7 +20,7 @@ class PythonPdf2txtExtractor extends TextExtractorPluginBase {
   /**
    * Extract file with python Pdf2txt library.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
    *
    * @return string
diff --git a/src/Plugin/search_api_attachments/SolrExtractor.php b/src/Plugin/search_api_attachments/SolrExtractor.php
index 0f8d854..d0fd680 100644
--- a/src/Plugin/search_api_attachments/SolrExtractor.php
+++ b/src/Plugin/search_api_attachments/SolrExtractor.php
@@ -28,7 +28,7 @@ class SolrExtractor extends TextExtractorPluginBase {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -52,7 +52,7 @@ class SolrExtractor extends TextExtractorPluginBase {
   /**
    * Extract file with a search api solr backend.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
    *
    * @return string
diff --git a/src/Plugin/search_api_attachments/TikaExtractor.php b/src/Plugin/search_api_attachments/TikaExtractor.php
index 2ecffd0..a44c2ec 100644
--- a/src/Plugin/search_api_attachments/TikaExtractor.php
+++ b/src/Plugin/search_api_attachments/TikaExtractor.php
@@ -20,7 +20,7 @@ class TikaExtractor extends TextExtractorPluginBase {
   /**
    * Extract file with Tika library.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
    *
    * @return string
diff --git a/src/Plugin/search_api_attachments/TikaServerExtractor.php b/src/Plugin/search_api_attachments/TikaServerExtractor.php
index e8cccb2..6f145d4 100644
--- a/src/Plugin/search_api_attachments/TikaServerExtractor.php
+++ b/src/Plugin/search_api_attachments/TikaServerExtractor.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\search_api_attachments\Plugin\search_api_attachments;
 
+use GuzzleHttp\Client;
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -27,7 +29,7 @@ class TikaServerExtractor extends TextExtractorPluginBase {
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;
 
@@ -59,13 +61,13 @@ class TikaServerExtractor extends TextExtractorPluginBase {
   /**
    * Extract file with a Tika JAX-RS Server.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   A file object.
    *
    * @return string
    *   The text extracted from the file.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function extract(File $file) {
     $data = NULL;
diff --git a/src/TextExtractorPluginBase.php b/src/TextExtractorPluginBase.php
index 67865f2..50749f8 100644
--- a/src/TextExtractorPluginBase.php
+++ b/src/TextExtractorPluginBase.php
@@ -28,14 +28,14 @@ abstract class TextExtractorPluginBase extends PluginBase implements TextExtract
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Stream wrapper manager service.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
 
@@ -49,7 +49,7 @@ abstract class TextExtractorPluginBase extends PluginBase implements TextExtract
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
diff --git a/src/TextExtractorPluginInterface.php b/src/TextExtractorPluginInterface.php
index 4b82e56..57de0d0 100644
--- a/src/TextExtractorPluginInterface.php
+++ b/src/TextExtractorPluginInterface.php
@@ -16,7 +16,7 @@ interface TextExtractorPluginInterface extends PluginFormInterface, Configurable
   /**
    * Extract method.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   The file object.
    *
    * @return string
