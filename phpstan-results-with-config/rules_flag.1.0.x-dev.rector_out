modules/contrib/rules_flag/rules_flag.module
modules/contrib/rules_flag/src/Event/UserFlaggedEvent.php
modules/contrib/rules_flag/src/Plugin/Condition/EntityIsFlagged.php
modules/contrib/rules_flag/src/Plugin/RulesAction/EntityScheduleDelete.php
modules/contrib/rules_flag/src/Plugin/RulesAction/FlaggingCreate.php
modules/contrib/rules_flag/src/Plugin/RulesAction/FrindFlaggingDelete.php
modules/contrib/rules_flag/src/Plugin/RulesEvent/EntityFlaggedDeriver.php
modules/contrib/rules_flag/src/Plugin/RulesEvent/EntityUnflaggedDeriver.php

8 files with changes
====================

1) modules/contrib/rules_flag/src/Plugin/RulesEvent/EntityUnflaggedDeriver.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Creates a new EntityInsertDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/rules_flag/src/Plugin/RulesEvent/EntityFlaggedDeriver.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Creates a new EntityInsertDeriver object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/rules_flag/src/Plugin/RulesAction/FrindFlaggingDelete.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * Deletes the friend flagging.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity used to find the friend.
    */
   protected function doExecute(EntityInterface $entity) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/rules_flag/src/Plugin/RulesAction/FlaggingCreate.php:48

    ---------- begin diff ----------
@@ @@
   /**
    * The entity storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $storage;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $storage) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/rules_flag/src/Plugin/RulesAction/EntityScheduleDelete.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * Deletes the Entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to be deleted.
    * @param int $period
    *   The period to execute the job.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/rules_flag/src/Plugin/Condition/EntityIsFlagged.php:37

    ---------- begin diff ----------
@@ @@
   /**
    * Check if the provided entity is flagged.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check if it is flagged.
    * @param string $flag
    *   The flag to check for.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/rules_flag/src/Event/UserFlaggedEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rules_flag\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
 use Drupal\flag\FlaggingInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Event that is fired when a user is flagged.
@@ @@
   /**
    * The Flagging entity.
    *
-   * @var \Drupal\flag\FlaggingInterface
+   * @var FlaggingInterface
    */
   public $flagging;

@@ @@
   /**
    * The User is flagged.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   public $user;

@@ @@
   /**
    * Constructs the object.
    *
-   * @param \Drupal\flag\FlaggingInterface $flagging
+   * @param FlaggingInterface $flagging
    *   The flagging entity.
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The flagging user.
    */
   public function __construct(FlaggingInterface $flagging, UserInterface $user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/rules_flag/rules_flag.module:58

    ---------- begin diff ----------
@@ @@
 /**
  * Callback of entity_delete scheduler.
  *
- * @param \Drupal\job_scheduler\Entity\JobSchedule $job
+ * @param JobSchedule $job
  *   The job.
  */
 function rules_flag_entity_delete_scheduler_callback(JobSchedule $job) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 8 files have been changed by Rector                                       

