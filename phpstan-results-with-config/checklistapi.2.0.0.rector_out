modules/contrib/checklistapi/checklistapi.api.php
modules/contrib/checklistapi/checklistapi.install
modules/contrib/checklistapi/checklistapi.module
modules/contrib/checklistapi/checklistapiexample/checklistapiexample.install
modules/contrib/checklistapi/checklistapiexample/checklistapiexample.module
modules/contrib/checklistapi/src/Access/ChecklistapiAccessCheck.php
modules/contrib/checklistapi/src/ChecklistapiChecklist.php
modules/contrib/checklistapi/src/ChecklistapiPermissions.php
modules/contrib/checklistapi/src/Commands/ChecklistapiCommands.php
modules/contrib/checklistapi/src/Controller/ChecklistapiController.php
modules/contrib/checklistapi/src/Form/ChecklistapiChecklistClearForm.php
modules/contrib/checklistapi/src/Form/ChecklistapiChecklistForm.php
modules/contrib/checklistapi/src/Routing/ChecklistapiRoutes.php
modules/contrib/checklistapi/src/Storage/ConfigStorage.php
modules/contrib/checklistapi/src/Storage/StateStorage.php
modules/contrib/checklistapi/src/Storage/StorageBase.php
modules/contrib/checklistapi/src/Storage/StorageInterface.php
modules/contrib/checklistapi/tests/src/Functional/ChecklistapiTest.php
modules/contrib/checklistapi/tests/src/Unit/ChecklistapiModuleTest.php

11 files with changes
=====================

1) modules/contrib/checklistapi/tests/src/Functional/ChecklistapiTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\checklistapi\Functional;

+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A user object with permission to edit any checklist.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $privilegedUser;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create a privileged user.
@@ @@
   /**
    * Tests checklist access.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function testChecklistAccess() {
     // Assert that access is granted to a user with "edit any checklistapi
     // checklist" permission.
     $this->drupalGet('admin/config/development/checklistapi-example');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Assert that access is granted to a user with checklist-specific
     // permission.
@@ @@
     $semi_privileged_user = $this->drupalCreateUser($permissions);
     $this->drupalLogin($semi_privileged_user);
     $this->drupalGet('admin/config/development/checklistapi-example');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Assert that access is denied to a non-privileged user.
     $this->drupalLogout();
     $this->drupalGet('admin/config/development/checklistapi-example');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }

   /**
@@ @@
   public function testChecklistComposition() {
     // Assert that a per-checklist help block is created.
     $this->drupalGet('admin/config/development/checklistapi-example');
-    $this->assertRaw('This checklist based on');
+    $this->assertSession()->responseContains('This checklist based on');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertRawRector
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/checklistapi/src/Storage/StateStorage.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   private $state;

@@ @@
   /**
    * Constructs a class instance.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
    */
   public function __construct(StateInterface $state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/checklistapi/src/Storage/ConfigStorage.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\checklistapi\Storage;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;

 /**
@@ @@
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\Config|null
+   * @var Config|null
    */
   private $config;

@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;

@@ @@
   /**
    * Constructs a class instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Gets the config object.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   Returns the config object.
    */
   private function getConfig() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/checklistapi/src/Routing/ChecklistapiRoutes.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Provides dynamic routes.
    *
-   * @return \Symfony\Component\Routing\Route[]
+   * @return Route[]
    *   An array of route objects.
    */
   public function routes() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/checklistapi/src/Form/ChecklistapiChecklistForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\checklistapi\Form;

+use Drupal\checklistapi\ChecklistapiChecklist;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs an instance.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(DateFormatterInterface $date_formatter, MessengerInterface $messenger) {
@@ @@
    * {@inheritdoc}
    */
   public static function create(ContainerInterface $container) {
-    /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
+    /** @var DateFormatterInterface $date_formatter */
     $date_formatter = $container->get('date.formatter');
-    /** @var \Drupal\Core\Messenger\MessengerInterface $messenger */
+    /** @var MessengerInterface $messenger */
     $messenger = $container->get('messenger');
     return new static($date_formatter, $messenger);
   }
@@ @@
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\checklistapi\ChecklistapiChecklist $checklist */
+    /** @var ChecklistapiChecklist $checklist */
     $checklist = $form['#checklist'];

     // Save progress.
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function clear(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/checklistapi/src/Form/ChecklistapiChecklistClearForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\checklistapi\Form;

+use Drupal\checklistapi\ChecklistapiChecklist;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * The checklist object.
    *
-   * @var \Drupal\checklistapi\ChecklistapiChecklist
+   * @var ChecklistapiChecklist
    */
   public $checklist;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/checklistapi/src/Commands/ChecklistapiCommands.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\checklistapi\Commands;

+use Drupal\Core\Logger\LoggerChannelInterface;
 use Consolidation\OutputFormatters\FormatterManager;
 use Consolidation\OutputFormatters\Options\FormatterOptions;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
@@ @@
   /**
    * The logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;

@@ @@
   /**
    * Constructs an instance.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_channel
+   * @param LoggerChannelFactoryInterface $logger_channel
    *   The logger channel factory.
    */
   public function __construct(LoggerChannelFactoryInterface $logger_channel) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/checklistapi/src/ChecklistapiChecklist.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\checklistapi;

+use Drupal\checklistapi\Storage\StorageInterface;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Url;
 use Drupal\user\Entity\User;
@@ @@
   /**
    * The storage backend for saved progress.
    *
-   * @var \Drupal\checklistapi\Storage\StorageInterface
+   * @var StorageInterface
    */
   private $storage;

@@ @@
   /**
    * The configuration object for saving progress.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   public $config;

@@ @@
   /**
    * Gets the checklist form URL.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The URL to the checklist form.
    */
   public function getUrl() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/checklistapi/src/Access/ChecklistapiAccessCheck.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Checks routing access for the checklist.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   Returns an access result.
    */
   public function access(RouteMatchInterface $route_match) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/checklistapi/checklistapiexample/checklistapiexample.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\checklistapi\Storage\StateStorage;
+use Drupal\checklistapi\Storage\ConfigStorage;
 /**
  * @file
  * Install, update and uninstall functions for the checklistapiexample module.
@@ @@
  * Implements hook_uninstall().
  */
 function checklistapiexample_uninstall() {
-  /** @var \Drupal\checklistapi\Storage\StateStorage $storage */
+  /** @var StateStorage $storage */
   $storage = \Drupal::service('checklistapi_storage.state');
   $storage->setChecklistId('example_checklist')->deleteSavedProgress();
 }
@@ @@
   $checklist_id = 'example_checklist';

   // Get saved progress from old config storage.
-  /** @var \Drupal\checklistapi\Storage\ConfigStorage $old_config_storage */
+  /** @var ConfigStorage $old_config_storage */
   $old_config_storage = \Drupal::service('checklistapi_storage.config');
   $saved_progress = $old_config_storage->setChecklistId($checklist_id)
     ->getSavedProgress();
@@ @@
   }

   // Copy saved progress to new state storage.
-  /** @var \Drupal\checklistapi\Storage\StateStorage $new_state_storage */
+  /** @var StateStorage $new_state_storage */
   $new_state_storage = \Drupal::service('checklistapi_storage.state');
   $new_state_storage->setChecklistId($checklist_id)
     ->setSavedProgress($saved_progress);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


11) modules/contrib/checklistapi/checklistapi.module:47

    ---------- begin diff ----------
@@ @@
  * @param string $id
  *   The checklist ID.
  *
- * @return Drupal\checklistapi\ChecklistapiChecklist|false
+ * @return ChecklistapiChecklist|false
  *   A fully-loaded checklist object, or FALSE if the checklist is not found.
  */
 function checklistapi_checklist_load($id) {
@@ @@
 function checklistapi_theme() {
   return [
     'checklistapi_progress_bar' => [
-      'path' => drupal_get_path('module', 'checklistapi') . '/templates',
+      'path' => \Drupal::service('extension.list.module')->getPath('checklistapi') . '/templates',
       'template' => 'checklistapi-progress-bar',
       'variables' => [
         'message' => '',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 11 files have been changed by Rector                                      

