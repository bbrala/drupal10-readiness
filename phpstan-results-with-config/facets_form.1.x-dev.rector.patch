diff --git a/facets_form.module b/facets_form.module
index f7699b2..c9719fb 100644
--- a/facets_form.module
+++ b/facets_form.module
@@ -6,6 +6,7 @@
  */
 
 declare(strict_types = 1);
+use Drupal\Component\Plugin\PluginManagerInterface;
 
 use Drupal\facets_form\FacetsFormWidgetInterface;
 
@@ -126,7 +127,7 @@ function facets_form_library_info_alter(array &$libraries, string $extension): v
 function facets_form_get_plugins_with_js_snippet(): array {
   static $definitions;
   if (!isset($definitions)) {
-    /** @var \Drupal\Component\Plugin\PluginManagerInterface $widget_manager */
+    /** @var PluginManagerInterface $widget_manager */
     $widget_manager = \Drupal::service('plugin.manager.facets.widget');
     $definitions = [];
     foreach ($widget_manager->getDefinitions() as $id => $definition) {
@@ -134,7 +135,7 @@ function facets_form_get_plugins_with_js_snippet(): array {
         // @todo Extract the type of $extension so that we don't limit to modules.
         // @todo Replace drupal_get_path() when support for 9.2.x is dropped.
         // @see https://www.drupal.org/node/2940438
-        if (file_exists(drupal_get_path('module', $definition['provider']) . "/js/plugin/{$definition['id']}.js")) {
+        if (file_exists(\Drupal::service('extension.list.module')->getPath($definition['provider']) . "/js/plugin/{$definition['id']}.js")) {
           $definitions[$id] = $definition;
         }
       }
diff --git a/modules/facets_form_date_range/src/DateRange.php b/modules/facets_form_date_range/src/DateRange.php
index 2e1ea99..b071f5d 100644
--- a/modules/facets_form_date_range/src/DateRange.php
+++ b/modules/facets_form_date_range/src/DateRange.php
@@ -25,14 +25,14 @@ class DateRange {
   /**
    * Beginning date/time.
    *
-   * @var \Drupal\Core\Datetime\DrupalDateTime|null
+   * @var DrupalDateTime|null
    */
   protected $from;
 
   /**
    * End date/time.
    *
-   * @var \Drupal\Core\Datetime\DrupalDateTime|null
+   * @var DrupalDateTime|null
    */
   protected $to;
 
@@ -53,7 +53,7 @@ class DateRange {
   /**
    * Sets the beginning date/time.
    *
-   * @param \Drupal\Core\Datetime\DrupalDateTime|null $from
+   * @param DrupalDateTime|null $from
    *   Begin date/time.
    *
    * @return $this
@@ -66,7 +66,7 @@ class DateRange {
   /**
    * Returns the beginning date/time.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime|null
+   * @return DrupalDateTime|null
    *   Beginning date/time.
    */
   public function getFrom(): ?DrupalDateTime {
@@ -76,7 +76,7 @@ class DateRange {
   /**
    * Sets the ending date/time.
    *
-   * @param \Drupal\Core\Datetime\DrupalDateTime|null $to
+   * @param DrupalDateTime|null $to
    *   End date/time.
    *
    * @return $this
@@ -89,7 +89,7 @@ class DateRange {
   /**
    * Returns the ending date/time.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime|null
+   * @return DrupalDateTime|null
    *   The ending date/time.
    */
   public function getTo(): ?DrupalDateTime {
@@ -190,7 +190,7 @@ class DateRange {
   /**
    * Adds time to the beginning date of type 'date'.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime|null
+   * @return DrupalDateTime|null
    *   The beginning date as date/time.
    */
   public function getFromDateAsDatetime(): ?DrupalDateTime {
@@ -204,7 +204,7 @@ class DateRange {
   /**
    * Adds time to the ending date of type 'date'.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime|null
+   * @return DrupalDateTime|null
    *   The ending date as date/time.
    */
   public function getToDateAsDatetime(): ?DrupalDateTime {
@@ -218,7 +218,7 @@ class DateRange {
   /**
    * Creates a date range from a given the facet active items.
    *
-   * @param \Drupal\facets\FacetInterface $facet
+   * @param FacetInterface $facet
    *   The facet.
    *
    * @return \Drupal\facets_form_date_range\DateRange
@@ -282,7 +282,7 @@ class DateRange {
   /**
    * Formats a date as string.
    *
-   * @param \Drupal\Core\Datetime\DrupalDateTime|null $date
+   * @param DrupalDateTime|null $date
    *   The date to be formatted as string.
    *
    * @return string
diff --git a/modules/facets_form_date_range/src/Plugin/facets/query_type/DateRangeQueryType.php b/modules/facets_form_date_range/src/Plugin/facets/query_type/DateRangeQueryType.php
index 6e14f9c..5852498 100644
--- a/modules/facets_form_date_range/src/Plugin/facets/query_type/DateRangeQueryType.php
+++ b/modules/facets_form_date_range/src/Plugin/facets/query_type/DateRangeQueryType.php
@@ -25,7 +25,7 @@ class DateRangeQueryType extends QueryTypePluginBase implements ContainerFactory
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -38,7 +38,7 @@ class DateRangeQueryType extends QueryTypePluginBase implements ContainerFactory
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, DateFormatterInterface $date_formatter) {
@@ -129,7 +129,7 @@ class DateRangeQueryType extends QueryTypePluginBase implements ContainerFactory
   /**
    * Computes the operator given a date range.
    *
-   * @param \Drupal\facets_form_date_range\DateRange $date_range
+   * @param DateRange $date_range
    *   The date range.
    *
    * @return string
@@ -156,7 +156,7 @@ class DateRangeQueryType extends QueryTypePluginBase implements ContainerFactory
   /**
    * Returns a formatted date/time according to widget configuration.
    *
-   * @param \Drupal\Core\Datetime\DrupalDateTime $date
+   * @param DrupalDateTime $date
    *   The date/time being formatted.
    *
    * @return string
diff --git a/modules/facets_form_date_range/src/Plugin/facets/widget/DateRangeWidget.php b/modules/facets_form_date_range/src/Plugin/facets/widget/DateRangeWidget.php
index 6e01351..4b3da9c 100644
--- a/modules/facets_form_date_range/src/Plugin/facets/widget/DateRangeWidget.php
+++ b/modules/facets_form_date_range/src/Plugin/facets/widget/DateRangeWidget.php
@@ -33,21 +33,21 @@ class DateRangeWidget extends ArrayWidget implements FacetsFormWidgetInterface,
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The date/time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -60,11 +60,11 @@ class DateRangeWidget extends ArrayWidget implements FacetsFormWidgetInterface,
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The date/time service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, DateFormatterInterface $date_formatter, TimeInterface $time) {
diff --git a/modules/facets_form_date_range/tests/src/Kernel/Plugin/facets/widget/DateRangeWidgetTest.php b/modules/facets_form_date_range/tests/src/Kernel/Plugin/facets/widget/DateRangeWidgetTest.php
index 7e5cc24..b2daa3f 100644
--- a/modules/facets_form_date_range/tests/src/Kernel/Plugin/facets/widget/DateRangeWidgetTest.php
+++ b/modules/facets_form_date_range/tests/src/Kernel/Plugin/facets/widget/DateRangeWidgetTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\facets_form_date_range\Kernel\Plugin\facets\widget;
 
+use Drupal\facets\Exception\InvalidProcessorException;
 use Drupal\facets\Entity\Facet;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\facets_form\Traits\FacetsFormWidgetTestTrait;
@@ -39,7 +40,7 @@ class DateRangeWidgetTest extends KernelTestBase {
    *
    * @dataProvider providerTestPlugin
    *
-   * @throws \Drupal\facets\Exception\InvalidProcessorException
+   * @throws InvalidProcessorException
    */
   public function testPlugin(
     array $widget_config,
diff --git a/modules/facets_form_live_total/src/Controller/FacetFormAjaxController.php b/modules/facets_form_live_total/src/Controller/FacetFormAjaxController.php
index 3395912..1dc8186 100644
--- a/modules/facets_form_live_total/src/Controller/FacetFormAjaxController.php
+++ b/modules/facets_form_live_total/src/Controller/FacetFormAjaxController.php
@@ -4,6 +4,8 @@ declare(strict_types = 1);
 
 namespace Drupal\facets_form_live_total\Controller;
 
+use Drupal\facets\FacetSource\FacetSourcePluginInterface;
+use Drupal\facets\FacetSource\SearchApiFacetSourceInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -23,41 +25,41 @@ class FacetFormAjaxController extends ControllerBase {
   /**
    * The facets source manager.
    *
-   * @var \Drupal\facets\FacetSource\FacetSourcePluginManager
+   * @var FacetSourcePluginManager
    */
   protected $facetsSourceManager;
 
   /**
    * The facets source manager.
    *
-   * @var \Drupal\facets\FacetManager\DefaultFacetManager
+   * @var DefaultFacetManager
    */
   protected $facetsManager;
 
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;
 
   /**
    * The current route match service.
    *
-   * @var \Drupal\Core\Routing\ResettableStackedRouteMatchInterface
+   * @var ResettableStackedRouteMatchInterface
    */
   protected $currentRouteMatch;
 
   /**
    * Constructs a new controller instance.
    *
-   * @param \Drupal\facets\FacetSource\FacetSourcePluginManager $facetsSourceManager
+   * @param FacetSourcePluginManager $facetsSourceManager
    *   The facets source manager.
-   * @param \Drupal\facets\FacetManager\DefaultFacetManager $facetsManager
+   * @param DefaultFacetManager $facetsManager
    *   The facets manager.
-   * @param \Symfony\Component\HttpFoundation\Request $current_request
+   * @param Request $current_request
    *   The current request.
-   * @param \Drupal\Core\Routing\ResettableStackedRouteMatchInterface $current_route_match
+   * @param ResettableStackedRouteMatchInterface $current_route_match
    *   The current route match service.
    */
   public function __construct(FacetSourcePluginManager $facetsSourceManager, DefaultFacetManager $facetsManager, Request $current_request, ResettableStackedRouteMatchInterface $current_route_match) {
@@ -82,10 +84,10 @@ class FacetFormAjaxController extends ControllerBase {
   /**
    * Returns a replace command for search total or empty response.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response.
    */
   public function getLiveTotal(Request $request): AjaxResponse {
@@ -98,7 +100,7 @@ class FacetFormAjaxController extends ControllerBase {
       return $response;
     }
 
-    /** @var \Drupal\facets\FacetSource\FacetSourcePluginInterface $facet_source */
+    /** @var FacetSourcePluginInterface $facet_source */
     $facet_source = $this->facetsSourceManager->createInstance($facets_source_id);
 
     $facet_source->fillFacetsWithResults($facets);
@@ -114,7 +116,7 @@ class FacetFormAjaxController extends ControllerBase {
   /**
    * Checks the access to the Ajax route.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result object.
    */
   public function access(): AccessResultInterface {
@@ -129,7 +131,7 @@ class FacetFormAjaxController extends ControllerBase {
       throw new \Exception("Live total feature only supports Search API facets source.");
     }
 
-    /** @var \Drupal\facets\FacetSource\SearchApiFacetSourceInterface $facet_source */
+    /** @var SearchApiFacetSourceInterface $facet_source */
     $facet_source = $this->facetsSourceManager->createInstance($facets_source_id);
     $display = $facet_source->getViewsDisplay();
     if (!$display) {
diff --git a/modules/facets_form_live_total/src/EventSubscriber/EnableLiveTotalSubscriber.php b/modules/facets_form_live_total/src/EventSubscriber/EnableLiveTotalSubscriber.php
index 9dfe18c..2d637c4 100644
--- a/modules/facets_form_live_total/src/EventSubscriber/EnableLiveTotalSubscriber.php
+++ b/modules/facets_form_live_total/src/EventSubscriber/EnableLiveTotalSubscriber.php
@@ -24,7 +24,7 @@ class EnableLiveTotalSubscriber implements EventSubscriberInterface {
   /**
    * Enables the live total, if configured so.
    *
-   * @param \Drupal\facets_form\Event\TriggerWidgetChangeJavaScriptEvent $event
+   * @param TriggerWidgetChangeJavaScriptEvent $event
    *   The event object.
    */
   public function enableLiveTotal(TriggerWidgetChangeJavaScriptEvent $event): void {
diff --git a/modules/facets_form_live_total/src/EventSubscriber/SearchApiSubscriber.php b/modules/facets_form_live_total/src/EventSubscriber/SearchApiSubscriber.php
index 3fb9bda..9c324cb 100644
--- a/modules/facets_form_live_total/src/EventSubscriber/SearchApiSubscriber.php
+++ b/modules/facets_form_live_total/src/EventSubscriber/SearchApiSubscriber.php
@@ -17,14 +17,14 @@ class SearchApiSubscriber implements EventSubscriberInterface {
   /**
    * The facet manager service.
    *
-   * @var \Drupal\facets\FacetManager\DefaultFacetManager
+   * @var DefaultFacetManager
    */
   protected $facetManager;
 
   /**
    * Constructs a new subscriber instance.
    *
-   * @param \Drupal\facets\FacetManager\DefaultFacetManager $facet_manager
+   * @param DefaultFacetManager $facet_manager
    *   The facet manager service.
    */
   public function __construct(DefaultFacetManager $facet_manager) {
diff --git a/src/Event/TriggerWidgetChangeJavaScriptEvent.php b/src/Event/TriggerWidgetChangeJavaScriptEvent.php
index dd60142..8d2ac7d 100644
--- a/src/Event/TriggerWidgetChangeJavaScriptEvent.php
+++ b/src/Event/TriggerWidgetChangeJavaScriptEvent.php
@@ -4,7 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\facets_form\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Subscribe to this event to enable triggering the widget change JS event.
diff --git a/src/FacetsFormWidgetInterface.php b/src/FacetsFormWidgetInterface.php
index 20640cb..158b2d5 100644
--- a/src/FacetsFormWidgetInterface.php
+++ b/src/FacetsFormWidgetInterface.php
@@ -16,11 +16,11 @@ interface FacetsFormWidgetInterface extends WidgetPluginInterface {
   /**
    * Prepares the values to be passed to the URL generator from the submission.
    *
-   * @param \Drupal\facets\FacetInterface $facet
+   * @param FacetInterface $facet
    *   The facet.
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
diff --git a/src/FacetsFormWidgetTrait.php b/src/FacetsFormWidgetTrait.php
index 9c29840..ff85c94 100644
--- a/src/FacetsFormWidgetTrait.php
+++ b/src/FacetsFormWidgetTrait.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\facets_form;
 
+use Drupal\Component\Render\MarkupInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\facets\FacetInterface;
 
@@ -50,10 +51,10 @@ trait FacetsFormWidgetTrait {
    *   The facet item.
    * @param int $depth
    *   The item depth.
-   * @param \Drupal\facets\FacetInterface $facet
+   * @param FacetInterface $facet
    *   The facet entity.
    *
-   * @return \Drupal\Component\Render\MarkupInterface|string
+   * @return MarkupInterface|string
    *   The item label.
    */
   protected function getOptionLabel(array $item, int $depth, FacetInterface $facet) {
@@ -76,7 +77,7 @@ trait FacetsFormWidgetTrait {
    *
    * @param array $items
    *   The list of items.
-   * @param \Drupal\facets\FacetInterface $facet
+   * @param FacetInterface $facet
    *   The facet entity.
    */
   protected function processItems(array $items, FacetInterface $facet): void {
@@ -95,7 +96,7 @@ trait FacetsFormWidgetTrait {
    *
    * @param array $items
    *   The list of items.
-   * @param \Drupal\facets\FacetInterface $facet
+   * @param FacetInterface $facet
    *   The facet entity.
    * @param int $depth
    *   (optional) The "zero based" depth of the current items. Used internally.
diff --git a/src/Form/FacetsForm.php b/src/Form/FacetsForm.php
index 3c15cf5..eaa3389 100644
--- a/src/Form/FacetsForm.php
+++ b/src/Form/FacetsForm.php
@@ -25,41 +25,41 @@ class FacetsForm extends FormBase {
   /**
    * The facets manager.
    *
-   * @var \Drupal\facets\FacetManager\DefaultFacetManager
+   * @var DefaultFacetManager
    */
   protected $facetsManager;
 
   /**
    * The facets url generator.
    *
-   * @var \Drupal\facets\Utility\FacetsUrlGenerator
+   * @var FacetsUrlGenerator
    */
   protected $facetsUrlGenerator;
 
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected $libraryDiscovery;
 
   /**
    * Constructs a new form instance.
    *
-   * @param \Drupal\facets\FacetManager\DefaultFacetManager $facets_manager
+   * @param DefaultFacetManager $facets_manager
    *   The facets manager.
-   * @param \Drupal\facets\Utility\FacetsUrlGenerator $facets_url_generator
+   * @param FacetsUrlGenerator $facets_url_generator
    *   The facets url generator.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $library_discovery
+   * @param LibraryDiscoveryInterface $library_discovery
    *   The library discovery service.
    */
   public function __construct(DefaultFacetManager $facets_manager, FacetsUrlGenerator $facets_url_generator, EventDispatcherInterface $event_dispatcher, LibraryDiscoveryInterface $library_discovery) {
@@ -105,7 +105,7 @@ class FacetsForm extends FormBase {
 
     // Ask 3rd-party if they want to enable Javascript capability.
     $event = new TriggerWidgetChangeJavaScriptEvent($source_id, $config);
-    $this->eventDispatcher->dispatch(TriggerWidgetChangeJavaScriptEvent::class, $event);
+    $this->eventDispatcher->dispatch($event);
     if ($trigger_widget_change_event = $event->shouldTriggerWidgetChangeEvent()) {
       $libraries = $this->libraryDiscovery->getLibrariesByExtension('facets_form');
     }
@@ -203,7 +203,7 @@ class FacetsForm extends FormBase {
    * @param bool $exclude_filters
    *   (optional) Whether to exclude the facets filters. Defaults to FALSE.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   An URL object.
    */
   protected function buildRedirectUrl(bool $exclude_filters = FALSE): Url {
diff --git a/src/Plugin/Block/Deriver/FacetsFormBlockDeriver.php b/src/Plugin/Block/Deriver/FacetsFormBlockDeriver.php
index f8f1e59..72be8fd 100644
--- a/src/Plugin/Block/Deriver/FacetsFormBlockDeriver.php
+++ b/src/Plugin/Block/Deriver/FacetsFormBlockDeriver.php
@@ -20,14 +20,14 @@ class FacetsFormBlockDeriver extends DeriverBase implements ContainerDeriverInte
   /**
    * The facets source plugin manager service.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $facetsSourcePluginManager;
 
   /**
    * Constructs a new deriver instance.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $facets_source_plugin_manager
+   * @param PluginManagerInterface $facets_source_plugin_manager
    *   The facets source plugin manager service.
    */
   public function __construct(PluginManagerInterface $facets_source_plugin_manager) {
diff --git a/src/Plugin/Block/FacetsFormBlock.php b/src/Plugin/Block/FacetsFormBlock.php
index 9074813..6778201 100644
--- a/src/Plugin/Block/FacetsFormBlock.php
+++ b/src/Plugin/Block/FacetsFormBlock.php
@@ -28,14 +28,14 @@ class FacetsFormBlock extends BlockBase implements ContainerFactoryPluginInterfa
   /**
    * The form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The facets manager.
    *
-   * @var \Drupal\facets\FacetManager\DefaultFacetManager
+   * @var DefaultFacetManager
    */
   protected $facetsManager;
 
@@ -48,9 +48,9 @@ class FacetsFormBlock extends BlockBase implements ContainerFactoryPluginInterfa
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
-   * @param \Drupal\facets\FacetManager\DefaultFacetManager $facets_manager
+   * @param DefaultFacetManager $facets_manager
    *   The facets manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, FormBuilderInterface $form_builder, DefaultFacetManager $facets_manager) {
diff --git a/src/Plugin/facets/widget/CheckboxWidget.php b/src/Plugin/facets/widget/CheckboxWidget.php
index f9b3115..02667c0 100644
--- a/src/Plugin/facets/widget/CheckboxWidget.php
+++ b/src/Plugin/facets/widget/CheckboxWidget.php
@@ -31,7 +31,7 @@ class CheckboxWidget extends ArrayWidget implements FacetsFormWidgetInterface, C
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -44,7 +44,7 @@ class CheckboxWidget extends ArrayWidget implements FacetsFormWidgetInterface, C
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer) {
@@ -140,7 +140,7 @@ class CheckboxWidget extends ArrayWidget implements FacetsFormWidgetInterface, C
    *
    * @param array $element
    *   The 'checkboxes' element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state of the form.
    *
    * @return array
diff --git a/src/Plugin/facets/widget/DropdownWidget.php b/src/Plugin/facets/widget/DropdownWidget.php
index dd75fcd..9f340c4 100644
--- a/src/Plugin/facets/widget/DropdownWidget.php
+++ b/src/Plugin/facets/widget/DropdownWidget.php
@@ -30,7 +30,7 @@ class DropdownWidget extends ArrayWidget implements FacetsFormWidgetInterface, C
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -43,7 +43,7 @@ class DropdownWidget extends ArrayWidget implements FacetsFormWidgetInterface, C
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer) {
diff --git a/tests/modules/facets_form_test/src/FacetsFormsTestSubscriber.php b/tests/modules/facets_form_test/src/FacetsFormsTestSubscriber.php
index 968bca6..6828583 100644
--- a/tests/modules/facets_form_test/src/FacetsFormsTestSubscriber.php
+++ b/tests/modules/facets_form_test/src/FacetsFormsTestSubscriber.php
@@ -24,7 +24,7 @@ class FacetsFormsTestSubscriber implements EventSubscriberInterface {
   /**
    * Enables the Javascript event dispatching.
    *
-   * @param \Drupal\facets_form\Event\TriggerWidgetChangeJavaScriptEvent $event
+   * @param TriggerWidgetChangeJavaScriptEvent $event
    *   The event.
    */
   public function enable(TriggerWidgetChangeJavaScriptEvent $event): void {
diff --git a/tests/src/Functional/SortingFacetIntegrationTest.php b/tests/src/Functional/SortingFacetIntegrationTest.php
index cac2e99..a430f49 100644
--- a/tests/src/Functional/SortingFacetIntegrationTest.php
+++ b/tests/src/Functional/SortingFacetIntegrationTest.php
@@ -531,7 +531,7 @@ class SortingFacetIntegrationTest extends FacetsTestBase {
    * @param string[] $items
    *   An ordered list of strings.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    *   When any of the given string is not found.
    *
    * @todo Remove this once https://www.drupal.org/node/2817657 is committed.
diff --git a/tests/src/Kernel/Plugin/Block/Deriver/FacetsFormBlockDeriverTest.php b/tests/src/Kernel/Plugin/Block/Deriver/FacetsFormBlockDeriverTest.php
index 4694537..554318b 100644
--- a/tests/src/Kernel/Plugin/Block/Deriver/FacetsFormBlockDeriverTest.php
+++ b/tests/src/Kernel/Plugin/Block/Deriver/FacetsFormBlockDeriverTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\facets_form\Kernel\Plugin\Block\Deriver;
 
+use Drupal\Core\Block\BlockManagerInterface;
 use Drupal\KernelTests\Core\Entity\EntityKernelTestBase;
 
 /**
@@ -63,7 +64,7 @@ class FacetsFormBlockDeriverTest extends EntityKernelTestBase {
       ->getDefinitions();
     $this->assertCount(9, $facet_sources);
 
-    /** @var \Drupal\Core\Block\BlockManagerInterface $block_manager */
+    /** @var BlockManagerInterface $block_manager */
     $block_manager = $this->container->get('plugin.manager.block');
 
     foreach ($facet_sources as $id => $source) {
diff --git a/tests/src/Kernel/Plugin/facets/widget/CheckboxWidgetTest.php b/tests/src/Kernel/Plugin/facets/widget/CheckboxWidgetTest.php
index faba961..62c91d4 100644
--- a/tests/src/Kernel/Plugin/facets/widget/CheckboxWidgetTest.php
+++ b/tests/src/Kernel/Plugin/facets/widget/CheckboxWidgetTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\facets_form\Kernel\Plugin\facets\widget;
 
+use Drupal\facets\Exception\InvalidProcessorException;
 use Drupal\facets\Entity\Facet;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\facets_form\Traits\FacetsFormWidgetTestTrait;
@@ -47,7 +48,7 @@ class CheckboxWidgetTest extends KernelTestBase {
    *
    * @dataProvider providerTestPlugin
    *
-   * @throws \Drupal\facets\Exception\InvalidProcessorException
+   * @throws InvalidProcessorException
    */
   public function testPlugin(
     array $facet_values,
diff --git a/tests/src/Kernel/Plugin/facets/widget/DropdownWidgetTest.php b/tests/src/Kernel/Plugin/facets/widget/DropdownWidgetTest.php
index 3f3b307..45cfdbb 100644
--- a/tests/src/Kernel/Plugin/facets/widget/DropdownWidgetTest.php
+++ b/tests/src/Kernel/Plugin/facets/widget/DropdownWidgetTest.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\facets_form\Kernel\Plugin\facets\widget;
 
+use Drupal\facets\Exception\InvalidProcessorException;
 use Drupal\facets\Entity\Facet;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\facets_form\Traits\FacetsFormWidgetTestTrait;
@@ -49,7 +50,7 @@ class DropdownWidgetTest extends KernelTestBase {
    *
    * @dataProvider providerTestPlugin
    *
-   * @throws \Drupal\facets\Exception\InvalidProcessorException
+   * @throws InvalidProcessorException
    */
   public function testPlugin(
     array $facet_values,
diff --git a/tests/src/Traits/FacetsFormWidgetTestTrait.php b/tests/src/Traits/FacetsFormWidgetTestTrait.php
index 95b553b..35d7f0a 100644
--- a/tests/src/Traits/FacetsFormWidgetTestTrait.php
+++ b/tests/src/Traits/FacetsFormWidgetTestTrait.php
@@ -4,6 +4,7 @@ declare(strict_types = 1);
 
 namespace Drupal\Tests\facets_form\Traits;
 
+use Drupal\facets\Result\ResultInterface;
 use Drupal\Core\Url;
 use Drupal\facets\FacetInterface;
 use Drupal\facets\Result\Result;
@@ -16,14 +17,14 @@ trait FacetsFormWidgetTestTrait {
   /**
    * Builds a list of deep nested results.
    *
-   * @param \Drupal\facets\FacetInterface $facet
+   * @param FacetInterface $facet
    *   The facet.
    * @param array $data
    *   Result data.
    * @param array $active
    *   Active items.
    *
-   * @return \Drupal\facets\Result\ResultInterface[]
+   * @return ResultInterface[]
    *   A list of nested results.
    */
   protected function getResults(FacetInterface $facet, array $data, array $active = []): array {
