diff --git a/src/Controller/ImagePopup.php b/src/Controller/ImagePopup.php
index ca28638..59d0e47 100644
--- a/src/Controller/ImagePopup.php
+++ b/src/Controller/ImagePopup.php
@@ -20,7 +20,7 @@ class ImagePopup extends ControllerBase {
   /**
    * Render.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The ajax response containing the modal.
    */
   public function render($fid, Request $request, $image_style = NULL) {
@@ -36,7 +36,7 @@ class ImagePopup extends ControllerBase {
     }
     else {
       // Get absolute path for original image.
-      $absolute_path = Url::fromUri(file_create_url($image_uri))->getUri();
+      $absolute_path = \Drupal::service('file_url_generator')->generate($image_uri)->getUri();
     }
 
     $response = new AjaxResponse();
diff --git a/src/Form/EditorImagePopupDialog.php b/src/Form/EditorImagePopupDialog.php
index 25dfdd6..af91570 100644
--- a/src/Form/EditorImagePopupDialog.php
+++ b/src/Form/EditorImagePopupDialog.php
@@ -23,14 +23,14 @@ class EditorImagePopupDialog extends FormBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a form object for image dialog.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -58,9 +58,9 @@ class EditorImagePopupDialog extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\filter\Entity\FilterFormat $filter_format
+   * @param FilterFormat $filter_format
    *   The filter format for which this dialog corresponds.
    */
   public function buildForm(array $form, FormStateInterface $form_state, FilterFormat $filter_format = NULL) {
@@ -233,10 +233,10 @@ class EditorImagePopupDialog extends FormBase {
     $fid = $form_state->getValue(['fid', 0]);
     if (!empty($fid)) {
       $file = $this->entityTypeManager->getStorage('file')->load($fid);
-      $file_url = file_create_url($file->getFileUri());
+      $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
       // Transform absolute image URLs to relative image URLs: prevent problems
       // on multisite set-ups and prevent mixed content errors.
-      $file_url = file_url_transform_relative($file_url);
+      $file_url = \Drupal::service('file_url_generator')->transformRelative($file_url);
       $form_state->setValue(['attributes', 'src'], $file_url);
       $form_state->setValue(['attributes', 'data-entity-uuid'], $file->uuid());
       $form_state->setValue(['attributes', 'data-entity-type'], 'file');
diff --git a/src/Plugin/CKEditorPlugin/ImagePopup.php b/src/Plugin/CKEditorPlugin/ImagePopup.php
index 4bb6a6b..0652daa 100644
--- a/src/Plugin/CKEditorPlugin/ImagePopup.php
+++ b/src/Plugin/CKEditorPlugin/ImagePopup.php
@@ -29,7 +29,7 @@ class ImagePopup extends CKEditorPluginBase implements CKEditorPluginConfigurabl
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'image_popup') . '/js/plugins/imagepopup/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('image_popup') . '/js/plugins/imagepopup/plugin.js';
   }
 
   /**
@@ -58,7 +58,7 @@ class ImagePopup extends CKEditorPluginBase implements CKEditorPluginConfigurabl
     return [
       'ImagePopup' => [
         'label' => $this->t('Image Popup'),
-        'image' => drupal_get_path('module', 'image_popup') . '/js/plugins/imagepopup/icons/imagepopup.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('image_popup') . '/js/plugins/imagepopup/icons/imagepopup.png',
       ],
     ];
   }
diff --git a/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
index 5658828..d17097b 100644
--- a/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImagePopupFieldFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\image_popup\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -32,35 +33,35 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;
 
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $imageStyleStorage;
 
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Entity Field Manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
@@ -74,7 +75,7 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
   /**
    * The field's parent.
    *
-   * @var \Drupal\Core\Entity\EntityInterface
+   * @var EntityInterface
    */
   protected $parent;
 
@@ -85,7 +86,7 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -95,15 +96,15 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The link generator service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The entity storage for the image.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AccountInterface $current_user, LinkGeneratorInterface $link_generator, EntityStorageInterface $image_style_storage, ConfigFactoryInterface $config_factory, EntityFieldManagerInterface $entity_field_manager) {
@@ -271,7 +272,7 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
       }
       else {
         // Get absolute path for original image.
-        $absolute_path = Url::fromUri(file_create_url($image_uri))->getUri();
+        $absolute_path = \Drupal::service('file_url_generator')->generate($image_uri)->getUri();
       }
 
       // Create a url query to tell the controller how to build the modal.
@@ -338,7 +339,7 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
   /**
    * Find fields on the entity that are valid alt or title text.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -382,7 +383,7 @@ class ImagePopupFieldFormatter extends ImageFormatterBase implements ContainerFa
    *
    * @param string $base_field_id
    *   The field to create more fields for.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
