diff --git a/src/Authentication/Provider/UserHash.php b/src/Authentication/Provider/UserHash.php
index f2f519f..bb687e7 100644
--- a/src/Authentication/Provider/UserHash.php
+++ b/src/Authentication/Provider/UserHash.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\user_hash\Authentication\Provider;
 
+use Drupal\user_hash\Services;
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -17,41 +18,41 @@ class UserHash implements AuthenticationProviderInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The user auth service.
    *
-   * @var \Drupal\user\UserAuthInterface
+   * @var UserAuthInterface
    */
   protected $userAuth;
 
   /**
    * The flood service.
    *
-   * @var \Drupal\Core\Flood\FloodInterface
+   * @var FloodInterface
    */
   protected $flood;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a User Hash authentication provider object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\user\UserAuthInterface $user_auth
+   * @param UserAuthInterface $user_auth
    *   The user authentication service.
-   * @param \Drupal\Core\Flood\FloodInterface $flood
+   * @param FloodInterface $flood
    *   The flood service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, UserAuthInterface $user_auth, FloodInterface $flood, EntityTypeManagerInterface $entity_type_manager) {
@@ -78,7 +79,7 @@ class UserHash implements AuthenticationProviderInterface {
     $username = $request->headers->get('X_USER_NAME');
     $hash = $request->headers->get('X_USER_HASH');
     if ($this->flood->isAllowed('user_hash.failed_login_ip', $flood_config->get('ip_limit'), $flood_config->get('ip_window'))) {
-      /** @var \Drupal\user_hash\Services $service */
+      /** @var Services $service */
       $service = \Drupal::service('user_hash.services');
       $account = $service->validateHash($username, $hash);
       if ($account) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index b7c1f92..3b223d6 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -15,7 +15,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/src/Plugin/Action/DeleteUserHash.php b/src/Plugin/Action/DeleteUserHash.php
index eae8986..de5e67b 100644
--- a/src/Plugin/Action/DeleteUserHash.php
+++ b/src/Plugin/Action/DeleteUserHash.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\user_hash\Plugin\Action;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Action\ActionBase;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Session\AccountInterface;
@@ -31,7 +32,7 @@ class DeleteUserHash extends ActionBase {
    * {@inheritdoc}
    */
   public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE) {
-    /** @var \Drupal\user\UserInterface $object */
+    /** @var UserInterface $object */
     $access = $object->status->access('edit', $account, TRUE)
       ->andIf($object->access('update', $account, TRUE));
 
diff --git a/src/Plugin/Action/GenerateUserHash.php b/src/Plugin/Action/GenerateUserHash.php
index c107ef8..0bf6455 100644
--- a/src/Plugin/Action/GenerateUserHash.php
+++ b/src/Plugin/Action/GenerateUserHash.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\user_hash\Plugin\Action;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Action\ActionBase;
 use Drupal\Core\Session\AccountInterface;
@@ -51,7 +52,7 @@ class GenerateUserHash extends ActionBase {
    * {@inheritdoc}
    */
   public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE) {
-    /** @var \Drupal\user\UserInterface $object */
+    /** @var UserInterface $object */
     $access = $object->status->access('edit', $account, TRUE)
       ->andIf($object->access('update', $account, TRUE))
       ->andIf($object->hasPermission('use user_hash') ? AccessResult::allowed() : AccessResult::forbidden());
diff --git a/src/Services.php b/src/Services.php
index 93273fc..be61f58 100644
--- a/src/Services.php
+++ b/src/Services.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\user_hash;
 
+use Drupal\Core\Session\AccountInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -29,32 +32,32 @@ class Services {
   /**
    * The contact settings config object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a ContactPageAccess instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\user\UserDataInterface $user_data
+   * @param UserDataInterface $user_data
    *   The user data service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory,
@@ -86,10 +89,10 @@ class Services {
    * @param string $hash
    * @param bool $active_only
    *
-   * @return \Drupal\Core\Session\AccountInterface
+   * @return AccountInterface
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function validateHash($username, $hash, $active_only = TRUE) {
     $accounts = $this->entityTypeManager->getStorage('user')
