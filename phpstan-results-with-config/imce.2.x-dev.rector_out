modules/contrib/imce/imce.install
modules/contrib/imce/imce.module
modules/contrib/imce/src/Annotation/ImcePlugin.php
modules/contrib/imce/src/Controller/ImceController.php
modules/contrib/imce/src/Controller/ImceFrameController.php
modules/contrib/imce/src/Controller/ImceHelpController.php
modules/contrib/imce/src/Entity/ImceProfile.php
modules/contrib/imce/src/Form/ImceProfileDeleteForm.php
modules/contrib/imce/src/Form/ImceProfileForm.php
modules/contrib/imce/src/Form/ImceSettingsForm.php
modules/contrib/imce/src/Imce.php
modules/contrib/imce/src/ImceFM.php
modules/contrib/imce/src/ImceFile.php
modules/contrib/imce/src/ImceFileField.php
modules/contrib/imce/src/ImceFolder.php
modules/contrib/imce/src/ImceItem.php
modules/contrib/imce/src/ImcePluginBase.php
modules/contrib/imce/src/ImcePluginInterface.php
modules/contrib/imce/src/ImcePluginManager.php
modules/contrib/imce/src/ImceProfileListBuilder.php
modules/contrib/imce/src/ImceSettersTrait.php
modules/contrib/imce/src/Plugin/BUEditorPlugin/Imce.php
modules/contrib/imce/src/Plugin/CKEditorPlugin/Imce.php
modules/contrib/imce/src/Plugin/ImcePlugin/Core.php
modules/contrib/imce/src/Plugin/ImcePlugin/Delete.php
modules/contrib/imce/src/Plugin/ImcePlugin/Newfolder.php
modules/contrib/imce/src/Plugin/ImcePlugin/Resize.php
modules/contrib/imce/src/Plugin/ImcePlugin/Upload.php
modules/contrib/imce/src/Routing/ImceRouteSubscriber.php
modules/contrib/imce/tests/src/Kernel/Form/ImceProfileDeleteFormTest.php
modules/contrib/imce/tests/src/Kernel/Form/ImceSettingsFormTest.php
modules/contrib/imce/tests/src/Kernel/ImceFolderTest.php
modules/contrib/imce/tests/src/Kernel/Plugin/CKEditorPlugin/ImceTest.php
modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/CoreTest.php
modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/DeleteTest.php
modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/NewFolderTest.php
modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/ResizeTest.php
modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/UploadTest.php
modules/contrib/imce/tests/src/Kernel/Plugin/KernelTestBasePlugin.php
modules/contrib/imce/tests/src/Unit/ImceFileTest.php
modules/contrib/imce/tests/src/Unit/ImceFolderTest.php

23 files with changes
=====================

1) modules/contrib/imce/tests/src/Unit/ImceFolderTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The Imce Folder.
    *
-   * @var \Drupal\imce\ImceFolder
+   * @var ImceFolder
    */
   protected $imceFolder;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/imce/tests/src/Unit/ImceFileTest.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Imce File.
    *
-   * @var \Drupal\imce\ImceFile
+   * @var ImceFile
    */
   protected $imceFile;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/imce/tests/src/Kernel/Plugin/KernelTestBasePlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\imce\Kernel\Plugin;

+use Drupal\imce\ImceFM;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\StreamWrapper\PublicStream;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\imce\Imce;
@@ @@
   /**
    * The Imce file manager.
    *
-   * @var \Drupal\imce\ImceFM
+   * @var ImceFM
    */
   public $imceFM;

@@ @@
   /**
    * The Imce file manager.
    *
-   * @return \Drupal\imce\ImceFM
+   * @return ImceFM
    *   Return the file manager.
    */
   public function getImceFM() {
@@ @@
   /**
    * Get the request parameter.
    *
-   * @return \Symfony\Component\HttpFoundation\Request
+   * @return Request
    *   The request object.
    */
   abstract public function getRequest();
@@ @@
    *   uri.
    */
   protected function getTestFileUri() {
-    \Drupal::service('file_system')->copy(drupal_get_path('module', 'imce') . '/tests/files/ciandt.jpg', PublicStream::basePath());
+    \Drupal::service('file_system')->copy(\Drupal::service('extension.list.module')->getPath('imce') . '/tests/files/ciandt.jpg', PublicStream::basePath());
     return 'public://ciandt.jpg';
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/UploadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\imce\Kernel\Plugin\ImcePlugin;

+use Drupal\imce\ImceFM;
 use Drupal\imce\ImcePluginInterface;
 use Drupal\imce\Plugin\ImcePlugin\Upload;
 use Drupal\Tests\imce\Kernel\Plugin\KernelTestBasePlugin;
@@ @@
   /**
    * The Imce ckeditor plugin.
    *
-   * @var \Drupal\imce\Plugin\ImcePlugin\Upload
+   * @var Upload
    */
   public $upload;

@@ @@
   /**
    * The Imce file manager.
    *
-   * @var \Drupal\imce\ImceFM
+   * @var ImceFM
    */
   public $imceFM;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/ResizeTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\imce\Kernel\Plugin\ImcePlugin;

+use Drupal\imce\ImceFM;
 use Drupal\Core\StreamWrapper\PublicStream;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\imce\ImceFolder;
@@ @@
   /**
    * The Imce ckeditor plugin.
    *
-   * @var \Drupal\imce\Plugin\ImcePlugin\Resize
+   * @var Resize
    */
   public $resize;

@@ @@
   /**
    * The Imce file manager.
    *
-   * @var \Drupal\imce\ImceFM
+   * @var ImceFM
    */
   public $imceFM;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/NewFolderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\imce\Kernel\Plugin\ImcePlugin;

+use Drupal\imce\ImceFM;
 use Drupal\imce\Imce;
 use Drupal\imce\ImcePluginInterface;
 use Drupal\imce\Plugin\ImcePlugin\Newfolder;
@@ @@
   /**
    * The Imce ckeditor plugin.
    *
-   * @var \Drupal\imce\Plugin\ImcePlugin\Newfolder
+   * @var Newfolder
    */
   public $newFolder;

@@ @@
   /**
    * The Imce file manager.
    *
-   * @var \Drupal\imce\ImceFM
+   * @var ImceFM
    */
   public $imceFM;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/DeleteTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\imce\Kernel\Plugin\ImcePlugin;

+use Drupal\imce\ImceFM;
 use Drupal\Core\StreamWrapper\PublicStream;
 use Drupal\imce\ImceFile;
 use Drupal\imce\ImceFolder;
@@ @@
   /**
    * The Imce ckeditor plugin.
    *
-   * @var \Drupal\imce\Plugin\ImcePlugin\Delete
+   * @var Delete
    */
   public $delete;

@@ @@
   /**
    * The Imce file manager.
    *
-   * @var \Drupal\imce\ImceFM
+   * @var ImceFM
    */
   public $imceFM;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/imce/tests/src/Kernel/Plugin/ImcePlugin/CoreTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\imce\Kernel\Plugin\ImcePlugin;

+use Drupal\imce\ImceFM;
 use Drupal\imce\ImcePluginInterface;
 use Drupal\imce\Plugin\ImcePlugin\Core;
 use Drupal\Tests\imce\Kernel\Plugin\KernelTestBasePlugin;
@@ @@
   /**
    * The Imce ckeditor plugin.
    *
-   * @var \Drupal\imce\Plugin\ImcePlugin\Core
+   * @var Core
    */
   public $core;

@@ @@
   /**
    * The Imce file manager.
    *
-   * @var \Drupal\imce\ImceFM
+   * @var ImceFM
    */
   public $imceFM;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/imce/tests/src/Kernel/Plugin/CKEditorPlugin/ImceTest.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The Imce ckeditor plugin.
    *
-   * @var \Drupal\imce\Plugin\CKEditorPlugin\Imce
+   * @var Imce
    */
   public $imce;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/imce/tests/src/Kernel/ImceFolderTest.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The form delete profile.
    *
-   * @var \Drupal\imce\ImceFolder
+   * @var ImceFolder
    */
   protected $imceFolder;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/imce/tests/src/Kernel/Form/ImceSettingsFormTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The IMCE sttings form.
    *
-   * @var \Drupal\imce\Form\ImceSettingsForm
+   * @var ImceSettingsForm
    */
   protected $imceSettingsForm;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/imce/tests/src/Kernel/Form/ImceProfileDeleteFormTest.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The form delete profile.
    *
-   * @var \Drupal\imce\Form\ImceProfileDeleteForm
+   * @var ImceProfileDeleteForm
    */
   protected $profileDeleteForm;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/imce/src/Routing/ImceRouteSubscriber.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The constructor method.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Defines the configuration object factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/imce/src/Plugin/CKEditorPlugin/Imce.php:26

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'imce') . '/js/plugins/ckeditor/imce.ckeditor.js';
+    return \Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/imce.ckeditor.js';
   }

   /**
@@ @@
    */
   public function getConfig(Editor $editor) {
     return [
-      'ImceImageIcon' => file_create_url($this->imageIcon()),
-      'ImceLinkIcon' => file_create_url($this->linkIcon()),
+      'ImceImageIcon' => \Drupal::service('file_url_generator')->generateAbsoluteString($this->imageIcon()),
+      'ImceLinkIcon' => \Drupal::service('file_url_generator')->generateAbsoluteString($this->linkIcon()),
     ];
   }

@@ @@
    * Uses the icon from drupalimage plugin.
    */
   public function imageIcon() {
-    return drupal_get_path('module', 'imce') . '/js/plugins/ckeditor/icons/imceimage.png';
+    return \Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/icons/imceimage.png';
   }

   /**
@@ @@
    * Uses the icon from drupallink plugin.
    */
   public function linkIcon() {
-    return drupal_get_path('module', 'imce') . '/js/plugins/ckeditor/icons/imcelink.png';
+    return \Drupal::service('extension.list.module')->getPath('imce') . '/js/plugins/ckeditor/icons/imcelink.png';
   }

 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/imce/src/ImceSettersTrait.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Manages entity type plugin definitions.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The system file config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $configSystemFile;

@@ @@
   /**
    * Provides a StreamWrapper manager.
    *
-   * @var \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;

@@ @@
   /**
    * Set entity type manager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
   protected function setEntityTypeManager(EntityTypeManagerInterface $entityTypeManager) {
@@ @@
   /**
    * Set config system file.
    *
-   * @param \Drupal\Core\Config\ImmutableConfig $configSystemFile
+   * @param ImmutableConfig $configSystemFile
    *   The config system file.
    */
   protected function setConfigSystemFile(ImmutableConfig $configSystemFile) {
@@ @@
   /**
    * Set the stream wrapper manager.
    *
-   * @param \Drupal\Core\StreamWrapper\StreamWrapperManagerInterface $streamWrapperManager
+   * @param StreamWrapperManagerInterface $streamWrapperManager
    *   The stream wrapper manager.
    */
   protected function setStreamWrapperManager(StreamWrapperManagerInterface $streamWrapperManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


16) modules/contrib/imce/src/ImcePluginManager.php:38

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/imce/src/ImceItem.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * Item parent.
    *
-   * @var \Drupal\imce\ImceFolder
+   * @var ImceFolder
    */
   public $parent;

@@ @@
   /**
    * File manager.
    *
-   * @var \Drupal\imce\ImceFM
+   * @var ImceFM
    */
   protected $fm;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


18) modules/contrib/imce/src/ImceFM.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\imce;

+use Drupal\image\Entity\ImageStyle;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\HttpFoundation\JsonResponse;
@@ @@
   /**
    * Active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   public $user;

@@ @@
   /**
    * Active request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   public $request;

@@ @@
   /**
    * Active folder.
    *
-   * @var \Drupal\imce\ImceFolder
+   * @var ImceFolder
    */
   public $activeFolder;

@@ @@
   /**
    * Image style for thumbnails.
    *
-   * @var \Drupal\image\Entity\ImageStyle
+   * @var ImageStyle
    */
   private $thumbnailStyle;

@@ @@
    *
    * @param array $conf
    *   File manager configuration.
-   * @param \Drupal\Core\Session\AccountProxyInterface $user
+   * @param AccountProxyInterface $user
    *   The active user.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The active request that contains parameters for file manager operations.
    */
   public function __construct(array $conf, AccountProxyInterface $user = NULL, Request $request = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


19) modules/contrib/imce/src/Imce.php:104

    ---------- begin diff ----------
@@ @@
     $conf['root_url'] = preg_replace('@/(?:%2E|\.)$@i', '', file_create_url($conf['root_uri'] . '.'));
     // Convert to relative.
     if (!\Drupal::config('imce.settings')->get('abs_urls')) {
-      $conf['root_url'] = file_url_transform_relative($conf['root_url']);
+      $conf['root_url'] = \Drupal::service('file_url_generator')->transformRelative($conf['root_url']);
     }
     $conf['token'] = $user->isAnonymous() ? 'anon' : \Drupal::csrfToken()->get('imce');
     // Process folders.
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


20) modules/contrib/imce/src/Form/ImceSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\imce\Form;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * Manages entity type plugin definitions.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The system file config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $configSystemFile;

@@ @@
   /**
    * Provides a StreamWrapper manager.
    *
-   * @var Drupal\Core\StreamWrapper\StreamWrapperManagerInterface
+   * @var StreamWrapperManagerInterface
    */
   protected $streamWrapperManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


21) modules/contrib/imce/src/Form/ImceProfileForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\imce\Form;

+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\imce\Entity\ImceProfile;
 use Drupal\Component\Utility\Environment;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\File\FileSystemInterface;
@@ @@
   /**
    * Plugin manager for Imce Plugins.
    *
-   * @var \Drupal\imce\ImcePluginManager
+   * @var ImcePluginManager
    */
   protected $pluginManagerImce;

@@ @@
   /**
    * The construct method.
    *
-   * @param \Drupal\imce\ImcePluginManager $plugin_manager_imce
+   * @param ImcePluginManager $plugin_manager_imce
    *   Plugin manager for Imce Plugins.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    */
   public function __construct(ImcePluginManager $plugin_manager_imce) {
     $this->pluginManagerImce = $plugin_manager_imce;
@@ @@
    */
   public function form(array $form, FormStateInterface $form_state) {
     /**
-     * @var \Drupal\imce\Entity\ImceProfile
+     * @var ImceProfile
      */
     $imce_profile = $this->getEntity();
     // Check duplication.
@@ @@
    */
   public function save(array $form, FormStateInterface $form_state) {
     /**
-     * @var \Drupal\imce\Entity\ImceProfile
+     * @var ImceProfile
      */
     $imce_profile = $this->getEntity();
     $status = $imce_profile->save();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


22) modules/contrib/imce/src/Controller/ImceHelpController.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * The list of available modules.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $extensionListModule;

@@ @@
   /**
    * Creates a new HelpController.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $extension_list_module
+   * @param ModuleExtensionList $extension_list_module
    *   The list of available modules.
    */
   public function __construct(RouteMatchInterface $route_match, ModuleExtensionList $extension_list_module) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


23) modules/contrib/imce/src/Annotation/ImcePlugin.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\imce\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * Plugin label.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [ERROR] Could not process                                                      
         "modules/contrib/imce/src/Plugin/BUEditorPlugin/Imce.php" file, due to: 
         "Analyze error: "Class Drupal\bueditor\BUEditorPluginBase not found.". 
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

