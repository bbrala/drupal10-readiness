modules/contrib/sumoselect/src/Form/SumoSelectConfigForm.php
modules/contrib/sumoselect/src/RequestPathChecker.php
modules/contrib/sumoselect/sumoselect.module
modules/contrib/sumoselect/tests/src/Functional/AdminPageTest.php

3 files with changes
====================

1) modules/contrib/sumoselect/tests/src/Functional/AdminPageTest.php:32

    ---------- begin diff ----------
@@ @@
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/sumoselect/sumoselect.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\sumoselect\RequestPathChecker;
 /**
  * @file
  * SumoSelect hook implementations.
@@ @@
     $excludedPatterns = $config->get('regular_path_excluded_patterns');
   }

-  /** @var \Drupal\sumoselect\RequestPathChecker $requestPathChecker */
+  /** @var RequestPathChecker $requestPathChecker */
   $requestPathChecker = \Drupal::service('sumoselect.request_path_checker');
-  /** @var \Drupal\Core\Render\BubbleableMetadata $bubbleableMetaData */
+  /** @var BubbleableMetadata $bubbleableMetaData */
   $checkPatterns = $requestPathChecker->checkPatterns($pathPatterns, $bubbleableMetaData);
   $checkExcludedPatterns = $requestPathChecker->checkExcludedPatterns($excludedPatterns, $bubbleableMetaData);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/sumoselect/src/RequestPathChecker.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sumoselect;

+use Drupal\Core\Condition\ConditionManager;
+use Drupal\Core\Condition\ConditionInterface;
 use Drupal\Core\Render\BubbleableMetadata;

 class RequestPathChecker {

-  /** @var \Drupal\Core\Condition\ConditionManager $conditionManager */
+  /** @var ConditionManager $conditionManager */
   private $conditionManager;

   /**
    * RequestPathChecker constructor.
-   * @param \Drupal\Core\Condition\ConditionManager $conditionManager
+   * @param ConditionManager $conditionManager
    */
-  public function __construct(\Drupal\Core\Condition\ConditionManager $conditionManager) {
+  public function __construct(ConditionManager $conditionManager) {
     $this->conditionManager = $conditionManager;
   }

@@ @@
   /**
    * @param string $patterns
    *   Page patterns.
-   * @param \Drupal\Core\Render\BubbleableMetadata|null &$bubbleableMetaData
+   * @param BubbleableMetadata|null $bubbleableMetaData
    *   Return or merge metadata.
    * @param bool $negate
    *   Negate the condition.
@@ @@
     if (!$bubbleableMetaData) {
       $bubbleableMetaData = new BubbleableMetadata();
     }
-    /** @var \Drupal\Core\Condition\ConditionInterface $pathCondition */
+    /** @var ConditionInterface $pathCondition */
     $pathCondition = $this->conditionManager->createInstance('request_path', [
       'negate' => $negate,
       'pages' => $patterns
@@ @@
   /**
    * @param string $patterns
    *   Page patterns.
-   * @param \Drupal\Core\Render\BubbleableMetadata|null &$bubbleableMetaData
+   * @param BubbleableMetadata|null $bubbleableMetaData
    *   Return or merge metadata.
    * @param bool $negate
    *   Negate the condition.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 3 files have been changed by Rector                                       

