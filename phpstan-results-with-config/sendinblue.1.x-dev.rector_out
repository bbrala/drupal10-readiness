modules/contrib/sendinblue/sendinblue.install
modules/contrib/sendinblue/sendinblue.module
modules/contrib/sendinblue/src/Access/SignupAccessControlHandler.php
modules/contrib/sendinblue/src/Controller/SendinblueController.php
modules/contrib/sendinblue/src/Entity/Controller/SignupListBuilder.php
modules/contrib/sendinblue/src/Entity/Signup.php
modules/contrib/sendinblue/src/Form/ConfigurationSendinblueForm.php
modules/contrib/sendinblue/src/Form/LogoutForm.php
modules/contrib/sendinblue/src/Form/RegisteringUserForm.php
modules/contrib/sendinblue/src/Form/SignupDeleteForm.php
modules/contrib/sendinblue/src/Form/SignupForm.php
modules/contrib/sendinblue/src/Form/SubscribeForm.php
modules/contrib/sendinblue/src/Form/TransactionnalEmailForm.php
modules/contrib/sendinblue/src/Plugin/Block/SendinblueBlock.php
modules/contrib/sendinblue/src/Plugin/Derivative/SendinblueBlock.php
modules/contrib/sendinblue/src/Plugin/Mail/SendInBlueEmail.php
modules/contrib/sendinblue/src/Routing/SubscribeRoutes.php
modules/contrib/sendinblue/src/SendinblueManager.php
modules/contrib/sendinblue/src/Tools/Api/SendInBlueApiInterface.php
modules/contrib/sendinblue/src/Tools/Api/SendinblueApiV2.php
modules/contrib/sendinblue/src/Tools/Api/SendinblueApiV3.php
modules/contrib/sendinblue/src/Tools/Http/SendinblueHttpClient.php
modules/contrib/sendinblue/src/Tools/Model/CreateSmtpEmail.php
modules/contrib/sendinblue/src/Tools/Model/GetAccount.php
modules/contrib/sendinblue/src/Tools/Model/GetAccountPlan.php
modules/contrib/sendinblue/src/Tools/Model/GetAttributes.php
modules/contrib/sendinblue/src/Tools/Model/GetAttributesAttributes.php
modules/contrib/sendinblue/src/Tools/Model/GetAttributesEnumeration.php
modules/contrib/sendinblue/src/Tools/Model/GetExtendedClientAddress.php
modules/contrib/sendinblue/src/Tools/Model/GetExtendedContactDetails.php
modules/contrib/sendinblue/src/Tools/Model/GetExtendedList.php
modules/contrib/sendinblue/src/Tools/Model/GetLists.php
modules/contrib/sendinblue/src/Tools/Model/GetSmtpDetails.php
modules/contrib/sendinblue/src/Tools/Model/GetSmtpTemplateOverview.php
modules/contrib/sendinblue/src/Tools/Model/GetSmtpTemplates.php

18 files with changes
=====================

1) modules/contrib/sendinblue/src/Tools/Http/SendinblueHttpClient.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sendinblue\Tools\Http;

+use Drupal\Core\Logger\LoggerChannelFactory;
+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use GuzzleHttp\Exception\RequestException;
@@ @@
   /**
    * GuzzleClient to comm with Sib.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   public $client;

@@ @@
   /**
    * Logger Service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;

@@ @@
   /**
    * SendinblueHttpClient constructor.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   LoggerChannelFactory.
-   * @param \GuzzleHttp\ClientInterface $http_client
+   * @param ClientInterface $http_client
    *   ClientInterface.
    */
   public function __construct(
@@ @@
    * @return array
    *   An associate array with respond data.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function doRequestDirect(string $called_url, string $method, array $data, array $options) {
     if (!function_exists('curl_init')) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/sendinblue/src/Tools/Api/SendinblueApiV3.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sendinblue\Tools\Api;

+use Drupal\Core\Logger\LoggerChannelFactory;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\sendinblue\Tools\Http\SendinblueHttpClient;
@@ @@
   /**
    * Logger Service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    *   LoggerChannelFactory.
    */
   protected $loggerFactory;
@@ @@
   /**
    * Get the AccountApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\AccountApi
+   * @var AccountApi
    *   AccountApi.
    */
   private $sibAccountApi;
@@ @@
   /**
    * Get the EmailCampaignsApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\EmailCampaignsApi
+   * @var EmailCampaignsApi
    *   EmailCampaignsApi.
    */
   private $sibEmailCampaignsApi;
@@ @@
   /**
    * Get the ListsApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\ListsApi
+   * @var ListsApi
    *   ListsApi.
    */
   private $sibListsApi;
@@ @@
   /**
    * Get the ContactsApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\ContactsApi
+   * @var ContactsApi
    *   ContactsApi.
    */
   private $sibContactsApi;
@@ @@
   /**
    * Get the AttributesApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\AttributesApi
+   * @var AttributesApi
    *   AttributesApi.
    */
   private $sibAttributesApi;
@@ @@
   /**
    * Get the SendersApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\SendersApi
+   * @var SendersApi
    *   SendersApi.
    */
   private $sibSendersApi;
@@ @@
   /**
    * Get the SMTPApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\TransactionalEmailsApi
+   * @var TransactionalEmailsApi
    *   TransactionalEmailsApi
    */
   private $sibTransactionalEmailsApi;
@@ @@
   /**
    * Get the Configuration from SendInBlue.
    *
-   * @var \SendinBlue\Client\Configuration
+   * @var Configuration
    *   Configuration.
    */
   private $sibClientConfiguration;
@@ @@
   /**
    * Get the SendinblueHttpClient for HTTP cURL.
    *
-   * @var \Drupal\sendinblue\Tools\Http\SendinblueHttpClient
+   * @var SendinblueHttpClient
    *   SendinblueHttpClient.
    */
   private $sIBHttpClient;
@@ @@
   /**
    * Get the ResellerApi from SendInBlue.
    *
-   * @var \SendinBlue\Client\Api\ResellerApi
+   * @var ResellerApi
    *   ResellerApi.
    */
   private $sibResellerApi;
@@ @@
   /**
    * SendinblueMailin constructor.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   LoggerChannelFactory.
-   * @param \Drupal\sendinblue\Tools\Http\SendinblueHttpClient $sIBHttpClient
+   * @param SendinblueHttpClient $sIBHttpClient
    *   SendinblueHttpClient.
    */
   public function __construct(
@@ @@
   /**
    * Get SendInBlueV3 Configuration.
    *
-   * @return \SendinBlue\Client\Configuration
+   * @return Configuration
    *   SendInBlueV3 Configuration
    */
   public function getSibClientConfiguration() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/sendinblue/src/Tools/Api/SendinblueApiV2.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sendinblue\Tools\Api;

+use Drupal\Core\Logger\LoggerChannelFactory;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\sendinblue\Tools\Http\SendinblueHttpClient;
@@ @@
   /**
    * GuzzleClient to comm with Sib.
    *
-   * @var \Drupal\sendinblue\Tools\Http\SendinblueHttpClient
+   * @var SendinblueHttpClient
    */
   public $sIBHttpClient;

@@ @@
   /**
    * Logger Service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactory
+   * @var LoggerChannelFactory
    */
   protected $loggerFactory;

@@ @@
   /**
    * SendinblueApiV2 constructor.
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   LoggerChannelFactory.
-   * @param \Drupal\sendinblue\Tools\Http\SendinblueHttpClient $sIBHttpClient
+   * @param SendinblueHttpClient $sIBHttpClient
    *   ClientInterface.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/sendinblue/src/Tools/Api/SendInBlueApiInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sendinblue\Tools\Api;

+use Drupal\sendinblue\Tools\Model\GetAccount;
+use Drupal\sendinblue\Tools\Model\GetSmtpTemplates;
+use Drupal\sendinblue\Tools\Model\GetSmtpTemplateOverview;
+use Drupal\sendinblue\Tools\Model\GetLists;
+use Drupal\sendinblue\Tools\Model\GetExtendedList;
+use Drupal\sendinblue\Tools\Model\CreateSmtpEmail;
+use Drupal\sendinblue\Tools\Model\GetExtendedContactDetails;
+use Drupal\sendinblue\Tools\Model\GetAttributes;
+use Drupal\sendinblue\Tools\Model\GetSmtpDetails;
 /**
  * Interface for SendInBlue API.
  */
@@ @@
   /**
    * Get the details of an account.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetAccount
+   * @return GetAccount
    *   An array of account detail.
    */
   public function getAccount();
@@ @@
   /**
    * Get templates.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetSmtpTemplates
+   * @return GetSmtpTemplates
    *   An array of campaigns.
    */
   public function getTemplates();
@@ @@
    * @param string $id
    *   A template identification.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetSmtpTemplateOverview
+   * @return GetSmtpTemplateOverview
    *   A template.
    */
   public function getTemplate($id);
@@ @@
   /**
    * Get lists of an account.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetLists
+   * @return GetLists
    *   An array of all lists.
    */
   public function getLists();
@@ @@
    * @param string $id
    *   A list identification.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetExtendedList
+   * @return GetExtendedList
    *   An array of lists.
    */
   public function getList($id);
@@ @@
    * @param array $headers
    *   A header of email.
    *
-   * @return \Drupal\sendinblue\Tools\Model\CreateSmtpEmail
+   * @return CreateSmtpEmail
    *   An array of response code.
    */
   public function sendEmail(
@@ @@
    * @param string $email
    *   An email address.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetExtendedContactDetails
+   * @return GetExtendedContactDetails
    *   An array of response code.
    */
   public function getUser($email);
@@ @@
   /**
    * Get attribute by type.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetAttributes
+   * @return GetAttributes
    *   An array of attributes.
    */
   public function getAttributes();
@@ @@
   /**
    * Get the details of smtp.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetSmtpDetails|null
+   * @return GetSmtpDetails|null
    *   A smtp details.
    */
   public function getSmtpDetails();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/sendinblue/src/SendinblueManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sendinblue;

+use Drupal\sendinblue\Tools\Model\GetAttributesAttributes;
+use Drupal\sendinblue\Tools\Model\GetSmtpTemplates;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Database\Connection;
@@ @@
   /**
    * ConfigFactoryInterface.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   private $configFactory;
   /**
    * FormBuilderInterface.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   private $formBuilder;
   /**
    * Renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   private $renderer;
   /**
    * SendinblueMailin.
    *
-   * @var \Drupal\sendinblue\Tools\Api\SendInBlueApiInterface
+   * @var SendInBlueApiInterface
    */
   private $sendinblueMailin;
   /**
    * Connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private $connection;
   /**
    * MailManagerInterface.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   private $mailManager;
   /**
    * AccountProxyInterface.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   private $accountProxy;
   /**
    * SendinblueApi V2.
    *
-   * @var \Drupal\sendinblue\Tools\Api\SendinblueApiV2
+   * @var SendinblueApiV2
    */
   private $sendinblueApiV2;
   /**
    * SendinblueApi V3.
    *
-   * @var \Drupal\sendinblue\Tools\Api\SendinblueApiV3
+   * @var SendinblueApiV3
    */
   private $sendinblueApiV3;

@@ @@
   /**
    * EntityModerationForm constructor.
    *
-   * @param \Drupal\sendinblue\Tools\Api\SendinblueApiV2 $sendinblueApiV2
+   * @param SendinblueApiV2 $sendinblueApiV2
    *   SendinblueMailin.
-   * @param \Drupal\sendinblue\Tools\Api\SendinblueApiV3 $sendinblueApiV3
+   * @param SendinblueApiV3 $sendinblueApiV3
    *   SendinblueMailin.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   ConfigFactoryInterface.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   Connection.
-   * @param \Drupal\Core\Form\FormBuilderInterface $formBuilder
+   * @param FormBuilderInterface $formBuilder
    *   FormBuilderInterface.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   Renderer.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mailManager
+   * @param MailManagerInterface $mailManager
    *   MailManagerInterface.
-   * @param \Drupal\Core\Session\AccountProxyInterface $accountProxy
+   * @param AccountProxyInterface $accountProxy
    *   AccountProxyInterface.
    */
   public function __construct(
@@ @@
   /**
    * Get the correct Class in function of API version.
    *
-   * @return \Drupal\sendinblue\Tools\Api\SendInBlueApiInterface
+   * @return SendInBlueApiInterface
    *   SendInBlueApiInterface (V2 or V3)
    */
   public function getSendinblueMailin(): SendInBlueApiInterface {
@@ @@
    * @param string $accessKey
    *   The SiB access key.
    *
-   * @return \Drupal\sendinblue\Tools\Api\SendInBlueApiInterface
+   * @return SendInBlueApiInterface
    *   SendInBlueApiInterface (V2 or V3)
    */
   public function updateSendinblueMailin($accessKey) {
@@ @@
    */
   public function getEmailTemplate($type = 'test') {
     $file = 'temp';
-    $file_path = drupal_get_path('module', 'sendinblue') . '/asset/email-templates/' . $type . '/';
+    $file_path = \Drupal::service('extension.list.module')->getPath('sendinblue') . '/asset/email-templates/' . $type . '/';
     // Get html content.
     $html_content = file_get_contents($file_path . $file . '.html');
     // Get text content.
@@ @@
   /**
    * Get Attribute lists.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetAttributesAttributes[]
+   * @return GetAttributesAttributes[]
    *   An array of attributes.
    */
   public function getAttributeLists() {
@@ @@
   /**
    * Get template list.
    *
-   * @return \Drupal\sendinblue\Tools\Model\GetSmtpTemplates
+   * @return GetSmtpTemplates
    *   An array of template.
    */
   public function getTemplateList() {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/sendinblue/src/Routing/SubscribeRoutes.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * EntityModerationForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/sendinblue/src/Plugin/Mail/SendInBlueEmail.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    *   SendinblueManager
    */
   private $sendinblueManager;
@@ @@
   /**
    * Logger Service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    *   LoggerChannelFactory
    */
   protected $loggerFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/sendinblue/src/Plugin/Derivative/SendinblueBlock.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * EntityTypeManagerInterface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/sendinblue/src/Plugin/Block/SendinblueBlock.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * FormBuilderInterface.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   private $formBuilder;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/sendinblue/src/Form/TransactionnalEmailForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * EmailValidatorInterface.
    *
-   * @var \Drupal\Component\Utility\EmailValidator
+   * @var EmailValidator
    */
   private $emailValidator;
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    */
   private $sendinblueManager;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Component\Utility\EmailValidator $emailValidator
+   * @param EmailValidator $emailValidator
    *   EmailValidatorInterface.
-   * @param \Drupal\sendinblue\SendinblueManager $sendinblueManager
+   * @param SendinblueManager $sendinblueManager
    *   SendinblueManager.
    */
   public function __construct(
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/sendinblue/src/Form/SubscribeForm.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * EntityTypeManagerInterface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
   /**
    * EmailValidatorInterface.
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   private $emailValidator;
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    */
   private $sendinblueManager;

@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param int $mcsId
    *   The ID of signupForm.
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/sendinblue/src/Form/SignupForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sendinblue\Form;

+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Entity\ContentEntityForm;
@@ @@
   /**
    * RouteBuilderInterface.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   private $routeBuilder;
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    */
   private $sendinblueManager;

@@ @@
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
     parent::validateForm($form, $form_state);
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = $this->buildEntity($form, $form_state);

     $path = $form_state->getValue(['path']);
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/sendinblue/src/Form/RegisteringUserForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    */
   private $sendinblueManager;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\sendinblue\SendinblueManager $sendinblueManager
+   * @param SendinblueManager $sendinblueManager
    *   SendinblueManager.
    */
   public function __construct(
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/sendinblue/src/Form/LogoutForm.php:25

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/sendinblue/src/Form/ConfigurationSendinblueForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    */
   private $sendinblueManager;
   /**
    * CacheBackendInterface.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   private $cacheBackend;
   /**
    * MenuLinkManagerInterface.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   private $menuLinkManager;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\sendinblue\SendinblueManager $sendinblueManager
+   * @param SendinblueManager $sendinblueManager
    *   SendinblueManager.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   CacheBackendInterface.
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menuLinkManager
+   * @param MenuLinkManagerInterface $menuLinkManager
    *   MenuLinkManagerInterface.
    */
   public function __construct(
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/sendinblue/src/Entity/Controller/SignupListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\sendinblue\Entity\Controller;

+use Drupal\user\Entity\Role;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    */
   private $sendinblueManager;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   EntityTypeInterface.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   EntityStorageInterface.
-   * @param \Drupal\sendinblue\SendinblueManager $sendinblueManager
+   * @param SendinblueManager $sendinblueManager
    *   SendinblueManager.
    */
   public function __construct(
@@ @@
       $page_roles_allowed = user_roles(FALSE, 'sendinblue_signup_form_' . $signup->name->value);
       $roles_allowed = array_merge($all_roles_allowed, $page_roles_allowed);

-      /** @var \Drupal\user\Entity\Role $role_object */
+      /** @var Role $role_object */
       foreach ($roles_allowed as $id => $role_object) {
         $roles_allowed[$id] = $role_object->label();
       }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/sendinblue/src/Controller/SendinblueController.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * SendinblueManager.
    *
-   * @var \Drupal\sendinblue\SendinblueManager
+   * @var SendinblueManager
    */
   private $sendinblueManager;

@@ @@
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    */
   public function access(AccountInterface $account) {
@@ @@
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    */
   public function accessToSsoSib(AccountInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/sendinblue/sendinblue.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\ConfigFactoryInterface;
 /**
  * @file
  * The entry point of Sendinblue module.
@@ @@
  * @see \Drupal\node\Tests\NodeSaveTest::testNodeSaveOnInsert()
  */
 function sendinblue_user_insert(UserInterface $user) {
-  /** @var \Drupal\sendinblue\SendinblueManager $sendInBlueManager */
+  /** @var SendinblueManager $sendInBlueManager */
   $sendInBlueManager = \Drupal::service('sendinblue.manager');
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $configFactory */
+  /** @var ConfigFactoryInterface $configFactory */
   $configFactory = \Drupal::service('config.factory');

   $sendinblue_registered_active = $configFactory->get(SendinblueManager::CONFIG_SETTINGS_REGISTERING_USER)
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 18 files have been changed by Rector                                      

