modules/contrib/library_select/library_select.module
modules/contrib/library_select/modules/library_select_context/library_select_context.module
modules/contrib/library_select/modules/library_select_context/src/Plugin/ContextReaction/LibrarySelect.php
modules/contrib/library_select/modules/library_select_context/tests/src/Functional/LoadTest.php
modules/contrib/library_select/src/Entity/LibrarySelectEntity.php
modules/contrib/library_select/src/Entity/LibrarySelectEntityInterface.php
modules/contrib/library_select/src/Form/LibrarySelectEntityDeleteForm.php
modules/contrib/library_select/src/Form/LibrarySelectEntityForm.php
modules/contrib/library_select/src/LibraryFileStorage.php
modules/contrib/library_select/src/LibrarySelectEntityHtmlRouteProvider.php
modules/contrib/library_select/src/LibrarySelectEntityListBuilder.php
modules/contrib/library_select/src/Plugin/Field/FieldFormatter/LibraryFileFormatter.php
modules/contrib/library_select/src/Plugin/Field/FieldFormatter/LibrarySelectFormatter.php
modules/contrib/library_select/src/Plugin/Field/FieldType/LibrarySelectField.php
modules/contrib/library_select/src/Plugin/Field/FieldWidget/LibrarySelectWidget.php
modules/contrib/library_select/tests/src/Functional/LoadTest.php

6 files with changes
====================

1) modules/contrib/library_select/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\library_select\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/library_select/src/Plugin/Field/FieldFormatter/LibraryFileFormatter.php:53

    ---------- begin diff ----------
@@ @@
     $elements = [];

     foreach ($this->getEntitiesToView($items, $langcode) as $file) {
-      /** @var \Drupal\file\Entity\File $file_entity */
+      /** @var File $file_entity */
       $file_entity = ($file instanceof File) ? $file : File::load($file->fid);
-      $relativePath = file_url_transform_relative(file_create_url($file_entity->getFileUri()));
+      $relativePath = \Drupal::service('file_url_generator')->generateString($file_entity->getFileUri());
       if ($file_entity->getMimeType() === 'text/css') {
         library_select_add_css($relativePath);
       }
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/library_select/src/LibraryFileStorage.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Asset with file storage.
    *
-   * @var \Drupal\library_select\Entity\LibrarySelectEntity
+   * @var LibrarySelectEntity
    */
   protected $asset;

@@ @@
   /**
    * LibraryFileStorage constructor.
    *
-   * @param \Drupal\library_select\Entity\LibrarySelectEntity $asset
+   * @param LibrarySelectEntity $asset
    *   The library asset.
    */
   public function __construct(LibrarySelectEntity $asset) {
@@ @@
   /**
    * Get file system.
    *
-   * @return \Drupal\Core\File\FileSystemInterface
+   * @return FileSystemInterface
    *   The file system.
    */
   public function getFileSystem() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/library_select/src/Form/LibrarySelectEntityForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\library_select\Form;

+use Drupal\library_select\Entity\LibrarySelectEntity;
+use Drupal\Core\Asset\LibraryDiscoveryCollector;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
    */
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
-    /** @var \Drupal\library_select\Entity\LibrarySelectEntity $entity */
+    /** @var LibrarySelectEntity $entity */
     $entity = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
@@ @@
         ]));
     }
     // Clear library cache.
-    /** @var \Drupal\Core\Asset\LibraryDiscoveryCollector $libraryCollector */
+    /** @var LibraryDiscoveryCollector $libraryCollector */
     $libraryCollector = \Drupal::service('library.discovery.collector');
     $libraryCollector->clear();
     $form_state->setRedirectUrl($entity->toUrl('collection'));
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/library_select/modules/library_select_context/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\library_select_context\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/library_select/library_select.module:47

    ---------- begin diff ----------
@@ @@
 function library_select_library_info_build() {
   $libraries = [];
   foreach (LibrarySelectEntity::loadMultiple() as $item) {
-    /** @var \Drupal\library_select\Entity\LibrarySelectEntity $item */
+    /** @var LibrarySelectEntity $item */
     if ($library_info = $item->libraryInfo()) {
       $libraries[$item->id()] = $library_info;
     }
@@ @@
     return;
   }
   foreach (LibrarySelectEntity::loadMultiple() as $lib_id => $item) {
-    /** @var \Drupal\library_select\Entity\LibrarySelectEntity $item */
+    /** @var LibrarySelectEntity $item */
     $library = $item->libraryInfo();
     if (in_array("library_select/$lib_id", $libraries) && !empty($library['css'])) {
       foreach ($library['css'] as $group) {
@@ @@
  *   The form element.
  * @param $input
  *   The input.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form_state.
  */
 function library_select_file_value_callback($element, &$input, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [ERROR] Could not process                                                      
         "modules/contrib/library_select/modules/library_select_context/src/Plugin
         /ContextReaction/LibrarySelect.php" file, due to:                      
         "Analyze error: "Class Drupal\context\ContextReactionPluginBase not    
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

