modules/contrib/search_api_lunr/search_api_lunr.module
modules/contrib/search_api_lunr/src/Controller/SearchPage.php
modules/contrib/search_api_lunr/src/Controller/SettingsController.php
modules/contrib/search_api_lunr/src/IndexInformation.php
modules/contrib/search_api_lunr/src/IndexInformationInterface.php
modules/contrib/search_api_lunr/src/JsonContentIndex.php
modules/contrib/search_api_lunr/src/PageAttachments.php
modules/contrib/search_api_lunr/src/Plugin/Block/SearchFormBlock.php
modules/contrib/search_api_lunr/src/Plugin/search_api/backend/LunrBackend.php
modules/contrib/search_api_lunr/src/Plugin/search_api/data_type/LunrDocumentBoost.php
modules/contrib/search_api_lunr/src/Plugin/search_api/data_type/LunrLabel.php
modules/contrib/search_api_lunr/src/Plugin/search_api/data_type/LunrSummary.php
modules/contrib/search_api_lunr/src/Plugin/search_api/data_type/LunrUrl.php
modules/contrib/search_api_lunr/tests/src/Functional/LunrSettingsEndpointTest.php
modules/contrib/search_api_lunr/tests/src/FunctionalJavascript/LunrSearchTest.php
modules/contrib/search_api_lunr/tests/src/Kernel/LunrIndexingTest.php
modules/contrib/search_api_lunr/tests/src/Kernel/LunrTestingTrait.php
modules/contrib/search_api_lunr/tests/src/Unit/JsonContentIndexTest.php
modules/contrib/search_api_lunr/tests/src/Unit/PageAttachmentsTest.php

10 files with changes
=====================

1) modules/contrib/search_api_lunr/tests/src/Unit/PageAttachmentsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\search_api_lunr\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Entity\ContentEntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\search_api\DataType\DataTypeInterface;
@@ @@
  */
 class PageAttachmentsTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::attachments
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/search_api_lunr/tests/src/Unit/JsonContentIndexTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\search_api_lunr\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\File\FileSystem;
 use Drupal\Core\Site\Settings;
 use Drupal\Core\StreamWrapper\StreamWrapperManagerInterface;
@@ @@
  */
 class JsonContentIndexTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * Flex the index.
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/search_api_lunr/tests/src/Kernel/LunrIndexingTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\search_api_solr\Kernel;

+use Drupal\search_api\IndexInterface;
+use Drupal\search_api_lunr\Plugin\search_api\backend\LunrBackend;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\search_api_lunr\Kernel\LunrTestingTrait;
@@ @@
   ];

   /**
-   * @var \Drupal\search_api\IndexInterface
+   * @var IndexInterface
    */
   protected $index;

   /**
-   * @var \Drupal\search_api_lunr\Plugin\search_api\backend\LunrBackend
+   * @var LunrBackend
    */
   protected $backend;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->installSchema('search_api', ['search_api_item']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/search_api_lunr/tests/src/FunctionalJavascript/LunrSearchTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\search_api_lunr\FunctionalJavascript;

+use Drupal\search_api\IndexInterface;
+use Drupal\search_api_lunr\Plugin\search_api\backend\LunrBackend;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\search_api_lunr\Kernel\LunrTestingTrait;
@@ @@
   ];

   /**
-   * @var \Drupal\search_api\IndexInterface
+   * @var IndexInterface
    */
   protected $index;

   /**
-   * @var \Drupal\search_api_lunr\Plugin\search_api\backend\LunrBackend
+   * @var LunrBackend
    */
   protected $backend;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->index = $this->createServerIndex();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/search_api_lunr/tests/src/Functional/LunrSettingsEndpointTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createServerIndex();
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/search_api_lunr/src/Plugin/search_api/backend/LunrBackend.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_lunr\Plugin\search_api\backend;

+use Drupal\Core\State\StateInterface;
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\search_api\Item\ItemInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\PluginFormInterface;
 use Drupal\search_api\Backend\BackendPluginBase;
@@ @@
   /**
    * The JSON index.
    *
-   * @var \Drupal\search_api_lunr\JsonContentIndex
+   * @var JsonContentIndex
    */
   protected $jsonIndex;

@@ @@
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
    * {@inheritdoc}
    */
   public function indexItems(IndexInterface $index, array $items) {
-    /** @var \Drupal\search_api\Item\ItemInterface $item */
+    /** @var ItemInterface $item */
     $indexed = [];
     foreach ($items as $key => $item) {
       $item_data = [
@@ @@
   /**
    * Process field values.
    *
-   * @param \Drupal\search_api\DataType\DataTypeInterface $dataType
+   * @param DataTypeInterface $dataType
    *   The data type.
    * @param array $values
    *   An array of values to process.
@@ @@
   /**
    * Get a content index.
    *
-   * @return \Drupal\search_api_lunr\JsonContentIndex
+   * @return JsonContentIndex
    *   A JSON content index.
    */
   protected function jsonIndex(IndexInterface $index) {
@@ @@
   /**
    * Get the base path to the JS files.
    *
-   * @param \Drupal\search_api\IndexInterface $index
+   * @param IndexInterface $index
    *   The index.
    *
    * @return string
@@ @@
   /**
    * Get the current file list for the whole index.
    *
-   * @param \Drupal\search_api\IndexInterface $index
+   * @param IndexInterface $index
    *   The index.
    *
    * @return array
@@ @@
     foreach (range(0, $this->getIndexFileLimit()) as $index_file) {
       $candidate_file = sprintf('%s/index-%d.json', $base_path, $index_file);
       if (file_exists($candidate_file)) {
-        $files[] = file_create_url($candidate_file);
+        $files[] = \Drupal::service('file_url_generator')->generateAbsoluteString($candidate_file);
       }
     }
     return $files;
@@ @@
    *
    * When a change is made to the index, it reindexed by clients.
    *
-   * @param \Drupal\search_api\IndexInterface $index
+   * @param IndexInterface $index
    *   The index.
    *
    * @return int
@@ @@
   /**
    * Bump the index version.
    *
-   * @param \Drupal\search_api\IndexInterface $index
+   * @param IndexInterface $index
    *   The index to bump.
    */
   protected function bumpIndexVersion(IndexInterface $index) {
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/search_api_lunr/src/PageAttachments.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The index information service.
    *
-   * @var \Drupal\search_api_lunr\IndexInformationInterface
+   * @var IndexInformationInterface
    */
   protected $indexInformation;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/search_api_lunr/src/JsonContentIndex.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/search_api_lunr/src/IndexInformation.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_lunr;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\search_api\Item\FieldInterface;

@@ @@
 class IndexInformation implements IndexInformationInterface {

   /**
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $serverStorage;

@@ @@
   /**
    * Process a search API field into settings.
    *
-   * @param \Drupal\search_api\Item\FieldInterface $field
+   * @param FieldInterface $field
    *   The search API field.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/search_api_lunr/src/Controller/SettingsController.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The index information.
    *
-   * @var \Drupal\search_api_lunr\IndexInformationInterface
+   * @var IndexInformationInterface
    */
   protected $indexInformation;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 10 files have been changed by Rector                                      

