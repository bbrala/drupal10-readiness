diff --git a/modules/resque_queue_example/src/Plugin/QueueWorker/Resque.php b/modules/resque_queue_example/src/Plugin/QueueWorker/Resque.php
index 050b316..f4ea238 100644
--- a/modules/resque_queue_example/src/Plugin/QueueWorker/Resque.php
+++ b/modules/resque_queue_example/src/Plugin/QueueWorker/Resque.php
@@ -22,7 +22,7 @@ class Resque extends QueueWorkerBase implements ContainerFactoryPluginInterface
   /**
    * Example of injected service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
diff --git a/src/DrupalWorkerJob.php b/src/DrupalWorkerJob.php
index b629ccc..67d8fa9 100644
--- a/src/DrupalWorkerJob.php
+++ b/src/DrupalWorkerJob.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\resque;
 
+use Drupal\Core\Queue\QueueWorkerManager;
+use Drupal\Component\Plugin\Exception\PluginException;
 use Psr\Container\ContainerInterface;
 
 /**
@@ -18,14 +20,14 @@ class DrupalWorkerJob {
   /**
    * Queue worker manager instance.
    *
-   * @var \Drupal\Core\Queue\QueueWorkerManager|mixed
+   * @var QueueWorkerManager|mixed
    */
   protected $queueWorkerManager;
 
   /**
    * Inject require dependencies to perform queue item using Drupal API.
    *
-   * @param \Psr\Container\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container instance.
    */
   public function getDependencies(ContainerInterface $container): void {
@@ -35,7 +37,7 @@ class DrupalWorkerJob {
   /**
    * Perform queue item.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    * @throws \Exception
    */
   public function perform(): void {
diff --git a/src/Event/EventBase.php b/src/Event/EventBase.php
index fdf010c..679dac9 100644
--- a/src/Event/EventBase.php
+++ b/src/Event/EventBase.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\resque\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class EventBase.
diff --git a/src/EventListenerManager.php b/src/EventListenerManager.php
index 7825aa5..7e14bca 100644
--- a/src/EventListenerManager.php
+++ b/src/EventListenerManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\resque;
 
+use Psr\Container\ContainerInterface;
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal;
 use Drupal\Core\Database\Database;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
@@ -35,7 +37,7 @@ class EventListenerManager implements EventListenerInterface {
   /**
    * Event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $dispatcher;
 
@@ -49,23 +51,23 @@ class EventListenerManager implements EventListenerInterface {
   /**
    * The service container.
    *
-   * @var \Psr\Container\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;
 
   /**
    * Drupal kernel instance.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected $kernel;
 
   /**
    * EventListenerManager constructor.
    *
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   Drupal kernel.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher
+   * @param EventDispatcherInterface $dispatcher
    *   Event dispatcher instance.
    */
   public function __construct(DrupalKernelInterface $kernel, EventDispatcherInterface $dispatcher) {
@@ -80,14 +82,14 @@ class EventListenerManager implements EventListenerInterface {
   /**
    * Event dispatcher wrapper.
    *
-   * @param \Symfony\Component\EventDispatcher\Event|mixed $event
+   * @param Event|mixed $event
    *   Event which need to be dispatched.
    */
   protected function dispatch(EventInterface $event): void {
     if ($this->bc) {
       /* @deprecated since 2.0.0 and removed from 2.1.0. */
       // Symfony 3.
-      $this->dispatcher->dispatch($event->getName(), $event);
+      $this->dispatcher->dispatch($event, $event->getName());
     }
     else {
       // Symfony 4+.
diff --git a/src/Queue/QueueResqueFactory.php b/src/Queue/QueueResqueFactory.php
index 3ab1f42..c9e8cad 100644
--- a/src/Queue/QueueResqueFactory.php
+++ b/src/Queue/QueueResqueFactory.php
@@ -15,7 +15,7 @@ class QueueResqueFactory {
    * @param string $name
    *   Name of the queue.
    *
-   * @return \Drupal\resque\Queue\Resque
+   * @return Resque
    *   Queue manager instance.
    */
   public function get(string $name): Resque {
