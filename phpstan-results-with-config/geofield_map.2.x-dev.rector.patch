diff --git a/geofield_map.api.php b/geofield_map.api.php
index 476fad4..315bba4 100644
--- a/geofield_map.api.php
+++ b/geofield_map.api.php
@@ -40,9 +40,9 @@ function hook_geofield_map_latlon_element_alter(array &$map_settings, array &$co
  *
  * @param array $feature
  *   The geofield_map formatter feature/marker.
- * @param \Drupal\geofield\Plugin\Field\FieldType\GeofieldItem $item
+ * @param GeofieldItem $item
  *   The Geofield Item.
- * @param \Drupal\Core\Entity\ContentEntityBase $entity
+ * @param ContentEntityBase $entity
  *   The Content Entity base of the formatter.
  */
 function hook_geofield_map_formatter_feature_alter(array &$feature, GeofieldItem $item, ContentEntityBase $entity) {
@@ -57,7 +57,7 @@ function hook_geofield_map_formatter_feature_alter(array &$feature, GeofieldItem
  *
  * @param array $map_settings
  *   The array of geofield map element settings.
- * @param \Drupal\Core\Field\FieldItemListInterface $items
+ * @param FieldItemListInterface $items
  *   The field values to be rendered.
  * */
 function hook_geofield_map_googlemap_formatter_alter(array &$map_settings, FieldItemListInterface &$items) {
@@ -69,9 +69,9 @@ function hook_geofield_map_googlemap_formatter_alter(array &$map_settings, Field
  *
  * @param array $feature
  *   The geofield_map feature.
- * @param \Drupal\views\ResultRow $row
+ * @param ResultRow $row
  *   The views result row.
- * @param \Drupal\views\Plugin\views\row\RowPluginBase $rowPlugin
+ * @param RowPluginBase $rowPlugin
  *   (optional) The row plugin used for rendering the feature.
  */
 function hook_geofield_map_views_feature_alter(array &$feature, ResultRow $row, RowPluginBase $rowPlugin = NULL) {
@@ -86,7 +86,7 @@ function hook_geofield_map_views_feature_alter(array &$feature, ResultRow $row,
  *
  * @param array $map_settings
  *   The array of geofield map element settings.
- * @param \Drupal\geofield_map\Plugin\views\style\GeofieldGoogleMapViewStyle $view_style
+ * @param GeofieldGoogleMapViewStyle $view_style
  *   The Geofield Google Map View Style.
  * */
 function hook_geofield_map_googlemap_view_style_alter(array &$map_settings, GeofieldGoogleMapViewStyle &$view_style) {
diff --git a/geofield_map.module b/geofield_map.module
index 2e8a51d..e2003a6 100755
--- a/geofield_map.module
+++ b/geofield_map.module
@@ -22,7 +22,7 @@ function geofield_map_help($route_name, RouteMatchInterface $route_match) {
       $output .= '<h3>' . t('Geofield Map Help') . '</h3>';
       $output .= '<p>' . t('Map Widget, Formatter and Views integration for Geofields.') . '</p>';
       $output .= '<p>' . t('For more info: @readme', [
-        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . drupal_get_path('module', 'geofield_map') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
+        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . \Drupal::service('extension.list.module')->getPath('geofield_map') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
       ]) . '</p>';
   }
   return $output;
@@ -236,7 +236,7 @@ function geofield_map_preprocess_select(&$variables) {
       '#theme' => 'image',
       '#width' => $image_preview_width,
       '#height' => $image_preview_height,
-      '#uri' => file_create_url($element['#value']),
+      '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($element['#value']),
     ];
     $variables['data'] = [];
     foreach (Element::children($element) as $child) {
@@ -248,7 +248,7 @@ function geofield_map_preprocess_select(&$variables) {
 /**
  * Checks that the file is recognized as a valid image.
  *
- * @param \Drupal\file\FileInterface $file
+ * @param FileInterface $file
  *   A file entity.
  *
  * @return array
diff --git a/geofield_map.post_update.php b/geofield_map.post_update.php
index 65ae81b..3966824 100644
--- a/geofield_map.post_update.php
+++ b/geofield_map.post_update.php
@@ -29,7 +29,7 @@ function geofield_map_post_update_recalculate_formatter_dependencies(&$sandbox)
         $displays = $config_factory->listAll("core.entity_view_display.{$entity_type_id}.{$bundle_name}.");
         foreach ($displays as $display_name) {
           $id = substr($display_name, 25);
-          /** @var \Drupal\Core\Entity\Entity\EntityViewDisplay $display */
+          /** @var EntityViewDisplay $display */
           $display = EntityViewDisplay::load($id);
           if ($display) {
             $component = $display->getComponent($field_name);
diff --git a/modules/geofield_map_extras/geofield_map_extras.module b/modules/geofield_map_extras/geofield_map_extras.module
index 9a272c0..f737a0e 100644
--- a/modules/geofield_map_extras/geofield_map_extras.module
+++ b/modules/geofield_map_extras/geofield_map_extras.module
@@ -19,7 +19,7 @@ function geofield_map_extras_help($route_name, RouteMatchInterface $route_match)
       $output .= '<h3>' . t('Geofield Map Extras Help') . '</h3>';
       $output .= '<p>' . t('Additional features to the main Geofield Map module.') . '</p>';
       $output .= '<p>' . t('For more info: @readme', [
-        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . drupal_get_path('module', 'geofield_map_extras') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
+        '@readme' => Link::fromTextAndUrl(t('Readme.md'), Url::fromUri('base:/' . \Drupal::service('extension.list.module')->getPath('geofield_map_extras') . '/README.md', ['attributes' => ['target' => '_blank']]))->toString(),
       ]) . '</p>';
   }
   return $output;
diff --git a/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleEmbedMapFormatter.php b/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleEmbedMapFormatter.php
index 31ebc65..3b000e1 100644
--- a/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleEmbedMapFormatter.php
+++ b/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleEmbedMapFormatter.php
@@ -33,14 +33,14 @@ class GeofieldGoogleEmbedMapFormatter extends FormatterBase implements Container
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
   /**
    * The Json Encoder Service.
    *
-   * @var \Drupal\Component\Serialization\Json
+   * @var Json
    */
   protected $encoder;
 
@@ -51,7 +51,7 @@ class GeofieldGoogleEmbedMapFormatter extends FormatterBase implements Container
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -61,9 +61,9 @@ class GeofieldGoogleEmbedMapFormatter extends FormatterBase implements Container
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\Component\Serialization\Json $encoder
+   * @param Json $encoder
    *   The Json Encoder Service.
    */
   public function __construct(
diff --git a/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleStaticMapFormatter.php b/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleStaticMapFormatter.php
index 330ce60..4539ccb 100644
--- a/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleStaticMapFormatter.php
+++ b/modules/geofield_map_extras/src/Plugin/Field/FieldFormatter/GeofieldGoogleStaticMapFormatter.php
@@ -31,7 +31,7 @@ class GeofieldGoogleStaticMapFormatter extends FormatterBase implements Containe
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
@@ -42,7 +42,7 @@ class GeofieldGoogleStaticMapFormatter extends FormatterBase implements Containe
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -52,7 +52,7 @@ class GeofieldGoogleStaticMapFormatter extends FormatterBase implements Containe
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
    */
   public function __construct(
diff --git a/src/Annotation/LeafletTileLayerPlugin.php b/src/Annotation/LeafletTileLayerPlugin.php
index 4ffec3f..5c7daa3 100644
--- a/src/Annotation/LeafletTileLayerPlugin.php
+++ b/src/Annotation/LeafletTileLayerPlugin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield_map\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class LeafletTileLayerPlugin extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/MapThemer.php b/src/Annotation/MapThemer.php
index c31c410..653e45e 100644
--- a/src/Annotation/MapThemer.php
+++ b/src/Annotation/MapThemer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield_map\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class MapThemer extends Plugin {
   /**
    * The human-readable name of the Geofield Map Themer plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Controller/GeofieldMapAjaxPopupController.php b/src/Controller/GeofieldMapAjaxPopupController.php
index f411364..ab55dc1 100644
--- a/src/Controller/GeofieldMapAjaxPopupController.php
+++ b/src/Controller/GeofieldMapAjaxPopupController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\geofield_map\Controller;
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Symfony\Component\HttpFoundation\Response;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
 use Drupal\Core\Controller\ControllerBase;
@@ -19,23 +21,23 @@ class GeofieldMapAjaxPopupController extends ControllerBase {
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;
 
   /**
    * Constructs a new GeofieldMapAjaxPopupController object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, RendererInterface $renderer) {
@@ -56,10 +58,10 @@ class GeofieldMapAjaxPopupController extends ControllerBase {
   /**
    * User GeofieldMapAjaxPopup page access checker.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity to check the permission for view.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The Access check results.
    */
   public function accessCheck(EntityInterface $entity) {
@@ -69,14 +71,14 @@ class GeofieldMapAjaxPopupController extends ControllerBase {
   /**
    * Geofield Map Ajax Popup build callback.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity whose build to return.
    * @param string $view_mode
    *   The view mode identifier.
    * @param string $langcode
    *   The langcode to render the entity by.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The Response to return.
    */
   public function popupBuild(EntityInterface $entity, $view_mode, $langcode = NULL) {
diff --git a/src/Element/GeofieldMap.php b/src/Element/GeofieldMap.php
index d3d1454..ee1a93e 100644
--- a/src/Element/GeofieldMap.php
+++ b/src/Element/GeofieldMap.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\geofield_map\Element;
 
+use Drupal\geofield_map\Services\GoogleMapsService;
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\geofield\Element\GeofieldLatLon;
 use Drupal\Core\Url;
@@ -21,7 +23,7 @@ class GeofieldMap extends GeofieldLatLon {
    *   An associative array containing the properties and children of the
    *   element. Note that $element must be taken by reference here, so processed
    *   child elements are taken over into $form_state.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -34,10 +36,10 @@ class GeofieldMap extends GeofieldLatLon {
     /* @var \Drupal\Core\Config\ConfigFactoryInterface $config */
     $config = \Drupal::configFactory();
     $geofield_map_settings = $config->get('geofield_map.settings');
-    /** @var \Drupal\geofield_map\Services\GoogleMapsService $google_maps_service */
+    /** @var GoogleMapsService $google_maps_service */
     $google_maps_service = \Drupal::service('geofield_map.google_maps');
 
-    /** @var \Drupal\Core\Session\AccountProxyInterface $currentUser */
+    /** @var AccountProxyInterface $currentUser */
     $currentUser = \Drupal::currentUser();
 
     // Initialize the basic geofield_map_element.
diff --git a/src/Form/GeofieldMapSettingsForm.php b/src/Form/GeofieldMapSettingsForm.php
index a5f043b..fbab515 100644
--- a/src/Form/GeofieldMapSettingsForm.php
+++ b/src/Form/GeofieldMapSettingsForm.php
@@ -21,16 +21,16 @@ class GeofieldMapSettingsForm extends ConfigFormBase {
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
   /**
    * GeofieldMapSettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, LinkGeneratorInterface $link_generator) {
diff --git a/src/GeofieldMapFieldTrait.php b/src/GeofieldMapFieldTrait.php
index 2cc1782..c9058d6 100644
--- a/src/GeofieldMapFieldTrait.php
+++ b/src/GeofieldMapFieldTrait.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\geofield_map;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
+use Drupal\geofield\GeoPHP\GeoPHPInterface;
+use Drupal\Core\Utility\LinkGeneratorInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Url;
 use Drupal\Core\Form\FormStateInterface;
@@ -64,21 +67,21 @@ trait GeofieldMapFieldTrait {
   /**
    * The FieldDefinition.
    *
-   * @var \Drupal\Core\Field\FieldDefinitionInterface
+   * @var FieldDefinitionInterface
    */
   protected $fieldDefinition;
 
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
@@ -203,7 +206,7 @@ trait GeofieldMapFieldTrait {
    *
    * @param array $form
    *   The form where the settings form is being included in.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $settings
    *   Form settings.
@@ -1568,7 +1571,7 @@ trait GeofieldMapFieldTrait {
    *
    * @param array $element
    *   The form element to build.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateGeocoderProviders(array $element, FormStateInterface &$form_state) {
diff --git a/src/LeafletTileLayerPluginManager.php b/src/LeafletTileLayerPluginManager.php
index 4550c86..9e8cc28 100644
--- a/src/LeafletTileLayerPluginManager.php
+++ b/src/LeafletTileLayerPluginManager.php
@@ -15,7 +15,7 @@ class LeafletTileLayerPluginManager extends DefaultPluginManager {
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
@@ -25,11 +25,11 @@ class LeafletTileLayerPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, RequestStack $request_stack) {
diff --git a/src/MapThemerBase.php b/src/MapThemerBase.php
index 4c23ceb..a04e559 100644
--- a/src/MapThemerBase.php
+++ b/src/MapThemerBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\geofield_map;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -23,35 +25,35 @@ abstract class MapThemerBase extends PluginBase implements MapThemerInterface, C
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The translation manager.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translationManager;
 
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;
 
   /**
    * The Icon Managed File Service.
    *
-   * @var \Drupal\geofield_map\Services\MarkerIconService
+   * @var MarkerIconService
    */
   protected $markerIcon;
 
@@ -230,7 +232,7 @@ abstract class MapThemerBase extends PluginBase implements MapThemerInterface, C
   /**
    * Gets the Map Themer Entity Bundles, based on the View Style Entity Type.
    *
-   * @param \Drupal\geofield_map\Plugin\views\style\GeofieldGoogleMapViewStyle $geofieldMapView
+   * @param GeofieldGoogleMapViewStyle $geofieldMapView
    *   The Geofield Map View.
    * @param string $entity_type
    *   The entity type.
@@ -285,13 +287,13 @@ abstract class MapThemerBase extends PluginBase implements MapThemerInterface, C
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The translation manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\geofield_map\Services\MarkerIconService $marker_icon_service
+   * @param MarkerIconService $marker_icon_service
    *   The Marker Icon Service.
    */
   public function __construct(
diff --git a/src/MapThemerInterface.php b/src/MapThemerInterface.php
index 1e35ed6..92834c7 100644
--- a/src/MapThemerInterface.php
+++ b/src/MapThemerInterface.php
@@ -49,9 +49,9 @@ interface MapThemerInterface extends PluginInspectionInterface {
    *   The default values/settings.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
-   * @param \Drupal\geofield_map\Plugin\views\style\GeofieldGoogleMapViewStyle $geofieldMapView
+   * @param GeofieldGoogleMapViewStyle $geofieldMapView
    *   The Geofield Map View display object.
    *
    * @return array
@@ -64,9 +64,9 @@ interface MapThemerInterface extends PluginInspectionInterface {
    *
    * @param array $datum
    *   The geometry feature array definition.
-   * @param \Drupal\geofield_map\Plugin\views\style\GeofieldGoogleMapViewStyle $geofieldMapView
+   * @param GeofieldGoogleMapViewStyle $geofieldMapView
    *   The Geofield Map View dispaly object.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity generating the datum.
    * @param mixed $map_theming_values
    *   The Map themer mapping values.
diff --git a/src/MapThemerPluginManager.php b/src/MapThemerPluginManager.php
index 05c2f9f..abef748 100644
--- a/src/MapThemerPluginManager.php
+++ b/src/MapThemerPluginManager.php
@@ -21,21 +21,21 @@ class MapThemerPluginManager extends DefaultPluginManager {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The translation manager.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translationManager;
 
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
@@ -45,15 +45,15 @@ class MapThemerPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The translation manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    */
   public function __construct(
diff --git a/src/Plugin/Block/GeofieldMapLegend.php b/src/Plugin/Block/GeofieldMapLegend.php
index 9fd2dd0..f1d389d 100644
--- a/src/Plugin/Block/GeofieldMapLegend.php
+++ b/src/Plugin/Block/GeofieldMapLegend.php
@@ -33,21 +33,21 @@ class GeofieldMapLegend extends BlockBase implements ContainerFactoryPluginInter
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The Current User.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
@@ -55,21 +55,21 @@ class GeofieldMapLegend extends BlockBase implements ContainerFactoryPluginInter
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The MapThemer Manager service .
    *
-   * @var \Drupal\geofield_map\MapThemerPluginManager
+   * @var MapThemerPluginManager
    */
   protected $mapThemerManager;
 
   /**
    * The MapThemer Plugin used in referenced View Style.
    *
-   * @var \Drupal\geofield_map\MapThemerInterface
+   * @var MapThemerInterface
    */
   protected $mapThemerPlugin;
 
@@ -107,7 +107,7 @@ class GeofieldMapLegend extends BlockBase implements ContainerFactoryPluginInter
   /**
    * Legend Failure element..
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $failure_message
+   * @param TranslatableMarkup $failure_message
    *   The View Id.
    *
    * @return array|null
@@ -132,7 +132,7 @@ class GeofieldMapLegend extends BlockBase implements ContainerFactoryPluginInter
   /**
    * The Icon Managed File Service.
    *
-   * @var \Drupal\geofield_map\Services\MarkerIconService
+   * @var MarkerIconService
    */
   protected $markerIcon;
 
@@ -145,17 +145,17 @@ class GeofieldMapLegend extends BlockBase implements ContainerFactoryPluginInter
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The Current User.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The Renderer service.
-   * @param \Drupal\geofield_map\MapThemerPluginManager $map_themer_manager
+   * @param MapThemerPluginManager $map_themer_manager
    *   The mapThemerManager service.
-   * @param \Drupal\geofield_map\Services\MarkerIconService $marker_icon_service
+   * @param MarkerIconService $marker_icon_service
    *   The Marker Icon Service.
    */
   public function __construct(
@@ -406,10 +406,10 @@ class GeofieldMapLegend extends BlockBase implements ContainerFactoryPluginInter
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function mapLegendSelectionUpdate(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Field/FieldFormatter/GeofieldGoogleMapFormatter.php b/src/Plugin/Field/FieldFormatter/GeofieldGoogleMapFormatter.php
index ffd7afe..2be02f9 100644
--- a/src/Plugin/Field/FieldFormatter/GeofieldGoogleMapFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/GeofieldGoogleMapFormatter.php
@@ -65,21 +65,21 @@ class GeofieldGoogleMapFormatter extends FormatterBase implements ContainerFacto
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * Entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
@@ -87,35 +87,35 @@ class GeofieldGoogleMapFormatter extends FormatterBase implements ContainerFacto
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
   /**
    * The EntityField Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;
 
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -129,14 +129,14 @@ class GeofieldGoogleMapFormatter extends FormatterBase implements ContainerFacto
   /**
    * The geofieldMapGoogleMaps service.
    *
-   * @var \Drupal\geofield_map\Services\GoogleMapsService
+   * @var GoogleMapsService
    */
   protected $googleMapsService;
 
   /**
    * The Icon Managed File Service.
    *
-   * @var \Drupal\geofield_map\Services\MarkerIconService
+   * @var MarkerIconService
    */
   protected $markerIcon;
 
@@ -147,7 +147,7 @@ class GeofieldGoogleMapFormatter extends FormatterBase implements ContainerFacto
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -157,29 +157,29 @@ class GeofieldGoogleMapFormatter extends FormatterBase implements ContainerFacto
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The Translation service.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   Entity display repository service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The Entity Field Manager.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The The geoPhpWrapper.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The Renderer service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    * @param \Drupal\core\Utility\Token $token
    *   The token service.
-   * @param \Drupal\geofield_map\Services\GoogleMapsService $google_maps_service
+   * @param GoogleMapsService $google_maps_service
    *   The Google Maps service.
-   * @param \Drupal\geofield_map\Services\MarkerIconService $marker_icon_service
+   * @param MarkerIconService $marker_icon_service
    *   The Marker Icon Service.
    */
   public function __construct(
@@ -382,10 +382,10 @@ class GeofieldGoogleMapFormatter extends FormatterBase implements ContainerFacto
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function iconImageModeUpdate(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Field/FieldWidget/GeofieldMapWidget.php b/src/Plugin/Field/FieldWidget/GeofieldMapWidget.php
index 51d95c9..733ea22 100644
--- a/src/Plugin/Field/FieldWidget/GeofieldMapWidget.php
+++ b/src/Plugin/Field/FieldWidget/GeofieldMapWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield_map\Plugin\Field\FieldWidget;
 
+use Drupal\Core\Render\Renderer;
 use Drupal\geofield\Plugin\GeofieldBackendManager;
 use Drupal\geofield_map\GeofieldMapFieldTrait;
 use Drupal\geofield_map\GeofieldMapFormElementsValidationTrait;
@@ -43,70 +44,70 @@ class GeofieldMapWidget extends GeofieldLatLonWidget implements ContainerFactory
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
   /**
    * The WKT format Generator service.
    *
-   * @var \Drupal\geofield\WktGeneratorInterface
+   * @var WktGeneratorInterface
    */
   protected $wktGenerator;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
   /**
    * The Renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * The Current User.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The Geofield Map Geocoder Service.
    *
-   * @var \Drupal\geofield_map\Services\GeocoderService
+   * @var GeocoderService
    */
   protected $geofieldGmapGeocoder;
 
   /**
    * The EntityField Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The LeafletTileLayer Manager service.
    *
-   * @var \Drupal\geofield_map\LeafletTileLayerPluginManager
+   * @var LeafletTileLayerPluginManager
    */
   protected $leafletTileManager;
 
@@ -141,35 +142,35 @@ class GeofieldMapWidget extends GeofieldLatLonWidget implements ContainerFactory
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface|null $geophp_wrapper
+   * @param GeoPHPInterface|null $geophp_wrapper
    *   The geoPhpWrapper.
-   * @param \Drupal\geofield\WktGeneratorInterface|null $wkt_generator
+   * @param WktGeneratorInterface|null $wkt_generator
    *   The WKT format Generator service.
-   * @param \Drupal\geofield\Plugin\GeofieldBackendManager $geofield_backend_manager
+   * @param GeofieldBackendManager $geofield_backend_manager
    *   The geofieldBackendManager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The Translation service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The Renderer service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The Entity Field Manager.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\geofield_map\LeafletTileLayerPluginManager $leaflet_tile_manager
+   * @param LeafletTileLayerPluginManager $leaflet_tile_manager
    *   The LeafletTileLayer Manager service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The Current User.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\geofield_map\Services\GeocoderService $geofield_map_geocoder
+   * @param GeocoderService $geofield_map_geocoder
    *   The Geofield Map Geocoder Service.
    */
   public function __construct(
diff --git a/src/Plugin/GeofieldMapThemer/EntityTypeThemerUrl.php b/src/Plugin/GeofieldMapThemer/EntityTypeThemerUrl.php
index 28c31d0..363fed4 100644
--- a/src/Plugin/GeofieldMapThemer/EntityTypeThemerUrl.php
+++ b/src/Plugin/GeofieldMapThemer/EntityTypeThemerUrl.php
@@ -45,7 +45,7 @@ class EntityTypeThemerUrl extends MapThemerBase {
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
@@ -58,15 +58,15 @@ class EntityTypeThemerUrl extends MapThemerBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The translation manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\geofield_map\Services\MarkerIconService $marker_icon_service
+   * @param MarkerIconService $marker_icon_service
    *   The Marker Icon Service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
    */
   public function __construct(
diff --git a/src/Plugin/GeofieldMapThemer/ListFieldThemer.php b/src/Plugin/GeofieldMapThemer/ListFieldThemer.php
index 872fd9c..450653c 100644
--- a/src/Plugin/GeofieldMapThemer/ListFieldThemer.php
+++ b/src/Plugin/GeofieldMapThemer/ListFieldThemer.php
@@ -288,10 +288,10 @@ class ListFieldThemer extends ListFieldThemerUrl {
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function listFieldOptionsUpdate(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/GeofieldMapThemer/ListFieldThemerUrl.php b/src/Plugin/GeofieldMapThemer/ListFieldThemerUrl.php
index fcfa8e7..39add7e 100644
--- a/src/Plugin/GeofieldMapThemer/ListFieldThemerUrl.php
+++ b/src/Plugin/GeofieldMapThemer/ListFieldThemerUrl.php
@@ -49,14 +49,14 @@ class ListFieldThemerUrl extends MapThemerBase {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
@@ -69,17 +69,17 @@ class ListFieldThemerUrl extends MapThemerBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The translation manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\geofield_map\Services\MarkerIconService $marker_icon_service
+   * @param MarkerIconService $marker_icon_service
    *   The Marker Icon Service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
    */
   public function __construct(
@@ -354,10 +354,10 @@ class ListFieldThemerUrl extends MapThemerBase {
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function listFieldOptionsUpdate(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/GeofieldMapThemer/TaxonomyTermThemer.php b/src/Plugin/GeofieldMapThemer/TaxonomyTermThemer.php
index 7115ab9..38faf2a 100644
--- a/src/Plugin/GeofieldMapThemer/TaxonomyTermThemer.php
+++ b/src/Plugin/GeofieldMapThemer/TaxonomyTermThemer.php
@@ -321,10 +321,10 @@ class TaxonomyTermThemer extends TaxonomyTermThemerUrl {
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function taxonomyFieldOptionsUpdate(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/GeofieldMapThemer/TaxonomyTermThemerUrl.php b/src/Plugin/GeofieldMapThemer/TaxonomyTermThemerUrl.php
index 932321f..2b90990 100644
--- a/src/Plugin/GeofieldMapThemer/TaxonomyTermThemerUrl.php
+++ b/src/Plugin/GeofieldMapThemer/TaxonomyTermThemerUrl.php
@@ -51,14 +51,14 @@ class TaxonomyTermThemerUrl extends MapThemerBase {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The entity type bundle info.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
@@ -71,17 +71,17 @@ class TaxonomyTermThemerUrl extends MapThemerBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation_manager
+   * @param TranslationInterface $translation_manager
    *   The translation manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\geofield_map\Services\MarkerIconService $marker_icon_service
+   * @param MarkerIconService $marker_icon_service
    *   The Marker Icon Service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info.
    */
   public function __construct(
@@ -384,10 +384,10 @@ class TaxonomyTermThemerUrl extends MapThemerBase {
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function taxonomyFieldOptionsUpdate(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/views/style/GeofieldGoogleMapViewStyle.php b/src/Plugin/views/style/GeofieldGoogleMapViewStyle.php
index e36e956..9fd7ef4 100644
--- a/src/Plugin/views/style/GeofieldGoogleMapViewStyle.php
+++ b/src/Plugin/views/style/GeofieldGoogleMapViewStyle.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\geofield_map\Plugin\views\style;
 
+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\views\Plugin\views\HandlerBase;
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Field\FieldTypePluginManagerInterface;
 use Drupal\Core\Render\BubbleableMetadata;
@@ -81,7 +84,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
@@ -102,84 +105,84 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
   /**
    * The Entity Info Object.
    *
-   * @var \Drupal\Core\Entity\EntityTypeInterface
+   * @var EntityTypeInterface
    */
   protected $entityInfo;
 
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * The Entity Field manager service property.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The Entity Display Repository service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplay;
 
   /**
    * The Link generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
   /**
    * Current user service.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;
 
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Field type plugin manager.
    *
-   * @var \Drupal\Core\Field\FieldTypePluginManagerInterface
+   * @var FieldTypePluginManagerInterface
    */
   protected $fieldTypeManager;
 
   /**
    * The geofieldMapGoogleMaps service.
    *
-   * @var \Drupal\geofield_map\Services\GoogleMapsService
+   * @var GoogleMapsService
    */
   protected $googleMapsService;
 
@@ -193,7 +196,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
   /**
    * The MapThemer Manager service .
    *
-   * @var \Drupal\geofield_map\MapThemerPluginManager
+   * @var MapThemerPluginManager
    */
   protected $mapThemerManager;
 
@@ -213,31 +216,31 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display
+   * @param EntityDisplayRepositoryInterface $entity_display
    *   The entity display manager.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The The geoPhpWrapper.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The Renderer service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager service.
-   * @param \Drupal\geofield_map\Services\GoogleMapsService $google_maps_service
+   * @param GoogleMapsService $google_maps_service
    *   The Google Maps service.
-   * @param \Drupal\geofield_map\MapThemerPluginManager $map_themer_manager
+   * @param MapThemerPluginManager $map_themer_manager
    *   The mapThemerManager service.
    */
   public function __construct(
@@ -445,7 +448,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
     ];
 
     $data = Views::viewsData();
-    /** @var \Drupal\views\Plugin\views\HandlerBase $handler */
+    /** @var HandlerBase $handler */
     foreach ($this->displayHandler->getHandlers('relationship') as $relationship_id => $handler) {
       if (($table = $data->get($handler->definition['base'])) && !empty($table['table']['entity type'])) {
         try {
@@ -470,7 +473,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
    * @param string $source
    *   The Source identifier.
    *
-   * @return \Drupal\Core\Entity\EntityTypeInterface
+   * @return EntityTypeInterface
    *   The entity type.
    */
   protected function getEntitySourceEntityInfo($source) {
@@ -494,9 +497,9 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
   /**
    * Set the langcode to be used for rendering the entity.
    *
-   * @param \Drupal\core\Entity\FieldableEntityInterface $entity
+   * @param FieldableEntityInterface $entity
    *   The fieldable Entity.
-   * @param \Drupal\views\ResultRow $result
+   * @param ResultRow $result
    *   The view Row result.
    *
    * @return mixed|string|void
@@ -510,7 +513,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
       '***LANGUAGE_entity_default***' => 'DefaultLanguageRenderer',
     ];
     if (isset($dynamic_renderers[$rendering_language])) {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       $langcode = $result->$entity_type_langcode_attribute ?? $entity->language()->getId();
     }
     else {
@@ -779,7 +782,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
    *
    * @param array $form
    *   The Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Form state.
    */
   public static function optionsFormEntitySourceSubmit(array $form, FormStateInterface $form_state) {
@@ -800,7 +803,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
    *
    * @param array $form
    *   The Form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The Form state.
    *
    * @return mixed
@@ -819,10 +822,10 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function mapThemingOptionsUpdate(array $form, FormStateInterface $form_state) {
@@ -1145,7 +1148,7 @@ class GeofieldGoogleMapViewStyle extends DefaultStyle implements ContainerFactor
   /**
    * Returns the Entity Field manager service property.
    *
-   * @return \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @return EntityFieldManagerInterface
    *   The Entity Field manager service property.
    */
   public function getEntityFieldManager() {
diff --git a/src/Services/GoogleMapsService.php b/src/Services/GoogleMapsService.php
index 0f03a3b..306d40e 100644
--- a/src/Services/GoogleMapsService.php
+++ b/src/Services/GoogleMapsService.php
@@ -14,21 +14,21 @@ class GoogleMapsService {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
@@ -62,11 +62,11 @@ class GoogleMapsService {
   /**
    * Constructs a new GoogleMapsService object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(
diff --git a/src/Services/MarkerIconService.php b/src/Services/MarkerIconService.php
index d348ba6..6187c12 100644
--- a/src/Services/MarkerIconService.php
+++ b/src/Services/MarkerIconService.php
@@ -35,28 +35,28 @@ class MarkerIconService {
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * The translation manager.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translationManager;
 
   /**
    * The Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * The module handler to invoke the alter hook.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -84,14 +84,14 @@ class MarkerIconService {
   /**
    * The Link Generator Service.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $link;
 
   /**
    * A element info manager.
    *
-   * @var \Drupal\Core\Render\ElementInfoManagerInterface
+   * @var ElementInfoManagerInterface
    */
   protected $elementInfo;
 
@@ -112,14 +112,14 @@ class MarkerIconService {
   /**
    * The File system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
 
@@ -127,7 +127,7 @@ class MarkerIconService {
    * Set Geofield Map Default Icon Style.
    */
   protected function setDefaultIconStyle() {
-    $image_style_path = drupal_get_path('module', 'geofield_map') . '/config/optional/image.style.geofield_map_default_icon_style.yml';
+    $image_style_path = \Drupal::service('extension.list.module')->getPath('geofield_map') . '/config/optional/image.style.geofield_map_default_icon_style.yml';
     $image_style_data = Yaml::parse(file_get_contents($image_style_path));
     $geofield_map_default_icon_style = $this->config->getEditable('image.style.geofield_map_default_icon_style');
     if ($geofield_map_default_icon_style instanceof Config) {
@@ -138,7 +138,7 @@ class MarkerIconService {
   /**
    * Generate File Managed Url from fid, and image style.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   The file tp check.
    *
    * @return bool
@@ -200,21 +200,21 @@ class MarkerIconService {
   /**
    * Constructor of the Icon Managed File Service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   File system service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
+   * @param LinkGeneratorInterface $link_generator
    *   The Link Generator service.
-   * @param \Drupal\Core\Render\ElementInfoManagerInterface $element_info
+   * @param ElementInfoManagerInterface $element_info
    *   The element info manager.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
    */
   public function __construct(
@@ -264,7 +264,7 @@ class MarkerIconService {
    *
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public static function validateIconImageStatus(array $element, FormStateInterface $form_state) {
@@ -286,7 +286,7 @@ class MarkerIconService {
   /**
    * Save a file, handling exception.
    *
-   * @param \Drupal\file\Entity\File $file
+   * @param File $file
    *   The file to save.
    */
   public static function fileSave(File $file) {
@@ -346,7 +346,7 @@ class MarkerIconService {
    *   An associative array containing the properties and children of the
    *   element. Note that $element must be taken by reference here, so processed
    *   child elements are taken over into $form_state.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -571,7 +571,7 @@ class MarkerIconService {
   public function getLegendIconFromFileUri($file_uri, $icon_width = NULL) {
     $icon_element = [
       '#theme' => 'image',
-      '#uri' => file_create_url($file_uri),
+      '#uri' => \Drupal::service('file_url_generator')->generateAbsoluteString($file_uri),
       '#attributes' => [
         'width' => $icon_width,
       ],
@@ -631,7 +631,7 @@ class MarkerIconService {
           $url = ImageStyle::load($image_style)->buildUrl($uri);
         }
         else {
-          $url = file_create_url($uri);
+          $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
         }
         return $url;
       }
@@ -653,7 +653,7 @@ class MarkerIconService {
    */
   public function getFileSelectedUrl($file_uri = NULL) {
     if (isset($file_uri)) {
-      $url = file_create_url($file_uri);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($file_uri);
       return $url;
     }
     return NULL;
