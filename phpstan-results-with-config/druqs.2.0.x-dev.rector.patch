diff --git a/src/Controller/DruqsController.php b/src/Controller/DruqsController.php
index dc9a674..9dbd1e8 100644
--- a/src/Controller/DruqsController.php
+++ b/src/Controller/DruqsController.php
@@ -18,14 +18,14 @@ class DruqsController extends ControllerBase {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a DruqsController object.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   final public function __construct(EventDispatcherInterface $event_dispatcher) {
@@ -42,7 +42,7 @@ class DruqsController extends ControllerBase {
   /**
    * Returns search results as JSON for an input provided by a query parameter.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The output with search results.
    */
   public function search(Request $request) {
diff --git a/src/Event/DruqsSearchEvent.php b/src/Event/DruqsSearchEvent.php
index 3cb16f6..d2bd09f 100644
--- a/src/Event/DruqsSearchEvent.php
+++ b/src/Event/DruqsSearchEvent.php
@@ -50,7 +50,7 @@ class DruqsSearchEvent extends Event {
    *
    * @param string $input
    *   The search term.
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The druqs configuration.
    */
   public function __construct(string $input, Config $config) {
diff --git a/src/EventSubscriber/DruqsMenuSubscriber.php b/src/EventSubscriber/DruqsMenuSubscriber.php
index bf13d1f..95d403b 100644
--- a/src/EventSubscriber/DruqsMenuSubscriber.php
+++ b/src/EventSubscriber/DruqsMenuSubscriber.php
@@ -14,14 +14,14 @@ class DruqsMenuSubscriber extends DruqsSubscriber {
   /**
    * The menu tree.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuTree;
 
   /**
    * Constructs a DruqsMenuHandler object.
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_tree
+   * @param MenuLinkTreeInterface $menu_tree
    *   The menu tree.
    */
   public function __construct(MenuLinkTreeInterface $menu_tree) {
diff --git a/src/EventSubscriber/DruqsNodeSubscriber.php b/src/EventSubscriber/DruqsNodeSubscriber.php
index 91c1f83..3d57c3c 100644
--- a/src/EventSubscriber/DruqsNodeSubscriber.php
+++ b/src/EventSubscriber/DruqsNodeSubscriber.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\druqs\EventSubscriber;
 
+use Drupal\node\NodeStorageInterface;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\node\NodeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\druqs\Event\DruqsSearchEvent;
 
@@ -13,18 +18,18 @@ class DruqsNodeSubscriber extends DruqsSubscriber {
   /**
    * The node storage.
    *
-   * @var \Drupal\node\NodeStorageInterface
+   * @var NodeStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * Constructs a DruqsNodeSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
     $this->nodeStorage = $entity_type_manager->getStorage('node');
@@ -33,7 +38,7 @@ class DruqsNodeSubscriber extends DruqsSubscriber {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function lookUp(DruqsSearchEvent $search) {
 
@@ -51,7 +56,7 @@ class DruqsNodeSubscriber extends DruqsSubscriber {
 
     // Format results.
     $results = [];
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     foreach ($nodes as $node) {
       $results[] = [
         'type' => 'Content (' . $node->getType() . ')',
diff --git a/src/EventSubscriber/DruqsSubscriber.php b/src/EventSubscriber/DruqsSubscriber.php
index fd6d139..7fd7c17 100644
--- a/src/EventSubscriber/DruqsSubscriber.php
+++ b/src/EventSubscriber/DruqsSubscriber.php
@@ -19,7 +19,7 @@ abstract class DruqsSubscriber implements EventSubscriberInterface {
   /**
    * Handles a druqs search event.
    *
-   * @param \Drupal\druqs\Event\DruqsSearchEvent $search
+   * @param DruqsSearchEvent $search
    *   The search event.
    */
   abstract protected function lookUp(DruqsSearchEvent $search);
diff --git a/src/EventSubscriber/DruqsTaxonomySubscriber.php b/src/EventSubscriber/DruqsTaxonomySubscriber.php
index aea6190..7900af7 100644
--- a/src/EventSubscriber/DruqsTaxonomySubscriber.php
+++ b/src/EventSubscriber/DruqsTaxonomySubscriber.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\druqs\EventSubscriber;
 
+use Drupal\taxonomy\TermStorageInterface;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\taxonomy\TermInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\druqs\Event\DruqsSearchEvent;
 
@@ -13,18 +18,18 @@ class DruqsTaxonomySubscriber extends DruqsSubscriber {
   /**
    * The taxonomy term storage.
    *
-   * @var \Drupal\taxonomy\TermStorageInterface
+   * @var TermStorageInterface
    */
   protected $termStorage;
 
   /**
    * Constructs a DruqsTaxonomySubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
     $this->termStorage = $entity_type_manager
@@ -34,7 +39,7 @@ class DruqsTaxonomySubscriber extends DruqsSubscriber {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function lookUp(DruqsSearchEvent $search) {
 
@@ -52,7 +57,7 @@ class DruqsTaxonomySubscriber extends DruqsSubscriber {
 
     // Format the results.
     $results = [];
-    /** @var \Drupal\taxonomy\TermInterface $term */
+    /** @var TermInterface $term */
     foreach ($terms as $term) {
       $results[] = [
         'type' => 'Taxonomy (' . $term->bundle() . ')',
diff --git a/src/EventSubscriber/DruqsUserSubscriber.php b/src/EventSubscriber/DruqsUserSubscriber.php
index 59e927b..1163ba6 100644
--- a/src/EventSubscriber/DruqsUserSubscriber.php
+++ b/src/EventSubscriber/DruqsUserSubscriber.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\druqs\EventSubscriber;
 
+use Drupal\user\UserStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\druqs\Event\DruqsSearchEvent;
 
@@ -13,18 +18,18 @@ class DruqsUserSubscriber extends DruqsSubscriber {
   /**
    * The user storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
   /**
    * Constructs a DruqsUserSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
     $this->userStorage = $entity_type_manager->getStorage('user');
@@ -33,7 +38,7 @@ class DruqsUserSubscriber extends DruqsSubscriber {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function lookUp(DruqsSearchEvent $search) {
 
@@ -52,7 +57,7 @@ class DruqsUserSubscriber extends DruqsSubscriber {
 
     // Format the results.
     $results = [];
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     foreach ($users as $user) {
       $results[] = [
         'type' => 'User',
diff --git a/src/EventSubscriber/DruqsUuidSubscriber.php b/src/EventSubscriber/DruqsUuidSubscriber.php
index a398b26..02b57b8 100644
--- a/src/EventSubscriber/DruqsUuidSubscriber.php
+++ b/src/EventSubscriber/DruqsUuidSubscriber.php
@@ -30,23 +30,23 @@ class DruqsUuidSubscriber extends DruqsSubscriber {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Constructs a DruqsUuidSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    */
   public function __construct(
@@ -96,7 +96,7 @@ class DruqsUuidSubscriber extends DruqsSubscriber {
 
     // Attempt to load the entity.
     try {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+      /** @var ContentEntityInterface $entity */
       $entity = $this->entityTypeManager->getStorage($entity_type->id())
         ->load($id);
     }
@@ -143,7 +143,7 @@ class DruqsUuidSubscriber extends DruqsSubscriber {
    *
    * @param array $entity_types
    *   The entity types.
-   * @param \Drupal\druqs\Event\DruqsSearchEvent $search
+   * @param DruqsSearchEvent $search
    *   The search event.
    *
    * @return array
@@ -169,9 +169,9 @@ class DruqsUuidSubscriber extends DruqsSubscriber {
   /**
    * Attempts to get the url for a template from the entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity.
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The respective entity type.
    * @param string $template
    *   The requested url template.
@@ -197,9 +197,9 @@ class DruqsUuidSubscriber extends DruqsSubscriber {
   /**
    * Attempts to fetch a title from the entity.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The entity.
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The respective entity type.
    *
    * @return string
diff --git a/src/Form/DruqsConfigurationForm.php b/src/Form/DruqsConfigurationForm.php
index bc16f59..26bab48 100644
--- a/src/Form/DruqsConfigurationForm.php
+++ b/src/Form/DruqsConfigurationForm.php
@@ -16,16 +16,16 @@ class DruqsConfigurationForm extends ConfigFormBase {
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface
+   * @var ConfigEntityStorageInterface
    */
   protected $menuStorage;
 
   /**
    * Constructs a DruqsConfigurationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $menu_storage
+   * @param ConfigEntityStorageInterface $menu_storage
    *   The module handler.
    */
   public function __construct(
