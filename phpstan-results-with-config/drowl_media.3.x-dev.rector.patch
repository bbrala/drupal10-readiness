diff --git a/drowl_media.install b/drowl_media.install
index 5c21d69..627b1d8 100755
--- a/drowl_media.install
+++ b/drowl_media.install
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\Entity\EntityFieldManager;
+use Drupal\media\MediaTypeInterface;
+use Drupal\Core\Extension\ModuleExtensionList;
 /**
  * @file
  * Install, update and uninstall functions for the DROWL Media module.
@@ -158,10 +161,10 @@ function drowl_media_update_8202(&$sandbox) {
  * Clean up DROWL media entities after migration.
  */
 function drowl_media_update_8203(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $entityFieldManager */
+  /** @var EntityFieldManager $entityFieldManager */
   $entityFieldManager = Drupal::service('entity_field.manager');
 
-  /** @var \Drupal\media\MediaTypeInterface $mediaTypeStorage */
+  /** @var MediaTypeInterface $mediaTypeStorage */
   $mediaTypeStorage = \Drupal::entityTypeManager()->getStorage('media_type');
 
   // Change field_media_image_1 to field_image.
@@ -262,7 +265,7 @@ function drowl_media_update_8206(&$sandbox) {
  * Implements hook_install().
  */
 function drowl_media_install() {
-  /** @var \Drupal\Core\Extension\ModuleExtensionList $extension_list */
+  /** @var ModuleExtensionList $extension_list */
   $source = \Drupal::service('extension.list.module')->getPath('drowl_media') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
   /** @var \Drupal\Core\File\FileSystemInterface $file_system */
@@ -288,10 +291,10 @@ function drowl_media_install() {
  * field_media_slides_ref as source field.
  */
 function drowl_media_update_8300(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $entityFieldManager */
+  /** @var EntityFieldManager $entityFieldManager */
   $entityFieldManager = Drupal::service('entity_field.manager');
 
-  /** @var \Drupal\media\MediaTypeInterface $mediaTypeStorage */
+  /** @var MediaTypeInterface $mediaTypeStorage */
   $mediaTypeStorage = \Drupal::entityTypeManager()->getStorage('media_type');
 
   // Change source_field to field_image.
@@ -318,10 +321,10 @@ function drowl_media_update_8300(&$sandbox) {
  * field_media_slides_ref as source field.
  */
 function drowl_media_update_8301(&$sandbox) {
-  /** @var \Drupal\Core\Entity\EntityFieldManager $entityFieldManager */
+  /** @var EntityFieldManager $entityFieldManager */
   $entityFieldManager = Drupal::service('entity_field.manager');
 
-  /** @var \Drupal\media\MediaTypeInterface $mediaTypeStorage */
+  /** @var MediaTypeInterface $mediaTypeStorage */
   $mediaTypeStorage = \Drupal::entityTypeManager()->getStorage('media_type');
 
   // Change source_field to field_image.
diff --git a/drowl_media.module b/drowl_media.module
index 1984f43..b3d38b5 100644
--- a/drowl_media.module
+++ b/drowl_media.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\Core\Url;
 /**
  * @file
  * DROWL media module file.
@@ -87,7 +90,7 @@ function drowl_media_field_widget_form_alter(&$element, FormStateInterface $form
 /**
  * Implements hook_ENTITY_TYPE_view().
  */
-function drowl_media_media_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
+function drowl_media_media_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
   // Attach the media library to all media previews in the admin route
   if (!empty($build) && !empty($view_mode) && $view_mode == 'media_library') {
     $build['#attached']['library'][] = 'drowl_media/admin_media_library';
@@ -101,7 +104,7 @@ function drowl_media_media_view(array &$build, \Drupal\Core\Entity\EntityInterfa
  * widget button. This is a *workaround* to provide a link for slideshow creation
  * as "Slideshow" is a custom media source, which doesn't provide a create itself.
  */
-function drowl_media_field_widget_media_library_widget_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context) {
+function drowl_media_field_widget_media_library_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
   if (!empty($element['#target_bundles']) && in_array("slideshow", $element['#target_bundles'])) {
     // Change the regular "Add"-label, so its clear to the user that this means
     // "Reference to existing Slideshows"
@@ -110,7 +113,7 @@ function drowl_media_field_widget_media_library_widget_form_alter(&$element, \Dr
     $element['#field_suffix']['empty_selection'] = [
       '#type' => 'link',
       '#title' => t('Create new Slideshow'),
-      '#url' => \Drupal\Core\Url::fromRoute('entity.media.add_form', ['media_type' => 'slideshow']),
+      '#url' => Url::fromRoute('entity.media.add_form', ['media_type' => 'slideshow']),
       '#attributes' => [
         'target' => '_blank',
         'class' => ['button', 'primary'],
diff --git a/src/Plugin/media/Source/Slideshow.php b/src/Plugin/media/Source/Slideshow.php
index a1cadd4..ff64b88 100644
--- a/src/Plugin/media/Source/Slideshow.php
+++ b/src/Plugin/media/Source/Slideshow.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\drowl_media\Plugin\media\Source;
 
+use Drupal\media\MediaTypeInterface;
 use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;
 use Drupal\media\MediaInterface;
 use Drupal\media\MediaSourceBase;
@@ -65,13 +66,13 @@ class Slideshow extends MediaSourceBase implements MediaSourceEntityConstraintsI
           return parent::getMetadata($media, 'thumbnail_uri');
         }
 
-        /** @var \Drupal\media\MediaInterface $slideshow_item */
+        /** @var MediaInterface $slideshow_item */
         $slideshow_item = $this->entityTypeManager->getStorage('media')->load($media->{$source_field}->target_id);
         if (!$slideshow_item) {
           return parent::getMetadata($media, 'thumbnail_uri');
         }
 
-        /** @var \Drupal\media\MediaTypeInterface $bundle */
+        /** @var MediaTypeInterface $bundle */
         $bundle = $this->entityTypeManager->getStorage('media_type')->load($slideshow_item->bundle());
         if (!$bundle) {
           return parent::getMetadata($media, 'thumbnail_uri');
diff --git a/tests/src/Functional/DrowlMediaFunctionalTests.php b/tests/src/Functional/DrowlMediaFunctionalTests.php
index 7198789..3912bee 100644
--- a/tests/src/Functional/DrowlMediaFunctionalTests.php
+++ b/tests/src/Functional/DrowlMediaFunctionalTests.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\drowl_media\Functional;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -29,14 +30,14 @@ class DrowlMediaFunctionalTests extends BrowserTestBase {
   /**
    * A user with authenticated permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
   /**
    * A user with admin permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/DrowlMediaTypesFunctionalTests.php b/tests/src/Functional/DrowlMediaTypesFunctionalTests.php
index 1c1b2a4..3337865 100644
--- a/tests/src/Functional/DrowlMediaTypesFunctionalTests.php
+++ b/tests/src/Functional/DrowlMediaTypesFunctionalTests.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\drowl_media\Functional;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -61,14 +62,14 @@ class DrowlMediaTypesFunctionalTests extends BrowserTestBase {
   /**
    * A user with authenticated permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
   /**
    * A user with admin permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;
 
@@ -94,7 +95,7 @@ class DrowlMediaTypesFunctionalTests extends BrowserTestBase {
   /**
    * Creates a filed on an entity type bundle.
    *
-   * @param Drupal\Core\Config\Entity\ConfigEntityInterface $entityTypeBundle
+   * @param ConfigEntityInterface $entityTypeBundle
    *   The entity type bundle.
    * @param string $fieldName
    *   The field name.
diff --git a/tests/src/Functional/DrowlMediaVideoFunctionalTests.php b/tests/src/Functional/DrowlMediaVideoFunctionalTests.php
index 2bc50e1..ff81d93 100644
--- a/tests/src/Functional/DrowlMediaVideoFunctionalTests.php
+++ b/tests/src/Functional/DrowlMediaVideoFunctionalTests.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\drowl_media\Functional;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -29,14 +30,14 @@ class DrowlMediaVideoFunctionalTests extends BrowserTestBase {
   /**
    * A user with authenticated permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
   /**
    * A user with admin permissions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $adminUser;
 
