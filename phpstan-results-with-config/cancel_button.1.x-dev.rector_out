modules/contrib/cancel_button/cancel_button.api.php
modules/contrib/cancel_button/cancel_button.module
modules/contrib/cancel_button/src/Form/CancelButtonSettingsForm.php
modules/contrib/cancel_button/tests/modules/cancel_button_test/src/Entity/EntityTestBrokenCanonicalRoute.php
modules/contrib/cancel_button/tests/modules/cancel_button_test/src/Entity/EntityTestBrokenCollectionRoute.php
modules/contrib/cancel_button/tests/modules/cancel_button_test/src/Entity/Routing/BrokenHtmlRouteProvider.php
modules/contrib/cancel_button/tests/src/Functional/CancelButtonEntityRoutesTest.php
modules/contrib/cancel_button/tests/src/Functional/CancelButtonSettingsFormTest.php

4 files with changes
====================

1) modules/contrib/cancel_button/tests/src/Functional/CancelButtonSettingsFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cancel_button\Functional;

+use Drupal\user\UserInterface;
+use Drupal\Core\StringTranslation\TranslationManager;
+use Drupal\Core\Entity\EntityTypeInterface;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A user with administrative permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Format a string for HTML display by replacing variable placeholders.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $translationManager;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->createUser([
@@ @@
     $edit = [
       'default_cancel_destination' => 'y&^blP3',
     ];
-    $this->drupalPostForm('admin/config/content/cancel-button', $edit, t('Save configuration'));
+    $this->drupalGet('admin/config/content/cancel-button');
+    $this->submitForm($edit, t('Save configuration'));
     $this->assertSession()->responseContains(
       $this->translationManager->translate(
         "The path '%path' is either invalid or you do not have access to it.",
@@ @@
     $entity_types = $this->container->get('entity_type.manager')->getDefinitions();
     $bundles_by_entity = [];
     $final_edit = [];
-    /** @var \Drupal\Core\Entity\EntityTypeInterface $entity_type */
+    /** @var EntityTypeInterface $entity_type */
     foreach ($entity_types as $entity_type_id => $entity_type) {
       // Do not consider entities with wizard forms.
       if (array_key_exists('wizard', $entity_type->getHandlerClasses())) {
@@ @@
       }
     }
     foreach ($bundles_by_entity as $entity_type_id => $bundles) {
-      /** @var \Drupal\Core\Entity\EntityInterface $bundle */
+      /** @var EntityInterface $bundle */
       foreach ($bundles as $bundle) {
         $final_edit = array_merge($final_edit, [
           $entity_type_id . '_' . $bundle->id() . '_cancel_destination' => '/admin',
@@ @@
     $final_edit = array_merge($final_edit, [
       'default_cancel_destination' => '/admin',
     ]);
-    $this->drupalPostForm('admin/config/content/cancel-button', $final_edit, t('Save configuration'));
+    $this->drupalGet('admin/config/content/cancel-button');
+    $this->submitForm($final_edit, t('Save configuration'));
     $this->assertSession()->pageTextContains(t('The configuration options have been saved.'));
   }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/cancel_button/tests/src/Functional/CancelButtonEntityRoutesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\cancel_button\Functional;

+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * Array of test entities.
    *
-   * @var \Drupal\Core\Entity\ContentEntityInterface[]
+   * @var ContentEntityInterface[]
    */
   protected $entities = [];

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     foreach (['entity_test_broken_canonical', 'entity_test_broken_collection'] as $entity_type) {
       $storage = $this->container->get('entity_type.manager')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/cancel_button/src/Form/CancelButtonSettingsForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;

@@ @@
   /**
    * The request context.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   protected $requestContext;

@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs a CancelButtonSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param PathValidatorInterface $path_validator
    *   The path validator.
-   * @param \Drupal\Core\Routing\RequestContext $request_context
+   * @param RequestContext $request_context
    *   The request context.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, PathValidatorInterface $path_validator, RequestContext $request_context, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/cancel_button/cancel_button.api.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\ContentEntityInterface;
 /**
  * @file
  * Hooks provided by the Cancel Button module.
@@ @@
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Allow other modules to alter the cancel button destination.
  *
- * @param \Drupal\Core\Url $destination
+ * @param Url $destination
  *   The destination Url object to alter.
  * @param array $context
  *   An array of contextual data about the form where the cancel button appears.
@@ @@
  */
 function hook_cancel_button_destination_alter(Url &$destination, array $context) {
   if ($context['entity_type']->id() === 'node') {
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+    /** @var ContentEntityInterface $entity */
     $entity = $context['form_state']->getFormObject()->getEntity();
     // If this is node 1, set the cancel button destination to the collection
     // URL rather than to the canonical URL.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

