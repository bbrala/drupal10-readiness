modules/contrib/persistent_visitor_parameters/src/CookieManager.php
modules/contrib/persistent_visitor_parameters/src/EventSubscriber/ResponseSubscriber.php
modules/contrib/persistent_visitor_parameters/src/Form/SettingsForm.php

2 files with changes
====================

1) modules/contrib/persistent_visitor_parameters/src/EventSubscriber/ResponseSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\persistent_visitor_parameters\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Render\HtmlResponse;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\persistent_visitor_parameters\CookieManager;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * @inheritDoc
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/persistent_visitor_parameters/src/CookieManager.php:60

    ---------- begin diff ----------
@@ @@
     }

     $expire = $this->cookieExpiration();
-    $cookie = new Cookie(self::COOKIE_NAME, serialize($cookieContent), $expire, '/');
+    $cookie = Cookie::create(self::COOKIE_NAME, serialize($cookieContent), $expire, '/');
     $response->headers->setCookie($cookie);

   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * NewToStaticCallRector


 [OK] 2 files have been changed by Rector                                       

