modules/contrib/backup_db/backup_db.install
modules/contrib/backup_db/backup_db.module
modules/contrib/backup_db/src/Adapter/BackupDatabaseAdapterInterface.php
modules/contrib/backup_db/src/Adapter/BackupDatabaseLocalAdapter.php
modules/contrib/backup_db/src/Adapter/BackupDatabaseRemoteAdapter.php
modules/contrib/backup_db/src/BackupDatabaseClient.php
modules/contrib/backup_db/src/BackupDatabaseClientInterface.php
modules/contrib/backup_db/src/BackupDatabaseFile.php
modules/contrib/backup_db/src/BackupDatabaseFileHandler.php
modules/contrib/backup_db/src/Controller/BackupDatabaseController.php
modules/contrib/backup_db/src/Form/BackupDatabaseCronForm.php
modules/contrib/backup_db/src/Form/BackupDatabaseForm.php
modules/contrib/backup_db/src/Form/BackupDatabaseHistoryForm.php
modules/contrib/backup_db/src/Form/BackupDatabaseSettingsForm.php
modules/contrib/backup_db/src/Form/BackupDatabaseTablesForm.php
modules/contrib/backup_db/tests/src/Functional/InstallTest.php
modules/contrib/backup_db/tests/src/Unit/BackupDatabaseAdapterTest.php
modules/contrib/backup_db/tests/src/Unit/BackupDatabaseClientTest.php

8 files with changes
====================

1) modules/contrib/backup_db/tests/src/Unit/BackupDatabaseClientTest.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\backup_db\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Prophecy\Argument;
 use Drupal\Tests\UnitTestCase;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
@@ @@
  */
 class BackupDatabaseClientTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $handler = $this->prophesize('Drupal\backup_db\BackupDatabaseFileHandler');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/backup_db/tests/src/Unit/BackupDatabaseAdapterTest.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\backup_db\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Tests\UnitTestCase;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\backup_db\Adapter\BackupDatabaseLocalAdapter;
@@ @@
  */
 class BackupDatabaseAdapterTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $container = new ContainerBuilder();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/backup_db/src/Controller/BackupDatabaseController.php:31

    ---------- begin diff ----------
@@ @@
     $rows = [];
     foreach ($results as $result) {
       $url = backup_db_link($result->uri);
-      $location = Link::fromTextAndUrl($result->uri, Url::fromUri('base:/' . file_create_url($url)));
+      $location = Link::fromTextAndUrl($result->uri, Url::fromUri('base:/' . \Drupal::service('file_url_generator')->generateAbsoluteString($url)));
       $created = \Drupal::service('date.formatter')
         ->format($result->created, 'html_date');
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/backup_db/src/BackupDatabaseFileHandler.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The backup file.
    *
-   * @var \Drupal\backup_db\BackupDatabaseFile
+   * @var BackupDatabaseFile
    */
   protected $file;

@@ @@
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $filesystem;

@@ @@
   /**
    * The constructor.
    *
-   * @param \Drupal\backup_db\BackupDatabaseFile $file
+   * @param BackupDatabaseFile $file
    *   The database export file to act on.
-   * @param \Drupal\Core\File\FileSystem $filesystem
+   * @param FileSystem $filesystem
    *   Provides helpers to operate on files and stream wrappers.
    */
   public function __construct(BackupDatabaseFile $file, FileSystem $filesystem) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/backup_db/src/BackupDatabaseClient.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\backup_db;

+use Drupal\Core\Config\ImmutableConfig;
 use Ifsnop\Mysqldump as IMysqldump;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * The backup file handler.
    *
-   * @var \Drupal\backup_db\BackupDatabaseFileHandler
+   * @var BackupDatabaseFileHandler
    */
   protected $handler;

@@ @@
   /**
    * The connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
   /**
    * The constructor.
    *
-   * @param \Drupal\backup_db\BackupDatabaseFileHandler $handler
+   * @param BackupDatabaseFileHandler $handler
    *   The backup file handler.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The connection.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   The config.
    */
   public function __construct(BackupDatabaseFileHandler $handler, Connection $connection, ConfigFactoryInterface $config) {
@@ @@
   /**
    * Set or update the current database connection.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The connection.
    */
   public function setConnection(Connection $connection) {
@@ @@
   /**
    * Return the file handler.
    *
-   * @return \Drupal\backup_db\BackupDatabaseFileHandler
+   * @return BackupDatabaseFileHandler
    *   Returns the file handler.
    */
   public function getFileHandler() {
@@ @@
    * @param string $name
    *   The settings name.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   Returns the config.
    */
   public function getSettings($name = 'backup_db.settings') {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/backup_db/src/Adapter/BackupDatabaseRemoteAdapter.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The backup client.
    *
-   * @var \Drupal\backup_db\BackupDatabaseClientInterface
+   * @var BackupDatabaseClientInterface
    */
   private $client;

@@ @@
   /**
    * The constructor.
    *
-   * @param \Drupal\backup_db\BackupDatabaseClientInterface $client
+   * @param BackupDatabaseClientInterface $client
    *   The backup client.
    */
   public function __construct(BackupDatabaseClientInterface $client) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/backup_db/src/Adapter/BackupDatabaseLocalAdapter.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The backup client.
    *
-   * @var \Drupal\backup_db\BackupDatabaseClientInterface
+   * @var BackupDatabaseClientInterface
    */
   private $client;

@@ @@
   /**
    * The constructor.
    *
-   * @param \Drupal\backup_db\BackupDatabaseClientInterface $client
+   * @param BackupDatabaseClientInterface $client
    *   The backup client.
    */
   public function __construct(BackupDatabaseClientInterface $client) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/backup_db/backup_db.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Database\StatementInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * backup_db.module
@@ @@
  * @param array $file
  *   The file.
  *
- * @return \Drupal\Core\Database\StatementInterface|int|string|null
+ * @return StatementInterface|int|string|null
  *
  * @throws \Exception
  */
@@ @@
  * @return bool
  *   Return the status.
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
+ * @throws EntityStorageException
  */
 function backup_db_history_delete($id) {
   $status = FALSE;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

