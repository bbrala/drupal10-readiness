modules/contrib/filefield_sources_jsonapi/filefield_sources_jsonapi.module
modules/contrib/filefield_sources_jsonapi/src/Entity/FileFieldSourcesJSONAPI.php
modules/contrib/filefield_sources_jsonapi/src/FileFieldSourcesJSONAPIInterface.php
modules/contrib/filefield_sources_jsonapi/src/FileFieldSourcesJSONAPIListBuilder.php
modules/contrib/filefield_sources_jsonapi/src/Form/FileFieldSourcesJSONAPIDeleteForm.php
modules/contrib/filefield_sources_jsonapi/src/Form/FileFieldSourcesJSONAPIForm.php
modules/contrib/filefield_sources_jsonapi/src/Form/ModalBrowserForm.php
modules/contrib/filefield_sources_jsonapi/src/Plugin/FilefieldSource/RemoteJSONAPI.php
modules/contrib/filefield_sources_jsonapi/src/RemoteFileController.php

3 files with changes
====================

1) modules/contrib/filefield_sources_jsonapi/src/Plugin/FilefieldSource/RemoteJSONAPI.php:37

    ---------- begin diff ----------
@@ @@
    */
   public static function value(array &$element, &$input, FormStateInterface $form_state) {
     if (isset($input['filefield_remote_jsonapi']['url']) && strlen($input['filefield_remote_jsonapi']['url']) > 0 && UrlHelper::isValid($input['filefield_remote_jsonapi']['url']) && $input['filefield_remote_jsonapi']['url'] != FILEFIELD_SOURCE_REMOTE_HINT_TEXT) {
-      /** @var \Drupal\Core\File\FileSystemInterface $fileSystem */
+      /** @var FileSystemInterface $fileSystem */
       $fileSystem = \Drupal::service('file_system');

       $field = FieldConfig::loadByName($element['#entity_type'], $element['#bundle'], $element['#field_name']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/filefield_sources_jsonapi/src/Form/ModalBrowserForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\filefield_sources_jsonapi\Form;

+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\filefield_sources_jsonapi\FileFieldSourcesJSONAPIInterface;
 use Drupal\Core\Form\FormBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * Entity form display storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityFormDisplayStorage;

@@ @@
   /**
    * Entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function create(ContainerInterface $container) {
     return new static(
@@ @@
   /**
    * BulkMediaUploadForm constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
+   * @param EntityFieldManagerInterface $entityFieldManager
    *   Entity field manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(
     EntityTypeManagerInterface $entityTypeManager,
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ @@
   public function buildInsertForm(array &$form, FormStateInterface $form_state) {
     $file = $form_state->get('fetched_file');
     $settings = $form_state->get('jsonapi_settings');
-    /** @var \Drupal\filefield_sources_jsonapi\FileFieldSourcesJSONAPIInterface $actual_config */
+    /** @var FileFieldSourcesJSONAPIInterface $actual_config */
     $actual_config = $settings['actual_config'];
     $basic_auth = $actual_config->getBasicAuthentication();

@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function insertSelectedSubmit(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function cancelSelectedSubmit(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   Render array representing from.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Current form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Array of ajax commands to execute on submit of the modal form.
    */
   public function ajaxSubmitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    */
   private function renderFormElements($response, FormStateInterface $form_state) {
     $settings = $form_state->get('jsonapi_settings');
-    /** @var \Drupal\filefield_sources_jsonapi\FileFieldSourcesJSONAPIInterface $actual_config */
+    /** @var FileFieldSourcesJSONAPIInterface $actual_config */
     $actual_config = $settings['actual_config'];
     $api_url_base = $this->getApiBaseUrl($actual_config->getApiUrl());
     $basic_auth = $actual_config->getBasicAuthentication();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/filefield_sources_jsonapi/src/Form/FileFieldSourcesJSONAPIForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\filefield_sources_jsonapi\Form;

+use Drupal\filefield_sources_jsonapi\Entity\FileFieldSourcesJSONAPI;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\filefield_sources_jsonapi\Entity\FileFieldSourcesJSONAPI $config */
+    /** @var FileFieldSourcesJSONAPI $config */
     $config = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

