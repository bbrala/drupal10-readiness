modules/contrib/io/io.module
modules/contrib/io/io.post_update.php
modules/contrib/io/src/Ajax/IoAppendCommand.php
modules/contrib/io/src/Ajax/IoHtmlCommand.php
modules/contrib/io/src/Ajax/IoReplaceCommand.php
modules/contrib/io/src/Controller/IoBlockController.php
modules/contrib/io/src/EventSubscriber/IoEventSubscriber.php
modules/contrib/io/src/IoManager.php
modules/contrib/io/src/IoManagerInterface.php
modules/contrib/io/src/Plugin/views/pager/IoPager.php
modules/contrib/io/tests/src/FunctionalJavascript/IoBlockFallbackTest.php
modules/contrib/io/tests/src/FunctionalJavascript/IoBlockTest.php
modules/contrib/io/tests/src/FunctionalJavascript/IoBlockTestBase.php
modules/contrib/io/tests/src/FunctionalJavascript/IoPagerFallbackTest.php
modules/contrib/io/tests/src/FunctionalJavascript/IoPagerTest.php
modules/contrib/io/tests/src/FunctionalJavascript/IoPagerTestBase.php
modules/contrib/io/tests/src/FunctionalJavascript/IoTestBase.php

8 files with changes
====================

1) modules/contrib/io/tests/src/FunctionalJavascript/IoPagerTest.php:21

    ---------- begin diff ----------
@@ @@

   /**
    * Test IO Pager by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerAutoloadOnScroll() {
     parent::doIoPagerAutoloadOnScroll();
@@ @@

   /**
    * Test IO Pager by manually clicking the fallback link.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerManualOnClicking() {
     parent::doIoPagerManualOnClicking();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/io/tests/src/FunctionalJavascript/IoPagerFallbackTest.php:10

    ---------- begin diff ----------
@@ @@

   /**
    * Test IO Pager by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerFallbackAutoloadOnScroll() {
     parent::doIoPagerAutoloadOnScroll();
@@ @@

   /**
    * Test IO Pager by manually clicking the fallback link.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerFallbackManualOnClicking() {
     parent::doIoPagerManualOnClicking();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/io/tests/src/FunctionalJavascript/IoBlockTest.php:21

    ---------- begin diff ----------
@@ @@

   /**
    * Test IO Blocks by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockAutoloadOnScroll() {
     parent::doIoBlockAutoloadOnScroll();
@@ @@

   /**
    * Test IO Blocks by manually clicking the fallback links.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockManualOnClicking() {
     parent::doIoBlockManualOnClicking();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/io/tests/src/FunctionalJavascript/IoBlockFallbackTest.php:10

    ---------- begin diff ----------
@@ @@

   /**
    * Test IO Blocks by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockAutoloadOnScroll() {
     parent::doIoBlockAutoloadOnScroll();
@@ @@

   /**
    * Test IO Blocks by manually clicking the fallback links.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockManualOnClicking() {
     parent::doIoBlockManualOnClicking();
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


5) modules/contrib/io/src/IoManager.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * Drupal\Core\Block\BlockManagerInterface.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;

@@ @@
   /**
    * The blazy manager service.
    *
-   * @var \Drupal\blazy\BlazyManagerInterface
+   * @var BlazyManagerInterface
    */
   protected $blazyManager;

@@ @@
    * Implements hook_form_FORM_ID_alter().
    */
   public function blockFormAlter(&$form, FormStateInterface $form_state, $form_id) {
-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $block = $form_state->getFormObject()->getEntity();
     if (!$this->isBlockApplicable($block)) {
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/io/src/EventSubscriber/IoEventSubscriber.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Renders the ajax commands right before preparing the result.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The response event, which contains the possible AjaxResponse object.
    */
   public function onResponse(ResponseEvent $event) {
@@ @@
   /**
    * Modifies AJAX response.
    *
-   * @param \Drupal\views\Ajax\ViewAjaxResponse $response
+   * @param ViewAjaxResponse $response
    *   The response object, which contains the commands and strings.
    */
   public function onViewAjaxResponse(ViewAjaxResponse &$response) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/io/src/Controller/IoBlockController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\io\Controller;

+use Drupal\io\IoManager;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Render\BubbleableMetadata;
 use Drupal\Core\Controller\ControllerBase;
@@ @@
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;

@@ @@
   /**
    * The context repository interface.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;

@@ @@
   /**
    * The IO manager service.
    *
-   * @var \Drupal\io\IoManager
+   * @var IoManager
    */
   protected $ioManager;

@@ @@
   /**
    * Loads and renders a block via AJAX.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
    *   Return the requested block based on the given block ID.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws AccessDeniedHttpException
+   * @throws NotFoundHttpException
    *
    * @see http://symfony.com/doc/current/routing.html#required-and-optional-placeholders
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/io/io.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Pager\PagerManagerInterface;
 /**
  * @file
  * Provides integration with Intersection Observer API.
@@ @@
  * Implements hook_preprocess_io_pager().
  */
 function io_preprocess_io_pager(&$variables) {
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');

   $element = $variables['element'];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 8 files have been changed by Rector                                       

