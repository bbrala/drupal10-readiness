modules/contrib/twig_field_value/src/Twig/Extension/FieldValueExtension.php
modules/contrib/twig_field_value/tests/src/Kernel/FieldValueTest.php
modules/contrib/twig_field_value/tests/src/Unit/FieldValue/FieldRawValueTest.php
modules/contrib/twig_field_value/tests/src/Unit/FieldValue/FieldTargetEntityTest.php
modules/contrib/twig_field_value/tests/src/Unit/FieldValue/FieldValueTest.php

4 files with changes
====================

1) modules/contrib/twig_field_value/tests/src/Unit/FieldValue/FieldValueTest.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The Twig extension under test.
    *
-   * @var \Drupal\twig_field_value\Twig\Extension\FieldValueExtension
+   * @var FieldValueExtension
    */
   protected $extension;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/twig_field_value/tests/src/Unit/FieldValue/FieldTargetEntityTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\twig_field_value\Unit\FieldValue;

+use Drupal\Core\Field\FieldItemBase;
 use Drupal\Tests\UnitTestCase;
 use Drupal\twig_field_value\Twig\Extension\FieldValueExtension;

@@ @@
   /**
    * The Twig extension under test.
    *
-   * @var \Drupal\twig_field_value\Twig\Extension\FieldValueExtension
+   * @var FieldValueExtension
    */
   protected $extension;

@@ @@
    *
    * @param array $referenced_entities
    *
-   * @return \Drupal\Core\Field\FieldItemBase
+   * @return FieldItemBase
    *   The entity object.
    */
   protected function mockContentEntity(array $referenced_entities) {
@@ @@
       $entities[] = $entity;
     }

-    $field_item = $this->getMockBuilder('Drupal\Core\Entity\ContentEntityBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $field_item = $this->createMock('Drupal\Core\Entity\ContentEntityBase');
     $field_item->expects($this->any())
       ->method('get')
       ->will($this->returnValue($entities));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/twig_field_value/tests/src/Unit/FieldValue/FieldRawValueTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\twig_field_value\Unit\FieldValue;

+use Drupal\Core\Field\FieldItemBase;
 use Drupal\Tests\UnitTestCase;
 use Drupal\twig_field_value\Twig\Extension\FieldValueExtension;

@@ @@
   /**
    * The Twig extension under test.
    *
-   * @var \Drupal\twig_field_value\Twig\Extension\FieldValueExtension
+   * @var FieldValueExtension
    */
   protected $extension;

@@ @@
    *
    * @param mixed $values
    *
-   * @return \Drupal\Core\Field\FieldItemBase
+   * @return FieldItemBase
    */
   protected function mockFieldItem($values) {

-    $field_item  = $this->getMockBuilder('Drupal\Core\Field\FieldItemBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $field_item  = $this->createMock('Drupal\Core\Field\FieldItemBase');
     $field_item->expects($this->any())
       ->method('getValue')
       ->will($this->returnValue($values));
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/twig_field_value/src/Twig/Extension/FieldValueExtension.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\twig_field_value\Twig\Extension;

+use Drupal\Core\Entity\ContentEntityInterface;
+use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\Render\Element;
 use Drupal\Core\TypedData\TypedDataInterface;

@@ @@
    * @param array|null $build
    *   Render array of a field.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|\Drupal\Core\Entity\ContentEntityInterface[]|null
+   * @return ContentEntityInterface|ContentEntityInterface[]|null
    *   A single target entity or an array of target entities. If no target
    *   entity is found, null is returned.
    */
@@ @@
     }

     // Use the parent object to load the target entity of the field.
-    /** @var \Drupal\Core\Entity\ContentEntityInterface $parent */
+    /** @var ContentEntityInterface $parent */
     $parent = $build[$parent_key];

     $entities = [];
-    /** @var \Drupal\Core\Field\FieldItemInterface $field */
+    /** @var FieldItemInterface $field */
     foreach ($parent->get($build['#field_name']) as $item) {
       if (isset($item->entity)) {
         $entities[] = $item->entity;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

