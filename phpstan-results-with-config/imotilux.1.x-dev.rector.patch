diff --git a/imotilux.module b/imotilux.module
index 0adbd03..ecf5bcc 100644
--- a/imotilux.module
+++ b/imotilux.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\imotilux\ImotiluxManagerInterface;
+use Drupal\imotilux\ImotiluxOutline;
 /**
  * @file
  * Allows users to create and organize property listings related content in an outline.
@@ -213,7 +215,7 @@ function imotilux_form_update($form, FormStateInterface $form_state) {
  * Implements hook_ENTITY_TYPE_load() for node entities.
  */
 function imotilux_node_load($nodes) {
-  /** @var \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager */
+  /** @var ImotiluxManagerInterface $imotilux_manager */
   $imotilux_manager = \Drupal::service('imotilux.manager');
   $links = $imotilux_manager->loadImotiluxLinks(array_keys($nodes), FALSE);
   foreach ($links as $record) {
@@ -261,7 +263,7 @@ function imotilux_node_presave(EntityInterface $node) {
  * Implements hook_ENTITY_TYPE_insert() for node entities.
  */
 function imotilux_node_insert(EntityInterface $node) {
-  /** @var \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager */
+  /** @var ImotiluxManagerInterface $imotilux_manager */
   $imotilux_manager = \Drupal::service('imotilux.manager');
   $imotilux_manager->updateOutline($node);
 }
@@ -270,7 +272,7 @@ function imotilux_node_insert(EntityInterface $node) {
  * Implements hook_ENTITY_TYPE_update() for node entities.
  */
 function imotilux_node_update(EntityInterface $node) {
-  /** @var \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager */
+  /** @var ImotiluxManagerInterface $imotilux_manager */
   $imotilux_manager = \Drupal::service('imotilux.manager');
   $imotilux_manager->updateOutline($node);
 }
@@ -280,7 +282,7 @@ function imotilux_node_update(EntityInterface $node) {
  */
 function imotilux_node_predelete(EntityInterface $node) {
   if (!empty($node->imotilux['bid'])) {
-    /** @var \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager */
+    /** @var ImotiluxManagerInterface $imotilux_manager */
     $imotilux_manager = \Drupal::service('imotilux.manager');
     $imotilux_manager->deleteFromImotilux($node->imotilux['nid']);
   }
@@ -290,7 +292,7 @@ function imotilux_node_predelete(EntityInterface $node) {
  * Implements hook_ENTITY_TYPE_prepare_form() for node entities.
  */
 function imotilux_node_prepare_form(NodeInterface $node, $operation, FormStateInterface $form_state) {
-  /** @var \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager */
+  /** @var ImotiluxManagerInterface $imotilux_manager */
   $imotilux_manager = \Drupal::service('imotilux.manager');
 
   // Prepare defaults for the add/edit form.
@@ -334,7 +336,7 @@ function imotilux_form_node_confirm_form_alter(&$form, FormStateInterface $form_
     return;
   }
 
-  /** @var \Drupal\node\NodeInterface $node */
+  /** @var NodeInterface $node */
   $node = $form_state->getFormObject()->getEntity();
   if (!imotilux_type_is_allowed($node->getType())) {
     // Not a imotilux node.
@@ -396,7 +398,7 @@ function template_preprocess_imotilux_navigation(&$variables) {
   $variables['current_depth'] = $imotilux_link['depth'];
   $variables['tree'] = '';
 
-  /** @var \Drupal\imotilux\ImotiluxOutline $imotilux_outline */
+  /** @var ImotiluxOutline $imotilux_outline */
   $imotilux_outline = \Drupal::service('imotilux.outline');
 
   if ($imotilux_link['nid']) {
@@ -414,7 +416,7 @@ function template_preprocess_imotilux_navigation(&$variables) {
       $variables['prev_title'] = $prev['title'];
     }
 
-    /** @var \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager */
+    /** @var ImotiluxManagerInterface $imotilux_manager */
     $imotilux_manager = \Drupal::service('imotilux.manager');
     if ($imotilux_link['pid'] && $parent = $imotilux_manager->loadImotiluxLink($imotilux_link['pid'])) {
       $parent_href = Url::fromRoute('entity.node.canonical', ['node' => $imotilux_link['pid']])->toString();
diff --git a/src/Access/ImotiluxNodeIsRemovableAccessCheck.php b/src/Access/ImotiluxNodeIsRemovableAccessCheck.php
index c49598e..7cf7cad 100644
--- a/src/Access/ImotiluxNodeIsRemovableAccessCheck.php
+++ b/src/Access/ImotiluxNodeIsRemovableAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imotilux\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\imotilux\ImotiluxManagerInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -15,14 +16,14 @@ class ImotiluxNodeIsRemovableAccessCheck implements AccessInterface {
   /**
    * Imotilux Manager Service.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * Constructs a ImotiluxNodeIsRemovableAccessCheck object.
    *
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   Imotilux Manager Service.
    */
   public function __construct(ImotiluxManagerInterface $imotilux_manager) {
@@ -32,10 +33,10 @@ class ImotiluxNodeIsRemovableAccessCheck implements AccessInterface {
   /**
    * Checks access for removing the node from its imotilux.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node requested to be removed from its imotilux.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(NodeInterface $node) {
diff --git a/src/Cache/ImotiluxNavigationCacheContext.php b/src/Cache/ImotiluxNavigationCacheContext.php
index f986adf..fea257f 100644
--- a/src/Cache/ImotiluxNavigationCacheContext.php
+++ b/src/Cache/ImotiluxNavigationCacheContext.php
@@ -27,14 +27,14 @@ class ImotiluxNavigationCacheContext implements CacheContextInterface, Container
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * Constructs a new ImotiluxNavigationCacheContext service.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(RequestStack $request_stack) {
diff --git a/src/Controller/ImotiluxController.php b/src/Controller/ImotiluxController.php
index 27efd3d..a5b90d0 100644
--- a/src/Controller/ImotiluxController.php
+++ b/src/Controller/ImotiluxController.php
@@ -22,32 +22,32 @@ class ImotiluxController extends ControllerBase {
   /**
    * The imotilux manager.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * The imotilux export service.
    *
-   * @var \Drupal\imotilux\ImotiluxExport
+   * @var ImotiluxExport
    */
   protected $imotiluxExport;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Constructs a ImotiluxController object.
    *
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotiluxManager
+   * @param ImotiluxManagerInterface $imotiluxManager
    *   The imotilux manager.
-   * @param \Drupal\imotilux\ImotiluxExport $imotiluxExport
+   * @param ImotiluxExport $imotiluxExport
    *   The imotilux export service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(ImotiluxManagerInterface $imotiluxManager, ImotiluxExport $imotiluxExport, RendererInterface $renderer) {
@@ -79,7 +79,7 @@ class ImotiluxController extends ControllerBase {
     $headers = [t('Imotilux'), t('Operations')];
     // Add any recognized imotilux to the table list.
     foreach ($this->imotiluxManager->getAllImotilux() as $imotilux) {
-      /** @var \Drupal\Core\Url $url */
+      /** @var Url $url */
       $url = $imotilux['url'];
       if (isset($imotilux['options'])) {
         $url->setOptions($imotilux['options']);
@@ -141,14 +141,14 @@ class ImotiluxController extends ControllerBase {
    *   currently supported in imotilux module:
    *   - html: Printer-friendly HTML.
    *   Other types may be supported in contributed modules.
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node to export.
    *
    * @return array
    *   A render array representing the node and its children in the imotilux
    *   hierarchy in a format determined by the $type parameter.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    */
   public function imotiluxExport($type, NodeInterface $node) {
     $method = 'imotiluxExport' . Container::camelize($type);
diff --git a/src/Form/ImotiluxAdminEditForm.php b/src/Form/ImotiluxAdminEditForm.php
index cc62a4b..47e538b 100644
--- a/src/Form/ImotiluxAdminEditForm.php
+++ b/src/Form/ImotiluxAdminEditForm.php
@@ -25,35 +25,35 @@ class ImotiluxAdminEditForm extends FormBase {
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * The imotilux manager.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
-   * @var \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @var AccountProxyInterface $currentUser
    */
   protected $currentUser;
 
   /**
-   * @var \Drupal\Core\Render\Renderer $renderer
+   * @var Renderer $renderer
    */
   protected $renderer;
 
   /**
    * Constructs a new ImotiluxAdminEditForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The custom block storage.
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   The imotilux manager.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(EntityStorageInterface $node_storage, ImotiluxManagerInterface $imotilux_manager, AccountProxyInterface $current_user, Renderer $renderer) {
@@ -151,7 +151,7 @@ class ImotiluxAdminEditForm extends FormBase {
   /**
    * Builds the table portion of the form for the imotilux administration page.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node of the top-level page in the imotilux.
    * @param array $form
    *   The form that is being modified, passed by reference.
diff --git a/src/Form/ImotiluxOutlineForm.php b/src/Form/ImotiluxOutlineForm.php
index 3536b13..ee7c7f8 100644
--- a/src/Form/ImotiluxOutlineForm.php
+++ b/src/Form/ImotiluxOutlineForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imotilux\Form;
 
+use Drupal\node\NodeInterface;
 use Drupal\imotilux\ImotiluxManagerInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\ContentEntityForm;
@@ -21,27 +22,27 @@ class ImotiluxOutlineForm extends ContentEntityForm {
   /**
    * The imotilux being displayed.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $entity;
 
   /**
    * ImotiluxManager service.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * Constructs a ImotiluxOutlineForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   The ImotiluxManager service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, ImotiluxManagerInterface $imotilux_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
diff --git a/src/Form/ImotiluxRemoveForm.php b/src/Form/ImotiluxRemoveForm.php
index 145ee25..0a6a8fa 100644
--- a/src/Form/ImotiluxRemoveForm.php
+++ b/src/Form/ImotiluxRemoveForm.php
@@ -18,21 +18,21 @@ class ImotiluxRemoveForm extends ConfirmFormBase {
   /**
    * The imotilux manager.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * The node representing the imotilux.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
   /**
    * Constructs a ImotiluxRemoveForm object.
    *
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   The imotilux manager.
    */
   public function __construct(ImotiluxManagerInterface $imotilux_manager) {
diff --git a/src/ImotiluxBreadcrumbBuilder.php b/src/ImotiluxBreadcrumbBuilder.php
index 48a895f..98db301 100644
--- a/src/ImotiluxBreadcrumbBuilder.php
+++ b/src/ImotiluxBreadcrumbBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imotilux;
 
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Breadcrumb\Breadcrumb;
 use Drupal\Core\Breadcrumb\BreadcrumbBuilderInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -20,23 +21,23 @@ class ImotiluxBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * Constructs the ImotiluxBreadcrumbBuilder.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, AccountInterface $account) {
diff --git a/src/ImotiluxExport.php b/src/ImotiluxExport.php
index 259dfa2..a569c5b 100644
--- a/src/ImotiluxExport.php
+++ b/src/ImotiluxExport.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\imotilux;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Entity\EntityViewBuilderInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\node\NodeInterface;
 
@@ -15,30 +17,30 @@ class ImotiluxExport {
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
   /**
    * The node view builder.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $viewBuilder;
 
   /**
    * The imotilux manager.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * Constructs a ImotiluxExport object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   The imotilux manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ImotiluxManagerInterface $imotilux_manager) {
@@ -57,7 +59,7 @@ class ImotiluxExport {
    * always look like level 3 sections, no matter their depth relative to the
    * node selected to be exported as printer-friendly HTML.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node to export.
    *
    * @return array
@@ -118,7 +120,7 @@ class ImotiluxExport {
   /**
    * Generates printer-friendly HTML for a node.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node that will be output.
    * @param string $children
    *   (optional) All the rendered child nodes within the current node. Defaults
diff --git a/src/ImotiluxManager.php b/src/ImotiluxManager.php
index 14ec770..a8582f3 100644
--- a/src/ImotiluxManager.php
+++ b/src/ImotiluxManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imotilux;
 
+use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\DependencyInjection\DeprecatedServicePropertyTrait;
@@ -31,14 +32,14 @@ class ImotiluxManager implements ImotiluxManagerInterface {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Config Factory Service Object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -52,7 +53,7 @@ class ImotiluxManager implements ImotiluxManagerInterface {
   /**
    * Imotilux outline storage.
    *
-   * @var \Drupal\imotilux\ImotiluxOutlineStorageInterface
+   * @var ImotiluxOutlineStorageInterface
    */
   protected $imotiluxOutlineStorage;
 
@@ -66,34 +67,34 @@ class ImotiluxManager implements ImotiluxManagerInterface {
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
-   * @var \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @var LanguageManagerInterface $languageManager
    */
   protected $languageManager;
 
   /**
-   * @var \Drupal\Core\Cache\CacheBackendInterface $cacheData
+   * @var CacheBackendInterface $cacheData
    */
   protected $cacheData;
 
   /**
    * Constructs a ImotiluxManager object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The string translation service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\imotilux\ImotiluxOutlineStorageInterface $imotilux_outline_storage
+   * @param ImotiluxOutlineStorageInterface $imotilux_outline_storage
    *   The imotilux outline storage.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TranslationInterface $translation, ConfigFactoryInterface $config_factory, ImotiluxOutlineStorageInterface $imotilux_outline_storage, RendererInterface $renderer, LanguageManagerInterface $language_manager) {
diff --git a/src/ImotiluxManagerInterface.php b/src/ImotiluxManagerInterface.php
index e3be0dc..7739534 100644
--- a/src/ImotiluxManagerInterface.php
+++ b/src/ImotiluxManagerInterface.php
@@ -174,7 +174,7 @@ interface ImotiluxManagerInterface {
    * outline through node addition, node editing, node deletion, or the outline
    * tab.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node that is being saved, added, deleted, or moved.
    *
    * @return bool
@@ -213,11 +213,11 @@ interface ImotiluxManagerInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node whose form is being viewed.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account viewing the form.
    * @param bool $collapsed
    *   If TRUE, the fieldset starts out collapsed.
@@ -285,7 +285,7 @@ interface ImotiluxManagerInterface {
    * A node can be removed from a imotilux if it is actually in a imotilux and it either
    * is not a top-level page or is a top-level page with no children.
    *
-   * @param \Drupal\node\NodeInterface $node
+   * @param NodeInterface $node
    *   The node to remove from the outline.
    *
    * @return bool
diff --git a/src/ImotiluxOutline.php b/src/ImotiluxOutline.php
index 9402659..01f5b46 100644
--- a/src/ImotiluxOutline.php
+++ b/src/ImotiluxOutline.php
@@ -10,14 +10,14 @@ class ImotiluxOutline {
   /**
    * The imotilux manager.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * Constructs a new ImotiluxOutline.
    *
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   The imotilux manager.
    */
   public function __construct(ImotiluxManagerInterface $imotilux_manager) {
diff --git a/src/ImotiluxOutlineStorage.php b/src/ImotiluxOutlineStorage.php
index cfb085f..6d32da8 100644
--- a/src/ImotiluxOutlineStorage.php
+++ b/src/ImotiluxOutlineStorage.php
@@ -12,7 +12,7 @@ class ImotiluxOutlineStorage implements ImotiluxOutlineStorageInterface {
   /**
    * Database Service Object.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
diff --git a/src/ImotiluxUninstallValidator.php b/src/ImotiluxUninstallValidator.php
index 4406f02..1798e18 100644
--- a/src/ImotiluxUninstallValidator.php
+++ b/src/ImotiluxUninstallValidator.php
@@ -18,25 +18,25 @@ class ImotiluxUninstallValidator implements ModuleUninstallValidatorInterface {
   /**
    * The imotilux outline storage.
    *
-   * @var \Drupal\imotilux\ImotiluxOutlineStorageInterface
+   * @var ImotiluxOutlineStorageInterface
    */
   protected $imotiluxOutlineStorage;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new ImotiluxUninstallValidator.
    *
-   * @param \Drupal\imotilux\ImotiluxOutlineStorageInterface $imotilux_outline_storage
+   * @param ImotiluxOutlineStorageInterface $imotilux_outline_storage
    *   The imotilux outline storage.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(ImotiluxOutlineStorageInterface $imotilux_outline_storage, EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
diff --git a/src/Plugin/Block/ImotiluxNavigationBlock.php b/src/Plugin/Block/ImotiluxNavigationBlock.php
index b8c5bb4..a8a15a0 100644
--- a/src/Plugin/Block/ImotiluxNavigationBlock.php
+++ b/src/Plugin/Block/ImotiluxNavigationBlock.php
@@ -26,21 +26,21 @@ class ImotiluxNavigationBlock extends BlockBase implements ContainerFactoryPlugi
   /**
    * The request object.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The imotilux manager.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * The node storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $nodeStorage;
 
@@ -53,11 +53,11 @@ class ImotiluxNavigationBlock extends BlockBase implements ContainerFactoryPlugi
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack object.
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   The imotilux manager.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The node storage.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RequestStack $request_stack, ImotiluxManagerInterface $imotilux_manager, EntityStorageInterface $node_storage) {
diff --git a/src/Plugin/Validation/Constraint/ImotiluxOutlineConstraintValidator.php b/src/Plugin/Validation/Constraint/ImotiluxOutlineConstraintValidator.php
index 1482b9b..3973706 100644
--- a/src/Plugin/Validation/Constraint/ImotiluxOutlineConstraintValidator.php
+++ b/src/Plugin/Validation/Constraint/ImotiluxOutlineConstraintValidator.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\imotilux\Plugin\Validation\Constraint;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\imotilux\ImotiluxManagerInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -16,14 +17,14 @@ class ImotiluxOutlineConstraintValidator extends ConstraintValidator implements
   /**
    * The imotilux manager.
    *
-   * @var \Drupal\imotilux\ImotiluxManagerInterface
+   * @var ImotiluxManagerInterface
    */
   protected $imotiluxManager;
 
   /**
    * Creates a new ImotiluxOutlineConstraintValidator instance.
    *
-   * @param \Drupal\imotilux\ImotiluxManagerInterface $imotilux_manager
+   * @param ImotiluxManagerInterface $imotilux_manager
    *   The imotilux manager.
    */
   public function __construct(ImotiluxManagerInterface $imotilux_manager) {
@@ -44,7 +45,7 @@ class ImotiluxOutlineConstraintValidator extends ConstraintValidator implements
    */
   public function validate($entity, Constraint $constraint) {
     if (isset($entity) && !$entity->isNew() && !$entity->isDefaultRevision()) {
-      /** @var \Drupal\Core\Entity\ContentEntityInterface $original */
+      /** @var ContentEntityInterface $original */
       $original = $this->imotiluxManager->loadImotiluxLink($entity->id(), FALSE) ?: [
         'bid' => 0,
         'weight' => 0,
diff --git a/src/Plugin/views/argument_default/TopLevelImotilux.php b/src/Plugin/views/argument_default/TopLevelImotilux.php
index dac368f..25d0106 100644
--- a/src/Plugin/views/argument_default/TopLevelImotilux.php
+++ b/src/Plugin/views/argument_default/TopLevelImotilux.php
@@ -20,7 +20,7 @@ class TopLevelImotilux extends Node {
   /**
    * The node storage controller.
    *
-   * @var \Drupal\node\NodeStorageInterface
+   * @var NodeStorageInterface
    */
   protected $nodeStorage;
 
@@ -33,9 +33,9 @@ class TopLevelImotilux extends Node {
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
-   * @param \Drupal\node\NodeStorageInterface $node_storage
+   * @param NodeStorageInterface $node_storage
    *   The node storage controller.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, RouteMatchInterface $route_match, NodeStorageInterface $node_storage) {
diff --git a/src/ProxyClass/ImotiluxUninstallValidator.php b/src/ProxyClass/ImotiluxUninstallValidator.php
index eb44490..5d74cad 100644
--- a/src/ProxyClass/ImotiluxUninstallValidator.php
+++ b/src/ProxyClass/ImotiluxUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\imotilux\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\imotilux\ImotiluxUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class ImotiluxUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class ImotiluxUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -34,19 +38,19 @@ namespace Drupal\imotilux\ProxyClass {
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;
 
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\imotilux\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
