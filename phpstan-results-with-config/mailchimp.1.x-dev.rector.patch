diff --git a/lib/mailchimp-api-php/src/Mailchimp.php b/lib/mailchimp-api-php/src/Mailchimp.php
index 6980e2b..366549c 100644
--- a/lib/mailchimp-api-php/src/Mailchimp.php
+++ b/lib/mailchimp-api-php/src/Mailchimp.php
@@ -119,7 +119,7 @@ class Mailchimp {
   /**
    * Sets a custom HTTP client to be used for all API requests.
    *
-   * @param \Mailchimp\http\MailchimpHttpClientInterface $client
+   * @param MailchimpHttpClientInterface $client
    *   The HTTP client.
    */
   public function setClient(MailchimpHttpClientInterface $client) {
diff --git a/lib/mailchimp-api-php/src/MailchimpEcommerce.php b/lib/mailchimp-api-php/src/MailchimpEcommerce.php
index 0b3cebb..f74981b 100644
--- a/lib/mailchimp-api-php/src/MailchimpEcommerce.php
+++ b/lib/mailchimp-api-php/src/MailchimpEcommerce.php
@@ -621,7 +621,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API order response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/orders/#edit-patch_ecommerce_stores_store_id_orders_order_id
    */
@@ -669,7 +669,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API order line response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/orders/lines/#read-get_ecommerce_stores_store_id_orders_order_id_lines
    */
@@ -697,7 +697,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API order line response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/orders/lines/#read-get_ecommerce_stores_store_id_orders_order_id_lines_line_id
    */
@@ -760,7 +760,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/#read-get_ecommerce_stores_store_id_products
    */
@@ -785,7 +785,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/#read-get_ecommerce_stores_store_id_products_product_id
    */
@@ -817,7 +817,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API Product response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/#create-post_ecommerce_stores_store_id_products
    */
@@ -853,7 +853,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API Product response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/#edit-patch_ecommerce_stores_store_id_products_product_id
    */
@@ -881,7 +881,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/#delete-delete_ecommerce_stores_store_id_products_product_id
    */
@@ -907,7 +907,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/variants/#create-post_ecommerce_stores_store_id_products_product_id_variants
    */
@@ -935,7 +935,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product variant response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/variants/#edit-patch_ecommerce_stores_store_id_products_product_id_variants_variant_id
    */
@@ -963,7 +963,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product variant response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/variants/#read-get_ecommerce_stores_store_id_products_product_id_variants_variant_id
    */
@@ -987,7 +987,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product variant response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/variants/#read-get_ecommerce_stores_store_id_products_product_id_variants
    */
@@ -1012,7 +1012,7 @@ class MailchimpEcommerce extends Mailchimp {
    * @return object
    *   The API product variant response object.
    *
-   * @throws \Mailchimp\MailchimpAPIException
+   * @throws MailchimpAPIException
    *
    * @see http://developer.mailchimp.com/documentation/mailchimp/reference/ecommerce/stores/products/variants/#delete-delete_ecommerce_stores_store_id_products_product_id_variants_variant_id
    */
diff --git a/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php b/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php
index ad06cb4..3ff5782 100644
--- a/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php
+++ b/lib/mailchimp-api-php/tests/src/MailchimpTestHttpResponse.php
@@ -2,12 +2,13 @@
 
 namespace Mailchimp\Tests;
 
+use GuzzleHttp\Psr7\Response;
 /**
  * Test HTTP Response.
  *
  * @package Mailchimp\Tests
  */
-class MailchimpTestHttpResponse extends \GuzzleHttp\Psr7\Response {
+class MailchimpTestHttpResponse extends Response {
 
   public function getBody() {
     return '{}';
diff --git a/mailchimp.api.php b/mailchimp.api.php
index f4420b1..b722416 100644
--- a/mailchimp.api.php
+++ b/mailchimp.api.php
@@ -60,7 +60,7 @@ function hook_mailchimp_process_webhook($type, array $data) {
  *
  * @param array $mergevars
  *   The current mergevars.
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity used to populate the mergevars.
  * @param string $entity_type
  *   The entity type.
diff --git a/mailchimp.module b/mailchimp.module
index 8c4c806..43baa23 100644
--- a/mailchimp.module
+++ b/mailchimp.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Extension\ModuleExtensionList;
+use function GuzzleHttp\default_user_agent;
 /**
  * @file
  * Mailchimp module.
@@ -100,7 +102,7 @@ function _mailchimp_get_user_agent() {
   $version = '8.x-1.x';
 
   if (\Drupal::moduleHandler()->moduleExists('system')) {
-    /** @var \Drupal\Core\Extension\ModuleExtensionList $extension_list */
+    /** @var ModuleExtensionList $extension_list */
     $extension_list = \Drupal::service('extension.list.module');
     $info = $extension_list->getExtensionInfo('mailchimp');
     if (!empty($info['version'])) {
@@ -108,7 +110,7 @@ function _mailchimp_get_user_agent() {
     }
   }
 
-  $user_agent = "DrupalMailchimp/$version " . \GuzzleHttp\default_user_agent();
+  $user_agent = "DrupalMailchimp/$version " . default_user_agent();
 
   return $user_agent;
 }
diff --git a/modules/mailchimp_campaign/mailchimp_campaign.module b/modules/mailchimp_campaign/mailchimp_campaign.module
index f69c690..07b62c4 100644
--- a/modules/mailchimp_campaign/mailchimp_campaign.module
+++ b/modules/mailchimp_campaign/mailchimp_campaign.module
@@ -180,7 +180,7 @@ function mailchimp_campaign_save_campaign(array $template, $recipients, $setting
 /**
  * Sends a Mailchimp campaign.
  *
- * @param \Drupal\mailchimp_campaign\Entity\MailchimpCampaign $campaign
+ * @param MailchimpCampaign $campaign
  *   The Mailchimp campaign to send.
  *
  * @return bool
diff --git a/modules/mailchimp_campaign/src/Controller/MailchimpCampaignController.php b/modules/mailchimp_campaign/src/Controller/MailchimpCampaignController.php
index fcb17cb..ffd520c 100644
--- a/modules/mailchimp_campaign/src/Controller/MailchimpCampaignController.php
+++ b/modules/mailchimp_campaign/src/Controller/MailchimpCampaignController.php
@@ -24,7 +24,7 @@ class MailchimpCampaignController extends ControllerBase {
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
@@ -38,43 +38,43 @@ class MailchimpCampaignController extends ControllerBase {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Initializes a MailchimpCampaignController.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(Request $request, DateFormatterInterface $date_formatter, EntityTypeManagerInterface $entityTypeManager, MessengerInterface $messenger, LoggerInterface $logger) {
@@ -236,7 +236,7 @@ class MailchimpCampaignController extends ControllerBase {
   /**
    * View a Mailchimp campaign.
    *
-   * @param \Drupal\mailchimp_campaign\Entity\MailchimpCampaign $mailchimp_campaign
+   * @param MailchimpCampaign $mailchimp_campaign
    *   The Mailchimp campaign to view.
    *
    * @return array
@@ -253,7 +253,7 @@ class MailchimpCampaignController extends ControllerBase {
   /**
    * View a Mailchimp campaign stats.
    *
-   * @param \Drupal\mailchimp_campaign\Entity\MailchimpCampaign $mailchimp_campaign
+   * @param MailchimpCampaign $mailchimp_campaign
    *   The Mailchimp campaign to view stats for.
    *
    * @return array
@@ -361,7 +361,7 @@ class MailchimpCampaignController extends ControllerBase {
    * @param string $entity_type
    *   The entity type to search by title.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   A JSON response containing matched entity data.
    */
   public function entityAutocomplete($entity_type) {
diff --git a/modules/mailchimp_campaign/src/Entity/MailchimpCampaignViewBuilder.php b/modules/mailchimp_campaign/src/Entity/MailchimpCampaignViewBuilder.php
index 07cef9b..a3c6d0d 100644
--- a/modules/mailchimp_campaign/src/Entity/MailchimpCampaignViewBuilder.php
+++ b/modules/mailchimp_campaign/src/Entity/MailchimpCampaignViewBuilder.php
@@ -23,29 +23,29 @@ class MailchimpCampaignViewBuilder extends EntityViewBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new MailchimpCampaignViewBuilder.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   The entity manager service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityManagerInterface $entity_manager, LanguageManagerInterface $language_manager, DateFormatterInterface $date_formatter, MessengerInterface $messenger) {
diff --git a/modules/mailchimp_campaign/src/Form/MailchimpCampaignDeleteForm.php b/modules/mailchimp_campaign/src/Form/MailchimpCampaignDeleteForm.php
index 4c14c81..b90392c 100644
--- a/modules/mailchimp_campaign/src/Form/MailchimpCampaignDeleteForm.php
+++ b/modules/mailchimp_campaign/src/Form/MailchimpCampaignDeleteForm.php
@@ -18,14 +18,14 @@ class MailchimpCampaignDeleteForm extends EntityConfirmFormBase {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a MailchimpCampaignDeleteForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(MessengerInterface $messenger) {
diff --git a/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php b/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php
index 7967d49..fba9b64 100644
--- a/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php
+++ b/modules/mailchimp_campaign/src/Form/MailchimpCampaignForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailchimp_campaign\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -30,56 +31,56 @@ class MailchimpCampaignForm extends ContentEntityForm {
   /**
    * Configuration object for this builder.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * A cache backend interface.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Constructs a MailchimpCampaignForm object.
    *
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The Mailchimp cache backend interface.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityRepositoryInterface $entity_repository, ConfigFactoryInterface $config_factory, MessengerInterface $messenger, EntityTypeManagerInterface $entityTypeManager, EntityDisplayRepositoryInterface $entity_display_repository, CacheBackendInterface $cache, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
@@ -429,10 +430,10 @@ class MailchimpCampaignForm extends ContentEntityForm {
    *
    * @param array $form
    *   Form API array structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state information.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with the rendered list/audience segments element.
    */
   public static function listSegmentCallback(array $form, FormStateInterface $form_state) {
@@ -454,10 +455,10 @@ class MailchimpCampaignForm extends ContentEntityForm {
    *
    * @param array $form
    *   Form API array structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state information.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with the rendered content element.
    */
   public static function templateCallback(array $form, FormStateInterface $form_state) {
@@ -473,10 +474,10 @@ class MailchimpCampaignForm extends ContentEntityForm {
    *
    * @param array $form
    *   Form API array structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state information.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with the rendered content element.
    */
   public static function entityTypeCallback(array $form, FormStateInterface $form_state) {
@@ -775,7 +776,7 @@ class MailchimpCampaignForm extends ContentEntityForm {
         }
       }
 
-      return render($element);
+      return \Drupal::service('renderer')->render($element);
     }
     else {
       return $this->t('No custom merge vars exist for the current audience.');
diff --git a/modules/mailchimp_campaign/src/Form/MailchimpCampaignSendForm.php b/modules/mailchimp_campaign/src/Form/MailchimpCampaignSendForm.php
index c9d0ac2..2ee985a 100644
--- a/modules/mailchimp_campaign/src/Form/MailchimpCampaignSendForm.php
+++ b/modules/mailchimp_campaign/src/Form/MailchimpCampaignSendForm.php
@@ -18,14 +18,14 @@ class MailchimpCampaignSendForm extends EntityConfirmFormBase {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a MailchimpCampaignSendForm object.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(MessengerInterface $messenger) {
diff --git a/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php b/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php
index 986ee97..487bb99 100644
--- a/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php
+++ b/modules/mailchimp_campaign/src/Plugin/Filter/FilterMailchimpCampaign.php
@@ -66,7 +66,7 @@ class FilterMailchimpCampaign extends FilterBase {
       if (isset($build[$entity_type][$entity_id]['#contextual_links'])) {
         unset($build[$entity_type][$entity_id]['#contextual_links']);
       }
-      $content = render($build);
+      $content = \Drupal::service('renderer')->render($build);
     }
 
     return $content;
diff --git a/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php b/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php
index 8a860f2..60f882d 100644
--- a/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php
+++ b/modules/mailchimp_campaign/src/Tests/MailchimpCampaignTest.php
@@ -26,10 +26,10 @@ class MailchimpCampaignTest extends MailchimpCampaignTestBase {
 
     $this->assertTrue(is_object($campaign), 'Tested retrieval of campaign data.');
 
-    $this->assertEqual($campaign->id, $campaign_id);
-    $this->assertEqual($campaign->type, 'regular');
-    $this->assertEqual($campaign->recipients->list_id, '57afe96172');
-    $this->assertEqual($campaign->settings->subject_line, 'Test Campaign');
+    $this->assertEquals($campaign->id, $campaign_id);
+    $this->assertEquals($campaign->type, 'regular');
+    $this->assertEquals($campaign->recipients->list_id, '57afe96172');
+    $this->assertEquals($campaign->settings->subject_line, 'Test Campaign');
     $this->assertTrue($campaign->tracking->html_clicks);
     $this->assertFalse($campaign->tracking->text_clicks);
   }
diff --git a/modules/mailchimp_lists/mailchimp_lists.install b/modules/mailchimp_lists/mailchimp_lists.install
index 17c2aa9..86ac84f 100644
--- a/modules/mailchimp_lists/mailchimp_lists.install
+++ b/modules/mailchimp_lists/mailchimp_lists.install
@@ -1,15 +1,15 @@
 <?php
 
+use Drupal\Core\Entity\EntityFieldManagerInterface;
 /**
  * @file
  * Install and update hooks for Mailchimp Audiences.
  */
-
 /**
  * Update structure of mailchimp fields.
  */
 function mailchimp_lists_update_8001() {
-  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager */
+  /** @var EntityFieldManagerInterface $entity_field_manager */
   $entity_field_manager = \Drupal::service('entity_field.manager');
   $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
   $field_map = $entity_field_manager->getFieldMapByFieldType('mailchimp_lists_subscription');
diff --git a/modules/mailchimp_lists/mailchimp_lists.module b/modules/mailchimp_lists/mailchimp_lists.module
index 3383d76..b33eb16 100644
--- a/modules/mailchimp_lists/mailchimp_lists.module
+++ b/modules/mailchimp_lists/mailchimp_lists.module
@@ -125,9 +125,9 @@ function mailchimp_lists_load_email(MailchimpListsSubscription $instance, Entity
  *
  * @param array $choices
  *   An array representing the form values selected.
- * @param \Drupal\mailchimp_lists\Plugin\Field\FieldType\MailchimpListsSubscription $instance
+ * @param MailchimpListsSubscription $instance
  *   A mailchimp_lists_subscription field instance configuration.
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   An Entity that has the $instance field.
  */
 function mailchimp_lists_process_subscribe_form_choices(array $choices, MailchimpListsSubscription $instance, EntityInterface $entity) {
diff --git a/modules/mailchimp_lists/src/Controller/MailchimpFieldsController.php b/modules/mailchimp_lists/src/Controller/MailchimpFieldsController.php
index 7e43218..62622b6 100644
--- a/modules/mailchimp_lists/src/Controller/MailchimpFieldsController.php
+++ b/modules/mailchimp_lists/src/Controller/MailchimpFieldsController.php
@@ -16,14 +16,14 @@ class MailchimpFieldsController extends ControllerBase {
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Initializes a MailchimpCampaignController.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager..
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager) {
diff --git a/modules/mailchimp_lists/src/Form/MailchimpListsClearCacheForm.php b/modules/mailchimp_lists/src/Form/MailchimpListsClearCacheForm.php
index 9e9e53e..c844cea 100644
--- a/modules/mailchimp_lists/src/Form/MailchimpListsClearCacheForm.php
+++ b/modules/mailchimp_lists/src/Form/MailchimpListsClearCacheForm.php
@@ -16,14 +16,14 @@ class MailchimpListsClearCacheForm extends ConfirmFormBase {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * MailchimpListsClearCacheForm constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(MessengerInterface $messenger) {
diff --git a/modules/mailchimp_lists/src/Form/MailchimpListsSubscribeForm.php b/modules/mailchimp_lists/src/Form/MailchimpListsSubscribeForm.php
index f836215..b63448c 100644
--- a/modules/mailchimp_lists/src/Form/MailchimpListsSubscribeForm.php
+++ b/modules/mailchimp_lists/src/Form/MailchimpListsSubscribeForm.php
@@ -25,7 +25,7 @@ class MailchimpListsSubscribeForm extends FormBase {
   /**
    * The MailchimpListsSubscription field instance used to build this form.
    *
-   * @var \Drupal\mailchimp_lists\Plugin\Field\FieldType\MailchimpListsSubscription
+   * @var MailchimpListsSubscription
    */
   private $fieldInstance;
 
@@ -34,7 +34,7 @@ class MailchimpListsSubscribeForm extends FormBase {
    *
    * Used to get field configuration.
    *
-   * @var \Drupal\mailchimp_lists\Plugin\Field\FieldFormatter\MailchimpListsFieldSubscribeFormatter
+   * @var MailchimpListsFieldSubscribeFormatter
    */
   private $fieldFormatter;
 
@@ -58,7 +58,7 @@ class MailchimpListsSubscribeForm extends FormBase {
   /**
    * Sets the field instance service.
    *
-   * @param \Drupal\mailchimp_lists\Plugin\Field\FieldType\MailchimpListsSubscription $fieldInstance
+   * @param MailchimpListsSubscription $fieldInstance
    *   The field instance service.
    */
   public function setFieldInstance(MailchimpListsSubscription $fieldInstance) {
@@ -68,7 +68,7 @@ class MailchimpListsSubscribeForm extends FormBase {
   /**
    * Sets the field formatter service.
    *
-   * @param \Drupal\mailchimp_lists\Plugin\Field\FieldFormatter\MailchimpListsFieldSubscribeFormatter $fieldFormatter
+   * @param MailchimpListsFieldSubscribeFormatter $fieldFormatter
    *   The field formatter service.
    */
   public function setFieldFormatter(MailchimpListsFieldSubscribeFormatter $fieldFormatter) {
diff --git a/modules/mailchimp_lists/src/Form/MailchimpListsUpdateMergevarsForm.php b/modules/mailchimp_lists/src/Form/MailchimpListsUpdateMergevarsForm.php
index 4bffa7b..f82095a 100644
--- a/modules/mailchimp_lists/src/Form/MailchimpListsUpdateMergevarsForm.php
+++ b/modules/mailchimp_lists/src/Form/MailchimpListsUpdateMergevarsForm.php
@@ -17,23 +17,23 @@ class MailchimpListsUpdateMergevarsForm extends ConfirmFormBase {
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * MailchimpListsUpdateMergevarsForm constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(Request $request, MessengerInterface $messenger) {
diff --git a/modules/mailchimp_lists/src/Form/MailchimpListsWebhookSettingsForm.php b/modules/mailchimp_lists/src/Form/MailchimpListsWebhookSettingsForm.php
index ab00156..b1e6655 100644
--- a/modules/mailchimp_lists/src/Form/MailchimpListsWebhookSettingsForm.php
+++ b/modules/mailchimp_lists/src/Form/MailchimpListsWebhookSettingsForm.php
@@ -16,16 +16,16 @@ class MailchimpListsWebhookSettingsForm extends ConfigFormBase {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a MailchimpListsWebhookSettingsForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, MessengerInterface $messenger) {
diff --git a/modules/mailchimp_lists/src/Plugin/Field/FieldFormatter/MailchimpListsFieldSubscribeFormatter.php b/modules/mailchimp_lists/src/Plugin/Field/FieldFormatter/MailchimpListsFieldSubscribeFormatter.php
index 2b684f2..9e07027 100644
--- a/modules/mailchimp_lists/src/Plugin/Field/FieldFormatter/MailchimpListsFieldSubscribeFormatter.php
+++ b/modules/mailchimp_lists/src/Plugin/Field/FieldFormatter/MailchimpListsFieldSubscribeFormatter.php
@@ -27,7 +27,7 @@ class MailchimpListsFieldSubscribeFormatter extends FormatterBase implements Con
   /**
    * The Form Builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
diff --git a/modules/mailchimp_lists/src/Plugin/Field/FieldType/MailchimpListsSubscription.php b/modules/mailchimp_lists/src/Plugin/Field/FieldType/MailchimpListsSubscription.php
index 0710785..d2323f1 100644
--- a/modules/mailchimp_lists/src/Plugin/Field/FieldType/MailchimpListsSubscription.php
+++ b/modules/mailchimp_lists/src/Plugin/Field/FieldType/MailchimpListsSubscription.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailchimp_lists\Plugin\Field\FieldType;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Entity\FieldableEntityInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
@@ -349,7 +350,7 @@ class MailchimpListsSubscription extends FieldItemBase {
       $options[''] = $this->t('-- Select --');
     }
 
-    /** @var \Drupal\Core\Field\FieldDefinitionInterface[] $field_definitions */
+    /** @var FieldDefinitionInterface[] $field_definitions */
     $field_definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions($entity_type, $entity_bundle);
 
     foreach ($field_definitions as $field_name => $field_definition) {
diff --git a/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php b/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php
index c0eff76..9190025 100644
--- a/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php
+++ b/modules/mailchimp_lists/src/Tests/MailchimpListsSubscriptionTest.php
@@ -25,8 +25,8 @@ class MailchimpListsSubscriptionTest extends MailchimpListsTestBase {
 
     $member_info = mailchimp_get_memberinfo($list_id, $email);
 
-    $this->assertEqual($member_info->id, md5($email));
-    $this->assertEqual($member_info->email_address, $email);
+    $this->assertEquals($member_info->id, md5($email));
+    $this->assertEquals($member_info->email_address, $email);
   }
 
   /**
@@ -64,11 +64,11 @@ class MailchimpListsSubscriptionTest extends MailchimpListsTestBase {
 
     $member_info = mailchimp_subscribe($list_id, $email, $merge_vars, $interests);
 
-    $this->assertEqual($member_info->id, md5($email), 'Tested new user subscription.');
+    $this->assertEquals($member_info->id, md5($email), 'Tested new user subscription.');
 
-    $this->assertEqual($member_info->merge_fields->EMAIL, $email);
-    $this->assertEqual($member_info->interests->{$interest_ids[0]}, TRUE);
-    $this->assertEqual($member_info->interests->{$interest_ids[1]}, FALSE);
+    $this->assertEquals($member_info->merge_fields->EMAIL, $email);
+    $this->assertEquals($member_info->interests->{$interest_ids[0]}, TRUE);
+    $this->assertEquals($member_info->interests->{$interest_ids[1]}, FALSE);
   }
 
   /**
diff --git a/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php b/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php
index 6ec0b8a..d19e17d 100644
--- a/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php
+++ b/modules/mailchimp_lists/src/Tests/MailchimpListsTest.php
@@ -24,8 +24,8 @@ class MailchimpListsTest extends MailchimpListsTestBase {
 
     $list = mailchimp_get_list($list_id);
 
-    $this->assertEqual($list->id, $list_id);
-    $this->assertEqual($list->name, 'Test List One');
+    $this->assertEquals($list->id, $list_id);
+    $this->assertEquals($list->name, 'Test List One');
   }
 
   /**
@@ -39,13 +39,13 @@ class MailchimpListsTest extends MailchimpListsTestBase {
 
     $lists = mailchimp_get_lists($list_ids);
 
-    $this->assertEqual(count($lists), 2, 'Tested correct list count on retrieval.');
+    $this->assertEquals(count($lists), 2, 'Tested correct list count on retrieval.');
 
-    $this->assertEqual($lists[$list_ids[0]]->id, $list_ids[0]);
-    $this->assertEqual($lists[$list_ids[0]]->name, 'Test List One');
+    $this->assertEquals($lists[$list_ids[0]]->id, $list_ids[0]);
+    $this->assertEquals($lists[$list_ids[0]]->name, 'Test List One');
 
-    $this->assertEqual($lists[$list_ids[1]]->id, $list_ids[1]);
-    $this->assertEqual($lists[$list_ids[1]]->name, 'Test List Two');
+    $this->assertEquals($lists[$list_ids[1]]->id, $list_ids[1]);
+    $this->assertEquals($lists[$list_ids[1]]->name, 'Test List Two');
   }
 
   /**
@@ -58,11 +58,11 @@ class MailchimpListsTest extends MailchimpListsTestBase {
 
     $mergevars = mailchimp_get_mergevars($list_ids);
 
-    $this->assertEqual(count($mergevars[$list_ids[0]]), 3, 'Tested correct mergevar count on retrieval.');
+    $this->assertEquals(count($mergevars[$list_ids[0]]), 3, 'Tested correct mergevar count on retrieval.');
 
-    $this->assertEqual($mergevars[$list_ids[0]][0]->tag, 'EMAIL');
-    $this->assertEqual($mergevars[$list_ids[0]][1]->tag, 'FNAME');
-    $this->assertEqual($mergevars[$list_ids[0]][2]->tag, 'LNAME');
+    $this->assertEquals($mergevars[$list_ids[0]][0]->tag, 'EMAIL');
+    $this->assertEquals($mergevars[$list_ids[0]][1]->tag, 'FNAME');
+    $this->assertEquals($mergevars[$list_ids[0]][2]->tag, 'LNAME');
   }
 
 }
diff --git a/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php b/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php
index 1708d65..33d4dc0 100644
--- a/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php
+++ b/modules/mailchimp_lists/src/Tests/MailchimpListsWebhookTest.php
@@ -24,13 +24,13 @@ class MailchimpListsWebhookTest extends MailchimpListsTestBase {
 
     $webhooks = mailchimp_webhook_get($list_id);
 
-    $this->assertEqual($webhooks[0]->list_id, $list_id);
-    $this->assertEqual($webhooks[0]->id, '37b9c73a88');
-    $this->assertEqual($webhooks[0]->url, 'http://example.org');
-    $this->assertEqual($webhooks[0]->events->subscribe, TRUE);
-    $this->assertEqual($webhooks[0]->events->unsubscribe, FALSE);
-    $this->assertEqual($webhooks[0]->sources->user, TRUE);
-    $this->assertEqual($webhooks[0]->sources->api, FALSE);
+    $this->assertEquals($webhooks[0]->list_id, $list_id);
+    $this->assertEquals($webhooks[0]->id, '37b9c73a88');
+    $this->assertEquals($webhooks[0]->url, 'http://example.org');
+    $this->assertEquals($webhooks[0]->events->subscribe, TRUE);
+    $this->assertEquals($webhooks[0]->events->unsubscribe, FALSE);
+    $this->assertEquals($webhooks[0]->sources->user, TRUE);
+    $this->assertEquals($webhooks[0]->sources->api, FALSE);
   }
 
   /**
@@ -50,7 +50,7 @@ class MailchimpListsWebhookTest extends MailchimpListsTestBase {
 
     $webhook_id = mailchimp_webhook_add($list_id, $url, $events, $sources);
 
-    $this->assertEqual($webhook_id, 'ab24521a00');
+    $this->assertEquals($webhook_id, 'ab24521a00');
   }
 
   /**
diff --git a/modules/mailchimp_signup/mailchimp_signup.module b/modules/mailchimp_signup/mailchimp_signup.module
index b451fa4..e04dead 100644
--- a/modules/mailchimp_signup/mailchimp_signup.module
+++ b/modules/mailchimp_signup/mailchimp_signup.module
@@ -17,7 +17,7 @@ define('MAILCHIMP_SIGNUP_BOTH', 3);
  * @param int $signup_id
  *   The ID of the MailchimpSignup entity to load.
  *
- * @return \Drupal\mailchimp_signup\Entity\MailchimpSignup
+ * @return MailchimpSignup
  *   The MailchimpSignup entity.
  */
 function mailchimp_signup_load($signup_id) {
@@ -32,7 +32,7 @@ function mailchimp_signup_load($signup_id) {
  * @param bool $reset
  *   TRUE to reset cache when loading MailchimpSignup entities.
  *
- * @return \Drupal\mailchimp_signup\Entity\MailchimpSignup[]
+ * @return MailchimpSignup[]
  *   Array of MailchimpSignup entities.
  */
 function mailchimp_signup_load_multiple(array $signup_ids = [], $reset = FALSE) {
diff --git a/modules/mailchimp_signup/src/Controller/MailchimpSignupController.php b/modules/mailchimp_signup/src/Controller/MailchimpSignupController.php
index 140c773..47cdc5e 100644
--- a/modules/mailchimp_signup/src/Controller/MailchimpSignupController.php
+++ b/modules/mailchimp_signup/src/Controller/MailchimpSignupController.php
@@ -16,23 +16,23 @@ class MailchimpSignupController extends ControllerBase {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The form builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * MailchimpSignupController constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
    */
   public function __construct(MessengerInterface $messenger, FormBuilderInterface $form_builder) {
diff --git a/modules/mailchimp_signup/src/Form/MailchimpSignupDeleteForm.php b/modules/mailchimp_signup/src/Form/MailchimpSignupDeleteForm.php
index 722af7b..3071769 100644
--- a/modules/mailchimp_signup/src/Form/MailchimpSignupDeleteForm.php
+++ b/modules/mailchimp_signup/src/Form/MailchimpSignupDeleteForm.php
@@ -19,23 +19,23 @@ class MailchimpSignupDeleteForm extends EntityConfirmFormBase {
   /**
    * The router builder service.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routerBuilder;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * MailchimpSignupDeleteForm constructor.
    *
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $router_builder
+   * @param RouteBuilderInterface $router_builder
    *   The router builder service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(RouteBuilderInterface $router_builder, MessengerInterface $messenger) {
diff --git a/modules/mailchimp_signup/src/Form/MailchimpSignupForm.php b/modules/mailchimp_signup/src/Form/MailchimpSignupForm.php
index feaacfc..3aaae75 100644
--- a/modules/mailchimp_signup/src/Form/MailchimpSignupForm.php
+++ b/modules/mailchimp_signup/src/Form/MailchimpSignupForm.php
@@ -27,14 +27,14 @@ class MailchimpSignupForm extends EntityForm {
   /**
    * The router builder service.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected $routerBuilder;
 
   /**
    * Constructs a MailchimpSignupForm object.
    *
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $router_builder
+   * @param RouteBuilderInterface $router_builder
    *   The router builder service.
    */
   public function __construct(RouteBuilderInterface $router_builder) {
diff --git a/modules/mailchimp_signup/src/Form/MailchimpSignupPageForm.php b/modules/mailchimp_signup/src/Form/MailchimpSignupPageForm.php
index d96ad67..0126cda 100644
--- a/modules/mailchimp_signup/src/Form/MailchimpSignupPageForm.php
+++ b/modules/mailchimp_signup/src/Form/MailchimpSignupPageForm.php
@@ -21,14 +21,14 @@ class MailchimpSignupPageForm extends FormBase {
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * MailchimpSignupPageForm constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(MessengerInterface $messenger) {
@@ -47,7 +47,7 @@ class MailchimpSignupPageForm extends FormBase {
   /**
    * The MailchimpSignup entity used to build this form.
    *
-   * @var \Drupal\mailchimp_signup\Entity\MailchimpSignup
+   * @var MailchimpSignup
    */
   private $signup = NULL;
 
@@ -71,7 +71,7 @@ class MailchimpSignupPageForm extends FormBase {
   /**
    * Sets the signup service.
    *
-   * @param \Drupal\mailchimp_signup\Entity\MailchimpSignup $signup
+   * @param MailchimpSignup $signup
    *   THe signup service.
    */
   public function setSignup(MailchimpSignup $signup) {
@@ -383,10 +383,10 @@ class MailchimpSignupPageForm extends FormBase {
    *
    * @param array $form
    *   The form itself.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   A ajax response.
    */
   public function ajaxSubmit(array $form, FormStateInterface $form_state) {
diff --git a/modules/mailchimp_signup/src/Plugin/Block/MailchimpSignupSubscribeBlock.php b/modules/mailchimp_signup/src/Plugin/Block/MailchimpSignupSubscribeBlock.php
index 1798344..f8cccff 100644
--- a/modules/mailchimp_signup/src/Plugin/Block/MailchimpSignupSubscribeBlock.php
+++ b/modules/mailchimp_signup/src/Plugin/Block/MailchimpSignupSubscribeBlock.php
@@ -33,14 +33,14 @@ class MailchimpSignupSubscribeBlock extends BlockBase implements ContainerFactor
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The Form Builder service.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
@@ -53,9 +53,9 @@ class MailchimpSignupSubscribeBlock extends BlockBase implements ContainerFactor
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, MessengerInterface $messenger, FormBuilderInterface $form_builder) {
@@ -99,7 +99,7 @@ class MailchimpSignupSubscribeBlock extends BlockBase implements ContainerFactor
   /**
    * Get the ID of the form.
    *
-   * @param \Drupal\mailchimp_signup\Entity\MailchimpSignup $entity
+   * @param MailchimpSignup $entity
    *   An instance of the SignUp entity.
    *
    * @return string
diff --git a/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php b/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php
index a8ead52..ac8a5a4 100644
--- a/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php
+++ b/modules/mailchimp_signup/src/Plugin/Field/FieldFormatter/MailchimpSignupFormFormatter.php
@@ -46,7 +46,7 @@ class MailchimpSignupFormFormatter extends EntityReferenceFormatterBase {
 
       $messenger = \Drupal::messenger();
 
-      $form = new \Drupal\mailchimp_signup\Form\MailchimpSignupPageForm($messenger);
+      $form = new MailchimpSignupPageForm($messenger);
 
       $form->setFormID($this->getFormId($signup));
       $form->setSignup($signup);
@@ -60,7 +60,7 @@ class MailchimpSignupFormFormatter extends EntityReferenceFormatterBase {
   /**
    * Get the ID of the form.
    *
-   * @param \Drupal\mailchimp_signup\Entity\MailchimpSignup $entity
+   * @param MailchimpSignup $entity
    *   An instance of the SignUp entity.
    *
    * @return string
diff --git a/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php b/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php
index 20a0164..9f2141d 100644
--- a/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php
+++ b/modules/mailchimp_signup/tests/src/Functional/MailchimpSignupFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\mailchimp_signup\Functional;
 
+use Drupal\Core\Block\BlockManager;
 use Drupal\Tests\mailchimp\Functional\FunctionalMailchimpTestBase;
 use Drupal\user\Entity\Role;
 
@@ -20,7 +21,7 @@ class MailchimpSignupFormTest extends FunctionalMailchimpTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $rid = $this->adminUser->getRoles()[1];
@@ -33,20 +34,20 @@ class MailchimpSignupFormTest extends FunctionalMailchimpTestBase {
   public function testSignUpForm() {
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     // This implicitly tests the _mailchimp_configuration_access_check check.
     \Drupal::configFactory()->getEditable('mailchimp.settings')
       ->set('api_key', 'TEST_KEY')
       ->set('test_mode', TRUE)
       ->save();
     $this->drupalGet('/admin/config/services/mailchimp/signup');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Create a signup form.
     $this->drupalGet('/admin/config/services/mailchimp/signup/add');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->submitForm([
       'title' => 'My signup form',
       'id' => 'my_signup_form',
@@ -59,37 +60,55 @@ class MailchimpSignupFormTest extends FunctionalMailchimpTestBase {
       'settings[destination]' => 'home',
       'mc_lists[57afe96172]' => TRUE,
     ], 'Save');
-    $this->assertUrl('/admin/config/services/mailchimp/signup');
-    $this->assertText('My signup form');
+    $this->assertSession()->addressEquals('/admin/config/services/mailchimp/signup');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('My signup form');
     // Visit/submit the signup form.
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/newsletter/signup');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $rid = $this->lowUser->getRoles()[0];
     $this->grantPermissions(Role::load($rid), ['access mailchimp signup pages']);
     $this->drupalGet('/newsletter/signup');
-    $this->assertResponse(200);
-    $this->assertText('My signup form');
+    $this->assertSession()->statusCodeEquals(200);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('My signup form');
     $this->submitForm([
       'mergevars[EMAIL]' => 'admin@example.com',
     ], 'Sign up');
-    $this->assertText('You have signed up');
-    $this->assertUrl('/home');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('You have signed up');
+    $this->assertSession()->addressEquals('/home');
 
-    /** @var \Drupal\Core\Block\BlockManager $manager */
+    /** @var BlockManager $manager */
     $manager = \Drupal::service('plugin.manager.block');
     $manager->clearCachedDefinitions();
 
     // Test the block.
-    $this->assertNoText('My signup block');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains('My signup block');
     $this->drupalPlaceBlock('mailchimp_signup_subscribe_block:my_signup_form', ['label' => 'My signup block']);
     $this->drupalGet('/foo');
-    $this->assertText('My signup block');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('My signup block');
     $this->submitForm([
       'mergevars[EMAIL]' => 'admin@example.com',
     ], 'Sign up');
-    $this->assertText('You have signed up');
-    $this->assertUrl('/home');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('You have signed up');
+    $this->assertSession()->addressEquals('/home');
   }
 
 }
diff --git a/src/Access/MailchimpConfigurationAccessCheck.php b/src/Access/MailchimpConfigurationAccessCheck.php
index 568cabf..e8c80e3 100644
--- a/src/Access/MailchimpConfigurationAccessCheck.php
+++ b/src/Access/MailchimpConfigurationAccessCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\mailchimp\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -16,10 +17,10 @@ class MailchimpConfigurationAccessCheck implements AccessInterface {
    *
    * Ensures a Mailchimp API key has been provided.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $account) {
diff --git a/src/Controller/MailchimpWebhookController.php b/src/Controller/MailchimpWebhookController.php
index 8696997..a7f1bd9 100644
--- a/src/Controller/MailchimpWebhookController.php
+++ b/src/Controller/MailchimpWebhookController.php
@@ -16,23 +16,23 @@ class MailchimpWebhookController extends ControllerBase {
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
    * Constructs a MailchimpWebhookController.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Module handler.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(ModuleHandlerInterface $moduleHandler, LoggerInterface $logger) {
diff --git a/tests/src/Functional/FunctionalMailchimpTestBase.php b/tests/src/Functional/FunctionalMailchimpTestBase.php
index 91da3c1..e7ee772 100644
--- a/tests/src/Functional/FunctionalMailchimpTestBase.php
+++ b/tests/src/Functional/FunctionalMailchimpTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\mailchimp\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\mailchimp_test\MailchimpConfigOverrider;
 use Drupal\Tests\BrowserTestBase;
 
@@ -56,21 +57,21 @@ abstract class FunctionalMailchimpTestBase extends BrowserTestBase {
   /**
    * A user that can administrate Mailchimp.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $adminUser;
 
   /**
    * An authenticated user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $lowUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalPlaceBlock('page_title_block');
diff --git a/tests/src/Functional/MailchimpAPITest.php b/tests/src/Functional/MailchimpAPITest.php
index 2ad5526..9821ace 100644
--- a/tests/src/Functional/MailchimpAPITest.php
+++ b/tests/src/Functional/MailchimpAPITest.php
@@ -17,7 +17,7 @@ class MailchimpAPITest extends FunctionalMailchimpTestBase {
 
     $this->assertNotNull($mailchimp_api);
 
-    $this->assertEqual(get_class($mailchimp_api), 'Mailchimp\Tests\Mailchimp');
+    $this->assertEquals(get_class($mailchimp_api), 'Mailchimp\Tests\Mailchimp');
   }
 
 }
diff --git a/tests/src/Functional/MailchimpAdminSettingsFormTest.php b/tests/src/Functional/MailchimpAdminSettingsFormTest.php
index ef293e0..703e0ec 100644
--- a/tests/src/Functional/MailchimpAdminSettingsFormTest.php
+++ b/tests/src/Functional/MailchimpAdminSettingsFormTest.php
@@ -20,14 +20,17 @@ class MailchimpAdminSettingsFormTest extends FunctionalMailchimpTestBase {
   public function testSettingsForm() {
     $this->drupalLogin($this->lowUser);
     $this->drupalGet('/admin/config/services/mailchimp');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/services/mailchimp');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $this->submitForm([
       'api_key' => 'TEST_KEY',
     ], 'Save configuration');
-    $this->assertText('The configuration options have been saved');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved');
     $this->assertEquals('TEST_KEY', \Drupal::config('mailchimp.settings')->get('api_key'));
   }
 
diff --git a/tests/src/Functional/MailchimpCampaignTestBase.php b/tests/src/Functional/MailchimpCampaignTestBase.php
index 7140162..cf44f9e 100644
--- a/tests/src/Functional/MailchimpCampaignTestBase.php
+++ b/tests/src/Functional/MailchimpCampaignTestBase.php
@@ -24,7 +24,7 @@ abstract class MailchimpCampaignTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     \Drupal::configFactory()->addOverride(new MailchimpCampaignConfigOverrider());
diff --git a/tests/src/Functional/MailchimpListsTestBase.php b/tests/src/Functional/MailchimpListsTestBase.php
index 3aaee1d..99994cc 100644
--- a/tests/src/Functional/MailchimpListsTestBase.php
+++ b/tests/src/Functional/MailchimpListsTestBase.php
@@ -24,7 +24,7 @@ abstract class MailchimpListsTestBase extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     \Drupal::configFactory()->addOverride(new MailchimpListsConfigOverrider());
