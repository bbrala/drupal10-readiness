diff --git a/feature_toggle.module b/feature_toggle.module
index 5725624..f49cb58 100644
--- a/feature_toggle.module
+++ b/feature_toggle.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\feature_toggle\FeatureStatusInterface;
+use Drupal\feature_toggle\Feature;
 /**
  * @file
  * Hook implementations of Feature Toggle module.
@@ -22,11 +24,11 @@ function feature_toggle_theme() {
  */
 function feature_toggle_page_attachments(array &$attachments) {
   $features = \Drupal::service('feature_toggle.feature_manager')->getFeatures();
-  /** @var \Drupal\feature_toggle\FeatureStatusInterface $feature_status */
+  /** @var FeatureStatusInterface $feature_status */
   $feature_status = \Drupal::service('feature_toggle.feature_status');
   $enabled = [];
   foreach ($features as $feature) {
-    /** @var \Drupal\feature_toggle\Feature $feature */
+    /** @var Feature $feature */
     if ($feature_status->getStatus($feature->name())) {
       $enabled[] = $feature->name();
     }
diff --git a/feature_toggle.theme.inc b/feature_toggle.theme.inc
index 366d9fd..c4aeddb 100644
--- a/feature_toggle.theme.inc
+++ b/feature_toggle.theme.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * @file
  * Theme specific functions for Feature Toggle module.
@@ -48,7 +49,7 @@ function template_preprocess_feature_toggle_form(array &$variables) {
  * @param string $key
  *   The feature to process.
  *
- * @return \Drupal\Core\Link|\Drupal\Core\StringTranslation\TranslatableMarkup
+ * @return Link|TranslatableMarkup
  *   The row Delete field value depending on the user and the feature type.
  */
 function feature_toggle_form_delete_link($key) {
diff --git a/src/Event/FeatureUpdateEvent.php b/src/Event/FeatureUpdateEvent.php
index 114aa58..3a2886a 100644
--- a/src/Event/FeatureUpdateEvent.php
+++ b/src/Event/FeatureUpdateEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\feature_toggle\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\feature_toggle\FeatureInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Feature Update Event class.
@@ -13,7 +13,7 @@ class FeatureUpdateEvent extends Event {
   /**
    * The updated feature.
    *
-   * @var \Drupal\feature_toggle\FeatureInterface
+   * @var FeatureInterface
    */
   protected $feature;
 
@@ -27,7 +27,7 @@ class FeatureUpdateEvent extends Event {
   /**
    * FeatureUpdate constructor.
    *
-   * @param \Drupal\feature_toggle\FeatureInterface $feature
+   * @param FeatureInterface $feature
    *   The updated feature.
    * @param bool $status
    *   The new feature status.
@@ -40,7 +40,7 @@ class FeatureUpdateEvent extends Event {
   /**
    * Returns the feature.
    *
-   * @return \Drupal\feature_toggle\FeatureInterface
+   * @return FeatureInterface
    *   The feature triggering the event.
    */
   public function feature() {
diff --git a/src/FeatureManagerInterface.php b/src/FeatureManagerInterface.php
index b145268..86aecad 100644
--- a/src/FeatureManagerInterface.php
+++ b/src/FeatureManagerInterface.php
@@ -24,7 +24,7 @@ interface FeatureManagerInterface {
    * @param string $name
    *   The feature name.
    *
-   * @return \Drupal\feature_toggle\FeatureInterface
+   * @return FeatureInterface
    *   The feature object.
    */
   public function getFeature($name);
@@ -32,7 +32,7 @@ interface FeatureManagerInterface {
   /**
    * Returns the list of features.
    *
-   * @return \Drupal\feature_toggle\FeatureInterface[]
+   * @return FeatureInterface[]
    *   The feature object array.
    */
   public function getFeatures();
@@ -40,7 +40,7 @@ interface FeatureManagerInterface {
   /**
    * Adds a new feature to the system.
    *
-   * @param \Drupal\feature_toggle\FeatureInterface $feature
+   * @param FeatureInterface $feature
    *   The feature object.
    */
   public function addFeature(FeatureInterface $feature);
diff --git a/src/FeatureStatus.php b/src/FeatureStatus.php
index 315c52f..e56ee8d 100644
--- a/src/FeatureStatus.php
+++ b/src/FeatureStatus.php
@@ -19,7 +19,7 @@ class FeatureStatus implements FeatureStatusInterface {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -60,8 +60,8 @@ class FeatureStatus implements FeatureStatusInterface {
    */
   protected function dispatch(FeatureInterface $feature, $status) {
     $event = new FeatureUpdateEvent($feature, $status);
-    $this->eventDispatcher->dispatch(FeatureUpdateEvents::UPDATE, $event);
-    $this->eventDispatcher->dispatch(FeatureUpdateEvents::UPDATE . '.' . $feature->name(), $event);
+    $this->eventDispatcher->dispatch($event, FeatureUpdateEvents::UPDATE);
+    $this->eventDispatcher->dispatch($event, FeatureUpdateEvents::UPDATE . '.' . $feature->name());
   }
 
 }
diff --git a/src/FeatureUtilsTrait.php b/src/FeatureUtilsTrait.php
index 4182840..3bd7bf3 100644
--- a/src/FeatureUtilsTrait.php
+++ b/src/FeatureUtilsTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\feature_toggle;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\State\StateInterface;
 
@@ -13,21 +15,21 @@ trait FeatureUtilsTrait {
   /**
    * Drupal\Core\State\State definition.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The Immutable Config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $immutableConfig;
 
diff --git a/src/Form/FeatureAddForm.php b/src/Form/FeatureAddForm.php
index eaf1855..b990ba7 100644
--- a/src/Form/FeatureAddForm.php
+++ b/src/Form/FeatureAddForm.php
@@ -16,7 +16,7 @@ class FeatureAddForm extends FormBase {
   /**
    * Drupal\Core\State\State definition.
    *
-   * @var \Drupal\feature_toggle\FeatureManagerInterface
+   * @var FeatureManagerInterface
    */
   protected $featureManager;
 
diff --git a/src/Form/FeatureDeleteForm.php b/src/Form/FeatureDeleteForm.php
index b52ece6..983f538 100644
--- a/src/Form/FeatureDeleteForm.php
+++ b/src/Form/FeatureDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feature_toggle\Form;
 
+use Drupal\feature_toggle\FeatureInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,14 +19,14 @@ class FeatureDeleteForm extends ConfirmFormBase {
   /**
    * The feature manager.
    *
-   * @var \Drupal\feature_toggle\FeatureManagerInterface
+   * @var FeatureManagerInterface
    */
   protected $featureManager;
 
   /**
    * The feature to delete.
    *
-   * @var \Drupal\feature_toggle\FeatureInterface
+   * @var FeatureInterface
    */
   protected $feature;
 
@@ -95,12 +96,12 @@ class FeatureDeleteForm extends ConfirmFormBase {
   /**
    * Custom form access checker based on permissions and existing feature name.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
    * @param string $feature_name
    *   The feature name to delete.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result object.
    */
   public function access(AccountInterface $account, $feature_name) {
diff --git a/src/Form/FeatureToggleForm.php b/src/Form/FeatureToggleForm.php
index a0f22df..348c9a9 100644
--- a/src/Form/FeatureToggleForm.php
+++ b/src/Form/FeatureToggleForm.php
@@ -18,14 +18,14 @@ class FeatureToggleForm extends FormBase {
   /**
    * The Feature Toggle Status service.
    *
-   * @var \Drupal\feature_toggle\FeatureStatusInterface
+   * @var FeatureStatusInterface
    */
   protected $featureStatus;
 
   /**
    * The Feature Manager service.
    *
-   * @var \Drupal\feature_toggle\FeatureManagerInterface
+   * @var FeatureManagerInterface
    */
   protected $featureManager;
 
@@ -120,10 +120,10 @@ class FeatureToggleForm extends FormBase {
   /**
    * Custom form access checker based on two permissions.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result object.
    */
   public function access(AccountInterface $account) {
diff --git a/src/Plugin/Condition/FeatureToggle.php b/src/Plugin/Condition/FeatureToggle.php
index 3d42b70..2cd8af9 100644
--- a/src/Plugin/Condition/FeatureToggle.php
+++ b/src/Plugin/Condition/FeatureToggle.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\feature_toggle\Plugin\Condition;
 
+use Drupal\feature_toggle\FeatureStatusInterface;
 use Drupal\Core\Condition\ConditionPluginBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\feature_toggle\FeatureInterface;
@@ -38,7 +39,7 @@ class FeatureToggle extends ConditionPluginBase {
 
     $this->setConfiguration($configuration);
     $features = \Drupal::service('feature_toggle.feature_manager')->getFeatures();
-    /** @var \Drupal\feature_toggle\FeatureStatusInterface $status */
+    /** @var FeatureStatusInterface $status */
     $status = \Drupal::service('feature_toggle.feature_status');
 
     $features_temp = $enabled_temp = [];
diff --git a/tests/src/Functional/FeatureToggleJavascriptTest.php b/tests/src/Functional/FeatureToggleJavascriptTest.php
index a9e4153..cd8ed23 100644
--- a/tests/src/Functional/FeatureToggleJavascriptTest.php
+++ b/tests/src/Functional/FeatureToggleJavascriptTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\feature_toggle\Functional;
 
+use Drupal\Tests\WebAssert;
+use Drupal\feature_toggle\FeatureManagerInterface;
+use Drupal\feature_toggle\FeatureStatusInterface;
 use Drupal\feature_toggle\Feature;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,28 +25,28 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
   /**
    * The web assert object.
    *
-   * @var \Drupal\Tests\WebAssert
+   * @var WebAssert
    */
   protected $assertSession;
 
   /**
    * The feature manager service.
    *
-   * @var \Drupal\feature_toggle\FeatureManagerInterface
+   * @var FeatureManagerInterface
    */
   protected $featureManager;
 
   /**
    * The feature status service.
    *
-   * @var \Drupal\feature_toggle\FeatureStatusInterface
+   * @var FeatureStatusInterface
    */
   protected $featureStatus;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->assertSession = $this->assertSession();
@@ -71,7 +74,7 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $feature) {
-      $this->assertSession->assert(in_array($feature->name(), $feature_toggle_data), 'Variable present');
+      $this->assertTrue(in_array($feature->name(), $feature_toggle_data), 'Variable present');
       // Set features to 0.
       $this->featureStatus->setStatus($feature, FALSE);
     }
@@ -81,7 +84,7 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $key => $feature) {
-      $this->assertSession->assert(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
+      $this->assertTrue(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
       // Enable only even features.
       if ($key % 2 == 0) {
         $this->featureStatus->setStatus($feature, TRUE);
@@ -94,10 +97,10 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
     foreach ($features as $key => $feature) {
       if ($key % 2 == 0) {
-        $this->assertSession->assert(in_array($feature->name(), $feature_toggle_data), 'Variable present');
+        $this->assertTrue(in_array($feature->name(), $feature_toggle_data), 'Variable present');
       }
       else {
-        $this->assertSession->assert(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
+        $this->assertTrue(!in_array($feature->name(), $feature_toggle_data), 'Variable not present');
       }
     }
 
@@ -109,7 +112,7 @@ class FeatureToggleJavascriptTest extends BrowserTestBase {
     $this->drupalGet('');
     $settings = $this->getDrupalSettings();
     $feature_toggle_data = $settings['feature_toggle']['enabled'];
-    $this->assertSession->assert(empty($feature_toggle_data), 'Array is empty');
+    $this->assertTrue(empty($feature_toggle_data), 'Array is empty');
   }
 
 }
diff --git a/tests/src/Functional/FeatureToggleWorkflowTest.php b/tests/src/Functional/FeatureToggleWorkflowTest.php
index 5897197..bd4e431 100644
--- a/tests/src/Functional/FeatureToggleWorkflowTest.php
+++ b/tests/src/Functional/FeatureToggleWorkflowTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\feature_toggle\Functional;
 
+use Drupal\feature_toggle\FeatureManagerInterface;
+use Drupal\Tests\WebAssert;
 use Drupal\feature_toggle\Feature;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,21 +24,21 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
   /**
    * The feature manager service.
    *
-   * @var \Drupal\feature_toggle\FeatureManagerInterface
+   * @var FeatureManagerInterface
    */
   protected $featureManager;
 
   /**
    * The web assert object.
    *
-   * @var \Drupal\Tests\WebAssert
+   * @var WebAssert
    */
   protected $assertSession;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->assertSession = $this->assertSession();
@@ -61,7 +63,8 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
       'edit-name' => $name,
       'edit-label' => $label,
     ];
-    $this->drupalPostForm('admin/config/system/feature_toggle/add', $form_data, t('Save'));
+    $this->drupalGet('admin/config/system/feature_toggle/add');
+    $this->submitForm($form_data, t('Save'));
 
     // New feature created should be shown.
     $this->assertSession->linkByHrefExists('admin/config/system/feature_toggle/' . $name . '/delete');
@@ -72,7 +75,7 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
     $form_data = [
       $name => 1,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));
 
     // Check that checkbox is checked.
     $this->assertSession->checkboxChecked($name);
@@ -81,7 +84,7 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
     $form_data = [
       $name => 0,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));
 
     // Check that checkbox is  not checked.
     $this->assertSession->checkboxNotChecked($name);
@@ -90,7 +93,7 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
     $this->clickLink('Delete');
     $this->assertSession->addressEquals('admin/config/system/feature_toggle/' . $name . '/delete');
     $this->assertSession->pageTextContains('Are you sure you want to delete the feature ' . $label . '?');
-    $this->drupalPostForm(NULL, [], t('Delete'));
+    $this->submitForm([], t('Delete'));
 
     // Confirm that feature has been removed.
     $this->assertSession->linkByHrefNotExists('admin/config/system/feature_toggle/' . $name . '/delete');
@@ -130,7 +133,7 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
     $form_data = [
       $name => 1,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));
 
     // Check that checkbox is checked.
     $this->assertSession->checkboxChecked($name);
@@ -139,7 +142,7 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
     $form_data = [
       $name => 0,
     ];
-    $this->drupalPostForm(NULL, $form_data, t('Save'));
+    $this->submitForm($form_data, t('Save'));
 
     // Check that checkbox is  not checked.
     $this->assertSession->checkboxNotChecked($name);
@@ -151,6 +154,7 @@ class FeatureToggleWorkflowTest extends BrowserTestBase {
 
   /**
    * Tests the custom access checker to delete page.
+   * @doesNotPerformAssertions
    */
   public function testDeleteAccess() {
     $this->drupalGet('admin/config/system/feature_toggle/' . $this->randomMachineName() . '/delete');
diff --git a/tests/src/Kernel/FeatureToggleConditionTest.php b/tests/src/Kernel/FeatureToggleConditionTest.php
index 8b8decd..72dec50 100644
--- a/tests/src/Kernel/FeatureToggleConditionTest.php
+++ b/tests/src/Kernel/FeatureToggleConditionTest.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\Tests\feature_toggle\Kernel;
 
+use Drupal\Core\Condition\ConditionManager;
+use Drupal\feature_toggle\FeatureManagerInterface;
+use Drupal\feature_toggle\FeatureStatusInterface;
+use Drupal\feature_toggle\FeatureInterface;
+use Drupal\Core\Condition\ConditionInterface;
 use Drupal\feature_toggle\Feature;
 use Drupal\KernelTests\KernelTestBase;
 
@@ -15,35 +20,35 @@ class FeatureToggleConditionTest extends KernelTestBase {
   /**
    * The condition plugin manager.
    *
-   * @var \Drupal\Core\Condition\ConditionManager
+   * @var ConditionManager
    */
   protected $conditionManager;
 
   /**
    * The feature manager service.
    *
-   * @var \Drupal\feature_toggle\FeatureManagerInterface
+   * @var FeatureManagerInterface
    */
   protected $featureManager;
 
   /**
    * The feature status service.
    *
-   * @var \Drupal\feature_toggle\FeatureStatusInterface
+   * @var FeatureStatusInterface
    */
   protected $featureStatus;
 
   /**
    * The 1st feature.
    *
-   * @var \Drupal\feature_toggle\FeatureInterface
+   * @var FeatureInterface
    */
   protected $feature1;
 
   /**
    * The 2nd feature.
    *
-   * @var \Drupal\feature_toggle\FeatureInterface
+   * @var FeatureInterface
    */
   protected $feature2;
 
@@ -57,7 +62,7 @@ class FeatureToggleConditionTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->conditionManager = $this->container->get('plugin.manager.condition');
@@ -75,7 +80,7 @@ class FeatureToggleConditionTest extends KernelTestBase {
    * Tests the feature_toggle condition.
    */
   public function testConditions() {
-    /** @var \Drupal\Core\Condition\ConditionInterface $condition */
+    /** @var ConditionInterface $condition */
     $condition = $this->conditionManager->createInstance('feature_toggle')
       ->setConfig('features', [$this->feature1->name() => $this->feature1->name()]);
     $this->assertFalse($condition->execute());
diff --git a/tests/src/Kernel/FeatureToggleEventsTest.php b/tests/src/Kernel/FeatureToggleEventsTest.php
index 0708b18..cfbd299 100644
--- a/tests/src/Kernel/FeatureToggleEventsTest.php
+++ b/tests/src/Kernel/FeatureToggleEventsTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\feature_toggle\Kernel;
 
+use Drupal\Core\State\StateInterface;
+use Drupal\feature_toggle\FeatureManagerInterface;
+use Drupal\feature_toggle\FeatureStatusInterface;
 use Drupal\feature_toggle\Event\FeatureUpdateEvent;
 use Drupal\feature_toggle\Event\FeatureUpdateEvents;
 use Drupal\feature_toggle\Feature;
@@ -25,42 +28,42 @@ class FeatureToggleEventsTest extends KernelTestBase {
   /**
    * State service for recording information received by event listeners.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The feature manager service.
    *
-   * @var \Drupal\feature_toggle\FeatureManagerInterface
+   * @var FeatureManagerInterface
    */
   protected $featureManager;
 
   /**
    * The feature status service.
    *
-   * @var \Drupal\feature_toggle\FeatureStatusInterface
+   * @var FeatureStatusInterface
    */
   protected $featureStatus;
 
   /**
    * The 1st feature.
    *
-   * @var \Drupal\feature_toggle\FeatureInterface
+   * @var FeatureInterface
    */
   protected $feature1;
 
   /**
    * The 2nd feature.
    *
-   * @var \Drupal\feature_toggle\FeatureInterface
+   * @var FeatureInterface
    */
   protected $feature2;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->state = \Drupal::state();
     $this->featureManager = $this->container->get('feature_toggle.feature_manager');
@@ -92,7 +95,7 @@ class FeatureToggleEventsTest extends KernelTestBase {
   /**
    * Generic event subscriber.
    *
-   * @param \Drupal\feature_toggle\Event\FeatureUpdateEvent $event
+   * @param FeatureUpdateEvent $event
    *   The event object.
    * @param string $name
    *   The event name.
@@ -108,7 +111,7 @@ class FeatureToggleEventsTest extends KernelTestBase {
   /**
    * Feature specific event subscriber.
    *
-   * @param \Drupal\feature_toggle\Event\FeatureUpdateEvent $event
+   * @param FeatureUpdateEvent $event
    *   The event object.
    * @param string $name
    *   The event name.
@@ -124,9 +127,9 @@ class FeatureToggleEventsTest extends KernelTestBase {
   /**
    * Asserts Feature Event behavior.
    *
-   * @param \Drupal\feature_toggle\FeatureInterface $modified_feature
+   * @param FeatureInterface $modified_feature
    *   The feature triggeringthe event.
-   * @param \Drupal\feature_toggle\FeatureInterface $other_feature
+   * @param FeatureInterface $other_feature
    *   Other non-modified feature.
    */
   protected function assertEvent(FeatureInterface $modified_feature, FeatureInterface $other_feature) {
