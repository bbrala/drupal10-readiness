modules/contrib/addtocalendar/addtocalendar.module
modules/contrib/addtocalendar/includes/addtocalendar.build.inc
modules/contrib/addtocalendar/includes/addtocalendar.form.inc
modules/contrib/addtocalendar/src/AddToCalendarApiWidget.php
modules/contrib/addtocalendar/src/Plugin/Field/FieldFormatter/AddToCalendar.php
modules/contrib/addtocalendar/src/Plugin/Field/FieldType/AddToCalendarField.php
modules/contrib/addtocalendar/src/Plugin/Field/FieldWidget/AddToCalendarWidgetType.php

4 files with changes
====================

1) modules/contrib/addtocalendar/src/Plugin/Field/FieldFormatter/AddToCalendar.php:28

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager service.
    *
-   * @var \Drupal\addtocalendar\AddToCalendarApiWidget
+   * @var AddToCalendarApiWidget
    */
   protected $addToCalendarApiWidget;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   Defines an interface for entity field definitions.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\addtocalendar\AddToCalendarApiWidget $add_to_calendar_api_widget
+   * @param AddToCalendarApiWidget $add_to_calendar_api_widget
    *   AddToCalendarApi Widget service.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   Token service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, AddToCalendarApiWidget $add_to_calendar_api_widget, Token $token) {
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
@@ @@

       $service->setWidgetValues($config_values);
       $build = $service->generateWidget();
-      $return = render($build);
+      $return = \Drupal::service('renderer')->render($build);
     }
     else {
       $return = $this->fieldDefinition->getSetting('off_label');
@@ @@
         }
         else {
           $value = $entity->get($field)->view(['label' => 'hidden']);
-          $value = strip_tags(render($value));
+          $value = strip_tags(\Drupal::service('renderer')->render($value));
         }
         break;
     }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/addtocalendar/src/AddToCalendarApiWidget.php:14

    ---------- begin diff ----------
@@ @@
    *
    * @var string
    */
-
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
     $build['addtocalendar'] = [
       '#type' => 'html_tag',
       '#tag' => 'span',
-      '#value' => render($build['addtocalendar_button']) . '<var class="atc_event">' . render($build['addtocalendar']) . '</var>',
+      '#value' => \Drupal::service('renderer')->render($build['addtocalendar_button']) . '<var class="atc_event">' . \Drupal::service('renderer')->render($build['addtocalendar']) . '</var>',
       '#attributes' => [
         'class' => [
           'addtocalendar',
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/addtocalendar/includes/addtocalendar.build.inc:97

    ---------- begin diff ----------
@@ @@
               }
               else {
                 $view = $entity->get($field)->view(['label' => 'hidden']);
-                $class_value = strip_tags(render($view));
+                $class_value = strip_tags(\Drupal::service('renderer')->render($view));
               }
               break;
           }
@@ @@
         $build['addtocalendar'][$index] = [
           '#type' => 'html_tag',
           '#tag' => 'span',
-          '#value' => render($build['addtocalendar_button']) . '<var class="atc_event">' .render($build['addtocalendar'][$index]) . '</var>',
+          '#value' => \Drupal::service('renderer')->render($build['addtocalendar_button']) . '<var class="atc_event">' .\Drupal::service('renderer')->render($build['addtocalendar'][$index]) . '</var>',
           '#attributes' => [
             'class' => [
               'addtocalendar',
@@ @@
       if ($multivalued && $settings['addtocalendar_settings']['multiple_value'] == 2) {
         foreach ($variables['items'] as $k => $content) {
           if (isset($variables['items'][$k]['content']['#suffix'])) {
-            $variables['items'][$k]['content']['#suffix'] .= render($build['addtocalendar'][$k]);
+            $variables['items'][$k]['content']['#suffix'] .= \Drupal::service('renderer')->render($build['addtocalendar'][$k]);
           }
           else {
-            $variables['items'][$k]['content']['#suffix'] = render($build['addtocalendar'][$k]);
+            $variables['items'][$k]['content']['#suffix'] = \Drupal::service('renderer')->render($build['addtocalendar'][$k]);
           }
           $variables['#attached']['library'][] = 'addtocalendar/base';
         }
@@ @@
       // Setting #markup for all the date or daterange fields if single value is selected.
       else {
         if (isset($variables['items'][$delta]['content']['#suffix'])) {
-          $variables['items'][$delta]['content']['#suffix'] .= render($build['addtocalendar']);
+          $variables['items'][$delta]['content']['#suffix'] .= \Drupal::service('renderer')->render($build['addtocalendar']);
         }
         else {
-          $variables['items'][$delta]['content']['#suffix'] = render($build['addtocalendar']);
+          $variables['items'][$delta]['content']['#suffix'] = \Drupal::service('renderer')->render($build['addtocalendar']);
         }
         $variables['#attached']['library'][] = 'addtocalendar/base';
       }
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector


4) modules/contrib/addtocalendar/addtocalendar.module:15

    ---------- begin diff ----------
@@ @@
 function addtocalendar_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'help.page.addtocalendar':
-      $output = file_get_contents(drupal_get_path('module', 'addtocalendar') . '/README.md');
+      $output = file_get_contents(\Drupal::service('extension.list.module')->getPath('addtocalendar') . '/README.md');
       return $output;
   }
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

