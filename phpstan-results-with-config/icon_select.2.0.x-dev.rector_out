modules/contrib/icon_select/icon_select.drush.inc
modules/contrib/icon_select/icon_select.module
modules/contrib/icon_select/src/Commands/IconSelectCommands.php
modules/contrib/icon_select/src/Helper/SvgSpriteGenerator.php
modules/contrib/icon_select/src/Plugin/Field/FieldFormatter/IconSelectFormatterDefault.php
modules/contrib/icon_select/src/Plugin/Field/FieldWidget/IconSelectFieldWidgetDefault.php
modules/contrib/icon_select/src/Twig/Extension/IconSelectExtension.php

5 files with changes
====================

1) modules/contrib/icon_select/src/Twig/Extension/IconSelectExtension.php:33

    ---------- begin diff ----------
@@ @@
    *   A render array of an icon.
    */
   public function iconSelectRender($symbol_id, $classes = []) {
-    /** @var \Drupal\Core\Template\Attribute $attributes */
+    /** @var Attribute $attributes */
     $attributes = new Attribute();

     // Prepare classes.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/icon_select/src/Plugin/Field/FieldWidget/IconSelectFieldWidgetDefault.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\icon_select\Plugin\Field\FieldWidget;

+use Drupal\taxonomy\TermInterface;
+use Drupal\taxonomy\Entity\Term;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager) {
@@ @@

     $options = [];

-    /** @var \Drupal\taxonomy\TermInterface $term */
+    /** @var TermInterface $term */
     foreach ($terms as $term) {
       $options[$term->id()] = $term->field_symbol_id->value;
       $form['#terms'][$term->id()] = $term;
@@ @@
         ];

         // Add title.
-        /** @var \Drupal\taxonomy\Entity\Term $term */
+        /** @var Term $term */
         if (!empty($element['#terms'][$key])) {
           $term = $element['#terms'][$key];
           $element[$key]['#field_prefix'] = $term->getName();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/icon_select/src/Plugin/Field/FieldFormatter/IconSelectFormatterDefault.php:122

    ---------- begin diff ----------
@@ @@
     $icons = $items->referencedEntities();

     foreach ($icons as $delta => $icon) {
-      /** @var \Drupal\Core\Template\Attribute $attributes */
+      /** @var Attribute $attributes */
       $attributes = new Attribute();
       if ($this->getSetting('apply_dimensions')) {
         foreach (['width', 'height'] as $attribute_key) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/icon_select/src/Helper/SvgSpriteGenerator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\icon_select\Helper;

+use Drupal\taxonomy\TermStorageInterface;
 use Drupal\Core\File\FileSystemInterface;
 use enshrined\svgSanitize\Sanitizer;

@@ @@
    */
   public static function generateSprites($vocabulary_id) {

-    /** @var \Drupal\taxonomy\TermStorageInterface $term_storage */
+    /** @var TermStorageInterface $term_storage */
     $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
     $terms = $term_storage->loadTree($vocabulary_id, 0, NULL, TRUE);

@@ @@
     $destination = SvgSpriteGenerator::getSpriteDestinationPath();
     $dirname = \Drupal::service('file_system')->dirname($destination);
     \Drupal::service('file_system')->prepareDirectory($dirname, FileSystemInterface::CREATE_DIRECTORY);
-    $file = file_save_data($sprite, $destination, FileSystemInterface::EXISTS_REPLACE);
+    $file = \Drupal::service('file.repository')->writeData($sprite, $destination, FileSystemInterface::EXISTS_REPLACE);

     if ($file) {
       return $file->getFileUri();
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/icon_select/icon_select.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\taxonomy\TermStorageInterface;
 /**
  * @file
  * Basic module file for icon_select module.
@@ @@

   if (file_exists($svg_path)) {
     // Add a random string to disable caching of AJAX request.
-    $full_url = file_url_transform_relative(file_create_url(SvgSpriteGenerator::getSpriteDestinationPath()));
+    $full_url = \Drupal::service('file_url_generator')->generateString(SvgSpriteGenerator::getSpriteDestinationPath());
     $url = $full_url . '?hash=' . \Drupal::state()->get('icon_select_hash');
     $vars['#attached']['drupalSettings']['icon_select']['icon_select_url'] = $url;
   }
@@ @@
  */
 function icon_select_taxonomy_form_validate(&$form, FormStateInterface $form_state) {
   $vocabulary_id = $form_state->getFormObject()->getEntity()->get('vid')->target_id;
-  /** @var \Drupal\taxonomy\TermStorageInterface $term_storage */
+  /** @var TermStorageInterface $term_storage */
   $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
   $terms = $term_storage->loadTree($vocabulary_id, 0, NULL, TRUE);
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

