diff --git a/smtp.install b/smtp.install
index 58f3ccd..4fcf2eb 100644
--- a/smtp.install
+++ b/smtp.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\smtp\ConnectionTester\ConnectionTester;
 /**
  * @file
  * The installation instructions for the SMTP Authentication Support.
@@ -92,7 +93,7 @@ function smtp_requirements(string $phase) {
       }
       else {
         $requirements['smtp_phpmailer']['severity'] = REQUIREMENT_INFO;
-        /** @var \Drupal\smtp\ConnectionTester\ConnectionTester $tester */
+        /** @var ConnectionTester $tester */
         $tester = \Drupal::service('smtp.connection_tester');
         $tester->testConnection();
         $requirements = array_merge($requirements, $tester->hookRequirements($phase));
diff --git a/src/ConnectionTester/ConnectionTester.php b/src/ConnectionTester/ConnectionTester.php
index f5d3dcc..6dfe4d7 100644
--- a/src/ConnectionTester/ConnectionTester.php
+++ b/src/ConnectionTester/ConnectionTester.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\smtp\ConnectionTester;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Config\Config;
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Mail\MailManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -38,45 +41,45 @@ class ConnectionTester {
   /**
    * PHP Mailer Object.
    *
-   * @var \PHPMailer\PHPMailer\PHPMailer
+   * @var PHPMailer
    */
   protected $phpMailer;
 
   /**
    * The Config Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The SMTP Config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $smtpConfig;
 
   /**
    * The smtp logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The SMTP ConnectionTester constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param ConfigFactory $config_factory
+   * @param LoggerInterface $logger
    *   The logger channel.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The Mail manager.
    */
   public function __construct(ConfigFactory $config_factory, LoggerInterface $logger, MailManagerInterface $mail_manager) {
diff --git a/src/Form/SMTPConfigForm.php b/src/Form/SMTPConfigForm.php
index 13cbd6d..72771a4 100644
--- a/src/Form/SMTPConfigForm.php
+++ b/src/Form/SMTPConfigForm.php
@@ -22,52 +22,52 @@ class SMTPConfigForm extends ConfigFormBase {
   /**
    * Drupal messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Email Validator service.
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   protected $emailValidator;
 
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs $messenger and $config_factory objects.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The D8 messenger object.
-   * @param \Drupal\Component\Utility\EmailValidatorInterface $email_validator
+   * @param EmailValidatorInterface $email_validator
    *   The Email Validator Service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Messenger $messenger, EmailValidatorInterface $email_validator, AccountProxyInterface $current_user, MailManagerInterface $mail_manager, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Mail/SMTPMailSystem.php b/src/Plugin/Mail/SMTPMailSystem.php
index 737b0ba..227b8be 100644
--- a/src/Plugin/Mail/SMTPMailSystem.php
+++ b/src/Plugin/Mail/SMTPMailSystem.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\smtp\Plugin\Mail;
 
+use Symfony\Component\Mime\MimeTypesInterface;
+use PHPMailer\PHPMailer\SMTP;
+use PHPMailer\PHPMailer\Exception;
 use Drupal\Component\Utility\EmailValidatorInterface;
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\File\FileSystemInterface;
@@ -15,7 +18,6 @@ use PHPMailer\PHPMailer\PHPMailer;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Session\AccountProxyInterface;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
 
 /**
  * Modify the drupal mail system to use smtp when sending emails.
@@ -38,56 +40,56 @@ class SMTPMailSystem implements MailInterface, ContainerFactoryPluginInterface {
   /**
    * Logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
 
   /**
    * Messenger.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   protected $messenger;
 
   /**
    * Email validator.
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   protected $emailValidator;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The curent user service.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The File System service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The file mime type guesser service.
    *
-   * @var \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+   * @var MimeTypesInterface
    */
   protected $mimeTypeGuesser;
 
   /**
    * The SMTP object, stored between calls when keep alive is enabled.
    *
-   * @var PHPMailer\PHPMailer\SMTP
+   * @var SMTP
    */
   protected $persistentSmtp;
 
@@ -100,19 +102,19 @@ class SMTPMailSystem implements MailInterface, ContainerFactoryPluginInterface {
    *   The plug-in ID.
    * @param mixed $plugin_definition
    *   The plug-in definition.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   The logger object.
-   * @param \Drupal\Core\Messenger\Messenger $messenger
+   * @param Messenger $messenger
    *   The messenger object.
-   * @param \Drupal\Component\Utility\EmailValidatorInterface $emailValidator
+   * @param EmailValidatorInterface $emailValidator
    *   The messenger object.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory object.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
-   * @param \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $mime_type_guesser
+   * @param MimeTypesInterface $mime_type_guesser
    *   The file mime type guesser service.
    */
   public function __construct(array $configuration,
@@ -124,7 +126,7 @@ class SMTPMailSystem implements MailInterface, ContainerFactoryPluginInterface {
                               ConfigFactoryInterface $config_factory,
                               AccountProxyInterface $account,
                               FileSystemInterface $file_system,
-                              MimeTypeGuesserInterface $mime_type_guesser) {
+                              MimeTypesInterface $mime_type_guesser) {
     $this->smtpConfig = $config_factory->get('smtp.settings');
     $this->logger = $logger;
     $this->messenger = $messenger;
@@ -138,7 +140,7 @@ class SMTPMailSystem implements MailInterface, ContainerFactoryPluginInterface {
   /**
    * Creates an instance of the plugin.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container to pull out services used in the plugin.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ -198,7 +200,7 @@ class SMTPMailSystem implements MailInterface, ContainerFactoryPluginInterface {
    * @return mixed
    *   TRUE if the mail was successfully accepted, otherwise FALSE.
    *
-   * @throws \PHPMailer\PHPMailer\Exception
+   * @throws Exception
    *
    * @see drupal_mail()
    */
@@ -595,7 +597,7 @@ class SMTPMailSystem implements MailInterface, ContainerFactoryPluginInterface {
               }
 
               $attachment_new_filename = $this->fileSystem->tempnam('temporary://', 'smtp');
-              $file_path = file_save_data($attachment, $attachment_new_filename, FileSystemInterface::EXISTS_REPLACE);
+              $file_path = \Drupal::service('file.repository')->writeData($attachment, $attachment_new_filename, FileSystemInterface::EXISTS_REPLACE);
               $real_path = $this->fileSystem->realpath($file_path->uri);
 
               if (!$mailer->addStringAttachment(file_get_contents($real_path), $file_name)) {
@@ -870,7 +872,7 @@ class SMTPMailSystem implements MailInterface, ContainerFactoryPluginInterface {
   /**
    * Get (and, if applicable, build) the PHPMailer object.
    *
-   * @return \PHPMailer\PHPMailer\PHPMailer
+   * @return PHPMailer
    */
   protected function getMailer() {
     if ($this->smtpConfig->get('smtp_keepalive')) {
diff --git a/tests/src/Kernel/ConnectionTester/ConnectionTesterTest.php b/tests/src/Kernel/ConnectionTester/ConnectionTesterTest.php
index 2309db0..af6a01f 100644
--- a/tests/src/Kernel/ConnectionTester/ConnectionTesterTest.php
+++ b/tests/src/Kernel/ConnectionTester/ConnectionTesterTest.php
@@ -139,7 +139,7 @@ class ConnectionTesterTest extends KernelTestBase {
    * @param $exception
    *   Exception passed in.
    *
-   * @return \PHPMailer\PHPMailer\PHPMailer|__anonymous@4029
+   * @return PHPMailer|__anonymous @4029
    */
   private function getMockMailer($result, $exception) {
     $class = new class($result, $exception) extends PHPMailer {
diff --git a/tests/src/Unit/Plugin/Mail/SMTPMailSystemTest.php b/tests/src/Unit/Plugin/Mail/SMTPMailSystemTest.php
index ef5f44d..5205598 100644
--- a/tests/src/Unit/Plugin/Mail/SMTPMailSystemTest.php
+++ b/tests/src/Unit/Plugin/Mail/SMTPMailSystemTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\smtp\Unit\Plugin\Mail;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Utility\EmailValidator;
 use Drupal\Component\Utility\EmailValidatorInterface;
 use Drupal\Core\File\FileSystem;
@@ -25,17 +26,18 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  */
 class SMTPMailSystemTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * The email validator.
    *
-   * @var \Drupal\Component\Utility\EmailValidatorInterface
+   * @var EmailValidatorInterface
    */
   protected $emailValidator;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->mockConfigFactory = $this->getConfigFactoryStub([
       'smtp.settings' => [
         'smtp_timeout' => 30,
diff --git a/tests/src/Unit/SMTPConfigFormTest.php b/tests/src/Unit/SMTPConfigFormTest.php
index dfe8454..7f64ab9 100644
--- a/tests/src/Unit/SMTPConfigFormTest.php
+++ b/tests/src/Unit/SMTPConfigFormTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\smtp\Unit;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Component\Utility\EmailValidatorInterface;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -23,10 +24,11 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  */
 class SMTPConfigFormTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * Test setup.
    */
-  public function setup() {
+  public function setup(): void {
     $this->mockConfigFactory = $this->prophesize(ConfigFactoryInterface::class);
     $this->mockConfig = $this->prophesize(Config::class);
     $this->mockConfigFactory->get('smtp.settings')->willReturn($this->mockConfig->reveal());
