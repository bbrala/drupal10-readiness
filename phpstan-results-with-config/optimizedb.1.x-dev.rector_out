modules/contrib/optimizedb/optimizedb.install
modules/contrib/optimizedb/optimizedb.module
modules/contrib/optimizedb/src/Controller/HideNotificationController.php
modules/contrib/optimizedb/src/Form/OptimizedbAdminForm.php
modules/contrib/optimizedb/src/Form/OptimizedbListTablesForm.php
modules/contrib/optimizedb/tests/src/Functional/GeneralTest.php
modules/contrib/optimizedb/tests/src/Functional/HideNotificationTest.php
modules/contrib/optimizedb/tests/src/Functional/ListTablesOperationExecuteTest.php

5 files with changes
====================

1) modules/contrib/optimizedb/tests/src/Functional/ListTablesOperationExecuteTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\optimizedb\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission the settings module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ @@
    * Performing operations on tables.
    */
   public function testListTablesOperationExecute() {
-    $this->drupalPostForm('admin/config/development/optimizedb/list_tables', [], $this->t('Check tables'));
-    $this->assertText($this->t('To execute, you must select at least one table from the list.'));
+    $this->drupalGet('admin/config/development/optimizedb/list_tables');
+    $this->submitForm([], $this->t('Check tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('To execute, you must select at least one table from the list.'));

     // Output all database tables.
     $tables = _optimizedb_tables_list();
@@ @@
     $edit = [];
     // Selected first table in list.
     $edit['tables[' . $table_name . ']'] = $table_name;
+    $this->drupalGet('admin/config/development/optimizedb/list_tables');

-    $this->drupalPostForm('admin/config/development/optimizedb/list_tables', $edit, $this->t('Check tables'));
-    $this->assertText($this->t('The operation completed successfully.'));
+    $this->submitForm($edit, $this->t('Check tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The operation completed successfully.'));
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/optimizedb/tests/src/Functional/HideNotificationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\optimizedb\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission the settings module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ @@
       ->save();

     $this->drupalGet('admin/config/development/optimizedb/hide');
-    $this->assertText($this->t('Alerts are not available.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('Alerts are not available.'));

     $config
       ->set('notify_optimize', TRUE)
@@ @@
       ->save();

     $this->drupalGet('admin/config/development/optimizedb/hide');
-    $this->assertNoText($this->t('Alerts are not available.'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains($this->t('Alerts are not available.'));

     $notify_optimize = $this->config('optimizedb.settings')
       ->get('notify_optimize');
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/optimizedb/tests/src/Functional/GeneralTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\optimizedb\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\Traits\Core\CronRunTrait;
@@ @@
   /**
    * A user with permission the settings module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritDoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->adminUser = $this->drupalCreateUser(['administer optimizedb settings']);
@@ @@
     // Function for output all database tables and update their total size.
     _optimizedb_tables_list();

-    $this->assertNotEqual($this->config('optimizedb.settings')
+    $this->assertNotEquals($this->config('optimizedb.settings')
       ->get('tables_size'), 0);
   }

@@ @@
    * Testing module admin page buttons.
    */
   public function testButtonsExecutingCommands() {
-    $this->drupalPostForm('admin/config/development/optimizedb', [], $this->t('Optimize tables'));
-    $this->assertText($this->t('The operation completed successfully.'));
+    $this->drupalGet('admin/config/development/optimizedb');
+    $this->submitForm([], $this->t('Optimize tables'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The operation completed successfully.'));
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertNotEqualRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/optimizedb/src/Form/OptimizedbListTablesForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The request stack used for testing.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The database connection used.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * Constructs a new FileTransferAuthorizeForm object.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   The request stack.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database service.
    */
   public function __construct(RequestStack $requestStack, Connection $database) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/optimizedb/src/Controller/HideNotificationController.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Controller constructor.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date formatter.
    */
   public function __construct(TimeInterface $time, ConfigFactoryInterface $configFactory, DateFormatterInterface $dateFormatter) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

