diff --git a/mob_queue.drush.inc b/mob_queue.drush.inc
index cf0ee4c..5651b4c 100644
--- a/mob_queue.drush.inc
+++ b/mob_queue.drush.inc
@@ -1,4 +1,5 @@
 <?php
+use Drupal\Core\Session\AnonymousUserSession;
 /**
  * @file
  * Drush commands for Drush Queue Handling.
@@ -60,7 +61,7 @@ function drush_mob_queue_mob_exe_queue($time = 900) {
   // Force the current user to anonymous to ensure consistent permissions on
   // cron runs.
   $accountSwitcher = \Drupal::service('account_switcher');
-  $accountSwitcher->switchTo(new Drupal\Core\Session\AnonymousUserSession());
+  $accountSwitcher->switchTo(new AnonymousUserSession());
 
   // Try to allocate enough time to run all the hook_cron implementations.
   Environment::setTimeLimit($time);
diff --git a/src/Commands/MobQueueCommands.php b/src/Commands/MobQueueCommands.php
index 11b5a84..1ad57bb 100644
--- a/src/Commands/MobQueueCommands.php
+++ b/src/Commands/MobQueueCommands.php
@@ -16,23 +16,23 @@ class MobQueueCommands extends DrushCommands {
   /**
    * Account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
   /**
    * Mob Queue Operator.
    *
-   * @var \Drupal\mob_queue\QueueJobOperator
+   * @var QueueJobOperator
    */
   protected $mobQueueOperator;
 
   /**
    * MobQueueCommands constructor.
    *
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $accountSwitcher
+   * @param AccountSwitcherInterface $accountSwitcher
    *   Account Switcher.
-   * @param \Drupal\mob_queue\QueueJobOperator $mobQueueOperator
+   * @param QueueJobOperator $mobQueueOperator
    *   Mob Queue Operator.
    */
   public function __construct(AccountSwitcherInterface $accountSwitcher, QueueJobOperator $mobQueueOperator) {
diff --git a/src/Form/MobQueueSettings.php b/src/Form/MobQueueSettings.php
index 6ff7d05..cd1b19d 100644
--- a/src/Form/MobQueueSettings.php
+++ b/src/Form/MobQueueSettings.php
@@ -42,7 +42,7 @@ class MobQueueSettings extends ConfigFormBase {
     return ['mob_queue.settings'];
   }
 
-  public function buildForm(array $form, \Drupal\Core\Form\FormStateInterface $form_state) {
+  public function buildForm(array $form, FormStateInterface $form_state) {
     //$queues = \Drupal::moduleHandler()->invokeAll('cron_queue_info');
     $queues = \Drupal::service('mob_queue.operator')->discoverQueueJobs();
     $config = $this->config('mob_queue.settings');
diff --git a/src/QueueJobOperator.php b/src/QueueJobOperator.php
index 68d2fbf..bf89d07 100644
--- a/src/QueueJobOperator.php
+++ b/src/QueueJobOperator.php
@@ -15,33 +15,33 @@ use Drupal\Core\Queue\SuspendQueueException;
 class QueueJobOperator {
 
   /**
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The queue service.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
-   * @var \Drupal\Core\Queue\QueueWorkerManagerInterface
+   * @var QueueWorkerManagerInterface
    */
   protected $queueManager;
 
   /**
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * CronJobDiscovery constructor.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Queue\QueueWorkerManagerInterface $queue_manager
+   * @param QueueWorkerManagerInterface $queue_manager
    *   The queue manager.
    */
   public function __construct(ModuleHandlerInterface $module_handler, QueueFactory $queue_factory, QueueWorkerManagerInterface $queue_manager, ConfigFactoryInterface $config_factory) {
