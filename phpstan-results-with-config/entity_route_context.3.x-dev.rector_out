modules/contrib/entity_route_context/src/ContextProvider/EntityRouteContext.php
modules/contrib/entity_route_context/src/EntityRouteContextRouteHelper.php
modules/contrib/entity_route_context/src/EntityRouteContextRouteHelperInterface.php
modules/contrib/entity_route_context/tests/modules/entity_route_context_block_test/src/Plugin/Block/EntityRouteContextBlockTestBlock.php
modules/contrib/entity_route_context/tests/modules/entity_route_context_block_test/src/Plugin/Condition/EntityRouteContextBlockTestCondition.php
modules/contrib/entity_route_context/tests/src/Kernel/EntityRouteContextTest.php
modules/contrib/entity_route_context/tests/src/Kernel/EntityRouteContextUtilityTest.php
modules/contrib/entity_route_context/tests/src/Unit/EntityRouteContextTest.php

6 files with changes
====================

1) modules/contrib/entity_route_context/tests/src/Unit/EntityRouteContextTest.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * Mock typed data manager.
    *
-   * @var \Drupal\Core\TypedData\TypedDataManagerInterface
+   * @var TypedDataManagerInterface
    */
   protected $typedDataManager;

@@ @@
   /**
    * Mock entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Mock route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * Mock entity type manager.
    *
-   * @var \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface
+   * @var EntityRouteContextRouteHelperInterface
    */
   protected $helper;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/entity_route_context/tests/src/Kernel/EntityRouteContextUtilityTest.php:79

    ---------- begin diff ----------
@@ @@
   /**
    * Get the helper service.
    *
-   * @return \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface
+   * @return EntityRouteContextRouteHelperInterface
    *   The helper service.
    */
   protected function getHelper(): EntityRouteContextRouteHelperInterface {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/entity_route_context/tests/src/Kernel/EntityRouteContextTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\entity_route_context\Kernel;

+use Drupal\Core\Access\AccessResult;
 use Drupal\block\Entity\Block;
 use Drupal\Core\Access\AccessResultForbidden;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
       ],
     ]);

-    /** @var \Drupal\Core\Access\AccessResult $access */
+    /** @var AccessResult $access */
     $access = $block->access('view', NULL, TRUE);
     $this->assertInstanceOf(AccessResultForbidden::class, $access);
     // \Drupal\block\BlockAccessControlHandler::checkAccess will set max age to
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/entity_route_context/src/EntityRouteContextRouteHelperInterface.php:44

    ---------- begin diff ----------
@@ @@
   /**
    * Get the entity type and link template for a route match.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   A route match to get entity type and link template.
    *
    * @return string[]|null
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/entity_route_context/src/EntityRouteContextRouteHelper.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\entity_route_context;

+use Drupal\Core\Routing\RouteProvider;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The route provider to be searched for routes.
    *
-   * @var \Drupal\Core\Routing\RouteProvider
+   * @var RouteProvider
    */
   protected $routeProvider;

@@ @@
   /**
    * The cache bin.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * Constructs a new EntityRouteContextRouteHelper.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $routeProvider
+   * @param RouteProviderInterface $routeProvider
    *   The route provider to be searched for routes.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   The cache bin.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, RouteProviderInterface $routeProvider, CacheBackendInterface $cache) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/entity_route_context/src/ContextProvider/EntityRouteContext.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The route match object.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * Entity route helper.
    *
-   * @var \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface
+   * @var EntityRouteContextRouteHelperInterface
    */
   protected $helper;

@@ @@
   /**
    * Map of route matches to entity keyed by route name.
    *
-   * @var \Drupal\Core\Entity\EntityInterface[]
+   * @var EntityInterface[]
    */
   protected $routeMatchedEntity = [];

@@ @@
   /**
    * Constructs a new EntityRouteContext.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match object.
-   * @param \Drupal\entity_route_context\EntityRouteContextRouteHelperInterface $helper
+   * @param EntityRouteContextRouteHelperInterface $helper
    *   Entity route helper.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, RouteMatchInterface $route_match, EntityRouteContextRouteHelperInterface $helper) {
@@ @@
   /**
    * Determines entity for a route match.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   A route match.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity for the provided route match, or NULL if the route is note an
    *   entity template.
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 6 files have been changed by Rector                                       

