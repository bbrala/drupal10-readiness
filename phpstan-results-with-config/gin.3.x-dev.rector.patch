diff --git a/includes/breadcrumb.theme b/includes/breadcrumb.theme
index 4912fc2..64f0587 100644
--- a/includes/breadcrumb.theme
+++ b/includes/breadcrumb.theme
@@ -91,7 +91,7 @@ function gin_preprocess_breadcrumb(&$variables) {
 /**
  * Helper function to extract the entity for the supplied route.
  *
- * @return null|\Drupal\Core\Entity\ContentEntityInterface
+ * @return null|ContentEntityInterface
  *   Returns the content entity.
  */
 function _gin_get_route_entity() {
diff --git a/includes/form.theme b/includes/form.theme
index a9423c1..332e49e 100644
--- a/includes/form.theme
+++ b/includes/form.theme
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Session\AccountInterface;
 /**
  * @file
  * form.theme
@@ -53,7 +54,7 @@ function gin_form_user_form_alter(&$form, FormStateInterface $form_state) {
     return;
   }
 
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
 
   if ($settings->allowUserOverrides()) {
@@ -65,7 +66,7 @@ function gin_form_user_form_alter(&$form, FormStateInterface $form_state) {
       '#weight' => 90,
     ];
 
-    /** @var \Drupal\Core\Session\AccountInterface $account */
+    /** @var AccountInterface $account */
     $account = $form_state->getBuildInfo()['callback_object']->getEntity();
     $form['gin_theme_settings']['enable_user_settings'] = [
       '#type' => 'checkbox',
@@ -165,7 +166,7 @@ function gin_element_info_alter(&$info) {
  * Implements template_preprocess_HOOK() for text_format_wrapper.
  */
 function gin_preprocess_text_format_wrapper(&$variables) {
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   if ($settings->get('show_description_toggle') && !empty($variables['description'])) {
     $variables['description_display'] = 'invisible';
diff --git a/includes/helper.theme b/includes/helper.theme
index 3085434..8dfe0b3 100644
--- a/includes/helper.theme
+++ b/includes/helper.theme
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Session\AccountInterface;
 /**
  * @file
  * helper.theme
@@ -41,11 +42,11 @@ function _gin_toolbar_radios($element) {
  * Implements helper function _gin_user_form_submit().
  */
 function _gin_user_form_submit(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\Core\Session\AccountInterface $account */
+  /** @var AccountInterface $account */
   $account = $form_state->getBuildInfo()['callback_object']->getEntity();
 
   $enabledUserOverrides = $form_state->getValue('enable_user_settings');
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   if ($enabledUserOverrides) {
     $user_settings = [
diff --git a/includes/html.theme b/includes/html.theme
index c7bb355..7f966db 100644
--- a/includes/html.theme
+++ b/includes/html.theme
@@ -17,7 +17,7 @@ function gin_preprocess_html(&$variables) {
 
   if ($gin_activated) {
     // Get theme settings.
-    /** @var \Drupal\gin\GinSettings $settings */
+    /** @var GinSettings $settings */
     $settings = \Drupal::classResolver(GinSettings::class);
     $toolbar = $settings->get('classic_toolbar');
 
diff --git a/includes/page.theme b/includes/page.theme
index 262463a..ab8196a 100644
--- a/includes/page.theme
+++ b/includes/page.theme
@@ -18,7 +18,7 @@ function gin_preprocess_page(&$variables) {
   $activeThemeName = \Drupal::theme()->getActiveTheme()->getName();
   $variables['active_admin_theme'] = $activeThemeName;
 
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
 
   // Expose Toolbar variant.
diff --git a/includes/settings.theme b/includes/settings.theme
index d22906f..ab402f9 100644
--- a/includes/settings.theme
+++ b/includes/settings.theme
@@ -33,7 +33,7 @@ function gin_form_system_theme_settings_alter(&$form, FormStateInterface $form_s
    * General settings.
    * * //////////////////////////
    */
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
 
   $form['custom_settings'] = [
diff --git a/includes/toolbar.theme b/includes/toolbar.theme
index 6e38686..2838caf 100644
--- a/includes/toolbar.theme
+++ b/includes/toolbar.theme
@@ -35,7 +35,7 @@ function gin_preprocess_menu(&$variables) {
  */
 function gin_preprocess_menu__toolbar__gin(&$variables) {
   // Get theme settings.
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $logo_path = $settings->getDefault('logo.path');
   $logo_default = $settings->getDefault('logo.use_default');
@@ -64,7 +64,7 @@ function gin_preprocess_toolbar(&$variables) {
   ];
 
   // Expose Toolbar variant.
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $variables['toolbar_variant'] = $settings->get('classic_toolbar');
 }
@@ -74,7 +74,7 @@ function gin_preprocess_toolbar(&$variables) {
  */
 function gin_preprocess_toolbar__gin__secondary(&$variables) {
   // Expose Toolbar variant.
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $variables['toolbar_variant'] = $settings->get('classic_toolbar');
 
@@ -108,7 +108,7 @@ function gin_preprocess_toolbar__gin__secondary(&$variables) {
  * Toolbar alter().
  */
 function gin_theme_suggestions_toolbar_alter(array &$suggestions, array $variables) {
-  /** @var \Drupal\gin\GinSettings $settings */
+  /** @var GinSettings $settings */
   $settings = \Drupal::classResolver(GinSettings::class);
   $toolbar = $settings->get('classic_toolbar');
 
diff --git a/src/GinAfterBuild.php b/src/GinAfterBuild.php
index b705d2c..a7f3e36 100644
--- a/src/GinAfterBuild.php
+++ b/src/GinAfterBuild.php
@@ -21,7 +21,7 @@ class GinAfterBuild implements TrustedCallbackInterface {
    */
   public static function overriddenSettingByUser(array $element) {
 
-    /** @var \Drupal\gin\GinSettings $settings */
+    /** @var GinSettings $settings */
     $settings = \Drupal::classResolver(GinSettings::class);
 
     // Check if this is overridden by the logged in user.
diff --git a/src/GinContentFormHelper.php b/src/GinContentFormHelper.php
index 4d3f8d7..826e847 100644
--- a/src/GinContentFormHelper.php
+++ b/src/GinContentFormHelper.php
@@ -21,41 +21,41 @@ class GinContentFormHelper implements ContainerInjectionInterface {
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * The theme manager.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;
 
   /**
    * GinContentFormHelper constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager.
    */
   public function __construct(AccountInterface $current_user, ModuleHandlerInterface $module_handler, RouteMatchInterface $route_match, ThemeManagerInterface $theme_manager) {
@@ -82,7 +82,7 @@ class GinContentFormHelper implements ContainerInjectionInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $form_id
    *   The form id.
@@ -226,7 +226,7 @@ class GinContentFormHelper implements ContainerInjectionInterface {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $form_id
    *   The form id.
diff --git a/src/GinDescriptionToggle.php b/src/GinDescriptionToggle.php
index 14271c1..6884dff 100644
--- a/src/GinDescriptionToggle.php
+++ b/src/GinDescriptionToggle.php
@@ -14,23 +14,23 @@ class GinDescriptionToggle implements ContainerInjectionInterface {
   /**
    * The content form helper class.
    *
-   * @var \Drupal\gin\GinContentFormHelper
+   * @var GinContentFormHelper
    */
   protected $contentFormHelper;
 
   /**
    * The gin theme settings class.
    *
-   * @var \Drupal\gin\GinSettings
+   * @var GinSettings
    */
   protected $ginSettings;
 
   /**
    * GinDescriptionToggle constructor.
    *
-   * @param \Drupal\gin\GinSettings $ginSettings
+   * @param GinSettings $ginSettings
    *   The gin theme settings class.
-   * @param \Drupal\gin\GinContentFormHelper $contentFormHelper
+   * @param GinContentFormHelper $contentFormHelper
    *   The content form helper class.
    */
   public function __construct(GinSettings $ginSettings, GinContentFormHelper $contentFormHelper) {
diff --git a/src/GinSettings.php b/src/GinSettings.php
index 4d40d9a..9fbc77e 100644
--- a/src/GinSettings.php
+++ b/src/GinSettings.php
@@ -20,32 +20,32 @@ class GinSettings implements ContainerInjectionInterface {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Settings constructor.
    *
-   * @param \Drupal\user\UserDataInterface $userData
+   * @param UserDataInterface $userData
    *   The user data service.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory.
    */
   public function __construct(UserDataInterface $userData, AccountInterface $currentUser, ConfigFactoryInterface $configFactory) {
@@ -70,7 +70,7 @@ class GinSettings implements ContainerInjectionInterface {
    *
    * @param string $name
    *   The name of the setting.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    *
    * @return array|bool|mixed|null
@@ -117,7 +117,7 @@ class GinSettings implements ContainerInjectionInterface {
    *
    * @param array $settings
    *   The user specific theme settings.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    */
   public function setAll(array $settings, AccountInterface $account = NULL) {
@@ -133,7 +133,7 @@ class GinSettings implements ContainerInjectionInterface {
   /**
    * Clears all gin settings for the current user.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    */
   public function clear(AccountInterface $account = NULL) {
@@ -157,7 +157,7 @@ class GinSettings implements ContainerInjectionInterface {
   /**
    * Determine if the user enabled overrides.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    *
    * @return bool
@@ -175,7 +175,7 @@ class GinSettings implements ContainerInjectionInterface {
    *
    * @param string $name
    *   Name of the setting to check.
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object. Current user if NULL.
    *
    * @return bool
@@ -268,7 +268,7 @@ class GinSettings implements ContainerInjectionInterface {
   /**
    * Build the settings form for the theme.
    *
-   * @param \Drupal\Core\Session\AccountInterface|null $account
+   * @param AccountInterface|null $account
    *   The account object.
    *
    * @return array
@@ -476,7 +476,7 @@ class GinSettings implements ContainerInjectionInterface {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/GinUserPicture.php b/src/GinUserPicture.php
index 3464b41..44ad6f2 100644
--- a/src/GinUserPicture.php
+++ b/src/GinUserPicture.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\gin;
 
+use Drupal\user\UserInterface;
+use Drupal\image\ImageStyleInterface;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -17,23 +19,23 @@ class GinUserPicture implements ContainerInjectionInterface, TrustedCallbackInte
   /**
    * The currently authenticated user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * GinUserPicture constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(AccountInterface $current_user, EntityTypeManagerInterface $entity_type_manager) {
@@ -56,7 +58,7 @@ class GinUserPicture implements ContainerInjectionInterface, TrustedCallbackInte
    */
   public function build(): array {
 
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = $this->entityTypeManager->getStorage('user')->load($this->currentUser->id());
 
     $build = [
@@ -77,7 +79,7 @@ class GinUserPicture implements ContainerInjectionInterface, TrustedCallbackInte
       ],
     ];
 
-    /** @var \Drupal\image\ImageStyleInterface $style */
+    /** @var ImageStyleInterface $style */
     $style = NULL;
     try {
       $style = $this->entityTypeManager->getStorage('image_style')->load('thumbnail');
