modules/contrib/content_browser/content_browser.install
modules/contrib/content_browser/content_browser.module
modules/contrib/content_browser/content_browser.post_update.php
modules/contrib/content_browser/content_browser.views.inc
modules/contrib/content_browser/src/Plugin/Block/ContentEmbedBlock.php
modules/contrib/content_browser/src/Plugin/views/field/ContentBrowserPreview.php
modules/contrib/content_browser/src/Routing/ContentBrowserRouteSubscriber.php
modules/contrib/content_browser/tests/src/Functional/InstallTest.php

5 files with changes
====================

1) modules/contrib/content_browser/tests/src/Functional/InstallTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\content_browser\Functional;

+use Drupal\Core\Extension\ModuleInstaller;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
     $this->copyConfig($active, $sync);

     // Uninstall Content browser.
-    /** @var \Drupal\Core\Extension\ModuleInstaller $module_installer */
+    /** @var ModuleInstaller $module_installer */
     $module_installer = $this->container->get('module_installer');
     $module_installer->uninstall(['content_browser']);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/content_browser/src/Plugin/views/field/ContentBrowserPreview.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;

@@ @@
    *   The plugin id.
    * @param mixed $plugin_definition
    *   The plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityDisplayRepositoryInterface $entity_display_repository) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/content_browser/src/Plugin/Block/ContentEmbedBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\content_browser\Plugin\Block;

+use Drupal\Core\Entity\EntityDisplayRepository;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@

     $form['selection'] = $this->browserForm($nids);

-    /** @var \Drupal\Core\Entity\EntityDisplayRepository $entity_display_repository */
+    /** @var EntityDisplayRepository $entity_display_repository */
     $entity_display_repository = \Drupal::service('entity_display.repository');
     $view_mode_options = $entity_display_repository->getViewModeOptions('node');

@@ @@
     $bundle_info = \Drupal::service('entity_type.bundle.info')->getBundleInfo('node');

     foreach ($nids as $nid) {
-      /** @var \Drupal\node\Entity\Node $node */
+      /** @var Node $node */
       $node = Node::load($nid);

       $selection['table'][$nid] = [
@@ @@
     $view_builder = \Drupal::entityTypeManager()->getViewBuilder('node');

     foreach ($this->getDefaultNids() as $nid) {
-      /** @var \Drupal\node\Entity\Node $node */
+      /** @var Node $node */
       $node = Node::load($nid);
       if ($node && $node->access('view')) {
         if (isset(static::$recursiveRenderDepth[$nid])) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/content_browser/content_browser.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\Plugin\views\argument\Type;
 /**
  * @file
  * Contains logic for content_browser.
@@ @@
     }
     // Remove types that are contextually disallowed by the View.
     elseif (isset($form['#id']) && $form['#id'] == 'views-exposed-form-content-browser-entity-browser') {
-      /** @var \Drupal\views\ViewExecutable $view */
+      /** @var ViewExecutable $view */
       $view = $form_state->get('view');
       if ($view instanceof ViewExecutable && isset($view->argument['type'])) {
-        /** @var \Drupal\node\Plugin\views\argument\Type $type */
+        /** @var Type $type */
         $type = $view->argument['type'];
         $value = $type->getValue();
         if (!is_null($value) && !$type->isException($value)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) modules/contrib/content_browser/content_browser.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\file\FileInterface;
+use Drupal\Core\Entity\Entity\EntityViewDisplay;
+use Drupal\Core\Config\ConfigFactoryInterface;
 /**
  * @file
  * Defines install routines for Content Browser.
@@ @@
   // Add an icon for Content Browser if we aren't installing from configuration.
   if (!\Drupal::isConfigSyncing()) {
     $data = file_get_contents(dirname(__FILE__) . '/content_browser_icon.png');
-    /** @var \Drupal\file\FileInterface $file */
-    $file = file_save_data($data, 'public://content_browser_icon.png', FileSystemInterface::EXISTS_REPLACE);
+    /** @var FileInterface $file */
+    $file = \Drupal::service('file.repository')->writeData($data, 'public://content_browser_icon.png', FileSystemInterface::EXISTS_REPLACE);
     if ($file) {
       // Set file uuid same as default config.
       $uuid = Yaml::decode(file_get_contents(dirname(__FILE__) . '/config/install/embed.button.content_browser.yml'))['icon_uuid'];
@@ @@

   // Load the selected teaser displays.
   $storage = \Drupal::entityTypeManager()->getStorage('entity_view_display');
-  /** @var \Drupal\Core\Entity\Entity\EntityViewDisplay[] $displays */
+  /** @var EntityViewDisplay[] $displays */
   $displays = $storage->loadMultiple($results);

   // Clone each display and save it.
@@ @@
 function content_browser_uninstall() {
   \Drupal::configFactory()->getEditable('embed.button.content_browser')->delete();
   \Drupal::configFactory()->getEditable('core.entity_view_mode.node.content_browser')->delete();
-  /** @var \Drupal\node\Entity\NodeType[] $types */
+  /** @var NodeType[] $types */
   $types = NodeType::loadMultiple();
   foreach ($types as $type) {
     if ($config = \Drupal::configFactory()->getEditable('core.entity_view_display.node.' . $type->id() . '.content_browser')) {
@@ @@
  * Updates entity browser configuration to remove outdated values.
  */
 function content_browser_update_8001() {
-  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+  /** @var ConfigFactoryInterface $config_factory */
   $config_factory = \Drupal::service('config.factory');
   $list = $config_factory->listAll('entity_browser.browser');

@@ @@
  * Updates the content browser view to contextually filter by allowed bundles.
  */
 function content_browser_update_8002() {
-  /** @var \Drupal\views\Entity\View $view */
+  /** @var View $view */
   if (($view = View::load('content_browser')) && class_exists('Drupal\entity_browser\Plugin\views\argument_default\EntityBrowserWidgetContext')) {
     $display = &$view->getDisplay('default');
     $display['display_options']['arguments']['type'] = [
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

