diff --git a/tests/src/Kernel/TrialRoleTest.php b/tests/src/Kernel/TrialRoleTest.php
index a107982..e365f92 100644
--- a/tests/src/Kernel/TrialRoleTest.php
+++ b/tests/src/Kernel/TrialRoleTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\trial_role\Kernel;
 
+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\CronInterface;
+use Drupal\user\UserInterface;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -14,7 +17,7 @@ class TrialRoleTest extends KernelTestBase {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
@@ -59,11 +62,11 @@ class TrialRoleTest extends KernelTestBase {
     $user->set('created', time() - (3 * (3600 * 24)));
     $user->save();
     // Run cron.
-    /** @var \Drupal\Core\CronInterface $cron */
+    /** @var CronInterface $cron */
     $cron = $this->container->get('cron');
     $cron->run();
     // Re-load the user.
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = $this->entityTypeManager->getStorage('user')->load($user->id());
     $this->assertFalse(in_array('trial', $user->getRoles()));
   }
@@ -71,11 +74,11 @@ class TrialRoleTest extends KernelTestBase {
   /**
    * Helper to create a user and make sure it gets the trial role added.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The newly created and saved and verified user.
    */
   protected function createAndAssertUser() {
-    /** @var \Drupal\user\UserInterface $new_user */
+    /** @var UserInterface $new_user */
     $new_user = $this->entityTypeManager->getStorage('user')
       ->create([
         'status' => 1,
diff --git a/trial_role.module b/trial_role.module
index 1677960..569475f 100644
--- a/trial_role.module
+++ b/trial_role.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\user\UserInterface;
 /**
  * @file
  * Trial role module.
@@ -17,7 +18,7 @@ define('TRIAL_ROLE_LOG_TAG', 'trial_role');
  * @todo Might be possible to do this in a hook that fires only once?
  */
 function trial_role_user_presave(EntityInterface $entity) {
-  /** @var \Drupal\user\UserInterface $entity */
+  /** @var UserInterface $entity */
   if (!$entity->isNew()) {
     return;
   }
@@ -57,7 +58,7 @@ function _trial_role_run_cron() {
   $users = $user_storage->loadMultiple($ids);
 
   foreach ($users as $user) {
-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     // See if they are too old to be trial users.
     if ($user->getCreatedTime() < time() - _trial_role_get_expiration_length()) {
       \Drupal::logger(TRIAL_ROLE_LOG_TAG)
