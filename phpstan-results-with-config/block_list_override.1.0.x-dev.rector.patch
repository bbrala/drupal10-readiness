diff --git a/block_list_override.info.yml b/block_list_override.info.yml
index 10bdd11..6215017 100755
--- a/block_list_override.info.yml
+++ b/block_list_override.info.yml
@@ -1,7 +1,7 @@
 name: "Block List Override"
 description: Remove unnecessary blocks from the block list for better system performance.
 type: module
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.1 || ^10
 dependencies:
   - drupal:block
 configure: block_list_override.settings
diff --git a/src/BlockListOverride.php b/src/BlockListOverride.php
index 7af851a..6ab1133 100644
--- a/src/BlockListOverride.php
+++ b/src/BlockListOverride.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\block_list_override;
 
+use Drupal\layout_builder\Section;
+use Drupal\layout_builder\SectionComponent;
 use Drupal\Core\DependencyInjection\ServiceProviderBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 
@@ -13,7 +15,7 @@ class BlockListOverride extends ServiceProviderBase {
   /**
    * The Entity Type Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -55,7 +57,7 @@ class BlockListOverride extends ServiceProviderBase {
   /**
    * The constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity Type Manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
@@ -107,11 +109,11 @@ class BlockListOverride extends ServiceProviderBase {
         ->loadMultiple() as $entity_view_display) {
 
         // Look for block plugins in each Layout Builder section.
-        /** @var \Drupal\layout_builder\Section $section */
+        /** @var Section $section */
         foreach ($entity_view_display->getThirdPartySetting(
           'layout_builder', 'sections', []) as $section) {
 
-          /** @var \Drupal\layout_builder\SectionComponent $component */
+          /** @var SectionComponent $component */
           foreach ($section->getComponents() as $component) {
             $blocks_in_use[] = $component->getPluginId();
           }
diff --git a/src/Controller/DefaultController.php b/src/Controller/DefaultController.php
index 486408f..5056fe7 100644
--- a/src/Controller/DefaultController.php
+++ b/src/Controller/DefaultController.php
@@ -17,41 +17,41 @@ class DefaultController extends ControllerBase {
   /**
    * Drupal\Core\Block\BlockManagerInterface.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
 
   /**
    * Drupal\Core\Plugin\Context\LazyContextRepository.
    *
-   * @var \Drupal\Core\Plugin\Context\LazyContextRepository
+   * @var LazyContextRepository
    */
   protected $contextRepository;
 
   /**
    * The Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * List service.
    *
-   * @var \Drupal\block_list_override\BlockListOverride
+   * @var BlockListOverride
    */
   protected $listService;
 
   /**
    * Constructs a new DefaultController object.
    *
-   * @param Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *  The Block Manager service.
-   * @param Drupal\Core\Plugin\Context\LazyContextRepository $context_repository
+   * @param LazyContextRepository $context_repository
    *  The Context Repository service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Configuration factory.
-   * @param \Drupal\block_list_override\BlockListOverride $list_service
+   * @param BlockListOverride $list_service
    *   The Block List Override service.
    */
   public function __construct(
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index c17fd52..cc45421 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -16,7 +16,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/src/PluginAlter.php b/src/PluginAlter.php
index 911623c..fb5de36 100644
--- a/src/PluginAlter.php
+++ b/src/PluginAlter.php
@@ -16,32 +16,32 @@ class PluginAlter implements ContainerInjectionInterface {
   /**
    * The Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Entity Type Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * List service.
    *
-   * @var \Drupal\block_list_override\BlockListOverride
+   * @var BlockListOverride
    */
   protected $listService;
 
   /**
    * PluginAlter constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Configuration factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity Type Manager service.
-   * @param \Drupal\block_list_override\BlockListOverride $list_service
+   * @param BlockListOverride $list_service
    *   The Block List Override service.
    */
   protected function __construct(
diff --git a/tests/src/Functional/BlockListOverrideTest.php b/tests/src/Functional/BlockListOverrideTest.php
index b33c4ab..ca850d8 100644
--- a/tests/src/Functional/BlockListOverrideTest.php
+++ b/tests/src/Functional/BlockListOverrideTest.php
@@ -74,7 +74,7 @@ class BlockListOverrideTest extends BrowserTestBase {
   /**
    * Perform initial setup tasks that run before every test method.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->user = $this->DrupalCreateUser([
       'administer site configuration',
@@ -94,7 +94,7 @@ class BlockListOverrideTest extends BrowserTestBase {
     ];
     foreach ($pages as $page) {
       $this->drupalGet($page);
-      $this->assertResponse(200);
+      $this->assertSession()->statusCodeEquals(200);
     }
     $this->drupalLogout();
   }
@@ -109,16 +109,12 @@ class BlockListOverrideTest extends BrowserTestBase {
 
     // Access config page.
     $this->drupalGet('admin/config/block_list_override/settings');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Test the form elements exist and have default values.
     $config = $this->config('block_list_override.settings');
 
     foreach (self::$replace as $field => $opt) {
-      $this->assertFieldByName(
-        $field,
-        $config->get('block_list_override.settings.' . $field),
-        $field . ' field has the default value'
-      );
+      $this->assertSession()->fieldValueEquals($field, $config->get('block_list_override.settings.' . $field));
     }
     // Test form submission.
     $edit = [];
@@ -127,11 +123,11 @@ class BlockListOverrideTest extends BrowserTestBase {
     }
     $edit['system_negate'] = 0;
     $edit['layout_negate'] = 0;
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
-    $this->assertText(
-      'The configuration options have been saved.',
-      'The form was saved correctly.'
-    );
+    $this->submitForm($edit, t('Save configuration'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
     // Test the new values are there.
     $this->drupalGet('admin/config/block_list_override/settings');
     $this->assertSession()->statusCodeEquals(200);
@@ -156,7 +152,10 @@ class BlockListOverrideTest extends BrowserTestBase {
           case $type . '_match':
           case $type . '_prefix':
           case $type . '_regex':
-            $this->assertNoText($opt['hides'], $opt['label'] . ' block was not displayed .');
+            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+            // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+            // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+            $this->assertSession()->pageTextNotContains($opt['hides']);
             break;
 
         }
@@ -180,16 +179,12 @@ class BlockListOverrideTest extends BrowserTestBase {
 
     // Access config page.
     $this->drupalGet('admin/config/block_list_override/settings');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Test the form elements exist and have default values.
     $config = $this->config('block_list_override.settings');
 
     foreach (self::$replace as $field => $opt) {
-      $this->assertFieldByName(
-        $field,
-        $config->get('block_list_override.settings.' . $field),
-        $field . ' field has the default value'
-      );
+      $this->assertSession()->fieldValueEquals($field, $config->get('block_list_override.settings.' . $field));
     }
     // Test form submission.
     $edit = [];
@@ -202,11 +197,11 @@ class BlockListOverrideTest extends BrowserTestBase {
       }
     }
     $edit['system_negate'] = 1;
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
-    $this->assertText(
-      'The configuration options have been saved.',
-      'The form was saved correctly.'
-    );
+    $this->submitForm($edit, t('Save configuration'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     // Test block list results.
     $page = 'admin/config/block_list_override/' . $type . '-list';
@@ -218,7 +213,10 @@ class BlockListOverrideTest extends BrowserTestBase {
         case $type . '_match':
         case $type . '_prefix':
         case $type . '_regex':
-          $this->assertText($opt['hides'], $opt['label'] . ' block was displayed .');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextContains($opt['hides']);
           break;
 
       }
@@ -241,16 +239,12 @@ class BlockListOverrideTest extends BrowserTestBase {
 
     // Access config page.
     $this->drupalGet('admin/config/block_list_override/settings');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     // Test the form elements exist and have default values.
     $config = $this->config('block_list_override.settings');
 
     foreach (self::$replace as $field => $opt) {
-      $this->assertFieldByName(
-        $field,
-        $config->get('block_list_override.settings.' . $field),
-        $field . ' field has the default value'
-      );
+      $this->assertSession()->fieldValueEquals($field, $config->get('block_list_override.settings.' . $field));
     }
     // Test form submission.
     $edit = [];
@@ -263,11 +257,11 @@ class BlockListOverrideTest extends BrowserTestBase {
       }
     }
     $edit['system_negate'] = 1;
-    $this->drupalPostForm(NULL, $edit, t('Save configuration'));
-    $this->assertText(
-      'The configuration options have been saved.',
-      'The form was saved correctly.'
-    );
+    $this->submitForm($edit, t('Save configuration'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
 
     // Test block list results.
     $page = 'admin/config/block_list_override/' . $type . '-list';
@@ -279,7 +273,10 @@ class BlockListOverrideTest extends BrowserTestBase {
         case $type . '_match':
         case $type . '_prefix':
         case $type . '_regex':
-          $this->assertText($opt['hides'], $opt['label'] . ' block was displayed .');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextContains($opt['hides']);
           break;
 
       }
