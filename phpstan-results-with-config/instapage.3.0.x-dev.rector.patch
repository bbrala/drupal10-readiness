diff --git a/instapage.info.yml b/instapage.info.yml
index 856dc33..89100de 100644
--- a/instapage.info.yml
+++ b/instapage.info.yml
@@ -2,8 +2,7 @@ name: Instapage
 type: module
 description: Implements Instapage landing pages as menu callback.
 package: Web services
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: instapage.settings
 libraries:
   - instapage/insta-style
\ No newline at end of file
diff --git a/src/Api.php b/src/Api.php
index ccc3193..1c53e5b 100644
--- a/src/Api.php
+++ b/src/Api.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\instapage;
 
+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Config\ConfigFactory;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -19,39 +21,39 @@ class Api implements ApiInterface {
   /**
    * Http client service.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $client;
 
   /**
    * Settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;
 
   /**
    * Api constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   Http client service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $requestStack
+   * @param RequestStack $requestStack
    *   Request stack service.
    */
   public function __construct(ConfigFactory $config, ClientInterface $client, RequestStack $requestStack) {
diff --git a/src/Controller/FormsAccessCheck.php b/src/Controller/FormsAccessCheck.php
index 068162a..18c26cb 100644
--- a/src/Controller/FormsAccessCheck.php
+++ b/src/Controller/FormsAccessCheck.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\instapage\Controller;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Controller\ControllerBase;
@@ -16,21 +18,21 @@ class FormsAccessCheck extends ControllerBase {
   /**
    * Settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * FormsAccessCheck constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   ConfigFactory service.
    */
   public function __construct(ConfigFactory $config) {
@@ -50,10 +52,10 @@ class FormsAccessCheck extends ControllerBase {
   /**
    * Checks access for given route.
    *
-   * @param \Drupal\Core\Routing\RouteMatch $routeMatch
+   * @param RouteMatch $routeMatch
    *   Current route.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(RouteMatch $routeMatch) {
diff --git a/src/Controller/PageDisplayController.php b/src/Controller/PageDisplayController.php
index 3184fab..063d02c 100644
--- a/src/Controller/PageDisplayController.php
+++ b/src/Controller/PageDisplayController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\instapage\Controller;
 
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Controller\ControllerBase;
 use GuzzleHttp\ClientInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -18,23 +19,23 @@ class PageDisplayController extends ControllerBase {
   /**
    * Http client service.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $httpClient;
 
   /**
    * Current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $request;
 
   /**
    * PageDisplayController constructor.
    *
-   * @param \GuzzleHttp\ClientInterface $client
+   * @param ClientInterface $client
    *   Http client service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Request stack service.
    */
   public function __construct(ClientInterface $client, RequestStack $request) {
@@ -55,7 +56,7 @@ class PageDisplayController extends ControllerBase {
   /**
    * Returns the page HTML.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Page response.
    */
   public function content() {
diff --git a/src/Controller/PageSettingsController.php b/src/Controller/PageSettingsController.php
index bc43f80..4a44cc6 100644
--- a/src/Controller/PageSettingsController.php
+++ b/src/Controller/PageSettingsController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\instapage\Controller;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Link;
@@ -20,30 +21,30 @@ class PageSettingsController extends ControllerBase {
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;
 
   /**
    * Instapage settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * PaseSettingsController constructor.
    *
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory.
    */
   public function __construct(ApiInterface $api, ConfigFactory $config) {
@@ -135,7 +136,7 @@ class PageSettingsController extends ControllerBase {
                   ],
                 ],
               ];
-              $op_links = render($links);
+              $op_links = \Drupal::service('renderer')->render($links);
 
               // The current url alias of the page.
               $path_url = Url::fromUri('internal:/' . $path, ['attributes' => ['target' => '_blank']]);
@@ -166,7 +167,7 @@ class PageSettingsController extends ControllerBase {
 
     // Render the rable.
     $table['#rows'] = $rows;
-    $table_render = render($table);
+    $table_render = \Drupal::service('renderer')->render($table);
 
     $add_new = [
       '#type' => 'link',
@@ -178,7 +179,7 @@ class PageSettingsController extends ControllerBase {
     $add_new['#attributes']['class'][] = 'instapage-add-new';
 
     // Render the 'Add new page' link.
-    $add_new_render = render($add_new);
+    $add_new_render = \Drupal::service('renderer')->render($add_new);
 
     $build['#markup'] = $markup . $add_new_render . $table_render;
     $build['#attached']['library'][] = 'core/drupal.dialog.ajax';
diff --git a/src/Form/PageDeleteForm.php b/src/Form/PageDeleteForm.php
index 6a8d516..89627aa 100644
--- a/src/Form/PageDeleteForm.php
+++ b/src/Form/PageDeleteForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\instapage\Form;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Config\ConfigFactory;
@@ -24,14 +26,14 @@ class PageDeleteForm extends FormBase {
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Module settings config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -45,7 +47,7 @@ class PageDeleteForm extends FormBase {
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;
 
@@ -59,7 +61,7 @@ class PageDeleteForm extends FormBase {
   /**
    * Route builder service.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;
 
@@ -73,13 +75,13 @@ class PageDeleteForm extends FormBase {
   /**
    * PageDeleteForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $routeBuilder
+   * @param RouteBuilder $routeBuilder
    *   Route builder service.
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Request stack service.
    */
   public function __construct(ConfigFactory $config, RouteBuilder $routeBuilder, ApiInterface $api, RequestStack $request) {
@@ -139,10 +141,10 @@ class PageDeleteForm extends FormBase {
    *
    * @param array $form
    *   Form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response.
    */
   public static function closeModal(array $form, FormStateInterface $form_state) {
diff --git a/src/Form/PageEditForm.php b/src/Form/PageEditForm.php
index 543d4ad..89b3a12 100644
--- a/src/Form/PageEditForm.php
+++ b/src/Form/PageEditForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\instapage\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Config\ConfigFactory;
@@ -24,7 +26,7 @@ class PageEditForm extends FormBase {
   /**
    * Module settings config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -38,7 +40,7 @@ class PageEditForm extends FormBase {
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;
 
@@ -52,14 +54,14 @@ class PageEditForm extends FormBase {
   /**
    * Route builder service.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;
 
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
@@ -73,13 +75,13 @@ class PageEditForm extends FormBase {
   /**
    * PageEditForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $routeBuilder
+   * @param RouteBuilder $routeBuilder
    *   Route builder service.
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Request stack service.
    */
   public function __construct(ConfigFactory $config, RouteBuilder $routeBuilder, ApiInterface $api, RequestStack $request) {
@@ -149,10 +151,10 @@ class PageEditForm extends FormBase {
    *
    * @param array $form
    *   Form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response.
    */
   public static function closeModal(array $form, FormStateInterface $form_state) {
diff --git a/src/Form/PageNewForm.php b/src/Form/PageNewForm.php
index 533edc4..ce434f8 100644
--- a/src/Form/PageNewForm.php
+++ b/src/Form/PageNewForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\instapage\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -23,28 +24,28 @@ class PageNewForm extends FormBase {
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;
 
   /**
    * Instapage pages config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Module settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Route builder service.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;
 
@@ -58,11 +59,11 @@ class PageNewForm extends FormBase {
   /**
    * PageNewForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\instapage\ApiInterface $api
+   * @param ApiInterface $api
    *   Instapage api service.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $routeBuilder
+   * @param RouteBuilder $routeBuilder
    *   Route builder service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ApiInterface $api, RouteBuilder $routeBuilder) {
@@ -138,10 +139,10 @@ class PageNewForm extends FormBase {
    *
    * @param array $form
    *   Form structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response.
    */
   public static function closeModal(array $form, FormStateInterface $form_state) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 165d791..fd31cd8 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -19,7 +19,7 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Instapage api service.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;
 
diff --git a/tests/modules/instapage_test/src/Api.php b/tests/modules/instapage_test/src/Api.php
index fc1c260..19a2ef5 100644
--- a/tests/modules/instapage_test/src/Api.php
+++ b/tests/modules/instapage_test/src/Api.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\instapage_test;
 
+use Drupal\Core\Config\Config;
 use Drupal\instapage\ApiInterface;
 use function GuzzleHttp\json_decode;
 use function GuzzleHttp\json_encode;
@@ -22,37 +23,37 @@ class Api implements ApiInterface {
   /**
    * Http client service.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $client;
 
   /**
    * Settings config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Test configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $testConfig;
 
   /**
    * Api constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config
+   * @param ConfigFactory $config
    *   Config factory service.
-   * @param \GuzzleHttp\Client $client
+   * @param Client $client
    *   Http client service.
    */
   public function __construct(ConfigFactory $config, Client $client) {
@@ -65,7 +66,7 @@ class Api implements ApiInterface {
   /**
    * Creates and returns a new instance of the service.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Drupal container service.
    *
    * @return static
diff --git a/tests/src/Functional/PageFormAccessTest.php b/tests/src/Functional/PageFormAccessTest.php
index 29800b3..d3cc0ca 100644
--- a/tests/src/Functional/PageFormAccessTest.php
+++ b/tests/src/Functional/PageFormAccessTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\instapage\Functional;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -15,21 +16,21 @@ class PageFormAccessTest extends BrowserTestBase {
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Testing configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $testingConfig;
 
@@ -49,7 +50,7 @@ class PageFormAccessTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
     $this->settingsConfig = $this->config('instapage.settings');
     $this->pagesConfig = $this->config('instapage.pages');
@@ -135,13 +136,21 @@ class PageFormAccessTest extends BrowserTestBase {
     $this->loginCreateUser(['administer instapage landing pages']);
     if (!empty($this->settingsConfig->get('instapage_user_token'))) {
       $this->drupalGet(Url::fromRoute('instapage.page_new'));
-      $this->assertField('page');
-      $this->assertField('path');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldExists('page');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldExists('path');
     }
     else {
       $this->drupalGet(Url::fromRoute('instapage.page_new'));
-      $this->assertNoField('page');
-      $this->assertNoField('path');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldNotExists('page');
+      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+      // Change assertion to buttonExists() if checking for a button.
+      $this->assertSession()->fieldNotExists('path');
     }
   }
 
diff --git a/tests/src/FunctionalJavascript/PageSettingsControllerTest.php b/tests/src/FunctionalJavascript/PageSettingsControllerTest.php
index 1b30810..fc88096 100644
--- a/tests/src/FunctionalJavascript/PageSettingsControllerTest.php
+++ b/tests/src/FunctionalJavascript/PageSettingsControllerTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\instapage\FunctionalJavascript;
 
+use Drupal\user\UserInterface;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Url;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 
@@ -31,21 +33,21 @@ class PageSettingsControllerTest extends WebDriverTestBase {
   /**
    * The test user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Testing settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $testingConfig;
 
@@ -59,7 +61,7 @@ class PageSettingsControllerTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'administer instapage settings',
diff --git a/tests/src/Kernel/ApiTest.php b/tests/src/Kernel/ApiTest.php
index bc9c652..de8b742 100644
--- a/tests/src/Kernel/ApiTest.php
+++ b/tests/src/Kernel/ApiTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\instapage\Kernel;
 
+use Drupal\instapage\ApiInterface;
+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
 use Drupal\KernelTests\KernelTestBase;
 use GuzzleHttp\Client;
 use GuzzleHttp\Psr7\Response;
@@ -17,28 +20,28 @@ class ApiTest extends KernelTestBase {
   /**
    * Api service variable.
    *
-   * @var \Drupal\instapage\ApiInterface
+   * @var ApiInterface
    */
   protected $api;
 
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;
 
@@ -73,11 +76,11 @@ class ApiTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->settingsConfig = $this->config('instapage.settings');
     $this->pagesConfig = $this->config('instapage.pages');
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->container->set('http_client', $this->mockClient);
     $this->api = $this->container->get('instapage.api');
     $this->token = 'iuaphdsaihdhjsdikbfhdsjbfhskfius744758ogf83bfi3bbfbf88ob3zbfsdf3';
diff --git a/tests/src/Kernel/PageDeleteFormTest.php b/tests/src/Kernel/PageDeleteFormTest.php
index 08567f5..1a63af2 100644
--- a/tests/src/Kernel/PageDeleteFormTest.php
+++ b/tests/src/Kernel/PageDeleteFormTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\instapage\Kernel;
 
+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\PageDeleteForm;
 use Drupal\KernelTests\KernelTestBase;
@@ -22,28 +24,28 @@ class PageDeleteFormTest extends KernelTestBase {
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;
 
   /**
    * Mocked RequestStack service variable.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $mockRequestStack;
 
@@ -79,16 +81,16 @@ class PageDeleteFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
         new Response(200, [], '{"success":true,"error":false,"data":{"accountkeys":["auihldailbdaibd287z738g3vb39b3z9bzigb9gf3gbfi3bf83gf8383gh38g8b3","ajsibdu28orh3obfo3bfo38fb3ozbf3izfb3zbf3zb3zbf3ib3ib3zibf3zibf33","ahsuh2o8hc3gtb3z80f38bz3b3oh8v3biz3bfu83hb3zbvhbu83bvz3bvz3bvb3b","fb3ibf389hf3bfz839hbf3bf3ufb3ubf3bf3bu3bf3bfu3bfuz3bz3bf3bf3f3bf"]},"message":"Found 4 keys"}', '1.1', 'OK'),
         new Response(200, [], '{"success":true,"error":false}', '1.1', 'OK')
       ));
-    $this->mockRequestStack = $this->getMockBuilder(RequestStack::class)->disableOriginalConstructor()->getMock();
+    $this->mockRequestStack = $this->createMock(RequestStack::class);
     $this->mockRequestStack
       ->method('getCurrentRequest')
       ->willReturn(new Request([], [], ['instapage_id' => '234567'], [], []));
diff --git a/tests/src/Kernel/PageEditFormTest.php b/tests/src/Kernel/PageEditFormTest.php
index 96ed1c6..45f2460 100644
--- a/tests/src/Kernel/PageEditFormTest.php
+++ b/tests/src/Kernel/PageEditFormTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\instapage\Kernel;
 
+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
+use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\PageEditForm;
 use Drupal\KernelTests\KernelTestBase;
@@ -22,28 +25,28 @@ class PageEditFormTest extends KernelTestBase {
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;
 
   /**
    * Mocked RequestStack service variable.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $mockRequestStack;
 
@@ -64,7 +67,7 @@ class PageEditFormTest extends KernelTestBase {
   /**
    * Form builder object variable.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
@@ -79,16 +82,16 @@ class PageEditFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
         new Response(200, [], '{"success":true,"error":false,"data":{"accountkeys":["auihldailbdaibd287z738g3vb39b3z9bzigb9gf3gbfi3bf83gf8383gh38g8b3","ajsibdu28orh3obfo3bfo38fb3ozbf3izfb3zbf3zb3zbf3ib3ib3zibf3zibf33","ahsuh2o8hc3gtb3z80f38bz3b3oh8v3biz3bfu83hb3zbvhbu83bvz3bvz3bvb3b","fb3ibf389hf3bfz839hbf3bf3ufb3ubf3bf3bu3bf3bfu3bfuz3bz3bf3bf3f3bf"]},"message":"Found 4 keys"}', '1.1', 'OK'),
         new Response(200, [], '{"success":true,"error":false}', '1.1', 'OK')
       ));
-    $this->mockRequestStack = $this->getMockBuilder(RequestStack::class)->disableOriginalConstructor()->getMock();
+    $this->mockRequestStack = $this->createMock(RequestStack::class);
     $this->mockRequestStack
       ->method('getCurrentRequest')
       ->willReturn(new Request([], [], ['instapage_id' => '234567'], [], []));
diff --git a/tests/src/Kernel/PageNewFormTest.php b/tests/src/Kernel/PageNewFormTest.php
index 3f809c6..d526bcd 100644
--- a/tests/src/Kernel/PageNewFormTest.php
+++ b/tests/src/Kernel/PageNewFormTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\instapage\Kernel;
 
+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
+use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\PageNewForm;
 use Drupal\KernelTests\KernelTestBase;
@@ -20,21 +23,21 @@ class PageNewFormTest extends KernelTestBase {
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Pages configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $pagesConfig;
 
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;
 
@@ -55,7 +58,7 @@ class PageNewFormTest extends KernelTestBase {
   /**
    * Form builder object variable.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
@@ -71,9 +74,9 @@ class PageNewFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->mockClient
       ->method('request')
       ->will($this->onConsecutiveCalls(
diff --git a/tests/src/Kernel/SettingsFormTest.php b/tests/src/Kernel/SettingsFormTest.php
index 97f6e4a..96a37ee 100644
--- a/tests/src/Kernel/SettingsFormTest.php
+++ b/tests/src/Kernel/SettingsFormTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\instapage\Kernel;
 
+use Drupal\Core\Config\Config;
+use GuzzleHttp\ClientInterface;
+use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormState;
 use Drupal\instapage\Form\SettingsForm;
 use Drupal\KernelTests\KernelTestBase;
@@ -20,14 +23,14 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * Settings configuration variable.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $settingsConfig;
 
   /**
    * Mocked Client service variable.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected $mockClient;
 
@@ -55,7 +58,7 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * Form builder object variable.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
@@ -69,9 +72,9 @@ class SettingsFormTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
-    $this->mockClient = $this->getMockBuilder(Client::class)->disableOriginalConstructor()->getMock();
+    $this->mockClient = $this->createMock(Client::class);
     $this->container->set('http_client', $this->mockClient);
     $this->token = 'iuaphdsaihdhjsdikbfhdsjbfhskfius744758ogf83bfi3bbfbf88ob3zbfsdf3';
     $this->email = 'testing@testing.com';
