modules/contrib/classy_paragraphs/classy_paragraphs.module
modules/contrib/classy_paragraphs/src/ClassyParagraphsAccessControlHandler.php
modules/contrib/classy_paragraphs/src/ClassyParagraphsStyleInterface.php
modules/contrib/classy_paragraphs/src/ClassyParagraphsStyleListBuilder.php
modules/contrib/classy_paragraphs/src/Entity/ClassyParagraphsStyle.php
modules/contrib/classy_paragraphs/src/Form/ClassyParagraphsStyleDeleteForm.php
modules/contrib/classy_paragraphs/src/Form/ClassyParagraphsStyleForm.php
modules/contrib/classy_paragraphs/src/Plugin/EntityReferenceSelection/ClassyParagraphsSelection.php
modules/contrib/classy_paragraphs/src/Tests/ClassyParagraphsTest.php

3 files with changes
====================

1) modules/contrib/classy_paragraphs/src/Tests/ClassyParagraphsTest.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $admin_user = $this->drupalCreateUser(['access content',
@@ @@
    */
   public function testStyleConfigurationPage() {
     $this->drupalGet('admin/structure/classy_paragraphs_style');
-    $this->assertText('Classy paragraphs style');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Classy paragraphs style');
   }

   /**
@@ @@
   public function testClassyParagraphsTestModule() {
     // Check the test text paragraph type.
     $this->drupalGet('admin/structure/paragraphs_type');
-    $this->assertText('Text (CP Test)');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Text (CP Test)');

     // Check the test content type type.
     $this->drupalGet('admin/structure/types');
-    $this->assertText('CP Test');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('CP Test');
   }

   /**
@@ @@
   public function testClassyParagraphsCheckSingleStyle() {
     $style = ['cp_test_loud'];
     $style_css = 'loud-background';
-    /** @var \Drupal\node\Entity\Node $node */
+    /** @var Node $node */
     list ($node) = $this->createNodeWithParagraph($style);

     $this->drupalGet('node/' . $node->id());
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/classy_paragraphs/src/Form/ClassyParagraphsStyleForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\classy_paragraphs\Form;

+use Drupal\classy_paragraphs\Entity\ClassyParagraphsStyle;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);

-    /** @var \Drupal\classy_paragraphs\Entity\ClassyParagraphsStyle $style */
+    /** @var ClassyParagraphsStyle $style */
     $style = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/classy_paragraphs/classy_paragraphs.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\field\Entity\FieldStorageConfig;
 /**
  * @file
  * Contains classy_paragraphs.module.
@@ @@
   $fields = $entity->getFieldDefinitions();
   foreach($fields as $field) {
     if ($field instanceof FieldConfigInterface) {
-      /** @var Drupal\field\Entity\FieldStorageConfig $field_storage */
+      /** @var FieldStorageConfig $field_storage */
       $field_storage = $field->getFieldStorageDefinition();

       $target = $field_storage->getSetting('target_type');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

