diff --git a/modules/preview_site_s3/src/Plugin/PreviewSite/Deploy/S3.php b/modules/preview_site_s3/src/Plugin/PreviewSite/Deploy/S3.php
index 0d4e06a..9eaa866 100644
--- a/modules/preview_site_s3/src/Plugin/PreviewSite/Deploy/S3.php
+++ b/modules/preview_site_s3/src/Plugin/PreviewSite/Deploy/S3.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site_s3\Plugin\PreviewSite\Deploy;
 
+use Drupal\Core\Utility\Token;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\file\FileInterface;
@@ -26,7 +27,7 @@ class S3 extends DeployPluginBase implements ContainerFactoryPluginInterface {
   /**
    * Token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
@@ -217,7 +218,7 @@ class S3 extends DeployPluginBase implements ContainerFactoryPluginInterface {
   /**
    * Deletes items from S3.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Items to delete from.
    * @param bool $with_log
    *   TRUE to log operations. If the build is itself being deleted, pass FALSE.
diff --git a/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php b/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php
index a6e9bc0..5da86a5 100644
--- a/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php
+++ b/modules/preview_site_s3/tests/src/Kernel/S3DeployPluginTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\preview_site_s3\Kernel;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Aws\S3\S3Client;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\preview_site\Entity\PreviewSiteBuild;
@@ -19,6 +20,7 @@ use Prophecy\Argument;
  */
 class S3DeployPluginTest extends PreviewSiteKernelTestBase {
 
+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
diff --git a/preview_site.module b/preview_site.module
index 05ccae8..fe13ce2 100644
--- a/preview_site.module
+++ b/preview_site.module
@@ -47,7 +47,7 @@ function preview_site_entity_access(EntityInterface $entity, $operation, Account
   if (($build = PreviewSiteBuilder::factory()->getRunningBuild()) && $generate = $build->getGeneratePlugin()) {
     // We set the cache max age to be zero here so this doesn't end up being
     // cached for normal operations.
-    /** @var \Drupal\preview_site\Generate\GeneratePluginInterface $generate */
+    /** @var GeneratePluginInterface $generate */
     return $generate->entityAccess($build, $entity, $account, \Drupal::entityTypeManager())->addCacheContexts(['preview_site'])->setCacheMaxAge(0);
   }
   return new AccessResultNeutral();
diff --git a/src/Annotation/PreviewSiteDeploy.php b/src/Annotation/PreviewSiteDeploy.php
index 6cea545..8675bc3 100644
--- a/src/Annotation/PreviewSiteDeploy.php
+++ b/src/Annotation/PreviewSiteDeploy.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -37,7 +38,7 @@ class PreviewSiteDeploy extends Plugin {
    *
    * This is used as an administrative summary of what the plugin does.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -46,7 +47,7 @@ class PreviewSiteDeploy extends Plugin {
   /**
    * Additional administrative information about the plugin's behavior.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/PreviewSiteGenerate.php b/src/Annotation/PreviewSiteGenerate.php
index 532da56..cbe5a64 100644
--- a/src/Annotation/PreviewSiteGenerate.php
+++ b/src/Annotation/PreviewSiteGenerate.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -37,7 +38,7 @@ class PreviewSiteGenerate extends Plugin {
    *
    * This is used as an administrative summary of what the plugin does.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -46,7 +47,7 @@ class PreviewSiteGenerate extends Plugin {
   /**
    * Additional administrative information about the plugin's behavior.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Deploy/DeployPluginInterface.php b/src/Deploy/DeployPluginInterface.php
index fdd5178..cbfa72a 100644
--- a/src/Deploy/DeployPluginInterface.php
+++ b/src/Deploy/DeployPluginInterface.php
@@ -14,9 +14,9 @@ interface DeployPluginInterface extends PreviewSitePluginInterface {
   /**
    * Deploys an artifact.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Preview site to build.
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   File to deploy.
    */
   public function deployArtifact(PreviewSiteBuildInterface $build, FileInterface $file) : void;
@@ -24,7 +24,7 @@ interface DeployPluginInterface extends PreviewSitePluginInterface {
   /**
    * Returns the base URI to the deployment.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Preview site build.
    *
    * @return string|null
@@ -35,7 +35,7 @@ interface DeployPluginInterface extends PreviewSitePluginInterface {
   /**
    * Decommissions a preview site build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build being decommissioned.
    */
   public function decommissionPreviewSiteBuild(PreviewSiteBuildInterface $build) : void;
@@ -43,7 +43,7 @@ interface DeployPluginInterface extends PreviewSitePluginInterface {
   /**
    * Deletes a preview site build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build being deleted.
    */
   public function deletePreviewSiteBuild(PreviewSiteBuildInterface $build) : void;
@@ -51,7 +51,7 @@ interface DeployPluginInterface extends PreviewSitePluginInterface {
   /**
    * Completes a deployment.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    */
   public function completeDeployment(PreviewSiteBuildInterface $build): void;
diff --git a/src/Deploy/DeployPluginManager.php b/src/Deploy/DeployPluginManager.php
index c87fc96..98fca6f 100644
--- a/src/Deploy/DeployPluginManager.php
+++ b/src/Deploy/DeployPluginManager.php
@@ -18,9 +18,9 @@ class DeployPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Entity/PreviewSiteBuildInterface.php b/src/Entity/PreviewSiteBuildInterface.php
index c50a4c8..9a48e04 100644
--- a/src/Entity/PreviewSiteBuildInterface.php
+++ b/src/Entity/PreviewSiteBuildInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Entity;
 
+use Drupal\preview_site\Generate\GenerationInProgressException;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -53,7 +54,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Gets the preview strategy.
    *
-   * @return \Drupal\preview_site\Entity\PreviewStrategyInterface
+   * @return PreviewStrategyInterface
    *   Preview strategy.
    */
   public function getStrategy(): ?PreviewStrategyInterface;
@@ -61,7 +62,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Queues generation.
    *
-   * @param \Drupal\Core\Queue\QueueInterface $queue
+   * @param QueueInterface $queue
    *   Queue to use for generation.
    */
   public function queueGeneration(QueueInterface $queue) : void;
@@ -69,7 +70,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Queues deployment.
    *
-   * @param \Drupal\Core\Queue\QueueInterface $queue
+   * @param QueueInterface $queue
    *   Queue to use for deployment.
    */
   public function queueDeployment(QueueInterface $queue) : void;
@@ -77,7 +78,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Finishes deployment.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State service.
    *
    * @return $this
@@ -95,13 +96,13 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Starts deployment.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State service.
    *
    * @return int[]
    *   Array of file IDs to cleanup before starting the deployment.
    *
-   * @throws \Drupal\preview_site\Generate\GenerationInProgressException
+   * @throws GenerationInProgressException
    *   When an existing deployment is in progress.
    */
   public function startDeployment(StateInterface $state) : array;
@@ -117,7 +118,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Marks deployment as failed.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State service.
    * @param bool $reset
    *   TRUE to reset building state.
@@ -158,7 +159,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Adds an artifact.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   File.
    * @param bool $auto_save
    *   True to auto-save.
@@ -189,7 +190,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Gets the generate plugin for this build.
    *
-   * @return \Drupal\preview_site\Generate\GeneratePluginInterface|null
+   * @return GeneratePluginInterface|null
    *   Generate plugin.
    */
   public function getGeneratePlugin() : ?GeneratePluginInterface;
@@ -216,7 +217,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Gets expiry date.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime|null
+   * @return DrupalDateTime|null
    *   Expiry date.
    */
   public function getExpiryDate() : ?DrupalDateTime;
@@ -229,7 +230,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Gets the deploy plugin for this build.
    *
-   * @return \Drupal\preview_site\Deploy\DeployPluginInterface|null
+   * @return DeployPluginInterface|null
    *   Deploy plugin.
    */
   public function getDeployPlugin() : ?DeployPluginInterface;
@@ -237,7 +238,7 @@ interface PreviewSiteBuildInterface extends ContentEntityInterface, EntityChange
   /**
    * Gets artifacts.
    *
-   * @return \Drupal\file\FileInterface[]|\Generator
+   * @return FileInterface[]|\Generator
    *   Array of files.
    */
   public function getArtifacts() : \Generator;
diff --git a/src/Entity/PreviewStrategy.php b/src/Entity/PreviewStrategy.php
index 83f4f61..5fe6106 100644
--- a/src/Entity/PreviewStrategy.php
+++ b/src/Entity/PreviewStrategy.php
@@ -96,14 +96,14 @@ class PreviewStrategy extends ConfigEntityBundleBase implements PreviewStrategyI
   /**
    * Holds the plugin collection for the deploy plugin.
    *
-   * @var \Drupal\Core\Plugin\DefaultSingleLazyPluginCollection|null
+   * @var DefaultSingleLazyPluginCollection|null
    */
   protected $deployCollection = NULL;
 
   /**
    * Holds the plugin collection for the generate plugin.
    *
-   * @var \Drupal\Core\Plugin\DefaultSingleLazyPluginCollection|null
+   * @var DefaultSingleLazyPluginCollection|null
    */
   protected $generateCollection = NULL;
 
diff --git a/src/Entity/PreviewStrategyInterface.php b/src/Entity/PreviewStrategyInterface.php
index 12492fb..ccf58a1 100644
--- a/src/Entity/PreviewStrategyInterface.php
+++ b/src/Entity/PreviewStrategyInterface.php
@@ -15,7 +15,7 @@ interface PreviewStrategyInterface extends ConfigEntityInterface, EntityWithPlug
   /**
    * Gets the deploy plugin instance.
    *
-   * @return \Drupal\preview_site\Deploy\DeployPluginInterface|null
+   * @return DeployPluginInterface|null
    *   Deploy plugin instance.
    */
   public function getDeployPlugin(): ?DeployPluginInterface;
@@ -23,7 +23,7 @@ interface PreviewStrategyInterface extends ConfigEntityInterface, EntityWithPlug
   /**
    * Gets the generate plugin instance.
    *
-   * @return \Drupal\preview_site\Generate\GeneratePluginInterface|null
+   * @return GeneratePluginInterface|null
    *   Generate plugin instance.
    */
   public function getGeneratePlugin(): ?GeneratePluginInterface;
diff --git a/src/EntityHandlers/ParentNegotiation/ParentNegotiationInterface.php b/src/EntityHandlers/ParentNegotiation/ParentNegotiationInterface.php
index 7510916..068d26b 100644
--- a/src/EntityHandlers/ParentNegotiation/ParentNegotiationInterface.php
+++ b/src/EntityHandlers/ParentNegotiation/ParentNegotiationInterface.php
@@ -12,10 +12,10 @@ interface ParentNegotiationInterface {
   /**
    * Gets the parent entity for a given entity if applicable.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity to get the parent for.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    *   Parent entity or NULL if one does not exist.
    */
   public function getParentEntity(ContentEntityInterface $entity) : ?ContentEntityInterface;
diff --git a/src/EntityHandlers/PreviewSiteBuildListBuilder.php b/src/EntityHandlers/PreviewSiteBuildListBuilder.php
index 5cda2bb..0b30d51 100644
--- a/src/EntityHandlers/PreviewSiteBuildListBuilder.php
+++ b/src/EntityHandlers/PreviewSiteBuildListBuilder.php
@@ -48,7 +48,7 @@ class PreviewSiteBuildListBuilder extends EntityListBuilder {
   /**
    * Gets item links.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    *
    * @return string[]
@@ -69,7 +69,7 @@ class PreviewSiteBuildListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   protected function getDefaultOperations(EntityInterface $entity) {
-    /** @var \Drupal\preview_site\Entity\PreviewSiteBuildInterface $entity */
+    /** @var PreviewSiteBuildInterface $entity */
     $operations = parent::getDefaultOperations($entity);
     if ($entity->hasLinkTemplate('deploy-form')) {
       $operations['deploy'] = [
diff --git a/src/EntityHandlers/PreviewStrategyListBuilder.php b/src/EntityHandlers/PreviewStrategyListBuilder.php
index 1aab821..f3f6b93 100644
--- a/src/EntityHandlers/PreviewStrategyListBuilder.php
+++ b/src/EntityHandlers/PreviewStrategyListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\EntityHandlers;
 
+use Drupal\preview_site\Entity\PreviewStrategyInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 
@@ -28,7 +29,7 @@ class PreviewStrategyListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\preview_site\Entity\PreviewStrategyInterface $entity */
+    /** @var PreviewStrategyInterface $entity */
     return [
       'label' => $entity->toLink(NULL, 'edit-form'),
       'generate' => $entity->getGeneratePlugin()->getTitle(),
diff --git a/src/EventSubscribers/TomeStaticListener.php b/src/EventSubscribers/TomeStaticListener.php
index 8849c81..66cb282 100644
--- a/src/EventSubscribers/TomeStaticListener.php
+++ b/src/EventSubscribers/TomeStaticListener.php
@@ -18,14 +18,14 @@ class TomeStaticListener implements EventSubscriberInterface {
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new TomeStaticListener.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager) {
@@ -42,7 +42,7 @@ class TomeStaticListener implements EventSubscriberInterface {
   /**
    * Event listener for the TomeStaticEvents::FILE_SAVED event.
    *
-   * @param \Drupal\tome_static\Event\FileSavedEvent $event
+   * @param FileSavedEvent $event
    *   Event.
    *
    * @see ::create
@@ -58,7 +58,7 @@ class TomeStaticListener implements EventSubscriberInterface {
    * in that it does access checking on the default revision, instead of the
    * loaded revision.
    *
-   * @param \Drupal\tome_static\Event\PathPlaceholderEvent $event
+   * @param PathPlaceholderEvent $event
    *   The path placeholder event.
    */
   public function replacePathPlaceholder(PathPlaceholderEvent $event) {
diff --git a/src/Form/PreviewSiteBuildDeployForm.php b/src/Form/PreviewSiteBuildDeployForm.php
index 01d4a5a..6bdba7b 100644
--- a/src/Form/PreviewSiteBuildDeployForm.php
+++ b/src/Form/PreviewSiteBuildDeployForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Form;
 
+use Drupal\Core\State\StateInterface;
 use Drupal\Core\Entity\ContentEntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ -21,21 +22,21 @@ class PreviewSiteBuildDeployForm extends ContentEntityConfirmFormBase {
   /**
    * Entity.
    *
-   * @var \Drupal\preview_site\Entity\PreviewSiteBuildInterface
+   * @var PreviewSiteBuildInterface
    */
   protected $entity;
 
   /**
    * Builder.
    *
-   * @var \Drupal\preview_site\PreviewSiteBuilder
+   * @var PreviewSiteBuilder
    */
   protected $builder;
 
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
diff --git a/src/Form/PreviewStrategyForm.php b/src/Form/PreviewStrategyForm.php
index 8e630a4..74f54f5 100644
--- a/src/Form/PreviewStrategyForm.php
+++ b/src/Form/PreviewStrategyForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\preview_site\Form;
 
+use Drupal\preview_site\Generate\GeneratePluginManager;
+use Drupal\preview_site\Deploy\DeployPluginManager;
+use Drupal\preview_site\Entity\PreviewStrategyInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -20,14 +23,14 @@ class PreviewStrategyForm extends EntityForm {
   /**
    * Plugin manager.
    *
-   * @var \Drupal\preview_site\Generate\GeneratePluginManager
+   * @var GeneratePluginManager
    */
   protected $generatePluginManager;
 
   /**
    * Plugin manager.
    *
-   * @var \Drupal\preview_site\Deploy\DeployPluginManager
+   * @var DeployPluginManager
    */
   protected $deployPluginManager;
 
@@ -48,7 +51,7 @@ class PreviewStrategyForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\preview_site\Entity\PreviewStrategyInterface $strategy */
+    /** @var PreviewStrategyInterface $strategy */
     $strategy = $this->entity;
     $form['label'] = [
       '#type' => 'textfield',
@@ -218,7 +221,7 @@ class PreviewStrategyForm extends EntityForm {
    * {@inheritdoc}
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\preview_site\Entity\PreviewStrategyInterface $strategy */
+    /** @var PreviewStrategyInterface $strategy */
     $strategy = $this->entity;
     if (($deploy_plugin = $strategy->getDeployPlugin()) && $deploy_plugin->hasFormClass('configure') && isset($form['deploySettings'])) {
       $subform_state = SubformState::createForSubform($form['deploySettings'], $form, $form_state);
@@ -235,7 +238,7 @@ class PreviewStrategyForm extends EntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\preview_site\Entity\PreviewStrategyInterface $strategy */
+    /** @var PreviewStrategyInterface $strategy */
     $strategy = $this->entity;
     if (($deploy_plugin = $strategy->getDeployPlugin()) && $deploy_plugin->hasFormClass('configure') && isset($form['deploySettings'])) {
       $subform_state = SubformState::createForSubform($form['deploySettings'], $form, $form_state);
diff --git a/src/Generate/FileCollection.php b/src/Generate/FileCollection.php
index 0eb7a05..5fa5b47 100644
--- a/src/Generate/FileCollection.php
+++ b/src/Generate/FileCollection.php
@@ -10,14 +10,14 @@ use Drupal\file\FileInterface;
 class FileCollection implements \IteratorAggregate {
 
   /**
-   * @var \Drupal\file\FileInterface
+   * @var FileInterface
    */
   private $files = [];
 
   /**
    * Constructs a new FileCollection.
    *
-   * @param \Drupal\file\FileInterface $files
+   * @param FileInterface $files
    *   The files in the collection.
    */
   public function __construct(FileInterface ...$files) {
@@ -34,7 +34,7 @@ class FileCollection implements \IteratorAggregate {
   /**
    * Adds a file.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   File to add.
    *
    * @return $this
diff --git a/src/Generate/FileHelper.php b/src/Generate/FileHelper.php
index 67077d7..1ae58d6 100644
--- a/src/Generate/FileHelper.php
+++ b/src/Generate/FileHelper.php
@@ -18,7 +18,7 @@ class FileHelper {
     if (!file_exists($file_path)) {
       throw new CouldNotWriteFileException(sprintf('File: %s does not exist', $file_path));
     }
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = File::create([
       'uri' => $file_path,
       'status' => \FILE_STATUS_PERMANENT,
@@ -31,9 +31,9 @@ class FileHelper {
   /**
    * Gets the file path without the schema.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   File to get file path for.
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build interface.
    *
    * @return string
diff --git a/src/Generate/GeneratePluginInterface.php b/src/Generate/GeneratePluginInterface.php
index 3fe4487..9801123 100644
--- a/src/Generate/GeneratePluginInterface.php
+++ b/src/Generate/GeneratePluginInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Generate;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Database\Query\AlterableInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
@@ -23,16 +24,16 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Generates a build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   The build to generate.
-   * @param \Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem $item
+   * @param EntityReferenceItem $item
    *   The item being built.
    * @param string $base_url
    *   Base URL.
-   * @param \Drupal\Core\Queue\QueueInterface $asset_queue
+   * @param QueueInterface $asset_queue
    *   Asset queue.
    *
-   * @return \Drupal\preview_site\Generate\FileCollection
+   * @return FileCollection
    *   Artifact files generated during the build.
    */
   public function generateBuildForItem(PreviewSiteBuildInterface $build, EntityReferenceItem $item, string $base_url, QueueInterface $asset_queue) : FileCollection;
@@ -40,7 +41,7 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Prepares for generating a build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    * @param string|null $base_url
    *   Base URL.
@@ -50,7 +51,7 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Completes generation of a build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    */
   public function completeBuild(PreviewSiteBuildInterface $build);
@@ -58,16 +59,16 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Allows generate plugins to implement hook_entity_preload.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    * @param array $ids
    *   Entity IDs.
    * @param string $entity_type_id
    *   Entity type ID.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   Array of pre-loaded entities.
    */
   public function entityPreload(PreviewSiteBuildInterface $build, array $ids, string $entity_type_id, EntityTypeManagerInterface $entity_type_manager) : array;
@@ -75,16 +76,16 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Generates a build for an asset path.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   The build to generate.
    * @param string $path
    *   Asset path.
    * @param string $base_url
    *   Base URL.
-   * @param \Drupal\Core\Queue\QueueInterface $asset_queue
+   * @param QueueInterface $asset_queue
    *   Asset queue.
    *
-   * @return \Drupal\preview_site\Generate\FileCollection
+   * @return FileCollection
    *   Artifact files generated during the build.
    */
   public function generateBuildForPath(PreviewSiteBuildInterface $build, string $path, string $base_url, QueueInterface $asset_queue) : FileCollection;
@@ -92,16 +93,16 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Checks 'view' access for an entity being rendered during generation.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build being generated.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity being access checked.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The account checking access. This will typically be an anonymous user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   Access result.
    */
   public function entityAccess(PreviewSiteBuildInterface $build, ContentEntityInterface $entity, AccountInterface $account, EntityTypeManagerInterface $entityTypeManager) : AccessResultInterface;
@@ -109,11 +110,11 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Allows generate plugins to interact with entity-queries.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build being generated.
-   * @param \Drupal\Core\Database\Query\AlterableInterface $query
+   * @param AlterableInterface $query
    *   Query being run.
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   Entity type.
    */
   public function entityQueryAlter(PreviewSiteBuildInterface $build, AlterableInterface $query, EntityTypeInterface $entity_type);
@@ -121,7 +122,7 @@ interface GeneratePluginInterface extends PreviewSitePluginInterface {
   /**
    * Gets artifact base path.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    *
    * @return string
diff --git a/src/Generate/GeneratePluginManager.php b/src/Generate/GeneratePluginManager.php
index 3805c3e..c81f196 100644
--- a/src/Generate/GeneratePluginManager.php
+++ b/src/Generate/GeneratePluginManager.php
@@ -18,9 +18,9 @@ class GeneratePluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/Derivative/PreviewSiteBuildQueueWorkerDeriver.php b/src/Plugin/Derivative/PreviewSiteBuildQueueWorkerDeriver.php
index f7d80c6..b66890b 100644
--- a/src/Plugin/Derivative/PreviewSiteBuildQueueWorkerDeriver.php
+++ b/src/Plugin/Derivative/PreviewSiteBuildQueueWorkerDeriver.php
@@ -16,7 +16,7 @@ class PreviewSiteBuildQueueWorkerDeriver extends DeriverBase implements Containe
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -25,7 +25,7 @@ class PreviewSiteBuildQueueWorkerDeriver extends DeriverBase implements Containe
    *
    * @param string $base_plugin_id
    *   The base plugin ID.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct($base_plugin_id, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/Plugin/PreviewSite/Deploy/PublicFiles.php b/src/Plugin/PreviewSite/Deploy/PublicFiles.php
index 5ac5023..cba894e 100644
--- a/src/Plugin/PreviewSite/Deploy/PublicFiles.php
+++ b/src/Plugin/PreviewSite/Deploy/PublicFiles.php
@@ -4,6 +4,8 @@ declare(strict_types=1);
 
 namespace Drupal\preview_site\Plugin\PreviewSite\Deploy;
 
+use Drupal\Core\Utility\Token;
+use Drupal\Core\File\FileSystem;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\FileInterface;
@@ -26,14 +28,14 @@ class PublicFiles extends DeployPluginBase {
   /**
    * Token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * File system.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $fileSystem;
 
@@ -94,13 +96,13 @@ class PublicFiles extends DeployPluginBase {
     $destination = sprintf('public://%s', trim($this->token->replace($this->configuration['naming'], [
       'preview_site_build' => $build,
     ], ['clean' => TRUE]), '/'));
-    return file_create_url($destination);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($destination);
   }
 
   /**
    * Do cleanup of files from public storage.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    */
   private function doCleanUp(PreviewSiteBuildInterface $build): void {
diff --git a/src/Plugin/PreviewSite/Generate/TomeGenerator.php b/src/Plugin/PreviewSite/Generate/TomeGenerator.php
index e95dae1..9c43bac 100644
--- a/src/Plugin/PreviewSite/Generate/TomeGenerator.php
+++ b/src/Plugin/PreviewSite/Generate/TomeGenerator.php
@@ -2,6 +2,15 @@
 
 namespace Drupal\preview_site\Plugin\PreviewSite\Generate;
 
+use Drupal\preview_site\Generate\TomeStaticExtension;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\tome_static\RequestPreparer;
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\State\StateInterface;
+use Drupal\preview_site\EventSubscribers\TomeStaticListener;
+use Drupal\tome_static\StaticCacheInterface;
+use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\entity_usage\EntityUsageInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Database\Query\AlterableInterface;
@@ -38,56 +47,56 @@ class TomeGenerator extends GeneratePluginBase {
   /**
    * The static generator.
    *
-   * @var \Drupal\preview_site\Generate\TomeStaticExtension
+   * @var TomeStaticExtension
    */
   protected $static;
 
   /**
    * Request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The request preparer.
    *
-   * @var \Drupal\tome_static\RequestPreparer
+   * @var RequestPreparer
    */
   protected $requestPreparer;
 
   /**
    * File system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * File saved listener.
    *
-   * @var \Drupal\preview_site\EventSubscribers\TomeStaticListener
+   * @var TomeStaticListener
    */
   protected $fileSavedListener;
 
   /**
    * Static cache.
    *
-   * @var \Drupal\tome_static\StaticCacheInterface|\Drupal\Core\Cache\CacheBackendInterface
+   * @var StaticCacheInterface|CacheBackendInterface
    */
   protected $tomeStaticCache;
 
   /**
    * Entity usage.
    *
-   * @var \Drupal\entity_usage\EntityUsageInterface
+   * @var EntityUsageInterface
    */
   protected $entityUsage;
 
@@ -239,11 +248,11 @@ class TomeGenerator extends GeneratePluginBase {
   /**
    * Checks if an entity is relevant to this preview-site build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    *
    * @return bool
@@ -258,13 +267,13 @@ class TomeGenerator extends GeneratePluginBase {
   /**
    * Checks if an entity has a related usage to content in the build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity.
    * @param \SplObjectStorage $seen
    *   Items already tested.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    *
    * @return bool
diff --git a/src/Plugin/PreviewSitePluginInterface.php b/src/Plugin/PreviewSitePluginInterface.php
index 44dc7c6..296db58 100644
--- a/src/Plugin/PreviewSitePluginInterface.php
+++ b/src/Plugin/PreviewSitePluginInterface.php
@@ -30,7 +30,7 @@ interface PreviewSitePluginInterface extends ConfigurableInterface, PluginInspec
    *
    * @param string $url
    *   URL.
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Build.
    *
    * @return string
diff --git a/src/Plugin/QueueWorker/Decommission.php b/src/Plugin/QueueWorker/Decommission.php
index 601a434..cddf33d 100644
--- a/src/Plugin/QueueWorker/Decommission.php
+++ b/src/Plugin/QueueWorker/Decommission.php
@@ -22,7 +22,7 @@ class Decommission extends QueueWorkerBase implements ContainerFactoryPluginInte
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -35,7 +35,7 @@ class Decommission extends QueueWorkerBase implements ContainerFactoryPluginInte
    *   ID.
    * @param mixed $plugin_definition
    *   Definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entityTypeManager) {
diff --git a/src/Plugin/QueueWorker/Deploy.php b/src/Plugin/QueueWorker/Deploy.php
index 5114bbf..c5a0da6 100644
--- a/src/Plugin/QueueWorker/Deploy.php
+++ b/src/Plugin/QueueWorker/Deploy.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Plugin\QueueWorker;
 
+use Drupal\preview_site\Entity\PreviewSiteBuildInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Queue\QueueWorkerBase;
@@ -21,7 +22,7 @@ class Deploy extends QueueWorkerBase implements ContainerFactoryPluginInterface
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -34,7 +35,7 @@ class Deploy extends QueueWorkerBase implements ContainerFactoryPluginInterface
    *   Plugin ID.
    * @param array $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    */
   public function __construct(array $configuration, string $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entityTypeManager) {
@@ -58,7 +59,7 @@ class Deploy extends QueueWorkerBase implements ContainerFactoryPluginInterface
    * {@inheritdoc}
    */
   public function processItem($data) {
-    /** @var \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build */
+    /** @var PreviewSiteBuildInterface $build */
     $build = $this->entityTypeManager->getStorage('preview_site_build')->load($this->pluginDefinition['preview_site_build_id']);
     $item = $build->get('artifacts')->get($data);
     if ($item && ($file = $item->entity) && ($strategy = $build->getStrategy())) {
diff --git a/src/Plugin/QueueWorker/Generate.php b/src/Plugin/QueueWorker/Generate.php
index b6109c4..58ca7c6 100644
--- a/src/Plugin/QueueWorker/Generate.php
+++ b/src/Plugin/QueueWorker/Generate.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Plugin\QueueWorker;
 
+use Drupal\preview_site\Entity\PreviewSiteBuildInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -23,21 +24,21 @@ class Generate extends QueueWorkerBase implements ContainerFactoryPluginInterfac
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $log;
 
   /**
    * Queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
@@ -50,11 +51,11 @@ class Generate extends QueueWorkerBase implements ContainerFactoryPluginInterfac
    *   Plugin ID.
    * @param array $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $log
+   * @param LoggerChannelInterface $log
    *   Log.
-   * @param \Drupal\Core\Queue\QueueFactory $queueFactory
+   * @param QueueFactory $queueFactory
    *   Queue factory.
    */
   public function __construct(array $configuration, string $plugin_id, array $plugin_definition, EntityTypeManagerInterface $entityTypeManager, LoggerChannelInterface $log, QueueFactory $queueFactory) {
@@ -82,7 +83,7 @@ class Generate extends QueueWorkerBase implements ContainerFactoryPluginInterfac
    * {@inheritdoc}
    */
   public function processItem($data) {
-    /** @var \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build */
+    /** @var PreviewSiteBuildInterface $build */
     $build = $this->entityTypeManager->getStorage('preview_site_build')->load($this->pluginDefinition['preview_site_build_id']);
     $item = $build->get('contents')->get($data);
     $needs_save = FALSE;
diff --git a/src/Plugin/QueueWorker/GenerateAssets.php b/src/Plugin/QueueWorker/GenerateAssets.php
index 99832b4..65abe1e 100644
--- a/src/Plugin/QueueWorker/GenerateAssets.php
+++ b/src/Plugin/QueueWorker/GenerateAssets.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\preview_site\Plugin\QueueWorker;
 
+use Drupal\preview_site\Entity\PreviewSiteBuildInterface;
 /**
  * Defines a queue worker plugin for deployments.
  *
@@ -17,7 +18,7 @@ class GenerateAssets extends Generate {
    * {@inheritdoc}
    */
   public function processItem($path) {
-    /** @var \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build */
+    /** @var PreviewSiteBuildInterface $build */
     $build = $this->entityTypeManager->getStorage('preview_site_build')->load($this->pluginDefinition['preview_site_build_id']);
     $needs_save = FALSE;
     $strategy = $build->getStrategy();
diff --git a/src/PreviewSiteBuilder.php b/src/PreviewSiteBuilder.php
index 5fef1fe..85787b4 100644
--- a/src/PreviewSiteBuilder.php
+++ b/src/PreviewSiteBuilder.php
@@ -25,41 +25,41 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
   /**
    * Queue factory.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queueFactory;
 
   /**
    * Queue manager.
    *
-   * @var \Drupal\Core\Queue\QueueWorkerManagerInterface
+   * @var QueueWorkerManagerInterface
    */
   protected $queueManager;
 
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Entity-repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs a new PreviewSiteBuilder.
    *
-   * @param \Drupal\Core\Queue\QueueFactory $queueFactory
+   * @param QueueFactory $queueFactory
    *   Queue factory.
-   * @param \Drupal\Core\Queue\QueueWorkerManagerInterface $queueManager
+   * @param QueueWorkerManagerInterface $queueManager
    *   Queue manager.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param EntityRepositoryInterface $entityRepository
    *   Entity-repository.
    */
   public function __construct(QueueFactory $queueFactory, QueueWorkerManagerInterface $queueManager, StateInterface $state, EntityRepositoryInterface $entityRepository) {
@@ -94,7 +94,7 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
   /**
    * Queues required tasks to generate a preview site.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Site to generate.
    */
   public function queueSiteGeneration(PreviewSiteBuildInterface $build) {
@@ -110,7 +110,7 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
   /**
    * Processes a single generation task.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Site to generate.
    *
    * @return int
@@ -123,7 +123,7 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
   /**
    * Processes a single asset generation task.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Site to generate.
    *
    * @return int
@@ -136,7 +136,7 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
   /**
    * Queues required tasks to deploy a preview site.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Site to deploy.
    */
   public function queueSiteDeployment(PreviewSiteBuildInterface $build) {
@@ -149,7 +149,7 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
   /**
    * Processes a single generation task.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Site to generate.
    *
    * @return int
@@ -196,10 +196,10 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
   /**
    * Gets a pre-build batch for building a preview-site.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Site build to generate.
    *
-   * @return \Drupal\Core\Batch\BatchBuilder
+   * @return BatchBuilder
    *   Batch built with tasks for this build.
    */
   public function getPreviewSiteBuildBatch(PreviewSiteBuildInterface $build) : BatchBuilder {
@@ -277,7 +277,7 @@ class PreviewSiteBuilder implements ContainerInjectionInterface {
    * Batch callback.
    */
   public static function operationMarkDeploymentFinished(int $build_id, array &$context) {
-    /** @var \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build */
+    /** @var PreviewSiteBuildInterface $build */
     $build = PreviewSiteBuild::load($build_id);
     if (!isset($context['sandbox']['clean_up_file_ids'])) {
       $context['sandbox']['clean_up_file_ids'] = $build->finishDeployment(\Drupal::state())->getArtifactIds();
diff --git a/src/PreviewSiteCacheContext.php b/src/PreviewSiteCacheContext.php
index c63617a..8a5007b 100644
--- a/src/PreviewSiteCacheContext.php
+++ b/src/PreviewSiteCacheContext.php
@@ -24,23 +24,23 @@ class PreviewSiteCacheContext implements CacheContextInterface {
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * Entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * Constructs a new PreviewSiteCacheContext.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository
+   * @param EntityRepositoryInterface $entityRepository
    *   Entity repository.
    */
   public function __construct(StateInterface $state, EntityRepositoryInterface $entityRepository) {
diff --git a/tests/modules/preview_site_test/src/Plugin/Block/PublishedBlockContentListBlock.php b/tests/modules/preview_site_test/src/Plugin/Block/PublishedBlockContentListBlock.php
index 796ed98..78dd482 100644
--- a/tests/modules/preview_site_test/src/Plugin/Block/PublishedBlockContentListBlock.php
+++ b/tests/modules/preview_site_test/src/Plugin/Block/PublishedBlockContentListBlock.php
@@ -23,7 +23,7 @@ class PublishedBlockContentListBlock extends BlockBase implements ContainerFacto
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/tests/modules/preview_site_test/src/Plugin/PreviewSite/Deploy/TestDeploy.php b/tests/modules/preview_site_test/src/Plugin/PreviewSite/Deploy/TestDeploy.php
index d82fc09..27a6c63 100644
--- a/tests/modules/preview_site_test/src/Plugin/PreviewSite/Deploy/TestDeploy.php
+++ b/tests/modules/preview_site_test/src/Plugin/PreviewSite/Deploy/TestDeploy.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\preview_site_test\Plugin\PreviewSite\Deploy;
 
+use Drupal\Core\File\FileSystem;
+use Drupal\Core\State\StateInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\FileInterface;
@@ -28,14 +30,14 @@ class TestDeploy extends DeployPluginBase {
   /**
    * File system.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $fileSystem;
 
   /**
    * State.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
diff --git a/tests/src/Functional/PreviewSiteBuildAdministrationTest.php b/tests/src/Functional/PreviewSiteBuildAdministrationTest.php
index 628125f..61b1f28 100644
--- a/tests/src/Functional/PreviewSiteBuildAdministrationTest.php
+++ b/tests/src/Functional/PreviewSiteBuildAdministrationTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\preview_site\Functional;
 
+use Drupal\user\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\node\Entity\Node;
 use Drupal\preview_site\Entity\PreviewSiteBuildInterface;
@@ -27,7 +29,7 @@ class PreviewSiteBuildAdministrationTest extends BrowserTestBase {
   /**
    * User interface.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -115,7 +117,7 @@ class PreviewSiteBuildAdministrationTest extends BrowserTestBase {
   /**
    * Tests anonymous can't view list.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   private function assertThatAnonymousCantViewList() {
     $this->drupalGet(Url::fromRoute('entity.preview_site_build.collection'));
@@ -125,7 +127,7 @@ class PreviewSiteBuildAdministrationTest extends BrowserTestBase {
   /**
    * Tests admin can add preview sites.
    *
-   * @return \Drupal\preview_site\Entity\PreviewSiteBuildInterface
+   * @return PreviewSiteBuildInterface
    *   Created item
    */
   private function assertAdminCanAddPreviewSites() : PreviewSiteBuildInterface {
@@ -152,7 +154,7 @@ class PreviewSiteBuildAdministrationTest extends BrowserTestBase {
   /**
    * Assert admins can edit preview site build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Preview site build.
    */
   private function assertAdminCanEditPreviewSites(PreviewSiteBuildInterface $build) {
@@ -174,7 +176,7 @@ class PreviewSiteBuildAdministrationTest extends BrowserTestBase {
   /**
    * Assert admins can't edit preview site build.
    *
-   * @param \Drupal\preview_site\Entity\PreviewSiteBuildInterface $build
+   * @param PreviewSiteBuildInterface $build
    *   Preview site build.
    */
   private function assertAnonymousCannotEditPreviewSites(PreviewSiteBuildInterface $build) {
