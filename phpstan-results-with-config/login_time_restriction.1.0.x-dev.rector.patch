diff --git a/login_time_restriction.module b/login_time_restriction.module
index 92df3b9..4fd8239 100644
--- a/login_time_restriction.module
+++ b/login_time_restriction.module
@@ -78,7 +78,7 @@ function login_time_restriction_form_alter(array &$form, FormStateInterface $for
  *
  * @param array $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The formstate object.
  */
 function login_time_restriction_user_login_validate(array &$form, FormStateInterface $form_state) {
@@ -147,7 +147,7 @@ function _login_time_restriction_covert_to_new_timezone(string $time, string $ne
 /**
  * Get current logged in user info.
  *
- * @param \Drupal\Core\Session\AccountInterface $user
+ * @param AccountInterface $user
  *   The user object.
  *
  * @return array
diff --git a/src/Controller/AccessTimeController.php b/src/Controller/AccessTimeController.php
index 77ac9ab..e5c75c4 100644
--- a/src/Controller/AccessTimeController.php
+++ b/src/Controller/AccessTimeController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\login_time_restriction\Controller;
 
+use Drupal\user\UserDataInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Drupal\user\UserData;
@@ -25,16 +26,16 @@ class AccessTimeController extends ControllerBase {
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * Constructs an AccessTimeController object.
    *
-   * @param \Drupal\user\UserData $userData
+   * @param UserData $userData
    *   Data of the user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity Type Manager.
    */
   public function __construct(
diff --git a/src/EventSubscriber/ValidRequestEventSubscriber.php b/src/EventSubscriber/ValidRequestEventSubscriber.php
index 8f0c3af..f031b0e 100644
--- a/src/EventSubscriber/ValidRequestEventSubscriber.php
+++ b/src/EventSubscriber/ValidRequestEventSubscriber.php
@@ -23,59 +23,59 @@ class ValidRequestEventSubscriber implements EventSubscriberInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * Entity type manager object.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The request stacks service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The user data service.
    *
-   * @var \Drupal\user\UserDataInterface
+   * @var UserDataInterface
    */
   protected $userData;
 
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity Type Manager.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
-   * @param \Drupal\user\UserDataInterface $user_data
+   * @param UserDataInterface $user_data
    *   The user data service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(AccountInterface $current_user, EntityTypeManagerInterface $entity_type_manager, MessengerInterface $messenger, RequestStack $request_stack, UserDataInterface $user_data, ConfigFactoryInterface $config_factory) {
@@ -90,7 +90,7 @@ class ValidRequestEventSubscriber implements EventSubscriberInterface {
   /**
    * Request Event to check if the user is having the valid access permission.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   Event.
    */
   public function onUserRequest(ResponseEvent $event) {
diff --git a/src/Facade/TimeRangeFacade.php b/src/Facade/TimeRangeFacade.php
index 9a94b0b..5a67e32 100644
--- a/src/Facade/TimeRangeFacade.php
+++ b/src/Facade/TimeRangeFacade.php
@@ -23,14 +23,14 @@ final class TimeRangeFacade implements ContainerInjectionInterface {
   /**
    * The config installer service.
    *
-   * @var \Drupal\Core\Config\ConfigInstallerInterface
+   * @var ConfigInstallerInterface
    */
   protected $configInstaller;
 
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -44,20 +44,20 @@ final class TimeRangeFacade implements ContainerInjectionInterface {
   /**
    * The entity display repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * MetatagFacade constructor.
    *
-   * @param \Drupal\Core\Config\ConfigInstallerInterface $config_installer
+   * @param ConfigInstallerInterface $config_installer
    *   The config installer service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity Type Manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository.
    */
   public function __construct(ConfigInstallerInterface $config_installer, ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, EntityDisplayRepositoryInterface $entity_display_repository) {
@@ -85,7 +85,7 @@ final class TimeRangeFacade implements ContainerInjectionInterface {
    * Modify the Widget of field_ltr_access_time based on the type specified by
    * 'login_time_restriction.field_widget' third-party setting.
    *
-   * @param \Drupal\field\FieldConfigInterface $field_config
+   * @param FieldConfigInterface $field_config
    *   The new field's config definition.
    * @param string $widget_type
    *   The machine name of widget that you want to replace with.
diff --git a/src/Form/LoginTimeRestrictionAdminSettings.php b/src/Form/LoginTimeRestrictionAdminSettings.php
index c40ecf7..cfeff87 100644
--- a/src/Form/LoginTimeRestrictionAdminSettings.php
+++ b/src/Form/LoginTimeRestrictionAdminSettings.php
@@ -25,18 +25,18 @@ class LoginTimeRestrictionAdminSettings extends ConfigFormBase {
   /**
    * The class resolver to get the subform form objects.
    *
-   * @var \Drupal\Core\DependencyInjection\ClassResolverInterface
+   * @var ClassResolverInterface
    */
   protected $classResolver;
 
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The Entity Type Manager.
-   * @param \Drupal\Core\DependencyInjection\ClassResolverInterface $class_resolver
+   * @param ClassResolverInterface $class_resolver
    *   The class resolver to get the subform form objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, ClassResolverInterface $class_resolver) {
diff --git a/tests/src/Functional/AccessTimeSettingsTest.php b/tests/src/Functional/AccessTimeSettingsTest.php
index 8cfaf6f..f16efb4 100644
--- a/tests/src/Functional/AccessTimeSettingsTest.php
+++ b/tests/src/Functional/AccessTimeSettingsTest.php
@@ -76,7 +76,10 @@ class AccessTimeSettingsTest extends BrowserTestBase {
       'warning_time' => 10,
     ];
     $this->submitForm($edit, 'Save configuration');
-    $this->assertText('The configuration options have been saved.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
     // Check that settings have the correct default value.
     foreach ($edit as $name => $value) {
       $assert_session->fieldValueEquals($name, $value);
