diff --git a/hook_event.module b/hook_event.module
index 8f9f99b..1a77030 100644
--- a/hook_event.module
+++ b/hook_event.module
@@ -10,7 +10,7 @@
  */
 function hook_event_help($route_name) {
   if ($route_name === 'help.page.hook_event') {
-    $path = drupal_get_path('module', 'hook_event');
+    $path = \Drupal::service('extension.list.module')->getPath('hook_event');
     $output = file_get_contents($path . '/README.md');
     return '<pre>' . $output . '</pre>';
   }
diff --git a/src/Discovery/ApiDiscovery.php b/src/Discovery/ApiDiscovery.php
index e052f98..bbb1ff4 100644
--- a/src/Discovery/ApiDiscovery.php
+++ b/src/Discovery/ApiDiscovery.php
@@ -32,11 +32,11 @@ class ApiDiscovery implements ApiDiscoveryInterface {
   /**
    * Creates the api discovery instance.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The file system service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   The cache backend.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The event dispatcher.
    */
   public function __construct(
diff --git a/src/EventSubscriber/ApiDiscoveryEventSubscriber.php b/src/EventSubscriber/ApiDiscoveryEventSubscriber.php
index 39cdf07..c3981e1 100644
--- a/src/EventSubscriber/ApiDiscoveryEventSubscriber.php
+++ b/src/EventSubscriber/ApiDiscoveryEventSubscriber.php
@@ -14,7 +14,7 @@ class ApiDiscoveryEventSubscriber implements EventSubscriberInterface {
   /**
    * Constructs the api discovery subscriber.
    *
-   * @param \Drupal\hook_event\Processor\HookDefinitionsProcessorInterface $hookDefinitionsProcessor
+   * @param HookDefinitionsProcessorInterface $hookDefinitionsProcessor
    *   The hook definition processor.
    */
   public function __construct(
@@ -34,7 +34,7 @@ class ApiDiscoveryEventSubscriber implements EventSubscriberInterface {
   /**
    * Allow to alter hook definitions before they are saved.
    *
-   * @param \Drupal\hook_event\Event\ApiDiscoveryEventInterface $event
+   * @param ApiDiscoveryEventInterface $event
    *   The event object.
    */
   public function onHookDefinitionsSave(ApiDiscoveryEventInterface $event): void {
diff --git a/src/Extension/ModuleHandler.php b/src/Extension/ModuleHandler.php
index 48929b2..0ddfd8f 100644
--- a/src/Extension/ModuleHandler.php
+++ b/src/Extension/ModuleHandler.php
@@ -25,25 +25,25 @@ class ModuleHandler implements ModuleHandlerInterface {
   /**
    * The hook definition storge.
    *
-   * @var \Drupal\hook_event\Storage\HookDefinitionStorageInterface
+   * @var HookDefinitionStorageInterface
    */
   protected HookDefinitionStorageInterface $hookDefinitionStorage;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected EventDispatcherInterface $eventDispatcher;
 
   /**
    * Constructs module handler decorator.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The original (inner) module handler service.
-   * @param \Drupal\hook_event\Storage\HookDefinitionStorageInterface $hook_definition_storage
+   * @param HookDefinitionStorageInterface $hook_definition_storage
    *   The hook definition storage.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(
@@ -174,7 +174,7 @@ class ModuleHandler implements ModuleHandlerInterface {
    *
    * @param array $arguments
    *   The list of original arguments.
-   * @param \Drupal\hook_event\Event\HookEventInterface $event
+   * @param HookEventInterface $event
    *   The event object containing updated values.
    */
   protected function updateArguments(array &$arguments, HookEventInterface $event): void {
diff --git a/src/Extension/ModuleHandlerImplementMethodsTrait.php b/src/Extension/ModuleHandlerImplementMethodsTrait.php
index 006baa6..36dc7d8 100644
--- a/src/Extension/ModuleHandlerImplementMethodsTrait.php
+++ b/src/Extension/ModuleHandlerImplementMethodsTrait.php
@@ -14,7 +14,7 @@ trait ModuleHandlerImplementMethodsTrait {
   /**
    * The base module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected ModuleHandlerInterface $baseHandler;
 
diff --git a/src/Processor/EntityTypeHookDefinitionProcessor.php b/src/Processor/EntityTypeHookDefinitionProcessor.php
index c75d077..815bbd2 100644
--- a/src/Processor/EntityTypeHookDefinitionProcessor.php
+++ b/src/Processor/EntityTypeHookDefinitionProcessor.php
@@ -16,7 +16,7 @@ class EntityTypeHookDefinitionProcessor implements HookDefinitionsProcessorInter
   /**
    * Creates the entity type hooks resolver service.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager service.
    */
   public function __construct(
diff --git a/src/Storage/HookDefinitionStorage.php b/src/Storage/HookDefinitionStorage.php
index b695570..0c587f9 100644
--- a/src/Storage/HookDefinitionStorage.php
+++ b/src/Storage/HookDefinitionStorage.php
@@ -13,14 +13,14 @@ class HookDefinitionStorage implements HookDefinitionStorageInterface {
   /**
    * The API files discovery service.
    *
-   * @var \Drupal\hook_event\Discovery\ApiDiscoveryInterface
+   * @var ApiDiscoveryInterface
    */
   protected ApiDiscoveryInterface $apiDiscovery;
 
   /**
    * Creates the storage instance.
    *
-   * @param \Drupal\hook_event\Discovery\ApiDiscoveryInterface $api_discovery
+   * @param ApiDiscoveryInterface $api_discovery
    *   The API files discovery service.
    */
   public function __construct(ApiDiscoveryInterface $api_discovery,) {
