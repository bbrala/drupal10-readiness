diff --git a/responsive_favicons.info.yml b/responsive_favicons.info.yml
index 365ce55..aef08d6 100644
--- a/responsive_favicons.info.yml
+++ b/responsive_favicons.info.yml
@@ -1,7 +1,6 @@
 name: 'Responsive Favicons'
 type: module
 description: 'Add responsive favicons to your site based on the code from http://realfavicongenerator.net/'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: User interface
 configure: responsive_favicons.admin
diff --git a/src/Form/ResponsiveFaviconsAdmin.php b/src/Form/ResponsiveFaviconsAdmin.php
index efb11de..1510c30 100644
--- a/src/Form/ResponsiveFaviconsAdmin.php
+++ b/src/Form/ResponsiveFaviconsAdmin.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\responsive_favicons\Form;
 
+use Drupal\Core\Archiver\ArchiverInterface;
 use Drupal\Core\File\Exception\FileException;
 use Drupal\Core\File\Exception\FileWriteException;
 use Drupal\Core\Form\ConfigFormBase;
@@ -25,7 +26,7 @@ class ResponsiveFaviconsAdmin extends ConfigFormBase {
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -73,7 +74,7 @@ class ResponsiveFaviconsAdmin extends ConfigFormBase {
       '#type' => 'textfield',
       '#title' => $this->t('Path to responsive favicon files'),
       '#description' => $this->t('A local file system path where favicon files will be stored. This directory must exist and be writable by Drupal. An attempt will be made to create this directory if it does not already exist.'),
-      '#field_prefix' => file_create_url('public://'),
+      '#field_prefix' => \Drupal::service('file_url_generator')->generateAbsoluteString('public://'),
       '#default_value' => $config->get('path'),
       '#states' => [
         'visible' => [
@@ -303,7 +304,7 @@ class ResponsiveFaviconsAdmin extends ConfigFormBase {
    * @param string $directory
    *   The directory you wish to extract the archive into.
    *
-   * @return \Drupal\Core\Archiver\ArchiverInterface
+   * @return ArchiverInterface
    *   The Archiver object used to extract the archive.
    *
    * @throws \Exception
