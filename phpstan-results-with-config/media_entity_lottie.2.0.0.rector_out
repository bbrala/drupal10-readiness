modules/contrib/media_entity_lottie/media_entity_lottie.install
modules/contrib/media_entity_lottie/media_entity_lottie.module
modules/contrib/media_entity_lottie/src/Plugin/Field/FieldFormatter/FileLottiePlayerFormatter.php
modules/contrib/media_entity_lottie/src/Plugin/Validation/Constraint/LottieFileConstraint.php
modules/contrib/media_entity_lottie/src/Plugin/Validation/Constraint/LottieFileConstraintValidator.php
modules/contrib/media_entity_lottie/src/Plugin/media/Source/LottieFile.php
modules/contrib/media_entity_lottie/tests/src/Functional/Formatter/FileLottiePlayerFormatterTest.php

4 files with changes
====================

1) modules/contrib/media_entity_lottie/tests/src/Functional/Formatter/FileLottiePlayerFormatterTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\media_entity_lottie\Functional\Formatter;

+use Drupal\media\MediaTypeInterface;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\file\Entity\File;
 use Drupal\media\Entity\Media;
@@ @@
     $this->container->get('router.builder')->rebuild();

     // Get the fixtures directory.
-    $this->fixturesDirectory = drupal_get_path('module', 'media_entity_lottie') . '/tests/fixtures';
+    $this->fixturesDirectory = \Drupal::service('extension.list.module')->getPath('media_entity_lottie') . '/tests/fixtures';
   }

   /**
@@ @@
    * @param array $formatter_settings
    *   Settings for the formatter.
    *
-   * @return \Drupal\media\MediaTypeInterface
+   * @return MediaTypeInterface
    *   A lottie media type.
    */
   protected function createLottieMedia($formatter, array $values, array $formatter_settings = []) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_entity_lottie/src/Plugin/media/Source/LottieFile.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_lottie\Plugin\media\Source;

+use Drupal\file\FileInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\media\MediaInterface;
@@ @@
    * {@inheritdoc}
    */
   public function getMetadata(MediaInterface $media, $attribute_name) {
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $media->get($this->configuration['source_field'])->entity;
     // If the source field is not required, it may be empty.
     if (!$file) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/media_entity_lottie/src/Plugin/Validation/Constraint/LottieFileConstraintValidator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_lottie\Plugin\Validation\Constraint;

+use Drupal\media\MediaInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Creates a new LottieFileConstraintValidator instance.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(MessengerInterface $messenger) {
@@ @@
    * {@inheritdoc}
    */
   public function validate($value, Constraint $constraint) {
-    /** @var \Drupal\media\MediaInterface $media */
+    /** @var MediaInterface $media */
     $media = $value->getEntity();
-    /** @var \Drupal\media_entity_lottie\Plugin\media\Source\LottieFile $source */
+    /** @var LottieFile $source */
     $source = $media->getSource();

     if (!($source instanceof LottieFile)) {
@@ @@

     $fid = $source->getSourceFieldValue($media);

-    /** @var \Drupal\file\Entity\File $file_entity */
+    /** @var File $file_entity */
     $file_entity = File::load($fid);
     $fileName = $file_entity->getFilename();
     $file = file_get_contents($file_entity->getFileUri());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/media_entity_lottie/media_entity_lottie.install:10

    ---------- begin diff ----------
@@ @@
  * Implements hook_install().
  */
 function media_entity_lottie_install() {
-  $source = drupal_get_path('module', 'media_entity_lottie') . '/images/icons';
+  $source = \Drupal::service('extension.list.module')->getPath('media_entity_lottie') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');

-  /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+  /** @var FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

