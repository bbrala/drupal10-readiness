diff --git a/entity_comparison.module b/entity_comparison.module
index 2d3c59a..d6a4807 100755
--- a/entity_comparison.module
+++ b/entity_comparison.module
@@ -38,7 +38,7 @@ function entity_comparison_help($route_name, RouteMatchInterface $route_match) {
 function entity_comparison_entity_extra_field_info() {
   $fields = [];
 
-  /** @var \Drupal\entity_comparison\Entity\EntityComparison[] $entity_comparisons */
+  /** @var EntityComparison[] $entity_comparisons */
   $entity_comparisons = EntityComparison::loadMultiple();
   foreach ($entity_comparisons as $entity_comparison) {
     // Add a field to the manage display of this entity - bundle pair.
diff --git a/entity_comparison.theme.inc b/entity_comparison.theme.inc
index 65426f2..6e82199 100755
--- a/entity_comparison.theme.inc
+++ b/entity_comparison.theme.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Link;
 /**
  * @file
  * Preprocessors and helper functions to make theming easier.
@@ -26,7 +27,7 @@ function template_preprocess_entity_comparison_link(array &$variables) {
   $entity_comparison = EntityComparison::load($entity_comparison_id);
 
   /**
-   * @var \Drupal\Core\Link $link
+   * @var Link $link
    */
   $link = $entity_comparison->getLink($variables['id'], TRUE);
   $variables['output'] = $link->toRenderable();
diff --git a/src/Controller/EntityComparisonController.php b/src/Controller/EntityComparisonController.php
index 2032f42..302dd11 100755
--- a/src/Controller/EntityComparisonController.php
+++ b/src/Controller/EntityComparisonController.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\entity_comparison\Controller;
 
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\MessageCommand;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ -32,68 +36,68 @@ class EntityComparisonController extends ControllerBase implements ContainerInje
   /**
    * The renderer service.
    *
-   * @var Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Session service.
    *
-   * @var Symfony\Component\HttpFoundation\Session\Session
+   * @var Session
    */
   protected $session;
 
   /**
    * Current user service.
    *
-   * @var Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Entity field manager service.
    *
-   * @var Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Entity type manager service.
    *
-   * @var Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Language manager service.
    *
-   * @var Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Module handler service.
    *
-   * @var Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Symfony\Component\HttpFoundation\Session\Session $session
+   * @param Session $session
    *   Session service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   Current user service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   Language manager service.
-   * @param Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler service.
    */
   public function __construct(RendererInterface $renderer, Session $session, AccountProxyInterface $current_user, EntityFieldManagerInterface $entity_field_manager, EntityTypeManagerInterface $entity_type_manager, LanguageManagerInterface $language_manager, ModuleHandlerInterface $module_handler) {
@@ -128,13 +132,13 @@ class EntityComparisonController extends ControllerBase implements ContainerInje
    *   Entity comparison ID.
    * @param int $entity_id
    *   Entity ID.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Page request object.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|Drupal\Core\Ajax\AjaxResponse
+   * @return RedirectResponse|AjaxResponse
    *   Return action response.
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    * @throws \Exception
    */
   public function action($entity_comparison_id, $entity_id, Request $request) {
@@ -215,7 +219,7 @@ class EntityComparisonController extends ControllerBase implements ContainerInje
   /**
    * Process the request.
    *
-   * @param \Drupal\entity_comparison\Entity\EntityComparisonInterface $entity_comparison
+   * @param EntityComparisonInterface $entity_comparison
    *   Entity Comparission entity.
    * @param int $entity_id
    *   Entity ID.
@@ -301,9 +305,9 @@ class EntityComparisonController extends ControllerBase implements ContainerInje
    * @return array
    *   Array to render table for the current page.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityMalformedException
    */
   public function compare($_entity_comparison_id = NULL) {
     // Load the related entity comparison.
@@ -449,7 +453,7 @@ class EntityComparisonController extends ControllerBase implements ContainerInje
    * @param int $_entity_comparison_id
    *   Entity comparission ID.
    *
-   * @return \Drupal\entity_comparison\Entity\EntityComparison
+   * @return EntityComparison
    *   The entity comparison entity.
    */
   protected function getEntityComparisonEntity($_entity_comparison_id = NULL) {
@@ -469,7 +473,7 @@ class EntityComparisonController extends ControllerBase implements ContainerInje
    *
    * @param array $field_definitions
    *   Array of field definitions.
-   * @param \Drupal\Core\Entity\Entity\EntityViewDisplay $entity_view_display
+   * @param EntityViewDisplay $entity_view_display
    *   Entity view display.
    * @param int $entity_comparison_id
    *   Entity comparison ID.
diff --git a/src/EntityComparisonHtmlRouteProvider.php b/src/EntityComparisonHtmlRouteProvider.php
index 20278e6..de33c33 100755
--- a/src/EntityComparisonHtmlRouteProvider.php
+++ b/src/EntityComparisonHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class EntityComparisonHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the collection route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getCollectionRoute(EntityTypeInterface $entity_type) {
diff --git a/src/EntityComparisonPermissions.php b/src/EntityComparisonPermissions.php
index b8ef845..9561295 100755
--- a/src/EntityComparisonPermissions.php
+++ b/src/EntityComparisonPermissions.php
@@ -32,7 +32,7 @@ class EntityComparisonPermissions {
   /**
    * Returns a list of entity comparison permissions.
    *
-   * @param \Drupal\entity_comparison\Entity\EntityComparison $type
+   * @param EntityComparison $type
    *   The entity comparison type.
    *
    * @return array
diff --git a/src/Form/EntityComparisonForm.php b/src/Form/EntityComparisonForm.php
index 09b562a..94193a0 100755
--- a/src/Form/EntityComparisonForm.php
+++ b/src/Form/EntityComparisonForm.php
@@ -22,21 +22,21 @@ class EntityComparisonForm extends EntityForm {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * Entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
@@ -50,11 +50,11 @@ class EntityComparisonForm extends EntityForm {
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   Entity type bundle info service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
    * @param \Drupal\Core\Routing\RouteBuilder $router_builder
    *   Route builder service.
diff --git a/src/Plugin/Block/EntityComparisonBlock.php b/src/Plugin/Block/EntityComparisonBlock.php
index 9810206..072b625 100755
--- a/src/Plugin/Block/EntityComparisonBlock.php
+++ b/src/Plugin/Block/EntityComparisonBlock.php
@@ -29,28 +29,28 @@ class EntityComparisonBlock extends BlockBase implements ContainerFactoryPluginI
   /**
    * The entity comparison storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityComparison;
 
   /**
    * Link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGenerator
+   * @var LinkGenerator
    */
   protected $linkGenerator;
 
   /**
    * The current user session.
    *
-   * @var \Symfony\Component\HttpFoundation\Session\Session
+   * @var Session
    */
   protected $session;
 
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -63,13 +63,13 @@ class EntityComparisonBlock extends BlockBase implements ContainerFactoryPluginI
    *   Plugin ID.
    * @param mixed $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_comparison
+   * @param EntityStorageInterface $entity_comparison
    *   The entity comparison storage.
-   * @param \Drupal\Core\Utility\LinkGenerator $link_generator
+   * @param LinkGenerator $link_generator
    *   Link generator.
-   * @param \Symfony\Component\HttpFoundation\Session\Session $session
+   * @param Session $session
    *   The current user session.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user object.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $entity_comparison, LinkGenerator $link_generator, Session $session, AccountProxyInterface $current_user) {
@@ -151,7 +151,7 @@ class EntityComparisonBlock extends BlockBase implements ContainerFactoryPluginI
   /**
    * Get number of the items.
    *
-   * @param \Drupal\entity_comparison\Entity\EntityComparisonInterface $entity_comparison
+   * @param EntityComparisonInterface $entity_comparison
    *   Entity Comparison entity.
    *
    * @return int
diff --git a/src/Plugin/Block/EntityComparisonLinkBlock.php b/src/Plugin/Block/EntityComparisonLinkBlock.php
index b327c65..2aee225 100755
--- a/src/Plugin/Block/EntityComparisonLinkBlock.php
+++ b/src/Plugin/Block/EntityComparisonLinkBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_comparison\Plugin\Block;
 
+use Drupal\Core\Link;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -27,28 +28,28 @@ class EntityComparisonLinkBlock extends BlockBase implements ContainerFactoryPlu
   /**
    * The entity comparison storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityComparison;
 
   /**
    * Link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGenerator
+   * @var LinkGenerator
    */
   protected $linkGenerator;
 
   /**
    * The current user session.
    *
-   * @var \Symfony\Component\HttpFoundation\Session\Session
+   * @var Session
    */
   protected $session;
 
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -61,13 +62,13 @@ class EntityComparisonLinkBlock extends BlockBase implements ContainerFactoryPlu
    *   Plugin ID.
    * @param mixed $plugin_definition
    *   Plugin definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_comparison
+   * @param EntityStorageInterface $entity_comparison
    *   The entity comparison storage.
-   * @param \Drupal\Core\Utility\LinkGenerator $link_generator
+   * @param LinkGenerator $link_generator
    *   Link generator.
-   * @param \Symfony\Component\HttpFoundation\Session\Session $session
+   * @param Session $session
    *   The current user session.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user object.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityStorageInterface $entity_comparison, LinkGenerator $link_generator, Session $session, AccountProxyInterface $current_user) {
@@ -117,7 +118,7 @@ class EntityComparisonLinkBlock extends BlockBase implements ContainerFactoryPlu
       // You can get nid and anything else you need from the node object.
       $nid = $node->id();
       /**
-       * @var \Drupal\Core\Link $link
+       * @var Link $link
        */
       $link = $entity_comparison->getLink($nid, TRUE);
     }
diff --git a/src/Plugin/Derivative/EntityComparisonBlock.php b/src/Plugin/Derivative/EntityComparisonBlock.php
index f6e587a..6782cd1 100755
--- a/src/Plugin/Derivative/EntityComparisonBlock.php
+++ b/src/Plugin/Derivative/EntityComparisonBlock.php
@@ -17,14 +17,14 @@ class EntityComparisonBlock extends DeriverBase implements ContainerDeriverInter
   /**
    * The entity comparison storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityComparison;
 
   /**
    * Constructs new EntityComparisonBlock.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_comparison
+   * @param EntityStorageInterface $entity_comparison
    *   The entity comparison storage.
    */
   public function __construct(EntityStorageInterface $entity_comparison) {
diff --git a/src/Plugin/Derivative/EntityComparisonLinkBlock.php b/src/Plugin/Derivative/EntityComparisonLinkBlock.php
index 34fa7ef..a31e82f 100755
--- a/src/Plugin/Derivative/EntityComparisonLinkBlock.php
+++ b/src/Plugin/Derivative/EntityComparisonLinkBlock.php
@@ -17,14 +17,14 @@ class EntityComparisonLinkBlock extends DeriverBase implements ContainerDeriverI
   /**
    * The entity comparison storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $entityComparison;
 
   /**
    * Constructs new EntityComparisonLinkBlock.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_comparison
+   * @param EntityStorageInterface $entity_comparison
    *   The entity comparison storage.
    */
   public function __construct(EntityStorageInterface $entity_comparison) {
