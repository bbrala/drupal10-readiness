modules/contrib/wsm/src/Controller/EndpointListBuilder.php
modules/contrib/wsm/src/Controller/WebServiceManagerController.php
modules/contrib/wsm/src/EndpointInterface.php
modules/contrib/wsm/src/Entity/Endpoint.php
modules/contrib/wsm/src/Entity/FieldMapping.php
modules/contrib/wsm/src/Entity/Header.php
modules/contrib/wsm/src/Entity/Param.php
modules/contrib/wsm/src/FieldMappingInterface.php
modules/contrib/wsm/src/Form/Endpoint/AddForm.php
modules/contrib/wsm/src/Form/Endpoint/DeleteForm.php
modules/contrib/wsm/src/Form/Endpoint/EditForm.php
modules/contrib/wsm/src/Form/Endpoint/FormBase.php
modules/contrib/wsm/src/Form/FieldMapping/AddForm.php
modules/contrib/wsm/src/Form/FieldMapping/DeleteForm.php
modules/contrib/wsm/src/Form/FieldMapping/EditForm.php
modules/contrib/wsm/src/Form/FieldMapping/FormBase.php
modules/contrib/wsm/src/Form/FieldMapping/OverviewForm.php
modules/contrib/wsm/src/Form/Header/AddForm.php
modules/contrib/wsm/src/Form/Header/DeleteForm.php
modules/contrib/wsm/src/Form/Header/EditForm.php
modules/contrib/wsm/src/Form/Header/FormBase.php
modules/contrib/wsm/src/Form/Header/OverviewForm.php
modules/contrib/wsm/src/Form/Param/AddForm.php
modules/contrib/wsm/src/Form/Param/DeleteForm.php
modules/contrib/wsm/src/Form/Param/EditForm.php
modules/contrib/wsm/src/Form/Param/FormBase.php
modules/contrib/wsm/src/Form/Param/OverviewForm.php
modules/contrib/wsm/src/HeaderInterface.php
modules/contrib/wsm/src/ParamInterface.php
modules/contrib/wsm/src/Plugin/Field/FieldFormatter/WebServiceManagerEndpointFormatter.php
modules/contrib/wsm/src/Services/CronTasks.php
modules/contrib/wsm/src/Services/WebServiceManager.php
modules/contrib/wsm/tests/src/Functional/LoadTest.php
modules/contrib/wsm/wsm.module

15 files with changes
=====================

1) modules/contrib/wsm/tests/src/Functional/LoadTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\wsm\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/wsm/src/Services/WebServiceManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Services;

+use Drupal\file\FileInterface;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\File\FileSystemInterface;
@@ @@
   /**
    * Entity Type Manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Entity Field Manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * File System service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
    * @param string $url
    *   The url of the file to retrieve.
    *
-   * @return \Drupal\file\FileInterface
+   * @return FileInterface
    *   The drupal file netity.
    */
   protected function createImage($url) {
@@ @@
     $image = file_get_contents($url);
     if ($image !== FALSE) {
       $this->fileSystem->prepareDirectory($file_path, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
-      $file = file_save_data($image, $file_path . $filename);
+      $file = \Drupal::service('file.repository')->writeData($image, $file_path . $filename);
       return $file;
     }
   }
@@ @@
     $file_path = "public://wsm/endpoint_files/";
     $file_name = $entity->id();
     $this->fileSystem->prepareDirectory($file_path, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
-    file_save_data(json_encode($api_res_array), $file_path . $file_name);
+    \Drupal::service('file.repository')->writeData(json_encode($api_res_array), $file_path . $file_name);
   }

   /**
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/wsm/src/Services/CronTasks.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Entity Type Manager Interface.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
     /**
      * WebService Manager Service.
      *
-     * @var \Drupal\wsm\Services\WebServiceManager
+     * @var WebServiceManager
      */
     protected $manager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/wsm/src/Plugin/Field/FieldFormatter/WebServiceManagerEndpointFormatter.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The WebService Manager service.
    *
-   * @var \Drupal\wsm\Services\WebServiceManager
+   * @var WebServiceManager
    */
   protected $manager;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\wsm\Services\WebServiceManager $manager
+   * @param WebServiceManager $manager
    *   The WebService Manager service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/wsm/src/Form/Param/OverviewForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The endpoint to which the params are applied to.
    *
-   * @var \Drupal\wsm\EndpointInterface
+   * @var EndpointInterface
    */
   private $endpoint;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/wsm/src/Form/Param/DeleteForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Form\Param;

+use Drupal\wsm\EndpointInterface;
+use Drupal\wsm\ParamInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The endpoints that the param is applied to.
    *
-   * @var \Drupal\wsm\EndpointInterface
+   * @var EndpointInterface
    */
   protected $endpoint;

@@ @@
   /**
    * The param to be removed from the endpoint.
    *
-   * @var \Drupal\wsm\ParamInterface
+   * @var ParamInterface
    */
   protected $param;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/wsm/src/Form/Header/OverviewForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The endpoint to which the headers are applied to.
    *
-   * @var \Drupal\wsm\EndpointInterface
+   * @var EndpointInterface
    */
   private $endpoint;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/wsm/src/Form/Header/FormBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Form\Header;

+use Drupal\wsm\HeaderInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\wsm\EndpointInterface;
@@ @@
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\wsm\HeaderInterface
+   * @var HeaderInterface
    */
   protected $entity;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/wsm/src/Form/Header/DeleteForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Form\Header;

+use Drupal\wsm\EndpointInterface;
+use Drupal\wsm\HeaderInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The endpoints that the header is applied to.
    *
-   * @var \Drupal\wsm\EndpointInterface
+   * @var EndpointInterface
    */
   protected $endpoint;

@@ @@
   /**
    * The header to be removed from the endpoint.
    *
-   * @var \Drupal\wsm\HeaderInterface
+   * @var HeaderInterface
    */
   protected $header;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/wsm/src/Form/FieldMapping/OverviewForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Form\FieldMapping;

+use Drupal\wsm\FieldMappingInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The endpoint to which the field mappings are applied to.
    *
-   * @var \Drupal\wsm\FieldMappingInterface
+   * @var FieldMappingInterface
    */
   private $endpoint;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/wsm/src/Form/FieldMapping/FormBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Form\FieldMapping;

+use Drupal\wsm\FieldMappingInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\wsm\FieldMappingInterface
+   * @var FieldMappingInterface
    */
   protected $entity;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/wsm/src/Form/FieldMapping/DeleteForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Form\FieldMapping;

+use Drupal\wsm\EndpointInterface;
+use Drupal\wsm\FieldMappingInterface;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The endpoints that the field mapping is applied to.
    *
-   * @var \Drupal\wsm\EndpointInterface
+   * @var EndpointInterface
    */
   protected $endpoint;

@@ @@
   /**
    * The field mapping to be removed from the endpoint.
    *
-   * @var \Drupal\wsm\FieldMappingInterface
+   * @var FieldMappingInterface
    */
   protected $field_mapping;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/wsm/src/Form/Endpoint/FormBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Form\Endpoint;

+use Drupal\wsm\EndpointInterface;
 use Drupal\wsm\Entity\Endpoint;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\wsm\EndpointInterface
+   * @var EndpointInterface
    */
   protected $entity;

@@ @@
   /**
    * Returns the label for the entity type specified.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entityType
+   * @param EntityTypeInterface $entityType
    *   The entity type to process.
    *
    * @return string
@@ @@
   /**
    * Returns an array of available bundles of an entity type.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state.
-   * @param \Drupal\wsm\Entity\Endpoint $entity
+   * @param Endpoint $entity
    *   The current endpoint.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Return an AjaxResponse
    */
   public function updateEntityBundleField(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/wsm/src/Controller/WebServiceManagerController.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Route title callback.
    *
-   * @param \Drupal\wsm\EndpointInterface $endpoint
+   * @param EndpointInterface $endpoint
    *   The endpoint.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/wsm/src/Controller/EndpointListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wsm\Controller;

+use Drupal\wsm\EndpointInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Url;
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\wsm\EndpointInterface $endpoint */
+    /** @var EndpointInterface $endpoint */
     $endpoint = $entity;
     $row['label'] = $endpoint->label();
     $row['description']['data'] = ['#markup' => $endpoint->getDescription()];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 15 files have been changed by Rector                                      

