modules/contrib/tamper/src/Adapter/TamperableComplexDataAdapter.php
modules/contrib/tamper/src/Annotation/Tamper.php
modules/contrib/tamper/src/Exception/SkipTamperDataException.php
modules/contrib/tamper/src/Exception/SkipTamperItemException.php
modules/contrib/tamper/src/Exception/TamperException.php
modules/contrib/tamper/src/Plugin/Tamper/ArrayFilter.php
modules/contrib/tamper/src/Plugin/Tamper/CastToInt.php
modules/contrib/tamper/src/Plugin/Tamper/ConvertBoolean.php
modules/contrib/tamper/src/Plugin/Tamper/ConvertCase.php
modules/contrib/tamper/src/Plugin/Tamper/Copy.php
modules/contrib/tamper/src/Plugin/Tamper/CountryToCode.php
modules/contrib/tamper/src/Plugin/Tamper/DefaultValue.php
modules/contrib/tamper/src/Plugin/Tamper/Encode.php
modules/contrib/tamper/src/Plugin/Tamper/Explode.php
modules/contrib/tamper/src/Plugin/Tamper/FindReplace.php
modules/contrib/tamper/src/Plugin/Tamper/FindReplaceRegex.php
modules/contrib/tamper/src/Plugin/Tamper/Hash.php
modules/contrib/tamper/src/Plugin/Tamper/HtmlEntityDecode.php
modules/contrib/tamper/src/Plugin/Tamper/HtmlEntityEncode.php
modules/contrib/tamper/src/Plugin/Tamper/Implode.php
modules/contrib/tamper/src/Plugin/Tamper/KeywordFilter.php
modules/contrib/tamper/src/Plugin/Tamper/Math.php
modules/contrib/tamper/src/Plugin/Tamper/NumberFormat.php
modules/contrib/tamper/src/Plugin/Tamper/Required.php
modules/contrib/tamper/src/Plugin/Tamper/Rewrite.php
modules/contrib/tamper/src/Plugin/Tamper/Sprintf.php
modules/contrib/tamper/src/Plugin/Tamper/StateToAbbrev.php
modules/contrib/tamper/src/Plugin/Tamper/StrPad.php
modules/contrib/tamper/src/Plugin/Tamper/StrToTime.php
modules/contrib/tamper/src/Plugin/Tamper/StripTags.php
modules/contrib/tamper/src/Plugin/Tamper/TimeToDate.php
modules/contrib/tamper/src/Plugin/Tamper/Transliteration.php
modules/contrib/tamper/src/Plugin/Tamper/Trim.php
modules/contrib/tamper/src/Plugin/Tamper/TruncateText.php
modules/contrib/tamper/src/Plugin/Tamper/Unique.php
modules/contrib/tamper/src/Plugin/Tamper/UrlDecode.php
modules/contrib/tamper/src/Plugin/Tamper/UrlEncode.php
modules/contrib/tamper/src/SourceDefinition.php
modules/contrib/tamper/src/SourceDefinitionInterface.php
modules/contrib/tamper/src/TamperBase.php
modules/contrib/tamper/src/TamperInterface.php
modules/contrib/tamper/src/TamperItem.php
modules/contrib/tamper/src/TamperManager.php
modules/contrib/tamper/src/TamperManagerInterface.php
modules/contrib/tamper/src/TamperPluginCollection.php
modules/contrib/tamper/src/TamperableItemInterface.php
modules/contrib/tamper/tests/src/Kernel/ChainedTamperTest.php
modules/contrib/tamper/tests/src/Kernel/TamperConfigSchemaTest.php
modules/contrib/tamper/tests/src/Unit/Adapter/TamperableComplexDataAdapterTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/ArrayFilterTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/CastToIntTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/ConvertBooleanTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/ConvertCaseTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/CopyTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/CountryToCodeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/DefaultValueTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/EncodeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/ExplodeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/FindReplaceRegexTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/FindReplaceTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/HashTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/HtmlEntityDecodeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/HtmlEntityEncodeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/ImplodeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/KeywordFilterTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/MathTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/NumberFormatTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/RequiredTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/RewriteTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/SprintfTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/StateToAbbrevTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/StrPadTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/StrToTimeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/StripTagsTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/TamperPluginTestBase.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/TimeToDateTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/TransliterationTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/TrimTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/TruncateTextTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/UniqueTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/UrlDecodeTest.php
modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/UrlEncodeTest.php

18 files with changes
=====================

1) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/TransliterationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;

+use Drupal\Component\Transliteration\TransliterationInterface;
 use Drupal\tamper\Plugin\Tamper\Transliteration;
 use Drupal\Component\Transliteration\PhpTransliteration;

@@ @@
   /**
    * A transliteration instance.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/TamperPluginTestBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;

+use Drupal\tamper\TamperInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\TranslationInterface;
 use Drupal\tamper\SourceDefinitionInterface;
@@ @@
   /**
    * The tamper plugin under test.
    *
-   * @var \Drupal\tamper\TamperInterface
+   * @var TamperInterface
    */
   protected $plugin;

@@ @@
   /**
    * Instantiates a plugin.
    *
-   * @return \Drupal\tamper\TamperInterface
+   * @return TamperInterface
    *   A tamper plugin.
    */
   abstract protected function instantiatePlugin();
@@ @@
   /**
    * Returns a mocked source definition.
    *
-   * @return \Drupal\tamper\SourceDefinitionInterface
+   * @return SourceDefinitionInterface
    *   A source definition.
    */
   protected function getMockSourceDefinition() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/RewriteTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\tamper\Plugin\Tamper\Rewrite;
 use Drupal\tamper\TamperableItemInterface;

@@ @@
   /**
    * Get a mock item to use in the test.
    *
-   * @return \Drupal\tamper\TamperableItemInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @return TamperableItemInterface|MockObject
    *   The mock of a tamperable item to use in the test.
    */
   protected function getMockItem() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/RequiredTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;

+use Drupal\tamper\TamperInterface;
 use Drupal\tamper\Exception\SkipTamperItemException;
 use Drupal\tamper\Plugin\Tamper\Required;

@@ @@
   /**
    * Instantiates a plugin.
    *
-   * @return \Drupal\tamper\TamperInterface
+   * @return TamperInterface
    *   A tamper plugin.
    */
   protected function instantiatePlugin() {
@@ @@
   /**
    * Plugin instance, configured to require empty values.
    *
-   * @var \Drupal\tamper\Plugin\Tamper\Required
+   * @var Required
    */
   protected $invertedPlugin;

@@ @@
   /**
    * Get a plugin configured to require items.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Required
+   * @return Required
    *   Plugin instance.
    */
   protected function getRequiredPlugin() {
@@ @@
   /**
    * Get a plugin configured to require empty items.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Required
+   * @return Required
    *   Plugin instance.
    */
   protected function getInvertedPlugin() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/HashTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tamper\Unit\Plugin\Tamper;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\tamper\Exception\TamperException;
 use Drupal\tamper\Plugin\Tamper\Hash;
 use Drupal\tamper\TamperableItemInterface;
@@ @@
   /**
    * Get a mock item to use in the test.
    *
-   * @return \Drupal\tamper\TamperableItemInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @return TamperableItemInterface|MockObject
    *   The mock of a tamperable item to use in the test.
    */
   protected function getMockItem() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


6) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/ExplodeTest.php:60

    ---------- begin diff ----------
@@ @@
   /**
    * Returns default configuration for the plugin for this test.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Explode
+   * @return Explode
    *   A explode tamper plugin instance.
    */
   protected function getPluginDefaultConfig() {
@@ @@
   /**
    * Returns default limit setting for the plugin for this test.
    *
-   * @return \Drupal\tamper\Plugin\Tamper\Explode
+   * @return Explode
    *   A explode tamper plugin instance.
    */
   protected function getPluginWithLimit() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


7) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/CountryToCodeTest.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The mock country manager object.
    *
-   * @var \Drupal\Core\Locale\CountryManagerInterface
+   * @var CountryManagerInterface
    */
   protected $countryManagerMock;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/tamper/tests/src/Unit/Plugin/Tamper/CopyTest.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Get a tamper item to use in the test.
    *
-   * @return \Drupal\tamper\TamperItem
+   * @return TamperItem
    *   The tamperable item to use in the test.
    */
   protected function getTamperItem() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


9) modules/contrib/tamper/tests/src/Unit/Adapter/TamperableComplexDataAdapterTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tamper\Unit\Adapter;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\TypedData\ComplexDataInterface;
 use Drupal\tamper\Adapter\TamperableComplexDataAdapter;
 use Drupal\Tests\UnitTestCase;
@@ @@
   /**
    * Complex data object.
    *
-   * @var \Drupal\Core\TypedData\ComplexDataInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var ComplexDataInterface|MockObject
    */
   protected $complexData;

@@ @@
   /**
    * Adapter for the complex data.
    *
-   * @var \Drupal\tamper\Adapter\TamperableComplexDataAdapter
+   * @var TamperableComplexDataAdapter
    */
   protected $adapter;

@@ @@

   /**
    * @covers ::getSource
+   * @doesNotPerformAssertions
    */
   public function testGetSource() {
     $this->complexData->expects($this->once())
@@ @@

   /**
    * @covers ::getSourceProperty
+   * @doesNotPerformAssertions
    */
   public function testGetSourceProperty() {
     $this->complexData->expects($this->once())
@@ @@

   /**
    * @covers ::setSourceProperty
+   * @doesNotPerformAssertions
    */
   public function testSetSourceProperty() {
     $this->complexData->expects($this->once())
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/tamper/tests/src/Kernel/TamperConfigSchemaTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\tamper\Kernel;

+use Drupal\entity_test\Entity\EntityTestWithBundle;
 use Drupal\entity_test\Entity\EntityTestBundle;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\tamper\SourceDefinition;
@@ @@
   /**
    * The config entity to add third party settings to.
    *
-   * @var \Drupal\entity_test\Entity\EntityTestWithBundle
+   * @var EntityTestWithBundle
    */
   protected $entity;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/tamper/src/TamperPluginCollection.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * A definition of which sources there are that Tamper plugins can use.
    *
-   * @var \Drupal\tamper\SourceDefinitionInterface
+   * @var SourceDefinitionInterface
    */
   protected $sourceDefinition;

@@ @@
   /**
    * Constructs a new TamperPluginCollection object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $manager
+   * @param PluginManagerInterface $manager
    *   The manager to be used for instantiating plugins.
-   * @param \Drupal\tamper\SourceDefinitionInterface $source_definition
+   * @param SourceDefinitionInterface $source_definition
    *   A definition of which sources there are that Tamper plugins can use.
    * @param array $configurations
    *   (optional) An associative array containing the initial configuration for
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/tamper/src/TamperManager.php:17

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\tamper\TamperInterface[]
+   * @return TamperInterface[]
    *   List of tamper plugins.
    */
   public function getSortedDefinitions(array $definitions = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/tamper/src/TamperInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tamper;

+use Drupal\tamper\Exception\TamperException;
+use Drupal\tamper\Exception\SkipTamperDataException;
+use Drupal\tamper\Exception\SkipTamperItemException;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Plugin\PluginFormInterface;
@@ @@
    *
    * @param mixed $data
    *   The data to tamper.
-   * @param \Drupal\tamper\TamperableItemInterface $item
+   * @param TamperableItemInterface $item
    *   Item that can be tampered as part of a plugin's execution.
    *
    * @return mixed
    *   The tampered data.
    *
-   * @throws \Drupal\tamper\Exception\TamperException
+   * @throws TamperException
    *   When the plugin can not tamper the given data.
-   * @throws \Drupal\tamper\Exception\SkipTamperDataException
+   * @throws SkipTamperDataException
    *   When the calling tamper process should be skipped for the given data.
-   * @throws \Drupal\tamper\Exception\SkipTamperItemException
+   * @throws SkipTamperItemException
    *   When the calling tamper process should be skipped for the given item.
    */
   public function tamper($data, TamperableItemInterface $item = NULL);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


14) modules/contrib/tamper/src/TamperBase.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The source definition.
    *
-   * @var \Drupal\tamper\SourceDefinitionInterface
+   * @var SourceDefinitionInterface
    */
   protected $sourceDefinition;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\tamper\SourceDefinitionInterface $source_definition
+   * @param SourceDefinitionInterface $source_definition
    *   A definition of which sources there are that Tamper plugins can use.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, SourceDefinitionInterface $source_definition) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/tamper/src/Plugin/Tamper/Transliteration.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The transliteration service.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;

@@ @@
    *   The plugin definition.
    * @param mixed $source_definition
    *   A definition of which sources there are that Tamper plugins can use.
-   * @param \Drupal\Component\Transliteration\TransliterationInterface $transliteration
+   * @param TransliterationInterface $transliteration
    *   The transliteration service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, $source_definition, TransliterationInterface $transliteration) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/tamper/src/Plugin/Tamper/CountryToCode.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tamper\Plugin\Tamper;

+use Drupal\Core\Locale\CountryManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\tamper\Exception\TamperException;
 use Drupal\tamper\TamperableItemInterface;
@@ @@
   /**
    * Holds the CountryManager object so we can grab the country list.
    *
-   * @var \Drupal\Core\Locale\CountryManagerInterface
+   * @var CountryManagerInterface
    */
   protected $countryManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/tamper/src/Annotation/Tamper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\tamper\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name of the tamper plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * A short description of the tamper plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * The category under which the tamper plugin should be listed in the UI.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


18) modules/contrib/tamper/src/Adapter/TamperableComplexDataAdapter.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * Typed complex data object.
    *
-   * @var \Drupal\Core\TypedData\ComplexDataInterface
+   * @var ComplexDataInterface
    */
   protected $complexData;

@@ @@
   /**
    * Create a new instance of the adapter.
    *
-   * @param \Drupal\Core\TypedData\ComplexDataInterface $complexData
+   * @param ComplexDataInterface $complexData
    *   Typed complex data object.
    */
   public function __construct(ComplexDataInterface $complexData) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 18 files have been changed by Rector                                      

