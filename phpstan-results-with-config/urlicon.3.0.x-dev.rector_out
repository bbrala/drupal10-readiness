modules/contrib/urlicon/src/BaseFilter.php
modules/contrib/urlicon/src/ClassFilter.php
modules/contrib/urlicon/src/FaviconFilter.php
modules/contrib/urlicon/src/FilterInterface.php
modules/contrib/urlicon/src/IconFilter.php
modules/contrib/urlicon/src/Plugin/Filter/Urlicon.php
modules/contrib/urlicon/urlicon.module

2 files with changes
====================

1) modules/contrib/urlicon/src/IconFilter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\urlicon;

+use Drupal\Core\File\FileSystem;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Template\Attribute;

@@ @@
    * {@inheritdoc}
    */
   protected static function callback(array $matches):string {
-    /** @var \Drupal\Core\File\FileSystem $file_system */
+    /** @var FileSystem $file_system */
     $file_system = \Drupal::service('file_system');
     if (!file_exists('public://urlicon/')) {
       $file_system->mkdir('public://urlicon/');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/urlicon/src/FaviconFilter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\urlicon;

+use Drupal\Core\File\FileSystem;
+use Drupal\file\FileRepository;
+use GuzzleHttp\Client;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Template\Attribute;
@@ @@
     $hostname = parse_url($matches[1], PHP_URL_HOST);
     $host = Html::escape(str_replace('.', '-', $hostname));

-    /** @var \Drupal\Core\File\FileSystem $file_system */
+    /** @var FileSystem $file_system */
     $file_system = \Drupal::service('file_system');
     if (!file_exists('public://urlicon/')) {
       $file_system->mkdir('public://urlicon/');
     }

-    /** @var \Drupal\file\FileRepository $file_service */
+    /** @var FileRepository $file_service */
     $file_service = \Drupal::service('file.repository');

     // The default favicon.
@@ @@
    * @param string $host
    *   The hostname.
    *
-   * @return \Drupal\file\Entity\File|false
+   * @return File|false
    *   The favicon file or false.
    */
   private static function fetchFavicon(string $host):File|FALSE {
-    /** @var \GuzzleHttp\Client $http_client */
+    /** @var Client $http_client */
     $http_client = \Drupal::service('http_client');
-    /** @var \Drupal\file\FileRepository $file_service */
+    /** @var FileRepository $file_service */
     $file_service = \Drupal::service('file.repository');

     // Check for favicon in link tags.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 2 files have been changed by Rector                                       

