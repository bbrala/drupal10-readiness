diff --git a/fotorama_gallery.info.yml b/fotorama_gallery.info.yml
index 0463068..553b45c 100644
--- a/fotorama_gallery.info.yml
+++ b/fotorama_gallery.info.yml
@@ -1,8 +1,7 @@
 name: "Fotorama Gallery"
 type: module
 description: "Add new format display to image field using the fotorama library."
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Field formatter
 dependencies:
   - drupal:image
diff --git a/fotorama_gallery.install b/fotorama_gallery.install
index b7167ae..6cd56ca 100644
--- a/fotorama_gallery.install
+++ b/fotorama_gallery.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Asset\LibraryDiscovery;
 /**
  * @file
  * Installation actions for Fotorama Gallery.
@@ -42,7 +43,7 @@ function fotorama_gallery_requirements($phase) {
  * @see https://drupal.org/node/2231385
  */
 function _fotorama_gallery_verify_library() {
-  /** @var Drupal\Core\Asset\LibraryDiscovery $library_discovery */
+  /** @var LibraryDiscovery $library_discovery */
   $library_discovery = \Drupal::service('library.discovery');
   $library = $library_discovery->getLibraryByName('fotorama_gallery', 'fotorama');
 
diff --git a/src/Plugin/Field/FieldFormatter/FotoramaGalleryFormatter.php b/src/Plugin/Field/FieldFormatter/FotoramaGalleryFormatter.php
index 92e3d33..ef6d5a1 100644
--- a/src/Plugin/Field/FieldFormatter/FotoramaGalleryFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FotoramaGalleryFormatter.php
@@ -596,7 +596,7 @@ class FotoramaGalleryFormatter extends ImageFormatter {
 
       $image_uri = $file->getFileUri();
 
-      $url = $image_style ? $image_style->buildUrl($image_uri) : file_create_url($image_uri);
+      $url = $image_style ? $image_style->buildUrl($image_uri) : \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
 
       $image_url = Url::fromUri($url);
 
diff --git a/tests/src/FunctionalJavascript/FotoramaGalleryImageFieldCreationTrait.php b/tests/src/FunctionalJavascript/FotoramaGalleryImageFieldCreationTrait.php
index c72ee07..97c765d 100644
--- a/tests/src/FunctionalJavascript/FotoramaGalleryImageFieldCreationTrait.php
+++ b/tests/src/FunctionalJavascript/FotoramaGalleryImageFieldCreationTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\fotorama_gallery\FunctionalJavascript;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 
@@ -30,10 +32,10 @@ trait FotoramaGalleryImageFieldCreationTrait {
    * @param string $description
    *   (optional) A description for the field.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|static
+   * @return EntityInterface|static
    *   A new entity object.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function createImageField($name, $type_name, array $storage_settings = [], array $field_settings = [], array $widget_settings = [], array $formatter_settings = [], $description = '') {
     FieldStorageConfig::create([
diff --git a/tests/src/FunctionalJavascript/FotoramaGalleryTest.php b/tests/src/FunctionalJavascript/FotoramaGalleryTest.php
index 5bc137d..7086b5c 100644
--- a/tests/src/FunctionalJavascript/FotoramaGalleryTest.php
+++ b/tests/src/FunctionalJavascript/FotoramaGalleryTest.php
@@ -32,7 +32,7 @@ class FotoramaGalleryTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create a user with permissions to manage.
