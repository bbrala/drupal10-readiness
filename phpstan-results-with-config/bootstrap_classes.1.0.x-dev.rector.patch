diff --git a/modules/block/bootstrap_classes_block.module b/modules/block/bootstrap_classes_block.module
index d4ab7f5..9666492 100644
--- a/modules/block/bootstrap_classes_block.module
+++ b/modules/block/bootstrap_classes_block.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\block\BlockInterface;
+use Drupal\bootstrap_classes\BootstrapClassesInterface;
 /**
  * @file
  * Contains bootstrap_classes.module.
@@ -29,11 +31,11 @@ function bootstrap_classes_block_help($route_name, RouteMatchInterface $route_ma
  */
 function bootstrap_classes_block_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   if (!empty($form['third_party_settings']['block_class']['classes'])) {
-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $block = $form_state->getFormObject()->getEntity();
     $block_classes = $block->getThirdPartySetting('block_class', 'classes');
     $block_classes = array_filter(array_map('trim', explode(' ', $block_classes ?? '')));
-    /** @var \Drupal\bootstrap_classes\BootstrapClassesInterface $bootstrap_classes_service */
+    /** @var BootstrapClassesInterface $bootstrap_classes_service */
     $bootstrap_classes_service = \Drupal::service('bootstrap_classes');
     $classes = $bootstrap_classes_service->getSelectOptions();
     $flatten_classes = array_merge(...array_values($classes));
@@ -57,7 +59,7 @@ function bootstrap_classes_block_form_block_form_alter(&$form, FormStateInterfac
  * Submit handler.
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function bootstrap_classes_block_form_submit($form, FormStateInterface $form_state) {
   $block_classes = $form_state->getValue(['third_party_settings', 'block_class']);
diff --git a/modules/layout/bootstrap_classes_layout.module b/modules/layout/bootstrap_classes_layout.module
index 6430b24..16a5781 100644
--- a/modules/layout/bootstrap_classes_layout.module
+++ b/modules/layout/bootstrap_classes_layout.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\layout_builder\Form\ConfigureBlockFormBase;
+use Drupal\bootstrap_classes\BootstrapClassesInterface;
 /**
  * @file
  * Contains bootstrap_classes.module.
@@ -42,13 +44,13 @@ function bootstrap_classes_layout_form_layout_builder_update_block_alter(&$form,
  * Add boostrap classes element to the layout builder block forms.
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _bootstrap_classes_layout_layout_builder_block_form(&$form,  FormStateInterface $form_state) {
-  /** @var \Drupal\layout_builder\Form\ConfigureBlockFormBase $form_object */
+  /** @var ConfigureBlockFormBase $form_object */
   $form_object = $form_state->getFormObject();
   $component = $form_object->getCurrentComponent();
-  /** @var \Drupal\bootstrap_classes\BootstrapClassesInterface $bootstrap_classes_service */
+  /** @var BootstrapClassesInterface $bootstrap_classes_service */
   $bootstrap_classes_service = \Drupal::service('bootstrap_classes');
   $classes = $bootstrap_classes_service->getSelectOptions();
   $form['settings']['bootstrap_classes'] = [
@@ -66,10 +68,10 @@ function _bootstrap_classes_layout_layout_builder_block_form(&$form,  FormStateI
  * Custom submit handler for the layout builder block forms.
  *
  * @param array $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function bootstrap_classes_layout_submit_block_form(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\layout_builder\Form\ConfigureBlockFormBase $form_object */
+  /** @var ConfigureBlockFormBase $form_object */
   $form_object = $form_state->getFormObject();
   $component = $form_object->getCurrentComponent();
   if ($classes = $form_state->getValue(['settings', 'bootstrap_classes'])) {
@@ -83,7 +85,7 @@ function bootstrap_classes_layout_submit_block_form(array &$form, FormStateInter
  * Implements hook_bootstrap_layouts_class_options_alter().
  */
 function bootstrap_classes_layout_bootstrap_layouts_class_options_alter(&$classes, &$groups) {
-  /** @var \Drupal\bootstrap_classes\BootstrapClassesInterface $bootstrap_classes_service */
+  /** @var BootstrapClassesInterface $bootstrap_classes_service */
   $bootstrap_classes_service = \Drupal::service('bootstrap_classes');
   $classes = $bootstrap_classes_service->getClasses();
   $groups = $bootstrap_classes_service->getGroups();
diff --git a/modules/layout/src/EventSubscriber/BlockComponentRenderArray.php b/modules/layout/src/EventSubscriber/BlockComponentRenderArray.php
index 2325fda..b1914cc 100644
--- a/modules/layout/src/EventSubscriber/BlockComponentRenderArray.php
+++ b/modules/layout/src/EventSubscriber/BlockComponentRenderArray.php
@@ -22,7 +22,7 @@ class BlockComponentRenderArray implements EventSubscriberInterface {
   /**
    * Add bootstrap classes to the render array.
    *
-   * @param \Drupal\layout_builder\Event\SectionComponentBuildRenderArrayEvent $event
+   * @param SectionComponentBuildRenderArrayEvent $event
    *   The section component render event.
    */
   public function onBuildRender(SectionComponentBuildRenderArrayEvent $event) {
diff --git a/src/BootstrapClasses.php b/src/BootstrapClasses.php
index 13be4e9..1505fba 100644
--- a/src/BootstrapClasses.php
+++ b/src/BootstrapClasses.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\bootstrap_classes;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -16,22 +17,22 @@ class BootstrapClasses implements BootstrapClassesInterface {
   /**
    * The cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   private $config;
 
   /**
    * Constructs a new BootstrapClasses object.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_default
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param CacheBackendInterface $cache_default
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(CacheBackendInterface $cache_default, ConfigFactoryInterface $config_factory) {
     $this->cache = $cache_default;
diff --git a/src/Form/BootstrapClassesSettingsForm.php b/src/Form/BootstrapClassesSettingsForm.php
index bf25562..9f2e51b 100644
--- a/src/Form/BootstrapClassesSettingsForm.php
+++ b/src/Form/BootstrapClassesSettingsForm.php
@@ -17,16 +17,16 @@ class BootstrapClassesSettingsForm extends ConfigFormBase {
   /**
    * The cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   private $cache;
 
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_default
+   * @param CacheBackendInterface $cache_default
    *   The cache service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, CacheBackendInterface $cache_default) {
