diff --git a/src/Annotation/VideoFilter.php b/src/Annotation/VideoFilter.php
index e1f30ee..3a6a4a3 100644
--- a/src/Annotation/VideoFilter.php
+++ b/src/Annotation/VideoFilter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\video_filter\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -26,7 +27,7 @@ class VideoFilter extends Plugin {
   /**
    * The name of the codec.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Form/VideoFilterDialog.php b/src/Form/VideoFilterDialog.php
index 4adbd7e..c8e0b10 100644
--- a/src/Form/VideoFilterDialog.php
+++ b/src/Form/VideoFilterDialog.php
@@ -36,7 +36,7 @@ class VideoFilterDialog extends FormBase implements ContainerInjectionInterface
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\filter\Entity\FilterFormat $filter_format
+   * @param FilterFormat $filter_format
    *   The filter format for which this dialog corresponds.
    */
   public function buildForm(array $form, FormStateInterface $form_state, FilterFormat $filter_format = NULL) {
diff --git a/src/Plugin/CKEditorPlugin/VideoFilter.php b/src/Plugin/CKEditorPlugin/VideoFilter.php
index 2c7e5b4..31e4375 100644
--- a/src/Plugin/CKEditorPlugin/VideoFilter.php
+++ b/src/Plugin/CKEditorPlugin/VideoFilter.php
@@ -44,7 +44,7 @@ class VideoFilter extends PluginBase implements CKEditorPluginInterface, CKEdito
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'video_filter') . '/assets/video_filter.js';
+    return \Drupal::service('extension.list.module')->getPath('video_filter') . '/assets/video_filter.js';
   }
 
   /**
@@ -54,7 +54,7 @@ class VideoFilter extends PluginBase implements CKEditorPluginInterface, CKEdito
     return [
       'video_filter' => [
         'label' => t('Video Filter'),
-        'image' => drupal_get_path('module', 'video_filter') . '/assets/icon.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('video_filter') . '/assets/icon.png',
       ],
     ];
   }
diff --git a/src/VideoFilterBase.php b/src/VideoFilterBase.php
index e163bcf..5891595 100644
--- a/src/VideoFilterBase.php
+++ b/src/VideoFilterBase.php
@@ -112,7 +112,7 @@ class VideoFilterBase extends PluginBase implements VideoFilterInterface {
    */
   public function preview($video) {
     // Returns absolute URL to preview image.
-    return drupal_get_path('module', 'video_filter') . '/assets/preview.png';
+    return \Drupal::service('extension.list.module')->getPath('video_filter') . '/assets/preview.png';
   }
 
 }
diff --git a/src/VideoFilterManager.php b/src/VideoFilterManager.php
index 3c4fc03..2b2096b 100644
--- a/src/VideoFilterManager.php
+++ b/src/VideoFilterManager.php
@@ -19,9 +19,9 @@ class VideoFilterManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/tests/src/Functional/Basics.php b/tests/src/Functional/Basics.php
index 89a7b1c..b7e6d9d 100644
--- a/tests/src/Functional/Basics.php
+++ b/tests/src/Functional/Basics.php
@@ -34,10 +34,13 @@ class Basics extends BrowserTestBase {
   public function testFrontpage() {
     // Load the front page.
     $this->drupalGet('<front>');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // With nothing else configured the front page just has a login form.
-    $this->assertText('Enter your Drupal username.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Enter your Drupal username.');
   }
 
 }
