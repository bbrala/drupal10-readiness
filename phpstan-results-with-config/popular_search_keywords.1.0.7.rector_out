modules/contrib/popular_search_keywords/includes/views/popular_search_keywords.views.inc
modules/contrib/popular_search_keywords/includes/views/popular_search_keywords.views_default.inc
modules/contrib/popular_search_keywords/popular_search_keywords.install
modules/contrib/popular_search_keywords/popular_search_keywords.module
modules/contrib/popular_search_keywords/src/Form/FlushPopularSearchForm.php
modules/contrib/popular_search_keywords/src/Form/PopularSearchDeleteForm.php
modules/contrib/popular_search_keywords/src/Plugin/Block/PopularSearchBlock.php
modules/contrib/popular_search_keywords/src/Plugin/Derivative/PopularSearchBlock.php

5 files with changes
====================

1) modules/contrib/popular_search_keywords/src/Plugin/Derivative/PopularSearchBlock.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *
    * @param string $base_plugin_id
    *   The base plugin ID.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    */
   public function __construct($base_plugin_id, EntityTypeManagerInterface $entity_manager) {
@@ @@
   public function getDerivativeDefinitions($base_plugin_definition) {
     $this->derivatives = [];

-    /** @var \Drupal\search_api\Entity\Index[] $indexes */
+    /** @var Index[] $indexes */
     $indexes = Index::loadMultiple();
     foreach ($indexes as $key => $index) {
       $this->derivatives[$key] = $base_plugin_definition;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/popular_search_keywords/src/Plugin/Block/PopularSearchBlock.php:128

    ---------- begin diff ----------
@@ @@
   /**
    * Use the block derivative ID to retrieve the index object.
    *
-   * @return Drupal\search_api\Entity\Index
+   * @return Index
    *   The index object.
    */
   protected function getIndex() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/popular_search_keywords/src/Form/PopularSearchDeleteForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\popular_search_keywords\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Database\Connection;
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * FlushPopularSearchForm constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(Connection $connection, MessengerInterface $messenger) {
@@ @@
   /**
    * Returns the question to ask the user.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The form question. The page title will be set to this value.
    */
   public function getQuestion() {
@@ @@
   /**
    * Returns the route to go to if the user cancels the action.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   A URL object.
    */
   public function getCancelUrl() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/popular_search_keywords/src/Form/FlushPopularSearchForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * FlushPopularSearchForm constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(Connection $connection, MessengerInterface $messenger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/popular_search_keywords/popular_search_keywords.module:13

    ---------- begin diff ----------
@@ @@
  *
  * The hook is invoked after all enabled processors have preprocessed the query.
  *
- * @param \Drupal\search_api\Query\QueryInterface $query
+ * @param QueryInterface $query
  *   The query that will be executed.
  */
 function popular_search_keywords_search_api_query_alter(QueryInterface &$query) {
@@ @@
 function popular_search_keywords_views_api() {
   return [
     'api' => 3.0,
-    'path' => drupal_get_path('module', 'popular_search_keywords') . '/includes/views',
+    'path' => \Drupal::service('extension.list.module')->getPath('popular_search_keywords') . '/includes/views',
   ];
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

