modules/contrib/rebuilder/modules/rebuilder_ui/src/Form/RebuilderRunForm.php
modules/contrib/rebuilder/src/Annotation/Rebuilder.php
modules/contrib/rebuilder/src/Commands/ListCommand.php
modules/contrib/rebuilder/src/Commands/RunCommand.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/Asset.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/Container.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/Library.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/Plugin.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/RebuilderBase.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/RebuilderInterface.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/Router.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/Schema.php
modules/contrib/rebuilder/src/Plugin/Rebuilder/Twig.php
modules/contrib/rebuilder/src/PluginManager/RebuilderManager.php
modules/contrib/rebuilder/src/PluginManager/RebuilderManagerInterface.php
modules/contrib/rebuilder/tests/modules/rebuilder_test/src/Plugin/Rebuilder/TestHasCustomOutput.php
modules/contrib/rebuilder/tests/modules/rebuilder_test/src/Plugin/Rebuilder/TestHasDefaultOutput.php
modules/contrib/rebuilder/tests/src/Kernel/RebuilderManagerTest.php
modules/contrib/rebuilder/tests/src/Kernel/RebuilderPluginTest.php

17 files with changes
=====================

1) modules/contrib/rebuilder/tests/src/Kernel/RebuilderPluginTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\rebuilder\Kernel;

+use Drupal\Core\StringTranslation\TranslationInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\rebuilder\PluginManager\RebuilderManagerInterface;
@@ @@
    * this to null which will cause the test to fail due to a TypeError after
    * running.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface|null
+   * @var RebuilderManagerInterface|null
    *
    * @see \Drupal\KernelTests\KernelTestBase::tearDown()
    */
@@ @@

     parent::setUp();

-    /** @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface */
+    /** @var RebuilderManagerInterface */
     $this->rebuilderManager = $this->container->get('plugin.manager.rebuilder');

   }
@@ @@
    * @param string $pluginId
    *   The machine name of the Rebuilder plug-in to create an instance of.
    *
-   * @return \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface
+   * @return RebuilderInterface
    *   A Rebuilder plug-in instance.
    */
   protected function getRebuilderInstance(
@@ @@
    */
   public function testPluginDefaultOutput(): void {

-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_DEFAULT_OUTPUT_PLUGIN
     );

-    /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+    /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
     $output = $instance->getOutput();

     $this->assertInstanceOf(TranslatableMarkup::class, $output);
@@ @@
    */
   public function testPluginCustomOutput(): void {

-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_CUSTOM_OUTPUT_PLUGIN
     );

-    /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+    /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
     $output = $instance->getOutput();

     $this->assertInstanceOf(TranslatableMarkup::class, $output);
@@ @@
    */
   public function testSetValidOutput(): void {

-    /** @var \Drupal\Core\StringTranslation\TranslationInterface The Drupal string translation service. */
+    /** @var TranslationInterface The Drupal string translation service. */
     $stringTranslation = $this->container->get('string_translation');

-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_DEFAULT_OUTPUT_PLUGIN
     );
@@ @@
       'Custom output has been set.'
     ));

-    /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+    /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
     $output = $instance->getOutput();

     $this->assertInstanceOf(TranslatableMarkup::class, $output);
@@ @@
    */
   public function testSetInvalidOutput(): void {

-    /** @var \Drupal\rebuilder\Plugin\Rebuilder\RebuilderInterface */
+    /** @var RebuilderInterface */
     $instance = $this->getRebuilderInstance(
       self::REBUILDER_DEFAULT_OUTPUT_PLUGIN
     );
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/rebuilder/tests/src/Kernel/RebuilderManagerTest.php:22

    ---------- begin diff ----------
@@ @@
    * this to null which will cause the test to fail due to a TypeError after
    * running.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface|null
+   * @var RebuilderManagerInterface|null
    *
    * @see \Drupal\KernelTests\KernelTestBase::tearDown()
    */
@@ @@

     parent::setUp();

-    /** @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface */
+    /** @var RebuilderManagerInterface */
     $this->rebuilderManager = $this->container->get('plugin.manager.rebuilder');

   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/rebuilder/src/PluginManager/RebuilderManagerInterface.php:19

    ---------- begin diff ----------
@@ @@
    * @param array $rebuilderOptions
    *   Arbitrary options to pass to the Rebuilder plug-in instance.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The output from the Rebuilder plug-in.
    */
   public function runRebuilder(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/rebuilder/src/PluginManager/RebuilderManager.php:27

    ---------- begin diff ----------
@@ @@
    *   keyed by the corresponding namespace to look for plug-in
    *   implementations.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend instance to use.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/rebuilder/src/Plugin/Rebuilder/Twig.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The Drupal Twig environment service.
    *
-   * @var \Drupal\Core\Template\TwigEnvironment
+   * @var TwigEnvironment
    */
   protected TwigEnvironment $twigEnvironment;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Template\TwigEnvironment $twigEnvironment
+   * @param TwigEnvironment $twigEnvironment
    *   The Drupal Twig environment service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/rebuilder/src/Plugin/Rebuilder/Schema.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The Drupal typed config manager.
    *
-   * @var \Drupal\Core\Config\TypedConfigManagerInterface
+   * @var TypedConfigManagerInterface
    */
   protected TypedConfigManagerInterface $typedConfigManager;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typedConfigManager
+   * @param TypedConfigManagerInterface $typedConfigManager
    *   The Drupal typed config manager.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/rebuilder/src/Plugin/Rebuilder/Router.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The Drupal route builder service.
    *
-   * @var \Drupal\Core\Routing\RouteBuilderInterface
+   * @var RouteBuilderInterface
    */
   protected RouteBuilderInterface $routeBuilder;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Routing\RouteBuilderInterface $routeBuilder
+   * @param RouteBuilderInterface $routeBuilder
    *   The Drupal route builder service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/rebuilder/src/Plugin/Rebuilder/RebuilderInterface.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Set output for this plug-in instance.
    *
-   * @param \Drupal\Core\StringTranslation\TranslatableMarkup $output
+   * @param TranslatableMarkup $output
    *   A TranslatableMarkup object.
    */
   public function setOutput(TranslatableMarkup $output): void;
@@ @@
   /**
    * Get the output for this plug-in instance.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The output for this instance, as a TranslatableMarkup object.
    */
   public function getOutput(): TranslatableMarkup;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/rebuilder/src/Plugin/Rebuilder/RebuilderBase.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The output of this instance on a successful rebuild.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @var TranslatableMarkup
    */
   protected TranslatableMarkup $output;

@@ @@
    *   The plug-in implementation definition. PluginBase defines this as mixed,
    *   but we should always have an array so the type is specified.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The Drupal string translation service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/rebuilder/src/Plugin/Rebuilder/Plugin.php:39

    ---------- begin diff ----------
@@ @@
   /**
    * The current Drupal container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected ContainerInterface $container;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The current Drupal container.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/rebuilder/src/Plugin/Rebuilder/Library.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The Drupal library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected LibraryDiscoveryInterface $libraryDiscovery;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The Drupal library discovery service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/rebuilder/src/Plugin/Rebuilder/Container.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The Drupal kernel.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected DrupalKernelInterface $kernel;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   The Drupal kernel.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/rebuilder/src/Plugin/Rebuilder/Asset.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The Drupal CSS collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected AssetCollectionOptimizerInterface $cssCollectionOptimizer;

@@ @@
   /**
    * The Drupal JavaScript collection optimizer service.
    *
-   * @var \Drupal\Core\Asset\AssetCollectionOptimizerInterface
+   * @var AssetCollectionOptimizerInterface
    */
   protected AssetCollectionOptimizerInterface $jsCollectionOptimizer;

@@ @@
   /**
    * The Drupal library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   protected LibraryDiscoveryInterface $libraryDiscovery;

@@ @@
   /**
    * The Drupal state storage.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected StateInterface $state;

@@ @@
   /**
    * The Drupal time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $cssCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $cssCollectionOptimizer
    *   The Drupal CSS collection optimizer service.
    *
-   * @param \Drupal\Core\Asset\AssetCollectionOptimizerInterface $jsCollectionOptimizer
+   * @param AssetCollectionOptimizerInterface $jsCollectionOptimizer
    *   The Drupal JavaScript collection optimizer service.
    *
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The Drupal time service.
    *
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The Drupal library discovery service.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The Drupal state storage.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/rebuilder/src/Commands/RunCommand.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rebuilder\Commands;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\rebuilder\PluginManager\RebuilderManagerInterface;
 use Drush\Commands\DrushCommands;
 use Drush\Exceptions\CommandFailedException;
@@ @@
   /**
    * The Rebuilder plug-in manager.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface
+   * @var RebuilderManagerInterface
    */
   protected RebuilderManagerInterface $rebuilderManager;

@@ @@
   /**
    * Constructor; saves dependencies.
    *
-   * @param \Drupal\rebuilder\PluginManager\RebuilderManagerInterface $rebuilderManager
+   * @param RebuilderManagerInterface $rebuilderManager
    *   The Rebuilder plug-in manager.
    */
   public function __construct(RebuilderManagerInterface $rebuilderManager) {
@@ @@
    *   Options to pass to the Rebuilder plug-in. See each plug-in for what
    *   options they support, if any.
    *
-   * @throws \Drush\Exceptions\CommandFailedException
+   * @throws CommandFailedException
    *   If the Rebuilder plug-in manager threw an error, with the text of the
    *   error.
    */
@@ @@
     // phpcs:disable Drupal.ControlStructures.ControlSignature.NewlineAfterCloseBrace
     try {

-      /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+      /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
       $output = $this->rebuilderManager->runRebuilder(
         $rebuilderId, $options['option']
       );
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/rebuilder/src/Commands/ListCommand.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The Rebuilder plug-in manager.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface
+   * @var RebuilderManagerInterface
    */
   protected RebuilderManagerInterface $rebuilderManager;

@@ @@
   /**
    * Constructor; saves dependencies.
    *
-   * @param \Drupal\rebuilder\PluginManager\RebuilderManagerInterface $rebuilderManager
+   * @param RebuilderManagerInterface $rebuilderManager
    *   The Rebuilder plug-in manager.
    */
   public function __construct(RebuilderManagerInterface $rebuilderManager) {
@@ @@
    *
    * @command rebuilder:list
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\UnstructuredListData
+   * @return UnstructuredListData
    *   A list of Rebuilder type machine names.
    */
   public function listRebuilders(): UnstructuredListData {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/rebuilder/src/Annotation/Rebuilder.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The human readable title of the plug-in.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * A brief human readable description of the plug-in.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


17) modules/contrib/rebuilder/modules/rebuilder_ui/src/Form/RebuilderRunForm.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\rebuilder_ui\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ @@
   /**
    * The Rebuilder plug-in manager.
    *
-   * @var \Drupal\rebuilder\PluginManager\RebuilderManagerInterface
+   * @var RebuilderManagerInterface
    */
   protected RebuilderManagerInterface $rebuilderManager;

@@ @@
   /**
    * Constructor; saves dependencies.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The Drupal messenger service.
    *
-   * @param \Drupal\rebuilder\PluginManager\RebuilderManagerInterface $rebuilderManager
+   * @param RebuilderManagerInterface $rebuilderManager
    *   The Rebuilder plug-in manager.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The Drupal string translation service.
    */
   public function __construct(
@@ @@
    * @param array &$form
    *   An associative array containing the structure of the form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitRunRebuilder(
@@ @@
       /** @var array */
       $element = $form_state->getTriggeringElement();

-      /** @var \Drupal\Core\StringTranslation\TranslatableMarkup The output from the Rebuilder plug-in. */
+      /** @var TranslatableMarkup The output from the Rebuilder plug-in. */
       $output = $this->rebuilderManager->runRebuilder(
         $element['#rebuilder_id']
       );
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 17 files have been changed by Rector                                      

