modules/contrib/menu_admin_per_menu/menu_admin_per_menu.api.php
modules/contrib/menu_admin_per_menu/menu_admin_per_menu.install
modules/contrib/menu_admin_per_menu/menu_admin_per_menu.module
modules/contrib/menu_admin_per_menu/src/Access/MenuAdminPerMenuAccess.php
modules/contrib/menu_admin_per_menu/src/Controller/MenuAdminPerMenuController.php
modules/contrib/menu_admin_per_menu/src/MenuAdminPerMenuAccessInterface.php
modules/contrib/menu_admin_per_menu/src/MenuAdminPerMenuPermissions.php
modules/contrib/menu_admin_per_menu/src/Plugin/EntityReferenceSelection/MenuSelection.php
modules/contrib/menu_admin_per_menu/src/Routing/RouteSubscriber.php
modules/contrib/menu_admin_per_menu/tests/modules/menu_admin_per_menu_test/menu_admin_per_menu_test.module
modules/contrib/menu_admin_per_menu/tests/src/Functional/MenuAdminPerMenuEntityReferenceTest.php
modules/contrib/menu_admin_per_menu/tests/src/Functional/MenuAdminPerMenuMenuPagesTest.php
modules/contrib/menu_admin_per_menu/tests/src/Functional/MenuAdminPerMenuNodeFormTest.php
modules/contrib/menu_admin_per_menu/tests/src/Kernel/MenuAdminPerMenuAccessTest.php
modules/contrib/menu_admin_per_menu/tests/src/Kernel/MenuAdminPerMenuPermissionsTest.php
modules/contrib/menu_admin_per_menu/tests/src/Traits/MenuLinkContentTrait.php

11 files with changes
=====================

1) modules/contrib/menu_admin_per_menu/tests/src/Traits/MenuLinkContentTrait.php:21

    ---------- begin diff ----------
@@ @@
    *   An array of settings to change from the defaults.
    *   Example: 'menu_name' => 'foo'.
    *
-   * @return \Drupal\menu_link_content\MenuLinkContentInterface
+   * @return MenuLinkContentInterface
    *   The created menu link.
    */
   protected function createMenuContentLink(array $values = []): MenuLinkContentInterface {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/menu_admin_per_menu/tests/src/Kernel/MenuAdminPerMenuPermissionsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_admin_per_menu\Kernel;

+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\menu_admin_per_menu\MenuAdminPerMenuPermissions;

@@ @@
   /**
    * The menu admin per menu permission callback.
    *
-   * @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuPermissions
+   * @var MenuAdminPerMenuPermissions
    */
   protected $menuAdminPerMenuPermissions;

@@ @@
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/menu_admin_per_menu/tests/src/Kernel/MenuAdminPerMenuAccessTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_admin_per_menu\Kernel;

+use Drupal\System\MenuInterface;
+use Drupal\user\UserInterface;
+use Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
 use Drupal\Core\Access\AccessResultAllowed;
 use Drupal\Core\Access\AccessResultNeutral;
 use Drupal\Core\Session\AnonymousUserSession;
@@ @@
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu1;

@@ @@
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu2;

@@ @@
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu3;

@@ @@
    *
    * An anonymous user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $anonymousUser;

@@ @@
    *
    * An authenticated user without any of the administer menu permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $authenticatedUser;

@@ @@
    *
    * An admin user.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
    *
    * This user has the 'administer menu' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminMenuUser;

@@ @@
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;

@@ @@
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;

@@ @@
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;

@@ @@
   /**
    * The allowed menus provider.
    *
-   * @var \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess
+   * @var MenuAdminPerMenuAccess
    */
   protected $menuAdminPerMenuAllowedMenus;

@@ @@
   /**
    * The menu link content storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuLinkContentStorage;

@@ @@
   /**
    * The menu link manager.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;

@@ @@
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/menu_admin_per_menu/tests/src/Functional/MenuAdminPerMenuNodeFormTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_admin_per_menu\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;

 /**
@@ @@
   /**
    * A user with permission to create nodes but not administer menu.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $contentOnlyUser;

@@ @@
   /**
    * A user with permission to create nodes and administer menu.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $contentAndMenuUser;

@@ @@
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;

@@ @@
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;

@@ @@
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/menu_admin_per_menu/tests/src/Functional/MenuAdminPerMenuMenuPagesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_admin_per_menu\Functional;

+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
+use Drupal\System\MenuInterface;
+use Drupal\user\UserInterface;
 use Drupal\language\Entity\ConfigurableLanguage;
 use Drupal\language\Entity\ContentLanguageSettings;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   /**
    * The menu storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuStorage;

@@ @@
   /**
    * The menu link content storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuLinkContentStorage;

@@ @@
   /**
    * The menu link manager.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;

@@ @@
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu1;

@@ @@
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu2;

@@ @@
   /**
    * A menu entity.
    *
-   * @var \Drupal\System\MenuInterface
+   * @var MenuInterface
    */
   protected $menu3;

@@ @@
    *
    * An authenticated user without any of the administer menu permissions.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $authenticatedUser;

@@ @@
    *
    * This user has the 'administer menu' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminMenuUser;

@@ @@
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;

@@ @@
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;

@@ @@
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/menu_admin_per_menu/tests/src/Functional/MenuAdminPerMenuEntityReferenceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_admin_per_menu\Functional;

+use Drupal\user\UserInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\field\Traits\EntityReferenceTestTrait;
@@ @@
    *
    * This user has the 'administer menu' permission.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminMenuUser;

@@ @@
    *
    * This user has the 'administer menu_1 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu1User;

@@ @@
    *
    * This user has the 'administer menu_2 permissions'.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu2User;

@@ @@
    * hook_menu_admin_per_menu_get_permissions_alter that is provided in the
    * test module.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $menu3User;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/menu_admin_per_menu/src/Plugin/EntityReferenceSelection/MenuSelection.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The allowed menu service.
    *
-   * @var \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess
+   * @var MenuAdminPerMenuAccess
    */
   protected $allowedMenuService;

@@ @@
   /**
    * Set the allowed menu service.
    *
-   * @param \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess $allowed_menu_service
+   * @param MenuAdminPerMenuAccess $allowed_menu_service
    *   The allowed menu service.
    *
    * @return $this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/menu_admin_per_menu/src/MenuAdminPerMenuAccessInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_admin_per_menu;

+use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Menu\MenuLinkInterface;
 use Drupal\menu_link_content\Entity\MenuLinkContent;
@@ @@
   /**
    * Return array of all specific menu permissions.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user object for the user whose menu access is being checked.
    *
    * @return array
@@ @@
   /**
    * A custom access check for menu overview page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menusOverviewAccess(AccountInterface $account);
@@ @@
   /**
    * A custom access check for menu page and add link page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\system\Entity\Menu $menu
+   * @param Menu $menu
    *   Run access checks for this menu object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menuAccess(AccountInterface $account, Menu $menu);
@@ @@
   /**
    * A custom access check for menu items page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\menu_link_content\Entity\MenuLinkContent $menu_link_content
+   * @param MenuLinkContent $menu_link_content
    *   Run access checks for this menu item object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menuItemAccess(AccountInterface $account, MenuLinkContent $menu_link_content = NULL);
@@ @@
   /**
    * A custom access check for menu link page.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   Run access checks for this account.
-   * @param \Drupal\Core\Menu\MenuLinkInterface $menu_link_plugin
+   * @param MenuLinkInterface $menu_link_plugin
    *   Run access checks for this menu link object.
    *
-   * @return \Drupal\Core\Access\AccessResult
+   * @return AccessResult
    *   The access result.
    */
   public function menuLinkAccess(AccountInterface $account, MenuLinkInterface $menu_link_plugin = NULL);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/menu_admin_per_menu/src/Controller/MenuAdminPerMenuController.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The allowed menus provider.
    *
-   * @var \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess
+   * @var MenuAdminPerMenuAccess
    */
   protected $allowedMenusService;

@@ @@
   /**
    * Constructs a new MenuAdminPerMenu instance.
    *
-   * @param \Drupal\menu_admin_per_menu\Access\MenuAdminPerMenuAccess $allowed_menus
+   * @param MenuAdminPerMenuAccess $allowed_menus
    *   The check provider.
    */
   public function __construct(MenuAdminPerMenuAccess $allowed_menus) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/menu_admin_per_menu/menu_admin_per_menu.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface;
+use Drupal\field\FieldStorageConfigInterface;
 /**
  * @file
  * Module file for menu_admin_per_menu.
@@ @@
 function menu_admin_per_menu_form_node_form_alter(&$form, FormStateInterface $form_state) {
   $account = \Drupal::currentUser();
   if (isset($form['menu']['link']['menu_parent']) && !$account->hasPermission('administer menu')) {
-    /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+    /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
     $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
     $allowed_menus = $allowedMenusService->getPerMenuPermissions($account);

@@ @@
 /**
  * Removes menu items for menus a user does not have permission to access.
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The user to check for access.
  * @param array $options
  *   An array of menu item labels keyed by menu item ID.
@@ @@
  *   Filtered menu item labels keyed by menu item ID.
  */
 function menu_admin_per_menu_filter_parent_options(AccountInterface $account, array $options) {
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   $allowed_menus = $allowedMenusService->getPerMenuPermissions($account);

@@ @@
  * Implements hook_ENTITY_TYPE_access() for entity type "menu_link_content".
  */
 function menu_admin_per_menu_menu_link_content_access(EntityInterface $entity, $operation, AccountInterface $account) {
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   return $allowedMenusService->menuItemAccess($account, $entity);
 }
@@ @@
     return;
   }

-  /** @var \Drupal\field\FieldStorageConfigInterface $field_storage_config */
+  /** @var FieldStorageConfigInterface $field_storage_config */
   $field_storage_config = $context['items']->getFieldDefinition()->getFieldStorageDefinition();
   if ($field_storage_config->getType() !== 'entity_reference' || $field_storage_config->getSetting('target_type') !== 'menu') {
     return;
@@ @@
   }

   $access = TRUE;
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   $allowed_menus = $allowedMenusService->getPerMenuPermissions($account);
   foreach ($context['items'] as $field_value) {
@@ @@
  * the given menu.
  */
 function menu_admin_per_menu_entity_operation_alter(array &$operations, EntityInterface $entity) {
-  /** @var \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface $allowedMenusService */
+  /** @var MenuAdminPerMenuAccessInterface $allowedMenusService */
   $allowedMenusService = \Drupal::service('menu_admin_per_menu.allowed_menus');
   $account = \Drupal::currentUser();
   if (!$entity instanceof Menu || !$allowedMenusService->menuAccess($account, $entity)->isAllowed()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


11) modules/contrib/menu_admin_per_menu/menu_admin_per_menu.api.php:10

    ---------- begin diff ----------
@@ @@
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter the menus for which a user has per menu admin permissions.
  *
@@ @@
  *   The $perm_menus array returned by getPerMenuPermissions()
  *   for a user account. Values in array are menu machine names and keys are
  *   permission name for appropriate menu.
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The user account object.
  *
  * @see \Drupal\menu_admin_per_menu\MenuAdminPerMenuAccessInterface::getPerMenuPermissions()
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 11 files have been changed by Rector                                      

