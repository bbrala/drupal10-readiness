diff --git a/modules/user_action_log_group/src/Plugin/views/filter/UserActionLogCurrentGroup.php b/modules/user_action_log_group/src/Plugin/views/filter/UserActionLogCurrentGroup.php
index 30eb656..ae8ba07 100644
--- a/modules/user_action_log_group/src/Plugin/views/filter/UserActionLogCurrentGroup.php
+++ b/modules/user_action_log_group/src/Plugin/views/filter/UserActionLogCurrentGroup.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\user_action_log_group\Plugin\views\filter;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\filter\FilterPluginBase;
 
@@ -21,7 +23,7 @@ class UserActionLogCurrentGroup extends FilterPluginBase {
 
   /**
    * @param $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   protected function operatorForm(&$form, FormStateInterface $form_state) {}
 
@@ -33,8 +35,8 @@ class UserActionLogCurrentGroup extends FilterPluginBase {
   }
 
   /**
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function query() {
     $table = $this->ensureMyTable();
diff --git a/src/Controller/UserActionController.php b/src/Controller/UserActionController.php
index 2aff62b..8ccbd3a 100644
--- a/src/Controller/UserActionController.php
+++ b/src/Controller/UserActionController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\user_action_log\Controller;
 
+use Drupal\Core\Database\Connection;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Controller\ControllerBase;
 
 /**
@@ -10,7 +13,7 @@ use Drupal\Core\Controller\ControllerBase;
 class UserActionController extends ControllerBase {
 
   /**
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -24,7 +27,7 @@ class UserActionController extends ControllerBase {
   /**
    * Prepares an entity for logging
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    * @param $operation
    */
   public function prepareEntityForActionLog($entity, $operation) {
@@ -64,7 +67,7 @@ class UserActionController extends ControllerBase {
    * @param null $entity_type
    * @param null $bundle
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|null
+   * @return StatementInterface|int|null
    * @throws \Exception
    */
   public function logAction($uid, $operation, $entity_id = NULL, $entity_type = NULL, $bundle = NULL) {
diff --git a/src/Plugin/views/field/UserActionLogEntityLabel.php b/src/Plugin/views/field/UserActionLogEntityLabel.php
index 6d6f78b..9875615 100644
--- a/src/Plugin/views/field/UserActionLogEntityLabel.php
+++ b/src/Plugin/views/field/UserActionLogEntityLabel.php
@@ -43,7 +43,7 @@ class UserActionLogEntityLabel extends FieldPluginBase {
    * Provide the options form.
    *
    * @param $form
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    */
   public function buildOptionsForm(&$form, FormStateInterface $form_state) {
     parent::buildOptionsForm($form, $form_state);
@@ -52,7 +52,7 @@ class UserActionLogEntityLabel extends FieldPluginBase {
   /**
    * @{inheritdoc}
    *
-   * @param \Drupal\views\ResultRow $values
+   * @param ResultRow $values
    *
    * @return string
    */
@@ -69,7 +69,7 @@ class UserActionLogEntityLabel extends FieldPluginBase {
   /**
    * Check on permission.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *
    * @return bool|mixed
    */
diff --git a/user_action_log.module b/user_action_log.module
index 4d72309..dbd29e0 100644
--- a/user_action_log.module
+++ b/user_action_log.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\user\UserInterface;
 use Drupal\user_action_log\Controller\UserActionController;
@@ -7,7 +8,7 @@ use Drupal\user_action_log\Controller\UserActionController;
 /**
  * Implements hook_user_login().
  *
- * @param \Drupal\user\UserInterface $account
+ * @param UserInterface $account
  *
  * @throws \Exception
  */
@@ -20,7 +21,7 @@ function user_action_log_user_login(UserInterface $account) {
 /**
  * Implements hook_user_logout().
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *
  * @throws \Exception
  */
@@ -33,9 +34,9 @@ function user_action_log_user_logout(AccountInterface $account) {
 /**
  * Implements hook_entity_insert().
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  */
-function user_action_log_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
+function user_action_log_entity_insert(EntityInterface $entity) {
   $user_action_controller = new UserActionController();
   $user_action_controller->prepareEntityForActionLog($entity, 'insert');
 }
@@ -43,9 +44,9 @@ function user_action_log_entity_insert(Drupal\Core\Entity\EntityInterface $entit
 /**
  * Implements hook_entity_update().
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  */
-function user_action_log_entity_update(Drupal\Core\Entity\EntityInterface $entity) {
+function user_action_log_entity_update(EntityInterface $entity) {
   $user_action_controller = new UserActionController();
   $user_action_controller->prepareEntityForActionLog($entity, 'update');
 }
@@ -62,4 +63,4 @@ function user_action_log_views_data_alter(array &$data) {
       'id' => 'user_action_log_entity_label',
     ),
   );
-}
\ No newline at end of file
+}
