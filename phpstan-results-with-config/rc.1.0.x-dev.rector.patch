diff --git a/modules/rc_group/rc_group.install b/modules/rc_group/rc_group.install
index f03c7ef..b0caad6 100644
--- a/modules/rc_group/rc_group.install
+++ b/modules/rc_group/rc_group.install
@@ -1,11 +1,12 @@
 <?php
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\field\Entity\FieldConfig;
 
 /**
  * Implements hook_uninstall().
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function rc_group_uninstall($is_syncing) {
 
diff --git a/modules/rc_group/rc_group.module b/modules/rc_group/rc_group.module
index 65c019e..93297b1 100644
--- a/modules/rc_group/rc_group.module
+++ b/modules/rc_group/rc_group.module
@@ -18,7 +18,7 @@ use Drupal\Core\Routing\RouteMatchInterface;
 
 /**
  * @param $route_name
- * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+ * @param RouteMatchInterface $route_match
  *
  * @return string|void
  */
@@ -73,7 +73,7 @@ function rc_group_theme($existing, $type, $theme, $path): array {
  * This is used to manage the creation of chat channels when new group is added
  * according to the Groups Chat settings.
  *
- * @param \Drupal\group\Entity\Group $group
+ * @param Group $group
  */
 function rc_group_group_presave(Group $group) {
   $rcSettings = \Drupal::config('rc_group.settings');
@@ -127,7 +127,7 @@ function rc_group_group_presave(Group $group) {
  * This is used to manage the creation of room id field when new group type is
  * added according to the "Groups Chat settings".
  *
- * @param \Drupal\group\Entity\Group $group
+ * @param Group $group
  */
 function rc_group_group_type_insert(GroupType $groupType) {
   $type = $groupType->getEntityTypeId();
@@ -196,7 +196,7 @@ function rc_group_group_content_insert(GroupContent $groupContent) {
  *
  * Add new member to Rocket chat and update roles.
  *
- * @param \Drupal\group\Entity\GroupContent $groupContent
+ * @param GroupContent $groupContent
  */
 function rc_group_group_content_update(GroupContent $groupContent) {
   // Adding/Removing Rocket Chat roles.
diff --git a/modules/rc_group/src/Form/GroupsChatSettingsForm.php b/modules/rc_group/src/Form/GroupsChatSettingsForm.php
index 9dca945..d46e90b 100644
--- a/modules/rc_group/src/Form/GroupsChatSettingsForm.php
+++ b/modules/rc_group/src/Form/GroupsChatSettingsForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\rc_group\Form;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\field\Entity\FieldConfig;
@@ -212,8 +215,8 @@ class GroupsChatSettingsForm extends ConfigFormBase {
    * @param $groupType
    *
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function groupRoles($groupType): array {
     $groupRoles = (array) \Drupal::entityTypeManager()
@@ -234,10 +237,9 @@ class GroupsChatSettingsForm extends ConfigFormBase {
   //   public function update_groups(array &$form, FormStateInterface $form_state) {
   //
   //  }
-
   /**
    * {@inheritdoc}
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     parent::submitForm($form, $form_state);
diff --git a/modules/rc_group/src/Groups/GroupRc.php b/modules/rc_group/src/Groups/GroupRc.php
index 9651800..8ce5f56 100644
--- a/modules/rc_group/src/Groups/GroupRc.php
+++ b/modules/rc_group/src/Groups/GroupRc.php
@@ -12,7 +12,7 @@ class GroupRc extends Group {
   /**
    * Gets group info.
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool
+   * @return Group|bool
    */
   public function info() {
     static::send("groups.info", "GET", ["roomId" => $this->getGroupId()]);
diff --git a/modules/rc_group/src/Plugin/Block/RcGroupBlock.php b/modules/rc_group/src/Plugin/Block/RcGroupBlock.php
index 9cb8ef9..5148c6a 100644
--- a/modules/rc_group/src/Plugin/Block/RcGroupBlock.php
+++ b/modules/rc_group/src/Plugin/Block/RcGroupBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rc_group\Plugin\Block;
 
+use Drupal\Component\Plugin\Context\ContextInterface;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -33,35 +35,35 @@ class RcGroupBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * Current path.
    *
-   * @var \Drupal\Component\Plugin\Context\ContextInterface[]|void
+   * @var ContextInterface[]|void
    */
   private $routeMatch;
 
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   private AccountInterface $account;
 
   /**
    * Current group.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private EntityTypeManagerInterface $entityTypeManager;
 
   /**
    * RcUser service initiated from container.
    *
-   * @var \Drupal\rc\Services\RcUser
+   * @var RcUser
    */
   private RcUser $rcUser;
 
   /**
    * RcGroup service initiated from container.
    *
-   * @var \Drupal\rc_group\Services\RcGroup
+   * @var RcGroup
    */
   private RcGroup $rcGroup;
 
@@ -69,10 +71,10 @@ class RcGroupBlock extends BlockBase implements ContainerFactoryPluginInterface
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
-   * @param \Drupal\rc\Services\RcUser $rcUser
-   * @param \Drupal\rc_group\Services\RcGroup $rcGroup
+   * @param AccountInterface $account
+   * @param EntityTypeManagerInterface $entityTypeManager
+   * @param RcUser $rcUser
+   * @param RcGroup $rcGroup
    * @param $routeMatch
    */
   public function __construct(array $configuration,
@@ -93,7 +95,7 @@ class RcGroupBlock extends BlockBase implements ContainerFactoryPluginInterface
   }
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
@@ -334,7 +336,7 @@ class RcGroupBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function blockSubmit($form, FormStateInterface $form_state) {
     parent::blockSubmit($form, $form_state);
diff --git a/modules/rc_group/src/Services/RcGroup.php b/modules/rc_group/src/Services/RcGroup.php
index 076f5af..7ab61a5 100644
--- a/modules/rc_group/src/Services/RcGroup.php
+++ b/modules/rc_group/src/Services/RcGroup.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\rc_group\Services;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Psr\Log\LoggerInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use ATDev\RocketChat\Users\Collection;
+use Drupal\Core\Entity\EntityStorageException;
 use ATDev\RocketChat\Groups\Group;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Config\FileStorage;
@@ -32,7 +38,7 @@ class RcGroup {
   /**
    * The module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -40,17 +46,16 @@ class RcGroup {
   /**
    * The logging service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
-   * @param Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   The logging service.
    */
-
   protected $rcAuth;
 
   /**
@@ -59,8 +64,8 @@ class RcGroup {
   protected array $userRoles;
 
   /**
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param ConfigFactory $config_factory
+   * @param LoggerChannelFactory $logger_factory
    */
   public function __construct(
     ConfigFactory $config_factory,
@@ -89,7 +94,7 @@ class RcGroup {
    *
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
+   * @return Group|bool|void
    */
   public function groupInfo(object $group) {
 
@@ -155,7 +160,6 @@ class RcGroup {
   //    }
   //
   //  }
-
   /**
    * This method check if the Rocket Chat group exists. If exists, it returns
    * a list of all rocket chat room (channel) names in an array.
@@ -164,8 +168,8 @@ class RcGroup {
    *
    * @return array
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function checkIfGroupExists(object $group) {
 
@@ -253,7 +257,7 @@ class RcGroup {
    *
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Users\Collection|void
+   * @return Collection|void
    */
   public function groupMembersList(object $group) {
 
@@ -309,9 +313,9 @@ class RcGroup {
    * @param object $group
    * @param bool $save
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return Group|bool|void
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function createGroup(object $group, bool $save = FALSE) {
 
@@ -377,9 +381,9 @@ class RcGroup {
    * @param string $label
    * @param bool $required
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function createRcRoomIdField(
     string $entity,
@@ -393,7 +397,7 @@ class RcGroup {
 
     // Create field storage if it does not exist.
     if (!$roomIdFieldStorage) {
-      $configDirectory = new FileStorage(drupal_get_path('module', 'rc_group') . '/config/install');
+      $configDirectory = new FileStorage(\Drupal::service('extension.list.module')->getPath('rc_group') . '/config/install');
 
       // Import the field from the associated config file.
       $rcRoomIdConfig = $configDirectory
@@ -498,9 +502,9 @@ class RcGroup {
    *
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|void
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return Group|void
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function renameGroup(object $group) {
     // Get the Rocket Chat room ID from field.
@@ -541,7 +545,7 @@ class RcGroup {
   /**
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
+   * @return Group|bool|void
    */
   public function deleteGroup(object $group) {
 
@@ -581,7 +585,7 @@ class RcGroup {
    * @param object $user
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
+   * @return Group|bool|void
    */
   public function groupInviteUser(object $groupOwner, object $user, object $group) {
 
@@ -621,7 +625,7 @@ class RcGroup {
    * @param object $user
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
+   * @return Group|bool|void
    */
   public function groupInviteUserByAdmin(object $groupOwner, object $user, object $group) {
 
@@ -663,7 +667,7 @@ class RcGroup {
    * @param object $user
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
+   * @return Group|bool|void
    */
   public function groupKickUser(object $groupOwner, object $user, object $group) {
 
@@ -714,7 +718,7 @@ class RcGroup {
    * @param object $user
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
+   * @return Group|bool|void
    */
   public function groupAddOwner(object $groupOwner, object $user, object $group) {
 
@@ -791,7 +795,7 @@ class RcGroup {
    * @param object $user
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|bool|void
+   * @return Group|bool|void
    */
   public function GroupRemoveOwner(object $groupOwner, object $user, object $group) {
 
@@ -829,7 +833,7 @@ class RcGroup {
    * @param object $user
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|void
+   * @return Group|void
    */
   public function groupAddModerator(object $groupOwner, object $user, object $group) {
 
@@ -866,7 +870,7 @@ class RcGroup {
    * @param object $user
    * @param object $group
    *
-   * @return \ATDev\RocketChat\Groups\Group|void
+   * @return Group|void
    */
   public function groupRemoveModerator(object $groupOwner, object $user, object $group) {
 
diff --git a/modules/rc_opensocial/rc_opensocial.module b/modules/rc_opensocial/rc_opensocial.module
index bc00658..b962225 100644
--- a/modules/rc_opensocial/rc_opensocial.module
+++ b/modules/rc_opensocial/rc_opensocial.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\Core\TypedData\Exception\MissingDataException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 /**
  * @file
  * Contains rc_opensocial.module.
@@ -134,9 +137,9 @@ function rc_opensocial_profile_presave(Profile $profile) {
 }
 
 /**
- * @throws \Drupal\Core\TypedData\Exception\MissingDataException
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws MissingDataException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function updateUserAvatarRemote(object $profile) {
 
@@ -147,7 +150,7 @@ function updateUserAvatarRemote(object $profile) {
   if ($rcUsers->loginRcAdmin()) {
 
     // Add the profile image.
-    /** @var \Drupal\image\Entity\ImageStyle $image_style */
+    /** @var ImageStyle $image_style */
     $image_style = ImageStyle::load('social_medium');
 
     if (!empty($profile->field_profile_image->entity)) {
diff --git a/modules/rc_opensocial/src/Plugin/Block/RcOsGroupBlock.php b/modules/rc_opensocial/src/Plugin/Block/RcOsGroupBlock.php
index 9e42616..4ce4cec 100644
--- a/modules/rc_opensocial/src/Plugin/Block/RcOsGroupBlock.php
+++ b/modules/rc_opensocial/src/Plugin/Block/RcOsGroupBlock.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rc_opensocial\Plugin\Block;
 
+use Drupal\Component\Plugin\Context\ContextInterface;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -27,14 +29,14 @@ class RcOsGroupBlock extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * Current path.
    *
-   * @var \Drupal\Component\Plugin\Context\ContextInterface[]|void
+   * @var ContextInterface[]|void
    */
   private $routeMatch;
 
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   private AccountInterface $account;
 
@@ -42,21 +44,21 @@ class RcOsGroupBlock extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * Current group.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private EntityTypeManagerInterface $entityTypeManager;
 
   /**
    * RcUser service initiated from container.
    *
-   * @var \Drupal\rc\Services\RcUser
+   * @var RcUser
    */
   private RcUser $rcUser;
 
   /**
    * RcGroup service initiated from container.
    *
-   * @var \Drupal\rc_group\Services\RcGroup
+   * @var RcGroup
    */
   private RcGroup $rcGroup;
 
@@ -64,10 +66,10 @@ class RcOsGroupBlock extends BlockBase implements ContainerFactoryPluginInterfac
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
-   * @param \Drupal\rc\Services\RcUser $rcUser
-   * @param \Drupal\rc_group\Services\RcGroup $rcGroup
+   * @param AccountInterface $account
+   * @param EntityTypeManagerInterface $entityTypeManager
+   * @param RcUser $rcUser
+   * @param RcGroup $rcGroup
    * @param $routeMatch
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AccountInterface $account, EntityTypeManagerInterface $entityTypeManager, RcUser $rcUser, RcGroup $rcGroup, $routeMatch) {
@@ -89,7 +91,7 @@ class RcOsGroupBlock extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * Pass service through container.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
@@ -348,7 +350,7 @@ class RcOsGroupBlock extends BlockBase implements ContainerFactoryPluginInterfac
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function blockSubmit($form, FormStateInterface $form_state) {
     parent::blockSubmit($form, $form_state);
diff --git a/modules/rc_opensocial/src/Plugin/Block/RcOsUserBlock.php b/modules/rc_opensocial/src/Plugin/Block/RcOsUserBlock.php
index ebdcdf2..c96a7a5 100644
--- a/modules/rc_opensocial/src/Plugin/Block/RcOsUserBlock.php
+++ b/modules/rc_opensocial/src/Plugin/Block/RcOsUserBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rc_opensocial\Plugin\Block;
 
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -23,17 +24,17 @@ use Drupal\Core\Form\FormStateInterface;
 class RcOsUserBlock extends BlockBase implements ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected AccountInterface $account;
 
   /**
-   * @var \Drupal\rc\Services\RcUser
+   * @var RcUser
    */
   protected RcUser $rcUser;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
 
@@ -41,9 +42,9 @@ class RcOsUserBlock extends BlockBase implements ContainerFactoryPluginInterface
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
-   * @param \Drupal\rc\Services\RcUser $rcUser
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param AccountInterface $account
+   * @param RcUser $rcUser
+   * @param EntityTypeManagerInterface $entityTypeManager
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AccountInterface $account, RcUser $rcUser, EntityTypeManagerInterface $entityTypeManager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
@@ -53,7 +54,7 @@ class RcOsUserBlock extends BlockBase implements ContainerFactoryPluginInterface
   }
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
@@ -266,7 +267,7 @@ class RcOsUserBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function blockSubmit($form, FormStateInterface $form_state) {
     parent::blockSubmit($form, $form_state);
diff --git a/rc.api.php b/rc.api.php
index 988b72c..26f091e 100644
--- a/rc.api.php
+++ b/rc.api.php
@@ -1,17 +1,17 @@
 <?php
 
+use ATDev\RocketChat\Users\User;
 /**
  * @file
  */
-
 /**
  * @param object $entity
- * @param \ATDev\RocketChat\Users\User $rcUser
+ * @param User $rcUser
  *
  *   * Custom hook to provide an interface to map Drupal user fields to Rocket Chat
  *   User fields.
  */
-function hook_field_mapping_rc_alter(object $entity, ATDev\RocketChat\Users\User $rcUser) {
+function hook_field_mapping_rc_alter(object $entity, User $rcUser) {
   // Usage example with $entity = Drupal\user\UserInterface $user.
   //  $name = $user->getDisplayName();
   //  $invokeName = $name . ' Invoke';
diff --git a/rc.install b/rc.install
index 8bd52fb..433fb44 100644
--- a/rc.install
+++ b/rc.install
@@ -1,12 +1,13 @@
 <?php
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\field\Entity\FieldConfig;
 
 /**
  * Implements hook_uninstall().
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function rc_uninstall($is_syncing) {
 
diff --git a/rc.module b/rc.module
index 855bc1a..21b9dad 100644
--- a/rc.module
+++ b/rc.module
@@ -93,7 +93,7 @@ function rc_toolbar_alter(&$items) {
  *
  * Implements hook_ENTITY_TYPE_presave() for user entities.
  *
- * @param \Drupal\user\UserInterface $user
+ * @param UserInterface $user
  */
 function rc_user_presave(UserInterface $user) {
 
@@ -159,7 +159,7 @@ function rc_preprocess_user(&$variables) {
  * Implements hook_user_cancel().
  *
  * @param $edit
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  * @param $method
  */
 function rc_user_cancel($edit, AccountInterface $account, $method) {
@@ -178,7 +178,7 @@ function rc_user_cancel($edit, AccountInterface $account, $method) {
  *
  * Implements hook_user_delete().
  *
- * @param \Drupal\user\UserInterface $user
+ * @param UserInterface $user
  */
 function rc_user_delete(AccountInterface $account) {
   $rcUser = \Drupal::service('rc.user');
diff --git a/src/Plugin/Action/RcUpdateUser.php b/src/Plugin/Action/RcUpdateUser.php
index 6a1efa2..79cec93 100644
--- a/src/Plugin/Action/RcUpdateUser.php
+++ b/src/Plugin/Action/RcUpdateUser.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rc\Plugin\Action;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\views_bulk_operations\Action\ViewsBulkOperationsActionBase;
 use Drupal\Core\Session\AccountInterface;
 
@@ -37,7 +38,7 @@ class RcUpdateUser extends ViewsBulkOperationsActionBase {
   /**
    * {@inheritdoc}
    */
-  public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE): bool|\Drupal\Core\Access\AccessResultInterface {
+  public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE): bool|AccessResultInterface {
     if ($object->getEntityType() === 'user') {
       $access = $object->access('update', $account, TRUE)
         ->andIf($object->status->access('edit', $account, TRUE));
diff --git a/src/Plugin/Block/RcUserBlock.php b/src/Plugin/Block/RcUserBlock.php
index 6ab07ff..c7e20f1 100644
--- a/src/Plugin/Block/RcUserBlock.php
+++ b/src/Plugin/Block/RcUserBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rc\Plugin\Block;
 
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -23,17 +24,17 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class RcUserBlock extends BlockBase implements ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected AccountInterface $account;
 
   /**
-   * @var \Drupal\rc\Services\RcUser
+   * @var RcUser
    */
   protected RcUser $rcUser;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
 
@@ -41,9 +42,9 @@ class RcUserBlock extends BlockBase implements ContainerFactoryPluginInterface {
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
-   * @param \Drupal\rc\Services\RcUser $rcUser
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param AccountInterface $account
+   * @param RcUser $rcUser
+   * @param EntityTypeManagerInterface $entityTypeManager
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, AccountInterface $account, RcUser $rcUser, EntityTypeManagerInterface $entityTypeManager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
@@ -53,7 +54,7 @@ class RcUserBlock extends BlockBase implements ContainerFactoryPluginInterface {
   }
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
@@ -262,7 +263,7 @@ class RcUserBlock extends BlockBase implements ContainerFactoryPluginInterface {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function blockSubmit($form, FormStateInterface $form_state) {
     parent::blockSubmit($form, $form_state);
diff --git a/src/Plugin/Block/RcUserPopupBlock.php b/src/Plugin/Block/RcUserPopupBlock.php
index e0c594a..2e2ddcc 100644
--- a/src/Plugin/Block/RcUserPopupBlock.php
+++ b/src/Plugin/Block/RcUserPopupBlock.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rc\Plugin\Block;
 
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -24,17 +25,17 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
 class RcUserPopupBlock extends BlockBase implements ContainerFactoryPluginInterface {
 
   /**
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected AccountInterface $account;
 
   /**
-   * @var \Drupal\rc\Services\RcUser
+   * @var RcUser
    */
   protected RcUser $rcUser;
 
   /**
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected EntityTypeManagerInterface $entityTypeManager;
 
@@ -42,9 +43,9 @@ class RcUserPopupBlock extends BlockBase implements ContainerFactoryPluginInterf
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountInterface $account
-   * @param \Drupal\rc\Services\RcUser $rcUser
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param AccountInterface $account
+   * @param RcUser $rcUser
+   * @param EntityTypeManagerInterface $entityTypeManager
    */
   public function __construct(array $configuration,
     $plugin_id,
@@ -59,7 +60,7 @@ class RcUserPopupBlock extends BlockBase implements ContainerFactoryPluginInterf
   }
 
   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param $plugin_id
    * @param $plugin_definition
@@ -342,7 +343,7 @@ class RcUserPopupBlock extends BlockBase implements ContainerFactoryPluginInterf
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws EntityMalformedException
    */
   public function blockSubmit($form, FormStateInterface $form_state) {
     parent::blockSubmit($form, $form_state);
diff --git a/src/Services/RcAuth.php b/src/Services/RcAuth.php
index f714d3f..e2719f9 100644
--- a/src/Services/RcAuth.php
+++ b/src/Services/RcAuth.php
@@ -12,7 +12,7 @@ class RcAuth {
   /**
    * The module configuration.
    *
-   * @var Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $config;
 
diff --git a/src/Services/RcChat.php b/src/Services/RcChat.php
index 7c065c2..c487108 100644
--- a/src/Services/RcChat.php
+++ b/src/Services/RcChat.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rc\Services;
 
+use ATDev\RocketChat\Users\User;
 use ATDev\RocketChat\Chat;
 
 /**
@@ -16,7 +17,7 @@ class RcChat extends chat {
    * @param string $password
    * @param bool $auth
    *
-   * @return \ATDev\RocketChat\Users\User|bool
+   * @return User|bool
    */
   public static function authToken($userName, $password, $auth = TRUE) {
     static::send("login", "POST", ["user" => $userName, "password" => $password]);
diff --git a/src/Services/RcUser.php b/src/Services/RcUser.php
index 71122fa..cff3dff 100644
--- a/src/Services/RcUser.php
+++ b/src/Services/RcUser.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\rc\Services;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Psr\Log\LoggerInterface;
 use ATDev\RocketChat\Chat;
 use ATDev\RocketChat\Users\User;
 use Drupal\Core\Config\ConfigFactory;
@@ -20,7 +22,7 @@ class RcUser extends RcAuth {
   /**
    * The module configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -28,14 +30,14 @@ class RcUser extends RcAuth {
   /**
    * The logging service.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
   /**
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *
-   * @param \Drupal\Core\Logger\LoggerChannelFactory $logger_factory
+   * @param LoggerChannelFactory $logger_factory
    *   The logging service.   *.
    */
   public function __construct(
@@ -52,7 +54,7 @@ class RcUser extends RcAuth {
    * @param string $userName
    * @param string $password
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function login(string $userName = NULL, string $password = NULL) {
     if ($userName && $password) {
@@ -81,7 +83,7 @@ class RcUser extends RcAuth {
    *
    * @param $user
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function getAuthTokenByName($user) {
 
@@ -111,7 +113,7 @@ class RcUser extends RcAuth {
   /**
    * Login to Rocket Chat server with admin account saved in configurations.
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function loginRcAdmin() {
     return $this->login($this->user(), $this->secret());
@@ -136,7 +138,7 @@ class RcUser extends RcAuth {
    *
    * @param object $user
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function loginUserByName(object $user) {
 
@@ -167,7 +169,7 @@ class RcUser extends RcAuth {
    *
    * @param object $user
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function userInfoByName(object $user = NULL) {
     if ($user) {
@@ -197,7 +199,7 @@ class RcUser extends RcAuth {
    *
    * @param object $user
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function userInfoById(object $user = NULL) {
     if ($user) {
@@ -232,7 +234,7 @@ class RcUser extends RcAuth {
    *
    * @param $user
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function checkIfUserExist($user) {
 
@@ -263,7 +265,7 @@ class RcUser extends RcAuth {
    * @param object $user
    * @param bool|null $save
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function createUser(object $user, bool $save = NULL) {
     // Login in with Rocket chat admin to create new user.
@@ -355,7 +357,7 @@ class RcUser extends RcAuth {
    * @param object $user
    * @param bool|null $save
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function updateUser(object $user, bool $save = NULL) {
 
@@ -430,7 +432,7 @@ class RcUser extends RcAuth {
    *
    * @param object $user
    *
-   * @return \ATDev\RocketChat\Users\User|bool|void
+   * @return User|bool|void
    */
   public function deleteUser(object $user) {
 
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 59393d6..eb1be2b 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\rc\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
