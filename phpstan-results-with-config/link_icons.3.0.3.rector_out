modules/contrib/link_icons/link_icons.install
modules/contrib/link_icons/link_icons.module
modules/contrib/link_icons/link_icons_brands/link_icons_brands.install
modules/contrib/link_icons/link_icons_brands/link_icons_brands.module
modules/contrib/link_icons/src/Config/Entity/LinkIconServiceListBuilder.php
modules/contrib/link_icons/src/Entity/LinkIconService.php
modules/contrib/link_icons/src/Entity/LinkIconServiceInterface.php
modules/contrib/link_icons/src/Form/LinkIconServiceForm.php
modules/contrib/link_icons/src/Form/LinkIconServiceFormDelete.php
modules/contrib/link_icons/src/Plugin/Field/FieldFormatter/LinkIconsFormatter.php

4 files with changes
====================

1) modules/contrib/link_icons/src/Config/Entity/LinkIconServiceListBuilder.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\link_icons\Config\Entity;

+use Drupal\link_icons\Entity\LinkIconServiceInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Link;
@@ @@
    */
   public function buildRow(EntityInterface $entity) {
     /**
-     * @var \Drupal\link_icons\Entity\LinkIconServiceInterface $service
-    */
+     * @var LinkIconServiceInterface $service
+     */
     $service = $entity;

     $row['label'] = $service->label();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/link_icons/link_icons_brands/link_icons_brands.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Config\StorageInterface;
 /**
  * @file
  * Install, update and uninstall functions for link_icons.
@@ @@
  */
 function _link_icons_brands_read_services_config(array $config_files) {
   /**
-   * @var \Drupal\Core\Config\FileStorage $source_dir
+   * @var FileStorage $source_dir
    */
-  $source_dir = new FileStorage(drupal_get_path('module', 'link_icons_brands') . '/config/optional');
+  $source_dir = new FileStorage(\Drupal::service('extension.list.module')->getPath('link_icons_brands') . '/config/optional');

   /**
-   * @var \Drupal\Core\Config\StorageInterface $config_storage
+   * @var StorageInterface $config_storage
    */
   $config_storage = \Drupal::service('config.storage');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


3) modules/contrib/link_icons/link_icons.module:91

    ---------- begin diff ----------
@@ @@
       $output .= '</ul></dl>';

       $output .= '<h3>' . t('Service configuration') . '</h3>';
-      $output .= '<p>' . t("When using this formatter, you can manage the services (URL formats) that should or shouldn't have their own specific icons, on the <a href=\":link_icon_service_list\">Link icon services</a> configuration page. The services each have the following settings:", [':link_icon_service_list' => \Drupal\Core\Url::fromRoute('entity.link_icon_service.collection')->toString()]) . '</p';
+      $output .= '<p>' . t("When using this formatter, you can manage the services (URL formats) that should or shouldn't have their own specific icons, on the <a href=\":link_icon_service_list\">Link icon services</a> configuration page. The services each have the following settings:", [':link_icon_service_list' => Url::fromRoute('entity.link_icon_service.collection')->toString()]) . '</p';
       $output .= '<dl>';
       $output .= '<dt>' . t('Hostname(s)') . '</dt>';
       $output .= '<dd>' . t("The domain name(s) to look for at the end of the hostname within the URL of the link - ex. 'google.com'.") . '</dd>';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


4) modules/contrib/link_icons/link_icons.install:24

    ---------- begin diff ----------
@@ @@
       <li>Click the settings cog/gear button to view and edit the (hopefully) self-explanatory options for how the links should be displayed. These exploit <a href="https://fontawesome.com/how-to-use/on-the-web/styling/" target="_blank">many of the Font Awesome feature</a>.</li>
       <li>To customise the icons further, just theme your pages as usual. With the icons rendered as text characters using Font Awesome, you can style them with CSS as you wish.</li>
     </ul>', [
-      '@url_types' => \Drupal\Core\Url::fromRoute('entity.node_type.collection')->toString(),
+      '@url_types' => Url::fromRoute('entity.node_type.collection')->toString(),
     ]
   ));

   \Drupal::messenger()->addMessage(t('To customise which hostnames result in which icons being used (including the colour, HTML class and more), use the services configuration page at <a href="@url_settings">Home &raquo; Admin &raquo; Configuration &raquo; Search &amp; Metadata &raquo; Link icon entities</a> (<a href="@url_settings">@url_settings</a>) to add, modify and remove service configurations. See <a href="@url_help">the module help page</a> for explanations of each service configuration field.', [
-    '@url_settings' => \Drupal\Core\Url::fromRoute('entity.link_icon_service.collection')->toString(),
-    '@url_help' => \Drupal\Core\Url::fromRoute('help.page', ['name' => 'link_icons'])->toString(),
+    '@url_settings' => Url::fromRoute('entity.link_icon_service.collection')->toString(),
+    '@url_help' => Url::fromRoute('help.page', ['name' => 'link_icons'])->toString(),
   ]));

   if (!\Drupal::moduleHandler()->moduleExists('link_icons_brand')) {
     \Drupal::messenger()->addMessage(t('<a href="@url_modules">Install the link_icons_brands submodule</a>, if you haven\'t already, to add service configurations for many popular brand services.', [
-      '@url_modules' => \Drupal\Core\Url::fromRoute('system.modules_list')->toString(),
+      '@url_modules' => Url::fromRoute('system.modules_list')->toString(),
     ]));
   }
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

