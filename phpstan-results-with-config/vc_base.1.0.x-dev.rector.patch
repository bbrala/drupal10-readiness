diff --git a/modules/vc_actions/modules/vc_actions_volunteer/src/Access/MaxVolunteers.php b/modules/vc_actions/modules/vc_actions_volunteer/src/Access/MaxVolunteers.php
index 474a41f..2bbb0a3 100644
--- a/modules/vc_actions/modules/vc_actions_volunteer/src/Access/MaxVolunteers.php
+++ b/modules/vc_actions/modules/vc_actions_volunteer/src/Access/MaxVolunteers.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_actions_volunteer\Access;
 
+use Drupal\Core\Access\AccessResultAllowed;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Access\AccessResult;
@@ -23,7 +24,7 @@ class MaxVolunteers implements AccessInterface {
    * @param Route $route
    * @param RouteMatchInterface $route_match
    * @param AccountInterface $account
-   * @return AccessResult|\Drupal\Core\Access\AccessResultAllowed
+   * @return AccessResult|AccessResultAllowed
    */
   public function access(Route $route, RouteMatchInterface $route_match, AccountInterface $account) {
     $vc_need = $route_match->getParameter('vc_need');
diff --git a/modules/vc_actions/modules/vc_actions_volunteer/src/Access/NewVolunteer.php b/modules/vc_actions/modules/vc_actions_volunteer/src/Access/NewVolunteer.php
index 31d40c3..d10a844 100644
--- a/modules/vc_actions/modules/vc_actions_volunteer/src/Access/NewVolunteer.php
+++ b/modules/vc_actions/modules/vc_actions_volunteer/src/Access/NewVolunteer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_actions_volunteer\Access;
 
+use Drupal\Core\Access\AccessResultAllowed;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Access\AccessResult;
@@ -23,7 +24,7 @@ class NewVolunteer implements AccessInterface {
    * @param Route $route
    * @param RouteMatchInterface $route_match
    * @param AccountInterface $account
-   * @return AccessResult|\Drupal\Core\Access\AccessResultAllowed
+   * @return AccessResult|AccessResultAllowed
    */
   public function access(Route $route, RouteMatchInterface $route_match, AccountInterface $account) {
     $vc_need = $route_match->getParameter('vc_need');
diff --git a/modules/vc_actions/modules/vc_actions_volunteer/src/Access/VolunteerPendingStatus.php b/modules/vc_actions/modules/vc_actions_volunteer/src/Access/VolunteerPendingStatus.php
index 4beaf2d..a73755d 100644
--- a/modules/vc_actions/modules/vc_actions_volunteer/src/Access/VolunteerPendingStatus.php
+++ b/modules/vc_actions/modules/vc_actions_volunteer/src/Access/VolunteerPendingStatus.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_actions_volunteer\Access;
 
+use Drupal\Core\Access\AccessResultAllowed;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Access\AccessResult;
@@ -20,7 +21,7 @@ class VolunteerPendingStatus implements AccessInterface {
    * @param Route $route
    * @param RouteMatchInterface $route_match
    * @param AccountInterface $account
-   * @return AccessResult|\Drupal\Core\Access\AccessResultAllowed
+   * @return AccessResult|AccessResultAllowed
    */
   public function access(Route $route, RouteMatchInterface $route_match, AccountInterface $account) {
 
diff --git a/modules/vc_actions/modules/vc_actions_volunteer/src/Controller/VCActionsVolunteerController.php b/modules/vc_actions/modules/vc_actions_volunteer/src/Controller/VCActionsVolunteerController.php
index 88d3850..a5880c4 100644
--- a/modules/vc_actions/modules/vc_actions_volunteer/src/Controller/VCActionsVolunteerController.php
+++ b/modules/vc_actions/modules/vc_actions_volunteer/src/Controller/VCActionsVolunteerController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_actions_volunteer\Controller;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
 use Drupal\vc_actions\Entity\VCAction;
@@ -37,7 +38,7 @@ class VCActionsVolunteerController extends ControllerBase {
   /**
    * @param VCNeed $vc_need
    * @return RedirectResponse
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function volunteer(VCNeed $vc_need) {
 
@@ -78,7 +79,7 @@ class VCActionsVolunteerController extends ControllerBase {
    * @param VCNeed $vc_need
    * @param VCAction $vc_action
    * @return RedirectResponse
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function approveRequest(VCNeed $vc_need, VCAction $vc_action) {
     $vc_action->set('field_action_status','commit')->save();
@@ -89,7 +90,7 @@ class VCActionsVolunteerController extends ControllerBase {
    * @param VCNeed $vc_need
    * @param VCAction $vc_action
    * @return RedirectResponse
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function rejectRequest(VCNeed $vc_need, VCAction $vc_action) {
     $vc_action->set('field_action_status','cancel')->save();
@@ -99,7 +100,7 @@ class VCActionsVolunteerController extends ControllerBase {
   /**
    * @param VCAction $vc_action
    * @return RedirectResponse
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function markConfirm(VCAction $vc_action) {
     $vc_action->set('field_action_status','confirm')->save();
@@ -110,7 +111,7 @@ class VCActionsVolunteerController extends ControllerBase {
    * @param VCNeed $vc_need
    * @param VCAction $vc_action
    * @return RedirectResponse
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function markComplete(VCNeed $vc_need, VCAction $vc_action) {
     $vc_action->set('field_action_status','complete')->save();
@@ -120,7 +121,7 @@ class VCActionsVolunteerController extends ControllerBase {
   /**
    * @param VCAction $vc_action
    * @return RedirectResponse
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function cancelByVolunteer(VCAction $vc_action) {
     $vc_action->set('field_action_status','cancel')->save();
@@ -131,7 +132,7 @@ class VCActionsVolunteerController extends ControllerBase {
    * @param VCNeed $vc_need
    * @param VCAction $vc_action
    * @return RedirectResponse
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function cancelByNeedOwner(VCNeed $vc_need, VCAction $vc_action) {
     $vc_action->set('field_action_status','cancel_volunteer')->save();
diff --git a/modules/vc_actions/modules/vc_actions_volunteer/tests/src/Functional/LoadTest.php b/modules/vc_actions/modules/vc_actions_volunteer/tests/src/Functional/LoadTest.php
index ee82031..a875ed6 100644
--- a/modules/vc_actions/modules/vc_actions_volunteer/tests/src/Functional/LoadTest.php
+++ b/modules/vc_actions/modules/vc_actions_volunteer/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_actions_volunteer\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_actions/src/Form/VCActionForm.php b/modules/vc_actions/src/Form/VCActionForm.php
index fe274ff..f544af1 100644
--- a/modules/vc_actions/src/Form/VCActionForm.php
+++ b/modules/vc_actions/src/Form/VCActionForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_actions\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -16,7 +17,7 @@ class VCActionForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
diff --git a/modules/vc_actions/src/Form/VCActionSettingsForm.php b/modules/vc_actions/src/Form/VCActionSettingsForm.php
index 27cbd86..dbef691 100644
--- a/modules/vc_actions/src/Form/VCActionSettingsForm.php
+++ b/modules/vc_actions/src/Form/VCActionSettingsForm.php
@@ -27,7 +27,7 @@ class VCActionSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class VCActionSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/vc_actions/src/VCActionAccessControlHandler.php b/modules/vc_actions/src/VCActionAccessControlHandler.php
index 795435a..f954092 100644
--- a/modules/vc_actions/src/VCActionAccessControlHandler.php
+++ b/modules/vc_actions/src/VCActionAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_actions;
 
+use Drupal\vc_actions\Entity\VCActionInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,8 +19,7 @@ class VCActionAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\vc_actions\Entity\VCActionInterface $entity */
-
+    /** @var VCActionInterface $entity */
     switch ($operation) {
 
       case 'view':
@@ -71,9 +71,9 @@ class VCActionAccessControlHandler extends EntityAccessControlHandler {
   /**
    * Test for given 'own' permission.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    * @param $operation
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *
    * @return string|null
    *   The permission string indicating it's allowed.
diff --git a/modules/vc_actions/src/VCActionHtmlRouteProvider.php b/modules/vc_actions/src/VCActionHtmlRouteProvider.php
index c104a2a..f4ca7e5 100644
--- a/modules/vc_actions/src/VCActionHtmlRouteProvider.php
+++ b/modules/vc_actions/src/VCActionHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class VCActionHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/vc_actions/src/VCActionPermissions.php b/modules/vc_actions/src/VCActionPermissions.php
index 932a258..fbece4f 100644
--- a/modules/vc_actions/src/VCActionPermissions.php
+++ b/modules/vc_actions/src/VCActionPermissions.php
@@ -35,7 +35,7 @@ class VCActionPermissions{
   /**
    * Returns a list of node permissions for a given node type.
    *
-   * @param \Drupal\vc_actions\Entity\VCActionType $type
+   * @param VCActionType $type
    *   The VCAction type.
    *
    * @return array
diff --git a/modules/vc_actions/tests/src/Functional/LoadTest.php b/modules/vc_actions/tests/src/Functional/LoadTest.php
index 124f65c..e1a879c 100644
--- a/modules/vc_actions/tests/src/Functional/LoadTest.php
+++ b/modules/vc_actions/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_actions\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_contacts/modules/vc_contacts_volunteers/src/VCContactVolunteersUtilities.php b/modules/vc_contacts/modules/vc_contacts_volunteers/src/VCContactVolunteersUtilities.php
index c212e91..834ec5d 100644
--- a/modules/vc_contacts/modules/vc_contacts_volunteers/src/VCContactVolunteersUtilities.php
+++ b/modules/vc_contacts/modules/vc_contacts_volunteers/src/VCContactVolunteersUtilities.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vc_contacts_volunteers;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityInterface;
 
 class VCContactVolunteersUtilities {
@@ -9,9 +11,9 @@ class VCContactVolunteersUtilities {
   /**
    * @param EntityInterface $account
    * @param bool $id
-   * @return bool|\Drupal\Core\Entity\EntityInterface|mixed
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return bool|EntityInterface|mixed
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function getProfileFromUser(EntityInterface $account, $id = FALSE) {
     $params = [
diff --git a/modules/vc_contacts/modules/vc_contacts_volunteers/vc_contacts_volunteers.module b/modules/vc_contacts/modules/vc_contacts_volunteers/vc_contacts_volunteers.module
index f4922a8..a139327 100644
--- a/modules/vc_contacts/modules/vc_contacts_volunteers/vc_contacts_volunteers.module
+++ b/modules/vc_contacts/modules/vc_contacts_volunteers/vc_contacts_volunteers.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
+use Drupal\vc_contacts_volunteers\VCContactVolunteersUtilities;
 /**
  * @file
  */
@@ -7,7 +11,7 @@
 /**
  * Implements hook_help().
  */
-function vc_contacts_volunteers_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function vc_contacts_volunteers_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     // Main module help for the vc_contacts module.
     case 'help.page.vc_contacts':
@@ -59,9 +63,9 @@ function vc_contacts_volunteers_entity_extra_field_info() {
 /**
  * Implements hook_ENTITY_TYPE_view().
  */
-function vc_contacts_volunteers_user_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
+function vc_contacts_volunteers_user_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
   if ($display->getComponent('profile_dashboard')) {
-    $profile = \Drupal\vc_contacts_volunteers\VCContactVolunteersUtilities::getProfileFromUser($entity, TRUE);
+    $profile = VCContactVolunteersUtilities::getProfileFromUser($entity, TRUE);
     $build['profile_dashboard'] = [
       '#theme' => 'ajax_dashboard',
       '#id' => 'vc_dashboard_user_profile',
@@ -74,7 +78,7 @@ function vc_contacts_volunteers_user_view(array &$build, \Drupal\Core\Entity\Ent
  * Implements hook_ENTITY_TYPE_insert()
  * @param $entity
  */
-function vc_contacts_volunteers_vc_contact_insert(Drupal\Core\Entity\EntityInterface $entity) {
+function vc_contacts_volunteers_vc_contact_insert(EntityInterface $entity) {
   $query = \Drupal::request()->query->get('associate-user');
   if($entity->bundle() === 'volunteer' && $query) {
     $associate = $entity->get('field_associate_user')->getValue();
@@ -89,6 +93,6 @@ function vc_contacts_volunteers_vc_contact_insert(Drupal\Core\Entity\EntityInter
  * Implements hook_ENTITY_TYPE_update()
  * @param $entity
  */
-function vc_contacts_volunteers_vc_contact_update(Drupal\Core\Entity\EntityInterface $entity) {
+function vc_contacts_volunteers_vc_contact_update(EntityInterface $entity) {
   vc_contacts_volunteers_vc_contact_insert($entity);
-}
\ No newline at end of file
+}
diff --git a/modules/vc_contacts/src/Controller/VCContactController.php b/modules/vc_contacts/src/Controller/VCContactController.php
index acf39f2..348a577 100644
--- a/modules/vc_contacts/src/Controller/VCContactController.php
+++ b/modules/vc_contacts/src/Controller/VCContactController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vc_contacts\Controller;
 
+use Drupal\Core\Datetime\DateFormatter;
+use Drupal\Core\Render\Renderer;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -19,14 +21,14 @@ class VCContactController extends ControllerBase implements ContainerInjectionIn
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
@@ -78,7 +80,7 @@ class VCContactController extends ControllerBase implements ContainerInjectionIn
   /**
    * Generates an overview table of older revisions of a VCContact.
    *
-   * @param \Drupal\vc_contacts\Entity\VCContactInterface $vc_contact
+   * @param VCContactInterface $vc_contact
    *   A VCContact object.
    *
    * @return array
@@ -124,7 +126,9 @@ class VCContactController extends ControllerBase implements ContainerInjectionIn
           ]));
         }
         else {
-          $link = $vc_contact->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$vc_contact` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $vc_contact->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/modules/vc_contacts/src/Entity/VCContactInterface.php b/modules/vc_contacts/src/Entity/VCContactInterface.php
index c534f90..d61acac 100644
--- a/modules/vc_contacts/src/Entity/VCContactInterface.php
+++ b/modules/vc_contacts/src/Entity/VCContactInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_contacts\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -79,7 +80,7 @@ interface VCContactInterface extends ContentEntityInterface, RevisionLogInterfac
   /**
    * Gets the VCContact revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/modules/vc_contacts/src/Form/VCContactForm.php b/modules/vc_contacts/src/Form/VCContactForm.php
index 9752991..61de765 100644
--- a/modules/vc_contacts/src/Form/VCContactForm.php
+++ b/modules/vc_contacts/src/Form/VCContactForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_contacts\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -16,7 +17,7 @@ class VCContactForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
diff --git a/modules/vc_contacts/src/Form/VCContactRevisionDeleteForm.php b/modules/vc_contacts/src/Form/VCContactRevisionDeleteForm.php
index 2a579a3..4662873 100644
--- a/modules/vc_contacts/src/Form/VCContactRevisionDeleteForm.php
+++ b/modules/vc_contacts/src/Form/VCContactRevisionDeleteForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\vc_contacts\Form;
 
+use Drupal\vc_contacts\Entity\VCContactInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -17,21 +20,21 @@ class VCContactRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The VCContact revision.
    *
-   * @var \Drupal\vc_contacts\Entity\VCContactInterface
+   * @var VCContactInterface
    */
   protected $revision;
 
   /**
    * The VCContact storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vCContactStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -57,7 +60,7 @@ class VCContactRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -92,7 +95,7 @@ class VCContactRevisionDeleteForm extends ConfirmFormBase {
     $this->VCContactStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('VCContact: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of VCContact %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of VCContact %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.vc_contact.canonical',
        ['vc_contact' => $this->revision->id()]
diff --git a/modules/vc_contacts/src/Form/VCContactRevisionRevertForm.php b/modules/vc_contacts/src/Form/VCContactRevisionRevertForm.php
index c8dd5e6..166735b 100644
--- a/modules/vc_contacts/src/Form/VCContactRevisionRevertForm.php
+++ b/modules/vc_contacts/src/Form/VCContactRevisionRevertForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vc_contacts\Form;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -18,21 +20,21 @@ class VCContactRevisionRevertForm extends ConfirmFormBase {
   /**
    * The VCContact revision.
    *
-   * @var \Drupal\vc_contacts\Entity\VCContactInterface
+   * @var VCContactInterface
    */
   protected $revision;
 
   /**
    * The VCContact storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vCContactStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -118,18 +120,18 @@ class VCContactRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\vc_contacts\Entity\VCContactInterface $revision
+   * @param VCContactInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\vc_contacts\Entity\VCContactInterface
+   * @return VCContactInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(VCContactInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/modules/vc_contacts/src/Form/VCContactRevisionRevertTranslationForm.php b/modules/vc_contacts/src/Form/VCContactRevisionRevertTranslationForm.php
index 8dc7635..425eaaa 100644
--- a/modules/vc_contacts/src/Form/VCContactRevisionRevertTranslationForm.php
+++ b/modules/vc_contacts/src/Form/VCContactRevisionRevertTranslationForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_contacts\Form;
 
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\vc_contacts\Entity\VCContactInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -23,7 +24,7 @@ class VCContactRevisionRevertTranslationForm extends VCContactRevisionRevertForm
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -75,7 +76,7 @@ class VCContactRevisionRevertTranslationForm extends VCContactRevisionRevertForm
   protected function prepareRevertedRevision(VCContactInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\vc_contacts\Entity\VCContactInterface $default_revision */
+    /** @var VCContactInterface $default_revision */
     $latest_revision = $this->VCContactStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
@@ -89,7 +90,7 @@ class VCContactRevisionRevertTranslationForm extends VCContactRevisionRevertForm
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/modules/vc_contacts/src/Form/VCContactSettingsForm.php b/modules/vc_contacts/src/Form/VCContactSettingsForm.php
index b633b7d..4aec62c 100644
--- a/modules/vc_contacts/src/Form/VCContactSettingsForm.php
+++ b/modules/vc_contacts/src/Form/VCContactSettingsForm.php
@@ -27,7 +27,7 @@ class VCContactSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class VCContactSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/vc_contacts/src/Plugin/EntityReferenceSelection/VCContactAuthor.php b/modules/vc_contacts/src/Plugin/EntityReferenceSelection/VCContactAuthor.php
index 5133458..497254d 100644
--- a/modules/vc_contacts/src/Plugin/EntityReferenceSelection/VCContactAuthor.php
+++ b/modules/vc_contacts/src/Plugin/EntityReferenceSelection/VCContactAuthor.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_contacts\Plugin\EntityReferenceSelection;
 
+use Drupal\Core\Entity\Query\QueryInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Database\Query\AlterableInterface;
 use Drupal\Core\DependencyInjection\DeprecatedServicePropertyTrait;
@@ -301,7 +302,7 @@ class VCContactAuthor extends DefaultSelection {
    *   (Optional) The operation the matching should be done with. Defaults
    *   to "CONTAINS".
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   The EntityQuery object with the basic conditions and sorting applied to
    *   it.
    */
diff --git a/modules/vc_contacts/src/VCContactAccessControlHandler.php b/modules/vc_contacts/src/VCContactAccessControlHandler.php
index 8465df1..2d8b718 100644
--- a/modules/vc_contacts/src/VCContactAccessControlHandler.php
+++ b/modules/vc_contacts/src/VCContactAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_contacts;
 
+use Drupal\vc_contacts\Entity\VCContactInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,8 +19,7 @@ class VCContactAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\vc_contacts\Entity\VCContactInterface $entity */
-
+    /** @var VCContactInterface $entity */
     switch ($operation) {
 
       case 'view':
@@ -71,9 +71,9 @@ class VCContactAccessControlHandler extends EntityAccessControlHandler {
   /**
    * Test for given 'own' permission.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    * @param $operation
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *
    * @return string|null
    *   The permission string indicating it's allowed.
diff --git a/modules/vc_contacts/src/VCContactHtmlRouteProvider.php b/modules/vc_contacts/src/VCContactHtmlRouteProvider.php
index 8473e0e..fa45240 100644
--- a/modules/vc_contacts/src/VCContactHtmlRouteProvider.php
+++ b/modules/vc_contacts/src/VCContactHtmlRouteProvider.php
@@ -52,10 +52,10 @@ class VCContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -76,10 +76,10 @@ class VCContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -100,10 +100,10 @@ class VCContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class VCContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -148,10 +148,10 @@ class VCContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -172,10 +172,10 @@ class VCContactHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/vc_contacts/src/VCContactPermissions.php b/modules/vc_contacts/src/VCContactPermissions.php
index 078df49..d4ef769 100644
--- a/modules/vc_contacts/src/VCContactPermissions.php
+++ b/modules/vc_contacts/src/VCContactPermissions.php
@@ -36,7 +36,7 @@ class VCContactPermissions{
   /**
    * Returns a list of node permissions for a given node type.
    *
-   * @param \Drupal\vc_contacts\Entity\VCContactType $type
+   * @param VCContactType $type
    *   The VCContact type.
    *
    * @return array
diff --git a/modules/vc_contacts/src/VCContactStorageInterface.php b/modules/vc_contacts/src/VCContactStorageInterface.php
index 52e5739..ef38ba7 100644
--- a/modules/vc_contacts/src/VCContactStorageInterface.php
+++ b/modules/vc_contacts/src/VCContactStorageInterface.php
@@ -20,7 +20,7 @@ interface VCContactStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of VCContact revision IDs for a specific VCContact.
    *
-   * @param \Drupal\vc_contacts\Entity\VCContactInterface $entity
+   * @param VCContactInterface $entity
    *   The VCContact entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface VCContactStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as VCContact author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface VCContactStorageInterface extends ContentEntityStorageInterface {
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\vc_contacts\Entity\VCContactInterface $entity
+   * @param VCContactInterface $entity
    *   The VCContact entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface VCContactStorageInterface extends ContentEntityStorageInterface {
   /**
    * Unsets the language for all VCContact with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/modules/vc_contacts/tests/src/Functional/LoadTest.php b/modules/vc_contacts/tests/src/Functional/LoadTest.php
index 117f1a3..b4f2844 100644
--- a/modules/vc_contacts/tests/src/Functional/LoadTest.php
+++ b/modules/vc_contacts/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_contacts\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_dashboard/tests/src/Functional/LoadTest.php b/modules/vc_dashboard/tests/src/Functional/LoadTest.php
index 0d4586a..1fa2ed1 100644
--- a/modules/vc_dashboard/tests/src/Functional/LoadTest.php
+++ b/modules/vc_dashboard/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_dashboard\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_events/src/Form/VCEventForm.php b/modules/vc_events/src/Form/VCEventForm.php
index 8bcc669..a7865e1 100644
--- a/modules/vc_events/src/Form/VCEventForm.php
+++ b/modules/vc_events/src/Form/VCEventForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_events\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -16,7 +17,7 @@ class VCEventForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
diff --git a/modules/vc_events/src/Form/VCEventSettingsForm.php b/modules/vc_events/src/Form/VCEventSettingsForm.php
index 42ed0dc..3cd3143 100644
--- a/modules/vc_events/src/Form/VCEventSettingsForm.php
+++ b/modules/vc_events/src/Form/VCEventSettingsForm.php
@@ -27,7 +27,7 @@ class VCEventSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class VCEventSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/vc_events/src/VCEventAccessControlHandler.php b/modules/vc_events/src/VCEventAccessControlHandler.php
index 99fc478..cd7d3c9 100644
--- a/modules/vc_events/src/VCEventAccessControlHandler.php
+++ b/modules/vc_events/src/VCEventAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_events;
 
+use Drupal\vc_events\Entity\VCEventInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,8 +19,7 @@ class VCEventAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\vc_events\Entity\VCEventInterface $entity */
-
+    /** @var VCEventInterface $entity */
     switch ($operation) {
 
       case 'view':
@@ -71,9 +71,9 @@ class VCEventAccessControlHandler extends EntityAccessControlHandler {
   /**
    * Test for given 'own' permission.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    * @param $operation
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *
    * @return string|null
    *   The permission string indicating it's allowed.
diff --git a/modules/vc_events/src/VCEventHtmlRouteProvider.php b/modules/vc_events/src/VCEventHtmlRouteProvider.php
index 3244bd4..15a12de 100644
--- a/modules/vc_events/src/VCEventHtmlRouteProvider.php
+++ b/modules/vc_events/src/VCEventHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class VCEventHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/vc_events/src/VCEventPermissions.php b/modules/vc_events/src/VCEventPermissions.php
index 972eb99..87fecc3 100644
--- a/modules/vc_events/src/VCEventPermissions.php
+++ b/modules/vc_events/src/VCEventPermissions.php
@@ -37,7 +37,7 @@ class VCEventPermissions{
   /**
    * Returns a list of node permissions for a given node type.
    *
-   * @param \Drupal\vc_events\Entity\VCEventType $type
+   * @param VCEventType $type
    *   The VCEvent type.
    *
    * @return array
diff --git a/modules/vc_events/tests/src/Functional/LoadTest.php b/modules/vc_events/tests/src/Functional/LoadTest.php
index 7b9cf42..eae1d4b 100644
--- a/modules/vc_events/tests/src/Functional/LoadTest.php
+++ b/modules/vc_events/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_events\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_group_content/vc_gc_contacts/tests/src/Functional/LoadTest.php b/modules/vc_group_content/vc_gc_contacts/tests/src/Functional/LoadTest.php
index ff19587..b6c5188 100644
--- a/modules/vc_group_content/vc_gc_contacts/tests/src/Functional/LoadTest.php
+++ b/modules/vc_group_content/vc_gc_contacts/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_gc_contacts\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_group_content/vc_gc_resources/tests/src/Functional/LoadTest.php b/modules/vc_group_content/vc_gc_resources/tests/src/Functional/LoadTest.php
index 9e6020d..143fd3d 100644
--- a/modules/vc_group_content/vc_gc_resources/tests/src/Functional/LoadTest.php
+++ b/modules/vc_group_content/vc_gc_resources/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_gc_resources\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_groups/tests/src/Functional/LoadTest.php b/modules/vc_groups/tests/src/Functional/LoadTest.php
index 9ca346b..1b421f0 100644
--- a/modules/vc_groups/tests/src/Functional/LoadTest.php
+++ b/modules/vc_groups/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_groups\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_needs/src/Access/ActiveNeed.php b/modules/vc_needs/src/Access/ActiveNeed.php
index 75bda61..c99c7cf 100644
--- a/modules/vc_needs/src/Access/ActiveNeed.php
+++ b/modules/vc_needs/src/Access/ActiveNeed.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_needs\Access;
 
+use Drupal\Core\Access\AccessResultAllowed;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Access\AccessResult;
@@ -20,7 +21,7 @@ class ActiveNeed implements AccessInterface {
    * @param Route $route
    * @param RouteMatchInterface $route_match
    * @param AccountInterface $account
-   * @return AccessResult|\Drupal\Core\Access\AccessResultAllowed
+   * @return AccessResult|AccessResultAllowed
    */
   public function access(Route $route, RouteMatchInterface $route_match, AccountInterface $account) {
     $vc_need = $route_match->getParameter('vc_need');
diff --git a/modules/vc_needs/src/Controller/VCNeedController.php b/modules/vc_needs/src/Controller/VCNeedController.php
index 3f76c96..cc3af11 100644
--- a/modules/vc_needs/src/Controller/VCNeedController.php
+++ b/modules/vc_needs/src/Controller/VCNeedController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vc_needs\Controller;
 
+use Drupal\Core\Datetime\DateFormatter;
+use Drupal\Core\Render\Renderer;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -19,14 +21,14 @@ class VCNeedController extends ControllerBase implements ContainerInjectionInter
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
@@ -78,7 +80,7 @@ class VCNeedController extends ControllerBase implements ContainerInjectionInter
   /**
    * Generates an overview table of older revisions of a VCNeed.
    *
-   * @param \Drupal\vc_needs\Entity\VCNeedInterface $vc_need
+   * @param VCNeedInterface $vc_need
    *   A VCNeed object.
    *
    * @return array
@@ -124,7 +126,9 @@ class VCNeedController extends ControllerBase implements ContainerInjectionInter
           ]));
         }
         else {
-          $link = $vc_need->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$vc_need` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $vc_need->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/modules/vc_needs/src/Entity/VCNeedInterface.php b/modules/vc_needs/src/Entity/VCNeedInterface.php
index 95e12fd..d5b8f31 100644
--- a/modules/vc_needs/src/Entity/VCNeedInterface.php
+++ b/modules/vc_needs/src/Entity/VCNeedInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_needs\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -79,7 +80,7 @@ interface VCNeedInterface extends ContentEntityInterface, RevisionLogInterface,
   /**
    * Gets the VCNeed revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/modules/vc_needs/src/Form/VCNeedForm.php b/modules/vc_needs/src/Form/VCNeedForm.php
index 31d7030..34ea51e 100644
--- a/modules/vc_needs/src/Form/VCNeedForm.php
+++ b/modules/vc_needs/src/Form/VCNeedForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_needs\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\vc_needs\Entity\VCNeed;
@@ -17,7 +18,7 @@ class VCNeedForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
diff --git a/modules/vc_needs/src/Form/VCNeedRevisionDeleteForm.php b/modules/vc_needs/src/Form/VCNeedRevisionDeleteForm.php
index b32173b..c120f1e 100644
--- a/modules/vc_needs/src/Form/VCNeedRevisionDeleteForm.php
+++ b/modules/vc_needs/src/Form/VCNeedRevisionDeleteForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\vc_needs\Form;
 
+use Drupal\vc_needs\Entity\VCNeedInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -17,21 +20,21 @@ class VCNeedRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The VCNeed revision.
    *
-   * @var \Drupal\vc_needs\Entity\VCNeedInterface
+   * @var VCNeedInterface
    */
   protected $revision;
 
   /**
    * The VCNeed storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vCNeedStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -57,7 +60,7 @@ class VCNeedRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -92,7 +95,7 @@ class VCNeedRevisionDeleteForm extends ConfirmFormBase {
     $this->VCNeedStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('VCNeed: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of VCNeed %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of VCNeed %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.vc_need.canonical',
        ['vc_need' => $this->revision->id()]
diff --git a/modules/vc_needs/src/Form/VCNeedRevisionRevertForm.php b/modules/vc_needs/src/Form/VCNeedRevisionRevertForm.php
index e2076df..8bb6c18 100644
--- a/modules/vc_needs/src/Form/VCNeedRevisionRevertForm.php
+++ b/modules/vc_needs/src/Form/VCNeedRevisionRevertForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vc_needs\Form;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -18,21 +20,21 @@ class VCNeedRevisionRevertForm extends ConfirmFormBase {
   /**
    * The VCNeed revision.
    *
-   * @var \Drupal\vc_needs\Entity\VCNeedInterface
+   * @var VCNeedInterface
    */
   protected $revision;
 
   /**
    * The VCNeed storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vCNeedStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -118,18 +120,18 @@ class VCNeedRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\vc_needs\Entity\VCNeedInterface $revision
+   * @param VCNeedInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\vc_needs\Entity\VCNeedInterface
+   * @return VCNeedInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(VCNeedInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/modules/vc_needs/src/Form/VCNeedRevisionRevertTranslationForm.php b/modules/vc_needs/src/Form/VCNeedRevisionRevertTranslationForm.php
index df8f674..e380d76 100644
--- a/modules/vc_needs/src/Form/VCNeedRevisionRevertTranslationForm.php
+++ b/modules/vc_needs/src/Form/VCNeedRevisionRevertTranslationForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_needs\Form;
 
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\vc_needs\Entity\VCNeedInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -23,7 +24,7 @@ class VCNeedRevisionRevertTranslationForm extends VCNeedRevisionRevertForm {
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -75,7 +76,7 @@ class VCNeedRevisionRevertTranslationForm extends VCNeedRevisionRevertForm {
   protected function prepareRevertedRevision(VCNeedInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\vc_needs\Entity\VCNeedInterface $default_revision */
+    /** @var VCNeedInterface $default_revision */
     $latest_revision = $this->VCNeedStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
@@ -89,7 +90,7 @@ class VCNeedRevisionRevertTranslationForm extends VCNeedRevisionRevertForm {
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/modules/vc_needs/src/Form/VCNeedSettingsForm.php b/modules/vc_needs/src/Form/VCNeedSettingsForm.php
index 5803cb0..231615e 100644
--- a/modules/vc_needs/src/Form/VCNeedSettingsForm.php
+++ b/modules/vc_needs/src/Form/VCNeedSettingsForm.php
@@ -27,7 +27,7 @@ class VCNeedSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class VCNeedSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/vc_needs/src/VCNeedAccessControlHandler.php b/modules/vc_needs/src/VCNeedAccessControlHandler.php
index 6171abd..0a4f40d 100644
--- a/modules/vc_needs/src/VCNeedAccessControlHandler.php
+++ b/modules/vc_needs/src/VCNeedAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_needs;
 
+use Drupal\vc_needs\Entity\VCNeedInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,8 +19,7 @@ class VCNeedAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\vc_needs\Entity\VCNeedInterface $entity */
-
+    /** @var VCNeedInterface $entity */
     switch ($operation) {
 
       case 'view':
@@ -71,9 +71,9 @@ class VCNeedAccessControlHandler extends EntityAccessControlHandler {
   /**
    * Test for given 'own' permission.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    * @param $operation
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *
    * @return string|null
    *   The permission string indicating it's allowed.
diff --git a/modules/vc_needs/src/VCNeedHtmlRouteProvider.php b/modules/vc_needs/src/VCNeedHtmlRouteProvider.php
index a246bfd..1fce042 100644
--- a/modules/vc_needs/src/VCNeedHtmlRouteProvider.php
+++ b/modules/vc_needs/src/VCNeedHtmlRouteProvider.php
@@ -52,10 +52,10 @@ class VCNeedHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -76,10 +76,10 @@ class VCNeedHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -100,10 +100,10 @@ class VCNeedHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class VCNeedHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -148,10 +148,10 @@ class VCNeedHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -172,10 +172,10 @@ class VCNeedHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/vc_needs/src/VCNeedPermissions.php b/modules/vc_needs/src/VCNeedPermissions.php
index 4e1d1dc..960e6e6 100644
--- a/modules/vc_needs/src/VCNeedPermissions.php
+++ b/modules/vc_needs/src/VCNeedPermissions.php
@@ -36,7 +36,7 @@ class VCNeedPermissions{
   /**
    * Returns a list of node permissions for a given node type.
    *
-   * @param \Drupal\vc_needs\Entity\VCNeedType $type
+   * @param VCNeedType $type
    *   The VCNeed type.
    *
    * @return array
diff --git a/modules/vc_needs/src/VCNeedStatusManager.php b/modules/vc_needs/src/VCNeedStatusManager.php
index 34dcb59..1c48ff8 100644
--- a/modules/vc_needs/src/VCNeedStatusManager.php
+++ b/modules/vc_needs/src/VCNeedStatusManager.php
@@ -29,9 +29,9 @@ class VCNeedStatusManager extends DefaultPluginManager implements VCNeedStatusMa
   /**
    * Constructs a new VCNeedStatusManager object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
    */
   public function __construct(ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
diff --git a/modules/vc_needs/src/VCNeedStorageInterface.php b/modules/vc_needs/src/VCNeedStorageInterface.php
index a199b8e..ffa9175 100644
--- a/modules/vc_needs/src/VCNeedStorageInterface.php
+++ b/modules/vc_needs/src/VCNeedStorageInterface.php
@@ -20,7 +20,7 @@ interface VCNeedStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of VCNeed revision IDs for a specific VCNeed.
    *
-   * @param \Drupal\vc_needs\Entity\VCNeedInterface $entity
+   * @param VCNeedInterface $entity
    *   The VCNeed entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface VCNeedStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as VCNeed author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface VCNeedStorageInterface extends ContentEntityStorageInterface {
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\vc_needs\Entity\VCNeedInterface $entity
+   * @param VCNeedInterface $entity
    *   The VCNeed entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface VCNeedStorageInterface extends ContentEntityStorageInterface {
   /**
    * Unsets the language for all VCNeed with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/modules/vc_needs/tests/src/Functional/LoadTest.php b/modules/vc_needs/tests/src/Functional/LoadTest.php
index 764b669..146b4e4 100644
--- a/modules/vc_needs/tests/src/Functional/LoadTest.php
+++ b/modules/vc_needs/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_needs\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_needs/vc_needs.install b/modules/vc_needs/vc_needs.install
index 637a057..410574f 100644
--- a/modules/vc_needs/vc_needs.install
+++ b/modules/vc_needs/vc_needs.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\vc_needs\Entity\VCNeed;
 /**
  * @file
  * Contains vc_needs.install.
@@ -14,7 +16,7 @@ function vc_needs_update_8101(&$sandbox) {
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
 
     // Create a new field definition.
-    $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('boolean')
+    $new_field = BaseFieldDefinition::create('boolean')
       ->setLabel(t('Active'))
       ->setRevisionable(TRUE)
       ->setDescription(t('A boolean indicating whether the Need is active for volunteer purposes.'))
@@ -40,12 +42,12 @@ function vc_needs_update_8102(&$sandbox) {
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
 
   // Create a new field definition.
-  $new_field = \Drupal\Core\Field\BaseFieldDefinition::create('list_string')
+  $new_field = BaseFieldDefinition::create('list_string')
     ->setLabel(t('Need Status'))
     ->setDescription(t('The current status of the need'))
     ->setRevisionable(TRUE)
     ->setSettings([
-      'allowed_values' => \Drupal\vc_needs\Entity\VCNeed::getNeedStatusesAsSelectOptions(),
+      'allowed_values' => VCNeed::getNeedStatusesAsSelectOptions(),
       'text_processing' => 0,
     ])
     ->setDefaultValue('inactive')
@@ -67,4 +69,4 @@ function vc_needs_update_8102(&$sandbox) {
   foreach ($entities as $entity) {
     $entity->set('need_status', 'active')->save();
   }
-}
\ No newline at end of file
+}
diff --git a/modules/vc_operations/tests/src/Functional/LoadTest.php b/modules/vc_operations/tests/src/Functional/LoadTest.php
index 1118838..15f1dcd 100644
--- a/modules/vc_operations/tests/src/Functional/LoadTest.php
+++ b/modules/vc_operations/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_operations\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_resources/modules/vc_resources_information/tests/src/Functional/LoadTest.php b/modules/vc_resources/modules/vc_resources_information/tests/src/Functional/LoadTest.php
index 160eb7b..ac69930 100644
--- a/modules/vc_resources/modules/vc_resources_information/tests/src/Functional/LoadTest.php
+++ b/modules/vc_resources/modules/vc_resources_information/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_resources_document\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
diff --git a/modules/vc_resources/src/Controller/VCResourceController.php b/modules/vc_resources/src/Controller/VCResourceController.php
index 7ad5a94..8966d2b 100644
--- a/modules/vc_resources/src/Controller/VCResourceController.php
+++ b/modules/vc_resources/src/Controller/VCResourceController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vc_resources\Controller;
 
+use Drupal\Core\Datetime\DateFormatter;
+use Drupal\Core\Render\Renderer;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ -19,14 +21,14 @@ class VCResourceController extends ControllerBase implements ContainerInjectionI
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
@@ -78,7 +80,7 @@ class VCResourceController extends ControllerBase implements ContainerInjectionI
   /**
    * Generates an overview table of older revisions of a VCResource.
    *
-   * @param \Drupal\vc_resources\Entity\VCResourceInterface $vc_resource
+   * @param VCResourceInterface $vc_resource
    *   A VCResource object.
    *
    * @return array
@@ -124,7 +126,9 @@ class VCResourceController extends ControllerBase implements ContainerInjectionI
           ]));
         }
         else {
-          $link = $vc_resource->link($date);
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Please confirm that `$vc_resource` is an instance of `\Drupal\Core\Entity\EntityInterface`. Only the method name and not the class name was checked for this replacement, so this may be a false positive.
+          $link = $vc_resource->toLink($date)->toString();
         }
 
         $row = [];
diff --git a/modules/vc_resources/src/Entity/VCResourceInterface.php b/modules/vc_resources/src/Entity/VCResourceInterface.php
index 8066b92..0911891 100644
--- a/modules/vc_resources/src/Entity/VCResourceInterface.php
+++ b/modules/vc_resources/src/Entity/VCResourceInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_resources\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -79,7 +80,7 @@ interface VCResourceInterface extends ContentEntityInterface, RevisionLogInterfa
   /**
    * Gets the VCResource revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/modules/vc_resources/src/Form/VCResourceForm.php b/modules/vc_resources/src/Form/VCResourceForm.php
index 977570e..587808a 100644
--- a/modules/vc_resources/src/Form/VCResourceForm.php
+++ b/modules/vc_resources/src/Form/VCResourceForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_resources\Form;
 
+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -16,7 +17,7 @@ class VCResourceForm extends ContentEntityForm {
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
diff --git a/modules/vc_resources/src/Form/VCResourceRevisionDeleteForm.php b/modules/vc_resources/src/Form/VCResourceRevisionDeleteForm.php
index ae6474f..27e1048 100644
--- a/modules/vc_resources/src/Form/VCResourceRevisionDeleteForm.php
+++ b/modules/vc_resources/src/Form/VCResourceRevisionDeleteForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\vc_resources\Form;
 
+use Drupal\vc_resources\Entity\VCResourceInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Database\Connection;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -17,21 +20,21 @@ class VCResourceRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The VCResource revision.
    *
-   * @var \Drupal\vc_resources\Entity\VCResourceInterface
+   * @var VCResourceInterface
    */
   protected $revision;
 
   /**
    * The VCResource storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vCResourceStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
@@ -57,7 +60,7 @@ class VCResourceRevisionDeleteForm extends ConfirmFormBase {
    */
   public function getQuestion() {
     return $this->t('Are you sure you want to delete the revision from %revision-date?', [
-      '%revision-date' => format_date($this->revision->getRevisionCreationTime()),
+      '%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()),
     ]);
   }
 
@@ -92,7 +95,7 @@ class VCResourceRevisionDeleteForm extends ConfirmFormBase {
     $this->VCResourceStorage->deleteRevision($this->revision->getRevisionId());
 
     $this->logger('content')->notice('VCResource: deleted %title revision %revision.', ['%title' => $this->revision->label(), '%revision' => $this->revision->getRevisionId()]);
-    $this->messenger()->addMessage(t('Revision from %revision-date of VCResource %title has been deleted.', ['%revision-date' => format_date($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
+    $this->messenger()->addMessage(t('Revision from %revision-date of VCResource %title has been deleted.', ['%revision-date' => \Drupal::service('date.formatter')->format($this->revision->getRevisionCreationTime()), '%title' => $this->revision->label()]));
     $form_state->setRedirect(
       'entity.vc_resource.canonical',
        ['vc_resource' => $this->revision->id()]
diff --git a/modules/vc_resources/src/Form/VCResourceRevisionRevertForm.php b/modules/vc_resources/src/Form/VCResourceRevisionRevertForm.php
index 10e76bd..9b3beb6 100644
--- a/modules/vc_resources/src/Form/VCResourceRevisionRevertForm.php
+++ b/modules/vc_resources/src/Form/VCResourceRevisionRevertForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\vc_resources\Form;
 
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -18,21 +20,21 @@ class VCResourceRevisionRevertForm extends ConfirmFormBase {
   /**
    * The VCResource revision.
    *
-   * @var \Drupal\vc_resources\Entity\VCResourceInterface
+   * @var VCResourceInterface
    */
   protected $revision;
 
   /**
    * The VCResource storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $vCResourceStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -118,18 +120,18 @@ class VCResourceRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\vc_resources\Entity\VCResourceInterface $revision
+   * @param VCResourceInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\vc_resources\Entity\VCResourceInterface
+   * @return VCResourceInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(VCResourceInterface $revision, FormStateInterface $form_state) {
     $revision->setNewRevision();
     $revision->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $revision;
   }
diff --git a/modules/vc_resources/src/Form/VCResourceRevisionRevertTranslationForm.php b/modules/vc_resources/src/Form/VCResourceRevisionRevertTranslationForm.php
index 549808a..511382e 100644
--- a/modules/vc_resources/src/Form/VCResourceRevisionRevertTranslationForm.php
+++ b/modules/vc_resources/src/Form/VCResourceRevisionRevertTranslationForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_resources\Form;
 
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\vc_resources\Entity\VCResourceInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -23,7 +24,7 @@ class VCResourceRevisionRevertTranslationForm extends VCResourceRevisionRevertFo
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
@@ -75,7 +76,7 @@ class VCResourceRevisionRevertTranslationForm extends VCResourceRevisionRevertFo
   protected function prepareRevertedRevision(VCResourceInterface $revision, FormStateInterface $form_state) {
     $revert_untranslated_fields = $form_state->getValue('revert_untranslated_fields');
 
-    /** @var \Drupal\vc_resources\Entity\VCResourceInterface $default_revision */
+    /** @var VCResourceInterface $default_revision */
     $latest_revision = $this->VCResourceStorage->load($revision->id());
     $latest_revision_translation = $latest_revision->getTranslation($this->langcode);
 
@@ -89,7 +90,7 @@ class VCResourceRevisionRevertTranslationForm extends VCResourceRevisionRevertFo
 
     $latest_revision_translation->setNewRevision();
     $latest_revision_translation->isDefaultRevision(TRUE);
-    $revision->setRevisionCreationTime(REQUEST_TIME);
+    $revision->setRevisionCreationTime(\Drupal::time()->getRequestTime());
 
     return $latest_revision_translation;
   }
diff --git a/modules/vc_resources/src/Form/VCResourceSettingsForm.php b/modules/vc_resources/src/Form/VCResourceSettingsForm.php
index 61040a0..f9dddd1 100644
--- a/modules/vc_resources/src/Form/VCResourceSettingsForm.php
+++ b/modules/vc_resources/src/Form/VCResourceSettingsForm.php
@@ -27,7 +27,7 @@ class VCResourceSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class VCResourceSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/modules/vc_resources/src/VCResourceAccessControlHandler.php b/modules/vc_resources/src/VCResourceAccessControlHandler.php
index 9361bc8..f67b631 100644
--- a/modules/vc_resources/src/VCResourceAccessControlHandler.php
+++ b/modules/vc_resources/src/VCResourceAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\vc_resources;
 
+use Drupal\vc_resources\Entity\VCResourceInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,8 +19,7 @@ class VCResourceAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\vc_resources\Entity\VCResourceInterface $entity */
-
+    /** @var VCResourceInterface $entity */
     switch ($operation) {
 
       case 'view':
@@ -71,9 +71,9 @@ class VCResourceAccessControlHandler extends EntityAccessControlHandler {
   /**
    * Test for given 'own' permission.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    * @param $operation
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *
    * @return string|null
    *   The permission string indicating it's allowed.
diff --git a/modules/vc_resources/src/VCResourceHtmlRouteProvider.php b/modules/vc_resources/src/VCResourceHtmlRouteProvider.php
index 246004a..6aa8e8d 100644
--- a/modules/vc_resources/src/VCResourceHtmlRouteProvider.php
+++ b/modules/vc_resources/src/VCResourceHtmlRouteProvider.php
@@ -52,10 +52,10 @@ class VCResourceHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -76,10 +76,10 @@ class VCResourceHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -100,10 +100,10 @@ class VCResourceHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -124,10 +124,10 @@ class VCResourceHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -148,10 +148,10 @@ class VCResourceHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision translation revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionTranslationRevertRoute(EntityTypeInterface $entity_type) {
@@ -172,10 +172,10 @@ class VCResourceHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/modules/vc_resources/src/VCResourcePermissions.php b/modules/vc_resources/src/VCResourcePermissions.php
index 6c42487..eb45803 100644
--- a/modules/vc_resources/src/VCResourcePermissions.php
+++ b/modules/vc_resources/src/VCResourcePermissions.php
@@ -36,7 +36,7 @@ class VCResourcePermissions{
   /**
    * Returns a list of node permissions for a given node type.
    *
-   * @param \Drupal\vc_resources\Entity\VCResourceType $type
+   * @param VCResourceType $type
    *   The VCResource type.
    *
    * @return array
diff --git a/modules/vc_resources/src/VCResourceStorageInterface.php b/modules/vc_resources/src/VCResourceStorageInterface.php
index 5fd6770..9f4eb90 100644
--- a/modules/vc_resources/src/VCResourceStorageInterface.php
+++ b/modules/vc_resources/src/VCResourceStorageInterface.php
@@ -20,7 +20,7 @@ interface VCResourceStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of VCResource revision IDs for a specific VCResource.
    *
-   * @param \Drupal\vc_resources\Entity\VCResourceInterface $entity
+   * @param VCResourceInterface $entity
    *   The VCResource entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface VCResourceStorageInterface extends ContentEntityStorageInterface {
   /**
    * Gets a list of revision IDs having a given user as VCResource author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface VCResourceStorageInterface extends ContentEntityStorageInterface {
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\vc_resources\Entity\VCResourceInterface $entity
+   * @param VCResourceInterface $entity
    *   The VCResource entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface VCResourceStorageInterface extends ContentEntityStorageInterface {
   /**
    * Unsets the language for all VCResource with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/modules/vc_resources/tests/src/Functional/LoadTest.php b/modules/vc_resources/tests/src/Functional/LoadTest.php
index 60266ec..13d1129 100644
--- a/modules/vc_resources/tests/src/Functional/LoadTest.php
+++ b/modules/vc_resources/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\vc_resources\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
