diff --git a/porterstemmer.info.yml b/porterstemmer.info.yml
index 24c3825..eccaedc 100644
--- a/porterstemmer.info.yml
+++ b/porterstemmer.info.yml
@@ -1,8 +1,7 @@
 name: Porter-Stemmer
 type: module
 description: Improves American English language searching by simplifying related words to their root (conjugations, plurals, ...).
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.1 || ^10
 package: Search
 dependencies:
   - drupal:search
diff --git a/tests/src/Functional/LangCodeTest.php b/tests/src/Functional/LangCodeTest.php
index a674b69..5097a48 100644
--- a/tests/src/Functional/LangCodeTest.php
+++ b/tests/src/Functional/LangCodeTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\porterstemmer\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\Traits\Core\CronRunTrait;
 use Drupal\Component\Render\FormattableMarkup;
@@ -41,7 +43,7 @@ class LangCodeTest extends BrowserTestBase {
   /**
    * A user with permission to administer nodes.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $testUser;
 
@@ -70,7 +72,7 @@ class LangCodeTest extends BrowserTestBase {
   /**
    * An array of nodes created for testing purposes.
    *
-   * @var \Drupal\node\NodeInterface[]
+   * @var NodeInterface[]
    */
   protected $nodes;
 
@@ -146,7 +148,10 @@ class LangCodeTest extends BrowserTestBase {
     // Run cron to ensure the content is indexed.
     $this->cronRun();
     $this->drupalGet('admin/reports/dblog');
-    $this->assertText(t('Cron run completed'), 'Log shows cron run completed');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Cron run completed'));
   }
 
   /**
@@ -155,28 +160,50 @@ class LangCodeTest extends BrowserTestBase {
   public function testStemSearching() {
 
     foreach ($this->searches as $search) {
-      $this->drupalPostForm('search/node', ['keys' => $search], t('Search'));
+      $this->drupalGet('search/node');
+      $this->submitForm(['keys' => $search], t('Search'));
 
       // Verify that all English-language test node variants show up in results.
       foreach ($this->testData as $title => $body) {
-        $this->assertText($title . ' (EN)', new FormattableMarkup('Search for %search returns English-language node with body %body', ['%search' => $search, '%body' => $body]));
+        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+        // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+        // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+        $this->assertSession()->pageTextContains($title . ' (EN)');
       }
 
       // Check for results by language.
       switch ($search) {
         case 'walk':
-          $this->assertNoText('Second Page (FR)', new FormattableMarkup('Search for %search does not show stemmed non-English results.', ['%search' => $search]));
-          $this->assertNoText('Second Page (UND)', new FormattableMarkup('Search for %search does show stemmed language-unspecified results.', ['%search' => $search]));
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (FR)');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (UND)');
           break;
 
         case 'walked':
-          $this->assertNoText('Second Page (FR)', new FormattableMarkup('Search for %search does not show stemmed non-English results.', ['%search' => $search]));
-          $this->assertNoText('Second Page (UND)', new FormattableMarkup('Search for %search does not show stemmed language-unspecified results.', ['%search' => $search]));
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (FR)');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextNotContains('Second Page (UND)');
           break;
 
         case 'walking':
-          $this->assertText('First Page (FR)', new FormattableMarkup('Search for %search does show matching non-English results.', ['%search' => $search]));
-          $this->assertText('First Page (UND)', new FormattableMarkup('Search for %search does show matching language-unspecified results.', ['%search' => $search]));
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextContains('First Page (FR)');
+          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+          // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+          // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+          $this->assertSession()->pageTextContains('First Page (UND)');
           break;
 
       }
