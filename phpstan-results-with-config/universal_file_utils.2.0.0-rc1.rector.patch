diff --git a/src/Event/UniversalFileBaseEvent.php b/src/Event/UniversalFileBaseEvent.php
index 43041b6..7055450 100755
--- a/src/Event/UniversalFileBaseEvent.php
+++ b/src/Event/UniversalFileBaseEvent.php
@@ -8,6 +8,7 @@
 
 namespace Drupal\universal_file_utils\Event;
 
+use Psr\Log\LoggerInterface;
 use Drupal\Component\EventDispatcher\Event;
 use Drupal\Core\Logger\LoggerChannelTrait;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -150,16 +151,15 @@ abstract class UniversalFileBaseEvent extends Event {
   }
 
   //---------------------------------------------------------------------------
-
   /**
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    */
   protected static function slogger() {
     return \Drupal::logger('file_event:' . static::class);
   }
 
   /**
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    */
   protected function logger() {
     return $this->getLogger('file_event:' . get_class($this));
diff --git a/src/UniversalFileOperations.php b/src/UniversalFileOperations.php
index e2058eb..3b29d8c 100755
--- a/src/UniversalFileOperations.php
+++ b/src/UniversalFileOperations.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\universal_file_utils;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Datetime\Time;
 use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Entity\EntityStorageException;
@@ -44,7 +46,7 @@ class UniversalFileOperations implements UniversalFileOperationsInterface {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -57,11 +59,11 @@ class UniversalFileOperations implements UniversalFileOperationsInterface {
    *
    * @param Time $time
    *
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *  The file system.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager,
                               FileUsageInterface $fileUsage, Time $time,
@@ -160,7 +162,7 @@ class UniversalFileOperations implements UniversalFileOperationsInterface {
 
       $destination = sprintf('%s/%s', $directory, $file->getFilename());
 
-      if ($newFile = file_copy($file, $destination)) {
+      if ($newFile = \Drupal::service('file.repository')->copy($file, $destination)) {
         try {
           $newFile->setPermanent();
           $newFile->save();
diff --git a/universal_file_utils.info.yml b/universal_file_utils.info.yml
index 73e8f32..eebb9c5 100644
--- a/universal_file_utils.info.yml
+++ b/universal_file_utils.info.yml
@@ -1,7 +1,7 @@
 name: 'Universal File Utils'
 type: 'module'
 description: 'Provides code for handling file accesses and downloads better through events.'
-core_version_requirement: ^9
+core_version_requirement: ^9.3 || ^10
 package: 'File System'
 
 # Information added by Drupal.org packaging script on 2021-10-29
