diff --git a/bs_base.bs_base.install b/bs_base.bs_base.install
index 2de56b9..0669787 100644
--- a/bs_base.bs_base.install
+++ b/bs_base.bs_base.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drush\Log\LogLevel;
 /**
  * @file
  * Update hooks for bs_base base themes.
@@ -137,7 +138,7 @@ function bs_base_bs_update_8006($target_theme_name) {
         file_put_contents($themes_info[$target_theme_name]->pathname, $yml_content);
 
         // Notify user that he needs to execute update one more time.
-        drush_log("Bad update is fixed, please run `drush bs-tu $target_theme_name` one more time to update theme correctly.", \Drush\Log\LogLevel::ALERT);
+        drush_log("Bad update is fixed, please run `drush bs-tu $target_theme_name` one more time to update theme correctly.", LogLevel::ALERT);
       }
     }
   }
diff --git a/bs_base.drush.inc b/bs_base.drush.inc
index 7bace40..362d2a1 100644
--- a/bs_base.drush.inc
+++ b/bs_base.drush.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\Extension;
 /**
  * @file
  * BS Base drush integration offering various theme management function.
@@ -1612,7 +1613,7 @@ function _bs_base_update_sass_files($theme_machine_name) {
 
   // Build SASS info array of parent themes.
   $parent_themes_sass_files = [];
-  /** @var \Drupal\Core\Extension\Extension $theme */
+  /** @var Extension $theme */
   foreach (array_keys($parent_themes) as $parent_theme_machine_name) {
     $parent_themes_sass_files[$parent_theme_machine_name] = _bs_base_get_sass_files($all_themes[$parent_theme_machine_name]->subpath);
   }
diff --git a/bs_base.theme b/bs_base.theme
index 9214fbb..42cf920 100644
--- a/bs_base.theme
+++ b/bs_base.theme
@@ -119,7 +119,7 @@ function bs_base_preprocess_maintenance_page(&$variables) {
   // Add maintenance image path.
   $maintenance_image = theme_get_setting('bs_base.maintenance_image');
   if (!empty($maintenance_image['path'])) {
-    $variables['maintenance_image_path'] = file_url_transform_relative(file_create_url($maintenance_image['path']));
+    $variables['maintenance_image_path'] = \Drupal::service('file_url_generator')->generateString($maintenance_image['path']);
   }
 }
 
@@ -146,7 +146,7 @@ function bs_base_preload_fonts(array $fonts, array &$attachments) {
     }
     // Support twig expansion syntax like @custom_theme/fonts/font1.woff.
     elseif (preg_match('/^\@([^\/]+)(\/.+)$/', $font, $match)) {
-      $uri = drupal_get_path('theme', $match[1]) . $match[2];
+      $uri = \Drupal::service('extension.list.theme')->getPath($match[1]) . $match[2];
     }
     // Support relative font path from the current active theme.
     elseif (strpos($font, '/') !== 0) {
@@ -163,7 +163,7 @@ function bs_base_preload_fonts(array $fonts, array &$attachments) {
       'as' => 'font',
       // @todo this two functions are depreciated in Drupal 9.3, fix it later.
       // @see https://www.drupal.org/node/2940031
-      'href' => file_url_transform_relative(file_create_url($uri)),
+      'href' => \Drupal::service('file_url_generator')->generateString($uri),
       'type' => 'font/' . pathinfo($font, PATHINFO_EXTENSION),
       'crossorigin' => 'anonymous',
     ], FALSE];
diff --git a/themes/bs_bootstrap/bs_bootstrap.theme b/themes/bs_bootstrap/bs_bootstrap.theme
index 099624a..cb94e93 100644
--- a/themes/bs_bootstrap/bs_bootstrap.theme
+++ b/themes/bs_bootstrap/bs_bootstrap.theme
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\block\BlockInterface;
+use Drupal\Core\Image\Image;
 /**
  * @file
  * Functions to support theming in the BS Bootstrap theme.
@@ -262,7 +264,7 @@ function bs_bootstrap_preprocess_page(&$variables) {
     $navbar_onhover_overlay = bs_bootstrap_get_setting('navbar.onhover_overlay');
 
     // We consider all menu blocks in navbar region to behave like navbar menus.
-    /** @var \Drupal\block\BlockInterface[] $blocks */
+    /** @var BlockInterface[] $blocks */
     $blocks = \Drupal::entityTypeManager()->getStorage('block')->loadByProperties([
       'theme' => \Drupal::theme()->getActiveTheme()->getName(),
       'region' => 'navbar',
@@ -369,7 +371,7 @@ function bs_bootstrap_preprocess_block(&$variables) {
         else {
           // Get the logo width and height.
           if (file_exists(DRUPAL_ROOT . $variables['site_logo'])) {
-            /** @var \Drupal\Core\Image\Image $image */
+            /** @var Image $image */
             $image = \Drupal::service('image.factory')->get(DRUPAL_ROOT . $variables['site_logo']);
             $logo_attributes['width'] = $image->getWidth();
             $logo_attributes['height'] = $image->getHeight();
