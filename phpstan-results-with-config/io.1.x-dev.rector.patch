diff --git a/io.module b/io.module
index 06cd20d..2e89e0e 100644
--- a/io.module
+++ b/io.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Pager\PagerManagerInterface;
 /**
  * @file
  * Provides integration with Intersection Observer API.
@@ -88,7 +89,7 @@ function io_config_schema_info_alter(array &$definitions) {
  * Implements hook_preprocess_io_pager().
  */
 function io_preprocess_io_pager(&$variables) {
-  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+  /** @var PagerManagerInterface $pager_manager */
   $pager_manager = \Drupal::service('pager.manager');
 
   $element = $variables['element'];
diff --git a/src/Controller/IoBlockController.php b/src/Controller/IoBlockController.php
index 0f5202b..5815210 100644
--- a/src/Controller/IoBlockController.php
+++ b/src/Controller/IoBlockController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\io\Controller;
 
+use Drupal\io\IoManager;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Render\BubbleableMetadata;
 use Drupal\Core\Controller\ControllerBase;
@@ -27,21 +28,21 @@ class IoBlockController extends ControllerBase {
   /**
    * The context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;
 
   /**
    * The context repository interface.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
   /**
    * The IO manager service.
    *
-   * @var \Drupal\io\IoManager
+   * @var IoManager
    */
   protected $ioManager;
 
@@ -68,14 +69,14 @@ class IoBlockController extends ControllerBase {
   /**
    * Loads and renders a block via AJAX.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
    *   Return the requested block based on the given block ID.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws AccessDeniedHttpException
+   * @throws NotFoundHttpException
    *
    * @see http://symfony.com/doc/current/routing.html#required-and-optional-placeholders
    */
diff --git a/src/EventSubscriber/IoEventSubscriber.php b/src/EventSubscriber/IoEventSubscriber.php
index b368040..39bcb01 100644
--- a/src/EventSubscriber/IoEventSubscriber.php
+++ b/src/EventSubscriber/IoEventSubscriber.php
@@ -16,7 +16,7 @@ class IoEventSubscriber implements EventSubscriberInterface {
   /**
    * Renders the ajax commands right before preparing the result.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   The response event, which contains the possible AjaxResponse object.
    */
   public function onResponse(ResponseEvent $event) {
@@ -31,7 +31,7 @@ class IoEventSubscriber implements EventSubscriberInterface {
   /**
    * Modifies AJAX response.
    *
-   * @param \Drupal\views\Ajax\ViewAjaxResponse $response
+   * @param ViewAjaxResponse $response
    *   The response object, which contains the commands and strings.
    */
   public function onViewAjaxResponse(ViewAjaxResponse &$response) {
diff --git a/src/IoManager.php b/src/IoManager.php
index cc2794a..2bf3b96 100644
--- a/src/IoManager.php
+++ b/src/IoManager.php
@@ -23,28 +23,28 @@ class IoManager implements IoManagerInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * Drupal\Core\Block\BlockManagerInterface.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
 
   /**
    * The blazy manager service.
    *
-   * @var \Drupal\blazy\BlazyManagerInterface
+   * @var BlazyManagerInterface
    */
   protected $blazyManager;
 
@@ -221,7 +221,7 @@ class IoManager implements IoManagerInterface {
    * Implements hook_form_FORM_ID_alter().
    */
   public function blockFormAlter(&$form, FormStateInterface $form_state, $form_id) {
-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $block = $form_state->getFormObject()->getEntity();
     if (!$this->isBlockApplicable($block)) {
       return;
diff --git a/tests/src/FunctionalJavascript/IoBlockFallbackTest.php b/tests/src/FunctionalJavascript/IoBlockFallbackTest.php
index 16107cd..346a3c1 100644
--- a/tests/src/FunctionalJavascript/IoBlockFallbackTest.php
+++ b/tests/src/FunctionalJavascript/IoBlockFallbackTest.php
@@ -11,6 +11,7 @@ class IoBlockFallbackTest extends IoBlockTestBase {
 
   /**
    * Test IO Blocks by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockAutoloadOnScroll() {
     parent::doIoBlockAutoloadOnScroll();
@@ -18,6 +19,7 @@ class IoBlockFallbackTest extends IoBlockTestBase {
 
   /**
    * Test IO Blocks by manually clicking the fallback links.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockManualOnClicking() {
     parent::doIoBlockManualOnClicking();
diff --git a/tests/src/FunctionalJavascript/IoBlockTest.php b/tests/src/FunctionalJavascript/IoBlockTest.php
index 0605fbc..418c977 100644
--- a/tests/src/FunctionalJavascript/IoBlockTest.php
+++ b/tests/src/FunctionalJavascript/IoBlockTest.php
@@ -22,6 +22,7 @@ class IoBlockTest extends IoBlockTestBase {
 
   /**
    * Test IO Blocks by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockAutoloadOnScroll() {
     parent::doIoBlockAutoloadOnScroll();
@@ -29,6 +30,7 @@ class IoBlockTest extends IoBlockTestBase {
 
   /**
    * Test IO Blocks by manually clicking the fallback links.
+   * @doesNotPerformAssertions
    */
   public function testIoBlockManualOnClicking() {
     parent::doIoBlockManualOnClicking();
diff --git a/tests/src/FunctionalJavascript/IoPagerFallbackTest.php b/tests/src/FunctionalJavascript/IoPagerFallbackTest.php
index 91b320f..0c6622a 100644
--- a/tests/src/FunctionalJavascript/IoPagerFallbackTest.php
+++ b/tests/src/FunctionalJavascript/IoPagerFallbackTest.php
@@ -11,6 +11,7 @@ class IoPagerFallbackTest extends IoPagerTestBase {
 
   /**
    * Test IO Pager by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerFallbackAutoloadOnScroll() {
     parent::doIoPagerAutoloadOnScroll();
@@ -18,6 +19,7 @@ class IoPagerFallbackTest extends IoPagerTestBase {
 
   /**
    * Test IO Pager by manually clicking the fallback link.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerFallbackManualOnClicking() {
     parent::doIoPagerManualOnClicking();
diff --git a/tests/src/FunctionalJavascript/IoPagerTest.php b/tests/src/FunctionalJavascript/IoPagerTest.php
index 3b39d9b..573fc6c 100644
--- a/tests/src/FunctionalJavascript/IoPagerTest.php
+++ b/tests/src/FunctionalJavascript/IoPagerTest.php
@@ -22,6 +22,7 @@ class IoPagerTest extends IoPagerTestBase {
 
   /**
    * Test IO Pager by scrolling down the window.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerAutoloadOnScroll() {
     parent::doIoPagerAutoloadOnScroll();
@@ -29,6 +30,7 @@ class IoPagerTest extends IoPagerTestBase {
 
   /**
    * Test IO Pager by manually clicking the fallback link.
+   * @doesNotPerformAssertions
    */
   public function testIoPagerManualOnClicking() {
     parent::doIoPagerManualOnClicking();
