diff --git a/composer.json b/composer.json
index 1386d4d..f81d0cc 100644
--- a/composer.json
+++ b/composer.json
@@ -16,6 +16,6 @@
     "source": "https://git.drupalcode.org/project/views_templates"
   },
   "require": {
-    "drupal/core": "^8 || ^9"
+    "drupal/core": "^9.3 || ^10"
   }
 }
diff --git a/src/Annotation/ViewsBuilder.php b/src/Annotation/ViewsBuilder.php
index b77f837..4a1421a 100644
--- a/src/Annotation/ViewsBuilder.php
+++ b/src/Annotation/ViewsBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_templates\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -32,7 +33,7 @@ class ViewsBuilder extends Plugin {
   /**
    * The administrative label of the View Builder.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Controller/ViewsBuilderController.php b/src/Controller/ViewsBuilderController.php
index 28b78e6..48f4922 100644
--- a/src/Controller/ViewsBuilderController.php
+++ b/src/Controller/ViewsBuilderController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_templates\Controller;
 
+use Drupal\views_templates\Plugin\ViewsBuilderPluginInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Url;
@@ -15,14 +16,14 @@ class ViewsBuilderController extends ControllerBase {
   /**
    * The plugin builder servive.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $builderManager;
 
   /**
    * Constructs a new ViewsBuilderController object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $builderManager
+   * @param PluginManagerInterface $builderManager
    *   The Views Builder Plugin Interface.
    */
   public function __construct(PluginManagerInterface $builderManager) {
@@ -55,10 +56,10 @@ class ViewsBuilderController extends ControllerBase {
       '#empty' => $this->t('There are no available Views Templates'),
     ];
 
-    /** @var \Drupal\views_templates\Plugin\ViewsBuilderPluginInterface $definition */
+    /** @var ViewsBuilderPluginInterface $definition */
     foreach ($this->builderManager->getDefinitions() as $definition) {
 
-      /** @var \Drupal\views_templates\Plugin\ViewsBuilderPluginInterface $builder */
+      /** @var ViewsBuilderPluginInterface $builder */
       $builder = $this->builderManager->createInstance($definition['id']);
       if ($builder->templateExists()) {
         $plugin_id = $builder->getPluginId();
diff --git a/src/Plugin/ViewsBuilderPluginInterface.php b/src/Plugin/ViewsBuilderPluginInterface.php
index 2f0ae51..e96242e 100644
--- a/src/Plugin/ViewsBuilderPluginInterface.php
+++ b/src/Plugin/ViewsBuilderPluginInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_templates\Plugin;
 
+use Drupal\views\ViewEntityInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -51,7 +52,7 @@ interface ViewsBuilderPluginInterface extends PluginInspectionInterface {
    * @param mixed $options
    *   Options to create a view.
    *
-   * @return \Drupal\views\ViewEntityInterface
+   * @return ViewEntityInterface
    *   Returns a view.
    */
   public function createView($options = NULL);
@@ -61,7 +62,7 @@ interface ViewsBuilderPluginInterface extends PluginInspectionInterface {
    *
    * @param array $form
    *   The form in array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The values from the form.
    *
    * @return mixed
diff --git a/src/Plugin/ViewsBuilderPluginManager.php b/src/Plugin/ViewsBuilderPluginManager.php
index 3b94f62..ef5bade 100644
--- a/src/Plugin/ViewsBuilderPluginManager.php
+++ b/src/Plugin/ViewsBuilderPluginManager.php
@@ -19,9 +19,9 @@ class ViewsBuilderPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/ViewsDuplicateBuilderBase.php b/src/Plugin/ViewsDuplicateBuilderBase.php
index 44a36e5..eb4437b 100644
--- a/src/Plugin/ViewsDuplicateBuilderBase.php
+++ b/src/Plugin/ViewsDuplicateBuilderBase.php
@@ -17,7 +17,7 @@ abstract class ViewsDuplicateBuilderBase extends ViewsBuilderBase implements Vie
   /**
    * The view template loader.
    *
-   * @var \Drupal\views_templates\ViewsTemplateLoaderInterface
+   * @var ViewsTemplateLoaderInterface
    */
   protected $templateLoader;
 
diff --git a/src/ViewTemplateForm.php b/src/ViewTemplateForm.php
index 6461d73..8ee9111 100644
--- a/src/ViewTemplateForm.php
+++ b/src/ViewTemplateForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_templates;
 
+use Drupal\views_templates\Plugin\ViewsBuilderPluginInterface;
 use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,14 +16,14 @@ class ViewTemplateForm extends FormBase {
   /**
    * The plugin manager interface.
    *
-   * @var \Drupal\Component\Plugin\PluginManagerInterface
+   * @var PluginManagerInterface
    */
   protected $builderManager;
 
   /**
    * Constructs a new ViewsBuilderController object.
    *
-   * @param \Drupal\Component\Plugin\PluginManagerInterface $builderManager
+   * @param PluginManagerInterface $builderManager
    *   The Views Builder Plugin Interface.
    */
   public function __construct(PluginManagerInterface $builderManager) {
@@ -110,7 +111,7 @@ class ViewTemplateForm extends FormBase {
    * @param mixed $plugin_id
    *   The plugin it to create builder.
    *
-   * @return \Drupal\views_templates\Plugin\ViewsBuilderPluginInterface
+   * @return ViewsBuilderPluginInterface
    *   Returns a builder.
    */
   public function createBuilder($plugin_id) {
diff --git a/src/ViewsTemplateLoader.php b/src/ViewsTemplateLoader.php
index 9f80ec5..7252d14 100644
--- a/src/ViewsTemplateLoader.php
+++ b/src/ViewsTemplateLoader.php
@@ -19,7 +19,7 @@ class ViewsTemplateLoader implements ViewsTemplateLoaderInterface {
 
     $template_id = $builder->getViewTemplateId();
     if (!isset($templates[$template_id])) {
-      $dir = drupal_get_path('module', $builder->getDefinitionValue('provider')) . '/views_templates';
+      $dir = \Drupal::service('extension.list.module')->getPath($builder->getDefinitionValue('provider')) . '/views_templates';
       if (is_dir($dir)) {
 
         $file_path = $dir . '/' . $builder->getViewTemplateId() . '.yml';
diff --git a/src/ViewsTemplateLoaderInterface.php b/src/ViewsTemplateLoaderInterface.php
index aa90c24..546ce84 100644
--- a/src/ViewsTemplateLoaderInterface.php
+++ b/src/ViewsTemplateLoaderInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\views_templates;
 
+use Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException;
 use Drupal\views_templates\Plugin\ViewsDuplicateBuilderPluginInterface;
 
 /**
@@ -12,10 +13,10 @@ interface ViewsTemplateLoaderInterface {
   /**
    * Load template array values from file system for builder plugin.
    *
-   * @param \Drupal\views_templates\Plugin\ViewsDuplicateBuilderPluginInterface $builder
+   * @param ViewsDuplicateBuilderPluginInterface $builder
    *   The Views Duplicate Builder Interface.
    *
-   * @throws \Symfony\Component\HttpFoundation\File\Exception\FileNotFoundException
+   * @throws FileNotFoundException
    *   If template does not exist.
    *
    * @return array
diff --git a/views_templates.info.yml b/views_templates.info.yml
index 2a322a2..cd54fd4 100644
--- a/views_templates.info.yml
+++ b/views_templates.info.yml
@@ -4,5 +4,4 @@ description: 'Reintroduces dynamic default views.'
 dependencies:
   - drupal:views
 package: Views
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
