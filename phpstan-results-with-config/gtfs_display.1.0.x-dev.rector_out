modules/contrib/gtfs_display/gtfs_display.module
modules/contrib/gtfs_display/src/Controller/GTFSDisplayController.php
modules/contrib/gtfs_display/src/Controller/GTFSDisplayIcon.php
modules/contrib/gtfs_display/src/EventSubscriber/RemoveXFrameOptionsSubscriber.php
modules/contrib/gtfs_display/src/Form/GTFSDisplayConfigForm.php
modules/contrib/gtfs_display/src/Routing/GTFSDisplayRouter.php
modules/contrib/gtfs_display/src/Services/GTFSDisplayRenderer.php
modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Agency.php
modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Base.php
modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Route.php
modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Stop.php
modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Trip.php

7 files with changes
====================

1) modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Stop.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gtfs_display\Plugin\GTFSDisplayRenderers;

+use Drupal\gtfs\Entity\Route;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\gtfs\Entity\GTFSEntityBase;
@@ @@
       '#theme' => 'item_list',
       '#list_type' => 'ul',
       '#title' => 'Routes',
-      '#items' => array_values(array_map(function (\Drupal\gtfs\Entity\Route $route) {
+      '#items' => array_values(array_map(function (Route $route) {
         return Link::fromTextAndUrl($route->label(), Url::fromUri($route->links()['display']));
       }, $stop->routes()))
     ];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Route.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gtfs_display\Plugin\GTFSDisplayRenderers;

+use Drupal\gtfs\Entity\Stop;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\gtfs\Entity\GTFSEntityBase;
@@ @@
           'stop_name' => 'Stop Name',
           'route' => 'Routes at Stop'
         ],
-        '#rows' => array_values(array_map(function (\Drupal\gtfs\Entity\Stop $stop) {
+        '#rows' => array_values(array_map(function (Stop $stop) {
           return [
             'stop_id' => [ 'data' => $stop->get('stop_id')->value ],
             'stop_name' => [ 'data' => Link::fromTextAndUrl($stop->label(), Url::fromUri($stop->links()['display'])) ],
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/gtfs_display/src/plugin/GTFSDisplayRenderers/Agency.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gtfs_display\Plugin\GTFSDisplayRenderers;

+use Drupal\gtfs\Entity\Route;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Drupal\gtfs\Entity\GTFSEntityBase;
@@ @@
       'table' => [
         '#type' => 'table',
         '#header' => ['Route ID', 'Route Name'],
-        '#rows' => array_values(array_map(function (\Drupal\gtfs\Entity\Route $route) {
+        '#rows' => array_values(array_map(function (Route $route) {
           return [
             $route->get('route_id')->value,
             Link::fromTextAndUrl($route->get('route_long_name')->value, Url::fromUri($route->links()['display']))
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/gtfs_display/src/Services/GTFSDisplayRenderer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gtfs_display\Services;

+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Render\BareHtmlPageRenderer;
 use Drupal\gtfs\Entity\GTFSEntityBase;
 use Drupal\gtfs\Entity\HasIdTrait;
@@ @@
  */
 class GTFSDisplayRenderer {
   public function render(string $type_id, $display_type): Response {
-    /** @var \Drupal\Core\Entity\EntityTypeManager $manager */
+    /** @var EntityTypeManager $manager */
     $manager = \Drupal::service('entity_type.manager');
     $storage = $manager->getStorage('gtfs_' . $type_id);
     $id = \Drupal::routeMatch()->getParameter("{$type_id}_id");
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/gtfs_display/src/Routing/GTFSDisplayRouter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gtfs_display\Routing;

+use Drupal\Core\Entity\EntityTypeInterface;
 use Symfony\Component\Routing\Route;

 /**
@@ @@
   public function routes() {
     $routes = [];
     $types = \Drupal::service('entity_type.manager')->getDefinitions();
-    /** @var \Drupal\Core\Entity\EntityTypeInterface $type */
+    /** @var EntityTypeInterface $type */
     foreach ($types as $type) {
       $is_gtfs_type = (strpos($type->id(), 'gtfs_') !== FALSE);
       if ($is_gtfs_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


6) modules/contrib/gtfs_display/src/EventSubscriber/RemoveXFrameOptionsSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\gtfs_display\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 class RemoveXFrameOptionsSubscriber implements EventSubscriberInterface {

-  public function RemoveXFrameOptions(FilterResponseEvent $event) {
+  public function RemoveXFrameOptions(ResponseEvent $event) {
     // TODO check only display routes
     $response = $event->getResponse();
     $response->headers->remove('X-Frame-Options');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/gtfs_display/src/Controller/GTFSDisplayIcon.php:16

    ---------- begin diff ----------
@@ @@
    */
   public function content($icon) {

-    $file = drupal_get_path('module', 'gtfs_display') . '/img/' . $icon . '-11.svg';
+    $file = \Drupal::service('extension.list.module')->getPath('gtfs_display') . '/img/' . $icon . '-11.svg';

     if(!file_exists($file)) {
       throw new NotFoundHttpException('Icon not found');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

