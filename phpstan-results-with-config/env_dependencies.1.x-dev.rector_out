modules/contrib/env_dependencies/src/Commands/EnvDependenciesCommand.php
modules/contrib/env_dependencies/src/EnvDependenciesEvent.php

2 files with changes
====================

1) modules/contrib/env_dependencies/src/EnvDependenciesEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\env_dependencies;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Config\ImmutableConfig;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Class EnvDependenciesEvent.
@@ @@
    *
    * @param string $environment
    *   Environment.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   Config object.
    */
   public function __construct($environment, ImmutableConfig $config) {
@@ @@
   /**
    * Get config.
    *
-   * @return \Drupal\Core\Config\ImmutableConfig
+   * @return ImmutableConfig
    *   return config object.
    */
   public function getConfig() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/env_dependencies/src/Commands/EnvDependenciesCommand.php:37

    ---------- begin diff ----------
@@ @@
    * EnvDependenciesCommand constructor.
    *
    * @param string|null $name
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
-   * @param \Drupal\Component\EventDispatcher\ContainerAwareEventDispatcher $eventDispatcher
-   * @param \Drupal\Core\Extension\ModuleInstallerInterface $moduleInstaller
-   * @param \Drupal\Core\Extension\ModuleExtensionList $extensionListModule
-   * @param \Drupal\Core\Extension\ProfileExtensionList $extensionListProfile
+   * @param CacheBackendInterface $cache
+   * @param ConfigFactoryInterface $config
+   * @param ContainerAwareEventDispatcher $eventDispatcher
+   * @param ModuleInstallerInterface $moduleInstaller
+   * @param ModuleExtensionList $extensionListModule
+   * @param ProfileExtensionList $extensionListProfile
    */
   public function __construct(string $name = NULL, CacheBackendInterface $cache, ConfigFactoryInterface $config, ContainerAwareEventDispatcher $eventDispatcher, ModuleInstallerInterface $moduleInstaller, ModuleExtensionList $extensionListModule, ProfileExtensionList $extensionListProfile) {
     parent::__construct($name);
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function execute(InputInterface $input, OutputInterface $output) {
+  protected function execute(InputInterface $input, OutputInterface $output): int {
     // Remove info cache.
     $this->extensionListProfile->reset();
     $this->extensionListModule->reset();
@@ @@

     if ($profile = \Drupal::installProfile()) {
       $default_dependencies[$profile] = TRUE;
-      /** @var \Drupal\Core\Extension\ProfileExtensionList $profile_extension_list */
+      /** @var ProfileExtensionList $profile_extension_list */
       $profile_extension_list = \Drupal::service('extension.list.profile');
       $list_profiles = $profile_extension_list->getAllInstalledInfo();
       foreach ($list_profiles as $profile => $profile_info) {
@@ @@
       $this->eventDispatcher->dispatch(EnvDependenciesEvent::AFTER_ENABLE_DEPENDENCIES, $event);
       $output->writeln('Switched to: ' . $environment);
     }
+    return 0;
   }

 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * ConsoleExecuteReturnIntRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 2 files have been changed by Rector                                       

