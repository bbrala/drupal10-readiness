diff --git a/security_review.api.php b/security_review.api.php
index 157689d..54005db 100644
--- a/security_review.api.php
+++ b/security_review.api.php
@@ -32,7 +32,7 @@ function hook_security_review_checks() {
 /**
  * Provides logging capabilities.
  *
- * @param \Drupal\security_review\Check $check
+ * @param Check $check
  *   The Check the event is related to.
  * @param string $message
  *   The message.
diff --git a/security_review.drush.inc b/security_review.drush.inc
index 6931887..a060aa1 100644
--- a/security_review.drush.inc
+++ b/security_review.drush.inc
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\security_review\SecurityReview;
+use Drupal\security_review\Checklist;
+use Drupal\security_review\Check;
 /**
  * @file
  * Drush commands for Security Review module.
@@ -62,10 +65,10 @@ function security_review_drush_help($section) {
  * Runs a checklist and displays results.
  */
 function security_review_drush() {
-  /** @var \Drupal\security_review\SecurityReview $security_review */
+  /** @var SecurityReview $security_review */
   $security_review = Drupal::service('security_review');
 
-  /** @var \Drupal\security_review\Checklist $checklist */
+  /** @var Checklist $checklist */
   $checklist = Drupal::service('security_review.checklist');
 
   $store = drush_get_option('store');
@@ -90,9 +93,9 @@ function security_review_drush() {
   $results = [];
   if (!$last_run) {
     // Do a normal security review run.
-    /** @var \Drupal\security_review\Check[] $checks */
+    /** @var Check[] $checks */
     $checks = [];
-    /** @var \Drupal\security_review\Check[] $to_skip */
+    /** @var Check[] $to_skip */
     $to_skip = [];
 
     // Fill the $checks array.
@@ -164,11 +167,11 @@ function security_review_drush() {
  * @param string $check_name
  *   The check to get.
  *
- * @return \Drupal\security_review\Check|null
+ * @return Check|null
  *   The found Check.
  */
 function _security_review_drush_get_check($check_name) {
-  /** @var \Drupal\security_review\Checklist $checklist */
+  /** @var Checklist $checklist */
   $checklist = Drupal::service('security_review.checklist');
 
   // Default namespace is Security Review.
@@ -187,7 +190,7 @@ function _security_review_drush_get_check($check_name) {
 /**
  * Helper function to compile Security Review results.
  *
- * @param \Drupal\security_review\CheckResult[] $results
+ * @param CheckResult[] $results
  *   An array of CheckResults.
  * @param bool $short_titles
  *   Whether to use short message (check title) or full check success or failure
diff --git a/security_review.info.yml b/security_review.info.yml
index 1e9fbca..f84f229 100644
--- a/security_review.info.yml
+++ b/security_review.info.yml
@@ -2,5 +2,5 @@ name: 'Security Review'
 type: module
 description: 'Site security and configuration review module.'
 package: Security
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: security_review.settings
diff --git a/security_review.install b/security_review.install
index cb3af39..1869eff 100644
--- a/security_review.install
+++ b/security_review.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\security_review\Checklist;
 /**
  * @file
  * Install, update and uninstall functions for the security_review module.
@@ -28,7 +29,7 @@ function security_review_requirements($phase) {
 
   // Provides a Status Report entry.
   if ($phase == 'runtime') {
-    /** @var \Drupal\security_review\Checklist $checklist */
+    /** @var Checklist $checklist */
     $checklist = Drupal::service('security_review.checklist');
 
     $failed_checks = FALSE;
diff --git a/security_review.module b/security_review.module
index 6d9e3fe..bf05fbd 100644
--- a/security_review.module
+++ b/security_review.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\security_review\SecurityReview;
+use Drupal\security_review\Checklist;
 /**
  * @file
  * Site security review and reporting Drupal module.
@@ -55,7 +57,7 @@ function security_review_security_review_log(Check $check, $message, array $cont
  * Implements hook_modules_uninstalled().
  */
 function security_review_modules_uninstalled($modules) {
-  /** @var \Drupal\security_review\SecurityReview $security_review */
+  /** @var SecurityReview $security_review */
   $security_review = Drupal::service('security_review');
 
   // Clean orphaned checks.
@@ -69,7 +71,7 @@ function security_review_modules_installed($modules) {
   // Post-install hook.
   if (in_array('security_review', $modules)) {
 
-    /** @var \Drupal\security_review\SecurityReview $security_review */
+    /** @var SecurityReview $security_review */
     $security_review = Drupal::service('security_review');
 
     // Clean orphaned checks.
@@ -172,7 +174,7 @@ function security_review_cron() {
 /**
  * Batch operation: runs a single check.
  *
- * @param \Drupal\security_review\Check $check
+ * @param Check $check
  *   The check to run.
  * @param array $context
  *   The Batch context.
@@ -194,16 +196,16 @@ function _security_review_batch_run_op(Check $check, array &$context) {
  *
  * @param bool $success
  *   Whether the batch job was successful.
- * @param \Drupal\security_review\CheckResult[] $results
+ * @param CheckResult[] $results
  *   The results of the batch job.
  * @param array $operations
  *   The array of batch operations.
  */
 function _security_review_batch_run_finished($success, array $results, array $operations) {
-  /** @var \Drupal\security_review\SecurityReview $security_review */
+  /** @var SecurityReview $security_review */
   $security_review = Drupal::service('security_review');
 
-  /** @var \Drupal\security_review\Checklist $checklist */
+  /** @var Checklist $checklist */
   $checklist = Drupal::service('security_review.checklist');
 
   $security_review->setLastRun(time());
diff --git a/src/Check.php b/src/Check.php
index f5c5b65..f223b3f 100644
--- a/src/Check.php
+++ b/src/Check.php
@@ -2,6 +2,15 @@
 
 namespace Drupal\security_review;
 
+use Drupal\Core\Config\Config;
+use Symfony\Component\DependencyInjection\ContainerInterface;
+use Drupal\Core\State\State;
+use Drupal\Core\Config\ConfigFactory;
+use Drupal\Core\Session\AccountProxy;
+use Drupal\Core\Database\Connection;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\DrupalKernel;
+use Drupal\Core\Extension\ModuleHandler;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\Logger\RfcLogLevel;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -18,28 +27,28 @@ abstract class Check {
   /**
    * The configuration storage for this check.
    *
-   * @var \Drupal\Core\Config\Config $config
+   * @var Config $config
    */
   protected $config;
 
   /**
    * The service container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerInterface
+   * @var ContainerInterface
    */
   protected $container;
 
   /**
    * Settings handler for this check.
    *
-   * @var \Drupal\security_review\CheckSettingsInterface $settings
+   * @var CheckSettingsInterface $settings
    */
   protected $settings;
 
   /**
    * The State system.
    *
-   * @var \Drupal\Core\State\State
+   * @var State
    */
   protected $state;
 
@@ -156,7 +165,7 @@ abstract class Check {
   /**
    * Returns the check-specific settings' handler.
    *
-   * @return \Drupal\security_review\CheckSettingsInterface
+   * @return CheckSettingsInterface
    *   The settings interface of the check.
    */
   public function settings() {
@@ -166,7 +175,7 @@ abstract class Check {
   /**
    * The actual procedure of carrying out the check.
    *
-   * @return \Drupal\security_review\CheckResult
+   * @return CheckResult
    *   The result of running the check.
    */
   public abstract function run();
@@ -174,7 +183,7 @@ abstract class Check {
   /**
    * Same as run(), but used in CLI context such as Drush.
    *
-   * @return \Drupal\security_review\CheckResult
+   * @return CheckResult
    *   The result of running the check.
    */
   public function runCli() {
@@ -194,7 +203,7 @@ abstract class Check {
    *
    * Usually this is a list of the findings and an explanation.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The check result to evaluate.
    *
    * @return array
@@ -207,7 +216,7 @@ abstract class Check {
   /**
    * Evaluates a CheckResult and returns a plaintext output.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The check result to evaluate.
    *
    * @return string
@@ -236,7 +245,7 @@ abstract class Check {
    * @param bool $get_findings
    *   Whether to get the findings too.
    *
-   * @return \Drupal\security_review\CheckResult|null
+   * @return CheckResult|null
    *   The last stored result (or null).
    */
   public function lastResult($get_findings = FALSE) {
@@ -332,7 +341,7 @@ abstract class Check {
    * Returns null if it hasn't been skipped yet or the user that skipped the
    * check is not valid anymore.
    *
-   * @return \Drupal\user\Entity\User|null
+   * @return User|null
    *   The user the check was last skipped by (or null).
    */
   public function skippedBy() {
@@ -398,7 +407,7 @@ abstract class Check {
   /**
    * Stores a result in the state system.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The result to store.
    */
   public function storeResult(CheckResult $result) {
@@ -432,7 +441,7 @@ abstract class Check {
    * @param int $time
    *   The time the test was run.
    *
-   * @return \Drupal\security_review\CheckResult
+   * @return CheckResult
    *   The created CheckResult.
    */
   public function createResult($result, array $findings = [], $visible = TRUE, $time = NULL) {
@@ -442,7 +451,7 @@ abstract class Check {
   /**
    * Returns the Security Review Checklist service.
    *
-   * @return \Drupal\security_review\Checklist
+   * @return Checklist
    *   Security Review's Checklist service.
    */
   protected function checklist() {
@@ -452,7 +461,7 @@ abstract class Check {
   /**
    * Returns the Config factory.
    *
-   * @return \Drupal\Core\Config\ConfigFactory
+   * @return ConfigFactory
    *   Config factory.
    */
   protected function configFactory() {
@@ -462,7 +471,7 @@ abstract class Check {
   /**
    * Returns the service container.
    *
-   * @return \Symfony\Component\DependencyInjection\ContainerInterface
+   * @return ContainerInterface
    *   Service container.
    */
   protected function container() {
@@ -472,7 +481,7 @@ abstract class Check {
   /**
    * Returns the current Drupal user.
    *
-   * @return \Drupal\Core\Session\AccountProxy
+   * @return AccountProxy
    *   Current Drupal user.
    */
   protected function currentUser() {
@@ -482,7 +491,7 @@ abstract class Check {
   /**
    * Returns the database connection.
    *
-   * @return \Drupal\Core\Database\Connection
+   * @return Connection
    *   Database connection.
    */
   protected function database() {
@@ -492,7 +501,7 @@ abstract class Check {
   /**
    * Returns the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   Entity type manager.
    */
   protected function entityTypeManager() {
@@ -502,7 +511,7 @@ abstract class Check {
   /**
    * Returns the Drupal Kernel.
    *
-   * @return \Drupal\Core\DrupalKernel
+   * @return DrupalKernel
    *   Drupal Kernel.
    */
   protected function kernel() {
@@ -512,7 +521,7 @@ abstract class Check {
   /**
    * Returns the module handler.
    *
-   * @return \Drupal\Core\Extension\ModuleHandler
+   * @return ModuleHandler
    *   Module handler.
    */
   protected function moduleHandler() {
@@ -522,7 +531,7 @@ abstract class Check {
   /**
    * Returns the Security Review Security service.
    *
-   * @return \Drupal\security_review\Security
+   * @return Security
    *   Security Review's Security service.
    */
   protected function security() {
@@ -532,7 +541,7 @@ abstract class Check {
   /**
    * Returns the Security Review service.
    *
-   * @return \Drupal\security_review\SecurityReview
+   * @return SecurityReview
    *   Security Review service.
    */
   protected function securityReview() {
diff --git a/src/CheckResult.php b/src/CheckResult.php
index 8307a8b..78e9cd5 100644
--- a/src/CheckResult.php
+++ b/src/CheckResult.php
@@ -15,7 +15,7 @@ class CheckResult {
   /**
    * Stores the parent Check.
    *
-   * @var \Drupal\security_review\Check $check
+   * @var Check $check
    */
   private $check;
 
@@ -50,7 +50,7 @@ class CheckResult {
   /**
    * Constructs an immutable CheckResult.
    *
-   * @param \Drupal\security_review\Check $check
+   * @param Check $check
    *   The Check that created this result.
    * @param int $result
    *   The result integer (see the constants defined above).
@@ -108,7 +108,7 @@ class CheckResult {
   /**
    * Returns the parent Check.
    *
-   * @return \Drupal\security_review\Check
+   * @return Check
    *   The Check that created this result.
    */
   public function check() {
diff --git a/src/CheckSettings.php b/src/CheckSettings.php
index 5e9fce9..4229470 100644
--- a/src/CheckSettings.php
+++ b/src/CheckSettings.php
@@ -12,23 +12,23 @@ class CheckSettings implements CheckSettingsInterface {
   /**
    * The parent check.
    *
-   * @var \Drupal\security_review\Check
+   * @var Check
    */
   protected $check;
 
   /**
    * The configuration storage of the parent Check.
    *
-   * @var \Drupal\Core\Config\Config $config
+   * @var Config $config
    */
   protected $config;
 
   /**
    * Creates a CheckSettings instance.
    *
-   * @param \Drupal\security_review\Check $check
+   * @param Check $check
    *   The parent Check.
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The parent Check's configuration.
    */
   public function __construct(Check $check, Config &$config) {
diff --git a/src/Checklist.php b/src/Checklist.php
index 0c9aca0..039b4be 100644
--- a/src/Checklist.php
+++ b/src/Checklist.php
@@ -17,32 +17,32 @@ class Checklist {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a Checklist instance.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The SecurityReview service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(SecurityReview $security_review, ModuleHandlerInterface $module_handler, AccountProxyInterface $current_user) {
@@ -54,7 +54,7 @@ class Checklist {
   /**
    * Array of cached Checks.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   private static $cachedChecks = [];
 
@@ -68,7 +68,7 @@ class Checklist {
   /**
    * Returns every Check.
    *
-   * @return \Drupal\security_review\Check[]
+   * @return Check[]
    *   Array of Checks.
    */
   public function getChecks() {
@@ -97,7 +97,7 @@ class Checklist {
   /**
    * Returns the enabled Checks.
    *
-   * @return \Drupal\security_review\Check[]
+   * @return Check[]
    *   Array of enabled Checks.
    */
   public function getEnabledChecks() {
@@ -115,7 +115,7 @@ class Checklist {
   /**
    * Groups an array of checks by their namespaces.
    *
-   * @param \Drupal\security_review\Check[] $checks
+   * @param Check[] $checks
    *   The array of Checks to group.
    *
    * @return array
@@ -149,12 +149,12 @@ class Checklist {
   /**
    * Runs an array of checks.
    *
-   * @param \Drupal\security_review\Check[] $checks
+   * @param Check[] $checks
    *   The array of Checks to run.
    * @param bool $cli
    *   Whether to call runCli() instead of run().
    *
-   * @return \Drupal\security_review\CheckResult[]
+   * @return CheckResult[]
    *   The array of CheckResults generated.
    */
   public function runChecks(array $checks, $cli = FALSE) {
@@ -177,7 +177,7 @@ class Checklist {
   /**
    * Stores an array of CheckResults.
    *
-   * @param \Drupal\security_review\CheckResult[] $results
+   * @param CheckResult[] $results
    *   The CheckResults to store.
    */
   public function storeResults(array $results) {
@@ -194,7 +194,7 @@ class Checklist {
    * @param string $title
    *   The machine title of the requested check.
    *
-   * @return null|\Drupal\security_review\Check
+   * @return null|Check
    *   The Check or null if it doesn't exist.
    */
   public function getCheck($namespace, $title) {
@@ -215,7 +215,7 @@ class Checklist {
    * @param string $id
    *   The machine namespace of the requested check.
    *
-   * @return null|\Drupal\security_review\Check
+   * @return null|Check
    *   The Check or null if it doesn't exist.
    */
   public function getCheckById($id) {
@@ -231,9 +231,9 @@ class Checklist {
   /**
    * Helper function for sorting checks.
    *
-   * @param \Drupal\security_review\Check $a
+   * @param Check $a
    *   Check A.
-   * @param \Drupal\security_review\Check $b
+   * @param Check $b
    *   Check B.
    *
    * @return int
diff --git a/src/Checks/Field.php b/src/Checks/Field.php
index ead999e..9b09111 100644
--- a/src/Checks/Field.php
+++ b/src/Checks/Field.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\security_review\Checks;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\Core\Entity\EntityBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\Exception\UndefinedLinkTemplateException;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -50,9 +53,9 @@ class Field extends Check {
       'PHP' => '?php',
     ];
 
-    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+    /** @var EntityTypeManagerInterface $entity_type_manager */
     $entity_type_manager = \Drupal::service('entity_type.manager');
-    /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $field_manager */
+    /** @var EntityFieldManagerInterface $field_manager */
     $field_manager = \Drupal::service('entity_field.manager');
     foreach ($field_manager->getFieldMap() as $entity_type_id => $fields) {
       $field_storage_definitions = $field_manager->getFieldStorageDefinitions($entity_type_id);
@@ -166,7 +169,7 @@ class Field extends Check {
    * Falls back on a string with entity type id and id if no good link can
    * be found.
    *
-   * @param \Drupal\Core\Entity\EntityBase $entity
+   * @param EntityBase $entity
    *   The entity.
    *
    * @return string
diff --git a/src/Commands/SecurityReviewCommands.php b/src/Commands/SecurityReviewCommands.php
index 4ee5c81..1d4a245 100644
--- a/src/Commands/SecurityReviewCommands.php
+++ b/src/Commands/SecurityReviewCommands.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\security_review\Commands;
 
+use Drupal\security_review\Check;
 use Consolidation\OutputFormatters\StructuredData\RowsOfFields;
 use Drupal\security_review\Checklist;
 use Drupal\security_review\CheckResult;
@@ -18,23 +19,23 @@ class SecurityReviewCommands extends DrushCommands {
   /**
    * Security review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReviewService;
 
   /**
    * Checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklistService;
 
   /**
    * Constructs a SecurityReviewCommands object.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   Security review service.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   Checklist service.
    */
   public function __construct(SecurityReview $security_review, Checklist $checklist) {
@@ -74,7 +75,7 @@ class SecurityReviewCommands extends DrushCommands {
    *   message: Message
    *   status: Status
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   Row of results.
    */
   public function securityReview(
@@ -110,9 +111,9 @@ class SecurityReviewCommands extends DrushCommands {
     $results = [];
     if (!$last_run) {
       // Do a normal security review run.
-      /** @var \Drupal\security_review\Check[] $checks */
+      /** @var Check[] $checks */
       $checks = [];
-      /** @var \Drupal\security_review\Check[] $to_skip */
+      /** @var Check[] $to_skip */
       $to_skip = [];
 
       // Fill the $checks array.
@@ -181,7 +182,7 @@ class SecurityReviewCommands extends DrushCommands {
   /**
    * Helper function to compile Security Review results.
    *
-   * @param \Drupal\security_review\CheckResult[] $results
+   * @param CheckResult[] $results
    *   An array of CheckResults.
    * @param bool $short_titles
    *   Whether to use short message (check title) or full check success or
@@ -250,7 +251,7 @@ class SecurityReviewCommands extends DrushCommands {
    * @param string $check_name
    *   The check to get.
    *
-   * @return \Drupal\security_review\Check|null
+   * @return Check|null
    *   The found Check.
    */
   private function getCheck($check_name) {
diff --git a/src/Controller/ChecklistController.php b/src/Controller/ChecklistController.php
index 8652451..7902378 100644
--- a/src/Controller/ChecklistController.php
+++ b/src/Controller/ChecklistController.php
@@ -19,41 +19,41 @@ class ChecklistController extends ControllerBase {
   /**
    * The CSRF Token generator.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator $csrfToken
+   * @var CsrfTokenGenerator $csrfToken
    */
   protected $csrfToken;
 
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;
 
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a ChecklistController.
    *
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token_generator
+   * @param CsrfTokenGenerator $csrf_token_generator
    *   The CSRF Token generator.
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The security_review service.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(CsrfTokenGenerator $csrf_token_generator, SecurityReview $security_review, Checklist $checklist, MessengerInterface $messenger) {
diff --git a/src/Controller/HelpController.php b/src/Controller/HelpController.php
index 2b44097..cdef4f8 100644
--- a/src/Controller/HelpController.php
+++ b/src/Controller/HelpController.php
@@ -19,32 +19,32 @@ class HelpController extends ControllerBase {
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;
 
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;
 
   /**
    * The date.formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   private $dateFormatter;
 
   /**
    * Constructs a HelpController.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The security_review service.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date.formatter service.
    */
   public function __construct(SecurityReview $security_review, Checklist $checklist, DateFormatterInterface $dateFormatter) {
@@ -141,7 +141,7 @@ class HelpController extends ControllerBase {
    * @return array
    *   The check's help page.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   * @throws NotFoundHttpException
    *   If the check is not found.
    */
   private function checkHelp($namespace, $title) {
diff --git a/src/Controller/ToggleController.php b/src/Controller/ToggleController.php
index cf27fef..85c5e45 100644
--- a/src/Controller/ToggleController.php
+++ b/src/Controller/ToggleController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\security_review\Controller;
 
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\Access\CsrfTokenGenerator;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -19,34 +21,34 @@ class ToggleController extends ControllerBase {
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;
 
   /**
    * The CSRF Token generator.
    *
-   * @var \Drupal\Core\Access\CsrfTokenGenerator $csrfToken
+   * @var CsrfTokenGenerator $csrfToken
    */
   protected $csrfToken;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\Request $request
+   * @var Request $request
    */
   protected $request;
 
   /**
    * Constructs a ToggleController.
    *
-   * @param \Drupal\Core\Access\CsrfTokenGenerator $csrf_token_generator
+   * @param CsrfTokenGenerator $csrf_token_generator
    *   The CSRF Token generator.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   The request stack.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(CsrfTokenGenerator $csrf_token_generator, RequestStack $request, Checklist $checklist, MessengerInterface $messenger) {
@@ -74,7 +76,7 @@ class ToggleController extends ControllerBase {
    * @param string $check_id
    *   The ID of the check.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return JsonResponse|RedirectResponse
    *   The response.
    */
   public function index($check_id) {
diff --git a/src/Form/RunForm.php b/src/Form/RunForm.php
index 16b50ba..c0bd753 100644
--- a/src/Form/RunForm.php
+++ b/src/Form/RunForm.php
@@ -15,14 +15,14 @@ class RunForm extends FormBase {
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;
 
   /**
    * Constructs a RunForm.
    *
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
    */
   public function __construct(Checklist $checklist) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 5ba0757..a97e6d9 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -20,43 +20,43 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;
 
   /**
    * The security_review.security service.
    *
-   * @var \Drupal\security_review\Security
+   * @var Security
    */
   protected $security;
 
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;
 
   /**
    * The date.formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   private $dateFormatter;
 
   /**
    * Constructs a SettingsForm.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\security_review\Checklist $checklist
+   * @param Checklist $checklist
    *   The security_review.checklist service.
-   * @param \Drupal\security_review\Security $security
+   * @param Security $security
    *   The security_review.security service.
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The security_review service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   * @param DateFormatterInterface $dateFormatter
    *   The date.formatter service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, Checklist $checklist, Security $security, SecurityReview $security_review, DateFormatterInterface $dateFormatter) {
diff --git a/src/Security.php b/src/Security.php
index ace50e7..2d021b5 100644
--- a/src/Security.php
+++ b/src/Security.php
@@ -20,41 +20,41 @@ class Security {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Drupal kernel.
    *
-   * @var \Drupal\Core\DrupalKernelInterface
+   * @var DrupalKernelInterface
    */
   protected $kernel;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;
 
   /**
    * Constructs a Security instance.
    *
-   * @param \Drupal\security_review\SecurityReview $security_review
+   * @param SecurityReview $security_review
    *   The SecurityReview service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\DrupalKernelInterface $kernel
+   * @param DrupalKernelInterface $kernel
    *   The Drupal kernel.
    */
   public function __construct(SecurityReview $security_review, ModuleHandlerInterface $module_handler, ConfigFactoryInterface $config_factory, DrupalKernelInterface $kernel) {
diff --git a/src/SecurityReview.php b/src/SecurityReview.php
index fafaa9c..54060c5 100644
--- a/src/SecurityReview.php
+++ b/src/SecurityReview.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\security_review;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -26,48 +27,48 @@ class SecurityReview {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The config storage.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The state storage.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Constructs a SecurityReview instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state storage.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(ConfigFactoryInterface $config_factory, StateInterface $state, ModuleHandlerInterface $module_handler, AccountProxyInterface $current_user) {
@@ -180,7 +181,7 @@ class SecurityReview {
   /**
    * Logs an event.
    *
-   * @param \Drupal\security_review\Check $check
+   * @param Check $check
    *   The Check the message is about.
    * @param string $message
    *   The message.
@@ -206,7 +207,7 @@ class SecurityReview {
   /**
    * Logs a check result.
    *
-   * @param \Drupal\security_review\CheckResult $result
+   * @param CheckResult $result
    *   The result to log.
    */
   public function logCheckResult(CheckResult $result = NULL) {
@@ -259,7 +260,7 @@ class SecurityReview {
    * Deletes orphaned check data.
    */
   public function cleanStorage() {
-    /** @var \Drupal\security_review\Checklist $checklist */
+    /** @var Checklist $checklist */
     $checklist = \Drupal::service('security_review.checklist');
 
     // Get list of check configuration names.
diff --git a/tests/src/Functional/CheckWebTest.php b/tests/src/Functional/CheckWebTest.php
index 9ff339f..5de6e1e 100644
--- a/tests/src/Functional/CheckWebTest.php
+++ b/tests/src/Functional/CheckWebTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\security_review\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\security_review\Check;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -23,21 +25,21 @@ class CheckWebTest extends BrowserTestBase {
   /**
    * The test user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;
 
   /**
    * Sets up the testing environment, logs the user in, populates $check.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Login.
@@ -69,7 +71,7 @@ class CheckWebTest extends BrowserTestBase {
       $skipped_by = $check->skippedBy();
 
       $this->assertTrue($is_skipped, $check->getTitle() . ' skipped.');
-      $this->assertEqual($this->user->id(), $skipped_by->id(), 'Skipped by ' . $skipped_by->label());
+      $this->assertEquals($this->user->id(), $skipped_by->id(), 'Skipped by ' . $skipped_by->label());
     }
   }
 
diff --git a/tests/src/Functional/ChecklistWebTest.php b/tests/src/Functional/ChecklistWebTest.php
index 43a739c..8edc05f 100644
--- a/tests/src/Functional/ChecklistWebTest.php
+++ b/tests/src/Functional/ChecklistWebTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\security_review\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\security_review\Check;
 use Drupal\security_review\Checklist;
 use Drupal\Tests\BrowserTestBase;
 
@@ -24,28 +26,28 @@ class ChecklistWebTest extends BrowserTestBase {
   /**
    * The test user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $user;
 
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;
 
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;
 
   /**
    * Sets up the testing environment.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->checklist = \Drupal::getContainer()
@@ -77,11 +79,11 @@ class ChecklistWebTest extends BrowserTestBase {
    */
   public function testRun() {
     foreach ($this->checks as $check) {
-      $this->assertEqual(0, $check->lastRun(), $check->getTitle() . ' has not been run yet.');
+      $this->assertEquals(0, $check->lastRun(), $check->getTitle() . ' has not been run yet.');
     }
     $this->checklist->runChecklist();
     foreach ($this->checks as $check) {
-      $this->assertNotEqual(0, $check->lastRun(), $check->getTitle() . ' has been run.');
+      $this->assertNotEquals(0, $check->lastRun(), $check->getTitle() . ' has been run.');
     }
   }
 
@@ -94,7 +96,7 @@ class ChecklistWebTest extends BrowserTestBase {
     }
     $this->checklist->runChecklist();
     foreach ($this->checks as $check) {
-      $this->assertEqual(0, $check->lastRun(), $check->getTitle() . ' has not been run.');
+      $this->assertEquals(0, $check->lastRun(), $check->getTitle() . ' has not been run.');
     }
   }
 
diff --git a/tests/src/Kernel/CheckTest.php b/tests/src/Kernel/CheckTest.php
index 72676e4..02795e3 100644
--- a/tests/src/Kernel/CheckTest.php
+++ b/tests/src/Kernel/CheckTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\security_review\Kernel;
 
+use Drupal\security_review\Check;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\security_review\CheckResult;
 
@@ -22,28 +23,28 @@ class CheckTest extends KernelTestBase {
   /**
    * The security checks defined by Security Review and Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;
 
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $realChecks;
 
   /**
    * The security checks defined by Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $testChecks;
 
   /**
    * Sets up the environment, populates the $checks variable.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->realChecks = security_review_security_review_checks();
     $this->testChecks = security_review_test_security_review_checks();
diff --git a/tests/src/Kernel/ChecklistTest.php b/tests/src/Kernel/ChecklistTest.php
index 6172adc..182ee56 100644
--- a/tests/src/Kernel/ChecklistTest.php
+++ b/tests/src/Kernel/ChecklistTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\security_review\Kernel;
 
+use Drupal\security_review\Check;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\security_review\Checklist;
 
@@ -22,28 +23,28 @@ class ChecklistTest extends KernelTestBase {
   /**
    * The security_review.checklist service.
    *
-   * @var \Drupal\security_review\Checklist
+   * @var Checklist
    */
   protected $checklist;
 
   /**
    * The security checks defined by Security Review and Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $checks;
 
   /**
    * The security checks defined by Security Review.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $realChecks;
 
   /**
    * The security checks defined by Security Review Test.
    *
-   * @var \Drupal\security_review\Check[]
+   * @var Check[]
    */
   protected $testChecks;
 
@@ -57,7 +58,7 @@ class ChecklistTest extends KernelTestBase {
   /**
    * Sets up the environment, populates the $checks variable.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->checklist = \Drupal::getContainer()
diff --git a/tests/src/Kernel/SecurityReviewTest.php b/tests/src/Kernel/SecurityReviewTest.php
index 08066fa..1b33940 100644
--- a/tests/src/Kernel/SecurityReviewTest.php
+++ b/tests/src/Kernel/SecurityReviewTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\security_review\Kernel;
 
+use Drupal\security_review\SecurityReview;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -21,14 +22,14 @@ class SecurityReviewTest extends KernelTestBase {
   /**
    * The security_review service.
    *
-   * @var \Drupal\security_review\SecurityReview
+   * @var SecurityReview
    */
   protected $securityReview;
 
   /**
    * Sets up the testing environment.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installConfig(static::$modules);
     $this->securityReview = \Drupal::getContainer()->get('security_review');
