modules/contrib/styleguide/src/Controller/StyleguideController.php
modules/contrib/styleguide/src/Controller/StyleguideMaintenancePageController.php
modules/contrib/styleguide/src/Form/StyleguideConfirmForm.php
modules/contrib/styleguide/src/Form/StyleguideForm.php
modules/contrib/styleguide/src/Generator.php
modules/contrib/styleguide/src/GeneratorInterface.php
modules/contrib/styleguide/src/Plugin/Derivative/StyleguideLocalTasks.php
modules/contrib/styleguide/src/Plugin/Derivative/StyleguideMenuLinks.php
modules/contrib/styleguide/src/Plugin/Styleguide/CommentStyleguide.php
modules/contrib/styleguide/src/Plugin/Styleguide/DefaultStyleguide.php
modules/contrib/styleguide/src/Plugin/Styleguide/ImageStyleguide.php
modules/contrib/styleguide/src/Plugin/Styleguide/LayoutStyleguide.php
modules/contrib/styleguide/src/Plugin/Styleguide/SearchStyleguide.php
modules/contrib/styleguide/src/Plugin/StyleguidePluginBase.php
modules/contrib/styleguide/src/StyleguideInterface.php
modules/contrib/styleguide/src/StyleguidePluginManager.php
modules/contrib/styleguide/src/StyleguideRoutes.php
modules/contrib/styleguide/src/Theme/StyleguideThemeNegotiator.php
modules/contrib/styleguide/styleguide.api.php
modules/contrib/styleguide/styleguide.module
modules/contrib/styleguide/styleguide.post_update.php
modules/contrib/styleguide/tests/src/Functional/StyleguideTest.php

14 files with changes
=====================

1) modules/contrib/styleguide/src/Theme/StyleguideThemeNegotiator.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * StyleguideThemeNegotiator constructor.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler service.
    */
   public function __construct(ThemeHandlerInterface $theme_handler) {
@@ @@
   /**
    * Whether this theme negotiator should be used to set the theme.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match object.
    *
    * @return bool
@@ @@
   /**
    * Determine the active theme for the request.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match object.
    *
    * @return string|null
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/styleguide/src/StyleguideRoutes.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * StyleguideRoutes constructor.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler service.
    */
   public function __construct(ThemeHandlerInterface $theme_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/styleguide/src/Plugin/Styleguide/SearchStyleguide.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleguide\Plugin\Styleguide;

+use Drupal\styleguide\Generator;
 use Drupal\styleguide\GeneratorInterface;
 use Drupal\styleguide\Plugin\StyleguidePluginBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The styleguide generator service.
    *
-   * @var \Drupal\styleguide\Generator
+   * @var Generator
    */
   protected $generator;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The Renderer service to format the username and node.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The search manager.
    *
-   * @var \Drupal\search\SearchPluginManager
+   * @var SearchPluginManager
    */
   protected $searchManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\styleguide\GeneratorInterface $styleguide_generator
+   * @param GeneratorInterface $styleguide_generator
    *   The styleguide generator service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Form\FormBuilder $form_builder
+   * @param FormBuilder $form_builder
    *   The form builder.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The Renderer service to format the username and node.
-   * @param \Drupal\search\SearchPluginManager $search_manager
+   * @param SearchPluginManager $search_manager
    *   The search manager.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, GeneratorInterface $styleguide_generator, ModuleHandlerInterface $module_handler, FormBuilder $form_builder, AccountInterface $current_user, EntityTypeManagerInterface $entityTypeManager, RendererInterface $renderer, SearchPluginManager $search_manager = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/styleguide/src/Plugin/Styleguide/LayoutStyleguide.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleguide\Plugin\Styleguide;

+use Drupal\styleguide\Generator;
+use Drupal\Core\Layout\LayoutDefinition;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Layout\LayoutPluginManagerInterface;
 use Drupal\styleguide\GeneratorInterface;
@@ @@
   /**
    * The styleguide generator service.
    *
-   * @var \Drupal\styleguide\Generator
+   * @var Generator
    */
   protected $generator;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The layout plugin manager.
    *
-   * @var \Drupal\Core\Layout\LayoutPluginManagerInterface
+   * @var LayoutPluginManagerInterface
    */
   protected $layoutPluginManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\styleguide\GeneratorInterface $styleguide_generator
+   * @param GeneratorInterface $styleguide_generator
    *   The styleguide generator service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Layout\LayoutPluginManagerInterface|null $layout_plugin_manager
+   * @param LayoutPluginManagerInterface|null $layout_plugin_manager
    *   The layout plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GeneratorInterface $styleguide_generator, ModuleHandlerInterface $module_handler, LayoutPluginManagerInterface $layout_plugin_manager = NULL) {
@@ @@
         'group' => $this->t('Layouts'),
       ];

-      /** @var \Drupal\Core\Layout\LayoutDefinition $definition */
+      /** @var LayoutDefinition $definition */
       foreach ($layouts as $layout => $definition) {

         $details = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/styleguide/src/Plugin/Styleguide/ImageStyleguide.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleguide\Plugin\Styleguide;

+use Drupal\styleguide\Generator;
 use Drupal\styleguide\GeneratorInterface;
 use Drupal\styleguide\Plugin\StyleguidePluginBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The styleguide generator service.
    *
-   * @var \Drupal\styleguide\Generator
+   * @var Generator
    */
   protected $generator;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\styleguide\GeneratorInterface $styleguide_generator
+   * @param GeneratorInterface $styleguide_generator
    *   The styleguide generator service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GeneratorInterface $styleguide_generator, ModuleHandlerInterface $module_handler, FileSystemInterface $file_system) {
@@ @@
         $details = [];
         foreach ($style->getEffects() as $effect) {
           $summary = $effect->getSummary();
-          $summary = render($summary);
+          $summary = \Drupal::service('renderer')->render($summary);
           $label = $effect->label();
           if ($summary) {
             $details[] = new FormattableMarkup('%label: @summary', [
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/styleguide/src/Plugin/Styleguide/DefaultStyleguide.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleguide\Plugin\Styleguide;

+use Drupal\styleguide\Generator;
 use Drupal\Core\Block\BlockManager;
 use Drupal\Core\Breadcrumb\ChainBreadcrumbBuilderInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   /**
    * The styleguide generator service.
    *
-   * @var \Drupal\styleguide\Generator
+   * @var Generator
    */
   protected $generator;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The menu link tree.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $linkTree;

@@ @@
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * The breadcrumb manager.
    *
-   * @var \Drupal\Core\Breadcrumb\ChainBreadcrumbBuilderInterface
+   * @var ChainBreadcrumbBuilderInterface
    */
   protected $breadcrumbManager;

@@ @@
   /**
    * The current_route_match service.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;

@@ @@
   /**
    * The block plugin manager.
    *
-   * @var \Drupal\Core\Block\BlockManager
+   * @var BlockManager
    */
   protected $blockManager;

@@ @@
   /**
    * The theme manager service.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\styleguide\GeneratorInterface $styleguide_generator
+   * @param GeneratorInterface $styleguide_generator
    *   The styleguide generator service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $link_tree
+   * @param MenuLinkTreeInterface $link_tree
    *   The menu link tree.
-   * @param \Drupal\Core\Form\FormBuilder $form_builder
+   * @param FormBuilder $form_builder
    *   The form builder.
-   * @param \Drupal\Core\Breadcrumb\ChainBreadcrumbBuilderInterface $breadcrumb_manager
+   * @param ChainBreadcrumbBuilderInterface $breadcrumb_manager
    *   The breadcrumb manager.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $current_route_match
+   * @param CurrentRouteMatch $current_route_match
    *   The current_route_match service.
-   * @param \Drupal\Core\Block\BlockManager $block_manager
+   * @param BlockManager $block_manager
    *   The block plugin manager.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    *
    * @internal param \Drupal\Core\Breadcrumb\ChainBreadcrumbBuilderInterface $breadcrumb
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/styleguide/src/Plugin/Styleguide/CommentStyleguide.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleguide\Plugin\Styleguide;

+use Drupal\styleguide\Generator;
 use Drupal\comment\Entity\Comment;
 use Drupal\styleguide\GeneratorInterface;
 use Drupal\styleguide\Plugin\StyleguidePluginBase;
@@ @@
   /**
    * The styleguide generator service.
    *
-   * @var \Drupal\styleguide\Generator
+   * @var Generator
    */
   protected $generator;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\styleguide\GeneratorInterface $styleguide_generator
+   * @param GeneratorInterface $styleguide_generator
    *   The styleguide generator service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, GeneratorInterface $styleguide_generator, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/styleguide/src/Plugin/Derivative/StyleguideMenuLinks.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * StyleguideMenuLinks constructor.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The Drupal theme habdler.
    */
   public function __construct(ThemeHandlerInterface $theme_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/styleguide/src/Plugin/Derivative/StyleguideLocalTasks.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The configuration object factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * StyleguideLocalTasks constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The Drupal config factory.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The Drupal theme habdler.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ThemeHandlerInterface $theme_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/styleguide/src/Generator.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleguide;

+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Pager\PagerManagerInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $currentRequest;

@@ @@
   /**
    * The utility class for creating random data.
    *
-   * @var \Drupal\Component\Utility\Random
+   * @var Random
    */
   protected $random;

@@ @@
   /**
    * The page manager service.
    *
-   * @var \Drupal\Core\Pager\PagerManagerInterface
+   * @var PagerManagerInterface
    */
   protected $pagerManager;

@@ @@
   /**
    * The configuration entry point.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;

@@ @@
       ];
     }

-    return $render ? render($output) : $output;
+    return $render ? \Drupal::service('renderer')->render($output) : $output;
   }

   /**
@@ @@
         ],
         '#text' => $explode[0],
       ];
-      $explode[0] = render($link);
+      $explode[0] = \Drupal::service('renderer')->render($link);
       $sentence = implode(' ', $explode);
     }
     return Markup::create($sentence . '.');
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


11) modules/contrib/styleguide/src/Form/StyleguideForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The styleguide generator.
    *
-   * @var \Drupal\styleguide\GeneratorInterface
+   * @var GeneratorInterface
    */
   protected $generator;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs a new StyleguideForm object.
    *
-   * @param \Drupal\styleguide\GeneratorInterface $styleguide_generator
+   * @param GeneratorInterface $styleguide_generator
    *   The styleguide generator.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(GeneratorInterface $styleguide_generator, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/styleguide/src/Form/StyleguideConfirmForm.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Returns the route to go to if the user cancels the action.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   A URL object.
    */
   public function getCancelUrl() {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {}
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/styleguide/src/Controller/StyleguideMaintenancePageController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\styleguide\Controller;

+use Drupal\styleguide\Generator;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Render\BareHtmlPageRendererInterface;
 use Drupal\styleguide\GeneratorInterface;
@@ @@
   /**
    * The bare HTML page renderer.
    *
-   * @var \Drupal\Core\Render\BareHtmlPageRendererInterface
+   * @var BareHtmlPageRendererInterface
    */
   protected $bareHtmlPageRenderer;

@@ @@
   /**
    * The styleguide generator service.
    *
-   * @var \Drupal\styleguide\Generator
+   * @var Generator
    */
   protected $generator;

@@ @@
   /**
    * Constructs a new StyleguideMaintenancePageController.
    *
-   * @param \Drupal\Core\Render\BareHtmlPageRendererInterface $bare_html_page_renderer
+   * @param BareHtmlPageRendererInterface $bare_html_page_renderer
    *   The bare HTML page renderer.
-   * @param \Drupal\styleguide\GeneratorInterface $styleguide_generator
+   * @param GeneratorInterface $styleguide_generator
    *   The styleguide generator service.
    */
   public function __construct(BareHtmlPageRendererInterface $bare_html_page_renderer, GeneratorInterface $styleguide_generator) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/styleguide/src/Controller/StyleguideController.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * The theme manager service.
    *
-   * @var \Drupal\Core\Theme\ThemeManagerInterface
+   * @var ThemeManagerInterface
    */
   protected $themeManager;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * The Styleguide plugin manager.
    *
-   * @var \Drupal\styleguide\StyleguidePluginManager
+   * @var StyleguidePluginManager
    */
   protected $styleguideManager;

@@ @@
   /**
    * Constructs a new StyleguideController.
    *
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler service.
-   * @param \Drupal\styleguide\StyleguidePluginManager $styleguide_manager
+   * @param StyleguidePluginManager $styleguide_manager
    *   The Styleguide plugin manager.
-   * @param \Drupal\Core\Theme\ThemeManagerInterface $theme_manager
+   * @param ThemeManagerInterface $theme_manager
    *   The theme manager service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(ThemeHandlerInterface $theme_handler, StyleguidePluginManager $styleguide_manager, ThemeManagerInterface $theme_manager, RequestStack $request_stack) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 14 files have been changed by Rector                                      

