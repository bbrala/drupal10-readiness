modules/contrib/menu_block/menu_block.install
modules/contrib/menu_block/menu_block.module
modules/contrib/menu_block/menu_block.post_update.php
modules/contrib/menu_block/src/EventSubscriber/MenuBlockKernelViewSubscriber.php
modules/contrib/menu_block/src/Plugin/Block/MenuBlock.php
modules/contrib/menu_block/src/Plugin/Derivative/MenuBlock.php
modules/contrib/menu_block/tests/modules/menu_block_test/src/Controller/MenuBlockTestController.php
modules/contrib/menu_block/tests/src/Functional/MenuBlockTest.php

3 files with changes
====================

1) modules/contrib/menu_block/tests/src/Functional/MenuBlockTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_block\Functional;

+use Drupal\user\Entity\User;
+use Drupal\Core\Menu\MenuLinkManagerInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Entity\EntityViewBuilderInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\menu_link_content\MenuLinkContentInterface;
+use Drupal\block\BlockInterface;
 use Drupal\menu_block\Plugin\Block\MenuBlock;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * An administrative user to configure the test environment.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $adminUser;

@@ @@
   /**
    * The menu link plugin manager.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManagerInterface
+   * @var MenuLinkManagerInterface
    */
   protected $menuLinkManager;

@@ @@
   /**
    * The block storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $blockStorage;

@@ @@
   /**
    * The block view builder.
    *
-   * @var \Drupal\Core\Entity\EntityViewBuilderInterface
+   * @var EntityViewBuilderInterface
    */
   protected $blockViewBuilder;

@@ @@
   /**
    * The menu link content storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $menuLinkContentStorage;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     $this->menuLinkManager = \Drupal::service('plugin.manager.menu.link');
@@ @@
       'title' => 'parent menu item',
       'link' => ['uri' => 'internal:/menu-block-test/hierarchy/parent'],
     ];
-    /** @var \Drupal\menu_link_content\MenuLinkContentInterface $link */
+    /** @var MenuLinkContentInterface $link */
     $link = $this->menuLinkContentStorage->create($parent);
     $link->save();
     $links['parent'] = $link->getPluginId();
@@ @@
       'region' => 'primary_menu',
     ], 'Save block');

-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $block = $this->blockStorage->load($block_id);
     $plugin = $block->getPlugin();
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/menu_block/src/Plugin/Block/MenuBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_block\Plugin\Block;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Menu\MenuParentFormSelectorInterface;
+use Drupal\Core\Menu\MenuLinkTreeElement;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The menu parent form selector service.
    *
-   * @var \Drupal\Core\Menu\MenuParentFormSelectorInterface
+   * @var MenuParentFormSelectorInterface
    */
   protected $menuParentFormSelector;

@@ @@
    * @param string $link_id
    *   Menu link id to find.
    *
-   * @return \Drupal\Core\Menu\MenuLinkTreeElement|null
+   * @return MenuLinkTreeElement|null
    *   The link element from the given menu tree or NULL if it can't be found.
    */
   protected function findLinkInTree(array $menu_tree, $link_id) {
@@ @@
     if (isset($menu_tree[$link_id])) {
       return $menu_tree[$link_id];
     }
-    /** @var \Drupal\Core\Menu\MenuLinkTreeElement $link */
+    /** @var MenuLinkTreeElement $link */
     foreach ($menu_tree as $link) {
       $link = $this->findLinkInTree($link->subtree, $link_id);
       if ($link) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/menu_block/src/EventSubscriber/MenuBlockKernelViewSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_block\EventSubscriber;

+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;

 /**
@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $currentRouteMatch;

@@ @@
   /**
    * Constructs a new MenuBlockKernelViewSubscriber.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $current_route_match
+   * @param RouteMatchInterface $current_route_match
    *   The current route match.
    */
   public function __construct(RouteMatchInterface $current_route_match) {
@@ @@
   /**
    * Alters the block library modal.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
-  public function onView(GetResponseEvent $event) {
+  public function onView(RequestEvent $event) {
     switch ($this->currentRouteMatch->getRouteName()) {
       case 'block.admin_library':
       case 'context.reaction.blocks.library':
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 3 files have been changed by Rector                                       

