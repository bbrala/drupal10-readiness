diff --git a/jquery_colorpicker.install b/jquery_colorpicker.install
index faa77f7..7a66edf 100644
--- a/jquery_colorpicker.install
+++ b/jquery_colorpicker.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\field\FieldStorageConfigInterface;
+use Drupal\field\FieldConfigInterface;
 /**
  * @file
  * Holds install hooks for the jQuery Colorpicker module.
@@ -49,7 +51,7 @@ function jquery_colorpicker_update_8200() {
   $database = \Drupal::database();
 
   if ($field_storage_configs = $entity_manager->getStorage('field_storage_config')->loadByProperties(['type' => 'jquery_colorpicker'])) {
-    /** @var \Drupal\field\FieldStorageConfigInterface $field_storage */
+    /** @var FieldStorageConfigInterface $field_storage */
     // Update the field storage settings.
     foreach ($field_storage_configs as $field_storage) {
       $entity_type_id = $field_storage->getTargetEntityTypeId();
@@ -141,7 +143,7 @@ function jquery_colorpicker_update_8200() {
       // Update the field settings.
       $field_name = $field_storage->getName();
       if ($fields = $entity_manager->getStorage('field_config')->loadByProperties(['field_name' => $field_name, 'entity_type' => $field_storage->getTargetEntityTypeId()])) {
-        /** @var \Drupal\field\FieldConfigInterface $field */
+        /** @var FieldConfigInterface $field */
         // Update the field settings.
         foreach ($fields as $field) {
           $new_field = $field->toArray();
diff --git a/src/Element/JQueryColorpickerElement.php b/src/Element/JQueryColorpickerElement.php
index 07147ae..20194ff 100644
--- a/src/Element/JQueryColorpickerElement.php
+++ b/src/Element/JQueryColorpickerElement.php
@@ -112,7 +112,7 @@ class JQueryColorpickerElement extends FormElement {
 
     // Since we know the background, we can then get the URL of it to pass to
     // the javascript function.
-    $background_url = file_create_url('vendor://jaypan/jquery-colorpicker/images/' . $background);
+    $background_url = \Drupal::service('file_url_generator')->generateAbsoluteString('vendor://jaypan/jquery-colorpicker/images/' . $background);
 
     // Next we determine what the default value for the form element is. This
     // will also be passed to the javascript function.
diff --git a/tests/src/Unit/Element/JQueryColorpickerTest.php b/tests/src/Unit/Element/JQueryColorpickerTest.php
index 74bd3c5..a410f4c 100644
--- a/tests/src/Unit/Element/JQueryColorpickerTest.php
+++ b/tests/src/Unit/Element/JQueryColorpickerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Test\jquery_colorpicker\Element;
 
+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Tests\UnitTestCase;
 use Drupal\jquery_colorpicker\Element\JQueryColorpickerElement;
@@ -12,6 +13,7 @@ use Drupal\jquery_colorpicker\Element\JQueryColorpickerElement;
  */
 class JQueryColorpickerTest extends UnitTestCase {
 
+  use ProphecyTrait;
   /**
    * @covers ::valueCallback
    *
diff --git a/tests/src/Unit/Service/jQueryColorpickerServiceTest.php b/tests/src/Unit/Service/jQueryColorpickerServiceTest.php
index e478e07..56dc920 100644
--- a/tests/src/Unit/Service/jQueryColorpickerServiceTest.php
+++ b/tests/src/Unit/Service/jQueryColorpickerServiceTest.php
@@ -24,7 +24,7 @@ class JQueryColorpickerServiceTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $container = new ContainerBuilder();
     $container->set('string_translation', $this->getStringTranslationStub());
     \Drupal::setContainer($container);
