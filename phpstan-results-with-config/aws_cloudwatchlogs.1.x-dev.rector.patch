diff --git a/aws_cloudwatchlogs.info.yml b/aws_cloudwatchlogs.info.yml
index e13c095..27d8633 100644
--- a/aws_cloudwatchlogs.info.yml
+++ b/aws_cloudwatchlogs.info.yml
@@ -1,6 +1,6 @@
 name: AWS Cloudwatch Logs
 description: Plugin to integrate Drupal with AWS Cloudwatch Logs.
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.1 || ^10
 type: module
 configure: aws_cloudwatchlogs.settings
 dependencies:
diff --git a/src/Services/CreateLogGroup.php b/src/Services/CreateLogGroup.php
index f19af9e..95f2126 100644
--- a/src/Services/CreateLogGroup.php
+++ b/src/Services/CreateLogGroup.php
@@ -41,11 +41,11 @@ class CreateLogGroup implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -70,7 +70,7 @@ class CreateLogGroup implements GetClientInterface {
    *
    * @todo Enable KMS encryption while creating log group.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupName
    *   The name of the log group.
diff --git a/src/Services/CreateLogStream.php b/src/Services/CreateLogStream.php
index 1a6d9e0..3861ee1 100644
--- a/src/Services/CreateLogStream.php
+++ b/src/Services/CreateLogStream.php
@@ -41,11 +41,11 @@ class CreateLogStream implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -68,7 +68,7 @@ class CreateLogStream implements GetClientInterface {
   /**
    * Creates log stream in AWS CloudwatchLogs.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupName
    *   The name of the log group.
diff --git a/src/Services/DeleteLogGroup.php b/src/Services/DeleteLogGroup.php
index ff6f570..ed972be 100644
--- a/src/Services/DeleteLogGroup.php
+++ b/src/Services/DeleteLogGroup.php
@@ -41,11 +41,11 @@ class DeleteLogGroup implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -68,7 +68,7 @@ class DeleteLogGroup implements GetClientInterface {
   /**
    * Deletes log stream in AWS CloudwatchLogs.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupName
    *   The name of the log group to delete.
diff --git a/src/Services/DeleteLogStream.php b/src/Services/DeleteLogStream.php
index ad120db..ffd6818 100644
--- a/src/Services/DeleteLogStream.php
+++ b/src/Services/DeleteLogStream.php
@@ -41,11 +41,11 @@ class DeleteLogStream implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -68,7 +68,7 @@ class DeleteLogStream implements GetClientInterface {
   /**
    * Deletes log stream in AWS CloudwatchLogs.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupName
    *   The name of the log group to delete.
diff --git a/src/Services/DescribeLogGroups.php b/src/Services/DescribeLogGroups.php
index e57f117..50a2cbd 100644
--- a/src/Services/DescribeLogGroups.php
+++ b/src/Services/DescribeLogGroups.php
@@ -41,11 +41,11 @@ class DescribeLogGroups implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -68,7 +68,7 @@ class DescribeLogGroups implements GetClientInterface {
   /**
    * Retuns matching groups from AWS CloudwatchLogs.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupNamePrefix
    *   The prefix to match.
@@ -141,7 +141,7 @@ class DescribeLogGroups implements GetClientInterface {
   /**
    * Check if Log a group exist.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   The client.
    * @param string $logGroupName
    *   The log group name.
diff --git a/src/Services/DescribeLogStreams.php b/src/Services/DescribeLogStreams.php
index f4aa0cd..3e1551f 100644
--- a/src/Services/DescribeLogStreams.php
+++ b/src/Services/DescribeLogStreams.php
@@ -41,11 +41,11 @@ class DescribeLogStreams implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -68,7 +68,7 @@ class DescribeLogStreams implements GetClientInterface {
   /**
    * Retuns matching groups from AWS CloudwatchLogs.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupName
    *   The name of the log group.
diff --git a/src/Services/Download.php b/src/Services/Download.php
index e2414ca..7bfd831 100644
--- a/src/Services/Download.php
+++ b/src/Services/Download.php
@@ -40,11 +40,11 @@ class Download {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GenerateCSV $generateCSV
+   * @param GenerateCSV $generateCSV
    *   Service for generating csv file with given input.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -63,7 +63,7 @@ class Download {
    * @param array $log
    *   Array of logs returned from aws cloudwatch logs.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse
+   * @return BinaryFileResponse
    *   Binary response of the file to download.
    */
   public function downloadLog(array $log) {
@@ -77,7 +77,7 @@ class Download {
    * @param string $file_path
    *   File physical path.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse
+   * @return BinaryFileResponse
    *   Binary response of the file to download.
    */
   protected function streamFile(string $file_path) {
diff --git a/src/Services/FilterLogEvents.php b/src/Services/FilterLogEvents.php
index e303cd5..72d9ab4 100644
--- a/src/Services/FilterLogEvents.php
+++ b/src/Services/FilterLogEvents.php
@@ -41,11 +41,11 @@ class FilterLogEvents implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -68,7 +68,7 @@ class FilterLogEvents implements GetClientInterface {
   /**
    * Retuns matching logs from AWS CloudwatchLogs.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupName
    *   The name of the log group to query.
diff --git a/src/Services/GenerateCSV.php b/src/Services/GenerateCSV.php
index 6a2e774..c1e6732 100644
--- a/src/Services/GenerateCSV.php
+++ b/src/Services/GenerateCSV.php
@@ -63,13 +63,13 @@ class GenerateCSV {
   /**
    * Constructs a new instance.
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
-   * @param \Drupal\aws_cloudwatchlogs\Services\Utility $utility
+   * @param Utility $utility
    *   Object of general functionalities of this module.
-   * @param \Drupal\Core\File\FileSystem $fileSystem
+   * @param FileSystem $fileSystem
    *   Object of file_system service.
    */
   public function __construct(
diff --git a/src/Services/GetClient.php b/src/Services/GetClient.php
index 0f12be7..4b9afd8 100644
--- a/src/Services/GetClient.php
+++ b/src/Services/GetClient.php
@@ -61,11 +61,11 @@ class GetClient {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config object for basic site information.
-   * @param \Drupal\key\KeyRepository $key_repo
+   * @param KeyRepository $key_repo
    *   Object for keyRepo service of Key module.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
diff --git a/src/Services/GetLogEvents.php b/src/Services/GetLogEvents.php
index e6326cb..de8a42c 100644
--- a/src/Services/GetLogEvents.php
+++ b/src/Services/GetLogEvents.php
@@ -41,11 +41,11 @@ class GetLogEvents implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
    */
   public function __construct(
@@ -68,7 +68,7 @@ class GetLogEvents implements GetClientInterface {
   /**
    * Retuns logs from AWS CloudwatchLogs.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $logGroupName
    *   The name of the log group to query.
diff --git a/src/Services/PutLogEvents.php b/src/Services/PutLogEvents.php
index 417add2..06b2dd3 100644
--- a/src/Services/PutLogEvents.php
+++ b/src/Services/PutLogEvents.php
@@ -69,21 +69,21 @@ class PutLogEvents implements GetClientInterface {
   /**
    * Constructs a new instance.
    *
-   * @param \Drupal\aws_cloudwatchlogs\Services\GetClient $clientInstance
+   * @param GetClient $clientInstance
    *   GetClient instance for loading the existing client.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   Object for logging in drupal application.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messanger
+   * @param MessengerInterface $messanger
    *   Object for showing status messages.
-   * @param \Drupal\aws_cloudwatchlogs\Services\CreateLogGroup $createLogGroup
+   * @param CreateLogGroup $createLogGroup
    *   For creating new log group.
-   * @param \Drupal\aws_cloudwatchlogs\Services\CreateLogStream $createLogStream
+   * @param CreateLogStream $createLogStream
    *   Service for creating new log group.
-   * @param \Drupal\aws_cloudwatchlogs\Services\DescribeLogStreams $describeLogStream
+   * @param DescribeLogStreams $describeLogStream
    *   Service to get information of an existing log stream.
-   * @param \Drupal\aws_cloudwatchlogs\Services\DescribeLogGroups $describelogGroup
+   * @param DescribeLogGroups $describelogGroup
    *   Service to get information of an existing log group.
-   * @param \Drupal\aws_cloudwatchlogs\Services\Utility $utility
+   * @param Utility $utility
    *   Object of service of basic utilities of this module.
    */
   public function __construct(
@@ -118,7 +118,7 @@ class PutLogEvents implements GetClientInterface {
    *
    * @todo Enable KMS encryption while creating log group.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   Client for AWS Cloudwatch API.
    * @param string $message
    *   Message to log.
@@ -202,7 +202,7 @@ class PutLogEvents implements GetClientInterface {
    *
    * It creates new log group/stream if does not exist and logs message in it.
    *
-   * @param \Aws\CloudWatchLogs\CloudWatchLogsClient $client
+   * @param CloudWatchLogsClient $client
    *   The client.
    * @param string $message
    *   The message to log.
diff --git a/tests/src/Functional/CloudwatchClientConnectionTest.php b/tests/src/Functional/CloudwatchClientConnectionTest.php
index 5d869e0..96f5055 100644
--- a/tests/src/Functional/CloudwatchClientConnectionTest.php
+++ b/tests/src/Functional/CloudwatchClientConnectionTest.php
@@ -34,7 +34,7 @@ class CloudwatchClientConnectionTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create administrative user.
@@ -55,9 +55,10 @@ class CloudwatchClientConnectionTest extends BrowserTestBase {
     $config['version'] = 'latest';
     $config['access_key'] = $this->randomString('20');
     $config['secret'] = $this->randomString('40');
+    $this->drupalGet('/admin/reports/aws-cloudwatchlogs/settings');
 
     // Save values in settings form.
-    $this->drupalPostForm('/admin/reports/aws-cloudwatchlogs/settings', $config, 'Save configuration');
+    $this->submitForm($config, 'Save configuration');
     $this->assertSession()->statusCodeEquals(200);
 
     // Returns a Drupal\aws_cloudwatchlogs\Services\GetClient object.
diff --git a/tests/src/Functional/CreateAndDeleteLogGroupTest.php b/tests/src/Functional/CreateAndDeleteLogGroupTest.php
index 273680e..637c09e 100644
--- a/tests/src/Functional/CreateAndDeleteLogGroupTest.php
+++ b/tests/src/Functional/CreateAndDeleteLogGroupTest.php
@@ -34,7 +34,7 @@ class CreateAndDeleteLogGroupTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create administrative user.
@@ -55,13 +55,10 @@ class CreateAndDeleteLogGroupTest extends BrowserTestBase {
     $config['version'] = 'latest';
     $config['access_key'] = $this->randomString('20');
     $config['secret'] = $this->randomString('40');
+    $this->drupalGet('/admin/reports/aws-cloudwatchlogs/settings');
 
     // Save values in settings form.
-    $this->drupalPostForm(
-      '/admin/reports/aws-cloudwatchlogs/settings',
-      $config,
-      'Save configuration'
-    );
+    $this->submitForm($config, 'Save configuration');
     $this->assertSession()->statusCodeEquals(200);
 
     // Returns a Drupal\aws_cloudwatchlogs\Services\GetClient object.
diff --git a/tests/src/Functional/SettingsPageTest.php b/tests/src/Functional/SettingsPageTest.php
index 05ff8bf..328ec95 100644
--- a/tests/src/Functional/SettingsPageTest.php
+++ b/tests/src/Functional/SettingsPageTest.php
@@ -33,7 +33,7 @@ class SettingsPageTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     // Create administrative user.
@@ -56,8 +56,9 @@ class SettingsPageTest extends BrowserTestBase {
     $config['version'] = 'latest';
     $config['access_key'] = $this->randomString('20');
     $config['secret'] = $this->randomString('40');
+    $this->drupalGet('/admin/reports/aws-cloudwatchlogs/settings');
 
-    $this->drupalPostForm('/admin/reports/aws-cloudwatchlogs/settings', $config, 'Save configuration');
+    $this->submitForm($config, 'Save configuration');
     $this->assertSession()->statusCodeEquals(200);
   }
 
