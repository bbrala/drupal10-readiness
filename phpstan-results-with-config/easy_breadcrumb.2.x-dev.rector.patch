diff --git a/src/EasyBreadcrumbBuilder.php b/src/EasyBreadcrumbBuilder.php
index 697960e..10e8a91 100644
--- a/src/EasyBreadcrumbBuilder.php
+++ b/src/EasyBreadcrumbBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\easy_breadcrumb;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Render\MarkupInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Component\Utility\Unicode;
@@ -50,155 +51,155 @@ class EasyBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * The router request context.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   protected $context;
 
   /**
    * The access manager service.
    *
-   * @var \Drupal\Core\Access\AccessManagerInterface
+   * @var AccessManagerInterface
    */
   protected $accessManager;
   /**
    * The request stack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The dynamic router service.
    *
-   * @var \Symfony\Component\Routing\Matcher\RequestMatcherInterface
+   * @var RequestMatcherInterface
    */
   protected $router;
 
   /**
    * The path processor service.
    *
-   * @var \Drupal\Core\PathProcessor\InboundPathProcessorInterface
+   * @var InboundPathProcessorInterface
    */
   protected $pathProcessor;
 
   /**
    * Site config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $siteConfig;
 
   /**
    * Breadcrumb config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The title resolver.
    *
-   * @var \Drupal\easy_breadcrumb\TitleResolver
+   * @var TitleResolver
    */
   protected $titleResolver;
 
   /**
    * The current user object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The current path object.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;
 
   /**
    * The menu link manager.
    *
-   * @var \Drupal\Core\Menu\MenuLinkManager
+   * @var MenuLinkManager
    */
   protected $menuLinkManager;
 
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The logger service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $logger;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity repository.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
    * Constructs the EasyBreadcrumbBuilder.
    *
-   * @param \Drupal\Core\Routing\RequestContext $context
+   * @param RequestContext $context
    *   The router request context.
-   * @param \Drupal\Core\Access\AccessManagerInterface $access_manager
+   * @param AccessManagerInterface $access_manager
    *   The access manager service.
-   * @param \Symfony\Component\Routing\Matcher\RequestMatcherInterface $router
+   * @param RequestMatcherInterface $router
    *   The dynamic router service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack service.
-   * @param \Drupal\Core\PathProcessor\InboundPathProcessorInterface $path_processor
+   * @param InboundPathProcessorInterface $path_processor
    *   The inbound path processor.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    * @param \Drupal\easy_breadcrumb\TitleResolverInterface $title_resolver
    *   The title resolver service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user object.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path
+   * @param CurrentPathStack $current_path
    *   The current path.
-   * @param \Drupal\Core\Menu\MenuLinkManager $menu_link_manager
+   * @param MenuLinkManager $menu_link_manager
    *   The menu link manager.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   The logger service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   The module handler.
    */
   public function __construct(RequestContext $context, AccessManagerInterface $access_manager, RequestMatcherInterface $router, RequestStack $request_stack, InboundPathProcessorInterface $path_processor, ConfigFactoryInterface $config_factory, TitleResolverInterface $title_resolver, AccountInterface $current_user, CurrentPathStack $current_path, MenuLinkManager $menu_link_manager, LanguageManagerInterface $language_manager, EntityTypeManagerInterface $entity_type_manager, EntityRepositoryInterface $entity_repository, LoggerChannelFactoryInterface $logger, MessengerInterface $messenger, ModuleHandler $module_handler) {
@@ -629,7 +630,7 @@ class EasyBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * Set request context from passed in $route_match if route is available.
    *
-   * @param Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match for the breadcrumb.
    */
   protected function setRouteContextFromRouteMatch(RouteMatchInterface $route_match) {
@@ -669,9 +670,9 @@ class EasyBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * Get string title for route.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $route_request
+   * @param Request $route_request
    *   A request object.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   A RouteMatch object.
    * @param array $replacedTitles
    *   A array replaced titles.
@@ -743,16 +744,16 @@ class EasyBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * Remove duplicate repeated segments.
    *
-   * @param \Drupal\Core\Link[] $links
+   * @param Link[] $links
    *   The links.
    *
-   * @return \Drupal\Core\Link[]
+   * @return Link[]
    *   The new links.
    */
   protected function removeRepeatedSegments(array $links) {
     $newLinks = [];
 
-    /** @var \Drupal\Core\Link $last */
+    /** @var Link $last */
     $last = NULL;
 
     foreach ($links as $link) {
@@ -769,9 +770,9 @@ class EasyBreadcrumbBuilder implements BreadcrumbBuilderInterface {
   /**
    * Compares two breadcrumb links for equality.
    *
-   * @param \Drupal\Core\Link $link1
+   * @param Link $link1
    *   The first link.
-   * @param \Drupal\Core\Link $link2
+   * @param Link $link2
    *   The second link.
    *
    * @return bool
@@ -813,7 +814,7 @@ class EasyBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * @param array $exclude
    *   An array of paths or system paths to skip.
    *
-   * @return \Symfony\Component\HttpFoundation\Request
+   * @return Request
    *   A populated request object or NULL if the path couldn't be matched.
    */
   protected function getRequestForPath($path, array $exclude) {
@@ -984,7 +985,7 @@ class EasyBreadcrumbBuilder implements BreadcrumbBuilderInterface {
    * @param string $title
    *   Text/title to be truncated.
    *
-   * @return array|\Drupal\Core\StringTranslation\TranslatableMarkup|false|mixed|string|null
+   * @return array|TranslatableMarkup|false|mixed|string|null
    *   Return truncated title.
    */
   public function truncator(string $title) {
diff --git a/src/EasyBreadcrumbStructuredDataJsonLd.php b/src/EasyBreadcrumbStructuredDataJsonLd.php
index 73833ca..06a2e6b 100644
--- a/src/EasyBreadcrumbStructuredDataJsonLd.php
+++ b/src/EasyBreadcrumbStructuredDataJsonLd.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\easy_breadcrumb;
 
+use Drupal\Core\Breadcrumb\Breadcrumb;
+use Drupal\Core\Link;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -17,32 +19,32 @@ class EasyBreadcrumbStructuredDataJsonLd implements ContainerInjectionInterface
   /**
    * The Easy Breadcrumb builder.
    *
-   * @var \Drupal\easy_breadcrumb\EasyBreadcrumbBuilder
+   * @var EasyBreadcrumbBuilder
    */
   protected $easyBreadcrumbBuilder;
 
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * EasyBreadcrumbStructuredDataJsonLd constructor.
    *
-   * @param \Drupal\easy_breadcrumb\EasyBreadcrumbBuilder $easy_breadcrumb_builder
+   * @param EasyBreadcrumbBuilder $easy_breadcrumb_builder
    *   The Easy Breadcrumb builder.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
    */
   public function __construct(EasyBreadcrumbBuilder $easy_breadcrumb_builder, ConfigFactoryInterface $config_factory, RouteMatchInterface $route_match) {
@@ -72,7 +74,7 @@ class EasyBreadcrumbStructuredDataJsonLd implements ContainerInjectionInterface
     $config = $this->configFactory->get(EasyBreadcrumbConstants::MODULE_SETTINGS);
     if ($config->get(EasyBreadcrumbConstants::ADD_STRUCTURED_DATA_JSON_LD)) {
 
-      /** @var \Drupal\Core\Breadcrumb\Breadcrumb $breadcrumb */
+      /** @var Breadcrumb $breadcrumb */
       $breadcrumb = $this->easyBreadcrumbBuilder->build($this->routeMatch);
       $links = $breadcrumb->getLinks();
 
@@ -86,7 +88,7 @@ class EasyBreadcrumbStructuredDataJsonLd implements ContainerInjectionInterface
           "itemListElement": [';
 
         $position = 1;
-        /** @var \Drupal\Core\Link $link */
+        /** @var Link $link */
         foreach ($links as $link) {
           $name = $link->getText();
           $item = $link->getUrl()->setAbsolute(TRUE)->toString();
diff --git a/src/TitleResolver.php b/src/TitleResolver.php
index 0fef737..a8fcf99 100644
--- a/src/TitleResolver.php
+++ b/src/TitleResolver.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\easy_breadcrumb;
 
+use Drupal\Core\Entity\EntityTypeManager;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Controller\TitleResolver as ControllerTitleResolver;
 use Drupal\Core\Url;
 use Symfony\Component\HttpFoundation\Request;
@@ -23,29 +25,29 @@ class TitleResolver extends ControllerTitleResolver {
   /**
    * The field storage config storage.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * Breadcrumb config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * Constructs a new EntityDisplayRebuilder.
    *
-   * @param \Drupal\Core\Controller\ControllerResolverInterface $controller_resolver
+   * @param ControllerResolverInterface $controller_resolver
    *   The controller resolver.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
-   * @param \Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface $argument_resolver
+   * @param ArgumentResolverInterface $argument_resolver
    *   The argument resolver.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct(ControllerResolverInterface $controller_resolver, TranslationInterface $string_translation, ArgumentResolverInterface $argument_resolver, EntityTypeManagerInterface $entity_type_manager, ConfigFactoryInterface $config_factory) {
diff --git a/tests/modules/easy_breadcrumb_test/src/Controller/TestRouteController.php b/tests/modules/easy_breadcrumb_test/src/Controller/TestRouteController.php
index 1f0e094..ef89a47 100644
--- a/tests/modules/easy_breadcrumb_test/src/Controller/TestRouteController.php
+++ b/tests/modules/easy_breadcrumb_test/src/Controller/TestRouteController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\easy_breadcrumb_test\Controller;
 
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
@@ -30,7 +31,7 @@ class TestRouteController extends ControllerBase {
    * Among other places,
    *  used in Drupal\search_api\Controller\IndexController.php.
    *
-   * @return \Drupal\Component\Render\FormattableMarkup
+   * @return FormattableMarkup
    *   The page title.
    */
   public function pageTitleFormattableMarkup() {
@@ -52,7 +53,7 @@ class TestRouteController extends ControllerBase {
   /**
    * Returns the page title as TranslatableMarkup.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The page title.
    */
   public function pageTitleTranslatableMarkup() {
