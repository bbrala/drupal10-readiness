modules/contrib/ics_link_field/src/Controller/ServiceController.php
modules/contrib/ics_link_field/src/Plugin/Field/FieldFormatter/IcsLinkFieldFormatter.php
modules/contrib/ics_link_field/src/Plugin/Field/FieldType/IcsLinkFieldType.php
modules/contrib/ics_link_field/src/Plugin/Field/FieldWidget/IcsLinkFieldWidget.php

1 file with changes
===================

1) modules/contrib/ics_link_field/src/Controller/ServiceController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ics_link_field\Controller;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Transliteration\TransliterationInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Utility\Token;
@@ @@
   /**
    * The FileSystem service.
    *
-   * @var \Drupal\Core\File\FileSystem
+   * @var FileSystem
    */
   protected $file;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
   /**
    * The translatiteration service.
    *
-   * @var \Drupal\Component\Transliteration\TransliterationInterface
+   * @var TransliterationInterface
    */
   protected $transliteration;

@@ @@
   /**
    * The RequestStack service.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;

@@ @@
   /**
    * ServiceController constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
-   * @param \Drupal\Core\File\FileSystem $fileSystem
-   * @param \Drupal\Core\Utility\Token $token
-   * @param \Drupal\Component\Transliteration\TransliterationInterface $transliteration
+   * @param RequestStack $request
+   * @param FileSystem $fileSystem
+   * @param Token $token
+   * @param TransliterationInterface $transliteration
    */
   public function __construct(RequestStack $request, FileSystem $fileSystem, Token $token, TransliterationInterface $transliteration) {
     $this->request = $request;
@@ @@
    *
    * @param string $field_name
    *   The field_name which stores ics data.
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity this ics will be generated from.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   An Response object.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    * @throws \Exception
    */
   public function icsDownload($field_name, EntityInterface $entity) {
@@ @@
    * @param \DateTime $dtEnd
    * @param bool $noTime
    *
-   * @return \Eluceo\iCal\Component\Event
+   * @return Event
    *   The generated Event.
    */
   protected function createEvent(array $field_settings, \DateTime $dtStart, \DateTime $dtEnd, bool $noTime = FALSE) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

