modules/contrib/packagist/modules/packagist_repos/packagist_repos.module
modules/contrib/packagist/modules/packagist_repos/packagist_repository.page.inc
modules/contrib/packagist/modules/packagist_repos/packagist_repository_user.page.inc
modules/contrib/packagist/modules/packagist_repos/src/Controller/RepositoryAjaxActionsController.php
modules/contrib/packagist/modules/packagist_repos/src/Entity/Repository.php
modules/contrib/packagist/modules/packagist_repos/src/Entity/RepositoryInterface.php
modules/contrib/packagist/modules/packagist_repos/src/Entity/RepositoryUser.php
modules/contrib/packagist/modules/packagist_repos/src/Entity/RepositoryUserInterface.php
modules/contrib/packagist/modules/packagist_repos/src/Entity/RepositoryUserViewsData.php
modules/contrib/packagist/modules/packagist_repos/src/Entity/RepositoryViewsData.php
modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryDeleteForm.php
modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryForm.php
modules/contrib/packagist/modules/packagist_repos/src/Form/RepositorySettingsForm.php
modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryUserDeleteForm.php
modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryUserForm.php
modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryUserSettingsForm.php
modules/contrib/packagist/modules/packagist_repos/src/Generator/GitArchivesGenerator.php
modules/contrib/packagist/modules/packagist_repos/src/Generator/GitArchivesGeneratorInterface.php
modules/contrib/packagist/modules/packagist_repos/src/Plugin/Field/FieldFormatter/RepositoryFormatter.php
modules/contrib/packagist/modules/packagist_repos/src/Plugin/Field/FieldFormatter/RepositoryRefFormatter.php
modules/contrib/packagist/modules/packagist_repos/src/Plugin/Field/FieldType/RepositoryItem.php
modules/contrib/packagist/modules/packagist_repos/src/Plugin/Field/FieldType/RepositoryRefItem.php
modules/contrib/packagist/modules/packagist_repos/src/Plugin/Field/FieldWidget/RepositoryRefWidget.php
modules/contrib/packagist/modules/packagist_repos/src/Plugin/Field/FieldWidget/RepositoryWidget.php
modules/contrib/packagist/modules/packagist_repos/src/Plugin/Packagist/PackagistHandler/GitPackagistHandler.php
modules/contrib/packagist/modules/packagist_repos/src/RepositoryAccessControlHandler.php
modules/contrib/packagist/modules/packagist_repos/src/RepositoryHtmlRouteProvider.php
modules/contrib/packagist/modules/packagist_repos/src/RepositoryListBuilder.php
modules/contrib/packagist/modules/packagist_repos/src/RepositoryUserAccessControlHandler.php
modules/contrib/packagist/modules/packagist_repos/src/RepositoryUserHtmlRouteProvider.php
modules/contrib/packagist/modules/packagist_repos/src/RepositoryUserListBuilder.php
modules/contrib/packagist/packagist.module
modules/contrib/packagist/packagist.page.inc
modules/contrib/packagist/src/Annotation/PackagistHandler.php
modules/contrib/packagist/src/Backend/PackagistBackend.php
modules/contrib/packagist/src/Backend/PackagistBackendInterface.php
modules/contrib/packagist/src/Core/PackagistHandlerBase.php
modules/contrib/packagist/src/Core/PackagistHandlerInterface.php
modules/contrib/packagist/src/Entity/PackageJsonSha.php
modules/contrib/packagist/src/Entity/Packagist.php
modules/contrib/packagist/src/Entity/PackagistInterface.php
modules/contrib/packagist/src/Entity/PackagistType.php
modules/contrib/packagist/src/Entity/PackagistTypeInterface.php
modules/contrib/packagist/src/Entity/PackagistViewsData.php
modules/contrib/packagist/src/Form/PackagistDeleteForm.php
modules/contrib/packagist/src/Form/PackagistForm.php
modules/contrib/packagist/src/Form/PackagistSettingsForm.php
modules/contrib/packagist/src/Form/PackagistTypeDeleteForm.php
modules/contrib/packagist/src/Form/PackagistTypeForm.php
modules/contrib/packagist/src/Form/SettingsForm.php
modules/contrib/packagist/src/Generator/PackagistGenerator.php
modules/contrib/packagist/src/Generator/PackagistGeneratorInterface.php
modules/contrib/packagist/src/Manager/PackagistHandlerManager.php
modules/contrib/packagist/src/PackagistAccessControlHandler.php
modules/contrib/packagist/src/PackagistHtmlRouteProvider.php
modules/contrib/packagist/src/PackagistListBuilder.php
modules/contrib/packagist/src/PackagistTypeHtmlRouteProvider.php
modules/contrib/packagist/src/PackagistTypeListBuilder.php
modules/contrib/packagist/src/Plugin/Field/FieldFormatter/PackagistHandlerFormatter.php
modules/contrib/packagist/src/Plugin/Field/FieldType/PackagistHandlerItem.php
modules/contrib/packagist/src/Plugin/Field/FieldWidget/PackagistHandlerWidget.php
modules/contrib/packagist/src/Plugin/Packagist/PackagistHandler/BasePackagistHandler.php

16 files with changes
=====================

1) modules/contrib/packagist/src/Plugin/Field/FieldFormatter/PackagistHandlerFormatter.php:66

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/packagist/src/PackagistHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/packagist/src/PackagistAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\packagist;

+use Drupal\packagist\Entity\PackagistInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\packagist\Entity\PackagistInterface $entity */
+    /** @var PackagistInterface $entity */
     switch ($operation) {
       case 'view':
         if (!$entity->isPublished()) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/packagist/src/Manager/PackagistHandlerManager.php:17

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/packagist/src/Form/PackagistSettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/packagist/src/Backend/PackagistBackend.php:19

    ---------- begin diff ----------
@@ @@
   }

   protected function getClientScriptPath() {
-    $client_script_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'packagist') . '/scripts/client-wrapper.sh';
+    $client_script_path = DRUPAL_ROOT . '/' . \Drupal::service('extension.list.module')->getPath('packagist') . '/scripts/client-wrapper.sh';

     return $client_script_path;
   }
@@ @@

   // @todo: needed only for '--direct-execution' case
   protected function getServerScriptPath() {
-    $server_script_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'packagist') . '/scripts/server-wrapper.sh';
+    $server_script_path = DRUPAL_ROOT . '/' . \Drupal::service('extension.list.module')->getPath('packagist') . '/scripts/server-wrapper.sh';

     return $server_script_path;
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/packagist/src/Annotation/PackagistHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\packagist\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


8) modules/contrib/packagist/modules/packagist_repos/src/RepositoryUserHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/packagist/modules/packagist_repos/src/RepositoryUserAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\packagist_repos;

+use Drupal\packagist_repos\Entity\RepositoryUserInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\packagist_repos\Entity\RepositoryUserInterface $entity */
-
+    /** @var RepositoryUserInterface $entity */
     switch ($operation) {

       case 'view':
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/packagist/modules/packagist_repos/src/RepositoryHtmlRouteProvider.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/packagist/modules/packagist_repos/src/RepositoryAccessControlHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\packagist_repos;

+use Drupal\packagist_repos\Entity\RepositoryInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ @@
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\packagist_repos\Entity\RepositoryInterface $entity */
-
+    /** @var RepositoryInterface $entity */
     switch ($operation) {

       case 'view':
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/packagist/modules/packagist_repos/src/Plugin/Field/FieldFormatter/RepositoryRefFormatter.php:64

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryUserSettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryUserForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\packagist_repos\Form;

+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/packagist/modules/packagist_repos/src/Form/RepositorySettingsForm.php:26

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/packagist/modules/packagist_repos/src/Form/RepositoryForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\packagist_repos\Form;

+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Entity\ContentEntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * The current user account.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 16 files have been changed by Rector                                      

