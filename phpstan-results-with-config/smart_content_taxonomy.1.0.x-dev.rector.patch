diff --git a/src/Controller/AdminController.php b/src/Controller/AdminController.php
index b383588..573299e 100644
--- a/src/Controller/AdminController.php
+++ b/src/Controller/AdminController.php
@@ -25,7 +25,7 @@ class AdminController extends ControllerBase {
   /**
    * The node storage.
    *
-   * @var \Drupal\node\NodeStorage
+   * @var NodeStorage
    */
   protected $nodeStorage;
 
diff --git a/src/EventSubscriber/TrackTaxonomySubscriber.php b/src/EventSubscriber/TrackTaxonomySubscriber.php
index 21efdbf..afa6d79 100644
--- a/src/EventSubscriber/TrackTaxonomySubscriber.php
+++ b/src/EventSubscriber/TrackTaxonomySubscriber.php
@@ -2,13 +2,16 @@
 
 namespace Drupal\smart_content_taxonomy\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Contracts\EventDispatcher\Event;
+use Symfony\Component\HttpFoundation\ParameterBag;
+use Drupal\node\Entity\Node;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\RouteMatch;
 use Drupal\node\NodeInterface;
 use Drupal\taxonomy\Entity\Term;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class TrackTaxonomySubscriber.
@@ -39,7 +42,7 @@ class TrackTaxonomySubscriber implements EventSubscriberInterface {
   /**
    * The config for this module.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
@@ -63,7 +66,7 @@ class TrackTaxonomySubscriber implements EventSubscriberInterface {
   /**
    * This method is called when the kernel.request is dispatched.
    *
-   * @param \Symfony\Component\EventDispatcher\Event $event
+   * @param Event $event
    *   The dispatched event.
    */
   public function kernelRequest(Event $event) {
@@ -72,7 +75,7 @@ class TrackTaxonomySubscriber implements EventSubscriberInterface {
     $route_match = RouteMatch::createFromRequest($request);
     $route_name = $route_match->getRouteName();
     if ($route_name == 'entity.node.canonical') {
-      /** @var \Symfony\Component\HttpFoundation\ParameterBag $parameters */
+      /** @var ParameterBag $parameters */
       $parameters = $route_match->getParameters();
       foreach ($parameters->getIterator() as $param) {
         // If the parameter is a node, pass to the track method.
@@ -94,7 +97,7 @@ class TrackTaxonomySubscriber implements EventSubscriberInterface {
     $vocabs = $this->config->get('personalisation_vocabularies');
     $node_types = $this->config->get('personalisation_node_types');
 
-    /** @var \Drupal\node\Entity\Node $node */
+    /** @var Node $node */
     $node = $this->entityManager->getStorage('node')->load($id);
 
     if (in_array($node->bundle(), $node_types)) {
diff --git a/src/Form/AdminForm.php b/src/Form/AdminForm.php
index e5d1552..45a5fb6 100644
--- a/src/Form/AdminForm.php
+++ b/src/Form/AdminForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\smart_content_taxonomy\Form;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -15,17 +16,17 @@ class AdminForm extends ConfigFormBase {
   /**
    * Drupal\Core\Entity\EntityTypeManagerInterface definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityInterface[]
+   * @var EntityInterface[]
    */
   protected $vocabs;
 
   /**
-   * @var \Drupal\Core\Entity\EntityInterface[]
+   * @var EntityInterface[]
    */
   protected $node_types;
 
