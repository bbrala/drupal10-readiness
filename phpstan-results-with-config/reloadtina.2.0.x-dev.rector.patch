diff --git a/reloadtina.info.yml b/reloadtina.info.yml
index b763cd9..36fdc99 100644
--- a/reloadtina.info.yml
+++ b/reloadtina.info.yml
@@ -3,7 +3,6 @@ type: module
 description: 'Provides retina version of image styles.'
 package: Image
 version: VERSION
-core: 8.x
 dependencies:
   - image
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/reloadtina.module b/reloadtina.module
index 0255d60..9a08d4f 100644
--- a/reloadtina.module
+++ b/reloadtina.module
@@ -1,4 +1,6 @@
 <?php
+use Drupal\image\ImageStyleInterface;
+use Drupal\image\ImageEffectInterface;
 /**
  * @file
  * ReloadTina!
@@ -31,7 +33,7 @@ use Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException;
 /**
  * Build derivative uri for retina image style.
  *
- * @param \Drupal\image\ImageStyleInterface $image_style
+ * @param ImageStyleInterface $image_style
  *   The image style.
  * @param $image_uri
  *   The image URI.
@@ -87,7 +89,7 @@ function reloadtina_build_url($image_style, $image_uri, $multiplier = 1, $clean_
     return Url::fromUri('base:' . $directory_path . '/' . \Drupal::service('stream_wrapper_manager')->getTarget($uri), array('absolute' => TRUE, 'query' => $token_query))->toString();
   }
 
-  $file_url = file_create_url($uri);
+  $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
   // Append the query string with the token, if necessary.
   if ($token_query) {
     $file_url .= (strpos($file_url, '?') !== FALSE ? '&' : '?') . UrlHelper::buildQuery($token_query);
@@ -99,7 +101,7 @@ function reloadtina_build_url($image_style, $image_uri, $multiplier = 1, $clean_
 /**
  * Apply multiplication to image_style effects.
  *
- * @param \Drupal\image\ImageStyleInterface $image_style
+ * @param ImageStyleInterface $image_style
  *   The image style.
  * @param float $multiplier
  *   The multiplier.
@@ -127,7 +129,7 @@ function reloadtina_apply_multiplication_to_effects($image_style, $multiplier) {
 /**
  * Apply multiplication to effect.
  *
- * @param \Drupal\image\ImageEffectInterface $effect
+ * @param ImageEffectInterface $effect
  *   The effect.
  * @param $multiplier
  *   The multiplier
diff --git a/src/Controller/ImageStyleDownloadController.php b/src/Controller/ImageStyleDownloadController.php
index 68d675c..75adbe9 100644
--- a/src/Controller/ImageStyleDownloadController.php
+++ b/src/Controller/ImageStyleDownloadController.php
@@ -21,19 +21,19 @@ class ImageStyleDownloadController extends ImageController {
    *
    * After generating an image, transfer it to the requesting agent.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    * @param string $scheme
    *   The file scheme, defaults to 'private'.
-   * @param \Drupal\image\ImageStyleInterface $image_style
+   * @param ImageStyleInterface $image_style
    *   The image style to deliver.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse|\Symfony\Component\HttpFoundation\Response
+   * @return BinaryFileResponse|Response
    *   The transferred file as response or some error response.
    *
-   * @throws \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
+   * @throws AccessDeniedHttpException
    *   Thrown when the user does not have access to the file.
-   * @throws \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException
+   * @throws ServiceUnavailableHttpException
    *   Thrown when the file is still being generated.
    */
   public function deliver(Request $request, $scheme, ImageStyleInterface $image_style) {
