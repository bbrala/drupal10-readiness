diff --git a/comment_revisionref.info.yml b/comment_revisionref.info.yml
index 853d441..d1067a0 100644
--- a/comment_revisionref.info.yml
+++ b/comment_revisionref.info.yml
@@ -1,6 +1,6 @@
 name: Comment Revision Reference
 description: If a comment has a revisionref field to its host bundle, it defaults to the current host revision.
 type: module
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^8.7.7 || ^9 || ^10
 dependencies:
   - entity_reference_revisions:entity_reference_revisions
diff --git a/src/CommentRevisionref.php b/src/CommentRevisionref.php
index 9099dd2..f4fe5fe 100644
--- a/src/CommentRevisionref.php
+++ b/src/CommentRevisionref.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\comment_revisionref;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\comment\CommentTypeInterface;
 class CommentRevisionref {
 
   /**
@@ -18,11 +22,11 @@ class CommentRevisionref {
    * @return string|null
    *   The field name, or NULL if none is found.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function applicableFieldName($commentBundleId, $hostBundleId) {
-    /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+    /** @var EntityFieldManagerInterface $entityFieldManager */
     $entityFieldManager = \Drupal::service('entity_field.manager');
 
     $entityTypeManager = \Drupal::entityTypeManager();
@@ -30,7 +34,7 @@ class CommentRevisionref {
     $commentEntityType = $entityTypeManager->getDefinition('comment');
     $commentBundleStorage = $entityTypeManager->getStorage($commentEntityType->getBundleEntityType());
 
-    /** @var \Drupal\comment\CommentTypeInterface $commentType */
+    /** @var CommentTypeInterface $commentType */
     $commentType = $commentBundleStorage->load($commentBundleId);
     $hostEntityTypeId = $commentType->getTargetEntityTypeId();
 
diff --git a/src/CommentRevisionrefHooks.php b/src/CommentRevisionrefHooks.php
index 8be6ae0..68744b6 100644
--- a/src/CommentRevisionrefHooks.php
+++ b/src/CommentRevisionrefHooks.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\comment_revisionref;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\comment\CommentInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\RevisionableInterface;
@@ -12,8 +14,8 @@ class CommentRevisionrefHooks {
   /**
    * Implements hook_entity_prepare_form().
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function hookEntityPrepareForm(EntityInterface $entity, $operation, FormStateInterface $form_state) {
     if ($entity instanceof CommentInterface) {
diff --git a/tests/src/Functional/AdminPageTest.php b/tests/src/Functional/AdminPageTest.php
index 7290f12..ae5bbe2 100644
--- a/tests/src/Functional/AdminPageTest.php
+++ b/tests/src/Functional/AdminPageTest.php
@@ -33,7 +33,7 @@ class AdminPageTest extends BrowserTestBase {
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
 
     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
