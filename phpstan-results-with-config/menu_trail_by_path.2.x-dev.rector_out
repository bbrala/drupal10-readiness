modules/contrib/menu_trail_by_path/menu_trail_by_path.install
modules/contrib/menu_trail_by_path/menu_trail_by_path.module
modules/contrib/menu_trail_by_path/src/Form/MenuTrailByPathSettingsForm.php
modules/contrib/menu_trail_by_path/src/MenuTrailByPathActiveTrail.php
modules/contrib/menu_trail_by_path/src/MenuTrailByPathServiceProvider.php
modules/contrib/menu_trail_by_path/tests/src/Functional/MenuTrailByPathActiveTrailHtmlClassTest.php

3 files with changes
====================

1) modules/contrib/menu_trail_by_path/tests/src/Functional/MenuTrailByPathActiveTrailHtmlClassTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\menu_trail_by_path\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\menu_link_content\Entity\MenuLinkContent;
 use Drupal\menu_trail_by_path\MenuTrailByPathActiveTrail;
@@ @@
   protected $menuUrls = [];

   /**
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $authenticatedUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/menu_trail_by_path/src/MenuTrailByPathActiveTrail.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\menu_trail_by_path;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Menu\MenuLinkInterface;
 use Drupal\Component\Utility\UrlHelper;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Menu\MenuActiveTrail;
@@ @@
   const MENU_TRAIL_CORE = 'core';

   /**
-   * @var \Drupal\Core\Path\PathValidatorInterface
-   */
+    * @var PathValidatorInterface
+    */
    protected $pathValidator;

   /**
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   protected $context;

   /**
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The configuration object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * MenuTrailByPathActiveTrail constructor.
    *
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
-   * @param \Drupal\Core\Lock\LockBackendInterface $lock
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
-   * @param \Drupal\Core\Routing\RequestContext $context
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param MenuLinkManagerInterface $menu_link_manager
+   * @param RouteMatchInterface $route_match
+   * @param CacheBackendInterface $cache
+   * @param LockBackendInterface $lock
+   * @param PathValidatorInterface $path_validator
+   * @param RequestContext $context
+   * @param LanguageManagerInterface $languageManager
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(MenuLinkManagerInterface $menu_link_manager, RouteMatchInterface $route_match, CacheBackendInterface $cache, LockBackendInterface $lock, PathValidatorInterface $path_validator, RequestContext $context, LanguageManagerInterface $languageManager, ConfigFactoryInterface $config_factory) {
     parent::__construct($menu_link_manager, $route_match, $cache, $lock);
@@ @@
    * @param string $menu_name
    *   The menu within which to find the active trail link.
    *
-   * @return \Drupal\Core\Menu\MenuLinkInterface|NULL
+   * @return MenuLinkInterface|NULL
    *   The menu link for the given menu, or NULL if there is no matching menu link.
    */
   public function getActiveTrailLink($menu_name) {
@@ @@
   /**
    * Returns a list of URL objects that represent the current path elements.
    *
-   * @return \Drupal\Core\Url[]
+   * @return Url[]
    *   List of routed URL objects for each path element.
    */
   protected function getTrailUrls() {
@@ @@
    * NOTE: There is a difference between $this->routeMatch->getRouteName and $this->context->getPathInfo()
    * for now it seems more logical to prefer the latter, because that's the "real" url that visitors enter in their browser..
    *
-   * @return \Drupal\Core\Url|null
+   * @return Url|null
    */
   protected function getCurrentRequestUrl() {
     // Special case on frontpage, allow to explicitly match on <front> menu
@@ @@
   }

   /**
-   * @return \Drupal\Core\Url[]
+   * @return Url[]
    */
   protected function getCurrentPathUrls() {
     $urls = [];
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/menu_trail_by_path/menu_trail_by_path.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\system\MenuInterface;
 /**
  * @file
  * Expand menu items and set active-trail according to current path.
@@ @@
  * Implements hook_form_FORM_ID_alter().
  */
 function menu_trail_by_path_form_menu_form_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\system\MenuInterface $menu */
+  /** @var MenuInterface $menu */
   $menu = $form_state->getFormObject()->getEntity();

   // Add menu trail third party settings.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

