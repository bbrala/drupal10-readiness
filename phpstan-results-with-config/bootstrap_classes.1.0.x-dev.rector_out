modules/contrib/bootstrap_classes/bootstrap_classes.module
modules/contrib/bootstrap_classes/modules/block/bootstrap_classes_block.install
modules/contrib/bootstrap_classes/modules/block/bootstrap_classes_block.module
modules/contrib/bootstrap_classes/modules/layout/bootstrap_classes_layout.module
modules/contrib/bootstrap_classes/modules/layout/src/EventSubscriber/BlockComponentRenderArray.php
modules/contrib/bootstrap_classes/src/BootstrapClasses.php
modules/contrib/bootstrap_classes/src/BootstrapClassesInterface.php
modules/contrib/bootstrap_classes/src/Form/BootstrapClassesSettingsForm.php

5 files with changes
====================

1) modules/contrib/bootstrap_classes/src/Form/BootstrapClassesSettingsForm.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   private $cache;

@@ @@
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_default
+   * @param CacheBackendInterface $cache_default
    *   The cache service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, CacheBackendInterface $cache_default) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/bootstrap_classes/src/BootstrapClasses.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\bootstrap_classes;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * The cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   private $config;

@@ @@
   /**
    * Constructs a new BootstrapClasses object.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_default
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param CacheBackendInterface $cache_default
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(CacheBackendInterface $cache_default, ConfigFactoryInterface $config_factory) {
     $this->cache = $cache_default;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/bootstrap_classes/modules/layout/src/EventSubscriber/BlockComponentRenderArray.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Add bootstrap classes to the render array.
    *
-   * @param \Drupal\layout_builder\Event\SectionComponentBuildRenderArrayEvent $event
+   * @param SectionComponentBuildRenderArrayEvent $event
    *   The section component render event.
    */
   public function onBuildRender(SectionComponentBuildRenderArrayEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/bootstrap_classes/modules/layout/bootstrap_classes_layout.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\layout_builder\Form\ConfigureBlockFormBase;
+use Drupal\bootstrap_classes\BootstrapClassesInterface;
 /**
  * @file
  * Contains bootstrap_classes.module.
@@ @@
  * Add boostrap classes element to the layout builder block forms.
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function _bootstrap_classes_layout_layout_builder_block_form(&$form,  FormStateInterface $form_state) {
-  /** @var \Drupal\layout_builder\Form\ConfigureBlockFormBase $form_object */
+  /** @var ConfigureBlockFormBase $form_object */
   $form_object = $form_state->getFormObject();
   $component = $form_object->getCurrentComponent();
-  /** @var \Drupal\bootstrap_classes\BootstrapClassesInterface $bootstrap_classes_service */
+  /** @var BootstrapClassesInterface $bootstrap_classes_service */
   $bootstrap_classes_service = \Drupal::service('bootstrap_classes');
   $classes = $bootstrap_classes_service->getSelectOptions();
   $form['settings']['bootstrap_classes'] = [
@@ @@
  * Custom submit handler for the layout builder block forms.
  *
  * @param array $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function bootstrap_classes_layout_submit_block_form(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\layout_builder\Form\ConfigureBlockFormBase $form_object */
+  /** @var ConfigureBlockFormBase $form_object */
   $form_object = $form_state->getFormObject();
   $component = $form_object->getCurrentComponent();
   if ($classes = $form_state->getValue(['settings', 'bootstrap_classes'])) {
@@ @@
  * Implements hook_bootstrap_layouts_class_options_alter().
  */
 function bootstrap_classes_layout_bootstrap_layouts_class_options_alter(&$classes, &$groups) {
-  /** @var \Drupal\bootstrap_classes\BootstrapClassesInterface $bootstrap_classes_service */
+  /** @var BootstrapClassesInterface $bootstrap_classes_service */
   $bootstrap_classes_service = \Drupal::service('bootstrap_classes');
   $classes = $bootstrap_classes_service->getClasses();
   $groups = $bootstrap_classes_service->getGroups();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) modules/contrib/bootstrap_classes/modules/block/bootstrap_classes_block.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\block\BlockInterface;
+use Drupal\bootstrap_classes\BootstrapClassesInterface;
 /**
  * @file
  * Contains bootstrap_classes.module.
@@ @@
  */
 function bootstrap_classes_block_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   if (!empty($form['third_party_settings']['block_class']['classes'])) {
-    /** @var \Drupal\block\BlockInterface $block */
+    /** @var BlockInterface $block */
     $block = $form_state->getFormObject()->getEntity();
     $block_classes = $block->getThirdPartySetting('block_class', 'classes');
     $block_classes = array_filter(array_map('trim', explode(' ', $block_classes ?? '')));
-    /** @var \Drupal\bootstrap_classes\BootstrapClassesInterface $bootstrap_classes_service */
+    /** @var BootstrapClassesInterface $bootstrap_classes_service */
     $bootstrap_classes_service = \Drupal::service('bootstrap_classes');
     $classes = $bootstrap_classes_service->getSelectOptions();
     $flatten_classes = array_merge(...array_values($classes));
@@ @@
  * Submit handler.
  *
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  */
 function bootstrap_classes_block_form_submit($form, FormStateInterface $form_state) {
   $block_classes = $form_state->getValue(['third_party_settings', 'block_class']);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

