diff --git a/acquia_lift.module b/acquia_lift.module
index c2492a5..b4f7439 100644
--- a/acquia_lift.module
+++ b/acquia_lift.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\acquia_lift\Service\Context\PathContext;
 /**
  * Drupal Module: Acquia Lift
  *
@@ -49,7 +50,7 @@ function acquia_lift_page_attachments(array &$page) {
 function acquia_lift_toolbar() {
   $user = \Drupal::currentUser();
   // show link only when path context agrees on attaching.
-  /** @var \Drupal\acquia_lift\Service\Context\PathContext $path_context */
+  /** @var PathContext $path_context */
   $path_context = \Drupal::service('acquia_lift.service.context.path_context');
 
   $items = [];
diff --git a/modules/acquia_lift_inspector/tests/src/FunctionalJavascript/InspectorJsTest.php b/modules/acquia_lift_inspector/tests/src/FunctionalJavascript/InspectorJsTest.php
index 814f0a4..0661ab4 100644
--- a/modules/acquia_lift_inspector/tests/src/FunctionalJavascript/InspectorJsTest.php
+++ b/modules/acquia_lift_inspector/tests/src/FunctionalJavascript/InspectorJsTest.php
@@ -38,7 +38,7 @@ class InspectorJsTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Ensure an `article` node type exists.
diff --git a/modules/acquia_lift_publisher/acquia_lift_publisher.module b/modules/acquia_lift_publisher/acquia_lift_publisher.module
index 6011f7e..2d89503 100644
--- a/modules/acquia_lift_publisher/acquia_lift_publisher.module
+++ b/modules/acquia_lift_publisher/acquia_lift_publisher.module
@@ -53,7 +53,7 @@ function acquia_lift_publisher_entity_update(EntityInterface $entity) {
 /**
  * Triggers the Content Hub export process.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The current entity.
  */
 function _acquia_lift_publisher_trigger_queue(EntityInterface $entity): void {
diff --git a/modules/acquia_lift_publisher/src/ContentPublishingActions.php b/modules/acquia_lift_publisher/src/ContentPublishingActions.php
index 6140b80..fe7def8 100644
--- a/modules/acquia_lift_publisher/src/ContentPublishingActions.php
+++ b/modules/acquia_lift_publisher/src/ContentPublishingActions.php
@@ -18,7 +18,7 @@ class ContentPublishingActions {
   /**
    * The acquia lift publishing settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    * @see \Drupal\acquia_lift_publisher\Form\ContentPublishingForm
    */
   private $publisherSettings;
@@ -35,7 +35,7 @@ class ContentPublishingActions {
    *
    * @param \Drupal\acquia_contenthub_publisher\ContentHubExportQueue $content_hub_export_queue
    *   The Content Hub export queue service.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The acquia lift publishing settings.
    */
   public function __construct(ContentHubExportQueue $content_hub_export_queue, ImmutableConfig $config) {
@@ -46,7 +46,7 @@ class ContentPublishingActions {
   /**
    * Triggers the Content Hub export process.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The current entity.
    */
   public function triggerQueue(EntityInterface $entity): void {
diff --git a/modules/acquia_lift_publisher/src/EventSubscriber/Cdf/EntityRenderHandler.php b/modules/acquia_lift_publisher/src/EventSubscriber/Cdf/EntityRenderHandler.php
index 1e11288..f7cf7e6 100644
--- a/modules/acquia_lift_publisher/src/EventSubscriber/Cdf/EntityRenderHandler.php
+++ b/modules/acquia_lift_publisher/src/EventSubscriber/Cdf/EntityRenderHandler.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\acquia_lift_publisher\EventSubscriber\Cdf;
 
+use Drupal\Core\Session\UserSession;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\block_content\Plugin\Block\BlockContentBlock;
 use Acquia\ContentHubClient\CDFAttribute;
 use Acquia\ContentHubClient\CDF\CDFObject;
 use Drupal\acquia_contenthub\AcquiaContentHubEvents;
@@ -36,7 +40,7 @@ class EntityRenderHandler implements EventSubscriberInterface {
   /**
    * The account switcher.
    *
-   * @var \Drupal\Core\Session\AccountSwitcherInterface
+   * @var AccountSwitcherInterface
    */
   protected $accountSwitcher;
 
@@ -50,35 +54,35 @@ class EntityRenderHandler implements EventSubscriberInterface {
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Block Manager.
    *
-   * @var \Drupal\Core\Block\BlockManagerInterface
+   * @var BlockManagerInterface
    */
   protected $blockManager;
 
   /**
    * The uuid generator.
    *
-   * @var \Drupal\Component\Uuid\UuidInterface
+   * @var UuidInterface
    */
   protected $uuidGenerator;
 
   /**
    * The rendered user.
    *
-   * @var \Drupal\Core\Session\UserSession
+   * @var UserSession
    */
   protected $renderUser;
 
@@ -99,31 +103,31 @@ class EntityRenderHandler implements EventSubscriberInterface {
   /**
    * The language default service.
    *
-   * @var \Drupal\Core\Language\LanguageDefault
+   * @var LanguageDefault
    */
   protected $languageDefault;
 
   /**
    * Translation manager.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationManager
+   * @var TranslationManager
    */
   protected $translationManager;
 
   /**
    * EntityRenderHandler constructor.
    *
-   * @param \Drupal\Core\Session\AccountSwitcherInterface $account_switcher
+   * @param AccountSwitcherInterface $account_switcher
    *   The account switcher.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The Acquia Lift publishing configuration object.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Block\BlockManagerInterface $block_manager
+   * @param BlockManagerInterface $block_manager
    *   The block manager.
-   * @param \Drupal\Component\Uuid\UuidInterface $uuid_generator
+   * @param UuidInterface $uuid_generator
    *   The UUID generator.
    * @param \Drupal\acquia_contenthub\Client\ClientFactory $client_factory
    *   The client factory.
@@ -155,8 +159,8 @@ class EntityRenderHandler implements EventSubscriberInterface {
    * @param \Drupal\acquia_contenthub\Event\CreateCdfEntityEvent $event
    *   The create CDF entity event.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function onCreateCdf(CreateCdfEntityEvent $event) {
     $entity = $event->getEntity();
@@ -283,7 +287,7 @@ class EntityRenderHandler implements EventSubscriberInterface {
   /**
    * Get rendered user.
    *
-   * @return \Drupal\acquia_contenthub\Session\ContentHubUserSession|\Drupal\Core\Session\UserSession
+   * @return \Drupal\acquia_contenthub\Session\ContentHubUserSession|UserSession
    *   The rendered user.
    */
   protected function getRenderUser() {
@@ -296,7 +300,7 @@ class EntityRenderHandler implements EventSubscriberInterface {
   /**
    * Get view mode minimal HTML.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $object
+   * @param ContentEntityInterface $object
    *   The content entity object.
    * @param string $view_mode
    *   The view mode identifier.
@@ -320,7 +324,7 @@ class EntityRenderHandler implements EventSubscriberInterface {
   /**
    * Renders block using BlockViewBuilder.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $object
+   * @param ContentEntityInterface $object
    *   The Content Entity Object.
    * @param string $view_mode
    *   The request view mode identifier.
@@ -329,7 +333,7 @@ class EntityRenderHandler implements EventSubscriberInterface {
    *   Render array for the block.
    */
   protected function getBlockMinimalBuildArray(ContentEntityInterface $object, $view_mode) {
-    /** @var \Drupal\block_content\Plugin\Block\BlockContentBlock $block */
+    /** @var BlockContentBlock $block */
     $block = $this->blockManager->createInstance('block_content:' . $object->uuid());
     $build = [
       '#theme' => 'block',
@@ -367,7 +371,7 @@ class EntityRenderHandler implements EventSubscriberInterface {
   /**
    * Returns the applicable render array.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The renderable entity.
    * @param string $view_mode
    *   The view mode to render in.
diff --git a/modules/acquia_lift_publisher/src/EventSubscriber/EnqueueEligibility/IsExcludedImageStyle.php b/modules/acquia_lift_publisher/src/EventSubscriber/EnqueueEligibility/IsExcludedImageStyle.php
index 967048b..73e5930 100644
--- a/modules/acquia_lift_publisher/src/EventSubscriber/EnqueueEligibility/IsExcludedImageStyle.php
+++ b/modules/acquia_lift_publisher/src/EventSubscriber/EnqueueEligibility/IsExcludedImageStyle.php
@@ -50,7 +50,7 @@ class IsExcludedImageStyle implements EventSubscriberInterface {
   /**
    * Checks if current entity must be excluded from export queue.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   Entity.
    *
    * @return bool
diff --git a/modules/acquia_lift_publisher/src/EventSubscriber/Publish/PublishOnlyRendered.php b/modules/acquia_lift_publisher/src/EventSubscriber/Publish/PublishOnlyRendered.php
index 15d26ff..5d33c81 100644
--- a/modules/acquia_lift_publisher/src/EventSubscriber/Publish/PublishOnlyRendered.php
+++ b/modules/acquia_lift_publisher/src/EventSubscriber/Publish/PublishOnlyRendered.php
@@ -35,7 +35,7 @@ class PublishOnlyRendered implements EventSubscriberInterface {
    *
    * @param \Drupal\acquia_contenthub\ContentHubCommonActions $common_actions
    *   The Content Hub common actions service.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The publisher configuration object.
    */
   public function __construct(ContentHubCommonActions $common_actions, ImmutableConfig $config) {
diff --git a/modules/acquia_lift_publisher/src/Form/ContentPublishingForm.php b/modules/acquia_lift_publisher/src/Form/ContentPublishingForm.php
index c34f9ee..f4cd367 100644
--- a/modules/acquia_lift_publisher/src/Form/ContentPublishingForm.php
+++ b/modules/acquia_lift_publisher/src/Form/ContentPublishingForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\acquia_lift_publisher\Form;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\Entity\EntityViewMode;
+use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\acquia_contenthub\Client\ClientFactory;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
@@ -42,14 +46,14 @@ class ContentPublishingForm extends ConfigFormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
@@ -82,11 +86,11 @@ class ContentPublishingForm extends ConfigFormBase {
   /**
    * ContentPublishingForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
    * @param \Drupal\acquia_contenthub\Client\ClientFactory $client_factory
    *   The client factory.
@@ -120,8 +124,8 @@ class ContentPublishingForm extends ConfigFormBase {
   /**
    * {@inheritdoc}
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
     // Check to see that we have a valid content hub client.
@@ -136,14 +140,14 @@ class ContentPublishingForm extends ConfigFormBase {
     }
 
     $config = $this->config(self::CONFIG_NAME);
-    /** @var \Drupal\Core\Entity\Entity\EntityViewMode[] $view_modes */
+    /** @var EntityViewMode[] $view_modes */
     $view_modes = $this->entityTypeManager->getStorage('entity_view_mode')->loadMultiple();
     $form['options'] = [
       '#tree' => TRUE,
     ];
     foreach ($view_modes as $view_mode) {
       $entity_type_id = $view_mode->getTargetType();
-      /** @var \Drupal\Core\Entity\EntityTypeInterface $entity_type */
+      /** @var EntityTypeInterface $entity_type */
       $entity_type = $this->entityTypeManager->getDefinition($entity_type_id);
       // Do not present options for non-fieldable entity types.
       if (!$entity_type->entityClassImplements(FieldableEntityInterface::class)) {
diff --git a/modules/acquia_lift_publisher/src/Form/ContentPublishingSettingsTrait.php b/modules/acquia_lift_publisher/src/Form/ContentPublishingSettingsTrait.php
index 86924d9..64dc4f3 100644
--- a/modules/acquia_lift_publisher/src/Form/ContentPublishingSettingsTrait.php
+++ b/modules/acquia_lift_publisher/src/Form/ContentPublishingSettingsTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\acquia_lift_publisher\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Entity\EntityInterface;
 
 /**
@@ -14,7 +15,7 @@ trait ContentPublishingSettingsTrait {
   /**
    * Acquia lift publisher configuration object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    * @see \Drupal\acquia_lift_publisher\Form\ContentPublishingForm
    */
   private $publisherSettings;
@@ -22,7 +23,7 @@ trait ContentPublishingSettingsTrait {
   /**
    * Returns the value of the entity view modes setting.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The current entity.
    *
    * @return array
