modules/contrib/config_log/config_log.drush.inc
modules/contrib/config_log/config_log.install
modules/contrib/config_log/src/EventSubscriber/ConfigLogDatabaseSubscriber.php
modules/contrib/config_log/src/EventSubscriber/ConfigLogMailSubscriber.php
modules/contrib/config_log/src/EventSubscriber/ConfigLogPsrSubscriber.php
modules/contrib/config_log/src/EventSubscriber/ConfigLogSubscriberBase.php
modules/contrib/config_log/src/Form/ConfigLogConfigForm.php
modules/contrib/config_log/tests/src/Unit/ConfigLogPsrSubscriberTest.php
modules/contrib/config_log/tests/src/Unit/ContextLogger.php
modules/contrib/config_log/tests/src/Unit/MemoryStorage.php

7 files with changes
====================

1) modules/contrib/config_log/tests/src/Unit/MemoryStorage.php:12

    ---------- begin diff ----------
@@ @@
 class MemoryStorage implements StorageInterface {

   /**
-   * @var \Drupal\Core\Cache\MemoryBackend
+   * @var MemoryBackend
    */
   protected $data;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/config_log/tests/src/Unit/ConfigLogPsrSubscriberTest.php:4

    ---------- begin diff ----------
@@ @@
  */
 namespace Drupal\Tests\config_log\Unit;

+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\DependencyInjection\ClassResolverInterface;
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\config_log\EventSubscriber\ConfigLogPsrSubscriber;
 use Drupal\Core\Cache\MemoryBackend;
 use Drupal\Core\Config\Config;
@@ @@
    * @param array $data
    *   An array of configuration data.
    *
-   * @return \Drupal\Core\Config\Config
+   * @return Config
    *   A writable configuration object that responds to set() calls.
    */
   private function writableConfig(string $name, array $data) {
-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
-    $module_handler = $this->getMockBuilder('Drupal\Core\Extension\ModuleHandlerInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    /** @var ModuleHandlerInterface $module_handler */
+    $module_handler = $this->createMock('Drupal\Core\Extension\ModuleHandlerInterface');

-    /** @var \Drupal\Core\DependencyInjection\ClassResolverInterface $class_resolver */
-    $class_resolver = $this->getMockBuilder('Drupal\Core\DependencyInjection\ClassResolverInterface')
-      ->disableOriginalConstructor()
-      ->getMock();
+    /** @var ClassResolverInterface $class_resolver */
+    $class_resolver = $this->createMock('Drupal\Core\DependencyInjection\ClassResolverInterface');

     $typed_config = new TypedConfigManager(new MemoryStorage(), new MemoryStorage(), new MemoryBackend(), $module_handler, $class_resolver);
     $config = new Config($name, new MemoryStorage(), new EventDispatcher(), $typed_config);
@@ @@
   /**
    * Emit a save event on a configuration object.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration to emit the event on.
    *
-   * @return \Drupal\Tests\config_log\Unit\ContextLogger
+   * @return ContextLogger
    *   A logger that stores both messages and context variables.
    */
   private function emitSaveEvent(Config $config) {
@@ @@
     $event = new ConfigCrudEvent($config);
     $logger = new ContextLogger();

-    /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
+    /** @var ConfigFactoryInterface $config_factory */
     $config_factory = $this->getConfigFactoryStub([
       'config_log.settings' => ['log_destination' => 0],
     ]);
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/config_log/src/EventSubscriber/ConfigLogSubscriberBase.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The Config.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory services.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/config_log/src/EventSubscriber/ConfigLogPsrSubscriber.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The log logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The log logger.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory services.
    */
   public function __construct(LoggerInterface $logger, ConfigFactoryInterface $config_factory) {
@@ @@
   /**
    * Save config.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The config crud event.
    */
   public function onConfigSave(ConfigCrudEvent $event) {
@@ @@
   /**
    * The config change.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration.
    * @param array $diff
    *   The diff array.
@@ @@
   /**
    * React to configuration ConfigEvent::IMPORT events.
    *
-   * @param \Drupal\Core\Config\ConfigImporterEvent $event
+   * @param ConfigImporterEvent $event
    *   The event to process.
    */
   public function onConfigImport(ConfigImporterEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/config_log/src/EventSubscriber/ConfigLogMailSubscriber.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\config_log\EventSubscriber;

+use Psr\Log\LoggerInterface;
 use Drupal\Component\Utility\DiffArray;
 use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigCrudEvent;
@@ @@
   /**
    * The logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   The mail manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory services.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
    */
   public function __construct(MailManagerInterface $mail_manager, ConfigFactoryInterface $config_factory, LanguageManagerInterface $language_manager) {
@@ @@
   /**
    * Save config.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The config CRUD event.
    */
   public function onConfigSave(ConfigCrudEvent $event) {
@@ @@
   /**
    * The gather changes.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The config.
    * @param array $diff
    *   The config diff.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/config_log/src/EventSubscriber/ConfigLogDatabaseSubscriber.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * A shared YAML dumper instance.
    *
-   * @var \Symfony\Component\Yaml\Dumper
+   * @var Dumper
    */
   protected $dumper;

@@ @@
   /**
    * Constructs the ConfigLogDatabaseSubscriber object.
    *
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The database connection object.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory services.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
    */
   public function __construct(Connection $database, ConfigFactoryInterface $config_factory, AccountProxyInterface $current_user) {
@@ @@
   /**
    * React to configuration ConfigEvent::SAVE events.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The event to process.
    *
    * @throws \Exception
@@ @@
   /**
    * React to configuration ConfigEvent::RENAME events.
    *
-   * @param \Drupal\Core\Config\ConfigRenameEvent $event
+   * @param ConfigRenameEvent $event
    *   The event to process.
    *
    * @throws \Exception
@@ @@
   /**
    * React to configuration ConfigEvent::DELETE events.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The event to process.
    *
    * @throws \Exception
@@ @@
   /**
    * React to configuration ConfigEvent::IMPORT events.
    *
-   * @param \Drupal\Core\Config\ConfigImporterEvent $event
+   * @param ConfigImporterEvent $event
    *   The event to process.
    */
   public function onConfigImport(ConfigImporterEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/config_log/config_log.drush.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user\Entity\User;
 /**
  * Implements hook_drush_command().
  *
@@ @@
   do {
     $result = \Drupal::database()->query('SELECT * FROM {config_log} WHERE clid > :id ORDER BY clid ASC', array('id' => $last));
     foreach ($result as $row) {
-      $account = \Drupal\user\Entity\User::load($row->uid);
+      $account = User::load($row->uid);
       $filename = $config_vcs . '/' . $row->name . '.yml';
       file_put_contents($filename, $row->data);
       $cmd = 'cd ' . escapeshellarg($config_vcs) . ' && git add * && (git diff --quiet HEAD || git commit -m ' . escapeshellarg($row->clid . ' user: ' . $account->getAccountName() . ' operation: ' . $row->operation . ' name:' . $row->name) . ')';
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

