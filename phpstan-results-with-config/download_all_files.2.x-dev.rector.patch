diff --git a/download_all_files.info.yml b/download_all_files.info.yml
index 2148689..69a1fb4 100644
--- a/download_all_files.info.yml
+++ b/download_all_files.info.yml
@@ -1,6 +1,5 @@
 name: Download All Files
 type: module
 description: This module will provide field formatter and block plugin for downloading all files associated with an entity.
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: Files
diff --git a/src/Controller/DownloadController.php b/src/Controller/DownloadController.php
index d483a6d..51d6af5 100644
--- a/src/Controller/DownloadController.php
+++ b/src/Controller/DownloadController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\download_all_files\Controller;
 
+use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Messenger\Messenger;
@@ -22,21 +23,21 @@ class DownloadController extends ControllerBase {
   /**
    * The file system.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    *   The entity type manager.
    */
   protected $entityTypeManager;
@@ -69,7 +70,7 @@ class DownloadController extends ControllerBase {
    * @param string $field_name
    *   Node file field name.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse|\Symfony\Component\HttpFoundation\RedirectResponse
+   * @return BinaryFileResponse|RedirectResponse
    *   Downloads the file.
    */
   public function downloadAllFiles($node_id, $field_name) {
@@ -131,7 +132,7 @@ class DownloadController extends ControllerBase {
    * @param string $file_path
    *   File physical path.
    *
-   * @return \Symfony\Component\HttpFoundation\BinaryFileResponse
+   * @return BinaryFileResponse
    *   Downloads the file.
    */
   protected function streamZipFile($file_path) {
diff --git a/src/Plugin/Field/FieldFormatter/DownloadAllFormatter.php b/src/Plugin/Field/FieldFormatter/DownloadAllFormatter.php
index 32778bc..a011d6c 100644
--- a/src/Plugin/Field/FieldFormatter/DownloadAllFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/DownloadAllFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\download_all_files\Plugin\Field\FieldFormatter;
 
+use Drupal\file\Entity\File;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Field\Plugin\Field\FieldFormatter\EntityReferenceFormatterBase;
@@ -30,7 +31,7 @@ class DownloadAllFormatter extends EntityReferenceFormatterBase {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
@@ -51,7 +52,7 @@ class DownloadAllFormatter extends EntityReferenceFormatterBase {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
    */
   public function __construct($plugin_id, $plugin_definition, $field_definition, array $settings, $label, $view_mode, array $third_party_settings, RendererInterface $renderer) {
@@ -174,7 +175,7 @@ class DownloadAllFormatter extends EntityReferenceFormatterBase {
     if ($files = $this->getEntitiesToView($items, $langcode)) {
       $rows = [];
       $module_name = $this->getPluginDefinition()['provider'];
-      $path = drupal_get_path('module', $module_name);
+      $path = \Drupal::service('extension.list.module')->getPath($module_name);
       $link = [
         '#type' => 'link',
         '#attributes' => ['class' => ['download-file-icon']],
@@ -184,12 +185,12 @@ class DownloadAllFormatter extends EntityReferenceFormatterBase {
           '#uri' => '/' . $path . '/images/downloadIcon.svg',
         ],
       ];
-      /** @var \Drupal\file\Entity\File $file */
+      /** @var File $file */
       foreach ($files as $file) {
         if (!empty($settings['simple_theme'])) {
           $file_name = $file->getFilename();
           $table_link = $link;
-          $table_link['#url'] = Url::fromUri(file_create_url($file->getFileUri()));
+          $table_link['#url'] = \Drupal::service('file_url_generator')->generate($file->getFileUri());
           $table_link['#attributes']['download'] = $file_name;
           $rows[] = [
             [
