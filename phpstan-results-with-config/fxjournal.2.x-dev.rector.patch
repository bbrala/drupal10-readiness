diff --git a/fxjournal.info.yml b/fxjournal.info.yml
index 5e223f7..447b643 100644
--- a/fxjournal.info.yml
+++ b/fxjournal.info.yml
@@ -2,7 +2,7 @@ name: Forex Journal
 type: module
 description: 'Provides forex journal related functionality.'
 package: Forex
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:field
   - drupal:text
diff --git a/fxjournal.module b/fxjournal.module
index d9a359a..d854266 100644
--- a/fxjournal.module
+++ b/fxjournal.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\fxjournal\Processor;
+use Drupal\Core\Session\AccountProxyInterface;
 /**
  * @file
  * Provides a forex journal record entity type.
@@ -118,7 +120,7 @@ function template_preprocess_fxjournal_event(array &$variables) {
 function fxjournal_form_fxjournal_record_add_form_alter(&$form, FormStateInterface $form_state, $form_id) {
   $user = \Drupal::currentUser();
 
-  /** @var \Drupal\fxjournal\Processor $processor */
+  /** @var Processor $processor */
   $processor = \Drupal::service('fxjournal.processor');
 
   $trade_accounts = $processor->getAccounts($user->id());
@@ -175,7 +177,7 @@ function fxjournal_form_fxjournal_record_edit_form_alter(&$form, FormStateInterf
   $record = $form_state->getFormObject()->getEntity();
   $author_id = $record->getOwnerId();
 
-  /** @var \Drupal\fxjournal\Processor $processor */
+  /** @var Processor $processor */
   $processor = \Drupal::service('fxjournal.processor');
 
   // Set the trade account select options to belong to the record author only.
@@ -271,7 +273,7 @@ function fxjournal_form_alter(&$form, FormStateInterface $form_state, $form_id)
  *
  * @param mixed $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state instance.
  */
 function fxjournal_record_form_submit_handler(&$form, FormStateInterface $form_state) {
@@ -287,7 +289,7 @@ function fxjournal_record_form_submit_handler(&$form, FormStateInterface $form_s
  *
  * @param mixed $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state instance.
  */
 function fxjournal_account_form_submit_handler(&$form, FormStateInterface $form_state) {
@@ -303,7 +305,7 @@ function fxjournal_account_form_submit_handler(&$form, FormStateInterface $form_
  *
  * @param mixed $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state instance.
  */
 function fxjournal_symbol_form_submit_handler(&$form, FormStateInterface $form_state) {
@@ -319,7 +321,7 @@ function fxjournal_symbol_form_submit_handler(&$form, FormStateInterface $form_s
  *
  * @param mixed $form
  *   The form array.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state instance.
  */
 function fxjournal_event_form_submit_handler(&$form, FormStateInterface $form_state) {
@@ -333,19 +335,19 @@ function fxjournal_event_form_submit_handler(&$form, FormStateInterface $form_st
 /**
  * Gets the allowed values for the record entity references.
  *
- * @param \Drupal\field\Entity\FieldStorageConfig $definition
+ * @param FieldStorageConfig $definition
  *   The field definition object.
- * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+ * @param ContentEntityInterface $entity
  *   The entity instance.
  *
  * @return array
  *   The allowed values.
  */
 function fxjournal_allowed_values_callback(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL): array {
-  /** @var \Drupal\Core\Session\AccountProxyInterface $user */
+  /** @var AccountProxyInterface $user */
   $user = \Drupal::currentUser();
 
-  /** @var \Drupal\fxjournal\Processor $processor */
+  /** @var Processor $processor */
   $processor = \Drupal::service('fxjournal.processor');
 
   switch ($entity->bundle()) {
diff --git a/src/Controller/FxjournalAccountController.php b/src/Controller/FxjournalAccountController.php
index 7e913c7..ffce6a5 100644
--- a/src/Controller/FxjournalAccountController.php
+++ b/src/Controller/FxjournalAccountController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fxjournal\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -17,14 +18,14 @@ class FxjournalAccountController extends ControllerBase {
   /**
    * The entity type manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $typeManager;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $type_manager
+   * @param EntityTypeManager $type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManager $type_manager) {
@@ -43,10 +44,10 @@ class FxjournalAccountController extends ControllerBase {
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $user) {
@@ -59,9 +60,9 @@ class FxjournalAccountController extends ControllerBase {
   /**
    * Generates the dashboard render content.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user object.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return array
diff --git a/src/Controller/FxjournalDashboardController.php b/src/Controller/FxjournalDashboardController.php
index 40c0537..7414b90 100644
--- a/src/Controller/FxjournalDashboardController.php
+++ b/src/Controller/FxjournalDashboardController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fxjournal\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -17,14 +18,14 @@ class FxjournalDashboardController extends ControllerBase {
   /**
    * The entity type manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $typeManager;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $type_manager
+   * @param EntityTypeManager $type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManager $type_manager) {
@@ -43,10 +44,10 @@ class FxjournalDashboardController extends ControllerBase {
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $user) {
@@ -59,9 +60,9 @@ class FxjournalDashboardController extends ControllerBase {
   /**
    * Generates the dashboard render content.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user object.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return array
diff --git a/src/Controller/FxjournalEventController.php b/src/Controller/FxjournalEventController.php
index 2398912..f957a04 100644
--- a/src/Controller/FxjournalEventController.php
+++ b/src/Controller/FxjournalEventController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fxjournal\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -17,14 +18,14 @@ class FxjournalEventController extends ControllerBase {
   /**
    * The entity type manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $typeManager;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $type_manager
+   * @param EntityTypeManager $type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManager $type_manager) {
@@ -43,10 +44,10 @@ class FxjournalEventController extends ControllerBase {
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $user) {
@@ -59,9 +60,9 @@ class FxjournalEventController extends ControllerBase {
   /**
    * Generates the dashboard render content.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user object.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return array
diff --git a/src/Controller/FxjournalSymbolController.php b/src/Controller/FxjournalSymbolController.php
index 212dba8..60ff7aa 100644
--- a/src/Controller/FxjournalSymbolController.php
+++ b/src/Controller/FxjournalSymbolController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fxjournal\Controller;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -17,14 +18,14 @@ class FxjournalSymbolController extends ControllerBase {
   /**
    * The entity type manager instance.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $typeManager;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManager $type_manager
+   * @param EntityTypeManager $type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManager $type_manager) {
@@ -43,10 +44,10 @@ class FxjournalSymbolController extends ControllerBase {
   /**
    * Checks access for a specific request.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   Run access checks for this account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(AccountInterface $user) {
@@ -59,9 +60,9 @@ class FxjournalSymbolController extends ControllerBase {
   /**
    * Generates the dashboard render content.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user object.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
    * @return array
diff --git a/src/Form/FxjournalAccountForm.php b/src/Form/FxjournalAccountForm.php
index 88e6312..8843b4d 100644
--- a/src/Form/FxjournalAccountForm.php
+++ b/src/Form/FxjournalAccountForm.php
@@ -20,7 +20,7 @@ class FxjournalAccountForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New forex journal account %label has been created.', $message_arguments));
diff --git a/src/Form/FxjournalEventForm.php b/src/Form/FxjournalEventForm.php
index ee6ca02..aaee24f 100644
--- a/src/Form/FxjournalEventForm.php
+++ b/src/Form/FxjournalEventForm.php
@@ -20,7 +20,7 @@ class FxjournalEventForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New forex journal event %label has been created.', $message_arguments));
diff --git a/src/Form/FxjournalRecordForm.php b/src/Form/FxjournalRecordForm.php
index 80a790d..94d2dcd 100644
--- a/src/Form/FxjournalRecordForm.php
+++ b/src/Form/FxjournalRecordForm.php
@@ -20,7 +20,7 @@ class FxjournalRecordForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New forex journal record %label has been created.', $message_arguments));
diff --git a/src/Form/FxjournalRecordUserSettingsForm.php b/src/Form/FxjournalRecordUserSettingsForm.php
index 173effb..6922ea8 100644
--- a/src/Form/FxjournalRecordUserSettingsForm.php
+++ b/src/Form/FxjournalRecordUserSettingsForm.php
@@ -24,14 +24,14 @@ class FxjournalRecordUserSettingsForm extends FormBase {
   /**
    * The current user instance.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The renderer instance.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
diff --git a/src/Form/FxjournalSymbolForm.php b/src/Form/FxjournalSymbolForm.php
index 750c9bc..a73fc8c 100644
--- a/src/Form/FxjournalSymbolForm.php
+++ b/src/Form/FxjournalSymbolForm.php
@@ -20,7 +20,7 @@ class FxjournalSymbolForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New forex journal symbol %label has been created.', $message_arguments));
diff --git a/src/FxjournalAccountListBuilder.php b/src/FxjournalAccountListBuilder.php
index 259b4b3..5e2ca0c 100644
--- a/src/FxjournalAccountListBuilder.php
+++ b/src/FxjournalAccountListBuilder.php
@@ -33,8 +33,7 @@ class FxjournalAccountListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\fxjournal\FxjournalAccountInterface $entity */
-
+    /** @var FxjournalAccountInterface $entity */
     if (!$this->ownDashboard()) {
       $owner = $entity->getOwner();
 
diff --git a/src/FxjournalEntityListBuilderTrait.php b/src/FxjournalEntityListBuilderTrait.php
index 22d4468..3feaf0e 100644
--- a/src/FxjournalEntityListBuilderTrait.php
+++ b/src/FxjournalEntityListBuilderTrait.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fxjournal;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Entity\EntityInterface;
 
 /**
@@ -25,7 +26,7 @@ trait FxjournalEntityListBuilderTrait {
   protected function fxJournalEntityQuery() {
     $query = $this->getStorage()->getQuery();
 
-    /** @var \Drupal\Core\Session\AccountInterface $account */
+    /** @var AccountInterface $account */
     $account = \Drupal::service('current_user');
 
     if (
diff --git a/src/FxjournalEventListBuilder.php b/src/FxjournalEventListBuilder.php
index 99cc628..6baf072 100644
--- a/src/FxjournalEventListBuilder.php
+++ b/src/FxjournalEventListBuilder.php
@@ -30,8 +30,7 @@ class FxjournalEventListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\fxjournal\FxjournalEventInterface $entity */
-
+    /** @var FxjournalEventInterface $entity */
     if (!$this->ownDashboard()) {
       $owner = $entity->getOwner();
 
diff --git a/src/FxjournalRecordInterface.php b/src/FxjournalRecordInterface.php
index 3b45324..3d8a43e 100644
--- a/src/FxjournalRecordInterface.php
+++ b/src/FxjournalRecordInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\fxjournal;
 
+use Drupal\fxjournal\Entity\FxjournalEvent;
+use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\user\EntityOwnerInterface;
 use Drupal\user\UserInterface;
@@ -17,7 +19,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Gets the trade symbol events.
    *
-   * @return \Drupal\fxjournal\Entity\FxjournalEvent[]
+   * @return FxjournalEvent[]
    *   The trade symbol events.
    */
   public function getEvents();
@@ -25,7 +27,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Adds a forex journal record event.
    *
-   * @param \Drupal\fxjournal\FxjournalEventInterface $event
+   * @param FxjournalEventInterface $event
    *   The event entity.
    *
    * @return \Drupal\fxjournal\FxjournalRecordInterface
@@ -36,7 +38,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Gets the trade account entity.
    *
-   * @return \Drupal\fxjournal\FxjournalAccountInterface
+   * @return FxjournalAccountInterface
    *   The trade account entity.
    */
   public function getTradeAccount();
@@ -44,7 +46,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Sets the forex journal record trade account.
    *
-   * @param \Drupal\fxjournal\FxjournalAccountInterface $account
+   * @param FxjournalAccountInterface $account
    *   The trade account entity.
    *
    * @return \Drupal\fxjournal\FxjournalRecordInterface
@@ -74,7 +76,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Gets the forex journal record open datetime.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime
+   * @return DrupalDateTime
    *   The forex journal record open datetime object.
    */
   public function getOpenDateTime();
@@ -139,7 +141,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Sets the forex journal record symbol.
    *
-   * @param \Drupal\fxjournal\FxjournalSymbolInterface $symbol
+   * @param FxjournalSymbolInterface $symbol
    *   The symbol entity.
    *
    * @return \Drupal\fxjournal\FxjournalRecordInterface
@@ -226,7 +228,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Gets the forex journal record close datetime.
    *
-   * @return \Drupal\Core\Datetime\DrupalDateTime
+   * @return DrupalDateTime
    *   The forex journal record close datetime object.
    */
   public function getCloseDateTime();
@@ -329,7 +331,7 @@ interface FxjournalRecordInterface extends ContentEntityInterface, EntityOwnerIn
   /**
    * Sets the forex journal owner.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The user account.
    *
    * @return \Drupal\fxjournal\FxjournalRecordInterface
diff --git a/src/FxjournalRecordListBuilder.php b/src/FxjournalRecordListBuilder.php
index d80c3aa..0642c21 100644
--- a/src/FxjournalRecordListBuilder.php
+++ b/src/FxjournalRecordListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\fxjournal;
 
+use Drupal\fxjournal\Entity\FxjournalRecord;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityListBuilder;
 use Drupal\fxjournal\FxjournalEntityListBuilderTrait;
@@ -40,8 +41,7 @@ class FxjournalRecordListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\fxjournal\Entity\FxjournalRecord $entity */
-
+    /** @var FxjournalRecord $entity */
     if ($this->ownDashboard() == FALSE) {
       $owner = $entity->getOwner();
 
diff --git a/src/FxjournalSymbolListBuilder.php b/src/FxjournalSymbolListBuilder.php
index bbcbdff..5dc6bd3 100644
--- a/src/FxjournalSymbolListBuilder.php
+++ b/src/FxjournalSymbolListBuilder.php
@@ -30,8 +30,7 @@ class FxjournalSymbolListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\fxjournal\FxjournalSymbolInterface $entity */
-
+    /** @var FxjournalSymbolInterface $entity */
     if (!$this->ownDashboard()) {
       $owner = $entity->getOwner();
 
diff --git a/src/Processor.php b/src/Processor.php
index c167910..143ce62 100644
--- a/src/Processor.php
+++ b/src/Processor.php
@@ -13,23 +13,23 @@ class Processor implements ProcessorInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The user data instance.
    *
-   * @var \Drupal\user\UserData
+   * @var UserData
    */
   protected $userData;
 
   /**
    * Constructs a Processor object.
    *
-   * @param \Drupal\user\UserData $user_data
+   * @param UserData $user_data
    *   The user data instance.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager instance.
    */
   public function __construct(UserData $user_data, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/tests/src/Functional/FxjournalDashboardTest.php b/tests/src/Functional/FxjournalDashboardTest.php
index 5665d30..e228879 100644
--- a/tests/src/Functional/FxjournalDashboardTest.php
+++ b/tests/src/Functional/FxjournalDashboardTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\fxjournal\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\Url;
 use Drupal\fxjournal\Entity\FxjournalSymbol;
@@ -43,14 +44,14 @@ class FxjournalDashboardTest extends BrowserTestBase {
    * Tests the Dashboard related functionality.
    */
   public function testDashboard() {
-    /** @var \Drupal\user\Entity\User $trader */
+    /** @var User $trader */
     $trader = $this->createTrader();
 
     $session = $this->assertSession();
 
     $record = $this->createRecord($trader->id());
 
-    /** @var \Drupal\user\Entity\User $bad_trader */
+    /** @var User $bad_trader */
     $bad_trader = $this->createTrader();
     $this->drupalLogin($bad_trader);
 
diff --git a/tests/src/Functional/FxjournalEntityTrait.php b/tests/src/Functional/FxjournalEntityTrait.php
index aa8825f..8c1e08e 100644
--- a/tests/src/Functional/FxjournalEntityTrait.php
+++ b/tests/src/Functional/FxjournalEntityTrait.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\Tests\fxjournal\Functional;
 
+use Drupal\fxjournal\FxjournalAccountInterface;
+use Drupal\fxjournal\FxjournalSymbolInterface;
+use Drupal\fxjournal\FxjournalEventInterface;
+use Drupal\fxjournal\FxjournalRecordInterface;
 use Drupal\fxjournal\Entity\FxjournalAccount;
 use Drupal\fxjournal\Entity\FxjournalSymbol;
 use Drupal\fxjournal\Entity\FxjournalEvent;
@@ -47,7 +51,7 @@ trait FxjournalEntityTrait {
    * @param array $values
    *   The account values.
    *
-   * @return \Drupal\fxjournal\FxjournalAccountInterface
+   * @return FxjournalAccountInterface
    *   The newly created account.
    */
   protected function createAccount(int $owner, array $values = []) {
@@ -55,7 +59,7 @@ trait FxjournalEntityTrait {
       $values = $this->generateAccountValues();
     }
 
-    /** @var \Drupal\fxjournal\Entity\FxjournalAccount $account */
+    /** @var FxjournalAccount $account */
     $account = FxjournalAccount::create();
 
     $account->setLogin($values['login']);
@@ -92,7 +96,7 @@ trait FxjournalEntityTrait {
    * @param array $values
    *   The Symbol values.
    *
-   * @return \Drupal\fxjournal\FxjournalSymbolInterface
+   * @return FxjournalSymbolInterface
    *   The newly created Symbol.
    */
   protected function createSymbol(int $owner, array $values = []) {
@@ -100,7 +104,7 @@ trait FxjournalEntityTrait {
       $values = $this->generateSymbolValues();
     }
 
-    /** @var \Drupal\fxjournal\Entity\FxjournalSymbol $symbol */
+    /** @var FxjournalSymbol $symbol */
     $symbol = FxjournalSymbol::create();
 
     $symbol->setTitle($values['title']);
@@ -134,7 +138,7 @@ trait FxjournalEntityTrait {
    * @param array $values
    *   The Event values.
    *
-   * @return \Drupal\fxjournal\FxjournalEventInterface
+   * @return FxjournalEventInterface
    *   The newly created Event.
    */
   protected function createEvent(int $owner, array $values = []) {
@@ -142,7 +146,7 @@ trait FxjournalEntityTrait {
       $values = $this->generateEventValues();
     }
 
-    /** @var \Drupal\fxjournal\Entity\FxjournalEvent $event */
+    /** @var FxjournalEvent $event */
     $event = FxjournalEvent::create();
 
     $event->setTitle($values['title']);
@@ -193,7 +197,7 @@ trait FxjournalEntityTrait {
    * @param array $values
    *   The Record values.
    *
-   * @return \Drupal\fxjournal\FxjournalRecordInterface
+   * @return FxjournalRecordInterface
    *   The newly created Record.
    */
   protected function createRecord(int $owner, array $values = []) {
@@ -205,7 +209,7 @@ trait FxjournalEntityTrait {
     $symbol = $this->createSymbol($owner);
     $event = $this->createEvent($owner);
 
-    /** @var \Drupal\fxjournal\Entity\FxjournalRecord $record */
+    /** @var FxjournalRecord $record */
     $record = FxjournalRecord::create();
 
     $record->addEvent($event);
diff --git a/tests/src/Functional/FxjournalRecordTest.php b/tests/src/Functional/FxjournalRecordTest.php
index 3af406b..ada47c2 100644
--- a/tests/src/Functional/FxjournalRecordTest.php
+++ b/tests/src/Functional/FxjournalRecordTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\fxjournal\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\fxjournal\Entity\FxjournalEvent;
+use Drupal\fxjournal\Entity\FxjournalAccount;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\Url;
 use Drupal\fxjournal\Entity\FxjournalSymbol;
@@ -43,7 +46,7 @@ class FxjournalRecordTest extends BrowserTestBase {
    * Tests the Record related functionality.
    */
   public function testRecord() {
-    /** @var \Drupal\user\Entity\User $trader */
+    /** @var User $trader */
     $trader = $this->createTrader();
 
     $session = $this->assertSession();
@@ -60,17 +63,17 @@ class FxjournalRecordTest extends BrowserTestBase {
       'fxjournal_record' => $record->id(),
     ];
 
-    /** @var \Drupal\user\Entity\User $bad_trader */
+    /** @var User $bad_trader */
     $bad_trader = $this->createTrader();
     $this->drupalLogin($bad_trader);
 
-    /** @var \Drupal\fxjournal\Entity\FxjournalEvent $external_event */
+    /** @var FxjournalEvent $external_event */
     $external_event = $this->createEvent($bad_trader->id());
 
-    /** @var \Drupal\fxjournal\Entity\FxjournalAccount $external_account */
+    /** @var FxjournalAccount $external_account */
     $external_account = $this->createAccount($bad_trader->id());
 
-    /** @var \Drupal\fxjournal\Entity\FxjournalSymbol $external_symbol */
+    /** @var FxjournalSymbol $external_symbol */
     $external_symbol = $this->createSymbol($bad_trader->id());
 
     // Access Denied for the "bad" trader.
