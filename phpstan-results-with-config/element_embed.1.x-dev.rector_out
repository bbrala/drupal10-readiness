modules/contrib/element_embed/src/Annotation/EmbeddableRenderElement.php
modules/contrib/element_embed/src/ConfigurableEmbeddableRenderElementInterface.php
modules/contrib/element_embed/src/EmbeddableElementManager.php
modules/contrib/element_embed/src/EmbeddableRenderElementInterface.php
modules/contrib/element_embed/src/Form/ElementEmbedDialog.php
modules/contrib/element_embed/src/Plugin/CKEditorPlugin/ElementEmbed.php
modules/contrib/element_embed/src/Plugin/EmbedType/ElementEmbed.php
modules/contrib/element_embed/src/Plugin/Filter/ElementEmbed.php

5 files with changes
====================

1) modules/contrib/element_embed/src/Plugin/Filter/ElementEmbed.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * The element info plugin manager.
    *
-   * @var \Drupal\element_embed\EmbeddableElementManager
+   * @var EmbeddableElementManager
    */
   protected $elementManager;

@@ @@
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\element_embed\EmbeddableElementManager $element_manager
+   * @param EmbeddableElementManager $element_manager
    *   The embeddable element info plugin manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, RendererInterface $renderer, EmbeddableElementManager $element_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/element_embed/src/Plugin/CKEditorPlugin/ElementEmbed.php:20

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'element_embed') . '/js/plugins/drupalelement/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('element_embed') . '/js/plugins/drupalelement/plugin.js';
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/element_embed/src/Form/ElementEmbedDialog.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The element info plugin manager.
    *
-   * @var \Drupal\element_embed\EmbeddableElementManager
+   * @var EmbeddableElementManager
    */
   protected $elementManager;

@@ @@
   /**
    * Constructs a ElementEmbedDialog object.
    *
-   * @param \Drupal\element_embed\EmbeddableElementManager $element_manager
+   * @param EmbeddableElementManager $element_manager
    *   The embeddable element info plugin manager.
    */
   public function __construct(EmbeddableElementManager $element_manager) {
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\editor\EditorInterface $editor
+   * @param EditorInterface $editor
    *   The editor to which this dialog corresponds.
-   * @param \Drupal\embed\EmbedButtonInterface $embed_button
+   * @param EmbedButtonInterface $embed_button
    *   The URL button to which this dialog corresponds.
    */
   public function buildForm(array $form, FormStateInterface $form_state, EditorInterface $editor = NULL, EmbedButtonInterface $embed_button = NULL) {
@@ @@
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated options for the element type.
    */
   public function updateElementSettings(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/element_embed/src/EmbeddableElementManager.php:21

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/element_embed/src/Annotation/EmbeddableRenderElement.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\element_embed\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human-readable name of the render element.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 5 files have been changed by Rector                                       

