modules/contrib/spamicide/spamicide.install
modules/contrib/spamicide/spamicide.module
modules/contrib/spamicide/src/Entity/Spamicide.php
modules/contrib/spamicide/src/Form/SpamicideForm.php
modules/contrib/spamicide/src/Form/SpamicideSettingsForm.php
modules/contrib/spamicide/src/SpamicideInterface.php
modules/contrib/spamicide/src/SpamicideListBuilder.php

3 files with changes
====================

1) modules/contrib/spamicide/src/SpamicideListBuilder.php:24

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\spamicide\SpamicideInterface $entity */
+    /** @var SpamicideInterface $entity */
     $row['label'] = $entity->label();
     $row['id'] = $entity->id();
     $row['spamicide_form_id'] = $entity->getFormId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/spamicide/src/Form/SpamicideForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\spamicide\Form;

+use Drupal\spamicide\SpamicideInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
 /**
  * Spamicide form.
  *
- * @property \Drupal\spamicide\SpamicideInterface $entity
+ * @property SpamicideInterface $entity
  */
 class SpamicideForm extends EntityForm {

@@ @@
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;

@@ @@
   /**
    * SpamicideForm constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   Constructor.
    */
   public function __construct(RequestStack $request_stack) {
@@ @@
   /**
    * Create spamicide.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Create spamicide.
    *
    * @return static
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/spamicide/spamicide.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\spamicide\Entity\Spamicide;
 /**
  * @file
  * This module provides yet another tool to eliminate spam.
@@ @@
   $configs = $storage->loadMultiple();
   $messenger = \Drupal::messenger();

-  /** @var \Drupal\spamicide\Entity\Spamicide $config */
+  /** @var Spamicide $config */
   foreach ($configs as $config) {
     $form_id = $config->label();
     $config->setFormId($form_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

