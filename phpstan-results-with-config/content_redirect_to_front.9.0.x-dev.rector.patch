diff --git a/src/EventSubscriber/RedirectSubscriber.php b/src/EventSubscriber/RedirectSubscriber.php
index c12afd3..87a32da 100644
--- a/src/EventSubscriber/RedirectSubscriber.php
+++ b/src/EventSubscriber/RedirectSubscriber.php
@@ -28,41 +28,41 @@ class RedirectSubscriber implements EventSubscriberInterface {
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * Path matcher service.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * RedirectSubscriber constructor.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $currentUser
+   * @param AccountProxyInterface $currentUser
    *   Current user.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
+   * @param LanguageManagerInterface $languageManager
    *   Language manager.
-   * @param \Drupal\Core\Path\PathMatcherInterface $pathMatcher
+   * @param PathMatcherInterface $pathMatcher
    *   Path matcher service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
    */
   public function __construct(AccountProxyInterface $currentUser, LanguageManagerInterface $languageManager, PathMatcherInterface $pathMatcher, ConfigFactoryInterface $configFactory) {
@@ -85,7 +85,7 @@ class RedirectSubscriber implements EventSubscriberInterface {
   /**
    * Sets redirect if needed.
    *
-   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent $event
    *   The Event to process.
    */
   public function onKernelRequest(RequestEvent $event) {
@@ -101,10 +101,10 @@ class RedirectSubscriber implements EventSubscriberInterface {
   /**
    * Checks if redirect should be applied based on the route and config.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   HTTP request.
    *
-   * @return \Drupal\Core\Routing\TrustedRedirectResponse|null
+   * @return TrustedRedirectResponse|null
    *   TrustedRedirectResponse if redirect should be applied. NULL otherwise.
    */
   protected function checkRedirect(Request $request) {
@@ -183,7 +183,7 @@ class RedirectSubscriber implements EventSubscriberInterface {
   /**
    * Returns the redirect response.
    *
-   * @return \Drupal\Core\Routing\TrustedRedirectResponse
+   * @return TrustedRedirectResponse
    *   Redirects to the frontpage for the current language.
    */
   protected function getRedirectResult() {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index c649c91..da5ab50 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -19,25 +19,25 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * SettingsForm constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entityTypeBundleInfo
+   * @param EntityTypeBundleInfoInterface $entityTypeBundleInfo
    *   Entity type bundle info service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, EntityTypeManagerInterface $entityTypeManager, EntityTypeBundleInfoInterface $entityTypeBundleInfo) {
