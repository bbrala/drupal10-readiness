modules/contrib/copysafe_video_protection/src/Controller/CopySafeVideoController.php
modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoClass.php
modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoConfig.php
modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoFileDelete.php
modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoSettings.php
modules/contrib/copysafe_video_protection/src/Plugin/Filter/FilterCopySafeVideo.php

6 files with changes
====================

1) modules/contrib/copysafe_video_protection/src/Plugin/Filter/FilterCopySafeVideo.php:94

    ---------- begin diff ----------
@@ @@
           }
         }

-        $settings['copysafe_video_protection']['embed_options'][$csp_id]['plugin_url'] = $base_url . '/' . drupal_get_path('module', 'copysafe_video_protection') . '/';
-        $settings['copysafe_video_protection']['embed_options'][$csp_id]['plugin_path'] = $base_url . '/' . drupal_get_path('module', 'copysafe_video_protection') . '/';
+        $settings['copysafe_video_protection']['embed_options'][$csp_id]['plugin_url'] = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('copysafe_video_protection') . '/';
+        $settings['copysafe_video_protection']['embed_options'][$csp_id]['plugin_path'] = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('copysafe_video_protection') . '/';
         $settings['copysafe_video_protection']['embed_options'][$csp_id]['upload_path'] = $base_url . '/' . $upload_folder;
         $settings['copysafe_video_protection']['embed_options'][$csp_id]['upload_url'] = $base_url . '/' . $upload_folder;
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoSettings.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a Copysafe Video settings object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoFileDelete.php:66

    ---------- begin diff ----------
@@ @@
       return RedirectResponse::create('/admin/config/copysafe/copysafe_video_protection', RedirectResponse::HTTP_MOVED_PERMANENTLY);
     }
     else {
-      /** @var \Drupal\file\Entity\File $file */
+      /** @var File $file */
       $file = $this->entityManager->getStorage('file')->load($this->fid);
       if (empty($file)) {
         return RedirectResponse::create('/admin/config/copysafe/copysafe_video_protection', RedirectResponse::HTTP_MOVED_PERMANENTLY);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoConfig.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\copysafe_video_protection\Form;

+use Drupal\file\Entity\File;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityManagerInterface;
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a Copysafe Video settings object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   Entity manager.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database object.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityManagerInterface $entity_manager, Connection $database) {
@@ @@
       '#description'       => $this->t("Only .class files can be uploaded here."),
     ];

-    $result = db_query("SELECT * FROM {file_managed}")->fetchAll();
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
+    $result = \Drupal::database()->query("SELECT * FROM {file_managed}")->fetchAll();

     $header = [];
     $header[] = ['data' => 'File', 'field' => 'filename'];
@@ @@
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $values = $form_state->getValues();
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $strip_file = $this->entityManager->getStorage('file')
       ->load($values['image']['0']);
     if ($strip_file->isTemporary()) {
    ----------- end diff -----------

Applied rules:
 * DBQueryRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/copysafe_video_protection/src/Form/CopySafeVideoClass.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\copysafe_video_protection\Form;

+use Drupal\file\Entity\File;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\OpenModalDialogCommand;
 use Drupal\Core\Ajax\ReplaceCommand;
@@ @@
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
    *
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   The entity manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(EntityManagerInterface $entity_manager, ConfigFactoryInterface $config_factory) {
@@ @@
     if (empty($fid) || !is_numeric($fid['fid'])) {
       return RedirectResponse::create('/admin/config/copysafe/copysafe_video_protection', RedirectResponse::HTTP_MOVED_PERMANENTLY);
     }
-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = $this->entityManager->getStorage('file')->load($fid['fid']);
     if (empty($file)) {
       return RedirectResponse::create('/admin/config/copysafe/copysafe_video_protection', RedirectResponse::HTTP_MOVED_PERMANENTLY);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/copysafe_video_protection/src/Controller/CopySafeVideoController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\copysafe_video_protection\Controller;

+use Drupal\file\Entity\File;
 use Drupal\Core\Entity\EntityManagerInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilder
+   * @var FormBuilder
    */
   protected $formBuilder;

@@ @@
   /**
    * The CopySafeVideoController constructor.
    *
-   * @param \Drupal\Core\Form\FormBuilder $formBuilder
+   * @param FormBuilder $formBuilder
    *   The form builder.
    * @param \Drupal\Core\Entity\EntityManagerInterface $entity_manager
    *   Entity manager.
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The Drupal service container.
    *
    * @return static
@@ @@
       return ['#makup' => ''];
     }

-    /** @var \Drupal\file\Entity\File $file */
+    /** @var File $file */
     $file = $this->entityManager->getStorage('file')->load($fid);

     // Get the modal form using the form builder.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

