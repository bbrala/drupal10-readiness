modules/contrib/config_normalizer/src/Annotation/ConfigNormalizer.php
modules/contrib/config_normalizer/src/Config/NormalizedReadOnlyStorage.php
modules/contrib/config_normalizer/src/Config/NormalizedReadOnlyStorageInterface.php
modules/contrib/config_normalizer/src/Config/NormalizedStorageComparerTrait.php
modules/contrib/config_normalizer/src/ConfigItemNormalizer.php
modules/contrib/config_normalizer/src/ConfigItemNormalizerInterface.php
modules/contrib/config_normalizer/src/ConfigNormalizer.php
modules/contrib/config_normalizer/src/ConfigNormalizerInterface.php
modules/contrib/config_normalizer/src/Plugin/ConfigNormalizer/ConfigNormalizerActive.php
modules/contrib/config_normalizer/src/Plugin/ConfigNormalizer/ConfigNormalizerFilterFormat.php
modules/contrib/config_normalizer/src/Plugin/ConfigNormalizer/ConfigNormalizerSort.php
modules/contrib/config_normalizer/src/Plugin/ConfigNormalizerBase.php
modules/contrib/config_normalizer/src/Plugin/ConfigNormalizerInterface.php
modules/contrib/config_normalizer/src/Plugin/ConfigNormalizerManager.php

6 files with changes
====================

1) modules/contrib/config_normalizer/src/Plugin/ConfigNormalizerManager.php:22

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/config_normalizer/src/Plugin/ConfigNormalizerBase.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/config_normalizer/src/ConfigNormalizer.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The typed config manager to get the schema from.
    *
-   * @var \Drupal\Core\Config\TypedConfigManagerInterface
+   * @var TypedConfigManagerInterface
    */
   protected $typedConfigManager;

@@ @@
   /**
    * ConfigCaster constructor.
    *
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typedConfigManager
+   * @param TypedConfigManagerInterface $typedConfigManager
    *   The typed config manager to look up the schema.
    */
   public function __construct(TypedConfigManagerInterface $typedConfigManager) {
@@ @@
        * @return mixed
        *   The value cast to the type indicated in the schema.
        *
-       * @throws \Drupal\Core\Config\UnsupportedDataTypeConfigException
+       * @throws UnsupportedDataTypeConfigException
        *   If the value is unsupported in configuration.
        */
       protected function castValue2852557($key, $value) {
@@ @@
       /**
        * The constructor for passing the TypedConfigManager.
        *
-       * @param \Drupal\Core\Config\TypedConfigManagerInterface $typedConfigManager
+       * @param TypedConfigManagerInterface $typedConfigManager
        *   The taped config manager.
        */
       public function __construct(TypedConfigManagerInterface $typedConfigManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/config_normalizer/src/Config/NormalizedStorageComparerTrait.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The config normalizer service.
    *
-   * @var \Drupal\config_normalizer\ConfigNormalizerInterface
+   * @var ConfigNormalizerInterface
    */
   protected $configNormalizer;

@@ @@
   /**
    * Creates and returns a storage comparer.
    *
-   * @param \Drupal\Core\Config\StorageInterface $source_storage
+   * @param StorageInterface $source_storage
    *   The source storage.
-   * @param \Drupal\Core\Config\StorageInterface $target_storage
+   * @param StorageInterface $target_storage
    *   The target storage.
    * @param string $mode
    *   (optional, deprecated) The normalization mode.
    *
-   * @return \Drupal\Core\Config\StorageComparer
+   * @return StorageComparer
    *   A storage comparer.
    */
   protected function createStorageComparer(StorageInterface $source_storage, StorageInterface $target_storage, $mode = NULL) {
@@ @@
   /**
    * Gets the normalizer service.
    *
-   * @return \Drupal\config_normalizer\ConfigNormalizerInterface
+   * @return ConfigNormalizerInterface
    *   The configuration normalizer.
    */
   protected function getNormalizer() {
@@ @@
   /**
    * Sets the normalizer manager service to use.
    *
-   * @param \Drupal\config_normalizer\ConfigNormalizerInterface $normalizer
+   * @param ConfigNormalizerInterface $normalizer
    *   The normalizer service.
    *
    * @return $this
@@ @@
   /**
    * Gets the configuration manager service.
    *
-   * @return \Drupal\Core\Config\ConfigManagerInterface
+   * @return ConfigManagerInterface
    *   The configuration manager.
    *
    * @deprecated in config_normalizer:2.0.0-alpha1 and is removed from config_normalizer:2.0.0. No replacement.
@@ @@
   /**
    * Sets the configuration manager service to use.
    *
-   * @param \Drupal\Core\Config\ConfigManagerInterface $config_manager
+   * @param ConfigManagerInterface $config_manager
    *   The configuration manager service.
    *
    * @return $this
@@ @@
   /**
    * Gets the normalizer manager service.
    *
-   * @return \Drupal\config_normalizer\Plugin\ConfigNormalizerManager
+   * @return ConfigNormalizerManager
    *   The normalizer manager.
    *
    * @deprecated in config_normalizer:2.0.0-alpha1 and is removed from config_normalizer:2.0.0. No replacement.
@@ @@
   /**
    * Sets the normalizer manager service to use.
    *
-   * @param \Drupal\config_normalizer\Plugin\ConfigNormalizerManager $normalizer_manager
+   * @param ConfigNormalizerManager $normalizer_manager
    *   The normalizer manager service.
    *
    * @return $this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/config_normalizer/src/Config/NormalizedReadOnlyStorage.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The config item normalizer.
    *
-   * @var \Drupal\config_normalizer\ConfigNormalizerInterface
+   * @var ConfigNormalizerInterface
    */
   protected $normalizer;

@@ @@
   /**
    * Create a NormalizedReadOnlyStorage decorating another storage.
    *
-   * @param \Drupal\Core\Config\StorageInterface $storage
+   * @param StorageInterface $storage
    *   The decorated storage.
-   * @param \Drupal\config_normalizer\ConfigNormalizerInterface|mixed $normalizer
+   * @param ConfigNormalizerInterface|mixed $normalizer
    *   The normalization manager. In 2.0.0 we will add a typehint.
    * @param array $context
    *   (optional, deprecated) This parameter will be removed in 2.0.0.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/config_normalizer/src/Annotation/ConfigNormalizer.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\config_normalizer\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * The description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 6 files have been changed by Rector                                       

