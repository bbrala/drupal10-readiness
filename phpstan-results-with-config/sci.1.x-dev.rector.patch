diff --git a/sci.info.yml b/sci.info.yml
index 09db479..bff761a 100644
--- a/sci.info.yml
+++ b/sci.info.yml
@@ -1,5 +1,5 @@
 name: 'Static Content Iframe'
 type: module
 description: 'Make static content available in iframes'
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'Custom'
diff --git a/src/Entity/StaticContent.php b/src/Entity/StaticContent.php
index 17de774..22f93cb 100644
--- a/src/Entity/StaticContent.php
+++ b/src/Entity/StaticContent.php
@@ -100,7 +100,7 @@ class StaticContent extends ContentEntityBase implements StaticContentInterface
    */
   public function getUrl($real_url = FALSE) {
     $url = $this->get('url')->value;
-    return $real_url ? \file_create_url($url) : $url;
+    return $real_url ? \Drupal::service('file_url_generator')->generateAbsoluteString($url) : $url;
   }
 
   /**
diff --git a/src/StaticContentAccessControlHandler.php b/src/StaticContentAccessControlHandler.php
index aaf1a68..930629d 100644
--- a/src/StaticContentAccessControlHandler.php
+++ b/src/StaticContentAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sci;
 
+use Drupal\sci\Entity\StaticContentInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class StaticContentAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\sci\Entity\StaticContentInterface $entity */
+    /** @var StaticContentInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'view static content entities');
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 2022bf1..241d39c 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sci\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
