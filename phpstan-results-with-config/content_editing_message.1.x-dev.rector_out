modules/contrib/content_editing_message/content_editing_message.module
modules/contrib/content_editing_message/src/ContentEditingMessageInterface.php
modules/contrib/content_editing_message/src/Controller/ContentEditingMessageListBuilder.php
modules/contrib/content_editing_message/src/Entity/ContentEditingMessage.php
modules/contrib/content_editing_message/src/Form/ContentEditingMessageAddForm.php
modules/contrib/content_editing_message/src/Form/ContentEditingMessageDeleteForm.php
modules/contrib/content_editing_message/src/Form/ContentEditingMessageEditForm.php
modules/contrib/content_editing_message/src/Form/ContentEditingMessageFormBase.php
modules/contrib/content_editing_message/tests/src/Functional/CrudFormTest.php
modules/contrib/content_editing_message/tests/src/Unit/ContentEditingMessageTest.php

7 files with changes
====================

1) modules/contrib/content_editing_message/tests/src/Unit/ContentEditingMessageTest.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * Test fixture.
    *
-   * @var \Drupal\content_editing_message\Entity\ContentEditingMessage
+   * @var ContentEditingMessage
    */
   protected $message;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->message = new ContentEditingMessage(static::$data, 'content_editing_message');
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/content_editing_message/tests/src/Functional/CrudFormTest.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->createContentType(['type' => 'article']);
@@ @@
    */
   public function testCanAccessContentMessages() {
     $this->drupalGet('/admin/config/content/messages');
-    $this->assertText('Content Editing Messages');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Content Editing Messages');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/content_editing_message/src/Form/ContentEditingMessageFormBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\content_editing_message\Form;

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\content_editing_message\ContentEditingMessageInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Entity Type Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
@@ @@
     // variables. If this is a new entity, it will be a new object with the
     // class of our entity. Drupal knows which class to call from the
     // annotation on our ContentEditingMessage class.
-    /** @var \Drupal\content_editing_message\ContentEditingMessageInterface $content_editing_message */
+    /** @var ContentEditingMessageInterface $content_editing_message */
     $content_editing_message = $this->entity;

     $form['id'] = [
@@ @@
    *   The entity ID.
    * @param array $element
    *   The form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    */
   public function save(array $form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/content_editing_message/src/Form/ContentEditingMessageEditForm.php:21

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/content_editing_message/src/Form/ContentEditingMessageDeleteForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\content_editing_message\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Entity\EntityConfirmFormBase;
 use Drupal\Core\Url;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
    * forms, this typically takes the form of "Are you sure you want to
    * delete...", including the entity label.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   Translatable markup.
    */
   public function getQuestion() {
@@ @@
    * The confirm text is used as the text in the button that confirms the
    * question posed by getQuestion().
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   Translatable markup.
    */
   public function getConfirmText() {
@@ @@
    * delete forms, this is typically the route that points at the list
    * controller.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The URL to go to if the user cancels the deletion.
    */
   public function getCancelUrl() {
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/content_editing_message/src/Form/ContentEditingMessageAddForm.php:21

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   An associative array containing the current state of the form.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/content_editing_message/src/Controller/ContentEditingMessageListBuilder.php:47

    ---------- begin diff ----------
@@ @@
   /**
    * Builds a row for an entity in the entity listing.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity for which to build the row.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 7 files have been changed by Rector                                       

