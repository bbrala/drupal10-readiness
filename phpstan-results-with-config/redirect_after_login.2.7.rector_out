modules/contrib/redirect_after_login/redirect_after_login.module
modules/contrib/redirect_after_login/src/Form/LoginRedirectionForm.php
modules/contrib/redirect_after_login/tests/src/Functional/AdminTest.php

1 file with changes
===================

1) modules/contrib/redirect_after_login/tests/src/Functional/AdminTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\redirect_after_login\Functional;

+use Drupal\user\RoleInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\user\Entity\Role;
 use Drupal\user\UserInterface;
@@ @@
   /**
    * Account with admin-level privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;

@@ @@
   /**
    * Account with editor-level privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $editorUser;

@@ @@
   /**
    * Account with authenticated-level privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $simpleUser;

@@ @@
   /**
    * Role that grants admin-level privileges.
    *
-   * @var \Drupal\user\RoleInterface
+   * @var RoleInterface
    */
   protected $adminRole;

@@ @@
   /**
    * Role that grants editor-level privileges.
    *
-   * @var \Drupal\user\RoleInterface
+   * @var RoleInterface
    */
   protected $editorRole;

@@ @@

     $this->drupalLogin($this->admin_user);
     $this->drupalGet('admin/people/permissions');
-    $this->assertText('Administer redirect_after_login settings', 'Permission is available in the permissionsn form.');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Administer redirect_after_login settings');
   }

   /**
    * Checks that the given user gets a given status code.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to login as, before loading the admin path.
    * @param int $status_code
    *   HTTP status code that is expected, e.g. 200.
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     // TODO: setup tasks here.
     $this->admin_role = Role::create([
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 1 file has been changed by Rector                                         

