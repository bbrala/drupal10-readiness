diff --git a/composer.json b/composer.json
index 7e63a0a..c9f8db5 100644
--- a/composer.json
+++ b/composer.json
@@ -11,8 +11,8 @@
     ],
     "require": {
         "php": ">=7.2",
-        "drupal/core": "^8.7.7 || ^9",
-        "drupal/purge": "^3.0.0-beta9"
+        "drupal/purge": "^3.0.0-beta9",
+        "drupal/core": "^8.7.7 || ^9 || ^10"
     },
     "extra": {
         "branch-alias": {
diff --git a/purge_queuer_url.info.yml b/purge_queuer_url.info.yml
index ec3e195..9af9f5c 100644
--- a/purge_queuer_url.info.yml
+++ b/purge_queuer_url.info.yml
@@ -1,4 +1,4 @@
-core_version_requirement: '^8.8.6 || ^9.0.0'
+core_version_requirement: ^8.8.6 || ^9.0.0 || ^10
 name: 'URLs queuer'
 type: module
 description: 'Queues URLs or paths to your Purge queue utilizing a traffic database.'
diff --git a/src/Commands/SqlSanitizeCommands.php b/src/Commands/SqlSanitizeCommands.php
index 1c9dcbf..4750bdc 100644
--- a/src/Commands/SqlSanitizeCommands.php
+++ b/src/Commands/SqlSanitizeCommands.php
@@ -18,23 +18,23 @@ class SqlSanitizeCommands extends DrushCommands implements SanitizePluginInterfa
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The traffic registry with the stored URLs and tags.
    *
-   * @var \Drupal\purge_queuer_url\TrafficRegistryInterface
+   * @var TrafficRegistryInterface
    */
   protected $registry;
 
   /**
    * Constructs a SqlSanitizeCommands object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\purge_queuer_url\TrafficRegistryInterface $registry
+   * @param TrafficRegistryInterface $registry
    *   The traffic registry with the stored URLs and tags.
    */
   public function __construct(ModuleHandlerInterface $module_handler, TrafficRegistryInterface $registry) {
diff --git a/src/Form/ConfigurationForm.php b/src/Form/ConfigurationForm.php
index 3dddef2..eb71862 100644
--- a/src/Form/ConfigurationForm.php
+++ b/src/Form/ConfigurationForm.php
@@ -19,16 +19,16 @@ class ConfigurationForm extends QueuerConfigFormBase {
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a ConfigurationForm object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   final public function __construct(ConfigFactoryInterface $config_factory, MessengerInterface $messenger) {
@@ -192,7 +192,7 @@ class ConfigurationForm extends QueuerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addMoreSubmit(array &$form, FormStateInterface $form_state) {
@@ -207,7 +207,7 @@ class ConfigurationForm extends QueuerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function addMoreCallback(array &$form, FormStateInterface $form_state) {
@@ -234,7 +234,7 @@ class ConfigurationForm extends QueuerConfigFormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitFormClear(array &$form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Purge/DiagnosticCheck/RegistryCheck.php b/src/Plugin/Purge/DiagnosticCheck/RegistryCheck.php
index 7fd533c..380a79f 100644
--- a/src/Plugin/Purge/DiagnosticCheck/RegistryCheck.php
+++ b/src/Plugin/Purge/DiagnosticCheck/RegistryCheck.php
@@ -23,14 +23,14 @@ class RegistryCheck extends DiagnosticCheckBase implements DiagnosticCheckInterf
   /**
    * The traffic registry with the stored URLs and tags.
    *
-   * @var \Drupal\purge_queuer_url\TrafficRegistryInterface
+   * @var TrafficRegistryInterface
    */
   protected $registry;
 
   /**
    * Constructs a RegistryCheck object.
    *
-   * @param \Drupal\purge_queuer_url\TrafficRegistryInterface $registry
+   * @param TrafficRegistryInterface $registry
    *   The traffic registry with the stored URLs and tags.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
diff --git a/src/Plugin/Purge/Queuer/UrlAndPathQueuer.php b/src/Plugin/Purge/Queuer/UrlAndPathQueuer.php
index 5675a95..a8aff14 100644
--- a/src/Plugin/Purge/Queuer/UrlAndPathQueuer.php
+++ b/src/Plugin/Purge/Queuer/UrlAndPathQueuer.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\purge_queuer_url\Plugin\Purge\Queuer;
 
+use Drupal\purge\Plugin\Purge\Invalidation\InvalidationsServiceInterface;
+use Drupal\purge\Plugin\Purge\Queue\QueueServiceInterface;
+use Drupal\purge_queuer_url\TrafficRegistryInterface;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\purge\Plugin\Purge\Invalidation\Exception\TypeUnsupportedException;
@@ -26,28 +29,28 @@ class UrlAndPathQueuer implements CacheTagsInvalidatorInterface, ContainerAwareI
   /**
    * Purge's invalidation object factory.
    *
-   * @var null|\Drupal\purge\Plugin\Purge\Invalidation\InvalidationsServiceInterface
+   * @var null|InvalidationsServiceInterface
    */
   protected $purgeInvalidationFactory;
 
   /**
    * Purge's queue service.
    *
-   * @var null|\Drupal\purge\Plugin\Purge\Queue\QueueServiceInterface
+   * @var null|QueueServiceInterface
    */
   protected $purgeQueue;
 
   /**
    * The traffic registry with the stored URLs and tags.
    *
-   * @var null|\Drupal\purge_queuer_url\TrafficRegistryInterface
+   * @var null|TrafficRegistryInterface
    */
   protected $registry;
 
   /**
    * The queuer plugin or FALSE when the plugin is disabled.
    *
-   * @var null|false|\Drupal\purge_queuer_url\Plugin\Purge\Queuer\UrlAndPathQueuerPlugin
+   * @var null|false|UrlAndPathQueuerPlugin
    */
   protected $queuer;
 
diff --git a/src/StackMiddleware/UrlRegistrar.php b/src/StackMiddleware/UrlRegistrar.php
index d1cf691..538033a 100644
--- a/src/StackMiddleware/UrlRegistrar.php
+++ b/src/StackMiddleware/UrlRegistrar.php
@@ -17,14 +17,14 @@ class UrlRegistrar implements HttpKernelInterface {
   /**
    * The wrapped HTTP kernel.
    *
-   * @var \Symfony\Component\HttpKernel\HttpKernelInterface
+   * @var HttpKernelInterface
    */
   protected $httpKernel;
 
   /**
    * The traffic registry with the stored URLs and tags.
    *
-   * @var \Drupal\purge_queuer_url\TrafficRegistryInterface
+   * @var TrafficRegistryInterface
    */
   protected $registry;
 
@@ -59,11 +59,11 @@ class UrlRegistrar implements HttpKernelInterface {
   /**
    * Constructs a UrlRegistrar object.
    *
-   * @param \Symfony\Component\HttpKernel\HttpKernelInterface $http_kernel
+   * @param HttpKernelInterface $http_kernel
    *   The decorated kernel.
-   * @param \Drupal\purge_queuer_url\TrafficRegistryInterface $registry
+   * @param TrafficRegistryInterface $registry
    *   The traffic registry with the stored URLs and tags.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(HttpKernelInterface $http_kernel, TrafficRegistryInterface $registry, ConfigFactoryInterface $config_factory) {
@@ -85,9 +85,9 @@ class UrlRegistrar implements HttpKernelInterface {
   /**
    * Determine what to do with the given response object.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   A Request object.
-   * @param \Symfony\Component\HttpFoundation\Response $response
+   * @param Response $response
    *   A Response object.
    *
    * @return true|false|null
@@ -138,7 +138,7 @@ class UrlRegistrar implements HttpKernelInterface {
   /**
    * Generates the URL or path to register.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   A request object.
    *
    * @return string
@@ -164,7 +164,7 @@ class UrlRegistrar implements HttpKernelInterface {
    * {@inheritdoc}
    */
   public function handle(Request $request, $type = self::MASTER_REQUEST, $catch = TRUE) {
-    /** @var \Symfony\Component\HttpFoundation\Response|\Drupal\Core\Cache\CacheableResponseInterface$response */
+    /** @var Response|CacheableResponseInterface $response */
     $response = $this->httpKernel->handle($request, $type, $catch);
     $what_to_do = $this->determine($request, $response);
     if ($what_to_do === TRUE) {
diff --git a/src/TrafficRegistry.php b/src/TrafficRegistry.php
index 100cf59..e8a7441 100644
--- a/src/TrafficRegistry.php
+++ b/src/TrafficRegistry.php
@@ -14,14 +14,14 @@ class TrafficRegistry extends ServiceProviderBase implements TrafficRegistryInte
   /**
    * The active database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructs a TrafficRegistry object.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The active database connection.
    */
   public function __construct(Connection $connection) {
diff --git a/tests/src/Functional/QueuerConfigFormTest.php b/tests/src/Functional/QueuerConfigFormTest.php
index 3de2124..4db323c 100644
--- a/tests/src/Functional/QueuerConfigFormTest.php
+++ b/tests/src/Functional/QueuerConfigFormTest.php
@@ -49,7 +49,7 @@ class QueuerConfigFormTest extends QueuerConfigFormTestBase {
     $this->assertSession()->checkboxNotChecked('edit-scheme-override');
     $this->assertSession()->fieldExists('edit-scheme');
     $this->assertSession()->fieldValueEquals('edit-scheme', 'http');
-    $this->assertRaw('Clear traffic history');
+    $this->assertSession()->responseContains('Clear traffic history');
     // Test that direct configuration changes are reflected properly.
     $this->config('purge_queuer_url.settings')
       ->set('queue_paths', TRUE)
