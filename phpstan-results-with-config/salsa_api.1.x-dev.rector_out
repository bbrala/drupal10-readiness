modules/contrib/salsa_api/salsa_api.module
modules/contrib/salsa_api/src/Form/SalsaSettingsForm.php
modules/contrib/salsa_api/src/SalsaApi.php
modules/contrib/salsa_api/src/SalsaApiInterface.php
modules/contrib/salsa_api/src/SalsaConnectionException.php
modules/contrib/salsa_api/src/SalsaQueryException.php
modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMock.php
modules/contrib/salsa_api/tests/salsa_api_mock/src/SalsaApiMockServiceProvider.php
modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php
modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php

5 files with changes
====================

1) modules/contrib/salsa_api/tests/src/Unit/SalsaApiTest.php:5

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\salsa_api\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
+use Drupal\salsa_api\SalsaQueryException;
+use Drupal\salsa_api\SalsaConnectionException;
+use PHPUnit\Framework\MockObject\MockBuilder;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Http\ClientFactory;
 use Drupal\Core\Language\Language;
@@ @@
   /**
    * The HTTP client factory.
    *
-   * @var \Drupal\Core\Http\ClientFactory
+   * @var ClientFactory
    */
   protected $clientFactory;

@@ @@
   /**
    * The HTTP client.
    *
-   * @var \GuzzleHttp\Client|\PHPUnit_Framework_MockObject_MockObject
+   * @var Client|MockObject
    */
   protected $client;

@@ @@
   /**
    * The URL Generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var UrlGeneratorInterface|MockObject
    */
   protected $urlGenerator;

@@ @@
   /**
    * The logger channel factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var LoggerChannelFactoryInterface|MockObject
    */
   protected $loggerChannelFactory;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var LanguageManagerInterface|MockObject
    */
   protected $languageManager;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface|\PHPUnit_Framework_MockObject_MockObject
+   * @var TimeInterface|MockObject
    */
   protected $time;

@@ @@

   /**
    * @covers ::getCounts
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Error message
    */
   public function testGetCountsError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Error message');
     $salsa = $this->getSalsaAPI();

     $object = 'OBJECT';
@@ @@

   /**
    * @covers ::getObject
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   There was a problem with your submission, invalid object/key pair.
    */
   public function testGetObjectError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  There was a problem with your submission, invalid object/key pair.');
     $salsa = $this->getSalsaAPI();

     $body_query_error = '<?xml version="1.0"?>
@@ @@

   /**
    * @covers ::getReport
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Unable to retrieve report #KEY. Does it exist?
    */
   public function testGetReportError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Unable to retrieve report #KEY. Does it exist?');
     $salsa = $this->getSalsaAPI();

     $key = 'KEY';
@@ @@

   /**
    * @covers ::describe
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Unable to retrieve schema for table KEY. Does it exist?
    */
   public function testDescribeError() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Unable to retrieve schema for table KEY. Does it exist?');
     $salsa = $this->getSalsaAPI();

     $table = 'KEY';
@@ @@

   /**
    * @covers ::describe2
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
-   *   Unable to retrieve schema for table KEY. Does it exist?
    */
   public function testDescribe2Error() {
+    $this->expectException('Drupal\salsa_api\SalsaQueryException
+  Unable to retrieve schema for table KEY. Does it exist?');
     $salsa = $this->getSalsaAPI();

     $table = 'KEY';
@@ @@

   /**
    * @covers ::save
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
    */
   public function testSaveError() {
+    $this->expectException(SalsaQueryException::class);
     $salsa = $this->getSalsaAPI();

     $object = 'OBJECT';
@@ @@
   /**
    * @covers ::parseXml
    * @covers ::convertObjectToArray
-   *
-   * @expectedException \Drupal\salsa_api\SalsaQueryException
    */
   public function testParseResultError() {
+    $this->expectException(SalsaQueryException::class);
     $salsa = $this->getSalsaAPI();

     $table = 'KEY';
@@ @@

   /**
    * @covers ::connect
-   *
-   * @expectedException \Drupal\salsa_api\SalsaConnectionException
    */
   public function testConnectError() {
+    $this->expectException(SalsaConnectionException::class);
     $salsa = $this->getSalsaAPI();
     $logger_channel = $this->createMock('\Drupal\Core\Logger\LoggerChannelInterface');

@@ @@
   /**
    * Returns a Salsa API instance with the necessary mock objects injected.
    *
-   * @return \Drupal\salsa_api\SalsaApi
+   * @return SalsaApi
    *   Returns a Salsa API instance with the necessary mock objects injected.
    */
   protected function getSalsaAPI() {
@@ @@
   /**
    * Helper function.
    *
-   * @return \PHPUnit_Framework_MockObject_MockBuilder
+   * @return MockBuilder
    *   The config factory.
    */
   protected function getSalsaApiConfigFactory() {
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ExplicitPhpErrorApiRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/salsa_api/tests/src/Functional/SalsaAPISettingsFormSimpleTest.php:82

    ---------- begin diff ----------
@@ @@
       'password' => $this->correctPassword,
       'query_timeout' => $this->queryTimeout,
     );
-    $this->drupalPostForm('admin/config/services/salsa', $edit, 'Save configuration');
-    $this->assertText('The configuration options have been saved.');
+    $this->drupalGet('admin/config/services/salsa');
+    $this->submitForm($edit, 'Save configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('The configuration options have been saved.');
   }

   /**
@@ @@
       'password' => $this->wrongPassword,
       'query_timeout' => $this->queryTimeout,
     );
-    $this->drupalPostForm('admin/config/services/salsa', $edit, 'Save configuration');
-    $this->assertText('Username and/or password incorrect.');
+    $this->drupalGet('admin/config/services/salsa');
+    $this->submitForm($edit, 'Save configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Username and/or password incorrect.');
   }

   /**
@@ @@
       'password' => $this->correctPassword,
       'query_timeout' => $this->queryTimeout,
     );
-    $this->drupalPostForm('admin/config/services/salsa', $edit, 'Save configuration');
-    $this->assertText('This page is not available, please type in a correct URL or try again later.');
+    $this->drupalGet('admin/config/services/salsa');
+    $this->submitForm($edit, 'Save configuration');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('This page is not available, please type in a correct URL or try again later.');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/salsa_api/src/SalsaApiInterface.php:5

    ---------- begin diff ----------
@@ @@

 namespace Drupal\salsa_api;

+use Psr\Http\Message\RequestInterface;
 /**
  * Declare the interface 'SalsaApiInterface'.
  */
@@ @@
    *   The name of the Salsa script to call, e.g. getObject.sjs, followed by a
    *   '?' and POST data to send to Salsa.
    *
-   * @return \Psr\Http\Message\RequestInterface
+   * @return RequestInterface
    *   The returned data from the HTTP request.
    */
   public function getRequest($path);
@@ @@
    * @param string $tag
    *   Tag to be deleted.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function deleteTag($object, $key, $tag);

@@ @@
    * @param array $properties
    *   An array of properties (content disposition key/value pairs).
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function upload($file, $properties);

@@ @@
    * @return int
    *   The count of items matching the given condition.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function getCount($object, array $conditions = array(), $column_count = NULL);

@@ @@
    *   - min: The smallest value in the columnCount in this group of the result
    *     set
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function getCounts($object, array $group_by = array(), array $conditions = array(), $column_count = NULL, array $order_by = array(), $limit = NULL);

@@ @@
    * @return array
    *   Array of objects.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function getLeftJoin($objects, array $conditions = array(), $limit = NULL, array $include = array(), array $order_by = array(), array $group_by = array());

@@ @@
    * @return array
    *   Array containing the Salsa object requested.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function getObject($object, $key);

@@ @@
    * @return array[]
    *   Array of object value arrays.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function getObjects($object, array $conditions = array(), $limit = NULL, array $include = array(), array $order_by = array(), array $group_by = array());

@@ @@
    *   contains an array for each row of the report. Inside the 'row' array is
    *   an associative array containing each column/field and value in that row.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function getReport($key);

@@ @@
    *    - Default: The default value to use if none is supplied
    *    - Extra: Any extra attributes for the column (e.g. auto_increment)
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function describe($table);

@@ @@
    *    - defaultValue: The default value to use if none is supplied
    *    - label: The human-readable name of the field
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function describe2($table);

@@ @@
    * @return int
    *   The key of the updated or newly created object.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function save($object, array $fields = array(), array $links = array());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/salsa_api/src/SalsaApi.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\salsa_api;

+use Drupal\Core\Config\ImmutableConfig;
+use GuzzleHttp\Client;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * URL to the Salsa API service.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The HTTP client to fetch the feed data with.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * The URL Generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;

@@ @@
   /**
    * The logger channel factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\Http\ClientFactory $http_client_factory
+   * @param ClientFactory $http_client_factory
    *   The HTTP client to fetch the feed data with.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The URL Generator.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger channel factory.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ClientFactory $http_client_factory, UrlGeneratorInterface $url_generator, LoggerChannelFactoryInterface $logger_factory, LanguageManagerInterface $language_manager, TimeInterface $time) {
@@ @@
    * @return string
    *   The raw result of the HTTP query if successful.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaQueryException
+   * @throws SalsaConnectionException
    */
   public function query($script, $query) {
     $request = $this->getRequest($script . '?' . $query);
@@ @@
    *   The XML response converted to an array structure or NULL in case of an
    *   error.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
+   * @throws SalsaQueryException
    */
   protected function parseXml($result) {
     if (preg_match("<div class='sjs error'>", $result)) {
@@ @@
    * @return array|null
    *   The JSON response converted to an array structure.
    *
-   * @throws \Drupal\salsa_api\SalsaQueryException
+   * @throws SalsaQueryException
    */
   protected function parseJson($result) {
     $json = Json::decode($result);
@@ @@
    * @return bool
    *   TRUE if the connection was successful.
    *
-   * @throws \Drupal\salsa_api\SalsaConnectionException
+   * @throws SalsaConnectionException
    */
   public function connect() {
     // We already have a connection, just return TRUE.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/salsa_api/salsa_api.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\salsa_api\SalsaApiInterface;
 /**
  * @file
  * Provides an API to allow Drupal to query the Salsa CRM provided by Salsa
@@ @@
  * This module does not provide any visible functionality on its own, it just
  * provides an API that other modules can use to query data in Salsa.
  */
-
 /**
  * Returns an instance of the Salsa API service.
  *
- * @return \Drupal\salsa_api\SalsaApiInterface
+ * @return SalsaApiInterface
  *   Returns Salsa API service.
  */
 function salsa_api() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

