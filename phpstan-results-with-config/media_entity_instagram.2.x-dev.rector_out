modules/contrib/media_entity_instagram/media_entity_instagram.install
modules/contrib/media_entity_instagram/media_entity_instagram.module
modules/contrib/media_entity_instagram/media_entity_instagram.post_update.php
modules/contrib/media_entity_instagram/src/InstagramEmbedFetcher.php
modules/contrib/media_entity_instagram/src/InstagramEmbedFetcherInterface.php
modules/contrib/media_entity_instagram/src/Plugin/Field/FieldFormatter/InstagramEmbedFormatter.php
modules/contrib/media_entity_instagram/src/Plugin/Validation/Constraint/InstagramEmbedCodeConstraint.php
modules/contrib/media_entity_instagram/src/Plugin/Validation/Constraint/InstagramEmbedCodeConstraintValidator.php
modules/contrib/media_entity_instagram/src/Plugin/media/Source/Instagram.php
modules/contrib/media_entity_instagram/tests/src/Functional/InstagramEmbedFormatterTest.php
modules/contrib/media_entity_instagram/tests/src/Unit/ConstraintsTest.php

6 files with changes
====================

1) modules/contrib/media_entity_instagram/tests/src/Unit/ConstraintsTest.php:27

    ---------- begin diff ----------
@@ @@
     $constraint = new InstagramEmbedCodeConstraint();
     $this->assertEquals(addslashes('Not valid Instagram URL/Embed code.'), addslashes($constraint->message), 'Correct constraint message found.');

-    $execution_context = $this->getMockBuilder('\Drupal\Core\TypedData\Validation\ExecutionContext')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $execution_context = $this->createMock('\Drupal\Core\TypedData\Validation\ExecutionContext');

     if ($expected_violation_count) {
       $execution_context->expects($this->exactly($expected_violation_count))
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * GetMockBuilderGetMockToCreateMockRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_entity_instagram/tests/src/Functional/InstagramEmbedFormatterTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\media_entity_instagram\Functional;

+use Drupal\media\MediaTypeInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\media\Traits\MediaTypeCreationTrait;

@@ @@
   /**
    * The test media type.
    *
-   * @var \Drupal\media\MediaTypeInterface
+   * @var MediaTypeInterface
    */
   protected $testBundle;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     \Drupal::configFactory()
       ->getEditable('media.settings')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/media_entity_instagram/src/Plugin/media/Source/Instagram.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The instagram fetcher.
    *
-   * @var \Drupal\media_entity_instagram\InstagramEmbedFetcher
+   * @var InstagramEmbedFetcher
    */
   protected $fetcher;

@@ @@
   /**
    * Guzzle client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   The field type plugin manager service.
-   * @param \Drupal\media_entity_instagram\InstagramEmbedFetcher $fetcher
+   * @param InstagramEmbedFetcher $fetcher
    *   Instagram fetcher service.
-   * @param \GuzzleHttp\Client $httpClient
+   * @param Client $httpClient
    *   Guzzle client.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, ConfigFactoryInterface $config_factory, FieldTypePluginManagerInterface $field_type_manager, InstagramEmbedFetcher $fetcher, Client $httpClient, FileSystemInterface $fileSystem) {
@@ @@
   /**
    * Runs preg_match on embed code/URL.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media object.
    *
    * @return array|bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/media_entity_instagram/src/Plugin/Field/FieldFormatter/InstagramEmbedFormatter.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The instagram fetcher.
    *
-   * @var \Drupal\media_entity_instagram\InstagramEmbedFetcher
+   * @var InstagramEmbedFetcher
    */
   protected $fetcher;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/media_entity_instagram/src/InstagramEmbedFetcher.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The optional cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;

@@ @@
   /**
    * Guzzle client.
    *
-   * @var \GuzzleHttp\Client
+   * @var Client
    */
   protected $httpClient;

@@ @@
   /**
    * Logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
   /**
    * InstagramEmbedFetcher constructor.
    *
-   * @param \GuzzleHttp\Client $client
+   * @param Client $client
    *   A HTTP Client.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $loggerFactory
+   * @param LoggerChannelFactoryInterface $loggerFactory
    *   A logger factory.
-   * @param \Drupal\Core\Cache\CacheBackendInterface|null $cache
+   * @param CacheBackendInterface|null $cache
    *   (optional) A cache bin for storing fetched instagram posts.
    */
   public function __construct(Client $client, LoggerChannelFactoryInterface $loggerFactory, CacheBackendInterface $cache = NULL) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/media_entity_instagram/media_entity_instagram.install:10

    ---------- begin diff ----------
@@ @@
  * Implements hook_install().
  */
 function media_entity_instagram_install() {
-  $source = drupal_get_path('module', 'media_entity_instagram') . '/images/icons';
+  $source = \Drupal::service('extension.list.module')->getPath('media_entity_instagram') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
-  /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+  /** @var FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

