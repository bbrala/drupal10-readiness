modules/contrib/json_template/json_template.install
modules/contrib/json_template/json_template.module
modules/contrib/json_template/src/Plugin/Field/FieldType/ListTemplateItem.php
modules/contrib/json_template/src/Plugin/JsonTemplateDefault.php
modules/contrib/json_template/src/Plugin/JsonTemplateInterface.php
modules/contrib/json_template/src/Plugin/JsonTemplateManager.php
modules/contrib/json_template/src/Plugin/JsonTemplateManagerInterface.php
modules/contrib/json_template/src/Plugin/JsonTransformerDefault.php
modules/contrib/json_template/src/Plugin/JsonTransformerInterface.php
modules/contrib/json_template/src/Plugin/JsonTransformerManager.php
modules/contrib/json_template/src/Plugin/JsonTransformerManagerInterface.php

4 files with changes
====================

1) modules/contrib/json_template/src/Plugin/JsonTransformerManager.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/json_template/src/Plugin/JsonTransformerDefault.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
       return $this->pluginDefinition['transformer'];
     }
     // We need to construct full path.
-    return base_path() . drupal_get_path($this->getProviderType(), $this->pluginDefinition['provider']) . '/' . $this->pluginDefinition['transformer'];
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    return base_path() . \Drupal::service('extension.path.resolver')->getPath($this->getProviderType(), $this->pluginDefinition['provider']) . '/' . $this->pluginDefinition['transformer'];
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/json_template/src/Plugin/JsonTemplateManager.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * Theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/json_template/src/Plugin/JsonTemplateDefault.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\json_template\Plugin;

+use Drupal\Core\Extension\ThemeHandlerInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ @@
   /**
    * Theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Json transformer manager interface.
    *
-   * @var \Drupal\json_template\Plugin\JsonTransformerManagerInterface
+   * @var JsonTransformerManagerInterface
    */
   protected $jsonTransformerManager;

@@ @@
    * {@inheritdoc}
    */
   public function getPath() {
-    return drupal_get_path($this->getProviderType(), $this->pluginDefinition['provider']) . '/' . $this->pluginDefinition['file'];
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    return \Drupal::service('extension.path.resolver')->getPath($this->getProviderType(), $this->pluginDefinition['provider']) . '/' . $this->pluginDefinition['file'];
   }

   /**
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

