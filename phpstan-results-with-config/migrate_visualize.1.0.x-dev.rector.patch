diff --git a/migrate_visualize.theme.inc b/migrate_visualize.theme.inc
index a2b3616..6c24320 100644
--- a/migrate_visualize.theme.inc
+++ b/migrate_visualize.theme.inc
@@ -1,5 +1,8 @@
 <?php
 
+use Fhaculty\Graph\Graph;
+use Fhaculty\Graph\Vertex;
+use Fhaculty\Graph\Edge\Directed;
 /**
  * @file
  * Theme functions for Migrate Visualize.
@@ -41,7 +44,7 @@ function _migrate_visualize_graph_type_attributes() {
  *   Variables array.
  */
 function template_preprocess_migration_visualize_graphviz(array &$variables) {
-  /** @var \Fhaculty\Graph\Graph $graph */
+  /** @var Graph $graph */
   $graph = $variables['graph'];
 
   $graph->setAttribute('graphviz.graph.charset', 'iso-8859-1');
@@ -49,7 +52,7 @@ function template_preprocess_migration_visualize_graphviz(array &$variables) {
 
   $typeAttributes = _migrate_visualize_graph_type_attributes();
 
-  /** @var \Fhaculty\Graph\Vertex $vertex */
+  /** @var Vertex $vertex */
   foreach ($graph->getVertices() as $k => $vertex) {
     if ($type = $vertex->getAttribute('migrate_visualize.type')) {
       $groups = ['source' => 0, 'process' => 1, 'destination' => 2];
@@ -77,7 +80,7 @@ function template_preprocess_migration_visualize_graphviz(array &$variables) {
     'penwidth' => 2,
   ];
 
-  /** @var \Fhaculty\Graph\Edge\Directed $edge */
+  /** @var Directed $edge */
   foreach ($graph->getEdges() as $k => $edge) {
     $edge->setAttribute('graphviz.color', $k % 6 + 2);
     foreach ($graphvizAttributes as $name => $value) {
@@ -101,7 +104,7 @@ function template_preprocess_migration_visualize_graphviz(array &$variables) {
 
   // @todo Find a way to set the group titles!
   // $graph->getGroup(0)->setAttribute('graphviz.title', 'Source')
-  /** @var \Graphp\GraphViz\GraphViz $graphViz */
+  /** @var GraphViz $graphViz */
   try {
     $graphViz = new GraphViz();
     $graphViz->setFormat('svg');
@@ -126,10 +129,10 @@ function template_preprocess_migration_visualize_graphviz(array &$variables) {
  *   Variables array.
  */
 function template_preprocess_migration_visualize_mermaid(array &$variables) {
-  /** @var \Fhaculty\Graph\Graph $graph */
+  /** @var Graph $graph */
   $graph = $variables['graph'];
 
-  /** @var \Fhaculty\Graph\Vertex $vertex */
+  /** @var Vertex $vertex */
   foreach ($graph->getVertices() as $k => $vertex) {
     if ($type = $vertex->getAttribute('migrate_visualize.type')) {
       $groups = ['source' => 0, 'process' => 1, 'destination' => 2];
@@ -164,7 +167,7 @@ function template_preprocess_migration_visualize_mermaid(array &$variables) {
     'destination:field' => ['color' => 'goldenrod3'],
   ];
 
-  /** @var \Fhaculty\Graph\Edge\Directed $edge */
+  /** @var Directed $edge */
   foreach ($graph->getEdges() as $k => $edge) {
     $edge->setAttribute('graphviz.colorscheme', 'oranges9');
     $edge->setAttribute('graphviz.color', $k % 6 + 2);
diff --git a/src/Controller/ListingController.php b/src/Controller/ListingController.php
index f098eed..bb2e6cb 100644
--- a/src/Controller/ListingController.php
+++ b/src/Controller/ListingController.php
@@ -17,23 +17,23 @@ class ListingController extends ControllerBase {
   /**
    * The migration plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface
+   * @var MigrationPluginManagerInterface
    */
   protected $migrationPluginManager;
 
   /**
    * Drupal\Core\Extension\ModuleHandler definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migration_plugin_manager
+   * @param MigrationPluginManagerInterface $migration_plugin_manager
    *   The migration plugin manager.
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   The module handler service.
    */
   public function __construct(MigrationPluginManagerInterface $migration_plugin_manager, ModuleHandler $module_handler) {
diff --git a/src/Controller/VisualizeController.php b/src/Controller/VisualizeController.php
index ac1622a..94440f0 100644
--- a/src/Controller/VisualizeController.php
+++ b/src/Controller/VisualizeController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\migrate_visualize\Controller;
 
+use Fhaculty\Graph\Graph;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\migrate\Plugin\MigrationPluginManagerInterface;
 use Drupal\migrate_visualize\MigrateGraph;
@@ -16,23 +17,23 @@ class VisualizeController extends ControllerBase {
   /**
    * The migration plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface
+   * @var MigrationPluginManagerInterface
    */
   protected $migrationPluginManager;
 
   /**
    * The migration graph service.
    *
-   * @var \Drupal\migrate_visualize\MigrateGraph
+   * @var MigrateGraph
    */
   protected $migrationGraph;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migration_plugin_manager
+   * @param MigrationPluginManagerInterface $migration_plugin_manager
    *   The migration plugin manager.
-   * @param Drupal\migrate_visualize\MigrateGraph $migrate_graph
+   * @param MigrateGraph $migrate_graph
    *   The migration graph service.
    */
   public function __construct(MigrationPluginManagerInterface $migration_plugin_manager, MigrateGraph $migrate_graph) {
@@ -87,7 +88,7 @@ class VisualizeController extends ControllerBase {
       '#weight' => 110,
     ];
 
-    /** @var \Fhaculty\Graph\Graph $build['visualize']['#graph'] */
+    /** @var Graph $build ['visualize']['#graph'] */
     $build['visualize']['#graph'] = $this->migrationGraph->getGraph();
 
     switch ($this->config('migrate_visualize.settings')->get('display_mode')) {
diff --git a/src/Form/VisualizeMigrationSwitcherForm.php b/src/Form/VisualizeMigrationSwitcherForm.php
index 9fb6bc9..519ef8e 100644
--- a/src/Form/VisualizeMigrationSwitcherForm.php
+++ b/src/Form/VisualizeMigrationSwitcherForm.php
@@ -17,32 +17,32 @@ class VisualizeMigrationSwitcherForm extends FormBase {
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;
 
   /**
    * The migration plugin manager.
    *
-   * @var \Drupal\migrate\Plugin\MigrationPluginManagerInterface
+   * @var MigrationPluginManagerInterface
    */
   protected $migrationPluginManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
    * The form constructor.
    *
-   * @param \Drupal\migrate\Plugin\MigrationPluginManagerInterface $migration_plugin_manager
+   * @param MigrationPluginManagerInterface $migration_plugin_manager
    *   The migration plugin manager.
-   * @param \Drupal\Core\Extension\ModuleHandler $module_handler
+   * @param ModuleHandler $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Routing\CurrentRouteMatch $current_route_match
+   * @param CurrentRouteMatch $current_route_match
    *   The route matcher.
    */
   public function __construct(MigrationPluginManagerInterface $migration_plugin_manager, ModuleHandler $module_handler, CurrentRouteMatch $current_route_match) {
diff --git a/src/MigrateGraph.php b/src/MigrateGraph.php
index 963bcc6..dcd43aa 100644
--- a/src/MigrateGraph.php
+++ b/src/MigrateGraph.php
@@ -20,21 +20,21 @@ class MigrateGraph {
   /**
    * The migration to be graphed.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    */
   protected MigrationInterface $migration;
 
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected EntityFieldManagerInterface $entityFieldManager;
 
   /**
    * Graph which captures our analysis of the Migration.
    *
-   * @var \Fhaculty\Graph\Graph
+   * @var Graph
    */
   protected Graph $graph;
 
@@ -50,9 +50,9 @@ class MigrateGraph {
   /**
    * Construct a new MigrationGraph object.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, TranslationInterface $string_translation) {
@@ -64,7 +64,7 @@ class MigrateGraph {
   /**
    * Set the migration to be graphed.
    *
-   * @var \Drupal\migrate\Plugin\MigrationInterface
+   * @var MigrationInterface
    *   The migration to graph.
    */
   public function setMigration(MigrationInterface $migration) {
@@ -74,7 +74,7 @@ class MigrateGraph {
   /**
    * Retrieve the analysis.
    *
-   * @return \Fhaculty\Graph\Graph
+   * @return Graph
    *   The generated graph.
    */
   public function getGraph() {
@@ -108,7 +108,7 @@ class MigrateGraph {
   /**
    * Graph a migration.
    *
-   * @param \Drupal\migrate\Plugin\MigrationInterface $migration
+   * @param MigrationInterface $migration
    *   The migration under inspection.
    *
    * @throws \Exception
@@ -234,7 +234,7 @@ class MigrateGraph {
    */
   protected function graphPipeline($pipeline) : void {
     $graph = $this->getGraph();
-    /** @var \Drupal\migrate\Plugin\MigrateProcessInterface[] $plugins */
+    /** @var MigrateProcessInterface[] $plugins */
     foreach ($pipeline as $destinationPropertyName => $plugins) {
       $processVertexId = "process:field:{$destinationPropertyName}";
       $processVertex = $graph->createVertex($processVertexId);
@@ -270,9 +270,9 @@ class MigrateGraph {
    *
    * @param \string $destinationPropertyName
    *   The calculated destination property name for this plugin in the process.
-   * @param \Drupal\migrate\Plugin\MigrateProcessInterface $plugin
+   * @param MigrateProcessInterface $plugin
    *   The configured process plugin.
-   * @param \Fhaculty\Graph\Vertex $destinationVertex
+   * @param Vertex $destinationVertex
    *   The vertex associated with this process's destination.
    * @param \int $pipelineStepId
    *   The array ID of this plugin in its pipeline.
@@ -351,7 +351,7 @@ class MigrateGraph {
   /**
    * Generate a label for a process pipeline step.
    *
-   * @param \Drupal\migrate\Plugin\MigrateProcessInterface $processPlugin
+   * @param MigrateProcessInterface $processPlugin
    *   The configured process plugin.
    * @param \array $configuration
    *   The extracted configuration of the plugin.
diff --git a/tests/src/Functional/ListingControllerTest.php b/tests/src/Functional/ListingControllerTest.php
index ce6cc85..875e2ab 100644
--- a/tests/src/Functional/ListingControllerTest.php
+++ b/tests/src/Functional/ListingControllerTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\migrate_visualize\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityStorageException;
+use Behat\Mink\Exception\ResponseTextException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -33,21 +36,21 @@ class ListingControllerTest extends BrowserTestBase {
   /**
    * A user with access.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $trustedUser;
 
   /**
    * An untrusted user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $untrustedUser;
 
   /**
    * Perform initial setup tasks that run before every test method.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function setUp() : void {
     parent::setUp();
@@ -73,7 +76,7 @@ class ListingControllerTest extends BrowserTestBase {
   /**
    * Tests the listing controller.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ResponseTextException
    */
   public function testListingController() {
     // Login.
diff --git a/tests/src/Functional/SettingsFormTest.php b/tests/src/Functional/SettingsFormTest.php
index ba2b4e6..feaa5c5 100644
--- a/tests/src/Functional/SettingsFormTest.php
+++ b/tests/src/Functional/SettingsFormTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\migrate_visualize\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityStorageException;
+use Behat\Mink\Exception\ResponseTextException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -29,21 +32,21 @@ class SettingsFormTest extends BrowserTestBase {
   /**
    * A user with access.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $trustedUser;
 
   /**
    * An untrusted user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $untrustedUser;
 
   /**
    * Perform initial setup tasks that run before every test method.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function setUp() : void {
     parent::setUp();
@@ -73,7 +76,7 @@ class SettingsFormTest extends BrowserTestBase {
    * support is not detected. In some environments, the only valid form value
    * for display_mode may be "mermaidjs".
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ResponseTextException
    */
   public function testSettingsForm() {
     // Login.
diff --git a/tests/src/Functional/VisualizeControllerTest.php b/tests/src/Functional/VisualizeControllerTest.php
index 0f69a1f..1404d20 100644
--- a/tests/src/Functional/VisualizeControllerTest.php
+++ b/tests/src/Functional/VisualizeControllerTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\migrate_visualize\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\Core\Entity\EntityStorageException;
+use Behat\Mink\Exception\ResponseTextException;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -32,21 +35,21 @@ class VisualizeControllerTest extends BrowserTestBase {
   /**
    * A user with access.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $trustedUser;
 
   /**
    * An untrusted user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $untrustedUser;
 
   /**
    * Perform initial setup tasks that run before every test method.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function setUp() : void {
     parent::setUp();
@@ -72,7 +75,7 @@ class VisualizeControllerTest extends BrowserTestBase {
   /**
    * Tests the listing controller.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
+   * @throws ResponseTextException
    */
   public function testVisualizeController() {
     // Login.
