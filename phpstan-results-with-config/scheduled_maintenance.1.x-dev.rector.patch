diff --git a/composer.json b/composer.json
index 7c8ca42..e815063 100644
--- a/composer.json
+++ b/composer.json
@@ -21,6 +21,6 @@
         "source": "https://git.drupalcode.org/project/scheduled_maintenance"
     },
     "require": {
-        "drupal/core": "^8.8 || ^9"
+        "drupal/core": "^8.8 || ^9 || ^10"
     }
 }
diff --git a/scheduled_maintenance.info.yml b/scheduled_maintenance.info.yml
index 0b6c3b4..7988694 100644
--- a/scheduled_maintenance.info.yml
+++ b/scheduled_maintenance.info.yml
@@ -2,7 +2,7 @@ name: Scheduled Maintenance
 description: Allows users to schedule and put site into maintenance mode.
 package: Administration
 type: module
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 configure: system.site_maintenance_mode
 dependencies:
   - drupal:datetime
diff --git a/scheduled_maintenance.module b/scheduled_maintenance.module
index 69749c6..300e35d 100644
--- a/scheduled_maintenance.module
+++ b/scheduled_maintenance.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\scheduled_maintenance\ScheduledMaintenance;
 /**
  * @file
  * Allow users to define a scheduled maintenance.
@@ -12,7 +13,7 @@ use Drupal\Core\Datetime\DrupalDateTime;
  * Implements hook_form_FORM_ID_alter().
  */
 function scheduled_maintenance_form_system_site_maintenance_mode_alter(&$form, FormStateInterface $form_state, $form_id) {
-  /** @var \Drupal\scheduled_maintenance\ScheduledMaintenance $service */
+  /** @var ScheduledMaintenance $service */
   $service = \Drupal::service('scheduled_maintenance');
   $config = $service->getConfig();
 
@@ -85,17 +86,17 @@ function scheduled_maintenance_form_system_site_maintenance_mode_alter(&$form, F
  *
  * @param array $form
  *   The form.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  */
 function scheduled_maintenance_form_submit(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\scheduled_maintenance\ScheduledMaintenance $service */
+  /** @var ScheduledMaintenance $service */
   $service = \Drupal::service('scheduled_maintenance');
   $config = $service->getConfig();
 
   $time = '';
   if (!empty($form_state->getValue('time')) && $form_state->getValue('time') instanceof DrupalDateTime) {
-    /** @var \Drupal\Core\Datetime\DrupalDateTime $date_time */
+    /** @var DrupalDateTime $date_time */
     $date_time = $form_state->getValue('time');
     $time = $date_time->format($service->getDefaultDateFormat());
   }
diff --git a/src/EventSubscriber/ScheduledMaintenanceSubscriber.php b/src/EventSubscriber/ScheduledMaintenanceSubscriber.php
index d8049bc..b271f03 100644
--- a/src/EventSubscriber/ScheduledMaintenanceSubscriber.php
+++ b/src/EventSubscriber/ScheduledMaintenanceSubscriber.php
@@ -20,32 +20,32 @@ class ScheduledMaintenanceSubscriber implements EventSubscriberInterface {
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The scheduled maintenance service.
    *
-   * @var \Drupal\scheduled_maintenance\ScheduledMaintenance
+   * @var ScheduledMaintenance
    */
   protected $scheduledMaintenance;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   The state service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\scheduled_maintenance\ScheduledMaintenance $scheduled_maintenance
+   * @param ScheduledMaintenance $scheduled_maintenance
    *   The scheduled maintenance service.
    */
   public function __construct(
@@ -69,7 +69,7 @@ class ScheduledMaintenanceSubscriber implements EventSubscriberInterface {
   /**
    * Checks if a scheduled maintenance should be started.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent|\Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent|RequestEvent $event
    *   The request event.
    */
   public function checkForScheduledMaintenance($event) {
diff --git a/src/ScheduledMaintenance.php b/src/ScheduledMaintenance.php
index bfe3264..e088d65 100644
--- a/src/ScheduledMaintenance.php
+++ b/src/ScheduledMaintenance.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\scheduled_maintenance;
 
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -16,23 +18,23 @@ class ScheduledMaintenance {
   /**
    * The config factory object.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * The current user service.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory object.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user object.
    */
   public function __construct(ConfigFactory $config_factory, AccountProxyInterface $current_user) {
@@ -43,7 +45,7 @@ class ScheduledMaintenance {
   /**
    * Get configuration.
    *
-   * @return \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @return Config|ImmutableConfig
    *   Returns the config.
    */
   public function getConfig() {
diff --git a/tests/src/Functional/MaintenanceModeTest.php b/tests/src/Functional/MaintenanceModeTest.php
index f446ca8..b7839ab 100644
--- a/tests/src/Functional/MaintenanceModeTest.php
+++ b/tests/src/Functional/MaintenanceModeTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\scheduled_maintenance\Functional;
 
+use Drupal\User\UserInterface;
+use Behat\Mink\Exception\ResponseTextException;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -30,7 +33,7 @@ class MaintenanceModeTest extends BrowserTestBase {
   /**
    * The test admin user.
    *
-   * @var \Drupal\User\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -60,8 +63,8 @@ class MaintenanceModeTest extends BrowserTestBase {
   /**
    * Test scheduled maintenance mode.
    *
-   * @throws \Behat\Mink\Exception\ResponseTextException
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ResponseTextException
+   * @throws ExpectationException
    */
   public function testMaintenanceMode() {
     $admin_message = 'Operating in maintenance mode. Go online.';
diff --git a/tests/src/Functional/SettingsFormTest.php b/tests/src/Functional/SettingsFormTest.php
index 85eb206..991e8a0 100644
--- a/tests/src/Functional/SettingsFormTest.php
+++ b/tests/src/Functional/SettingsFormTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\scheduled_maintenance\Functional;
 
+use Drupal\User\UserInterface;
+use Behat\Mink\Exception\ExpectationException;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -29,7 +31,7 @@ class SettingsFormTest extends BrowserTestBase {
   /**
    * The test admin user.
    *
-   * @var \Drupal\User\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
@@ -53,7 +55,7 @@ class SettingsFormTest extends BrowserTestBase {
   /**
    * Test the settings form and confirm fields.
    *
-   * @throws \Behat\Mink\Exception\ExpectationException
+   * @throws ExpectationException
    */
   public function testSettingsForm() {
     // Check and make sure settings page loads.
