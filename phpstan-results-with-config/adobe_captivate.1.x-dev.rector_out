modules/contrib/adobe_captivate/adobe_captivate.api.php
modules/contrib/adobe_captivate/adobe_captivate.module
modules/contrib/adobe_captivate/src/Plugin/Field/FieldFormatter/AdobeCaptivateFormatter.php
modules/contrib/adobe_captivate/src/Plugin/Field/FieldFormatter/AdobeCaptivateUrlFormatter.php
modules/contrib/adobe_captivate/src/Plugin/Field/FieldType/AdobeCaptivateFileItem.php
modules/contrib/adobe_captivate/src/Plugin/Field/FieldType/AdobeCaptivateUrlItem.php
modules/contrib/adobe_captivate/src/Plugin/Field/FieldWidget/AdobeCaptivateFileWidget.php
modules/contrib/adobe_captivate/src/Plugin/Field/FieldWidget/AdobeCaptivateUrlWidget.php
modules/contrib/adobe_captivate/tests/src/Functional/AdobeCaptivateTest.php

4 files with changes
====================

1) modules/contrib/adobe_captivate/tests/src/Functional/AdobeCaptivateTest.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create Basic page and Article node types.
@@ @@

     // Display creation form.
     $this->drupalGet('node/add/page');
-    $this->assertFieldByName("{$field_name}[0][adobe_captivate_url]", '', t('Adobe Captivate input field is displayed'));
+    $this->assertSession()->fieldValueEquals("{$field_name}[0][adobe_captivate_url]", '');

     // Verify that a valid URL can be submitted.
     $value = 'http://example.com/foobar/index.html';
@@ @@
       "title[0][value]" => 'Test',
       "{$field_name}[0][adobe_captivate_url]" => $value,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
+    $this->submitForm($edit, t('Save'));
     preg_match('|/node/(\d+)|', $this->getUrl(), $match);
-    $this->assertText(t('Basic page Test has been created.'));
-    $this->assertRaw($value);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Basic page Test has been created.'));
+    $this->assertSession()->responseContains($value);

     // Verify that the Adobe Captivate is displayed.
     $pattern = '<iframe.*src="' . $value;
     $pattern = '@' . $pattern . '@s';
-    $this->assertPattern($pattern);
+    $this->assertSession()->responseMatches($pattern);

     // Verify that invalid URLs cannot be submitted.
     // In this case we're checking that it can't end with index.htm.
@@ @@
       "title[0][value]" => 'Test1',
       "{$field_name}[0][adobe_captivate_url]" => $incorrect_value,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Save'));
-    $this->assertText(t('Enter the Adobe Captivate URL. Valid URL format is: https://www.example.com/bar/index.html (must end with index.html).'));
+    $this->submitForm($edit, t('Save'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains(t('Enter the Adobe Captivate URL. Valid URL format is: https://www.example.com/bar/index.html (must end with index.html).'));

     // Change to Adobe Captivate URL formatter.
     \Drupal::entityTypeManager()->getStorage('entity_view_display')->load('node.page.default')
@@ @@
     $this->drupalGet('node/1');
     $pattern = '<a.*href="' . $value . '".*class="adobe-captivate-url">.*</a>';
     $pattern = '@' . $pattern . '@s';
-    $this->assertPattern($pattern);
+    $this->assertSession()->responseMatches($pattern);
   }

   /**
@@ @@

     // Display creation form.
     $this->drupalGet('node/add/page');
-    $this->assertFieldByName('files[' . $field_name . '_0]', '', t('Adobe Captivate input field is displayed'));
+    $this->assertSession()->fieldValueEquals('files[' . $field_name . '_0]', '');

     // Verify that file can be submitted and node saved.
     $adobe_captivate_path = \Drupal::service('module_handler')->getModule('adobe_captivate')->getPath();
@@ @@
       'title[0][value]' => 'Test',
       'files[' . $field_name . '_0]' => $test_zip_path,
     ];
-    $this->drupalPostForm(NULL, $edit, t('Upload'));
-    $this->drupalPostForm(NULL, [], t('Save'));
+    $this->submitForm($edit, t('Upload'));
+    $this->submitForm([], t('Save'));

     // Don't know how to find the Simpletest baseurl so generating partial url.
     // @todo. Should be possible after https://www.drupal.org/project/drupal/issues/471970.
@@ @@
     $this->drupalGet('node/1');
     $pattern = '<iframe.*src=".*' . $iframe_src_partial . '"';
     $pattern = '@' . $pattern . '@s';
-    $this->assertPattern($pattern);
+    $this->assertSession()->responseMatches($pattern);

   }
    ----------- end diff -----------

Applied rules:
 * AssertFieldByNameRector
 * AssertPatternRector
 * AssertRawRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/adobe_captivate/src/Plugin/Field/FieldWidget/AdobeCaptivateFileWidget.php:112

    ---------- begin diff ----------
@@ @@
    * schema, because we can't view the extacted html files from private file
    * system.
    *
-   * @param Drupal\file\Entity\File $file
+   * @param File $file
    *   File entity.
    * @param bool $create
    *   (optional) Whether to attempt to create the directory if it does not
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/adobe_captivate/src/Plugin/Field/FieldFormatter/AdobeCaptivateUrlFormatter.php:93

    ---------- begin diff ----------
@@ @@
         }

         if ($uri !== '') {
-          $url = Url::fromUri(file_create_url($uri));
+          $url = \Drupal::service('file_url_generator')->generate($uri);
         }
       }
       elseif ($item->getPluginId() === 'field_item:adobe_captivate_url') {
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/adobe_captivate/src/Plugin/Field/FieldFormatter/AdobeCaptivateFormatter.php:108

    ---------- begin diff ----------
@@ @@

         // Change URI to URL.
         if ($adobe_captivate_url !== '') {
-          $adobe_captivate_url = file_create_url($adobe_captivate_url);
+          $adobe_captivate_url = \Drupal::service('file_url_generator')->generateAbsoluteString($adobe_captivate_url);
         }
       }
       elseif ($item->getPluginId() === 'field_item:adobe_captivate_url') {
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 4 files have been changed by Rector                                       

