diff --git a/modules/update_helper_checklist/src/Events/CommandGcuSubscriber.php b/modules/update_helper_checklist/src/Events/CommandGcuSubscriber.php
index ee2fc1c..4d30f81 100644
--- a/modules/update_helper_checklist/src/Events/CommandGcuSubscriber.php
+++ b/modules/update_helper_checklist/src/Events/CommandGcuSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper_checklist\Events;
 
+use Drupal\Core\Extension\ModuleHandler;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\update_helper\Events\CommandExecuteEvent;
 use Drupal\update_helper\Events\UpdateHelperEvents;
@@ -48,23 +49,23 @@ class CommandGcuSubscriber implements EventSubscriberInterface {
   /**
    * Update checklist service.
    *
-   * @var \Drupal\update_helper_checklist\UpdateChecklist
+   * @var UpdateChecklist
    */
   protected $updateChecklist;
 
   /**
    * Drupal\Core\Extension\ModuleHandler definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
    * CommandGcuSubscriber constructor.
    *
-   * @param \Drupal\update_helper_checklist\UpdateChecklist $update_checklist
+   * @param UpdateChecklist $update_checklist
    *   Update checklist service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(UpdateChecklist $update_checklist, ModuleHandlerInterface $module_handler) {
@@ -89,7 +90,7 @@ class CommandGcuSubscriber implements EventSubscriberInterface {
   /**
    * Handle on interactive mode for getting command options.
    *
-   * @param \Drupal\update_helper\Events\CommandInteractEvent $interact_event
+   * @param CommandInteractEvent $interact_event
    *   Event.
    */
   public function onInteract(CommandInteractEvent $interact_event) {
@@ -107,7 +108,7 @@ class CommandGcuSubscriber implements EventSubscriberInterface {
   /**
    * Handles configuration update generation.
    *
-   * @param \Drupal\update_helper\Events\CommandExecuteEvent $execute_event
+   * @param CommandExecuteEvent $execute_event
    *   Event.
    */
   public function onExecute(CommandExecuteEvent $execute_event) {
diff --git a/modules/update_helper_checklist/src/Events/ConfigurationUpdateSubscriber.php b/modules/update_helper_checklist/src/Events/ConfigurationUpdateSubscriber.php
index 7f78678..f88ec37 100644
--- a/modules/update_helper_checklist/src/Events/ConfigurationUpdateSubscriber.php
+++ b/modules/update_helper_checklist/src/Events/ConfigurationUpdateSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper_checklist\Events;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\update_helper\Events\ConfigurationUpdateEvent;
 use Drupal\update_helper\Events\UpdateHelperEvents;
 use Drupal\update_helper_checklist\UpdateChecklist;
@@ -17,14 +18,14 @@ class ConfigurationUpdateSubscriber implements EventSubscriberInterface {
   /**
    * Update checklist service.
    *
-   * @var \Drupal\update_helper_checklist\UpdateChecklist
+   * @var UpdateChecklist
    */
   protected $updateChecklist;
 
   /**
    * ConfigurationUpdateSubscriber constructor.
    *
-   * @param \Drupal\update_helper_checklist\UpdateChecklist $update_checklist
+   * @param UpdateChecklist $update_checklist
    *   Update checklist service.
    */
   public function __construct(UpdateChecklist $update_checklist) {
@@ -45,10 +46,10 @@ class ConfigurationUpdateSubscriber implements EventSubscriberInterface {
   /**
    * Handles on configuration update event.
    *
-   * @param \Drupal\update_helper\Events\ConfigurationUpdateEvent $event
+   * @param ConfigurationUpdateEvent $event
    *   Configuration update event.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function onConfigurationUpdate(ConfigurationUpdateEvent $event) {
     if ($event->isSuccessful()) {
diff --git a/modules/update_helper_checklist/src/UpdateChecklist.php b/modules/update_helper_checklist/src/UpdateChecklist.php
index 21c015a..b0e1809 100644
--- a/modules/update_helper_checklist/src/UpdateChecklist.php
+++ b/modules/update_helper_checklist/src/UpdateChecklist.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper_checklist;
 
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\checklistapi\Storage\StateStorage;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -34,14 +35,14 @@ class UpdateChecklist {
   /**
    * Module installer service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The account object.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
@@ -57,9 +58,9 @@ class UpdateChecklist {
    *
    * @param \Drupal\checklistapi\Storage\StateStorage $stateStorage
    *   The check list state storage service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Module handler service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user.
    */
   public function __construct(StateStorage $stateStorage, ModuleHandlerInterface $moduleHandler, AccountInterface $account) {
@@ -90,7 +91,7 @@ class UpdateChecklist {
    * @param bool $checkListPoints
    *   Indicates the corresponding checkbox should be checked.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function markUpdatesSuccessful(array $module_updates, $checkListPoints = TRUE) {
     $update_ids = $this->getFlatChecklistKeys($module_updates);
@@ -108,7 +109,7 @@ class UpdateChecklist {
    * @param array $module_updates
    *   Array of update ids per module.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function markUpdatesFailed(array $module_updates) {
     $update_ids = $this->getFlatChecklistKeys($module_updates);
@@ -122,7 +123,7 @@ class UpdateChecklist {
    * @param bool $status
    *   Checkboxes enabled or disabled.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function markAllUpdates($status = TRUE) {
     $update_ids = [];
@@ -146,7 +147,7 @@ class UpdateChecklist {
    * @param bool $status
    *   Status that should be set.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setSuccessfulByHook(array $update_ids, $status = TRUE) {
     foreach ($update_ids as $update_id) {
diff --git a/modules/update_helper_checklist/tests/src/Kernel/UpdateChecklistTest.php b/modules/update_helper_checklist/tests/src/Kernel/UpdateChecklistTest.php
index 5fcd6e2..2901ba6 100644
--- a/modules/update_helper_checklist/tests/src/Kernel/UpdateChecklistTest.php
+++ b/modules/update_helper_checklist/tests/src/Kernel/UpdateChecklistTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\update_helper_checklist\Kernel;
 
+use Drupal\update_helper_checklist\UpdateChecklist;
+use Drupal\Core\KeyValueStore\KeyValueFactoryInterface;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\update_helper_checklist\Entity\Update;
 
@@ -33,7 +35,7 @@ class UpdateChecklistTest extends KernelTestBase {
   /**
    * Install entity schema for Update entity.
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('update_helper_checklist_update');
@@ -42,7 +44,7 @@ class UpdateChecklistTest extends KernelTestBase {
   /**
    * Get update checklist service.
    *
-   * @return \Drupal\update_helper_checklist\UpdateChecklist
+   * @return UpdateChecklist
    *   Returns update checklist service.
    */
   protected function getUpdateChecklist() {
@@ -85,7 +87,7 @@ class UpdateChecklistTest extends KernelTestBase {
 
     $this->assertEquals($expected_all_saved_ids, array_keys($all_saved));
 
-    /** @var \Drupal\Core\KeyValueStore\KeyValueFactoryInterface $key_value_factory */
+    /** @var KeyValueFactoryInterface $key_value_factory */
     $key_value_factory = $this->container->get('keyvalue');
 
     $state = $key_value_factory->get('state')->get('checklistapi.progress.update_helper_checklist');
diff --git a/modules/update_helper_checklist/update_helper_checklist.install b/modules/update_helper_checklist/update_helper_checklist.install
index 0cbd84d..ebcc37b 100644
--- a/modules/update_helper_checklist/update_helper_checklist.install
+++ b/modules/update_helper_checklist/update_helper_checklist.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\update_helper_checklist\UpdateChecklist;
 /**
  * @file
  * Install and update hooks for update_helper_checklist module.
@@ -9,7 +10,7 @@
  * Installation hoot for update helper checklist module.
  */
 function update_helper_checklist_install() {
-  /** @var \Drupal\update_helper_checklist\UpdateChecklist $checkList */
+  /** @var UpdateChecklist $checkList */
   $checkList = \Drupal::service('update_helper_checklist.update_checklist');
 
   // Mark all updates as successful on install.
diff --git a/modules/update_helper_checklist/update_helper_checklist.module b/modules/update_helper_checklist/update_helper_checklist.module
index 40d7e23..114c484 100644
--- a/modules/update_helper_checklist/update_helper_checklist.module
+++ b/modules/update_helper_checklist/update_helper_checklist.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ModuleHandler;
 /**
  * @file
  * Update helper checklist hooks.
@@ -38,7 +39,7 @@ function update_helper_checklist_checklistapi_checklist_info() {
  *   Return the items for the update_helper_checklist list.
  */
 function _update_helper_checklist_checklistapi_checklist_items() {
-  /** @var \Drupal\Core\Extension\ModuleHandler $module_handler */
+  /** @var ModuleHandler $module_handler */
   $module_handler = \Drupal::service('module_handler');
 
   $module_directories = $module_handler->getModuleDirectories();
@@ -106,7 +107,7 @@ function _update_helper_checklist_checklistapi_checklist_items() {
  *   List of installed modules.
  */
 function update_helper_checklist_modules_installed(array $modules) {
-  /** @var \Drupal\Core\Extension\ModuleHandler $module_handler */
+  /** @var ModuleHandler $module_handler */
   $module_handler = \Drupal::service('module_handler');
 
   $modules_checklist = [];
diff --git a/phpstan.neon b/phpstan.neon
index 3444557..e6d9b24 100644
--- a/phpstan.neon
+++ b/phpstan.neon
@@ -8,7 +8,7 @@ parameters:
     - '#Missing cache backend declaration for performance.#'
     - '#Plugin manager has cache backend specified but does not declare cache tags.#'
     #TODO: Remove when https://www.drupal.org/project/drupal/issues/3055198 is fixed.
-    - '#Class [a-zA-Z0-9\\_]+ extends deprecated class Symfony\\Component\\EventDispatcher\\Event:\ssince Symfony 4\.3, use "Symfony\\Contracts\\EventDispatcher\\Event" instead#'
+    - '#Class [a-zA-Z0-9\\_]+ extends deprecated class Symfony\\Contracts\\EventDispatcher\\Event:\ssince Symfony 4\.3, use "Symfony\\Contracts\\EventDispatcher\\Event" instead#'
 includes:
   - ./vendor/mglaman/phpstan-drupal/extension.neon
   - ./vendor/phpstan/phpstan-deprecation-rules/rules.neon
diff --git a/src/ConfigExporter.php b/src/ConfigExporter.php
index 83d56eb..cf2c8d3 100644
--- a/src/ConfigExporter.php
+++ b/src/ConfigExporter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper;
 
+use Drupal\Core\Config\FileStorage;
 use Drupal\Component\Serialization\SerializationInterface;
 use Drupal\Core\Config\StorageInterface;
 
@@ -18,32 +19,32 @@ class ConfigExporter {
   /**
    * The extension config storage for config/install config items.
    *
-   * @var \Drupal\Core\Config\FileStorage
+   * @var FileStorage
    */
   protected $extensionConfigStorage;
 
   /**
    * The extension config storage for config/optional config items.
    *
-   * @var \Drupal\Core\Config\FileStorage
+   * @var FileStorage
    */
   protected $extensionOptionalConfigStorage;
 
   /**
    * Yaml serializer.
    *
-   * @var \Drupal\Component\Serialization\SerializationInterface
+   * @var SerializationInterface
    */
   protected $serializer;
 
   /**
    * ConfigExporter constructor.
    *
-   * @param \Drupal\Core\Config\StorageInterface $extension_config_storage
+   * @param StorageInterface $extension_config_storage
    *   The extension config storage.
-   * @param \Drupal\Core\Config\StorageInterface $extension_optional_config_storage
+   * @param StorageInterface $extension_optional_config_storage
    *   The extension config storage for optional config items.
-   * @param \Drupal\Component\Serialization\SerializationInterface $serializer
+   * @param SerializationInterface $serializer
    *   Array serializer service.
    */
   public function __construct(StorageInterface $extension_config_storage, StorageInterface $extension_optional_config_storage, SerializationInterface $serializer) {
@@ -57,7 +58,7 @@ class ConfigExporter {
    *
    * TODO: It would be good to log that file has been changed!!!
    *
-   * @param \Drupal\update_helper\ConfigName $config_name
+   * @param ConfigName $config_name
    *   Config name.
    * @param array $data
    *   Configuration array.
diff --git a/src/ConfigHandler.php b/src/ConfigHandler.php
index 0ce43c9..4d44ec0 100644
--- a/src/ConfigHandler.php
+++ b/src/ConfigHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper;
 
+use Drupal\Component\Diff\Engine\DiffOp;
 use Drupal\Component\Serialization\SerializationInterface;
 use Drupal\config_update\ConfigDiffInterface;
 use Drupal\config_update\ConfigListInterface;
@@ -23,14 +24,14 @@ class ConfigHandler {
   /**
    * The config lister.
    *
-   * @var \Drupal\config_update\ConfigListInterface
+   * @var ConfigListInterface
    */
   protected $configList;
 
   /**
    * The config reverter.
    *
-   * @var \Drupal\config_update\ConfigRevertInterface
+   * @var ConfigRevertInterface
    */
   protected $configReverter;
 
@@ -44,28 +45,28 @@ class ConfigHandler {
   /**
    * Config diff transformer service.
    *
-   * @var \Drupal\update_helper\ConfigDiffTransformer
+   * @var ConfigDiffTransformer
    */
   protected $configDiffTransformer;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The serializer.
    *
-   * @var \Drupal\Component\Serialization\SerializationInterface
+   * @var SerializationInterface
    */
   protected $serializer;
 
   /**
    * Configuration exporter.
    *
-   * @var \Drupal\update_helper\ConfigExporter
+   * @var ConfigExporter
    */
   protected $configExporter;
 
@@ -86,19 +87,19 @@ class ConfigHandler {
   /**
    * Config handler constructor.
    *
-   * @param \Drupal\config_update\ConfigListInterface $config_list
+   * @param ConfigListInterface $config_list
    *   Config list service.
-   * @param \Drupal\config_update\ConfigRevertInterface $config_reverter
+   * @param ConfigRevertInterface $config_reverter
    *   Config reverter service.
-   * @param \Drupal\config_update\ConfigDiffInterface $config_differ
+   * @param ConfigDiffInterface $config_differ
    *   Config differ service.
-   * @param \Drupal\update_helper\ConfigDiffTransformer $config_diff_transformer
+   * @param ConfigDiffTransformer $config_diff_transformer
    *   Configuration transformer for diffing.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module handler service.
-   * @param \Drupal\Component\Serialization\SerializationInterface $serializer
+   * @param SerializationInterface $serializer
    *   Array serializer service.
-   * @param \Drupal\update_helper\ConfigExporter $config_exporter
+   * @param ConfigExporter $config_exporter
    *   Configuration exporter service.
    */
   public function __construct(ConfigListInterface $config_list, ConfigRevertInterface $config_reverter, ConfigDiffInterface $config_differ, ConfigDiffTransformer $config_diff_transformer, ModuleHandlerInterface $module_handler, SerializationInterface $serializer, ConfigExporter $config_exporter) {
@@ -174,12 +175,12 @@ class ConfigHandler {
   /**
    * Get diff for single configuration.
    *
-   * @param \Drupal\update_helper\ConfigName $config_name
+   * @param ConfigName $config_name
    *   Configuration name.
    * @param bool $from_active
    *   Flag if configuration should be updated from active to file configs.
    *
-   * @return \Drupal\Component\Diff\Engine\DiffOp[]
+   * @return DiffOp[]
    *   Return diff edits.
    */
   protected function getConfigDiff(ConfigName $config_name, $from_active) {
@@ -205,7 +206,7 @@ class ConfigHandler {
         );
       }
 
-      /** @var \Drupal\Component\Diff\Engine\DiffOp[] $edits */
+      /** @var DiffOp[] $edits */
       return $update_diff->getEdits();
     }
 
diff --git a/src/ConfigName.php b/src/ConfigName.php
index bcee79b..66e823c 100644
--- a/src/ConfigName.php
+++ b/src/ConfigName.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 /**
  * Configuration name class for easier handling of configuration references.
  *
@@ -28,7 +29,7 @@ class ConfigName {
   /**
    * Entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -131,7 +132,7 @@ class ConfigName {
   /**
    * Retrieves the entity manager service.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity manager service.
    */
   protected function entityTypeManager() {
diff --git a/src/Events/CommandExecuteEvent.php b/src/Events/CommandExecuteEvent.php
index 44b7b36..e71fcc1 100644
--- a/src/Events/CommandExecuteEvent.php
+++ b/src/Events/CommandExecuteEvent.php
@@ -56,7 +56,7 @@ class CommandExecuteEvent extends Event {
   /**
    * Get the assets that should be generated.
    *
-   * @return \DrupalCodeGenerator\Asset\Asset[]
+   * @return Asset[]
    *   Assets that should be generated.
    */
   public function getAssets() {
@@ -66,7 +66,7 @@ class CommandExecuteEvent extends Event {
   /**
    * Add an asset.
    *
-   * @param \DrupalCodeGenerator\Asset\Asset $asset
+   * @param Asset $asset
    *   The asset to add to the array.
    *
    * @return $this
diff --git a/src/Events/CommandSubscriber.php b/src/Events/CommandSubscriber.php
index 1635fc1..409d0c5 100644
--- a/src/Events/CommandSubscriber.php
+++ b/src/Events/CommandSubscriber.php
@@ -15,14 +15,14 @@ class CommandSubscriber implements EventSubscriberInterface {
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Command subscriber class.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(ModuleHandlerInterface $module_handler) {
@@ -43,7 +43,7 @@ class CommandSubscriber implements EventSubscriberInterface {
   /**
    * Handles execute for configuration update generation to create update hook.
    *
-   * @param \Drupal\update_helper\Events\CommandExecuteEvent $execute_event
+   * @param CommandExecuteEvent $execute_event
    *   Command execute event.
    */
   public function onExecute(CommandExecuteEvent $execute_event) {
diff --git a/src/Generators/ConfigurationUpdate.php b/src/Generators/ConfigurationUpdate.php
index 5cfb74f..0005630 100644
--- a/src/Generators/ConfigurationUpdate.php
+++ b/src/Generators/ConfigurationUpdate.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\update_helper\Generators;
 
+use Drupal\Core\Extension\ModuleHandler;
+use Drupal\Core\Update\UpdateRegistry;
+use Drupal\Core\Update\UpdateHookRegistry;
 use Drupal\Core\Extension\Extension;
 use Drupal\Core\Extension\ModuleExtensionList;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -38,28 +41,28 @@ class ConfigurationUpdate extends DrupalGenerator {
   /**
    * The module extension list service.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $extensionList;
 
   /**
    * Drupal\update_helper\ConfigHandler definition.
    *
-   * @var \Drupal\update_helper\ConfigHandler
+   * @var ConfigHandler
    */
   protected $configHandler;
 
   /**
    * Drupal\Core\Extension\ModuleHandler definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
   /**
    * Event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
@@ -109,7 +112,7 @@ class ConfigurationUpdate extends DrupalGenerator {
       // diffs and therefore requires that it's updates are run in a particular
       // order. The update numbers DO NOT reflect the module schema and start
       // from 0001.
-      /** @var \Drupal\Core\Update\UpdateRegistry $service */
+      /** @var UpdateRegistry $service */
       $service = \Drupal::service('update.post_update_registry');
       $updates = array_merge($service->getModuleUpdateFunctions($vars['module']), array_keys($service->getRemovedPostUpdates($vars['module'])));
       $lastUpdate = 0;
@@ -122,7 +125,7 @@ class ConfigurationUpdate extends DrupalGenerator {
       $vars['update_name'] = 'post_update_' . $lastUpdate . '_' . $this->io->askQuestion($question);
     }
     else {
-      /** @var \Drupal\Core\Update\UpdateHookRegistry $service */
+      /** @var UpdateHookRegistry $service */
       $service = \Drupal::service('update.update_hook_registry');
       $lastUpdate = $service->getInstalledVersion($vars['module']);
       $nextUpdate = $lastUpdate > 0 ? ($lastUpdate + 1) : 8001;
@@ -192,7 +195,7 @@ class ConfigurationUpdate extends DrupalGenerator {
   /**
    * Get installed non_core extensions.
    *
-   * @return \Drupal\Core\Extension\Extension[]
+   * @return Extension[]
    *   The list of installed non-core extensions keyed by the extension name.
    */
   protected function getExtensions(): array {
diff --git a/src/ReversibleConfigDiffer.php b/src/ReversibleConfigDiffer.php
index 99fb24d..02b2732 100644
--- a/src/ReversibleConfigDiffer.php
+++ b/src/ReversibleConfigDiffer.php
@@ -23,16 +23,16 @@ class ReversibleConfigDiffer extends ConfigDiffer {
   /**
    * Config diff transformer service.
    *
-   * @var \Drupal\update_helper\ConfigDiffTransformer
+   * @var ConfigDiffTransformer
    */
   protected $configDiffTransformer;
 
   /**
    * ConfigDiffer constructor.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   String translation service.
-   * @param \Drupal\update_helper\ConfigDiffTransformer $config_diff_transformer
+   * @param ConfigDiffTransformer $config_diff_transformer
    *   Configuration transformer for diffing.
    * @param string[] $ignore
    *   Config components to ignore.
diff --git a/src/UpdateLogger.php b/src/UpdateLogger.php
index 6209c22..b2250ba 100644
--- a/src/UpdateLogger.php
+++ b/src/UpdateLogger.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper;
 
+use Psr\Log\LoggerInterface;
 use Psr\Log\AbstractLogger;
 use Symfony\Component\Console\Logger\ConsoleLogger;
 use Symfony\Component\Console\Output\OutputInterface;
@@ -28,7 +29,7 @@ class UpdateLogger extends AbstractLogger {
   /**
    * The console logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $cliLogger;
 
@@ -79,7 +80,7 @@ class UpdateLogger extends AbstractLogger {
   /**
    * Returns console logger.
    *
-   * @return \Psr\Log\LoggerInterface
+   * @return LoggerInterface
    *   Returns console logger.
    */
   protected function getCliLogger() {
diff --git a/src/Updater.php b/src/Updater.php
index 08e7fad..6da4479 100644
--- a/src/Updater.php
+++ b/src/Updater.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\update_helper;
 
+use Drupal\Core\Config\Entity\ConfigEntityStorageInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\config_update\ConfigRevertInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -25,35 +26,35 @@ class Updater implements UpdaterInterface {
   /**
    * Site configFactory object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Module installer service.
    *
-   * @var \Drupal\Core\Extension\ModuleInstallerInterface
+   * @var ModuleInstallerInterface
    */
   protected $moduleInstaller;
 
   /**
    * The theme installer service.
    *
-   * @var \Drupal\Core\Extension\ThemeInstallerInterface
+   * @var ThemeInstallerInterface
    */
   protected $themeInstaller;
 
   /**
    * Config reverter service.
    *
-   * @var \Drupal\config_update\ConfigRevertInterface
+   * @var ConfigRevertInterface
    */
   protected $configReverter;
 
   /**
    * Configuration handler service.
    *
-   * @var \Drupal\update_helper\ConfigHandler
+   * @var ConfigHandler
    */
   protected $configHandler;
 
@@ -64,42 +65,42 @@ class Updater implements UpdaterInterface {
    * - logWarning - for logging warnings, it will mark executed update as failed
    * - logInfo    - for logging information.
    *
-   * @var \Drupal\update_helper\UpdateLogger
+   * @var UpdateLogger
    */
   protected $logger;
 
   /**
    * Event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Config manager.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Constructs the PathBasedBreadcrumbBuilder.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\Core\Extension\ModuleInstallerInterface $module_installer
+   * @param ModuleInstallerInterface $module_installer
    *   Module installer service.
-   * @param \Drupal\Core\Extension\ThemeInstallerInterface $theme_installer
+   * @param ThemeInstallerInterface $theme_installer
    *   Theme installer service.
-   * @param \Drupal\config_update\ConfigRevertInterface $config_reverter
+   * @param ConfigRevertInterface $config_reverter
    *   Config reverter service.
-   * @param \Drupal\update_helper\ConfigHandler $config_handler
+   * @param ConfigHandler $config_handler
    *   Configuration handler service.
-   * @param \Drupal\update_helper\UpdateLogger $logger
+   * @param UpdateLogger $logger
    *   Update logger.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   Event dispatcher.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $config_manager
+   * @param ConfigManagerInterface $config_manager
    *   The config manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ModuleInstallerInterface $module_installer, ThemeInstallerInterface $theme_installer, ConfigRevertInterface $config_reverter, ConfigHandler $config_handler, UpdateLogger $logger, EventDispatcherInterface $event_dispatcher, ConfigManagerInterface $config_manager) {
@@ -424,7 +425,7 @@ class Updater implements UpdaterInterface {
     // Update configuration entities using their API to ensure dependencies are
     // recalculated.
     if ($entity_type = $this->configManager->getEntityTypeIdByName($config_name)) {
-      /** @var \Drupal\Core\Config\Entity\ConfigEntityStorageInterface $entity_storage */
+      /** @var ConfigEntityStorageInterface $entity_storage */
       $entity_storage = $this->configManager
         ->getEntityTypeManager()
         ->getStorage($entity_type);
diff --git a/src/UpdaterInterface.php b/src/UpdaterInterface.php
index 394684d..aa6b48e 100644
--- a/src/UpdaterInterface.php
+++ b/src/UpdaterInterface.php
@@ -10,7 +10,7 @@ interface UpdaterInterface {
   /**
    * Get update logger service.
    *
-   * @return \Drupal\update_helper\UpdateLogger
+   * @return UpdateLogger
    *   Returns update logger.
    */
   public function logger();
diff --git a/tests/src/Functional/DrushTest.php b/tests/src/Functional/DrushTest.php
index df65c1a..6aca153 100644
--- a/tests/src/Functional/DrushTest.php
+++ b/tests/src/Functional/DrushTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\update_helper\Functional;
 
+use Drupal\Core\Config\ConfigFactory;
 use Drupal\Component\Serialization\Yaml;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\update_helper\Kernel\ConfigHandlerTest;
@@ -68,7 +69,7 @@ class DrushTest extends BrowserTestBase {
     $file_system = new Filesystem();
     $file_system->mirror('core/modules/node/config/install', $this->siteDirectory . '/modules/test_node_config/config/install');
 
-    /** @var \Drupal\Core\Config\ConfigFactory $configFactory */
+    /** @var ConfigFactory $configFactory */
     $configFactory = \Drupal::service('config.factory');
     $config = $configFactory->getEditable('field.storage.node.body');
     $configData = $config->get();
@@ -123,7 +124,7 @@ class DrushTest extends BrowserTestBase {
     $file_system = new Filesystem();
     $file_system->mirror('core/modules/node/config/install', $this->siteDirectory . '/modules/test_node_config/config/install');
 
-    /** @var \Drupal\Core\Config\ConfigFactory $configFactory */
+    /** @var ConfigFactory $configFactory */
     $configFactory = \Drupal::service('config.factory');
     $config = $configFactory->getEditable('field.storage.node.body');
     $configData = $config->get();
diff --git a/tests/src/Kernel/ConfigHandlerTest.php b/tests/src/Kernel/ConfigHandlerTest.php
index fe718f4..04711c3 100644
--- a/tests/src/Kernel/ConfigHandlerTest.php
+++ b/tests/src/Kernel/ConfigHandlerTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\update_helper\Kernel;
 
+use Drupal\Core\Config\FileStorage;
+use Drupal\config_update\ConfigRevertInterface;
+use Drupal\Core\Config\ConfigFactory;
 use Drupal\Component\Serialization\Yaml;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\update_helper\ConfigHandler;
@@ -84,7 +87,7 @@ EOF;
   protected function setUp(): void {
     parent::setUp();
 
-    /** @var \Drupal\Core\Config\FileStorage $extensionStorage */
+    /** @var FileStorage $extensionStorage */
     $extensionStorage = \Drupal::service('config_update.extension_storage');
     $this->startingSha1 = sha1_file($extensionStorage->getFilePath('field.storage.node.body'));
   }
@@ -115,14 +118,14 @@ EOF;
    * @covers \Drupal\update_helper\ConfigHandler::generatePatchFile
    */
   public function testGeneratePatchFileFromActiveConfig() {
-    /** @var \Drupal\update_helper\ConfigHandler $configHandler */
+    /** @var ConfigHandler $configHandler */
     $configHandler = \Drupal::service('update_helper.config_handler');
 
-    /** @var \Drupal\config_update\ConfigRevertInterface $configReverter */
+    /** @var ConfigRevertInterface $configReverter */
     $configReverter = \Drupal::service('config_update.config_update');
     $configReverter->import('field_storage_config', 'node.body');
 
-    /** @var \Drupal\Core\Config\ConfigFactory $configFactory */
+    /** @var ConfigFactory $configFactory */
     $configFactory = \Drupal::service('config.factory');
     $config = $configFactory->getEditable('field.storage.node.body');
     $configData = $config->get();
@@ -140,7 +143,7 @@ EOF;
     $this->assertEquals($this->getUpdateDefinition(), $data);
 
     // Check that configuration file is not changed.
-    /** @var \Drupal\Core\Config\FileStorage $extensionStorage */
+    /** @var FileStorage $extensionStorage */
     $extensionStorage = \Drupal::service('config_update.extension_storage');
     $this->assertSame($this->startingSha1, sha1_file($extensionStorage->getFilePath('field.storage.node.body')));
   }
@@ -149,18 +152,18 @@ EOF;
    * @covers \Drupal\update_helper\ConfigHandler::generatePatchFile
    */
   public function testGeneratePatchFileWithConfigExport() {
-    /** @var \Drupal\update_helper\ConfigHandler $configHandler */
+    /** @var ConfigHandler $configHandler */
     $configHandler = \Drupal::service('update_helper.config_handler');
 
-    /** @var \Drupal\Core\Config\FileStorage $extensionStorage */
+    /** @var FileStorage $extensionStorage */
     $extensionStorage = \Drupal::service('config_update.extension_storage');
     $configFilePath = $extensionStorage->getFilePath('field.storage.node.body');
 
-    /** @var \Drupal\config_update\ConfigRevertInterface $configReverter */
+    /** @var ConfigRevertInterface $configReverter */
     $configReverter = \Drupal::service('config_update.config_update');
     $configReverter->import('field_storage_config', 'node.body');
 
-    /** @var \Drupal\Core\Config\ConfigFactory $configFactory */
+    /** @var ConfigFactory $configFactory */
     $configFactory = \Drupal::service('config.factory');
     $config = $configFactory->getEditable('field.storage.node.body');
     $configData = $config->get();
diff --git a/tests/src/Kernel/ReversibleConfigDifferTest.php b/tests/src/Kernel/ReversibleConfigDifferTest.php
index 30c7928..36bc801 100644
--- a/tests/src/Kernel/ReversibleConfigDifferTest.php
+++ b/tests/src/Kernel/ReversibleConfigDifferTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\update_helper\Kernel;
 
+use Drupal\update_helper\ReversibleConfigDiffer;
+use Drupal\Component\Diff\Engine\DiffOp;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -33,7 +35,7 @@ class ReversibleConfigDifferTest extends KernelTestBase {
    * @dataProvider sameDataProvider
    */
   public function testSame(array $configOne, array $configTwo, $expected) {
-    /** @var \Drupal\update_helper\ReversibleConfigDiffer $configDiffer */
+    /** @var ReversibleConfigDiffer $configDiffer */
     $configDiffer = \Drupal::service('update_helper.config_differ');
 
     $result = $configDiffer->same($configOne, $configTwo);
@@ -157,7 +159,7 @@ class ReversibleConfigDifferTest extends KernelTestBase {
    * @covers \Drupal\update_helper\ReversibleConfigDiffer::diff
    */
   public function testDiff() {
-    /** @var \Drupal\update_helper\ReversibleConfigDiffer $configDiffer */
+    /** @var ReversibleConfigDiffer $configDiffer */
     $configDiffer = \Drupal::service('update_helper.config_differ');
 
     $configOne = [
@@ -258,8 +260,7 @@ class ReversibleConfigDifferTest extends KernelTestBase {
     $this->assertEquals(count($expectedEdits), count($edits));
 
     foreach ($edits as $index => $diffOp) {
-      /** @var \Drupal\Component\Diff\Engine\DiffOp $diffOp */
-
+      /** @var DiffOp $diffOp */
       $this->assertEquals($expectedEdits[$index][$diffOp->type]['orig'], $diffOp->orig);
       $this->assertEquals($expectedEdits[$index][$diffOp->type]['closing'], $diffOp->closing);
     }
diff --git a/tests/src/Kernel/UpdaterTest.php b/tests/src/Kernel/UpdaterTest.php
index a95c33c..74ffcfd 100644
--- a/tests/src/Kernel/UpdaterTest.php
+++ b/tests/src/Kernel/UpdaterTest.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\Tests\update_helper\Kernel;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Extension\ThemeHandlerInterface;
+use Drupal\update_helper\ConfigHandler;
+use Drupal\config_update\ConfigRevertInterface;
+use Drupal\Core\Config\ConfigFactory;
+use Drupal\update_helper\Updater;
 use Drupal\Core\Serialization\Yaml;
 use Drupal\KernelTests\KernelTestBase;
 use Drupal\Tests\node\Traits\ContentTypeCreationTrait;
@@ -26,14 +32,14 @@ class UpdaterTest extends KernelTestBase {
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler = NULL;
 
   /**
    * Theme handler service.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
@@ -170,7 +176,7 @@ class UpdaterTest extends KernelTestBase {
 
     file_put_contents($module_dir . '/config/install/tour.tour.tour-update-helper-test.yml', Yaml::encode($tour_config));
 
-    /** @var \Drupal\update_helper\ConfigHandler $config_handler */
+    /** @var ConfigHandler $config_handler */
     $config_handler = \Drupal::service('update_helper.config_handler');
 
     // Create update configuration for testExecuteUpdate.
@@ -198,11 +204,11 @@ class UpdaterTest extends KernelTestBase {
    * @covers \Drupal\update_helper\Updater::executeUpdate
    */
   public function testExecuteUpdate() {
-    /** @var \Drupal\config_update\ConfigRevertInterface $config_reverter */
+    /** @var ConfigRevertInterface $config_reverter */
     $config_reverter = \Drupal::service('config_update.config_update');
     $config_reverter->import('field_storage_config', 'node.body');
 
-    /** @var \Drupal\Core\Config\ConfigFactory $config_factory */
+    /** @var ConfigFactory $config_factory */
     $config_factory = \Drupal::service('config.factory');
     $config = $config_factory->getEditable('field.storage.node.body');
 
@@ -216,7 +222,7 @@ class UpdaterTest extends KernelTestBase {
 
     $config->setData($config_data)->save(TRUE);
 
-    /** @var \Drupal\update_helper\Updater $update_helper */
+    /** @var Updater $update_helper */
     $update_helper = \Drupal::service('update_helper.updater');
 
     $this->assertFalse($this->moduleHandler->moduleExists('help'), 'Module "help" should not be installed.');
@@ -240,7 +246,7 @@ class UpdaterTest extends KernelTestBase {
    * Test issue with using delete action without expected.
    */
   public function testOnlyDeleteUpdate() {
-    /** @var \Drupal\config_update\ConfigRevertInterface $config_reverter */
+    /** @var ConfigRevertInterface $config_reverter */
     $config_reverter = \Drupal::service('config_update.config_update');
     $config_reverter->import('field_storage_config', 'node.body');
 
@@ -252,7 +258,7 @@ class UpdaterTest extends KernelTestBase {
 
     $config->setData($config_data)->save(TRUE);
 
-    /** @var \Drupal\update_helper\Updater $update_helper */
+    /** @var Updater $update_helper */
     $update_helper = \Drupal::service('update_helper.updater');
 
     // Ensure that configuration had new values.
@@ -273,7 +279,7 @@ class UpdaterTest extends KernelTestBase {
 
     // Use the updater to remove the body field from the display and ensure the
     // dependencies are updated.
-    /** @var \Drupal\update_helper\ConfigHandler $config_handler */
+    /** @var ConfigHandler $config_handler */
     $config_handler = \Drupal::service('update_helper.config_handler');
     $patch_file_path = $config_handler->getPatchFile('update_helper_test', 'test_updater_dependencies', TRUE);
     file_put_contents($patch_file_path, Yaml::encode(
@@ -298,7 +304,7 @@ class UpdaterTest extends KernelTestBase {
       ]
     ));
 
-    /** @var \Drupal\update_helper\Updater $update_helper */
+    /** @var Updater $update_helper */
     $update_helper = \Drupal::service('update_helper.updater');
     $update_helper->executeUpdate('update_helper_test', 'test_updater_dependencies');
 
