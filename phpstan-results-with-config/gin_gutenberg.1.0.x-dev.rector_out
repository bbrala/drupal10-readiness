modules/contrib/gin_gutenberg/gin_gutenberg.module

1 file with changes
===================

1) modules/contrib/gin_gutenberg/gin_gutenberg.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\Entity\NodeType;
+use Drupal\node\Entity\Node;
 /**
  * @file
  * gin_gutenberg: Gin/Claro theme and Gutenberg editor integration
@@ @@
  * Implements hook_theme_registry_alter
  */
 function gin_gutenberg_theme_registry_alter(&$theme_registry) {
-  $template_uri = drupal_get_path('module', 'gin_gutenberg') . '/templates';
+  $template_uri = \Drupal::service('extension.list.module')->getPath('gin_gutenberg') . '/templates';
   foreach ([
     'media_library_wrapper',
     'links',
@@ @@
 function gin_gutenberg_page_attachments_alter(array &$attachments) {
   $node = \Drupal::routeMatch()->getParameter('node');
   if (!$node && $node_type = \Drupal::routeMatch()->getParameter('node_type')) {
-    $type = $node_type instanceof Drupal\node\Entity\NodeType ? $node_type->id() : $node_type;
-    $node = \Drupal\node\Entity\Node::create(['type' => $type]);
+    $type = $node_type instanceof NodeType ? $node_type->id() : $node_type;
+    $node = Node::create(['type' => $type]);
   }

   // Check to see if Gutenberg is enabled on the node entity.
@@ @@
 /**
  * Checks whether Gutenberg is enabled for an entity.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   The entity to check.
  *
  * @return bool
@@ @@
   }

   return $is_content_form;
-}
+}
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 1 file has been changed by Rector                                         

