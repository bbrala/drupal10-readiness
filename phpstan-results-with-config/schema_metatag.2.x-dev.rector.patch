diff --git a/schema_item_list/schema_item_list.install b/schema_item_list/schema_item_list.install
index 807a748..b22d2fe 100644
--- a/schema_item_list/schema_item_list.install
+++ b/schema_item_list/schema_item_list.install
@@ -20,7 +20,7 @@
 function schema_item_list_update_8101() {
 
   /**
-   * @var Drupal\metatag\Entity\MetatagDefaults
+   * @var MetatagDefaults
    *   The Metatag defaults.
    */
   $configs = MetatagDefaults::loadMultiple();
diff --git a/schema_metatag.install b/schema_metatag.install
index b6591fa..d992d8f 100644
--- a/schema_metatag.install
+++ b/schema_metatag.install
@@ -22,7 +22,7 @@ function schema_metatag_update_8101() {
   /**
    * Metatag default values.
    *
-   * @var Drupal\metatag\Entity\MetatagDefaults
+   * @var MetatagDefaults
    */
   $configs = MetatagDefaults::loadMultiple();
 
@@ -62,7 +62,7 @@ function schema_metatag_update_8103() {
   /**
    * Metatag default values.
    *
-   * @var Drupal\metatag\Entity\MetatagDefaults
+   * @var MetatagDefaults
    */
   $configs = MetatagDefaults::loadMultiple();
 
@@ -112,7 +112,7 @@ function schema_metatag_update_8105() {
   /**
    * Metatag default values.
    *
-   * @var Drupal\metatag\Entity\MetatagDefaults
+   * @var MetatagDefaults
    */
   $configs = MetatagDefaults::loadMultiple();
 
@@ -141,7 +141,7 @@ function schema_metatag_update_8106() {
   /**
    * Metatag default values.
    *
-   * @var Drupal\metatag\Entity\MetatagDefaults
+   * @var MetatagDefaults
    */
   $configs = MetatagDefaults::loadMultiple();
 
@@ -177,7 +177,7 @@ function schema_metatag_update_8107() {
   /**
    * Metatag default values.
    *
-   * @var Drupal\metatag\Entity\MetatagDefaults
+   * @var MetatagDefaults
    */
   $configs = MetatagDefaults::loadMultiple();
 
diff --git a/src/Annotation/SchemaPropertyType.php b/src/Annotation/SchemaPropertyType.php
index 3ee2550..bb4a4c4 100644
--- a/src/Annotation/SchemaPropertyType.php
+++ b/src/Annotation/SchemaPropertyType.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\schema_metatag\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -24,7 +25,7 @@ class SchemaPropertyType extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/metatag/Tag/SchemaNameBase.php b/src/Plugin/metatag/Tag/SchemaNameBase.php
index 98e31ee..0ca50b5 100644
--- a/src/Plugin/metatag/Tag/SchemaNameBase.php
+++ b/src/Plugin/metatag/Tag/SchemaNameBase.php
@@ -16,14 +16,14 @@ class SchemaNameBase extends MetaNameBase implements ContainerFactoryPluginInter
   /**
    * The SchemaMetatagManager service.
    *
-   * @var \Drupal\schema_metatag\SchemaMetatagManager
+   * @var SchemaMetatagManager
    */
   protected $schemaMetatagManager;
 
   /**
    * The PropertyTypeManager service.
    *
-   * @var \Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeManager
+   * @var PropertyTypeManager
    */
   protected $propertyTypeManager;
 
@@ -44,7 +44,7 @@ public static function create(ContainerInterface $container, array $configuratio
   /**
    * Sets schemaMetatagManager service.
    *
-   * @param \Drupal\schema_metatag\SchemaMetatagManager $schemaMetatagManager
+   * @param SchemaMetatagManager $schemaMetatagManager
    *   The Schema Metatag Manager service.
    */
   public function setSchemaMetatagManager(SchemaMetatagManager $schemaMetatagManager) {
@@ -54,7 +54,7 @@ public function setSchemaMetatagManager(SchemaMetatagManager $schemaMetatagManag
   /**
    * Sets schemaMetatagManager service.
    *
-   * @param \Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeManager $propertyTypeManager
+   * @param PropertyTypeManager $propertyTypeManager
    *   The PropertyTypeManager service.
    */
   public function setPropertyTypeManager(PropertyTypeManager $propertyTypeManager) {
@@ -64,7 +64,7 @@ public function setPropertyTypeManager(PropertyTypeManager $propertyTypeManager)
   /**
    * Return the SchemaMetatagManager service.
    *
-   * @return \Drupal\schema_metatag\SchemaMetatagManager
+   * @return SchemaMetatagManager
    *   The Schema Metatag Manager service.
    */
   protected function schemaMetatagManager() {
@@ -74,7 +74,7 @@ protected function schemaMetatagManager() {
   /**
    * Return the PropertyTypeManager service.
    *
-   * @return \Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeManager
+   * @return PropertyTypeManager
    *   The PropertyTypeManager service.
    */
   protected function propertyTypeManager() {
diff --git a/src/Plugin/schema_metatag/PropertyType/BreadcrumbList.php b/src/Plugin/schema_metatag/PropertyType/BreadcrumbList.php
index c914ed5..bd1f13e 100644
--- a/src/Plugin/schema_metatag/PropertyType/BreadcrumbList.php
+++ b/src/Plugin/schema_metatag/PropertyType/BreadcrumbList.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\schema_metatag\Plugin\schema_metatag\PropertyType;
 
+use Drupal\Core\Breadcrumb\BreadcrumbManager;
+use Drupal\Core\Render\Renderer;
+use Drupal\Core\Routing\CurrentRouteMatch;
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
@@ -24,21 +27,21 @@ class BreadcrumbList extends ItemListElement {
   /**
    * Breadcrumb manager.
    *
-   * @var \Drupal\Core\Breadcrumb\BreadcrumbManager
+   * @var BreadcrumbManager
    */
   protected $breadcrumbManager;
 
   /**
    * Renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * Current route match.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $routeMatch;
 
diff --git a/src/Plugin/schema_metatag/PropertyType/ItemListElement.php b/src/Plugin/schema_metatag/PropertyType/ItemListElement.php
index 59ff1cf..1a6d819 100644
--- a/src/Plugin/schema_metatag/PropertyType/ItemListElement.php
+++ b/src/Plugin/schema_metatag/PropertyType/ItemListElement.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\schema_metatag\Plugin\schema_metatag\PropertyType;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeBase;
 use Drupal\Core\Entity\Plugin\DataType\EntityAdapter;
 use Drupal\views\Views;
@@ -177,7 +178,7 @@ public function getItems($input_value) {
    * @param object $row
    *   The Views row.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity or NULL.
    */
   protected static function getEntityFromRow($row) {
diff --git a/src/Plugin/schema_metatag/PropertyTypeBase.php b/src/Plugin/schema_metatag/PropertyTypeBase.php
index a337015..e9f18d0 100644
--- a/src/Plugin/schema_metatag/PropertyTypeBase.php
+++ b/src/Plugin/schema_metatag/PropertyTypeBase.php
@@ -21,21 +21,21 @@ class PropertyTypeBase extends PluginBase implements PropertyTypeInterface, Sche
   /**
    * The schemaMetatagManager service.
    *
-   * @var \Drupal\schema_metatag\SchemaMetatagManagerInterface
+   * @var SchemaMetatagManagerInterface
    */
   protected $schemaMetatagManager;
 
   /**
    * The SchemaMetatagClient service.
    *
-   * @var \Drupal\schema_metatag\SchemaMetatagClientInterface
+   * @var SchemaMetatagClientInterface
    */
   protected $schemaMetatagClient;
 
   /**
    * The propertyTypeManager service.
    *
-   * @var \Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeManager
+   * @var PropertyTypeManager
    */
   protected $propertyTypeManager;
 
@@ -57,7 +57,7 @@ public static function create(ContainerInterface $container, array $configuratio
   /**
    * Sets schemaMetatagManager service.
    *
-   * @param \Drupal\schema_metatag\SchemaMetatagManagerInterface $schemaMetatagManager
+   * @param SchemaMetatagManagerInterface $schemaMetatagManager
    *   The Schema Metatag Manager service.
    */
   public function setSchemaMetatagManager(SchemaMetatagManagerInterface $schemaMetatagManager) {
@@ -67,7 +67,7 @@ public function setSchemaMetatagManager(SchemaMetatagManagerInterface $schemaMet
   /**
    * Sets SchemaMetatagClient service.
    *
-   * @param \Drupal\schema_metatag\SchemaMetatagClientInterface $schemaMetatagClient
+   * @param SchemaMetatagClientInterface $schemaMetatagClient
    *   The Schema.org client.
    */
   public function setSchemaMetatagClient(SchemaMetatagClientInterface $schemaMetatagClient) {
@@ -77,7 +77,7 @@ public function setSchemaMetatagClient(SchemaMetatagClientInterface $schemaMetat
   /**
    * Sets PropertyTypeManager service.
    *
-   * @param \Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeManager $propertyTypeManager
+   * @param PropertyTypeManager $propertyTypeManager
    *   The property type manager.
    */
   public function setPropertyTypeManager(PropertyTypeManager $propertyTypeManager) {
diff --git a/src/Plugin/schema_metatag/PropertyTypeInterface.php b/src/Plugin/schema_metatag/PropertyTypeInterface.php
index 6730bc1..e8dd1ef 100644
--- a/src/Plugin/schema_metatag/PropertyTypeInterface.php
+++ b/src/Plugin/schema_metatag/PropertyTypeInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\schema_metatag\Plugin\schema_metatag;
 
+use Drupal\schema_metatag\SchemaMetatagClient;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -21,7 +22,7 @@ public function schemaMetatagManager();
   /**
    * The Schema Metatag Client service.
    *
-   * @return \Drupal\schema_metatag\SchemaMetatagClient
+   * @return SchemaMetatagClient
    *   The Schema Metatag Client service.
    */
   public function schemaMetatagClient();
@@ -181,7 +182,7 @@ public function getVisibility(array $input_values);
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateProperty(array &$element, FormStateInterface $form_state);
diff --git a/src/Plugin/schema_metatag/PropertyTypeManager.php b/src/Plugin/schema_metatag/PropertyTypeManager.php
index 864c942..459c1c6 100644
--- a/src/Plugin/schema_metatag/PropertyTypeManager.php
+++ b/src/Plugin/schema_metatag/PropertyTypeManager.php
@@ -17,9 +17,9 @@ class PropertyTypeManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(
diff --git a/src/SchemaMetatagClient.php b/src/SchemaMetatagClient.php
index b23e858..0b0a42e 100644
--- a/src/SchemaMetatagClient.php
+++ b/src/SchemaMetatagClient.php
@@ -18,14 +18,14 @@ class SchemaMetatagClient implements SchemaMetatagClientInterface {
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The cache backend service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;
 
@@ -49,9 +49,9 @@ class SchemaMetatagClient implements SchemaMetatagClientInterface {
    * This can be used to query schema.org or a stored copy of the schema.org
    * definitions to construct object lists and determine hierarchy.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend.
    */
   public function __construct(ModuleHandlerInterface $moduleHandler, CacheBackendInterface $cache_backend) {
diff --git a/tests/src/Functional/SchemaMetatagTagsTestBase.php b/tests/src/Functional/SchemaMetatagTagsTestBase.php
index 2e53123..5f38c9a 100644
--- a/tests/src/Functional/SchemaMetatagTagsTestBase.php
+++ b/tests/src/Functional/SchemaMetatagTagsTestBase.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\schema_metatag\Functional;
 
+use Drupal\metatag\MetatagTagPluginManager;
+use Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeManager;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -19,7 +21,7 @@ abstract class SchemaMetatagTagsTestBase extends BrowserTestBase {
   /**
    * The Metatg Manager.
    *
-   * @var \Drupal\metatag\MetatagTagPluginManager
+   * @var MetatagTagPluginManager
    */
   protected $metatagTagManager;
 
@@ -111,7 +113,7 @@ public function getTreeParent() {
   /**
    * The PropertyTypeManager.
    *
-   * @var Drupal\schema_metatag\Plugin\schema_metatag\PropertyTypeManager
+   * @var PropertyTypeManager
    *   The Property Type Manager service.
    */
   public function propertyTypeManager() {
@@ -121,7 +123,7 @@ public function propertyTypeManager() {
   /**
    * The Metatag Tag Manager.
    *
-   * @var \Drupal\metatag\MetatagTagPluginManager
+   * @var MetatagTagPluginManager
    *   The Metatag Tag Manager service.
    */
   public function metatagTagManager() {
@@ -153,7 +155,7 @@ public function getKey($tag_name) {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
 
     parent::setUp();
     $this->propertyTypeManager = \Drupal::service('plugin.manager.schema_property_type');
@@ -264,7 +266,7 @@ public function testTagsInputOutput() {
         }
       }
 
-      $this->drupalPostForm(NULL, $form_values, 'Save');
+      $this->submitForm($form_values, 'Save');
       $this->assertSession()->pageTextContains($save_message, 'Configuration successfully posted.');
 
       // Load the config page to confirm the settings got saved.
