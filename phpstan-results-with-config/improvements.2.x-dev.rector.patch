diff --git a/improvements.module b/improvements.module
index 7e26fda..73d0686 100644
--- a/improvements.module
+++ b/improvements.module
@@ -165,7 +165,7 @@ function improvements_page_attachments(array &$page): void {
 
   // Add to js info about current and default themes.
   $page['#attached']['drupalSettings']['path']['currentThemePath'] = \Drupal::service('theme.manager')->getActiveTheme()->getPath();
-  $page['#attached']['drupalSettings']['path']['defaultThemePath'] = drupal_get_path('theme', \Drupal::config('system.theme')->get('default'));
+  $page['#attached']['drupalSettings']['path']['defaultThemePath'] = \Drupal::service('extension.list.theme')->getPath(\Drupal::config('system.theme')->get('default'));
 
   improvements_form_tracking_submit_page_attachments($page);
   improvements_build_time_page_attachments($page);
@@ -178,7 +178,7 @@ function improvements_library_info_alter(array &$libraries, string $extension):
   static $improvements_assets_path;
 
   if (!$improvements_assets_path) {
-    $improvements_assets_path = '/' . drupal_get_path('module', 'improvements') . '/assets/';
+    $improvements_assets_path = '/' . \Drupal::service('extension.list.module')->getPath('improvements') . '/assets/';
   }
 
   // core
diff --git a/includes/improvements.form.inc b/includes/improvements.form.inc
index c64949b..0c7c86d 100644
--- a/includes/improvements.form.inc
+++ b/includes/improvements.form.inc
@@ -27,7 +27,7 @@ function improvements_form_library_info_alter(array &$libraries, string $extensi
   static $improvements_assets_path;
 
   if (!$improvements_assets_path) {
-    $improvements_assets_path = '/' . drupal_get_path('module', 'improvements') . '/assets/';
+    $improvements_assets_path = '/' . \Drupal::service('extension.list.module')->getPath('improvements') . '/assets/';
   }
 
   // core
diff --git a/src/ImprovementsEventSubscriber.php b/src/ImprovementsEventSubscriber.php
index 2978fc3..060c88d 100644
--- a/src/ImprovementsEventSubscriber.php
+++ b/src/ImprovementsEventSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\improvements;
 
+use Symfony\Component\HttpKernel\Event\ViewEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\EventSubscriber\MainContentViewSubscriber;
 use Drupal\Core\Routing\RouteObjectInterface;
 use Symfony\Component\HttpKernel\KernelEvents;
@@ -24,7 +26,7 @@ class ImprovementsEventSubscriber implements EventSubscriberInterface {
   /**
    * KernelEvents::VIEW event callback.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent|\Symfony\Component\HttpKernel\Event\ViewEvent $event
+   * @param ViewEvent|ViewEvent $event
    * @todo Remove \Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent after Drupal 8 support end
    */
   public function onKernelView($event): void {
@@ -52,7 +54,7 @@ class ImprovementsEventSubscriber implements EventSubscriberInterface {
   /**
    * KernelEvents::RESPONSE event callback.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent|\Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent|ResponseEvent $event
    * @todo Remove \Symfony\Component\HttpKernel\Event\FilterResponseEvent after Drupal 8 support end
    */
   public function onKernelResponse($event): void {
diff --git a/src/Plugin/Field/FieldFormatter/ExtendedImageFormatter.php b/src/Plugin/Field/FieldFormatter/ExtendedImageFormatter.php
index b18c470..1b21015 100644
--- a/src/Plugin/Field/FieldFormatter/ExtendedImageFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ExtendedImageFormatter.php
@@ -133,7 +133,7 @@ class ExtendedImageFormatter extends ImageFormatterBase {
           $image_link_url = $image_link_style->buildUrl($file->getFileUri());
         }
         else {
-          $image_link_url = file_create_url($file->getFileUri());
+          $image_link_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
         }
 
         $image_link_url = Url::fromUri($image_link_url);
diff --git a/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeFormatter.php b/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeFormatter.php
index 3df9694..3f2b89f 100644
--- a/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeFormatter.php
@@ -208,10 +208,10 @@ class ImageWithMobileAlternativeFormatter extends FormatterBase {
       $url = $image_style->buildUrl($path);
     }
     else {
-      $url = file_create_url($path);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
     }
 
-    return file_url_transform_relative($url);
+    return \Drupal::service('file_url_generator')->transformRelative($url);
   }
 
 }
diff --git a/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeOneFieldFormatter.php b/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeOneFieldFormatter.php
index b4f9440..5189ebf 100644
--- a/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeOneFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageWithMobileAlternativeOneFieldFormatter.php
@@ -189,10 +189,10 @@ class ImageWithMobileAlternativeOneFieldFormatter extends FormatterBase {
       $url = $image_style->buildUrl($path);
     }
     else {
-      $url = file_create_url($path);
+      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
     }
 
-    return file_url_transform_relative($url);
+    return \Drupal::service('file_url_generator')->transformRelative($url);
   }
 
 }
diff --git a/src/Plugin/views/sort/GreaterThan.php b/src/Plugin/views/sort/GreaterThan.php
index 3cf2fbb..14f354b 100644
--- a/src/Plugin/views/sort/GreaterThan.php
+++ b/src/Plugin/views/sort/GreaterThan.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\improvements\Plugin\views\sort;
 
+use Drupal\views\Plugin\views\query\Sql;
 use Drupal\views\Plugin\views\sort\SortPluginBase;
 
 /**
@@ -14,7 +15,7 @@ class GreaterThan extends SortPluginBase {
    */
   public function query(): void {
     $this->ensureMyTable();
-    $query = $this->query; /** @var \Drupal\views\Plugin\views\query\Sql $query */
+    $query = $this->query; /** @var Sql $query */
     $alias = $this->realField . '_greater_than';
     $query->addOrderBy(NULL, "IF({$this->tableAlias}.{$this->realField} > {$this->configuration['number']}, 1, 0)", $this->options['order'], $alias);
   }
diff --git a/src/Plugin/views/sort/IsCurrentUser.php b/src/Plugin/views/sort/IsCurrentUser.php
index 0e1d928..a3e08c4 100644
--- a/src/Plugin/views/sort/IsCurrentUser.php
+++ b/src/Plugin/views/sort/IsCurrentUser.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\improvements\Plugin\views\sort;
 
+use Drupal\views\Plugin\views\query\Sql;
 use Drupal\Core\Cache\Cache;
 use Drupal\views\Plugin\views\sort\SortPluginBase;
 
@@ -16,7 +17,7 @@ class IsCurrentUser extends SortPluginBase {
   public function query(): void {
     if ($current_user_id = \Drupal::currentUser()->id()) {
       $this->ensureMyTable();
-      $query = $this->query; /** @var \Drupal\views\Plugin\views\query\Sql $query */
+      $query = $this->query; /** @var Sql $query */
       $sort_alias = $this->realField . '_is_current_user';
       $query->addOrderBy(NULL, "IF ({$this->tableAlias}.{$this->realField} = $current_user_id, 1, 0)", $this->options['order'], $sort_alias);
     }
diff --git a/src/Plugin/views/sort/IsNull.php b/src/Plugin/views/sort/IsNull.php
index 84f80b9..ed36b3b 100644
--- a/src/Plugin/views/sort/IsNull.php
+++ b/src/Plugin/views/sort/IsNull.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\improvements\Plugin\views\sort;
 
+use Drupal\views\Plugin\views\query\Sql;
 use Drupal\views\Plugin\views\sort\SortPluginBase;
 
 /**
@@ -15,7 +16,7 @@ class IsNull extends SortPluginBase {
    */
   public function query(): void {
     $this->ensureMyTable();
-    $query = $this->query; /** @var \Drupal\views\Plugin\views\query\Sql $query */
+    $query = $this->query; /** @var Sql $query */
     $sort_alias = $this->tableAlias . '_' . $this->field;
 
     if (!empty($this->configuration['zero_is_null'])) {
diff --git a/tests/src/Functional/ImprovementsCommentTest.php b/tests/src/Functional/ImprovementsCommentTest.php
index c092114..42ad94f 100644
--- a/tests/src/Functional/ImprovementsCommentTest.php
+++ b/tests/src/Functional/ImprovementsCommentTest.php
@@ -106,6 +106,7 @@ class ImprovementsCommentTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsContactTest.php b/tests/src/Functional/ImprovementsContactTest.php
index bc1e8bf..2f3a193 100644
--- a/tests/src/Functional/ImprovementsContactTest.php
+++ b/tests/src/Functional/ImprovementsContactTest.php
@@ -70,6 +70,7 @@ class ImprovementsContactTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsFieldTest.php b/tests/src/Functional/ImprovementsFieldTest.php
index 88ef5e5..0fcf596 100644
--- a/tests/src/Functional/ImprovementsFieldTest.php
+++ b/tests/src/Functional/ImprovementsFieldTest.php
@@ -84,6 +84,7 @@ class ImprovementsFieldTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsFormTest.php b/tests/src/Functional/ImprovementsFormTest.php
index 2a1bc15..c997812 100644
--- a/tests/src/Functional/ImprovementsFormTest.php
+++ b/tests/src/Functional/ImprovementsFormTest.php
@@ -64,6 +64,7 @@ class ImprovementsFormTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsMenuTest.php b/tests/src/Functional/ImprovementsMenuTest.php
index 7844b42..3529a9d 100644
--- a/tests/src/Functional/ImprovementsMenuTest.php
+++ b/tests/src/Functional/ImprovementsMenuTest.php
@@ -76,6 +76,7 @@ class ImprovementsMenuTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsTaxonomyTest.php b/tests/src/Functional/ImprovementsTaxonomyTest.php
index f57cc3a..e5cfc32 100644
--- a/tests/src/Functional/ImprovementsTaxonomyTest.php
+++ b/tests/src/Functional/ImprovementsTaxonomyTest.php
@@ -94,6 +94,7 @@ class ImprovementsTaxonomyTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsTest.php b/tests/src/Functional/ImprovementsTest.php
index b67621b..47f7e00 100644
--- a/tests/src/Functional/ImprovementsTest.php
+++ b/tests/src/Functional/ImprovementsTest.php
@@ -126,6 +126,7 @@ class ImprovementsTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsThemingTest.php b/tests/src/Functional/ImprovementsThemingTest.php
index 8736c1d..89a6263 100644
--- a/tests/src/Functional/ImprovementsThemingTest.php
+++ b/tests/src/Functional/ImprovementsThemingTest.php
@@ -47,6 +47,7 @@ class ImprovementsThemingTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
diff --git a/tests/src/Functional/ImprovementsViewsTest.php b/tests/src/Functional/ImprovementsViewsTest.php
index 7a6f265..89f24c5 100644
--- a/tests/src/Functional/ImprovementsViewsTest.php
+++ b/tests/src/Functional/ImprovementsViewsTest.php
@@ -83,6 +83,7 @@ class ImprovementsViewsTest extends BrowserTestBase {
 
   /**
    * Main test function.
+   * @doesNotPerformAssertions
    */
   public function testMain() {
     $this->runAllPrivateTests();
