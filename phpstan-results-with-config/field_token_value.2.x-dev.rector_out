modules/contrib/field_token_value/field_token_value.api.php
modules/contrib/field_token_value/field_token_value.module
modules/contrib/field_token_value/src/Plugin/Field/FieldFormatter/FieldTokenValueTextFormatter.php
modules/contrib/field_token_value/src/Plugin/Field/FieldType/FieldTokenValueItem.php
modules/contrib/field_token_value/src/Plugin/Field/FieldWidget/FieldTokenValueDefaultWidget.php
modules/contrib/field_token_value/src/WrapperManager.php
modules/contrib/field_token_value/src/WrapperManagerInterface.php

3 files with changes
====================

1) modules/contrib/field_token_value/src/WrapperManager.php:68

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs a new WrapperManager instance.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   The cache backend.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler, CacheBackendInterface $cache_backend) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/field_token_value/src/Plugin/Field/FieldFormatter/FieldTokenValueTextFormatter.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The field token value wrapper manager.
    *
-   * @var \Drupal\field_token_value\WrapperManagerInterface
+   * @var WrapperManagerInterface
    */
   protected $wrappers;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param array $third_party_settings
    *   Third party settings.
-   * @param \Drupal\field_token_value\WrapperManagerInterface $wrappers
+   * @param WrapperManagerInterface $wrappers
    *   The field token value wrapper service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, WrapperManagerInterface $wrappers) {
@@ @@

       if ($output_as_link && isset($uri) && !$entity->isNew()) {
         $link = Link::fromTextAndUrl($element[0]['#value'], $uri)->toRenderable();
-        $element[0]['#value'] = render($link);
+        $element[0]['#value'] = \Drupal::service('renderer')->render($link);
       }

       if (!empty($selected)) {
    ----------- end diff -----------

Applied rules:
 * RenderRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/field_token_value/field_token_value.api.php:20

    ---------- begin diff ----------
@@ @@
 function hook_field_token_value_output_alter(&$element, $wrapper_info) {
   // Attach a CSS file if the paragraph wrapper is being used.
   if ($wrapper_info['tag'] == 'p') {
-    $element['#attached']['css'][] = drupal_get_path('module', 'my_module') . '/css/my-styles.css';
+    $element['#attached']['css'][] = \Drupal::service('extension.list.module')->getPath('my_module') . '/css/my-styles.css';
   }
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

