modules/contrib/humanstxt/humanstxt.module
modules/contrib/humanstxt/src/Controller/HumansTxtController.php
modules/contrib/humanstxt/src/Form/HumansTxtAdminSettingsForm.php
modules/contrib/humanstxt/tests/src/Functional/HumansTxtBasicTest.php

3 files with changes
====================

1) modules/contrib/humanstxt/tests/src/Functional/HumansTxtBasicTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\humanstxt\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\Url;

@@ @@
   /**
    * User with proper permissions for module configuration.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $adminUser;

@@ @@
   /**
    * User with content access.
    *
-   * @var \Drupal\user\Entity\User|false
+   * @var User|false
    */
   protected $normalUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();

     // Create users.
@@ @@
    */
   public function testHumansTxtUserNoAccess() {
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
     $this->drupalLogin($this->normalUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(403);
+    $this->assertSession()->statusCodeEquals(403);
   }

   /**
@@ @@
    */
   public function testHumansTxtHeader() {
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
-    $this->assertHeader('Content-Type', 'text/plain; charset=UTF-8');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseHeaderEquals('Content-Type', 'text/plain; charset=UTF-8');
   }

   /**
@@ @@
    */
   public function testHumansTxtCacheTags() {
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
-    $this->assertCacheTag('humanstxt');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', 'humanstxt');
   }

   /**
@@ @@
   public function testHumansTxtConfigureHumansTxtNoLink() {
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $test_string = "# Testing Humans.txt {$this->randomMachineName()}";
     $this->submitForm(['humanstxt_content' => $test_string, 'humanstxt_display_link' => FALSE], t('Save configuration'));
     $this->drupalLogout();
@@ @@

     // Test the newly created humans.txt file.
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $content = $this->getSession()->getPage()->getContent();
     $this->assertTrue($content == $test_string, sprintf('Test string: [%s] is displayed in the configured humans.txt file.', $test_string));

@@ @@
     // Test if the link to the object/file is not in HTML <head> section.
     $this->drupalGet('/admin/config/development/humanstxt');
     $tags = $this->getSession()->getPage()->getHtml();
-    $this->assertNotContains($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is not shown in the -head- section.', $this->fileLink));
+    $this->assertStringNotContainsString($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is not shown in the -head- section.', $this->fileLink));
   }

   /**
@@ @@
   public function testHumansTxtConfigureHumansTxtWithLink() {
     $this->drupalLogin($this->adminUser);
     $this->drupalGet('/admin/config/development/humanstxt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $test_string = "# Testing Humans.txt {$this->randomMachineName()}";
     $this->submitForm(['humanstxt_content' => $test_string, 'humanstxt_display_link' => TRUE], t('Save configuration'));
     $this->drupalLogout();
@@ @@

     // Test the newly created humans.txt file.
     $this->drupalGet('humans.txt');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
     $content = $this->getSession()->getPage()->getContent();
     $this->assertTrue($content == $test_string, sprintf('Test string: [%s] is displayed in the configured humans.txt file.', $test_string));

@@ @@
     // Test if the link to the object/file is in HTML <head> section.
     $this->drupalGet('/admin/config/development/humanstxt');
     $tags = $this->getSession()->getPage()->getHtml();
-    $this->assertContains($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is shown in the -head- section.', $this->fileLink));
+    $this->assertStringContainsString($this->fileLink, $tags, sprintf('Humans.txt link: [%s] is shown in the -head- section.', $this->fileLink));
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertCacheTagRector
 * AssertHeaderRector
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * SpecificAssertContainsRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/humanstxt/src/Form/HumansTxtAdminSettingsForm.php:45

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   Default form array structure.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Object containing current form state.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/humanstxt/src/Controller/HumansTxtController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\humanstxt\Controller;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Controller\ControllerBase;
 use Symfony\Component\HttpFoundation\Response;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ @@
   /**
    * Humanstxt module 'humanstxt.settings' configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $humanstxtConfig;

@@ @@
   /**
    * Serves the configured humans.txt file.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The humans.txt file is a response object with 'text/plain' type.
    */
   public function content() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


 [OK] 3 files have been changed by Rector                                       

