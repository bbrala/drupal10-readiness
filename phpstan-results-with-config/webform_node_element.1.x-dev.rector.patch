diff --git a/src/Event/WebformNodeElementPreRender.php b/src/Event/WebformNodeElementPreRender.php
index 6096438..eb599b5 100644
--- a/src/Event/WebformNodeElementPreRender.php
+++ b/src/Event/WebformNodeElementPreRender.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\webform_node_element\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Event dispatched prior to each webform_node_element being rendered.
diff --git a/tests/src/Functional/WebformNodeElementFunctionalTest.php b/tests/src/Functional/WebformNodeElementFunctionalTest.php
index e29968d..7f81fab 100644
--- a/tests/src/Functional/WebformNodeElementFunctionalTest.php
+++ b/tests/src/Functional/WebformNodeElementFunctionalTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\webform_node_element\Functional;
 
+use Drupal\webform\WebformInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\webform\Entity\Webform;
 
@@ -20,7 +21,7 @@ class WebformNodeElementFunctionalTest extends BrowserTestBase {
   /**
    * Test.
    */
-  public function setup() {
+  public function setup(): void {
     parent::setup();
     $this->drupalCreateContentType(['type' => 'article', 'name' => 'Basic Article']);
   }
@@ -38,7 +39,7 @@ class WebformNodeElementFunctionalTest extends BrowserTestBase {
     ]);
 
     // Create webform.
-    /** @var \Drupal\webform\WebformInterface $webform */
+    /** @var WebformInterface $webform */
     $webform = Webform::create(['id' => 'webform_test']);
 
     $elements = [
@@ -54,7 +55,10 @@ class WebformNodeElementFunctionalTest extends BrowserTestBase {
 
     $url = $webform->toUrl()->toString();
     $html = $this->drupalGet($url);
-    $this->assertText($node_title);
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($node_title);
   }
 
 }
