modules/contrib/search_api_workspaces/search_api_workspaces.module
modules/contrib/search_api_workspaces/src/EventSubscriber/SearchApiWorkspacesSubscriber.php
modules/contrib/search_api_workspaces/src/Plugin/search_api/datasource/WorkspacesContentEntity.php
modules/contrib/search_api_workspaces/src/Plugin/search_api/datasource/WorkspacesContentEntityDeriver.php
modules/contrib/search_api_workspaces/src/Plugin/search_api/processor/SourceWorkspace.php
modules/contrib/search_api_workspaces/src/Plugin/search_api/processor/WorkspaceAssociation.php
modules/contrib/search_api_workspaces/src/Plugin/views/filter/SearchApiWorkspace.php

5 files with changes
====================

1) modules/contrib/search_api_workspaces/src/Plugin/views/filter/SearchApiWorkspace.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The workspaces manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;

@@ @@
   /**
    * The workspaces repository.
    *
-   * @var \Drupal\workspaces\WorkspaceRepository
+   * @var WorkspaceRepository
    */
   protected $workspaceRepository;

@@ @@
   /**
    * Retrieves the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity repository.
    */
   public function getEntityTypeManager() {
@@ @@
   /**
    * Sets the entity type manager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The new entity repository.
    *
    * @return $this
@@ @@
   /**
    * Retrieves the workspace manager.
    *
-   * @return \Drupal\workspaces\WorkspaceManagerInterface
+   * @return WorkspaceManagerInterface
    *   The workspace manager.
    */
   public function getWorkspaceManager() {
@@ @@
   /**
    * Sets the workspace manager.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspaceManager
+   * @param WorkspaceManagerInterface $workspaceManager
    *   The new workspace manager.
    */
   public function setWorkspaceManager(WorkspaceManagerInterface $workspaceManager) {
@@ @@
   /**
    * Retrieves the workspace repository.
    *
-   * @return \Drupal\workspaces\WorkspaceRepository
+   * @return WorkspaceRepository
    *   The workspace repository.
    */
   public function getWorkspaceRepository() {
@@ @@
   /**
    * Sets the workspace repository.
    *
-   * @param \Drupal\workspaces\WorkspaceRepository $workspaceRepository
+   * @param WorkspaceRepository $workspaceRepository
    *   The new workspace repository.
    */
   public function setWorkspaceRepository(WorkspaceRepository $workspaceRepository) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/search_api_workspaces/src/Plugin/search_api/processor/WorkspaceAssociation.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Retrieves the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity repository.
    */
   public function getEntityTypeManager() {
@@ @@
   /**
    * Sets the entity type manager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The new entity repository.
    *
    * @return $this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/search_api_workspaces/src/Plugin/search_api/processor/SourceWorkspace.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Retrieves the entity type manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity repository.
    */
   public function getEntityTypeManager() {
@@ @@
   /**
    * Sets the entity type manager.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The new entity repository.
    *
    * @return $this
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/search_api_workspaces/src/Plugin/search_api/datasource/WorkspacesContentEntity.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\search_api_workspaces\Plugin\search_api\datasource;

+use Drupal\workspaces\WorkspaceManagerInterface;
+use Drupal\search_api\IndexInterface;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Language\LanguageInterface;
@@ @@

     $items = [];

-    /** @var \Drupal\Core\Entity\ContentEntityInterface[] $entities */
+    /** @var ContentEntityInterface[] $entities */
     $entities = $this->getEntityStorage()->loadMultipleRevisions(array_keys($entity_ids));

     $allowed_bundles = $this->getBundles();
@@ @@
     $workspace_repository = \Drupal::service('workspaces.repository');
     $workspaces = $workspace_repository->loadTree();
     $workspaces['live'] = 'live';
-    /** @var \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager */
+    /** @var WorkspaceManagerInterface $workspace_manager */
     $workspace_manager = \Drupal::service('workspaces.manager');
     $initial_workspace = $workspace_manager->getActiveWorkspace();
     $item_ids = [];
@@ @@
     $has_bundles = $entity->getEntityType()->hasKey('bundle');

     // Needed for PhpStorm. See https://youtrack.jetbrains.com/issue/WI-23395.
-    /** @var \Drupal\search_api\IndexInterface[] $indexes */
+    /** @var IndexInterface[] $indexes */
     $indexes = Index::loadMultiple();

     foreach ($indexes as $index_id => $index) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/search_api_workspaces/src/EventSubscriber/SearchApiWorkspacesSubscriber.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * Alter the views handler mapping.
    *
-   * @param \Drupal\search_api\Event\MappingViewsHandlersEvent $event
+   * @param MappingViewsHandlersEvent $event
    *   The event object contains the mapping.
    */
   public function modifyViewsHandlers(MappingViewsHandlersEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [ERROR] Could not process                                                      
         "modules/contrib/search_api_workspaces/src/Plugin/search_api/datasource/W
         orkspacesContentEntityDeriver.php" file, due to:                       
         "Analyze error: "Class                                                 
         Drupal\search_api\plugin\search_api\datasource\ContentEntityDeriver not
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

