modules/contrib/urct/src/Cache/Context/ReferralPathCacheContext.php
modules/contrib/urct/src/Form/SettingsForm.php
modules/contrib/urct/src/PathProcessor/UrctPathProcessorManager.php
modules/contrib/urct/src/ReferralManager.php
modules/contrib/urct/src/ReferralUrlHandler.php
modules/contrib/urct/src/Routing/UrctRouteProvider.php
modules/contrib/urct/src/StackMiddleware/UrctPageCache.php
modules/contrib/urct/src/Tests/Functional/UrctBasicTest.php
modules/contrib/urct/src/Tests/Functional/UrctTwoReferralIDTest.php
modules/contrib/urct/src/Tests/Functional/UrctUserRegisterTest.php
modules/contrib/urct/src/UrctPathBasedBreadcrumbBuilder.php
modules/contrib/urct/tests/src/Traits/UrctHelperTrait.php
modules/contrib/urct/urct.install
modules/contrib/urct/urct.module
modules/contrib/urct/urct.tokens.inc

7 files with changes
====================

1) modules/contrib/urct/urct.tokens.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\node\NodeInterface;
+use Drupal\Core\GeneratedUrl;
 /**
  * @file
  * Builds placeholder replacement tokens for user referral related data.
@@ @@
     }
   }
   else if ($type == 'node' && !empty($data['node'])) {
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $data['node'];

     foreach ($tokens as $name => $original) {
@@ @@
     }
   }
   else if ($type == 'url' && !empty($data['url'])) {
-    /** @var \Drupal\Core\Url $url */
+    /** @var Url $url */
     $url = $data['url'];

     foreach ($tokens as $name => $original) {
@@ @@
     foreach ($tokens as $name => $original) {
       switch ($name) {
         case 'url-non-referral':
-          /** @var \Drupal\Core\GeneratedUrl $result */
+          /** @var GeneratedUrl $result */
           $result = Url::fromRoute('<front>', [], $url_options)->toString(TRUE);
           $bubbleable_metadata->addCacheableDependency($result);
           $url = $result->getGeneratedUrl();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/urct/src/Tests/Functional/UrctUserRegisterTest.php:40

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/urct/src/Tests/Functional/UrctTwoReferralIDTest.php:33

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/urct/src/Tests/Functional/UrctBasicTest.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/urct/src/ReferralManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\urct;

+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\PageCache\ResponsePolicy\KillSwitch;
 use Drupal\user\Entity\User;
@@ @@
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Drupal\user_referral\Event\UserReferralCookieEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Drupal\Core\Routing\LocalRedirectResponse;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\user_referral\Event\UserReferralReferralEntryEvent;
@@ @@
   /**
    * Config Factory Service Object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The kill switch.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Constructs a BookManager object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\PageCache\ResponsePolicy\KillSwitch $killSwitch
+   * @param KillSwitch $killSwitch
    *   The kill switch.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
    */
   public function __construct(ConfigFactoryInterface $config_factory, KillSwitch $killSwitch, AccountProxyInterface $account) {
@@ @@
   /**
    * Check if current request is from bot agent.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *  The request to check against for user agent string.
    * @return boolean
    *  TRUE if request is from a crawler.
@@ @@
     return $path;
   }

-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     if (\Drupal::currentUser()->isAnonymous() && $response instanceof RedirectResponse && !\Drupal::service('router.admin_context')->isAdminRoute()) {
       $target_url = $response->getTargetUrl();
@@ @@

   /**
    *
-   * @param \Drupal\user_referral\Event\UserReferralReferralEntryEvent $event
+   * @param UserReferralReferralEntryEvent $event
    *  The Event to process.
    */
   public function onReferralEntryBeingCreated(UserReferralReferralEntryEvent $event) {
@@ @@
   /**
    * Performs a redirect if the URL not end with Referral ID.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The Event to process.
    */
-  public function onKernelRequestRedirect(GetResponseEvent $event) {
+  public function onKernelRequestRedirect(RequestEvent $event) {
     if (\Drupal::currentUser()->isAuthenticated()) {
       // Skip for logged in users.
       return;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/urct/src/PathProcessor/UrctPathProcessorManager.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Adds an inbound processor object to the $inboundProcessors property.
    *
-   * @param \Drupal\Core\PathProcessor\InboundPathProcessorInterface $processor
+   * @param InboundPathProcessorInterface $processor
    *   The processor object to add.
    * @param int $priority
    *   The priority of the processor being added.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/urct/src/Cache/Context/ReferralPathCacheContext.php:17

    ---------- begin diff ----------
@@ @@

   /**
    * ReferramManager service object
-   * 
-   * @var \Drupal\urct\ReferralManager
+   *
+   * @var ReferralManager
    */
   protected $referralManager;

@@ @@
   /**
    * Constructs a new UserCacheContext service.
    *
-   * @param \Drupal\urct\ReferralManager $referralManager
+   * @param ReferralManager $referralManager
    *   The current user.
    */
   public function __construct(ReferralManager $referral_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 7 files have been changed by Rector                                       

