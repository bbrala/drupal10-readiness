modules/contrib/filehash/filehash.install
modules/contrib/filehash/filehash.module
modules/contrib/filehash/filehash.tokens.inc
modules/contrib/filehash/src/Batch/CleanBatch.php
modules/contrib/filehash/src/Batch/GenerateBatch.php
modules/contrib/filehash/src/Commands/FileHashCommands.php
modules/contrib/filehash/src/EventSubscriber/FileHashConfigSubscriber.php
modules/contrib/filehash/src/FileHash.php
modules/contrib/filehash/src/FileHashInterface.php
modules/contrib/filehash/src/Form/FileHashCleanForm.php
modules/contrib/filehash/src/Form/FileHashConfigForm.php
modules/contrib/filehash/src/Form/FileHashGenerateForm.php
modules/contrib/filehash/src/Plugin/Field/FieldFormatter/FileHashFormatter.php
modules/contrib/filehash/src/Plugin/Field/FieldFormatter/IdenticonFormatter.php
modules/contrib/filehash/src/Plugin/Field/FieldFormatter/TableFormatter.php
modules/contrib/filehash/src/Plugin/Field/FieldType/FileHashItem.php
modules/contrib/filehash/tests/modules/filehash_test.module
modules/contrib/filehash/tests/src/Functional/DrushTest.php
modules/contrib/filehash/tests/src/Functional/FileHashTest.php
modules/contrib/filehash/tests/src/Functional/FileHashTestInterface.php
modules/contrib/filehash/tests/src/Functional/OriginalFileHashTest.php
modules/contrib/filehash/tests/src/Kernel/FileHashTest.php

12 files with changes
=====================

1) modules/contrib/filehash/tests/src/Functional/FileHashTest.php:72

    ---------- begin diff ----------
@@ @@

   /**
    * Tests the table with file hashes field formatter.
+   * @doesNotPerformAssertions
    */
   public function testFileHashField(): void {
     $field_name = strtolower($this->randomMachineName());
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/filehash/tests/src/Functional/DrushTest.php:25

    ---------- begin diff ----------
@@ @@

   /**
    * Tests drush commands.
+   * @doesNotPerformAssertions
    */
   public function testCommands(): void {
     $this->drush('filehash:generate');
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/filehash/src/Plugin/Field/FieldFormatter/TableFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\filehash\Plugin\Field\FieldFormatter;

+use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The File Hash service.
    *
-   * @var \Drupal\filehash\FileHashInterface
+   * @var FileHashInterface
    */
   public $fileHash;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param mixed[] $settings
    *   The formatter settings.
@@ @@
    *   The view mode.
    * @param mixed[] $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\filehash\FileHashInterface $filehash
+   * @param FileHashInterface $filehash
    *   File hash service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, FileHashInterface $filehash) {
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The container.
    * @param mixed[] $configuration
    *   Formatter configuration.
@@ @@
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = [];

-    /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
+    /** @var EntityReferenceFieldItemListInterface $items */
     if ($files = $this->getEntitiesToView($items, $langcode)) {
       $header = [
         $this->t('Attachment'),
@@ @@
    *
    * @param mixed[] $form
    *   Renderable settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed[]
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/filehash/src/Plugin/Field/FieldFormatter/IdenticonFormatter.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return mixed[]
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/filehash/src/Plugin/Field/FieldFormatter/FileHashFormatter.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return mixed[]
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/filehash/src/Form/FileHashGenerateForm.php:51

    ---------- begin diff ----------
@@ @@
    *
    * @param mixed[] $form
    *   Renderable form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/filehash/src/Form/FileHashConfigForm.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * Deleted fields repository.
    *
-   * @var \Drupal\Core\Field\DeletedFieldsRepositoryInterface
+   * @var DeletedFieldsRepositoryInterface
    */
   protected $deletedFieldsRepository;

@@ @@
   /**
    * File Hash service.
    *
-   * @var \Drupal\filehash\FileHashInterface
+   * @var FileHashInterface
    */
   protected $fileHash;

@@ @@
   /**
    * Stores a module manager.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    *
    * @param mixed[] $form
    *   Renderable form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed[]
@@ @@
    *
    * @param mixed[] $form
    *   Renderable form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function validateForm(array &$form, FormStateInterface $form_state): void {
@@ @@
    *
    * @param mixed[] $form
    *   Renderable form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/filehash/src/Form/FileHashCleanForm.php:23

    ---------- begin diff ----------
@@ @@
    *
    * @param mixed[] $form
    *   Renderable form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed[]
@@ @@
    *
    * @param mixed[] $form
    *   Renderable form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/filehash/src/FileHashInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\filehash;

+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\file\FileInterface;

 /**
@@ @@
   /**
    * Implements hook_entity_base_field_info().
    *
-   * @return \Drupal\Core\Field\BaseFieldDefinition[]
+   * @return BaseFieldDefinition[]
    *   Array of base field definitions.
    */
   public function entityBaseFieldInfo(): array;
@@ @@
    *
    * Generates hash if it does not already exist for the file.
    *
-   * @param \Drupal\file\FileInterface[] $files
+   * @param FileInterface[] $files
    *   Array of file entities.
    */
   public function entityStorageLoad(array $files): void;
@@ @@
   /**
    * Calculates the file hashes and sets values in the file object.
    *
-   * @param \Drupal\file\FileInterface $file
+   * @param FileInterface $file
    *   A file object.
    * @param string|null $column
    *   File hash algorithm identifier.
@@ @@
   /**
    * Checks that file is not a duplicate.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Array of validation errors.
    */
   public function validateDedupe(FileInterface $file, bool $strict = FALSE, bool $original = FALSE): array;
@@ @@
   /**
    * Returns array of field descriptions.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Field descriptions.
    */
   public static function descriptions(): array;
@@ @@
   /**
    * Returns array of field labels.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Field labels.
    */
   public static function labels(): array;
@@ @@
   /**
    * Returns array of human-readable hash algorithm names.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Hash algorithm names.
    */
   public static function names(): array;
@@ @@
   /**
    * Returns array of field descriptions.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Field descriptions.
    */
   public static function originalDescriptions(): array;
@@ @@
   /**
    * Returns array of field labels.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Field labels.
    */
   public static function originalLabels(): array;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/filehash/src/FileHash.php:54

    ---------- begin diff ----------
@@ @@
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The current user making the request.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The entity definition update manager.
    *
-   * @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface
+   * @var EntityDefinitionUpdateManagerInterface
    */
   protected $entityDefinitionUpdateManager;

@@ @@
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Constructs the File Hash service.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory object.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface $entity_definition_update_manager
+   * @param EntityDefinitionUpdateManagerInterface $entity_definition_update_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountInterface $current_user, EntityDefinitionUpdateManagerInterface $entity_definition_update_manager, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


11) modules/contrib/filehash/src/EventSubscriber/FileHashConfigSubscriber.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The cache tags invalidator.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;

@@ @@
   /**
    * The File Hash service.
    *
-   * @var \Drupal\filehash\FileHashInterface
+   * @var FileHashInterface
    */
   protected $fileHash;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs the filehashConfigSubscriber.
    *
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache_tags_invalidator
+   * @param CacheTagsInvalidatorInterface $cache_tags_invalidator
    *   The cache tags invalidator.
-   * @param \Drupal\filehash\FileHashInterface $filehash
+   * @param FileHashInterface $filehash
    *   The File Hash service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(CacheTagsInvalidatorInterface $cache_tags_invalidator, FileHashInterface $filehash, ModuleHandlerInterface $module_handler) {
@@ @@
   /**
    * Updates File Hash schema when needed.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The ConfigCrudEvent to process.
    */
   public function onSave(ConfigCrudEvent $event): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


12) modules/contrib/filehash/filehash.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * @file
  * Generate hashes for each uploaded file.
@@ @@
 /**
  * Checks that file is not a duplicate.
  *
- * @param \Drupal\file\FileInterface $file
+ * @param FileInterface $file
  *   File entity.
  * @param bool $strict
  *   Whether or not strict dedupe is enabled.
@@ @@
  * @param bool $original
  *   Whether or not the original file hash should be checked.
  *
- * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+ * @return TranslatableMarkup[]
  *   Array of validation errors.
  */
 function filehash_validate_dedupe(FileInterface $file, $strict = FALSE, $original = FALSE): array {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 12 files have been changed by Rector                                      

