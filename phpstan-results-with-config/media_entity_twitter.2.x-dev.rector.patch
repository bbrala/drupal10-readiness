diff --git a/media_entity_twitter.install b/media_entity_twitter.install
index 6160b81..50e1c99 100644
--- a/media_entity_twitter.install
+++ b/media_entity_twitter.install
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Extension\ModuleExtensionList;
 /**
  * @file
  * Install, uninstall and update hooks for Media entity Twitter module.
@@ -11,7 +12,7 @@ use Drupal\Core\File\FileSystemInterface;
  * Implements hook_install().
  */
 function media_entity_twitter_install() {
-  /** @var \Drupal\Core\Extension\ModuleExtensionList $extension_list */
+  /** @var ModuleExtensionList $extension_list */
   $extension_list = \Drupal::service("extension.list.module");
   $source = dirname($extension_list->getPathname('media_entity_twitter')) . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
diff --git a/src/Form/TwitterMediaLibraryAddForm.php b/src/Form/TwitterMediaLibraryAddForm.php
index 93486dc..9263b70 100644
--- a/src/Form/TwitterMediaLibraryAddForm.php
+++ b/src/Form/TwitterMediaLibraryAddForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\media_entity_twitter\Form;
 
+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ -73,7 +74,7 @@ class TwitterMediaLibraryAddForm extends AddFormBase {
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addButtonSubmit(array $form, FormStateInterface $form_state) {
@@ -83,10 +84,10 @@ class TwitterMediaLibraryAddForm extends AddFormBase {
   /**
    * Returns the definition of the source field for a media type.
    *
-   * @param \Drupal\media\MediaTypeInterface $media_type
+   * @param MediaTypeInterface $media_type
    *   The media type to get the source definition for.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface|null
+   * @return FieldDefinitionInterface|null
    *   The field definition.
    */
   protected function getSourceFieldDefinition(MediaTypeInterface $media_type) {
diff --git a/src/Plugin/Field/FieldFormatter/TwitterEmbedFormatter.php b/src/Plugin/Field/FieldFormatter/TwitterEmbedFormatter.php
index 8399a49..9f24016 100644
--- a/src/Plugin/Field/FieldFormatter/TwitterEmbedFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TwitterEmbedFormatter.php
@@ -65,7 +65,7 @@ class TwitterEmbedFormatter extends FormatterBase {
   /**
    * Extracts the embed code from a field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The field item.
    *
    * @return string|null
diff --git a/src/Plugin/media/Source/Twitter.php b/src/Plugin/media/Source/Twitter.php
index 6dc9970..ca7e181 100644
--- a/src/Plugin/media/Source/Twitter.php
+++ b/src/Plugin/media/Source/Twitter.php
@@ -39,28 +39,28 @@ class Twitter extends MediaSourceBase implements MediaSourceFieldConstraintsInte
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The tweet fetcher.
    *
-   * @var \Drupal\media_entity_twitter\TweetFetcherInterface
+   * @var TweetFetcherInterface
    */
   protected $tweetFetcher;
 
   /**
    * The logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -101,21 +101,21 @@ class Twitter extends MediaSourceBase implements MediaSourceFieldConstraintsInte
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Entity field manager service.
-   * @param \Drupal\Core\Field\FieldTypePluginManagerInterface $field_type_manager
+   * @param FieldTypePluginManagerInterface $field_type_manager
    *   Config field type manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   Config factory service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\media_entity_twitter\TweetFetcherInterface $tweet_fetcher
+   * @param TweetFetcherInterface $tweet_fetcher
    *   The tweet fetcher.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $logger
+   * @param LoggerChannelInterface $logger
    *   The logger channel.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, EntityFieldManagerInterface $entity_field_manager, FieldTypePluginManagerInterface $field_type_manager, ConfigFactoryInterface $config_factory, RendererInterface $renderer, TweetFetcherInterface $tweet_fetcher, LoggerChannelInterface $logger, FileSystemInterface $file_system) {
@@ -397,7 +397,7 @@ class Twitter extends MediaSourceBase implements MediaSourceFieldConstraintsInte
    *
    * @param mixed $id
    *   The tweet ID.
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   The media entity.
    * @param string|null $media_url
    *   The URL of the media (i.e., photo, video, etc.) associated with the
@@ -437,7 +437,7 @@ class Twitter extends MediaSourceBase implements MediaSourceFieldConstraintsInte
   /**
    * Runs preg_match on embed code/URL.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media object.
    *
    * @return array|bool
diff --git a/src/TweetFetcher.php b/src/TweetFetcher.php
index 6c72f99..77a377d 100644
--- a/src/TweetFetcher.php
+++ b/src/TweetFetcher.php
@@ -14,7 +14,7 @@ class TweetFetcher implements TweetFetcherInterface {
   /**
    * The optional cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
@@ -35,7 +35,7 @@ class TweetFetcher implements TweetFetcherInterface {
   /**
    * TweetFetcher constructor.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface|null $cache
+   * @param CacheBackendInterface|null $cache
    *   (optional) A cache bin for storing fetched tweets.
    */
   public function __construct(CacheBackendInterface $cache = NULL) {
diff --git a/src/TweetFetcherInterface.php b/src/TweetFetcherInterface.php
index 037cd4b..b5c7d9e 100644
--- a/src/TweetFetcherInterface.php
+++ b/src/TweetFetcherInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\media_entity_twitter;
 
+use Drupal\media_entity_twitter\Exception\TwitterApiException;
 /**
  * Defines a wrapper around the Twitter API.
  */
@@ -16,7 +17,7 @@ interface TweetFetcherInterface {
    * @return array
    *   The tweet information.
    *
-   * @throws \Drupal\media_entity_twitter\Exception\TwitterApiException
+   * @throws TwitterApiException
    *   If the Twitter API returns errors in the response.
    */
   public function fetchTweet($id);
diff --git a/tests/src/Kernel/ThumbnailTest.php b/tests/src/Kernel/ThumbnailTest.php
index 15a59f7..4a74563 100644
--- a/tests/src/Kernel/ThumbnailTest.php
+++ b/tests/src/Kernel/ThumbnailTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\media_entity_twitter\Kernel;
 
+use Drupal\media\MediaInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
@@ -21,21 +22,21 @@ class ThumbnailTest extends KernelTestBase {
   /**
    * The mocked tweet fetcher.
    *
-   * @var \Drupal\media_entity_twitter\TweetFetcherInterface
+   * @var TweetFetcherInterface
    */
   protected $tweetFetcher;
 
   /**
    * The plugin under test.
    *
-   * @var \Drupal\media_entity_twitter\Plugin\media\Source\Twitter
+   * @var Twitter
    */
   protected $plugin;
 
   /**
    * A tweet media entity.
    *
-   * @var \Drupal\media\MediaInterface
+   * @var MediaInterface
    */
   protected $entity;
 
