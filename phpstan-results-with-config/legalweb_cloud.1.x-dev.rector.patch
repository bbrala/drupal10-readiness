diff --git a/legalweb_cloud.module b/legalweb_cloud.module
index 021c467..62ecb81 100644
--- a/legalweb_cloud.module
+++ b/legalweb_cloud.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\Core\Render\BubbleableMetadata;
+use Drupal\Core\Render\Markup;
 /**
  * @file
  * Contains legalweb.module.
@@ -84,7 +86,7 @@ function legalweb_cloud_token_info() {
   return $info;
 }
 
-function legalweb_cloud_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
+function legalweb_cloud_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
   if ($type !== 'legalweb_cloud') {
     return [];
   }
@@ -95,11 +97,11 @@ function legalweb_cloud_tokens($type, $tokens, array $data, array $options, \Dru
   foreach ($tokens as $name => $original) {
     switch ($name) {
       case 'imprint':
-        $replacements[$original] = \Drupal\Core\Render\Markup::create($manager->getImprintHTML($langcode));
+        $replacements[$original] = Markup::create($manager->getImprintHTML($langcode));
         break;
 
       case 'data_privacy':
-        $replacements[$original] = \Drupal\Core\Render\Markup::create($manager->getDataPrivacyHTML($langcode));
+        $replacements[$original] = Markup::create($manager->getDataPrivacyHTML($langcode));
         break;
 
       default:
@@ -187,4 +189,4 @@ function _legalweb_cloud_should_attach() {
   }
 
   return TRUE;
-}
\ No newline at end of file
+}
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index eb9f64e..7899c2d 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\legalweb_cloud\Form;
 
+use Drupal\Core\ProxyClass\Routing\RouteBuilder;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -16,25 +17,25 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Managing class for rebuilding the router table.
    *
-   * @var \Drupal\Core\ProxyClass\Routing\RouteBuilder
+   * @var RouteBuilder
    */
   protected $routeBuilder;
 
   /**
    * LegalWebCloud manager service.
    *
-   * @var \Drupal\legalweb_cloud\LWCManager
+   * @var LWCManager
    */
   protected $manager;
 
   /**
    * SettingsForm class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Core\ProxyClass\Routing\RouteBuilder $route_builder
+   * @param RouteBuilder $route_builder
    *   Managing class for rebuilding the router table.
-   * @param \Drupal\legalweb_cloud\LWCManager $manager
+   * @param LWCManager $manager
    *   LegalWebCloud manager service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, $route_builder, LWCManager $manager) {
diff --git a/src/LWCManager.php b/src/LWCManager.php
index 13cf9fd..09c1c1b 100644
--- a/src/LWCManager.php
+++ b/src/LWCManager.php
@@ -4,6 +4,7 @@
 namespace Drupal\legalweb_cloud;
 
 
+use Drupal\Core\GeneratedUrl;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Http\ClientFactory;
@@ -227,7 +228,7 @@ class LWCManager {
   /**
    * Generate Callback URL
    *
-   * @return \Drupal\Core\GeneratedUrl|string
+   * @return GeneratedUrl|string
    */
   public function getCallbackUrl() {
     if (empty($this->callback_url)) {
diff --git a/src/Routing/DynamicRoutes.php b/src/Routing/DynamicRoutes.php
index c75952d..4eb8990 100644
--- a/src/Routing/DynamicRoutes.php
+++ b/src/Routing/DynamicRoutes.php
@@ -21,7 +21,7 @@ class DynamicRoutes implements ContainerInjectionInterface {
   /**
    * DynamicBlockPages constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
     $this->config = $config_factory->get(LWCManager::SETTINGS);
