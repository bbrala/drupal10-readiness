modules/contrib/wisski/wisski.module
modules/contrib/wisski/wisski_adapter_rdf/src/Plugin/wisski_salz/Engine/Sparql11RdfEngineWithPB.php
modules/contrib/wisski/wisski_adapter_skos/src/Plugin/wisski_salz/Engine/WisskiSkosEngine.php
modules/contrib/wisski/wisski_adapter_skos/src/Query/Query.php
modules/contrib/wisski/wisski_adapter_skos/wisski_adapter_skos.module
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Controller/Sparql11AutocompleteController.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Controller/Sparql11EndpointController.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Controller/Sparql11TriplesTabController.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEidFormatter.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiFullTextFormatter.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiLinkFormatter.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Plugin/wisski_salz/Engine/Sparql11EngineWithPB.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Query/Query.php
modules/contrib/wisski/wisski_adapter_sparql11_pb/wisski_adapter_sparql11_pb.install
modules/contrib/wisski/wisski_adapter_sparql11_pb/wisski_adapter_sparql11_pb.module
modules/contrib/wisski/wisski_adapter_xml/src/Plugin/wisski_salz/Engine/XmlAdapterEngine.php
modules/contrib/wisski/wisski_adapter_xml/src/Query/Query.php
modules/contrib/wisski/wisski_adapter_xml/src/XmlAdapterBase.php
modules/contrib/wisski/wisski_adapters/dms/src/Plugin/wisski_salz/Engine/DmsEngine.php
modules/contrib/wisski/wisski_adapters/dms/src/Query/Query.php
modules/contrib/wisski/wisski_adapters/dms/wisski_adapter_dms.install
modules/contrib/wisski/wisski_adapters/geonames/src/Plugin/wisski_salz/Engine/GeonamesEngine.php
modules/contrib/wisski/wisski_adapters/geonames/src/Query/Query.php
modules/contrib/wisski/wisski_adapters/geonames/wisski_adapter_geonames.install
modules/contrib/wisski/wisski_adapters/getty/src/Plugin/wisski_salz/Engine/AatEngine.php
modules/contrib/wisski/wisski_adapters/getty/src/Query/Query.php
modules/contrib/wisski/wisski_adapters/getty/wisski_adapter_aat.install
modules/contrib/wisski/wisski_adapters/gnd/src/Plugin/wisski_salz/Engine/GndEngine.php
modules/contrib/wisski/wisski_adapters/gnd/src/Query/Query.php
modules/contrib/wisski/wisski_adapters/gnd/wisski_adapter_gnd.install
modules/contrib/wisski/wisski_adapters/zotero/src/Plugin/wisski_salz/Engine/ZoteroEngine.php
modules/contrib/wisski/wisski_adapters/zotero/src/Query/Query.php
modules/contrib/wisski/wisski_adapters/zotero/wisski_adapter_zotero.install
modules/contrib/wisski/wisski_apus/wisski_apus/src/AnnotationHelper.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Controller/ConfigController.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Controller/InfoboxController.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/Filter/HighlightAnnotations.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/Linkit/Attribute/Bundle.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/Linkit/Attribute/Evidence.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/Linkit/Matcher/WisskiEntityMatcher.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/wisski_pipe/Processor/EntityPickerResults.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/wisski_pipe/Processor/QueryLinkit.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/StackingLogger.php
modules/contrib/wisski/wisski_apus/wisski_apus/src/Util.php
modules/contrib/wisski/wisski_apus/wisski_apus/wisski_apus.dialog.inc
modules/contrib/wisski/wisski_apus/wisski_apus/wisski_apus.module
modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Form/EntityLinkDialog.php
modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/Annotation.php
modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/AnnotationDialog.php
modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/QuickEntityPicker.php
modules/contrib/wisski/wisski_apus/wisski_ckeditor/wisski_ckeditor.module
modules/contrib/wisski/wisski_apus/wisski_merge/src/Form/EntityMergeForm.php
modules/contrib/wisski/wisski_apus/wisski_merge/src/Merger.php
modules/contrib/wisski/wisski_apus/wisski_merge/wisski_merge.install
modules/contrib/wisski/wisski_apus/wisski_merge/wisski_merge.module
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Annotation/Processor.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Controller/Analyser.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Entity/Pipe.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Pipe/AddForm.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Pipe/EditForm.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Pipe/FormBase.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/AddForm.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/DeleteForm.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/EditForm.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/OverviewForm.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/LogPage.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/PipeInterface.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/PipeListBuilder.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/PipeManager.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Plugin/wisski_pipe/Processor/Noop.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/Plugin/wisski_pipe/Processor/RunPipe.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/ProcessorBase.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/ProcessorCollection.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/ProcessorInterface.php
modules/contrib/wisski/wisski_apus/wisski_pipe/src/ProcessorManager.php
modules/contrib/wisski/wisski_apus/wisski_pipe/wisski_pipe.module
modules/contrib/wisski/wisski_apus/wisski_textanly/src/AnnotationTrait.php
modules/contrib/wisski/wisski_apus/wisski_textanly/src/Controller/TestPage.php
modules/contrib/wisski/wisski_apus/wisski_textanly/src/Plugin/CKEditorPlugin/Analyse.php
modules/contrib/wisski/wisski_apus/wisski_textanly/src/Plugin/wisski_pipe/Processor/MultiWordAutomaton.php
modules/contrib/wisski/wisski_apus/wisski_textanly/src/Plugin/wisski_pipe/Processor/RegExp.php
modules/contrib/wisski/wisski_apus/wisski_textanly/src/Plugin/wisski_pipe/Processor/SetLang.php
modules/contrib/wisski/wisski_apus/wisski_textanly/src/Plugin/wisski_pipe/Processor/XHtml.php
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.admin.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.anno_ids.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.common.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.datetime.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.filter.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.mw_automaton.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.person.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.regexp.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.rerank.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.sentence_splitter.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.set_lang.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.tokenizer.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.vocab.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.xhtml.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.install
modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.module
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.admin.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.anno2token.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.datetime.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.dependency.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.filter.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.mw_automaton.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.regexp.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.remove_cols.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.rerank.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.sentence_splitter.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.set_lang.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.tagger.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.tokenizer.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.vocab.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.xhtml.inc
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.install
modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.module
modules/contrib/wisski/wisski_apus/wisski_triplify/src/Form/AdminTriplifyForm.php
modules/contrib/wisski/wisski_apus/wisski_triplify/src/Plugin/wisski_pipe/Processor/TriplifyLinks.php
modules/contrib/wisski/wisski_apus/wisski_triplify/src/Plugin/wisski_pipe/Processor/TriplifyStandard.php
modules/contrib/wisski/wisski_apus/wisski_triplify/src/TriplifyManager.php
modules/contrib/wisski/wisski_apus/wisski_triplify/wisski_triplify.install
modules/contrib/wisski/wisski_apus/wisski_triplify/wisski_triplify.module
modules/contrib/wisski/wisski_core/src/ContextProvider/WisskiIndividualContextProvider.php
modules/contrib/wisski/wisski_core/src/Controller/ActionController.php
modules/contrib/wisski/wisski_core/src/Controller/TitleGenerationController.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiBundleAccessHandler.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiBundleListBuilder.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiBundleMenuController.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityAccessHandler.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityController.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityListBuilder.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityListController.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityLodController.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityViewForwarder.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiNamespaceController.php
modules/contrib/wisski/wisski_core/src/Controller/WisskiTitleAutocompletion.php
modules/contrib/wisski/wisski_core/src/Controller/wisski_coreController.php
modules/contrib/wisski/wisski_core/src/Entity/Render/WisskiEntityFieldRenderer.php
modules/contrib/wisski/wisski_core/src/Entity/WisskiBundle.php
modules/contrib/wisski/wisski_core/src/Entity/WisskiEntity.php
modules/contrib/wisski/wisski_core/src/Form/WisskiBundleDeleteForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiBundleForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiConfigForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiDefaultTitlePatternForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiEntityDeleteForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiEntityForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiIndListForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualListConfirmFormDelete.php
modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualListConfirmFormDeleteAll.php
modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualRevisionDeleteForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualRevisionRevertForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualRevisionRevertTranslationForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiInlineEntityForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiNamespaceDeleteConfirmForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiNamespaceEditConfirmForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiOntologyForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiTitlePatternDeleteForm.php
modules/contrib/wisski/wisski_core/src/Form/WisskiTitlePatternForm.php
modules/contrib/wisski/wisski_core/src/Plugin/Action/GenerateTitle.php
modules/contrib/wisski/wisski_core/src/Plugin/Menu/DestinationAction.php
modules/contrib/wisski/wisski_core/src/Plugin/Search/WisskiEntitySearch.php
modules/contrib/wisski/wisski_core/src/Plugin/views/argument/Bundle.php
modules/contrib/wisski/wisski_core/src/Plugin/views/argument/StringArgument.php
modules/contrib/wisski/wisski_core/src/Plugin/views/display/RestExport.php
modules/contrib/wisski/wisski_core/src/Plugin/views/field/EntityField.php
modules/contrib/wisski/wisski_core/src/Plugin/views/field/Field.php
modules/contrib/wisski/wisski_core/src/Plugin/views/field/PreviewImage.php
modules/contrib/wisski/wisski_core/src/Plugin/views/field/Standard.php
modules/contrib/wisski/wisski_core/src/Plugin/views/field/WisskiTitle.php
modules/contrib/wisski/wisski_core/src/Plugin/views/filter/Bundle.php
modules/contrib/wisski/wisski_core/src/Plugin/views/filter/FieldNumeric.php
modules/contrib/wisski/wisski_core/src/Plugin/views/filter/FieldString.php
modules/contrib/wisski/wisski_core/src/Plugin/views/filter/PathString.php
modules/contrib/wisski/wisski_core/src/Plugin/views/query/WisskiIndividualQuery.php
modules/contrib/wisski/wisski_core/src/Query/QueryFactory.php
modules/contrib/wisski/wisski_core/src/Routing/WisskiRouteSubscriber.php
modules/contrib/wisski/wisski_core/src/WisskiBundleInterface.php
modules/contrib/wisski/wisski_core/src/WisskiCacheHelper.php
modules/contrib/wisski/wisski_core/src/WisskiEntityInterface.php
modules/contrib/wisski/wisski_core/src/WisskiEntityListBuilder.php
modules/contrib/wisski/wisski_core/src/WisskiEntityViewBuilder.php
modules/contrib/wisski/wisski_core/src/WisskiEntityViewsData.php
modules/contrib/wisski/wisski_core/src/WisskiHelper.php
modules/contrib/wisski/wisski_core/src/WisskiIndividualListDbActions.php
modules/contrib/wisski/wisski_core/src/WisskiIndividualListDbActionsInterface.php
modules/contrib/wisski/wisski_core/src/WisskiInvalidArgumentException.php
modules/contrib/wisski/wisski_core/src/WisskiNameSpaceOperator.php
modules/contrib/wisski/wisski_core/src/WisskiPermissions.php
modules/contrib/wisski/wisski_core/src/WisskiStorage.php
modules/contrib/wisski/wisski_core/src/WisskiStorageInterface.php
modules/contrib/wisski/wisski_core/src/WisskiToolbarHandler.php
modules/contrib/wisski/wisski_core/wisski_core.install
modules/contrib/wisski/wisski_core/wisski_core.module
modules/contrib/wisski/wisski_data/export_to_table/src/Form/FileUploadForm.php
modules/contrib/wisski/wisski_data/wisski_authfile/src/Plugin/Action/CompleteAuthorityEntry.php
modules/contrib/wisski/wisski_data/wisski_authfile/src/Plugin/Action/UpdateAuthorityUri.php
modules/contrib/wisski/wisski_data/wisski_authfile/src/Plugin/wisski_salz/Engine/LodEngine.php
modules/contrib/wisski/wisski_data/wisski_authfile/src/Plugin/wisski_salz/Engine/LodSparqlEngine.php
modules/contrib/wisski/wisski_data/wisski_authfile/src/Query/Query.php
modules/contrib/wisski/wisski_data/wisski_authfile/wisski_authfile.module
modules/contrib/wisski/wisski_data/wisski_bulkedit/src/Entity/Table.php
modules/contrib/wisski/wisski_data/wisski_bulkedit/src/Form/FileUploadForm.php
modules/contrib/wisski/wisski_data/wisski_bulkedit/src/Form/Table/AddForm.php
modules/contrib/wisski/wisski_data/wisski_bulkedit/src/TableInterface.php
modules/contrib/wisski/wisski_data/wisski_bulkedit/src/TableListBuilder.php
modules/contrib/wisski/wisski_data/wisski_bulkedit/wisski_bulkedit.module
modules/contrib/wisski/wisski_data_merge/src/Form/WisskiDataMergeForm.php
modules/contrib/wisski/wisski_date_field_extractor/src/Plugin/Field/FieldFormatter/WisskiDateFieldDefaultFormatter.php
modules/contrib/wisski/wisski_date_field_extractor/src/Plugin/Field/FieldType/WisskiDateFieldItem.php
modules/contrib/wisski/wisski_date_field_extractor/src/Plugin/Field/FieldType/WisskiVerbalDateFieldItem.php
modules/contrib/wisski/wisski_date_field_extractor/src/Plugin/Field/FieldWidget/WisskiDateFieldDefaultWidget.php
modules/contrib/wisski/wisski_date_field_extractor/wisski_date_field_extractor.module
modules/contrib/wisski/wisski_doi/src/Controller/WisskiDoiAdministration.php
modules/contrib/wisski/wisski_doi/src/Exception/WisskiDoiSettingsNotFoundException.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiBatch4CurrentRevisionsConfirmForm.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiBatch4StaticRevisionsConfirmForm.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiBatchForm.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormDeleteDoi.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForRevision.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForStaticRevision.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormUpdateMetadata.php
modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiRepositorySettings.php
modules/contrib/wisski/wisski_doi/src/WisskiDoiActions.php
modules/contrib/wisski/wisski_doi/src/WisskiDoiActionsInterface.php
modules/contrib/wisski/wisski_doi/src/WisskiDoiDataciteRestActions.php
modules/contrib/wisski/wisski_doi/src/WisskiDoiDbActions.php
modules/contrib/wisski/wisski_doi/src/WisskiDoiDbActionsInterface.php
modules/contrib/wisski/wisski_doi/src/WisskiDoiRestActionsInterface.php
modules/contrib/wisski/wisski_doi/wisski_doi.install
modules/contrib/wisski/wisski_doi/wisski_doi.module
modules/contrib/wisski/wisski_duplicate/src/Form/WisskiDuplicateForm.php
modules/contrib/wisski/wisski_editlayout/wisski_editlayout.module
modules/contrib/wisski/wisski_geofield/src/Plugin/Field/FieldWidget/GeofieldLatLonOneFieldWidget.php
modules/contrib/wisski/wisski_iip_image/src/Controller/WisskiIIIFController.php
modules/contrib/wisski/wisski_iip_image/src/Form/WisskiIIIFSettings.php
modules/contrib/wisski/wisski_iip_image/src/Plugin/Field/FieldFormatter/WisskiIIPImageFormatter.php
modules/contrib/wisski/wisski_iip_image/src/Plugin/ImageEffect/WisskiPyramidalTiffImageEffect.php
modules/contrib/wisski/wisski_iip_image/src/Plugin/ImageToolkit/Operation/imagemagick/Pyramid.php
modules/contrib/wisski/wisski_iip_image/wisski_iip_image.module
modules/contrib/wisski/wisski_jit/src/Controller/Sparql11GraphTabController.php
modules/contrib/wisski/wisski_jit/src/Form/GraphModalForm.php
modules/contrib/wisski/wisski_linkblock/src/Plugin/Block/WisskiLinkblock.php
modules/contrib/wisski/wisski_mirador/src/Controller/MiradorController.php
modules/contrib/wisski/wisski_mirador/src/Controller/WisskiMiradorApiController.php
modules/contrib/wisski/wisski_mirador/src/Plugin/views/style/WisskiMirador.php
modules/contrib/wisski/wisski_mirador/wisski_mirador.install
modules/contrib/wisski/wisski_mirador/wisski_mirador.module
modules/contrib/wisski/wisski_mirador/wisski_mirador.theme.inc
modules/contrib/wisski/wisski_mirador_block/src/Plugin/Block/blockmirador.php
modules/contrib/wisski/wisski_odbc_import/src/Form/WisskiODBCImportForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Controller/Exporter.php
modules/contrib/wisski/wisski_pathbuilder/src/Controller/WisskiPathListBuilder.php
modules/contrib/wisski/wisski_pathbuilder/src/Controller/WisskiPathbuilderController.php
modules/contrib/wisski/wisski_pathbuilder/src/Controller/WisskiPathbuilderListBuilder.php
modules/contrib/wisski/wisski_pathbuilder/src/Entity/WisskiPathEntity.php
modules/contrib/wisski/wisski_pathbuilder/src/Entity/WisskiPathbuilderEntity.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/ExportAllConfirmForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/ExporterForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/ImporterForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/PathUsageForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiFieldDeleteForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathDeleteForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathDeleteFormLocal.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathDuplicateForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathbuilderAddExistingForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathbuilderConfigureFieldForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathbuilderDeleteForm.php
modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathbuilderForm.php
modules/contrib/wisski/wisski_pathbuilder/src/PathbuilderEngineInterface.php
modules/contrib/wisski/wisski_pathbuilder/src/PathbuilderManager.php
modules/contrib/wisski/wisski_pathbuilder/src/WisskiPathInterface.php
modules/contrib/wisski/wisski_pathbuilder/src/WisskiPathbuilderInterface.php
modules/contrib/wisski/wisski_pathbuilder/wisski_pathbuilder.module
modules/contrib/wisski/wisski_salz/src/AdapterHelper.php
modules/contrib/wisski/wisski_salz/src/AdapterInterface.php
modules/contrib/wisski/wisski_salz/src/AdapterListBuilder.php
modules/contrib/wisski/wisski_salz/src/Annotation/Engine.php
modules/contrib/wisski/wisski_salz/src/Controller/wisski_salzController.php
modules/contrib/wisski/wisski_salz/src/Controller/wisski_salzTriplesTabController.php
modules/contrib/wisski/wisski_salz/src/EngineBase.php
modules/contrib/wisski/wisski_salz/src/EngineCollection.php
modules/contrib/wisski/wisski_salz/src/EngineInterface.php
modules/contrib/wisski/wisski_salz/src/EngineManager.php
modules/contrib/wisski/wisski_salz/src/Entity/Adapter.php
modules/contrib/wisski/wisski_salz/src/Form/Adapter/AddForm.php
modules/contrib/wisski/wisski_salz/src/Form/Adapter/AddOverviewForm.php
modules/contrib/wisski/wisski_salz/src/Form/Adapter/EditForm.php
modules/contrib/wisski/wisski_salz/src/Form/Adapter/FormBase.php
modules/contrib/wisski/wisski_salz/src/NonWritableEngineBase.php
modules/contrib/wisski/wisski_salz/src/Plugin/Action/MultiSparqlQuery.php
modules/contrib/wisski/wisski_salz/src/Plugin/Action/SparqlQuery.php
modules/contrib/wisski/wisski_salz/src/Plugin/views/query/WisskiViewsQueryPlugin.php
modules/contrib/wisski/wisski_salz/src/Plugin/wisski_salz/Engine/Sparql11Engine.php
modules/contrib/wisski/wisski_salz/src/Plugin/wisski_salz/Engine/WissKI_Sparql_Client.php
modules/contrib/wisski/wisski_salz/src/Query/ASTAnnotator.php
modules/contrib/wisski/wisski_salz/src/Query/ASTBuilder.php
modules/contrib/wisski/wisski_salz/src/Query/Condition.php
modules/contrib/wisski/wisski_salz/src/Query/ConditionAggregate.php
modules/contrib/wisski/wisski_salz/src/Query/Debuggable.php
modules/contrib/wisski/wisski_salz/src/Query/Query.php
modules/contrib/wisski/wisski_salz/src/Query/QueryPlanner.php
modules/contrib/wisski/wisski_salz/src/Query/WisskiQueryBase.php
modules/contrib/wisski/wisski_salz/src/Query/WisskiQueryDelegator.php
modules/contrib/wisski/wisski_salz/src/RdfSparqlUtil.php
modules/contrib/wisski/wisski_salz/src/SparqlEndpointEngineInterface.php
modules/contrib/wisski/wisski_salz/wisski_salz.install
modules/contrib/wisski/wisski_wave/wisski_wave.install
modules/contrib/wisski/wisski_wave/wisski_wave.module

92 files with changes
=====================

1) modules/contrib/wisski/wisski_salz/src/Query/WisskiQueryDelegator.php:3

    ---------- begin diff ----------
@@ @@

 # TODO: Check if we can generalize special cases for query classes!
 # perhaps we can add semantic methods for each of them
-
+use Drupal\wisski_adapter_dms\Query\Query;
 use Drupal\wisski_core\WisskiCacheHelper;
 use Drupal\wisski_salz\AdapterHelper;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
       // MyF: We have to test this in a later step; so first of all we remove this in order
       if (WISSKI_DEVEL) \Drupal::logger('wisski_query_delegator')->debug("Query Strategy: In-Memory Pagination");
       foreach ($this->relevant_adapter_queries as $adapter_id => $query) {
-        if($query instanceOf \Drupal\wisski_adapter_dms\Query\Query) {
+        if($query instanceOf Query) {
           $querytmp = $query->normalQuery();
           $querytmp->range($this->range['start'],$this->range['length']);
           $ret = $querytmp->execute();
@@ @@
     foreach ($this->relevant_adapter_queries as $adapter_id => $query) {
       
       // TODO: dms adapter
-      if($query instanceOf \Drupal\wisski_adapter_dms\Query\Query) {
+      if($query instanceOf Query) {
         $query = $query->count();

         $sub_res = $query->execute() ? : 0;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/wisski/wisski_salz/src/Query/QueryPlanner.php:164

    ---------- begin diff ----------
@@ @@
             if ($pivot == NULL || $pivot['type'] == self::TYPE_EMPTY_PLAN) {
                 $pivot = $right;
             }
-            
+
             $left = $right; // check the next plan
         }
         return $pivot;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/wisski/wisski_salz/src/Form/Adapter/AddOverviewForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_salz\Form\Adapter;

+use Drupal\wisski_salz\EngineInterface;
 use Drupal\Core\Form\FormBase as FormBase1;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Component\Plugin\ConfigurablePluginInterface;
@@ @@
   /**
    * The engine manager.
    *
-   * @var \Drupal\wisski_salz\EngineManager
+   * @var EngineManager
    */
   protected $manager;

@@ @@
   /**
    * Constructs a new AddForm.
    *
-   * @param \Drupal\wisski_salz\EngineManager $manager
+   * @param EngineManager $manager
    *   The engine manager.
    */
   public function __construct(EngineManager $manager) {
@@ @@
     //  return strnatcasecmp($a['label'], $b['label']);
     //});
     foreach ($all_plugins as $definition) {
-      /** @var \Drupal\wisski_salz\EngineInterface $plugin */
+      /** @var EngineInterface $plugin */
       $plugin = $this->manager->createInstance($definition['id']);
       $row = [
         'label' => Link::createFromRoute(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/wisski/wisski_salz/src/Entity/Adapter.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_salz\Entity;

+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\wisski_salz\AdapterInterface;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
@@ @@
    *
    * This is a convenience method.
    *
-   * @return \Drupal\wisski_salz\EngineCollection
+   * @return EngineCollection
    */
   public function getEngineCollection() {
     if (!$this->engineCollection) {
@@ @@
   /**
    * Returns the attribute manager.
    *
-   * @return \Drupal\Component\Plugin\PluginManagerInterface
+   * @return PluginManagerInterface
    *   The attribute manager.
    */
   public function getEngineManager() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/wisski/wisski_salz/src/EngineManager.php:20

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations,
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/wisski/wisski_salz/src/Annotation/Engine.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_salz\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The human readable name of the engine.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ @@
   /**
    * A description of the engine.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


7) modules/contrib/wisski/wisski_salz/src/AdapterInterface.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_salz;

+use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;

@@ @@


   /**
-   * @return \Drupal\wisski_salz\EngineInterface
+   * @return EngineInterface
    *  The engine used by this adapter
    */
   public function getEngine();
@@ @@
   public function setEngineConfig(array $configuration);

   /**
-   * @return \Drupal\Core\Plugin\DefaultSingleLazyPluginCollection
+   * @return DefaultSingleLazyPluginCollection
    *  The plugin collection with the single engine
    */
   public function getEngineCollection();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/wisski/wisski_pathbuilder/wisski_pathbuilder.module:8

    ---------- begin diff ----------
@@ @@
  * Menu arugment loader. Returns a pathbuilder entity
  *
  * @param $id
- * @return \Drupal\Core\Entity\EntityInterface|static
+ * @return EntityInterface|static
  */
- 
 function wisski_pathbuilder_load($id) {
   return WisskiPathbuilderEntity::load($id);
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


9) modules/contrib/wisski/wisski_pathbuilder/src/PathbuilderManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_pathbuilder;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * The FileRepositoryInterface service instance.
    *
-   * @var \Drupal\file\FileRepositoryInterface
+   * @var FileRepositoryInterface
    */
   protected FileRepositoryInterface $file;

@@ @@
   /**
    * Constructs form variables.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The translations service.
-   * @param \Drupal\file\FileRepositoryInterface $file
+   * @param FileRepositoryInterface $file
    *   Performs file system operations and updates database records
    *   accordingly.
    */
@@ @@
    * @return string
    *   The relative path to the current export directory.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function prepareExportDirectories(string $exportRootDir) {
     // Prepare file structure.
@@ @@
    * @return bool
    *   Sucess of the export.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function exportAllOntologies(string $ontologiesDir) {

@@ @@
   /**
    * Exports pathbuilder structure.
    *
-   * @param \Drupal\wisski_pathbuilder\Entity\WisskiPathbuilderEntity $pathbuilderEntity
+   * @param WisskiPathbuilderEntity $pathbuilderEntity
    *   The pathbuilder entity.
    * @param string $pathbuildersDir
    *   A folder with the current date inside the EXPORT_ROOT_DIR
    *   containing ontologies and pathbuilders.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function exportPathbuilder(WisskiPathbuilderEntity $pathbuilderEntity, string $pathbuildersDir) {
     // Create initial XML tree.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


10) modules/contrib/wisski/wisski_pathbuilder/src/Form/WisskiPathbuilderForm.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The FileRepositoryInterface service instance.
    *
-   * @var \Drupal\file\FileRepositoryInterface
+   * @var FileRepositoryInterface
    */
   protected FileRepositoryInterface $file;

@@ @@
   /**
    * Create service container.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ @@
   /**
    * Constructs form variables.
    *
-   * @param \Drupal\file\FileRepositoryInterface $file
+   * @param FileRepositoryInterface $file
    *   Performs file system operations and updates database records accordingly.
    */
   public function __construct(FileRepositoryInterface $file) {
@@ @@

     foreach ($files as $file) {
       // $form['export']['export'][] = array('#type' => 'link', '#title' => $file->filename, '#url' => Url::fromUri(file_create_url($file->uri)));
-      $items[] = ['#type' => 'link', '#title' => $file->filename, '#url' => Url::fromUri(file_create_url($file->uri))];
+      $items[] = ['#type' => 'link', '#title' => $file->filename, '#url' => \Drupal::service('file_url_generator')->generate($file->uri)];
     }

     $form['export']['export'] = [
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * FromUriRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/wisski/wisski_pathbuilder/src/Form/ExporterForm.php:108

    ---------- begin diff ----------
@@ @@
     $yaml = Yaml::encode($config_assemblage);
     
     // we must not use yml extension as it is blocked by htaccess
-    $file = file_save_data($yaml, "public://pb_bundle_export.yaml");
+    $file = \Drupal::service('file.repository')->writeData($yaml, "public://pb_bundle_export.yaml");
     $uri = $file->toUrl();
 #    $uri = $file->url();
 #    $link = \Drupal\Core\Link::fromTextAndUrl($uri, \Drupal\Core\Url::fromUri($uri));
    ----------- end diff -----------

Applied rules:
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/wisski/wisski_pathbuilder/src/Form/ExportAllConfirmForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_pathbuilder\Form;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The variable for the pathbuilder manager service.
    *
-   * @var \Drupal\wisski_pathbuilder\PathbuilderManager
+   * @var PathbuilderManager
    */
   private PathbuilderManager $pathbuilderManager;

@@ @@
   /**
    * Create service container.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ @@
   /**
    * Constructs form variables.
    *
-   * @param \Drupal\wisski_pathbuilder\PathbuilderManager $pathbuilderManager
+   * @param PathbuilderManager $pathbuilderManager
    *   Performs file system operations and updates database records accordingly.
    */
   public function __construct(PathbuilderManager $pathbuilderManager) {
@@ @@
   /**
    * Loads all pathbuilders and all ontologies and saves them.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/wisski/wisski_pathbuilder/src/Controller/WisskiPathbuilderListBuilder.php:36

    ---------- begin diff ----------
@@ @@
   /**
    * Gets this list's default operations.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity the operations are for.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/wisski/wisski_pathbuilder/src/Controller/WisskiPathbuilderController.php:6

    ---------- begin diff ----------
@@ @@
     
 namespace Drupal\wisski_pathbuilder\Controller;

+use Drupal\Core\Menu\MenuLinkInterface;
 use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Entity\EntityForm;
@@ @@
   protected $entityQueryFactory;

  /**
-  * The menu link manager.
-  *
-  * @var \Drupal\Core\Menu\MenuLinkManagerInterface
-  */
+   * The menu link manager.
+   *
+   * @var MenuLinkManagerInterface
+   */
   protected $menuLinkManager;

   /**
    * The pathbuilder tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $pathbuilderTree;

@@ @@
   /**
    * The link generator.
    *
-   * @var \Drupal\Core\Utility\LinkGeneratorInterface
+   * @var LinkGeneratorInterface
    */
   protected $linkGenerator;

@@ @@
   public $overviewTreeForm = array('#tree' => TRUE);

   /**
-   * Constructs a MenuForm object.
-   *
-   * @param \Drupal\Core\Entity\Query\QueryFactory $entity_query_factory
-   *   The factory for entity queries.
-   * @param \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager
-   *   The menu link manager.
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $pathbuilder_tree
-   *   The menu tree service.
-   * @param \Drupal\Core\Utility\LinkGeneratorInterface $link_generator
-   *   The link generator.
-   */
-//  public function __construct(ory, MenuLinkManagerInterface $menu_link_manager, MenuLinkTreeInterface $pathbuilder_tree, LinkGeneratorInterface $link_generator, WisskiPathbuilder $pb) {
+    * Constructs a MenuForm object.
+    *
+    * @param \Drupal\Core\Entity\Query\QueryFactory $entity_query_factory
+    *   The factory for entity queries.
+    * @param MenuLinkManagerInterface $menu_link_manager
+    *   The menu link manager.
+    * @param MenuLinkTreeInterface $pathbuilder_tree
+    *   The menu tree service.
+    * @param LinkGeneratorInterface $link_generator
+    *   The link generator.
+    */
+   //  public function __construct(ory, MenuLinkManagerInterface $menu_link_manager, MenuLinkTreeInterface $pathbuilder_tree, LinkGeneratorInterface $link_generator, WisskiPathbuilder $pb) {
    public function __construct(MenuLinkManagerInterface $menu_link_manager, MenuLinkTreeInterface $pathbuilder_tree, LinkGeneratorInterface $link_generator, MenuLinkContentStorageInterface $menu_link_content_storage, WisskiPathbuilder $pb) {
     $this->menuLinkManager = $menu_link_manager;
     $this->menuTree = $pathbuilder_tree;
@@ @@

   }
 /* BY KERSTIN    
-    foreach ($path_entities as $entity){        
-    #$tree = $this->menuTree->load($this->entity->id(), new MenuTreeParameters());
-    drupal_set_message('entity: ' . serialize($entity));
-    $menu_tree = \Drupal::menuTree();
-    $parameters = new MenuTreeParameters();   
-    $tree = $menu_tree->load(NULL, $parameters);
-    drupal_set_message('tree1: ');
-    drupal_set_message(serialize($tree));
-    // We indicate that a menu administrator is running the menu access check.
-   #  $entity->getRequest()->attributes->set('_menu_admin', TRUE);     
-    $manipulators = array(
-      array('callable' => 'menu.default_tree_manipulators:checkAccess'),
-      array('callable' => 'menu.default_tree_manipulators:generateIndexAndSort'),
-    #  array('callable' => 'toolbar_menu_navigation_links'),
-    );
-    $tree = $menu_tree->transform($tree, $manipulators);
-   #  $entity->getRequest()->attributes->set('_menu_admin', FALSE);   
-    drupal_set_message('tree2: ');
-    drupal_set_message(serialize($tree)); 
+      foreach ($path_entities as $entity){        
+      #$tree = $this->menuTree->load($this->entity->id(), new MenuTreeParameters());
+      drupal_set_message('entity: ' . serialize($entity));
+      $menu_tree = \Drupal::menuTree();
+      $parameters = new MenuTreeParameters();   
+      $tree = $menu_tree->load(NULL, $parameters);
+      drupal_set_message('tree1: ');
+      drupal_set_message(serialize($tree));
+      // We indicate that a menu administrator is running the menu access check.
+     #  $entity->getRequest()->attributes->set('_menu_admin', TRUE);     
+      $manipulators = array(
+        array('callable' => 'menu.default_tree_manipulators:checkAccess'),
+        array('callable' => 'menu.default_tree_manipulators:generateIndexAndSort'),
+      #  array('callable' => 'toolbar_menu_navigation_links'),
+      );
+      $tree = $menu_tree->transform($tree, $manipulators);
+     #  $entity->getRequest()->attributes->set('_menu_admin', FALSE);   
+      drupal_set_message('tree2: ');
+      drupal_set_message(serialize($tree)); 

-    // Determine the delta; the number of weights to be made available.
-    $count = function(array $tree) {
-    $sum = function ($carry, MenuLinkTreeElement $item) {
-        return $carry + $item->count();    
+      // Determine the delta; the number of weights to be made available.
+      $count = function(array $tree) {
+      $sum = function ($carry, MenuLinkTreeElement $item) {
+          return $carry + $item->count();    
+        };
+        return array_reduce($tree, $sum);
       };
-      return array_reduce($tree, $sum);
-    };
-    $delta = max($count($tree), 50);
-  }
-    $form['path_items'] = array(
-      '#type' => 'table',
-      '#theme' => 'table__menu_overview',
-     # '#header' => array(t('Label'), t('Machine name'), t('Weight'), t('Operations')), 
-      '#header' => array(
-        $this->t('Path'),
-        array(
-          'data' => $this->t('Enabled'),
-          'class' => array('checkbox'),
+      $delta = max($count($tree), 50);
+    }
+      $form['path_items'] = array(
+        '#type' => 'table',
+        '#theme' => 'table__menu_overview',
+       # '#header' => array(t('Label'), t('Machine name'), t('Weight'), t('Operations')), 
+        '#header' => array(
+          $this->t('Path'),
+          array(
+            'data' => $this->t('Enabled'),
+            'class' => array('checkbox'),
+          ),
+          $this->t('Weight'),
+          array(
+            'data' => $this->t('Operations'),
+            'colspan' => 3,
+          ),
         ),
-        $this->t('Weight'),
-        array(
-          'data' => $this->t('Operations'),
-          'colspan' => 3,
+        '#attributes' => array(
+          'id' => 'menu-overview',
+       # '#empty' => t('There are no items yet. <a href="@add-path-url">Add an item.</a>', array(
+       # '@add-path-url' => Url::fromRoute('entity.wisski_path.add_form'), 
+       # )), 
+         '#empty' => t('There are no WissKI Pathbuilder Paths yet.'), 
+        // TableDrag: Each array value is a list of callback arguments for
+        // drupal_add_tabledrag(). The #id of the table is automatically prepended;
+        // if there is none, an HTML ID is auto-generated.
+        '#tabledrag' => array(       
+          array(
+            'action' => 'match',
+            'relationship' => 'parent',
+            'group' => 'menu-parent',
+            'subgroup' => 'menu-parent',
+            'source' => 'menu-id',
+            'hidden' => TRUE,
+            'limit' => \Drupal::menuTree()->maxDepth() - 1,
+          ),
+          array(
+            'action' => 'order',
+            'relationship' => 'sibling',
+            'group' => 'wisski-order-weight',
+          ),
         ),
-      ),
-      '#attributes' => array(
-        'id' => 'menu-overview',
-     # '#empty' => t('There are no items yet. <a href="@add-path-url">Add an item.</a>', array(
-     # '@add-path-url' => Url::fromRoute('entity.wisski_path.add_form'), 
-     # )), 
-       '#empty' => t('There are no WissKI Pathbuilder Paths yet.'), 
-      // TableDrag: Each array value is a list of callback arguments for
-      // drupal_add_tabledrag(). The #id of the table is automatically prepended;
-      // if there is none, an HTML ID is auto-generated.
-      '#tabledrag' => array(       
-        array(
-          'action' => 'match',
-          'relationship' => 'parent',
-          'group' => 'menu-parent',
-          'subgroup' => 'menu-parent',
-          'source' => 'menu-id',
-          'hidden' => TRUE,
-          'limit' => \Drupal::menuTree()->maxDepth() - 1,
         ),
-        array(
-          'action' => 'order',
-          'relationship' => 'sibling',
-          'group' => 'wisski-order-weight',
-        ),
-      ),
-      ),
-    );
-    $path_items = $this->buildOverviewTreeForm($tree, $delta);
-    foreach (Element::children($path_items) as $id) {
-      if (isset($path_items[$id]['#item'])) {
-        $element = $path_items[$id];
+      );
+      $path_items = $this->buildOverviewTreeForm($tree, $delta);
+      foreach (Element::children($path_items) as $id) {
+        if (isset($path_items[$id]['#item'])) {
+          $element = $path_items[$id];

-        $form['path_items'][$id]['#item'] = $element['#item'];
+          $form['path_items'][$id]['#item'] = $element['#item'];

-        // TableDrag: Mark the table row as draggable.
-        $form['path_items'][$id]['#attributes'] = $element['#attributes'];
-        $form['path_items'][$id]['#attributes']['class'][] = 'draggable';
+          // TableDrag: Mark the table row as draggable.
+          $form['path_items'][$id]['#attributes'] = $element['#attributes'];
+          $form['path_items'][$id]['#attributes']['class'][] = 'draggable';

-        // TableDrag: Sort the table row according to its existing/configured weight.
-        $form['path_items'][$id]['#weight'] = $element['#item']->link->getWeight();
+          // TableDrag: Sort the table row according to its existing/configured weight.
+          $form['path_items'][$id]['#weight'] = $element['#item']->link->getWeight();

-        // Add special classes to be used for tabledrag.js.
-        $element['parent']['#attributes']['class'] = array('menu-parent');
-        $element['weight']['#attributes']['class'] = array('wisski-order-weight');
-        $element['id']['#attributes']['class'] = array('menu-id');
+          // Add special classes to be used for tabledrag.js.
+          $element['parent']['#attributes']['class'] = array('menu-parent');
+          $element['weight']['#attributes']['class'] = array('wisski-order-weight');
+          $element['id']['#attributes']['class'] = array('menu-id');

-        $form['path_items'][$id]['title'] = array(
-          array(
-            '#theme' => 'indentation',
-            '#size' => $element['#item']->depth - 1,
-          ),
-          $element['title'],
-        );
-        $form['path_items'][$id]['enabled'] = $element['enabled'];
-        $form['path_items'][$id]['enabled']['#wrapper_attributes']['class'] = array('checkbox', 'menu-enabled');
+          $form['path_items'][$id]['title'] = array(
+            array(
+              '#theme' => 'indentation',
+              '#size' => $element['#item']->depth - 1,
+            ),
+            $element['title'],
+          );
+          $form['path_items'][$id]['enabled'] = $element['enabled'];
+          $form['path_items'][$id]['enabled']['#wrapper_attributes']['class'] = array('checkbox', 'menu-enabled');

-        $form['path_items'][$id]['weight'] = $element['weight'];
+          $form['path_items'][$id]['weight'] = $element['weight'];

-        // Operations (dropbutton) column.
-        $form['path_items'][$id]['operations'] = $element['operations'];
+          // Operations (dropbutton) column.
+          $form['path_items'][$id]['operations'] = $element['operations'];

-        $form['links'][$id]['id'] = $element['id'];
-        $form['links'][$id]['parent'] = $element['parent'];
+          $form['links'][$id]['id'] = $element['id'];
+          $form['links'][$id]['parent'] = $element['parent'];
+        }
+      } 
+
+      return $form;
       }
-    } 

-    return $form;
-    }
+              */
+  // Build the table rows and columns.
+  // The first nested level in the render array forms the table row, on which you
+  // likely want to set #attributes and #weight.
+  // Each child element on the second level represents a table column cell in the
+  // respective table row, which are render elements on their own. For single
+  // output elements, use the table cell itself for the render element. If a cell
+  // should contain multiple elements, simply use nested sub-keys to build the
+  // render element structure for drupal_render() as you would everywhere else.
+  // Iterate through each path entity
+  #drupal_set_message('wisski pathbuilder id: ' . serialize($wisski_pathbuilder));
+  /**             
+     foreach ($path_entities as $id => $path_entity) {
+        drupal_set_message($path_entity->id . ':');
+        drupal_set_message(serialize($path_entity));
+        #drupal_set_message('name: ' . $path_entity->get('id'));
+        $weightbool = is_null($path_entity->get('weight')); 
+        #drupal_set_message(serialize($weightbool));     
+        #if ($weightbool) drupal_set_message('weight is null!');

-            */                                                                                           
+        drupal_set_message('weight: ' . $path_entity->get('weight'));
+        #drupal_set_message('weight2: ' . $path_entity->weight);

+       // TableDrag: Mark the table row as draggable.
+       $form['path_items'][$id]['#attributes']['class'][] = 'draggable';
+       // TableDrag: Sort the table row according to its existing/configured weight.
+       $form['path_items'][$id]['#weight'] = $path_entity->get('weight'); 

+       // Some table columns containing raw markup.
+       $form['path_items'][$id]['label'] = array(
+         '#plain_text' => $path_entity->label(),
+       );
+       $form['path_items'][$id]['id'] = array(
+         '#plain_text' => $path_entity->id(),
+       );

-    // Build the table rows and columns.
-    // The first nested level in the render array forms the table row, on which you
-    // likely want to set #attributes and #weight.
-    // Each child element on the second level represents a table column cell in the
-    // respective table row, which are render elements on their own. For single
-    // output elements, use the table cell itself for the render element. If a cell
-    // should contain multiple elements, simply use nested sub-keys to build the
-    // render element structure for drupal_render() as you would everywhere else.             
-    // Iterate through each path entity
+       // TableDrag: Weight column element.
+       $form['path_items'][$id]['weight'] = array(
+         '#type' => 'weight',
+         '#title' => t('Weight for @title', array('@title' => $path_entity->label())),
+         '#title_display' => 'invisible',
+         '#default_value' => $path_entity->get('weight'),
+        # '#default_value' => ($weightbool ? $path_entity->set('weight', '-10') : $path_entity->get('weight')),
+        # '#delta' => 10,     
+         // Classify the weight element for #tabledrag.
+         '#attributes' => array('class' => array('wisski-order-weight')),
+         );

-    #drupal_set_message('wisski pathbuilder id: ' . serialize($wisski_pathbuilder));
-/**             
-    foreach ($path_entities as $id => $path_entity) {
-       drupal_set_message($path_entity->id . ':');
-       drupal_set_message(serialize($path_entity));
-       #drupal_set_message('name: ' . $path_entity->get('id'));
-       $weightbool = is_null($path_entity->get('weight')); 
-       #drupal_set_message(serialize($weightbool));     
-       #if ($weightbool) drupal_set_message('weight is null!');
+         // Operations (dropbutton) column.
+         $form['path_items'][$id]['operations'] = array(
+           '#type' => 'operations',
+           '#links' => array(),
+         );
+         $form['path_items'][$id]['operations']['#links']['edit'] = array(
+           'title' => t('Edit'),
+           'url' => Url::fromRoute('entity.wisski_path.edit_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
+         );
+         $form['path_items'][$id]['operations']['#links']['delete'] = array(
+           'title' => t('Delete'),
+           #'url' => Url::fromRoute('entity.wisski_path.delete_form', array('id' => $id,'wisski_pathbuilder'=>$wisski_pathbuilder,'wisski_path'=>$id)),
+           'url' => Url::fromRoute('entity.wisski_path.delete_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
+         );
+       }                       
+       $form['actions'] = array('#type' => 'actions');
+       $form['actions']['submit'] = array(
+         '#type' => 'submit',
+         '#value' => t('Save changes'),
+       );

-       drupal_set_message('weight: ' . $path_entity->get('weight'));
-       #drupal_set_message('weight2: ' . $path_entity->weight);

-      // TableDrag: Mark the table row as draggable.
-      $form['path_items'][$id]['#attributes']['class'][] = 'draggable';
-      // TableDrag: Sort the table row according to its existing/configured weight.
-      $form['path_items'][$id]['#weight'] = $path_entity->get('weight'); 
+       return $form;

-      // Some table columns containing raw markup.
-      $form['path_items'][$id]['label'] = array(
-        '#plain_text' => $path_entity->label(),
-      );
-      $form['path_items'][$id]['id'] = array(
-        '#plain_text' => $path_entity->id(),
-      );
+    /**  
+      foreach($path_entities as $path_entity) {
+         drupal_set_message(serialize($path_entity));
+         drupal_set_message($path_entity->id);       
+        // Each entry will be an array using the unique id for that path_entity as
+        // the array key, and an array of table row data as the value.
+        $form['path_items'][$path_entity->id] = array(

-      // TableDrag: Weight column element.
-      $form['path_items'][$id]['weight'] = array(
-        '#type' => 'weight',
-        '#title' => t('Weight for @title', array('@title' => $path_entity->label())),
-        '#title_display' => 'invisible',
-        '#default_value' => $path_entity->get('weight'),
-       # '#default_value' => ($weightbool ? $path_entity->set('weight', '-10') : $path_entity->get('weight')),
-       # '#delta' => 10,     
-        // Classify the weight element for #tabledrag.
-        '#attributes' => array('class' => array('wisski-order-weight')),
-        );
+        // We'll use a form element of type '#markup' to display the item name.
+            'name' => array(
+              '#markup' => $path_entity->name,
+              #  ),
+            ),

-        // Operations (dropbutton) column.
-        $form['path_items'][$id]['operations'] = array(
-          '#type' => 'operations',
-          '#links' => array(),
+         // The 'weight' field will be manipulated as we move the items around in
+         // the table using the tabledrag activity.  We use the 'weight' element
+         // defined in Drupal's Form API.
+            'weight' => array(
+            '#type' => 'weight',
+            '#title' => t('Weight'),
+            '#default_value' => $path_entity->weight,
+            '#delta' => 10,
+            '#title_display' => 'invisible',
+            ),                                                                             
         );
-        $form['path_items'][$id]['operations']['#links']['edit'] = array(
-          'title' => t('Edit'),
-          'url' => Url::fromRoute('entity.wisski_path.edit_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
-        );
-        $form['path_items'][$id]['operations']['#links']['delete'] = array(
-          'title' => t('Delete'),
-          #'url' => Url::fromRoute('entity.wisski_path.delete_form', array('id' => $id,'wisski_pathbuilder'=>$wisski_pathbuilder,'wisski_path'=>$id)),
-          'url' => Url::fromRoute('entity.wisski_path.delete_form', array('wisski_pathbuilder' => $wisski_pathbuilder,'wisski_path' => $id)),
-        );
-      }                       
-      $form['actions'] = array('#type' => 'actions');
-      $form['actions']['submit'] = array(
-        '#type' => 'submit',
-        '#value' => t('Save changes'),
-      );

+      }
+         // Now we add our submit button, for submitting the form results.
+         //
+         // The 'actions' wrapper used here isn't strictly necessary for tabledrag,
+         // but is included as a Form API recommended practice.
+         $form['actions'] = array('#type' => 'actions');
+         $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Save Changes'));             

       return $form;
-
-   /**  
-     foreach($path_entities as $path_entity) {
-        drupal_set_message(serialize($path_entity));
-        drupal_set_message($path_entity->id);       
-       // Each entry will be an array using the unique id for that path_entity as
-       // the array key, and an array of table row data as the value.
-       $form['path_items'][$path_entity->id] = array(
-
-       // We'll use a form element of type '#markup' to display the item name.
-           'name' => array(
-             '#markup' => $path_entity->name,
-             #  ),
-           ),
-
-        // The 'weight' field will be manipulated as we move the items around in
-        // the table using the tabledrag activity.  We use the 'weight' element
-        // defined in Drupal's Form API.
-           'weight' => array(
-           '#type' => 'weight',
-           '#title' => t('Weight'),
-           '#default_value' => $path_entity->weight,
-           '#delta' => 10,
-           '#title_display' => 'invisible',
-           ),                                                                             
-       );
-
-     }
-        // Now we add our submit button, for submitting the form results.
-        //
-        // The 'actions' wrapper used here isn't strictly necessary for tabledrag,
-        // but is included as a Form API recommended practice.
-        $form['actions'] = array('#type' => 'actions');
-        $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Save Changes'));             
-
-     return $form;
- */     
-    #return drupal_render($table); 
- // }
-
-
+  */
+  #return drupal_render($table);
+  // }
   /**
    * Recursive helper function for buildOverviewForm().
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeElement[] $tree
+   * @param MenuLinkTreeElement[] $tree
    *   The tree retrieved by \Drupal\Core\Menu\MenuLinkTreeInterface::load().
    * @param int $delta
    *   The default number of menu items used in the menu weight selector is 50.
@@ @@
         continue;
       }

-      /** @var \Drupal\Core\Menu\MenuLinkInterface $link */
+      /** @var MenuLinkInterface $link */
       $link = $element->link;
       if ($link) {
         $id = 'menu_plugin_id:' . $link->getPluginId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/wisski/wisski_odbc_import/src/Form/WisskiODBCImportForm.php:801

    ---------- begin diff ----------
@@ @@
             $out = $handler->getReferenceableEntities($fieldvalue);
 #          dpm($out, "out");
             $curr_bundle = current($out);
-            
+
             $curr_eid = NULL;
             foreach($curr_bundle as $key_eid => $val_eid) {
               if($val_eid == $fieldvalue) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/wisski/wisski_iip_image/wisski_iip_image.module:127

    ---------- begin diff ----------
@@ @@
 function wisski_iip_image_theme_registry_alter(&$theme_registry) {
 #  dpm($theme_registry);
 #  $theme_registry['colorbox_formatter']['template'] = 'wisskiiip-colorbox-formatter';
-  $theme_registry['colorbox_formatter']['path'] = drupal_get_path('module', 'wisski_iip_image') . '/templates';
+  $theme_registry['colorbox_formatter']['path'] = \Drupal::service('extension.list.module')->getPath('wisski_iip_image') . '/templates';
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


17) modules/contrib/wisski/wisski_iip_image/src/Controller/WisskiIIIFController.php:51

    ---------- begin diff ----------
@@ @@
       $logo = $base_url . $logo;
     
     if(empty($logo)) 
-      $logo = $base_url . '/' . drupal_get_path('module', 'wisski_core') . "/images/img_nopic.png";
+      $logo = $base_url . '/' . \Drupal::service('extension.list.module')->getPath('wisski_core') . "/images/img_nopic.png";

     // Basic example manifest information - this should be replaced with
     // specific details or a database call for dynamic details.
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


18) modules/contrib/wisski/wisski_duplicate/src/Form/WisskiDuplicateForm.php:5

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_duplicate\Form;

+use Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB;
 use Drupal\wisski_salz\Entity\Adapter;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
           
           $engine = $adapter->getEngine();
           
-          if(!($engine instanceof \Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB))
+          if(!($engine instanceof Sparql11EngineWithPB))
             continue;
           
           $triples = $engine->generateTriplesForPath($pb, $path);
@@ @@

             $options = array();
             $reses = array();
-            
+
             foreach($result as $res) {

               $grp = $res->grp->getValue();
-              
+
               $urls = explode(", ", $grp);
-              
+
               $grp = "";
               foreach($urls as $key => $url) {
                 $grp .= "<a href='" . base_path() . "wisski/get?uri=" . $url . "'>" . $url . "</a>, ";
               }
-              
+
               $grp = substr($grp, 0, -2);

               $html = $res->anzahl . "x - '" . $res->out . "' - " . $this->t('Entities: ') . $grp . "";
@@ @@
               $reses[$i] = $res->grp->getValue();
               $i++;
             }
-            
+
             $form['stores']['table'] = array(
               '#type' => 'checkboxes',
               '#options' => $options,
               '#title' => $this->t('What do you want to unify?'),
             );
-            
+
             $form['stores']['tableoptions'] = array(
               '#type' => 'hidden',
               '#value'=> $reses,
             );
-            
+
 /*
             $form['stores']['header'] = array(
               '#type' => 'item',
               '#markup' => '<b>Duplicates:</b><br/>',
             );
-            
+
             $table = "<table><tr><th>" . $this->t('Values') . "</th><th>" . $this->t('Count') . "</th><th>" . $this->t('Uris') . "</th><th>" . $this->t('Unify') . "</th></tr>";
-            
-            
-            
-            
+
+
+
+
             foreach($result as $res) {
               $cb = array(
                 '#type' => 'checkbox',
@@ @@
                 '#name' => 'check_' . $i++,
                 '#title' => $this->t('Unify'),
               );
-              
+
               $rendered = \Drupal::service('renderer')->render($cb);
 #              dpm($rendered, "ren?");
               // $table .= "<tr><td>" . $ont->ont . "</td><td>" . $ont->iri . "</td><td>" . $ont->ver . "</td><td>" . $ont->graph . "</td></tr>";
@@ @@
             }

             $table .= "</table>";
-          
+
             $form['stores']['table'] = array(
               '#type' => 'item',
               '#markup' => $table,
@@ @@
       $urls = explode(", ", $url_arr[$key]);

       $urls = array_unique($urls);
-      
+
       if(count($urls) >= 2) {
-      
+
 #      dpm($urls, "urls?");
-      
+
         $from_eids = array();
 #    \Drupal::logger('MERGE ')->debug('yay44: @yay', ['@yay' => serialize($urls)]);
         foreach ($urls as $url) {
@@ @@

 #      dpm($from_eids, "from?");
         $first = array_shift($from_eids);
-      
+
 #      dpm("I merge " . $first . " with " . serialize($from_eids));

         $merger = new Merger();
@@ @@

         $this->messenger()->addMessage($this->t('I merged %first with %all and got status %status', ['%first' => $first, '%all' => serialize($from_eids), '%status' => $status ]));
       }
-      
+
       // remove some of the paths that are only duplicates...
 #      $query = 
 #      foreach(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/wisski/wisski_doi/src/WisskiDoiRestActionsInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\StringTranslation\TranslationInterface;
@@ @@
    * (Configuration->[WISSKI]->WissKI DOI Settings)
    * Checks if settings are missing.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The string translation service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \GuzzleHttp\ClientInterface $httpClient
+   * @param ClientInterface $httpClient
    *   The REST request service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config storage service.
    */
   public function __construct(TranslationInterface $stringTranslation,
@@ @@
    *     revisionUrl: Full external URL of the revision.
    *   and responseStatus with responseCode.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    *   Throws exception when response status 40x.
    */
   public function createOrUpdateDoi(array $doiInfo, bool $update = FALSE);
@@ @@
    * @return string
    *   The response status code.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    */
   public function readMetadata(string $doi);

@@ @@
    * @return string
    *   The response status code.
    *
-   * @throws \GuzzleHttp\Exception\RequestException
+   * @throws RequestException
    */
   public function deleteDoi(string $doi);

@@ @@
   /**
    * Provide some readable information of errors.
    *
-   * @param \GuzzleHttp\Exception\RequestException $error
+   * @param RequestException $error
    *   The GuzzleHttp error response.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


20) modules/contrib/wisski/wisski_doi/src/WisskiDoiDbActionsInterface.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Establish database connection with query builder.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The string translation service.
    */
   public function __construct(Connection $connection, MessengerInterface $messenger, TranslationInterface $stringTranslation);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


21) modules/contrib/wisski/wisski_doi/src/WisskiDoiDbActions.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private Connection $connection;

@@ @@
   /**
    * The Drupal messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private MessengerInterface $messenger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


22) modules/contrib/wisski/wisski_doi/src/WisskiDoiDataciteRestActions.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi;

+use Drupal\Core\Messenger\Messenger;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * The translation service.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $stringTranslation;

@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\Messenger
+   * @var Messenger
    */
   private MessengerInterface $messenger;

@@ @@
   /**
    * Guzzle\Client instance.
    *
-   * @var \GuzzleHttp\ClientInterface
+   * @var ClientInterface
    */
   protected ClientInterface $httpClient;

@@ @@
   /**
    * The config service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected ConfigFactoryInterface $configFactory;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


23) modules/contrib/wisski/wisski_doi/src/WisskiDoiActionsInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $stringTranslation
+   * @param TranslationInterface $stringTranslation
    *   The translations service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The Drupal entity type manager service.
    */
   public function __construct(TranslationInterface         $stringTranslation,
@@ @@
   /**
    * Assembles metadata from WissKI individual.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI Individual.
    *
    * @return array
@@ @@
    * requests a DOI for that revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getStaticDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata);
@@ @@
    * Just requests a DOI for the current revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getCurrentDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata);
@@ @@
    * @param string $individualsInBatchStateName
    *   The name of the config store.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function batchLoop(bool $current, array $wisskiIndividualsBatch, array $doiMetaData, string $individualsInBatchStateName);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


24) modules/contrib/wisski/wisski_doi/src/WisskiDoiActions.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ @@
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $revision;

@@ @@
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorage
+   * @var WisskiStorage
    */
   protected WisskiStorage $wisskiStorage;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected TimeInterface $time;

@@ @@
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiRestActionsInterface
+   * @var WisskiDoiRestActionsInterface
    */
   protected WisskiDoiRestActionsInterface $wisskiDoiRestActions;

@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActionsInterface
+   * @var WisskiDoiDbActionsInterface
    */
   protected WisskiDoiDbActionsInterface $wisskiDoiDbActions;

@@ @@
    * requests a DOI for that revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getStaticDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata) {
@@ @@
    * Just requests a DOI for the current revision and saves DOI data
    * to local database.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisskiIndividual
+   * @param WisskiEntityInterface $wisskiIndividual
    *   The WissKI individual.
    * @param array $doiMetadata
    *   The DOI metadata.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function getCurrentDoi(WisskiEntityInterface $wisskiIndividual, array $doiMetadata) {
@@ @@
    * @param string $individualsInBatchStateName
    *   The name of the config store.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function batchLoop(bool $current, array $wisskiIndividualsBatch, array $doiMetaData, string $individualsInBatchStateName) {
     if ($wisskiIndividualsBatch) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


25) modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormUpdateMetadata.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi\Form;

+use GuzzleHttp\Exception\GuzzleException;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\wisski_salz\AdapterHelper;
@@ @@
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion(): TranslatableMarkup {
@@ @@
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText(): TranslatableMarkup {
@@ @@
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?int $wisski_individual
    *   The WissKI entity id.
@@ @@
    * @return array
    *   The return form.
    *
-   * @throws \GuzzleHttp\Exception\GuzzleException
+   * @throws GuzzleException
    *   Error if WissKI entity URI could not be loaded (?).
    */
   public function buildForm(array $form, FormStateInterface $form_state, ?int $wisski_individual = NULL, ?int $did = NULL): array {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


26) modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForStaticRevision.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\ReplaceCommand;
 use Drupal\wisski_core\WisskiStorageInterface;
@@ @@
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $revision;

@@ @@
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorageInterface
+   * @var WisskiStorageInterface
    */
   protected WisskiStorageInterface $wisskiStorage;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected TimeInterface $time;

@@ @@
   /**
    * The WissKI Individual.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $wisski_individual;

@@ @@
   /**
    * The service to management DOI metadata.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiActions
+   * @var WisskiDoiActions
    */
   private ?WisskiDoiActions $wisskiDoiActions;

@@ @@
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDataciteRestActions
+   * @var WisskiDoiDataciteRestActions
    */
   protected WisskiDoiDataciteRestActions $wisskiDoiRestActions;

@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   protected WisskiDoiDbActions $wisskiDoiDbActions;

@@ @@
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_storage
+   * @param WisskiStorageInterface $wisski_storage
    *   The WissKI Storage service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiStorageInterface       $wisski_storage,
@@ @@
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ @@
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ @@
   /**
    * Route, if you hit chancel.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The Chancel URL.
    */
   public function getCancelUrl() {
@@ @@
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText() {
@@ @@
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The contributor list in form of the contributor-list twig template.
    */
   public static function addContributor(array &$form, FormStateInterface $form_state) {
@@ @@
    *
    * @param string $contributor
    *   Contributor person.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   What is this and why do we use it?
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The contributor list in form of the contributor-list twig template.
    */
   public function removeContributor(string $contributor, Request $request) {
@@ @@
   /**
    * Delete all contributors.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   What is this and why do we use it?
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The contributor list in form of the contributor-list twig template.
    */
   public function clearContributors(Request $request) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param int $wisski_individual
    *   The WissKI Entity ID.
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    * @throws \Exception
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


27) modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormRequestDoiForRevision.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\wisski_salz\AdapterHelper;

@@ @@
    *
    * @var array $doiInfo
    */
-
   /**
    * Validate if a DOI for a current revision exists.
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return bool
@@ @@
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ @@
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText() {
@@ @@
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @throws \Exception
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


28) modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiConfirmFormDeleteDoi.php:19

    ---------- begin diff ----------
@@ @@
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDataciteRestActions
+   * @var WisskiDoiDataciteRestActions
    */
   protected WisskiDoiDataciteRestActions $wisskiDoiRestActions;

@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   protected WisskiDoiDbActions $wisskiDoiDbActions;

@@ @@
   /**
    * Form for removing a draft DOI from the provider and the local database.
    *
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiDoiDataciteRestActions $wisskiDoiRestActions, WisskiDoiDbActions $wisskiDoiDbActions) {
@@ @@
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?int $wisski_individual
    *   The entity id of the wisski individual.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


29) modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiBatchForm.php:30

    ---------- begin diff ----------
@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   private WisskiDoiDbActions $wisskiDoiDbActions;

@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\Core\Pager\PagerManager
+   * @var PagerManager
    */
   private PagerManager $pagerManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


30) modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiBatch4StaticRevisionsConfirmForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\wisski_core\WisskiStorageInterface;
 use Drupal\wisski_core\WisskiEntityInterface;
 use Drupal\Component\Datetime\TimeInterface;
@@ @@
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected WisskiEntityInterface $revision;

@@ @@
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorageInterface
+   * @var WisskiStorageInterface
    */
   protected WisskiStorageInterface $wisskiStorage;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected TimeInterface $time;

@@ @@
   /**
    * The service to management DOI metadata.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiActions
+   * @var WisskiDoiActions
    */
   protected WisskiDoiActions $wisskiDoiActions;

@@ @@
   /**
    * The service to interact with the REST API .
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDataciteRestActions
+   * @var WisskiDoiDataciteRestActions
    */
   protected WisskiDoiDataciteRestActions $wisskiDoiRestActions;

@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActions
+   * @var WisskiDoiDbActions
    */
   protected WisskiDoiDbActions $wisskiDoiDbActions;

@@ @@
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_storage
+   * @param WisskiStorageInterface $wisski_storage
    *   The WissKI Storage service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiActions $wisskiDoiActions
+   * @param WisskiDoiActions $wisskiDoiActions
    *   The WissKi DOI Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiStorageInterface       $wisski_storage,
@@ @@
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ @@
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ @@
   /**
    * Route, if you hit chancel.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   The Chancel URL.
    */
   public function getCancelUrl() {
@@ @@
   /**
    * Text on the submit button.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The submit button text.
    */
   public function getConfirmText() {
@@ @@
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param string $wisskiBundleId
    *   The WissKI bundle ID.
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


31) modules/contrib/wisski/wisski_doi/src/Form/WisskiDoiBatch4CurrentRevisionsConfirmForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_doi\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\wisski_core\WisskiStorageInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
@@ @@
   /**
    * Constructs a new form to request a DOI for a static revision.
    *
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_storage
+   * @param WisskiStorageInterface $wisski_storage
    *   The WissKI Storage service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\wisski_doi\WisskiDoiActions $wisskiDoiActions
+   * @param WisskiDoiActions $wisskiDoiActions
    *   The WissKi DOI Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct(WisskiStorageInterface       $wisski_storage,
@@ @@
   /**
    * Populate the reachable variables from services.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The class container.
    */
   public static function create(ContainerInterface $container) {
@@ @@
   /**
    * The question of the confirm form.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The confirmation questions.
    */
   public function getQuestion() {
@@ @@
   /**
    * Details between title and body.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The description texts.
    */
   public function getDescription() {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


32) modules/contrib/wisski/wisski_doi/src/Controller/WisskiDoiAdministration.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\wisski_doi\WisskiDoiDbActionsInterface
+   * @var WisskiDoiDbActionsInterface
    */
   private WisskiDoiDbActionsInterface $wisskiDOiDbActions;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


33) modules/contrib/wisski/wisski_date_field_extractor/wisski_date_field_extractor.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityInterface;
 /** Module wisski_date_field_extractor
  *
  * @author: fit
@@ @@
  * Implementation of hook_ENTITY_TYPE_presave
  * for WissKI's entity type
  */
-function wisski_date_field_extractor_wisski_individual_presave(Drupal\Core\Entity\EntityInterface $entity) {
+function wisski_date_field_extractor_wisski_individual_presave(EntityInterface $entity) {
   // switch debugging on/off
   $debug = False;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


34) modules/contrib/wisski/wisski_data_merge/src/Form/WisskiDataMergeForm.php:5

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_data_merge\Form;

+use Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB;
 use Drupal\wisski_salz\Entity\Adapter;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
           
           $engine = $adapter->getEngine();
           
-          if(!($engine instanceof \Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB))
+          if(!($engine instanceof Sparql11EngineWithPB))
             continue;
           
           $triples = $engine->generateTriplesForPath($pb, $path);
@@ @@
         
         $engine = $adapter->getEngine();
         
-        if(!($engine instanceof \Drupal\wisski_adapter_sparql11_pb\Plugin\wisski_salz\Engine\Sparql11EngineWithPB))
+        if(!($engine instanceof Sparql11EngineWithPB))
           continue;
         
         $triples = $engine->generateTriplesForPath($pb, $path);
@@ @@
 #        $wherefront = "WHERE { ";
         
         foreach($result as $res) {
-        
+
           $pa = $path->getPathArray();
           $palength = count($pa);
-          
+
 #          dpm($pa, "pa?");
-          
+
           #dpm($res, "res");
           #dpm($path->getPathArray(), "pa?");
           #dpm(count($path->getPathArray()), "path");
-          
+
           for($pos = 2; $pos < $palength; $pos += 2) {
             $var = "x" . $pos;
             $inverse = $engine->getInverseProperty($pa[($pos -1)]);
@@ @@
             $filters .= " FILTER( ?x" . $pos . " != <" . $res->$var . "> ) . ";
             $delfront .= "?x" . $pos . " a <" . $pa[$pos] . "> . ";
             $delfront .= "?x" . ($pos-2) . " <" . $pa[($pos -1)] . "> ?x" . $pos . " . ";
-            
+
             if($inverse)
               $delfront .= "?x" . $pos . " <" . $inverse . "> ?x" . ($pos-2) . " . ";
           }
-          
+
           $delfront .= "?x" . ($pos-2) . " <" . $path->getDatatypeProperty() . "> '" . $outvalue . "'";
-          
+
 #          dpm($filters, "fil");
 #          dpm($delfront, "del?");
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


35) modules/contrib/wisski/wisski_core/wisski_core.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Field\BaseFieldDefinition;
 function wisski_core_update_8001(&$sandbox) {

   $tables = array('wisski_entity_map', 'wisski_title_n_grams', 'wisski_calling_bundles', 'wisski_preview_images', 'wisski_entity_field_properties', 'wisski_core_ontology_namespaces');
@@ @@
   */
 function wisski_core_update_8007(&$sandbox) {
   $definition_manager = \Drupal::entityDefinitionUpdateManager();
-  $newStorage = Drupal\Core\Field\BaseFieldDefinition::create('uri')
+  $newStorage = BaseFieldDefinition::create('uri')
       ->setLabel(t('WissKI URI'))
       ->setDescription(t('The WissKI URI from the TS (in case you need it)'))
       ->setReadOnly(TRUE)
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


36) modules/contrib/wisski/wisski_core/src/WisskiToolbarHandler.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
@@ @@
   /**
    * The menu link tree service.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeInterface
+   * @var MenuLinkTreeInterface
    */
   protected $menuLinkTree;

@@ @@
   /**
    * The devel toolbar config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;

@@ @@
   /**
    * WissKI ToolbarHandler constructor.
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree
+   * @param MenuLinkTreeInterface $menu_link_tree
    *   The menu link tree service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
    */
   public function __construct(MenuLinkTreeInterface $menu_link_tree, ConfigFactoryInterface $config_factory, AccountProxyInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


37) modules/contrib/wisski/wisski_core/src/WisskiStorage.php:342

    ---------- begin diff ----------
@@ @@
             // the language "en" is added to this variable although there is no english translation for the entity name
             // to avoid this, we have to continue here, so only languages are added which do not come from entity references
             $field_def = $field_defs[$key];
-            
+
             #dpm(serialize($field_def->isTranslatable()), "is it?" . $field_def->getLabel());
             // by MyF: this part does not work as expected; we comment this out since we prefer empty and translated fields
             // instead of only original languages fields
@@ @@
             #    dpm("answer is false");
                 $not_set_languages[$alang] = $alang;
               }
-              
+
               if(count($set_languages) == count($available_languages))
                 break;
-              
+
             }

             if(count($set_languages) == count($available_languages))
               break;
           }
-         
+
 #          dpm($available_languages, "available langs");          
 #          dpm($set_languages, "the setted languages");
-          
+
           // clear the titles that are not represented in the data
 #          foreach($set_languages as $slang) {
 #            unset($values[$id]["label"][$slang]);
@@ @@
           // by Mark: I am unsure if this is a correct assumption
           // it might be that we have to fetch it from elsewhere
           // but for now this seems ok.
-          
+
           if(isset($values[$id]["default_langcode"])){

             foreach($values[$id]["default_langcode"] as $key => $value) {
@@ @@
                 $orig_lang = $key;
             } 
           }
-         
-          
+
+
           // if the entity has no default langcode (which might be and probably is the default
           // for old wisski instances) we just use the first language
           // that comes up
@@ @@
             } else {
               $orig_lang = current($set_languages);
             }
-            
+
             # dpm($set_languages, "set?");
           }          

@@ @@
           // therefore we correct it here for further development
           if(is_array($orig_lang))
             $orig_lang = current($orig_lang);
-          
+
           // by Mark:
           // if the orig_lang is not in the available languages there is something fishy
           // and we will have difficulties because data wont be loaded actively.
@@ @@
 //            dpm($orig_lang, "orig?");
 //            dpm($available_languages, "avail?");
           }
-          
-            
+
+
 #          dpm("my orig lang is: " . serialize($orig_lang));

-          
+
 #          dpm(serialize($base_fields), "yay, basefields!");
-          
+
           // MF^2: In any case we process the value array for a certain entity
           // and set the x-default langcode accordingly for all base fields. 
           // Just in case of a translatable base field that really has language tags
@@ @@
           // see below ;)
           // in case of a "normal" field we assume that it is always translatable
           // (which typically holds for wisski entities)
-          
+
           // after that we can iterate through all non-base-fields and these
           // typically have different languages enabled by default due to the
           // setting in the wisski Entity
@@ @@
             // if it is a base field, simply set it to the appropriate langcode
             if(in_array($key, $base_field_names)) {
               $base_field_def = $base_fields[$key];
-             
-              
+
+
               // if this is translatable
               if($base_field_def->isTranslatable()) {
 #		      dpm($val, "val? for $key");
@@ @@
                 if(is_array($val)){
                   $does_it_have_any_language = FALSE;
                   foreach($val as $pot_lang => $some_field_values) {
-                    
+
                     // if this is a language tag
                     /*
                     if(!in_array($pot_lang, $available_languages)) {
@@ @@
                       // translatable base field like array("value" => "smthg")
                       // unfortunately this currently happens 
                       // @TODO: Fix this case!
-                      
+
                       // By Mark: This case also happens if there is a language in the
                       // ts that is not in the drupal... so this check is too weak 
                       // and we should NOT do this!
-                      
-                      
+
+
                       $test[$key][LanguageInterface::LANGCODE_DEFAULT] = $val;
 //                      dpm($available_languages, "avail?");
 //                      dpm($pot_lang, "pot?");
@@ @@
                       break;
                     }
                     */
-                    
+
                     if(in_array($pot_lang, $available_languages) || $pot_lang == "und") {
                       $does_it_have_any_language = TRUE;
                     }
-                    
+
                   }
-                  
+
                   if(!$does_it_have_any_language)
                     $test[$key][LanguageInterface::LANGCODE_DEFAULT] = $val;
                 }
                 #dpm($test);
-    
+
                 // if we have found something, we can savely continue.               
                 if(isset($test[$key][LanguageInterface::LANGCODE_DEFAULT]))
                   continue;
-              
+
                 // if not we do the "normal field handling"
                 // because it is a translatable base field
                 // which has language tags that must be replaced accordingly.
@@ @@
                 continue;
               }
             }
-            
+
             // and now we do the "normal field" handling and the handling for
             // translatable base fields (in fact we do the handling for any 
             // translatable fields)
@@ @@
               // if we dont have anything, continue.
               if(!isset($field_defs[$key]))
                 continue;
-                
+
  #             dpm($val, "val!");
               $field_def = $field_defs[$key];
               if ($field_def->getType() === 'entity_reference') {
@@ @@
                   }
                 }
               }
-              
+
               foreach($val as $field_lang => $field_vals) {
                 // if it is the default language of the entity, we exchange the 
                 // language tag of the original language for x-default
@@ @@
                 #if(gettype($field_lang) != gettype($orig_lang)){
 #                  dpm("Warning: gettype(field_lang) != gettype(orig_lang)");
                 #}
-                
+
                 // check if we have languages that are very odd like und and und is not in the
                 // available languages.
-		
+
 		if($field_lang == "und" && !in_array($field_lang, $available_languages)) {
 		  $curr_lang = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
 		  if(!isset($val[$curr_lang]))
@@ @@
                   else if(!isset($val[$orig_lang]))
                     $field_lang = $orig_lang;
 		}
-		
-		
+
+
 		#dpm(serialize($field_lang));
 		#dpm(serialize($orig_lang));
 		if($field_def->isTranslatable()) {
@@ @@
                     $test[$key][LanguageInterface::LANGCODE_DEFAULT] = $field_vals;
                     $test[$key][$orig_lang] = $field_vals;
                   } else {
-                                  
+
                     // we just trust it for now...                 
                     $test[$key][$field_lang] = $field_vals;
                   }
@@ @@
               }
             }
            #dpm($test, "test22?"); 
-            
+
             // else we just take it as it is.
 //            if(!empty(array_intersect(array_keys($val), $set_languages))) {
 //              $test[$key] = $val;
@@ @@
 //              continue;
 //            }
           } 
-                    
+
             /*
             if(is_array($val)) {
 #              $test[$key] = $val;
@@ @@
           // we still have to set default_langcode and
           // content_translation_source and published(status) probably? 
           // Or have to get it from cache correctly.
-        
-        
-        
-        
+
+
+
+
 #          $test["eid"] = array("x-default" => $test["eid"]);
 #          $test["langcode"] = array("x-default" => "en", "fr" => "fr");
 #          $test["label"] = array("x-default" => "juhu?", "fr" => "oh weh");
@@ @@
 #            dpm($test, "what do we give?");

 #          $test["default_langcode"]["x-default"] = array("value" => TRUE);
-          
-          
+
+
 #          $test["eid"] = $test["eid"]["x-default"][0];
-          
+
 #          $entity = $this->create($values[$id]);
 #          dpm($entity);
           // Initialize translations array.
@@ @@
           $translations = array_fill_keys(array_keys($values), []);

           $translations[$id] = $set_languages; //array("x-default", "fr", "ar");
-    
+
 #          dpm($this->entityClass, "??");
 #          return;
           // Debug from Node:
@@ @@
           $inter_lang = \Drupal::service('language_manager')->getCurrentLanguage()->getId();

 #          $entity = $entity->getTranslation($inter_lang);
-          
+
 #          dpm($entity);
-    
+
 #          $entity = new $this->entityClass($values[$id], "wisski_individual", $values[$id]["bundle"], array_keys($translations[$id]));
           //dpm(serialize($entity), "yay!");
           $entity->enforceIsNew(FALSE);
@@ @@
                     if (strpos($preview_image_uri, "public://") !== FALSE) {
                       $preview_image_uri = str_replace("public:/", \Drupal::service('stream_wrapper.public')->baseUrl(), $preview_image_uri);
                     }
-                    
+
                     $preview_id = $this->getFileId($preview_image_uri);
-                    
+
 #                    dpm($preview_id);
                     $new_field_values[$id][$field_name] = array(array("target_id" => intval($preview_id)));
 //                    $new_field_values[$id][$field_name] = array($preview_image_uri);
@@ @@
                           #else if(!isset($nfv[$main_property]))
                           #                          dpm($nfv);
                         }
-                      
+
                         // if we found something go for it...
                         if (isset($found_cached_field_value)) {
                           if(is_array($nfv))
@@ @@
                       $file_uri = $properties_array['original_target_id'];
 #       	             dpm($file_uri, "got");                    
                       $local_uri = '';
-                        
+
                       $properties_array['target_id'] = $this->getFileId($file_uri,$local_uri, $id);
 /*
                     $properties_array = array(
@@ @@
           }

 #              dpm(array('data'=>$data,'uri'=>$file_uri,'local'=>$local_file_uri),'Trying to save image');
-          $file = file_save_data($data, $local_file_uri);
+          $file = \Drupal::service('file.repository')->writeData($data, $local_file_uri);

           if ($file) {
             $value = $file->id();
@@ @@

             // this is evil because we take simply the first one.
             //$lc = current($lc);
-            
+
             // go deeper...
             while(is_array($lc))
               $lc = current($lc);              
-            
+
             $langcode = $lc;
-            
+
 #            dpm($lc);
           }
           
@@ @@
     if(empty($preview_uri) || empty($found_preview)) {
       
       $image_style = $this->getPreviewStyle();
-      $output_uri = drupal_get_path('module', 'wisski_core') . "/images/img_nopic.png";
+      $output_uri = \Drupal::service('extension.list.module')->getPath('wisski_core') . "/images/img_nopic.png";
 #      dpm($output_uri, "out");
       $preview_uri = $image_style->buildUri($output_uri);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * FileSaveDataRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


38) modules/contrib/wisski/wisski_core/src/WisskiIndividualListDbActions.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   private Connection $connection;

@@ @@
   /**
    * The Drupal messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private MessengerInterface $messenger;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


39) modules/contrib/wisski/wisski_core/src/WisskiEntityViewsData.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core;

+use Drupal\wisski_core\Drupal\Core\TypedData\TypedDataManager;
 use Drupal\views\EntityViewsData;

 // from Drupal\views\EntityViewsData
@@ @@
     $this->moduleHandler = $module_handler;
     $this->setStringTranslation($translation_manager);
     
-    if (!$entity_field_manager || $entity_field_manager instanceof Drupal\Core\TypedData\TypedDataManager ) {
+    if (!$entity_field_manager || $entity_field_manager instanceof TypedDataManager ) {
       @trigger_error('Calling EntityViewsData::__construct() with the $entity_field_manager argument is supported in drupal:8.8.0 and will be required before drupal:9.0.0. See https://www.drupal.org/node/2549139.', E_USER_DEPRECATED);
       $entity_field_manager = \Drupal::service('entity_field.manager');
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


40) modules/contrib/wisski/wisski_core/src/Plugin/views/query/WisskiIndividualQuery.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Plugin\views\query;

+use Drupal\Core\Entity\Query\QueryInterface;
+use Drupal\views\Views;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Url;
 use Drupal\views\Plugin\views\display\DisplayPluginBase;
@@ @@
     /**
      * The EntityQuery object used for the query.
      *
-     * @var \Drupal\Core\Entity\Query\QueryInterface, \Drupal\wisski_salz\Query\WissKIQueryDelegator in our case
+     * @var QueryInterface , \Drupal\wisski_salz\Query\WissKIQueryDelegator in our case
      */
     public $query;

@@ @@
                     // so we have to change this here.

                     if(strpos($valueGroup[0], ".") === FALSE) {
-                      $viewsdata = \Drupal\views\Views::viewsData()->get('wisski_individual');
+                      $viewsdata = Views::viewsData()->get('wisski_individual');

                       // see if we have something in there
                       if(isset($viewsdata[$valueGroup[0]])) {
@@ @@
                 // add the title values to the label so it can be rendered correctly...
                 if(isset($values_per_row[$eid]['title']))
                   $pseudo_entity_fields[$eid]['label'] = array($values_per_row[$eid]['title']);
-                
+
                 // By Mark:
                 // we need to wrap the title in array brackets, otherwise we loose some parts
                 // if we have a : or something like that in the characters.
@@ @@
         // and we have to solve it to its real wisski thingies
         // if it is a wisski field at all
         if(strpos($field, ".") === 0) {
-          $viewsdata = \Drupal\views\Views::viewsData()->get('wisski_individual');
-            
+          $viewsdata = Views::viewsData()->get('wisski_individual');
+
           // cut away the dot and have a look.
           $viewsdata = $viewsdata[substr($field, 1)];
-          
+
           if(isset($viewsdata['field']) && isset($viewsdata['field']['wisski_field']))  
             $wisski_field = $viewsdata['field']['wisski_field'];
           else // no wisski field?
             $wisski_field = "";
-        
+
           if(!empty($wisski_field))
             $field = $wisski_field;
-            
+
           // in this case we also have to check if the operator
           // is correct in case of entity reference thingies
           //if(is_numeric($value) && $operator == "=") {
           //    $operator = "has_eid";
           //}
-          
+
           if(strpos($field, ".") !== FALSE) {
             // load the relevant path from the cache
             // populate the cache if it doesn't exist
@@ @@
                 // this is hopefully a base field like .langcode?
                 $field = $pb_and_path[1]; 
               }
-            
+
             }
           }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


41) modules/contrib/wisski/wisski_core/src/Plugin/views/filter/FieldNumeric.php:85

    ---------- begin diff ----------
@@ @@
     }
   }

- 
+
   /**
    * {@inheritdoc}
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


42) modules/contrib/wisski/wisski_core/src/Plugin/views/field/Field.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Plugin\views\field;

+use Drupal\views\Entity\Render\EntityFieldRenderer;
 use Drupal\views\Plugin\views\field\EntityField as ViewsField;
 use Drupal\views\ResultRow; 
 use Drupal\wisski_core\Entity\Render\WisskiEntityFieldRenderer;
@@ @@
   /**
    * Returns the entity field renderer.
    *
-   * @return \Drupal\views\Entity\Render\EntityFieldRenderer
+   * @return EntityFieldRenderer
    *   The entity field renderer.
    */
   protected function getEntityFieldRenderer() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


43) modules/contrib/wisski/wisski_core/src/Plugin/views/field/EntityField.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Plugin\views\field;

+use Drupal\views\Entity\Render\EntityFieldRenderer;
 use Drupal\views\Plugin\views\field\EntityField as ViewsEntityField;
 use Drupal\views\ResultRow; 
 use Drupal\wisski_core\Entity\Render\WisskiEntityFieldRenderer;
@@ @@
   /**
    * Returns the entity field renderer.
    *
-   * @return \Drupal\views\Entity\Render\EntityFieldRenderer
+   * @return EntityFieldRenderer
    *   The entity field renderer.
    */
   protected function getEntityFieldRenderer() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


44) modules/contrib/wisski/wisski_core/src/Plugin/Search/WisskiEntitySearch.php:409

    ---------- begin diff ----------
@@ @@
       '#type' => 'image_button',
       '#title' => 'Export to Excel',
 #      '#value' => $this->t('Export to Excel'),
-      '#src' => drupal_get_path('module', 'wisski_core') . "/images/export_excel.png",
+      '#src' => \Drupal::service('extension.list.module')->getPath('wisski_core') . "/images/export_excel.png",
       '#attributes' => [ 'alt' => t('Export to Excel'), ],
       '#op' => 'wisski_core_excel_export',
 #      '#ajax' => [
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


45) modules/contrib/wisski/wisski_core/src/Form/WisskiTitlePatternForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Form;

+use Drupal\wisski_core\WisskiBundleInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
@@ @@
    */
   public function save(array $form, FormStateInterface $form_state) {
     
-    /** @var  \Drupal\wisski_core\WisskiBundleInterface $bundle */
-    $bundle = $this->entity;
+    /** @var WisskiBundleInterface $bundle */
+				$bundle = $this->entity;
     
     //dpm(array($bundle,$form_state->getValues()),__METHOD__);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


46) modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualRevisionRevertTranslationForm.php:26

    ---------- begin diff ----------
@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * Constructs a new WisskiIndividualRevisionRevertTranslationForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $wisski_storage
+   * @param EntityStorageInterface $wisski_storage
    *   The wisski storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityStorageInterface $wisski_storage, DateFormatterInterface $date_formatter, LanguageManagerInterface $language_manager, TimeInterface $time) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


47) modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualRevisionRevertForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Form;

+use Drupal\wisski_core\WisskiStorageInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
   /**
    * The WisskiEntity revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected $revision;

@@ @@
   /**
    * The WissKI storage.
    *
-   * @var \Drupal\wisski_core\WisskiStorageInterface
+   * @var WisskiStorageInterface
    */
   protected $wisskiStorage;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * Constructs a new NodeRevisionRevertForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The wisski storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(EntityStorageInterface $wisski_storage, DateFormatterInterface $date_formatter, TimeInterface $time) {
@@ @@
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $revision
+   * @param WisskiEntityInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\node\NodeInterface
+   * @return NodeInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(WisskiEntityInterface $revision, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


48) modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualRevisionDeleteForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Form;

+use Drupal\wisski_core\WisskiEntityInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
   /**
    * The wisski revision.
    *
-   * @var \Drupal\wisski_core\WisskiEntityInterface
+   * @var WisskiEntityInterface
    */
   protected $revision;

@@ @@
   /**
    * The wisski storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $wisskiStorage;

@@ @@
   /**
    * The wisski type storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $wisskiTypeStorage;

@@ @@
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs a new NodeRevisionDeleteForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_storage
+   * @param EntityStorageInterface $node_storage
    *   The node storage.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $node_type_storage
+   * @param EntityStorageInterface $node_type_storage
    *   The node type storage.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityStorageInterface $wisski_storage, Connection $connection, DateFormatterInterface $date_formatter) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


49) modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualListConfirmFormDeleteAll.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Form for removing a draft DOI from the provider and the local database.
    *
-   * @param \Drupal\wisski_doi\WisskiDoiDataciteRestActions $wisskiDoiRestActions
+   * @param WisskiDoiDataciteRestActions $wisskiDoiRestActions
    *   The WissKi DOI Rest Service.
-   * @param \Drupal\wisski_doi\WisskiDoiDbActions $wisskiDoiDbActions
+   * @param WisskiDoiDbActions $wisskiDoiDbActions
    *   The WissKI DOI database Service.
    */
   public function __construct() {
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?string $wisskiBundleId
    *   The bundle id of the wisski individual.
-   * 
+   *
    * @throws \Exception
    *   Error if WissKI entity URI could not be loaded (?).
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


50) modules/contrib/wisski/wisski_core/src/Form/WisskiIndividualListConfirmFormDelete.php:83

    ---------- begin diff ----------
@@ @@
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param ?string $wisskiBundleId
    *   The bundle id of the wisski individual.
-   * 
+   *
    * @throws \Exception
    *   Error if WissKI entity URI could not be loaded (?).
    */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


51) modules/contrib/wisski/wisski_core/src/Form/WisskiIndListForm.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * The service to interact with the database.
    *
-   * @var \Drupal\Core\Pager\PagerManager
+   * @var PagerManager
    */
   private PagerManager $pagerManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


52) modules/contrib/wisski/wisski_core/src/Form/WisskiBundleForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Form;

+use Drupal\wisski_core\WisskiBundleInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var  \Drupal\wisski_core\WisskiBundleInterface $bundle */
+    /** @var WisskiBundleInterface $bundle */
     $bundle = $this->entity;

     $menu_items = array();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


53) modules/contrib/wisski/wisski_core/src/Entity/Render/WisskiEntityFieldRenderer.php:39

    ---------- begin diff ----------
@@ @@
    * - For each set of fields, entities are processed by bundle, so that
    *   formatters can operate on the proper field definition for the bundle.
    *
-   * @param \Drupal\views\ResultRow[] $values
+   * @param ResultRow[] $values
    *   An array of all ResultRow objects returned from the query.
    *
    * @return array
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


54) modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityViewForwarder.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
  
@@ @@
  /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
  
   /** Creates an WisskiEntityViewForwarder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, RendererInterface $renderer, AccountInterface $current_user, EntityRepositoryInterface $entity_repository) {
@@ @@
   public function title(WisskiEntity $wisski_individual = NULL) {
     //dpm(serialize($wisski_individual), "??");
 #    $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
-    
+
 #    $title = $wisski_individual->label();

     return $this->entityRepository->getTranslationFromContext($wisski_individual)->label();
-    
+
 #    dpm($title, "tit?");
 #    dpm($langcode, "langcode?");
 #    dpm($entity->getTranslation(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


55) modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityListBuilder.php:254

    ---------- begin diff ----------
@@ @@
       $query->pager($this->limit);
       $query->range($this->page*$this->limit,$this->limit);
     }
-    
+
     $qgroup = $query->andConditionGroup();
     //dpm($query);
     if (!empty($this->bundle)) {
@@ @@
 #    dpm("4.1: " . microtime());
     //let the bundle generate the entity title (normally from the title pattern)
     $entity_label = $this->bundle->generateEntityTitle($entity_id);
-    
+
     // add language
     $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
     if(isset($entity_label[$langcode])) {
@@ @@
         $entity_label = "WissKI Default Entity Title";
       }
     }
-    
+
 #    dpm($entity_label, "ente?");
 #    dpm("4.2: " . microtime());
     //create a link to the entity's "canonical" route, link templates
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


56) modules/contrib/wisski/wisski_core/src/Controller/WisskiEntityController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_core\Controller;

+use Drupal\node\NodeInterface;
 use Drupal\Core\Entity\Controller\EntityViewController;
 use Drupal\Core\Link;
 use Drupal\Component\Utility\Xss;
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected DateFormatterInterface $dateFormatter;

@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected RendererInterface $renderer;

@@ @@
   /**
    * The entity repository service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected EntityRepositoryInterface $entityRepository;

@@ @@
   /**
    * Constructs a NodeController object.
    *
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository.
    */
   public function __construct(DateFormatterInterface $date_formatter, RendererInterface $renderer, EntityRepositoryInterface $entity_repository) {
@@ @@
    * @param int $wisski_individual_revision
    *   The node revision ID.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup
+   * @return TranslatableMarkup
    *   The page title.
    *
    * @throws \Exception
@@ @@
   /**
    * Generates an overview table of older revisions of a node.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisski_individual
+   * @param WisskiEntityInterface $wisski_individual
    *   A node object.
    *
    * @return array
@@ @@
     // dpm(serialize(
     // dpm("yay?");.
     foreach ($this->getRevisionIds($wisski_individual, $wisski_individual_storage) as $vid) {
-      /** @var \Drupal\node\NodeInterface $revision */
+      /** @var NodeInterface $revision */
       // dpm("yay2?");.
       // dpm(serialize($wisski_individual), "ind?");
       // dpm(serialize($vid), "vid?");
@@ @@
   // return $this->t('Create @name', [
   // '@name' => wisski_individual_type->label()]);.
   // }
-
   /**
    * Gets a list of node revision IDs for a specific node.
    *
-   * @param \Drupal\wisski_core\WisskiEntityInterface $wisski_individual
+   * @param WisskiEntityInterface $wisski_individual
    *   The WissKI Individual.
-   * @param \Drupal\wisski_core\WisskiStorageInterface $wisski_individual_storage
+   * @param WisskiStorageInterface $wisski_individual_storage
    *   The WissKI Individual Storage.
    *
    * @return int[]
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


57) modules/contrib/wisski/wisski_core/src/ContextProvider/WisskiIndividualContextProvider.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The route match object.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * Constructs a new NodeRouteContext.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match object.
    */
   public function __construct(RouteMatchInterface $route_match) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


58) modules/contrib/wisski/wisski_apus/wisski_triplify/src/Plugin/wisski_pipe/Processor/TriplifyStandard.php:666

    ---------- begin diff ----------
@@ @@
   */
   function _wisski_texttrip_triplify_standard_relation(&$group_sources, $rel, $target_uri = NULL, $target_class = NULL) {

-    include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+    include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
     $path_data = wisski_pathbuilder_getPathData($rel);
     $source = $group_sources[$path_data['group_id']];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


59) modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.module:423

    ---------- begin diff ----------
@@ @@
   $plugins = array(
     // sends the text to server and retrieves automatically generated annotations 
     'wisskiTextAnly' => array(
-      'path' => drupal_get_path('module', 'wisski_textanly') . '/tinymce_plugin.js',
+      'path' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/tinymce_plugin.js',
       'buttons' => array(
         'wisskiTextAnlyAuto' => t('Wisski Toggle Periodic Analysis'),
         'wisskiTextAnlyManual' => t('Wisski Analyse (Manual trigger)'),
@@ @@
     '#value' => '<div><pre id="analyse_log" class="json_dump"></pre></div>',
   );

-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
  
   return $form;
 }
@@ @@
     return "no ticket specified";
   }
   
-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
   
   $script = "WissKI.textanly.getLogs('$ticket');";
   drupal_add_js($script,  'inline', 'footer');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


60) modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.install:8

    ---------- begin diff ----------
@@ @@
   drupal_install_schema('wisski_textanly');

   // load personnames file into table
-  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', drupal_get_path('module', 'wisski_textanly') . '/default_personnames.csv');
-  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', drupal_get_path('module', 'wisski_textanly') . '/default_persontypes.csv');
+  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_personnames.csv');
+  _wisski_textanly_bulk_load('wisski_textanly_mw_automaton', \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_persontypes.csv');

   // set up a default vocab detection step
   $default_vocab = array(
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


61) modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.vocab.inc:14

    ---------- begin diff ----------
@@ @@
     case 'edit':

       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');

       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
@@ @@

     case 'submit':
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
       
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


62) modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.regexp.inc:15

    ---------- begin diff ----------
@@ @@
     case 'edit':

       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');

       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


63) modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.mw_automaton.inc:15

    ---------- begin diff ----------
@@ @@
     case 'edit':

       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');

       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


64) modules/contrib/wisski/wisski_apus/wisski_textanly/wisski_textanly.analyse.datetime.inc:14

    ---------- begin diff ----------
@@ @@
     case 'edit':

       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');

       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


65) modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.module:410

    ---------- begin diff ----------
@@ @@
   $plugins = array(
     // sends the text to server and retrieves automatically generated annotations 
     'wisskiTextAnly' => array(
-      'path' => drupal_get_path('module', 'wisski_textanly') . '/tinymce_plugin.js',
+      'path' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/tinymce_plugin.js',
       'buttons' => array(
         'wisskiTextAnlyAuto' => t('Wisski Toggle Periodic Analysis'),
         'wisskiTextAnlyManual' => t('Wisski Analyse (Manual trigger)'),
@@ @@
     '#value' => '<div><pre id="analyse_log" class="json_dump"></pre></div>',
   );

-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
  
   return $form;
 }
@@ @@
     return "no ticket specified";
   }
   
-  drupal_add_js(drupal_get_path('module', 'wisski_textanly') . '/test_page.js', 'module', 'footer');
-  drupal_add_css(drupal_get_path('module', 'wisski_textanly') . '/test_page.css', 'module');
+  drupal_add_js(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.js', 'module', 'footer');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/test_page.css', 'module');
   
   $script = "WissKI.textanly.getLogs('$ticket');";
   drupal_add_js($script,  'inline', 'footer');
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


66) modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.install:8

    ---------- begin diff ----------
@@ @@
   drupal_install_schema('wisski_textanly');

   // load person name info file into tables
-  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), drupal_get_path('module', 'wisski_textanly') . '/default_personnames.csv');
-  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), drupal_get_path('module', 'wisski_textanly') . '/default_persontypes.csv');
+  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_personnames.csv');
+  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/default_persontypes.csv');

   // set up a default vocab detection step
   $default_vocab = array(
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


67) modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.vocab.inc:14

    ---------- begin diff ----------
@@ @@
     case 'edit':

       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');

       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
@@ @@

     case 'submit':
       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');
       
       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


68) modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.regexp.inc:15

    ---------- begin diff ----------
@@ @@
     case 'edit':

       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');

       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


69) modules/contrib/wisski/wisski_apus/wisski_textanly/teki_anly/wisski_textanly.analyse.datetime.inc:15

    ---------- begin diff ----------
@@ @@
     case 'edit':

       drupal_load('module', 'wisski_pathbuilder');
-      include_once(drupal_get_path('module', 'wisski_pathbuilder') . '/wisski_pathbuilder.inc');
+      include_once(\Drupal::service('extension.list.module')->getPath('wisski_pathbuilder') . '/wisski_pathbuilder.inc');

       //for pb_group: display every top group of the import PB section
       $pb_groups = array();
@@ @@


   for ($i = 1; $i < $l; $i += 2) {
-    
+
     $regex = $format['pattern'][$i-1];
     $span_pattern = $format['pattern'][$i];

-    
-    
+
+
     if (preg_match_all("/$regex/us", $text, $matches, PREG_SET_ORDER | PREG_OFFSET_CAPTURE)) {

       foreach ($matches as $match) {
-        
+
         $vars = array();
-        
+
         // check the placeholders
         // we go through the already existing spans and look for
         // those already
@@ @@
           foreach ($format['placeholders'] as $var => $info) {
             $match_len = mb_strlen(trim($match[$var][0]));
             $match_pos = mb_strlen(substr($text, 0, $match[$var][1]));
-            
+
             $vars[$var] = array();
             $groups == (array) $info['groups'];
             foreach ($spans as $i => $span) {
@@ @@
             unset($match[$var]);
           }
         }
-        
+
         // workaround: preg returns the offset in bytes, not chars!
         $range = array(mb_strlen(substr($text, 0, $match[0][1])));
         $range[1] = $range[0] + mb_strlen(trim($match[0][0]));
@@ @@
         foreach ($match as $key => $val) {
           if (is_string($key)) $vars[$key] = $val[0];
         }
-        
+
         $my_args = array($settings, $format, $spans, $range, $vars, $args);
         $spans = call_user_func_array($callback, $my_args);
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


70) modules/contrib/wisski/wisski_apus/wisski_textanly/src/Plugin/CKEditorPlugin/Analyse.php:48

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_textanly') . '/js/plugins/analyse/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/js/plugins/analyse/plugin.js';
   }

   /**
@@ @@
     return array(
       'wisskiAnalyse' => array(
         'label' => t('Analyse'),
-        'image' => drupal_get_path('module', 'wisski_textanly') . '/js/plugins/analyse/analyse.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/js/plugins/analyse/analyse.png',
       ),
       'wisskiAnalysisLog' => array(
         'label' => t('Show Analysis Log'),
-        'image' => drupal_get_path('module', 'wisski_textanly') . '/js/plugins/analyse/delete.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_textanly') . '/js/plugins/analyse/delete.png',
       ),
     );
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


71) modules/contrib/wisski/wisski_apus/wisski_pipe/src/ProcessorCollection.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @return \Drupal\wisski_pipe\ProcessorInterface
+   * @return ProcessorInterface
    */
   public function &get($instance_id) {
     return parent::get($instance_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


72) modules/contrib/wisski/wisski_apus/wisski_pipe/src/PipeManager.php:5

    ---------- begin diff ----------
@@ @@
  */

 namespace Drupal\wisski_pipe;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Psr\Log\LoggerInterface;


@@ @@
   /**
    * Gets the entity manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    */
   protected function getEntityManager() {
     if (!isset($this->entity_manager)) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


73) modules/contrib/wisski/wisski_apus/wisski_pipe/src/PipeListBuilder.php:34

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\wisski_pipe\PipeInterface $pipe */
+    /** @var PipeInterface $pipe */
     $pipe = $entity;
     $row['label'] = $pipe->label();
     $row['tags'] = join(", ", $pipe->getTags());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


74) modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/OverviewForm.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The pipes to which the processors are applied to.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   private $pipe;

@@ @@
   /**
    * The processor manager.
    *
-   * @var \Drupal\wisski_pipe\ProcessorManager
+   * @var ProcessorManager
    */
   protected $manager;

@@ @@
   /**
    * Constructs a new OverviewForm.
    *
-   * @param \Drupal\wisski_pipe\ProcessorManager $manager
+   * @param ProcessorManager $manager
    *   The processor manager.
    */
   public function __construct(ProcessorManager $manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


75) modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/EditForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The pipes to which the processors will be applied.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $pipe;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


76) modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/DeleteForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_pipe\Form\Processor;

+use Drupal\wisski_pipe\ProcessorInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The pipes that the processor is applied to.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $pipe;

@@ @@
   /**
    * The processor to be removed from the pipe.
    *
-   * @var \Drupal\wisski_pipe\ProcessorInterface
+   * @var ProcessorInterface
    */
   protected $processor;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


77) modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Processor/AddForm.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_pipe\Form\Processor;

+use Drupal\wisski_pipe\ProcessorInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Component\Plugin\ConfigurablePluginInterface;
@@ @@
   /**
    * The pipes to which the processors will be applied.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $pipe;

@@ @@
   /**
    * The processor manager.
    *
-   * @var \Drupal\wisski_pipe\ProcessorManager
+   * @var ProcessorManager
    */
   protected $manager;

@@ @@
   /**
    * Constructs a new AddForm.
    *
-   * @param \Drupal\wisski_pipe\ProcessorManager $manager
+   * @param ProcessorManager $manager
    *   The processor manager.
    */
   public function __construct(ProcessorManager $manager) {
@@ @@
   public function submitForm(array &$form, FormStateInterface $form_state) {
     $form_state->cleanValues();

-    /** @var \Drupal\wisski_pipe\ProcessorInterface $plugin */
+    /** @var ProcessorInterface $plugin */
     $plugin = $this->manager->createInstance($form_state->getValue('plugin'));

     $plugin_uuid = $this->pipe->addProcessor($plugin->getConfiguration());
@@ @@
       return strnatcasecmp($a['label'], $b['label']);
     });
     foreach ($all_plugins as $definition) {
-      /** @var \Drupal\wisski_pipe\ProcessorInterface $plugin */
+      /** @var ProcessorInterface $plugin */
       $plugin = $this->manager->createInstance($definition['id']);
       $row = [
         'label' => $plugin->getLabel(),
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


78) modules/contrib/wisski/wisski_apus/wisski_pipe/src/Form/Pipe/FormBase.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_pipe\Form\Pipe;

+use Drupal\wisski_pipe\PipeInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\wisski_pipe\PipeInterface
+   * @var PipeInterface
    */
   protected $entity;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


79) modules/contrib/wisski/wisski_apus/wisski_pipe/src/Entity/Pipe.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_pipe\Entity;

+use Drupal\Component\Plugin\PluginManagerInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
 use Drupal\wisski_pipe\PipeInterface;
@@ @@
   /**
    * Returns the attribute manager.
    *
-   * @return \Drupal\Component\Plugin\PluginManagerInterface
+   * @return PluginManagerInterface
    *   The attribute manager.
    */
   protected function getProcessorManager() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


80) modules/contrib/wisski/wisski_apus/wisski_pipe/src/Annotation/Processor.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_pipe\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
    *
    * The string should be wrapped in a @Translation().
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;

@@ @@
    *
    * The string should be wrapped in a @Translation().
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $description;
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


81) modules/contrib/wisski/wisski_apus/wisski_ckeditor/wisski_ckeditor.module:36

    ---------- begin diff ----------
@@ @@
     'wisski_apus_adapter' => array(
       'name' => 'wisski_apus_adapter',
       'desc' => t('WissKI Annotation Commons: Provides common features and buttons to annotate and link to instances'),
-      'path' => drupal_get_path('module', 'wisski_ckeditor') . '/js/wisski_apus_adapter/',
+      'path' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/wisski_apus_adapter/',
       'buttons' => array(
         'ToggleSubject' => array(
           'label' => 'Toggle Subject',
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


82) modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/QuickEntityPicker.php:29

    ---------- begin diff ----------
@@ @@
   /**
    * The QuickEntityPicker profile storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkitProfileStorage;

@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/entityLinkDialog/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/entityLinkDialog/plugin.js';
   }

   /**
@@ @@
     return array(
       'EntityPicker' => array(
         'label' => t('WissKI Entity Picker'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/entityLinkDialog/entityLinkDialog.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/entityLinkDialog/entityLinkDialog.png',
       ),
     );
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


83) modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/AnnotationDialog.php:49

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotationDialog/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotationDialog/plugin.js';
   }

   /**
@@ @@
     return array(
       'ToggleWisskiAnnotationDialog' => array(
         'label' => t('Annotation Sidebar'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotationDialog/annotationDialog.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotationDialog/annotationDialog.png',
       ),
     );
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


84) modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Plugin/CKEditorPlugin/Annotation.php:48

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function getFile() {
-    return drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotation/plugin.js';
+    return \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotation/plugin.js';
   }

   /**
@@ @@
     return array(
       'wisskiAddAnnotation' => array(
         'label' => t('Add Annotation'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotation/annotation.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotation/annotation.png',
       ),
       'wisskiDeleteAnnotation' => array(
         'label' => t('Delete Annotation'),
-        'image' => drupal_get_path('module', 'wisski_ckeditor') . '/js/plugins/annotation/delete.png',
+        'image' => \Drupal::service('extension.list.module')->getPath('wisski_ckeditor') . '/js/plugins/annotation/delete.png',
       ),
     );
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


85) modules/contrib/wisski/wisski_apus/wisski_ckeditor/src/Form/EntityLinkDialog.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_ckeditor\Form;

+use Drupal\editor\EditorInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * The editor storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $editorStorage;

@@ @@
   /**
    * The linkit profile storage service.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $linkitProfileStorage;

@@ @@
   /**
    * Constructs a form object for linkit dialog.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $editor_storage
+   * @param EntityStorageInterface $editor_storage
    *   The editor storage service.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $linkit_profile_storage
+   * @param EntityStorageInterface $linkit_profile_storage
    *   The linkit profile storage service.
    */
   public function __construct(EntityStorageInterface $editor_storage, EntityStorageInterface $linkit_profile_storage) {
@@ @@
   /**
    * {@inheritdoc}
    *
-   * @param \Drupal\filter\Entity\FilterFormat $filter_format
+   * @param FilterFormat $filter_format
    *   The filter format for which this dialog corresponds.
    * @param string $search
    *   A search string.
@@ @@
     $user_input = $form_state->getUserInput();
     $input = isset($user_input['editor_object']) ? $user_input['editor_object'] : [];

-    /** @var \Drupal\editor\EditorInterface $editor */
+    /** @var EditorInterface $editor */
     $editor = $this->editorStorage->load($filter_format->id());
     $linkit_profile_id = $editor->getSettings()['plugins']['wisski_quick_entity_picker']['linkit_profile'];
     $this->linkitProfile = $this->linkitProfileStorage->load($linkit_profile_id);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


86) modules/contrib/wisski/wisski_apus/wisski_apus/src/StackingLogger.php:14

    ---------- begin diff ----------
@@ @@
   
   /**
    * A logger that this logger optionally forwards to.
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $backingLogger = NULL;
   
@@ @@
   /**
    * The cache key used for caching or NULL if caching is disabled.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache_key = NULL;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


87) modules/contrib/wisski/wisski_adapters/zotero/src/Query/Query.php:73

    ---------- begin diff ----------
@@ @@

 #          dpm($condition, "I got this");
           foreach ($condition['field']->conditions() as $subcondition) {
-        
+
           $field = $subcondition['field'];
           $value = $subcondition['value'];
   #        dpm($field, "field");
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


88) modules/contrib/wisski/wisski_adapters/getty/src/Plugin/wisski_salz/Engine/AatEngine.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\wisski_adapter_aat\Plugin\wisski_salz\Engine;

+use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Language\LanguageInterface;
 use Drupal\wisski_adapter_aat\Query\Query;
@@ @@
   public function loadPropertyValuesForField($field_id, array $property_ids, array $entity_ids = NULL, $bundleid_in = NULL,$language = LanguageInterface::LANGCODE_DEFAULT) {
 #dpm(func_get_args(), 'lpvff');

-    $main_property = \Drupal\field\Entity\FieldStorageConfig::loadByName('wisski_individual', $field_id);
+    $main_property = FieldStorageConfig::loadByName('wisski_individual', $field_id);
     if(!empty($main_property)) {
       $main_property = $main_property->getMainPropertyName();
     }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


89) modules/contrib/wisski/wisski_adapters/dms/src/Query/Query.php:79

    ---------- begin diff ----------
@@ @@
 #      dpm(serialize($this->condition->conditions()), "condi?");

       $num_conds = 0;
-      
+
       $eidcondition = array();

       foreach ($this->condition->conditions() as $condition) {
@@ @@
           } else {
             $giveback = array_values($eidquery); // array($thing['eid']);
           }
-          
+
           $eidcondition['field'] = $pb->id() . ".inventarnummer";
           $eidcondition['operator'] = "=";
-          
+
           $uris = AdapterHelper::getUrisForDrupalId($condition['value'], $adapterid);
           $invnr = substr($uris, strlen("http://objektkatalog.gnm.de/objekt/"));

           $invnr = urldecode($invnr);
-          
+
           $eidcondition['value'] = $invnr;
-          
+
 #          dpm($invnr);
           #$invnr = urlencode($invnr);

@@ @@
             } else {

             }    
-            
+
 #            dpm("bundle?");
             // load the bundles for this id
             $bundleids = $engine->getBundleIdsForEntityId($eid);        
@@ @@
 #          return $giveback;

         }
-        
+
 #        dpm($giveback);
-        
+
 #        return $giveback;
       }
-      
+
       if($num_conds == 1 && !empty($giveback)) {
         return $giveback;
       }
-      
+
 #      dpm("half");    
       //wisski_tick("field query half");
-      
+
 #      dpm($eidcondition, "eid?");

       foreach($this->condition->conditions() as $condition) {
-        
+
         $conditions = $this->condition->conditions();
-        
+
         if(!is_string($condition['field'])) {
           // might be one deeper
           $conditions = $condition['field']->conditions();
@@ @@
           $field = $condition['field'];
           $value = $condition['value'];
         }
-        
+
         $field = $condition['field'];
         $value = $condition['value'];
-        
+
 #        dpm($conditions);
-        
+
         // if there is an array in value but it has only one value (comes from delegator!)
         // then we take the value!
 #        if(is_array($value) && count($value) == 1)
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


90) modules/contrib/wisski/wisski_adapters/dms/src/Plugin/wisski_salz/Engine/DmsEngine.php:1065

    ---------- begin diff ----------
@@ @@
 #        dpm(serialize($a_ret), "??");
 #        dpm(microtime(), "start");
         $invnr = $a_ret['invnr'];
-        
+
         $invnr = urlencode($invnr);
-        
+
         $uri = "http://objektkatalog.gnm.de/objekt/" . $invnr;

         $uriname = AdapterHelper::getDrupalIdForUri($uri,TRUE,$this->adapterId());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


91) modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Plugin/Field/FieldFormatter/WisskiEntityReferenceLabelFormatter.php:71

    ---------- begin diff ----------
@@ @@

       // for now we take the interface language
       $langcode = \Drupal::service('language_manager')->getCurrentLanguage()->getId();
-      
+
       if(isset($label[$langcode][0]["value"]))
         $label = $label[$langcode][0]["value"];
       else {
@@ @@
         if(isset($cur_label[0]["value"]))
           $label = $cur_label[0]["value"];
       }
-        
-      
+
+
       // If the link is to be displayed and the entity has a uri, display a
       // link.
       if ($output_as_link ) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


92) modules/contrib/wisski/wisski_adapter_sparql11_pb/src/Controller/Sparql11AutocompleteController.php:21

    ---------- begin diff ----------
@@ @@
     private $autocomplete_suggestions_limit = 10;

   /**
-   * Returns response for the country name autocompletion.
-   *
-   * @param \Symfony\Component\HttpFoundation\Request $request
-   *   The current request object containing the search string.
-   *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
-   *   A JSON response containing the autocomplete suggestions for countries.
-   */
-    public function autocomplete(Request $request, $fieldid, $pathid, $pbid, $engineid) {
+				 * Returns response for the country name autocompletion.
+				 *
+				 * @param Request $request
+				 *   The current request object containing the search string.
+				 *
+				 * @return JsonResponse
+				 *   A JSON response containing the autocomplete suggestions for countries.
+				 */
+				public function autocomplete(Request $request, $fieldid, $pathid, $pbid, $engineid) {
 #      drupal_set_message("fun: " . serialize(func_get_args()));
 #      drupal_set_message("pb: " . serialize($pbid));
 #      $matches = array();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [ERROR] Could not process                                                      
         "modules/contrib/wisski/wisski_iip_image/src/Plugin/ImageToolkit/Operatio
         n/imagemagick/Pyramid.php" file, due to:                               
         "Analyze error: "Class                                                 
         Drupal\imagemagick\Plugin\ImageToolkit\Operation\imagemagick\ImagemagickI
         mageToolkitOperationBase not found.". Include your files in            
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/wisski/wisski_iip_image/src/Plugin/Field/FieldFormatter/
         WisskiIIPImageFormatter.php" file, due to:                             
         "Analyze error: "Class                                                 
         Drupal\colorbox\Plugin\Field\FieldFormatter\ColorboxFormatter not      
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/wisski/wisski_core/src/Form/WisskiInlineEntityForm.php"
         file, due to:                                                          
         "Analyze error: "Class Drupal\inline_entity_form\Form\EntityInlineForm 
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/Linkit/Matcher
         /WisskiEntityMatcher.php" file, due to:                                
         "Analyze error: "Class Drupal\linkit\Plugin\Linkit\Matcher\EntityMatcher
         not found.". Include your files in                                     
         "$rectorConfig->autoloadPaths([...]);" or                              
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/Linkit/Attribu
         te/Evidence.php" file, due to:                                         
         "Analyze error: "Class Drupal\linkit\ConfigurableAttributeBase not     
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/wisski/wisski_apus/wisski_apus/src/Plugin/Linkit/Attribu
         te/Bundle.php" file, due to:                                           
         "Analyze error: "Class Drupal\linkit\ConfigurableAttributeBase not     
         found.". Include your files in "$rectorConfig->autoloadPaths([...]);" or
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

