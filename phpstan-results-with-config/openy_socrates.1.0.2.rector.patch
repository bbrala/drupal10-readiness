diff --git a/modules/openy_theme_override/openy_theme_override.module b/modules/openy_theme_override/openy_theme_override.module
index d7015b3..308c16f 100644
--- a/modules/openy_theme_override/openy_theme_override.module
+++ b/modules/openy_theme_override/openy_theme_override.module
@@ -10,12 +10,12 @@
  */
 function openy_theme_override_theme_registry_alter(&$theme_registry) {
   $regex = '/' . str_replace('.', '\\.', "html.twig") . '$/';
-  $overrides = \Drupal::service('file_system')->scanDirectory(drupal_get_path('module', 'openy_theme_override') . '/themes', $regex, ['nomask' => TRUE], 100);
-  $themes = scandir(drupal_get_path('module', 'openy_theme_override') . '/themes');
+  $overrides = \Drupal::service('file_system')->scanDirectory(\Drupal::service('extension.list.module')->getPath('openy_theme_override') . '/themes', $regex, ['nomask' => TRUE], 100);
+  $themes = scandir(\Drupal::service('extension.list.module')->getPath('openy_theme_override') . '/themes');
   unset($themes[1]);
   unset($themes[0]);
   $themes = array_values($themes);
-  $themes_path = drupal_get_path('module', 'openy_theme_override') . '/themes';
+  $themes_path = \Drupal::service('extension.list.module')->getPath('openy_theme_override') . '/themes';
   foreach ($overrides as $override) {
     $output = explode(".", $override->name);
     $template = $output[0];
diff --git a/src/OpenyRepositoryTrait.php b/src/OpenyRepositoryTrait.php
index 2958a37..b30d1fe 100644
--- a/src/OpenyRepositoryTrait.php
+++ b/src/OpenyRepositoryTrait.php
@@ -12,7 +12,7 @@ trait OpenyRepositoryTrait {
   /**
    * Remove entities by splitting $ids array to smaller chunks.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   Storage to be used for entity load.
    * @param array $ids
    *   Entity ids array.
diff --git a/src/OpenySocratesFacade.php b/src/OpenySocratesFacade.php
index 3b12a47..1ecd542 100644
--- a/src/OpenySocratesFacade.php
+++ b/src/OpenySocratesFacade.php
@@ -18,7 +18,7 @@ class OpenySocratesFacade {
   /**
    * State interface.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
@@ -39,7 +39,7 @@ class OpenySocratesFacade {
   /**
    * OpenySocratesFacade constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State.
    */
   public function __construct(StateInterface $state) {
@@ -57,7 +57,7 @@ class OpenySocratesFacade {
    * @return mixed
    *   Service result.
    *
-   * @throws \Drupal\openy_socrates\OpenySocratesException
+   * @throws OpenySocratesException
    */
   public function __call($name, array $arguments) {
     if (isset($this->services[$name])) {
