modules/contrib/openy_socrates/modules/openy_theme_override/openy_theme_override.module
modules/contrib/openy_socrates/openy_socrates.module
modules/contrib/openy_socrates/src/ExampleSocratesCronService.php
modules/contrib/openy_socrates/src/ExampleSocratesDataService.php
modules/contrib/openy_socrates/src/OpenyCronServiceInterface.php
modules/contrib/openy_socrates/src/OpenyDataServiceInterface.php
modules/contrib/openy_socrates/src/OpenyRepositoryTrait.php
modules/contrib/openy_socrates/src/OpenySocratesCompilerPass.php
modules/contrib/openy_socrates/src/OpenySocratesException.php
modules/contrib/openy_socrates/src/OpenySocratesFacade.php
modules/contrib/openy_socrates/src/OpenySocratesServiceProvider.php

3 files with changes
====================

1) modules/contrib/openy_socrates/src/OpenySocratesFacade.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * State interface.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;

@@ @@
   /**
    * OpenySocratesFacade constructor.
    *
-   * @param \Drupal\Core\State\StateInterface $state
+   * @param StateInterface $state
    *   State.
    */
   public function __construct(StateInterface $state) {
@@ @@
    * @return mixed
    *   Service result.
    *
-   * @throws \Drupal\openy_socrates\OpenySocratesException
+   * @throws OpenySocratesException
    */
   public function __call($name, array $arguments) {
     if (isset($this->services[$name])) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/openy_socrates/src/OpenyRepositoryTrait.php:11

    ---------- begin diff ----------
@@ @@
   /**
    * Remove entities by splitting $ids array to smaller chunks.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   Storage to be used for entity load.
    * @param array $ids
    *   Entity ids array.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/openy_socrates/modules/openy_theme_override/openy_theme_override.module:9

    ---------- begin diff ----------
@@ @@
  */
 function openy_theme_override_theme_registry_alter(&$theme_registry) {
   $regex = '/' . str_replace('.', '\\.', "html.twig") . '$/';
-  $overrides = \Drupal::service('file_system')->scanDirectory(drupal_get_path('module', 'openy_theme_override') . '/themes', $regex, ['nomask' => TRUE], 100);
-  $themes = scandir(drupal_get_path('module', 'openy_theme_override') . '/themes');
+  $overrides = \Drupal::service('file_system')->scanDirectory(\Drupal::service('extension.list.module')->getPath('openy_theme_override') . '/themes', $regex, ['nomask' => TRUE], 100);
+  $themes = scandir(\Drupal::service('extension.list.module')->getPath('openy_theme_override') . '/themes');
   unset($themes[1]);
   unset($themes[0]);
   $themes = array_values($themes);
-  $themes_path = drupal_get_path('module', 'openy_theme_override') . '/themes';
+  $themes_path = \Drupal::service('extension.list.module')->getPath('openy_theme_override') . '/themes';
   foreach ($overrides as $override) {
     $output = explode(".", $override->name);
     $template = $output[0];
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 3 files have been changed by Rector                                       

