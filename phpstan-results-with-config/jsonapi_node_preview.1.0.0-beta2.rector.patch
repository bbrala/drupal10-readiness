diff --git a/src/Controller/EntityResource.php b/src/Controller/EntityResource.php
index 9cef08d..3c197d9 100755
--- a/src/Controller/EntityResource.php
+++ b/src/Controller/EntityResource.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\jsonapi_node_preview\Controller;
 
+use Drupal\jsonapi_node_preview\IncludeResolver;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\jsonapi\Controller\EntityResource as BaseEntityResource;
 use Drupal\jsonapi\Exception\EntityAccessDeniedHttpException;
 use Drupal\jsonapi\JsonApiResource\NullIncludedData;
@@ -21,25 +24,25 @@ class EntityResource extends BaseEntityResource {
   /**
    * The include resolver.
    *
-   * @var \Drupal\jsonapi_node_preview\IncludeResolver
+   * @var IncludeResolver
    */
   protected $includeResolver;
 
   /**
    * Gets the preview of a node.
    *
-   * @param \Drupal\node\NodeInterface $node_preview
+   * @param NodeInterface $node_preview
    *   The node being previewed.
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
    *
-   * @return \Drupal\jsonapi\ResourceResponse
+   * @return ResourceResponse
    *   The response.
    *
-   * @throws \Drupal\jsonapi\Exception\EntityAccessDeniedHttpException
+   * @throws EntityAccessDeniedHttpException
    *   Thrown when access to the entity is not allowed.
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getIndividualNodePreview(NodeInterface $node_preview, Request $request): ResourceResponse {
     // Avoid caching previews at all.
diff --git a/src/IncludeResolver.php b/src/IncludeResolver.php
index c78df69..cec2e1d 100755
--- a/src/IncludeResolver.php
+++ b/src/IncludeResolver.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\jsonapi_node_preview;
 
+use Drupal\Core\TypedData\Exception\MissingDataException;
 use Drupal\jsonapi\IncludeResolver as BaseIncludeResolver;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityInterface;
@@ -35,7 +36,7 @@ class IncludeResolver extends BaseIncludeResolver {
    * @param bool $in_preview
    *   A flag to tell whether data is in preview mode.
    *
-   * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws MissingDataException
    */
   public function resolve($data, $include_parameter, bool $in_preview = FALSE) {
     assert($data instanceof ResourceObject || $data instanceof ResourceObjectData);
@@ -58,7 +59,7 @@ class IncludeResolver extends BaseIncludeResolver {
    * @param bool $in_preview
    *   A flag to tell whether data is in preview mode.
    *
-   * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws MissingDataException
    */
   protected function resolveIncludeTree(array $include_tree, Data $data, Data $includes = NULL, bool $in_preview = FALSE) {
     $includes = is_null($includes) ? new IncludedData([]) : $includes;
