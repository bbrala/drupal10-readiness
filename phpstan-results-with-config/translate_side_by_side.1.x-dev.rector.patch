diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 02aeab9..27713c4 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -2,6 +2,12 @@
 
 namespace Drupal\translate_side_by_side\Form;
 
+use Drupal\Core\Entity\ContentEntityBase;
+use Drupal\Core\Entity\EntityDisplayBase;
+use Drupal\system\Entity\Menu;
+use Drupal\Core\Menu\MenuLinkTreeElement;
+use Drupal\menu_link_content\Entity\MenuLinkContent;
+use Drupal\taxonomy\Entity\Term;
 use Drupal\Core\Entity\EntityFieldManager;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Extension\ModuleHandler;
@@ -22,42 +28,42 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The variable containing the language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManager
+   * @var LanguageManager
    */
   protected $languageManager;
 
   /**
    * The variable containing the entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The variable containing the entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManager
+   * @var EntityFieldManager
    */
   protected $entityFieldManager;
 
   /**
    * The variable containing the menu tree link.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTree
+   * @var MenuLinkTree
    */
   protected $menuLinkTree;
 
   /**
    * The variable containing the renderer.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandler
+   * @var ModuleHandler
    */
   protected $moduleHandler;
 
@@ -78,17 +84,17 @@ class SettingsForm extends ConfigFormBase {
   /**
    * Dependency injection through the constructor.
    *
-   * @param \Drupal\Core\Language\LanguageManager $languageManager
+   * @param LanguageManager $languageManager
    *   The language service.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entityTypeManager
+   * @param EntityTypeManager $entityTypeManager
    *   The entity type service.
-   * @param \Drupal\Core\Entity\EntityFieldManager $entityFieldManager
+   * @param EntityFieldManager $entityFieldManager
    *   The entity field service.
-   * @param \Drupal\Core\Menu\MenuLinkTree $menuLinkTree
+   * @param MenuLinkTree $menuLinkTree
    *   The menu link tree  service.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Extension\ModuleHandler $moduleHandler
+   * @param ModuleHandler $moduleHandler
    *   The module handler.
    */
   public function __construct(LanguageManager $languageManager,
@@ -249,7 +255,7 @@ class SettingsForm extends ConfigFormBase {
     $nids = $query->sort($sortBy, 'ASC', 'en')
       ->execute();
     $entities = $this->entityTypeManager->getStorage($entityType)->loadMultiple($nids);
-    /** @var \Drupal\Core\Entity\ContentEntityBase $oneEntity */
+    /** @var ContentEntityBase $oneEntity */
     foreach ($entities as $oneEntity) {
       if ($oneEntity->hasTranslation($this->sourceLanguage)) {
         $original = $oneEntity->getTranslation($this->sourceLanguage);
@@ -265,7 +271,7 @@ class SettingsForm extends ConfigFormBase {
       }
 
       $fieldlist = [];
-      /** @var \Drupal\Core\Entity\EntityDisplayBase $entity_form_display */
+      /** @var EntityDisplayBase $entity_form_display */
       $entity_form_display = $this->entityTypeManager
         ->getStorage('entity_form_display')
         ->load($entityType . '.' . $oneEntity->bundle() . '.default');
@@ -384,7 +390,7 @@ class SettingsForm extends ConfigFormBase {
       $par_field_form = [];
       foreach ($par_fields as $par_field_name => $par_field_definition) {
         if (substr($par_field_name, 0, 6) === 'field_') {
-          /** @var \Drupal\Core\Entity\EntityDisplayBase $entity_form_display */
+          /** @var EntityDisplayBase $entity_form_display */
           $entity_form_display = $this->entityTypeManager
             ->getStorage('entity_form_display')
             ->load($original->get($field_name)->getFieldDefinition()->getSetting('target_type') . '.' . $oneparvalue->bundle() . '.default');
@@ -415,7 +421,7 @@ class SettingsForm extends ConfigFormBase {
       ->sort('label', 'ASC', 'en')
       ->execute();
     $menus = $this->entityTypeManager->getStorage('menu')->loadMultiple($mids);
-    /** @var \Drupal\system\Entity\Menu $onemenu */
+    /** @var Menu $onemenu */
     foreach ($menus as $onemenu) {
 
       $fieldlist = [];
@@ -428,7 +434,7 @@ class SettingsForm extends ConfigFormBase {
         ['callable' => 'menu.default_tree_manipulators:flatten'],
       ];
       $tree = $this->menuLinkTree->transform($tree, $manipulators);
-      /** @var \Drupal\Core\Menu\MenuLinkTreeElement $element */
+      /** @var MenuLinkTreeElement $element */
       foreach ($tree as $element) {
         $linkDef = $element->link->getPluginDefinition();
 
@@ -442,11 +448,11 @@ class SettingsForm extends ConfigFormBase {
         $storage = $this->entityTypeManager
           ->getStorage('menu_link_content');
 
-        /** @var \Drupal\menu_link_content\Entity\MenuLinkContent $entity */
+        /** @var MenuLinkContent $entity */
         $entity = $storage->load($entity_id);
 
         if ($entity->isTranslatable() && $entity->hasTranslation($this->sourceLanguage)) {
-          /** @var \Drupal\menu_link_content\Entity\MenuLinkContent $original */
+          /** @var MenuLinkContent $original */
           $original = $entity->getTranslation($this->sourceLanguage);
         }
         else {
@@ -454,7 +460,7 @@ class SettingsForm extends ConfigFormBase {
         }
 
         if ($entity->isTranslatable() && $entity->hasTranslation($this->targetLanguage)) {
-          /** @var \Drupal\menu_link_content\Entity\MenuLinkContent $translation */
+          /** @var MenuLinkContent $translation */
           $translation = $entity->getTranslation($this->targetLanguage);
         }
         else {
@@ -495,18 +501,18 @@ class SettingsForm extends ConfigFormBase {
         ->condition('vid', $onevocabulary->get('vid'))
         ->execute();
       $terms = $this->entityTypeManager->getStorage('taxonomy_term')->loadMultiple($tids);
-      /** @var \Drupal\taxonomy\Entity\Term $oneterm */
+      /** @var Term $oneterm */
       foreach ($terms as $oneterm) {
         $fieldlist = [];
         if ($oneterm->isTranslatable() && $oneterm->hasTranslation($this->sourceLanguage)) {
-          /** @var \Drupal\taxonomy\Entity\Term $original */
+          /** @var Term $original */
           $original = $oneterm->getTranslation($this->sourceLanguage);
         }
         else {
           $original = $oneterm;
         }
         if ($oneterm->isTranslatable() && $oneterm->hasTranslation($this->targetLanguage)) {
-          /** @var \Drupal\taxonomy\Entity\Term $translation */
+          /** @var Term $translation */
           $translation = $oneterm->getTranslation($this->targetLanguage);
         }
         else {
diff --git a/tests/src/Functional/TranslateSideBySideTest.php b/tests/src/Functional/TranslateSideBySideTest.php
index 4024875..7b1994c 100755
--- a/tests/src/Functional/TranslateSideBySideTest.php
+++ b/tests/src/Functional/TranslateSideBySideTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\translate_side_by_side\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\node\NodeInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -44,21 +46,21 @@ class TranslateSideBySideTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $admin;
 
   /**
    * Node one.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node1;
 
   /**
    * Node two.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node2;
 
