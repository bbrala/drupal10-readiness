modules/contrib/google_analytics/google_analytics.install
modules/contrib/google_analytics/google_analytics.module
modules/contrib/google_analytics/google_analytics.tokens.inc
modules/contrib/google_analytics/src/Component/Render/GoogleAnalyticsJavaScriptSnippet.php
modules/contrib/google_analytics/src/Form/GoogleAnalyticsAdminSettingsForm.php
modules/contrib/google_analytics/src/GoogleAnalitycsInterface.php
modules/contrib/google_analytics/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php
modules/contrib/google_analytics/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php
modules/contrib/google_analytics/tests/modules/google_analytics_test/src/Controller/GoogleAnalyticsTestController.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsBasicTest.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsCustomUrls.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsRolesTest.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsSearchTest.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsUninstallTest.php
modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php

12 files with changes
=====================

1) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
@@ @@

     // Check if the pseudo field is shown on account forms.
     $this->drupalGet('admin/config/people/accounts/form-display');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Google Analytics settings'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Google Analytics settings'));

     // No customization allowed.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 0)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertNoRaw($this->t('Google Analytics settings'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseNotContains($this->t('Google Analytics settings'));

     // Tracking on by default, users with opt-in or out of tracking permission
     // can opt out.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 1)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Users are tracked by default, but you are able to opt out.'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Users are tracked by default, but you are able to opt out.'));

     // Tracking off by default, users with opt-in or out of tracking permission
     // can opt in.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 2)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Users are <em>not</em> tracked by default, but you are able to opt in.'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Users are <em>not</em> tracked by default, but you are able to opt in.'));
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertNoRawRector
 * AssertRawRector
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsUninstallTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $permissions = [
@@ @@
     // Uninstall the module.
     $edit = [];
     $edit['uninstall[google_analytics]'] = TRUE;
-    $this->drupalPostForm('admin/modules/uninstall', $edit, $this->t('Uninstall'));
-    $this->assertNoText(\Drupal::translation()->translate('Configuration deletions'));
-    $this->drupalPostForm(NULL, NULL, $this->t('Uninstall'));
-    $this->assertText($this->t('The selected modules have been uninstalled.'));
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm($edit, $this->t('Uninstall'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains(\Drupal::translation()->translate('Configuration deletions'));
+    $this->submitForm(NULL, $this->t('Uninstall'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The selected modules have been uninstalled.'));

     // Test if the directory and all files have been removed.
     $this->assertFalse($file_system->prepareDirectory($cache_path), 'Cache directory "public://google_analytics" has been removed.');
    ----------- end diff -----------

Applied rules:
 * AssertNoTextRector
 * AssertTextRector
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsSearchTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\Entity\User;
+use Drupal\node\NodeInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\search\SearchIndexInterface;
@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;

@@ @@
    * @param string $test_string
    *   Some unique identifying string to add to the text of the node.
    *
-   * @return \Drupal\node\NodeInterface
+   * @return NodeInterface
    *   The created node.
    * @internal
    */
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsRolesTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsCustomUrls.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Component\Serialization\Json;
 use Drupal\Tests\BrowserTestBase;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\Entity\User;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/google_analytics/tests/src/Functional/GoogleAnalyticsBasicTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\google_analytics\Functional;

+use Drupal\user\UserInterface;
+use Drupal\user\Entity\User;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
   /**
    * User without permissions to use snippets.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $noSnippetUser;

@@ @@
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/google_analytics/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    * The migration process plugin, configured for lookups in the d6_user_role
    * and d7_user_role migrations.
    *
-   * @var \Drupal\migrate\Plugin\MigrateProcessInterface
+   * @var MigrateProcessInterface
    */
   protected $migrationPlugin;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/google_analytics/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    * The migration process plugin, configured for lookups in the d6_user_role
    * and d7_user_role migrations.
    *
-   * @var \Drupal\migrate\Plugin\MigrateProcessInterface
+   * @var MigrateProcessInterface
    */
   protected $migrationPlugin;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/google_analytics/src/Form/GoogleAnalyticsAdminSettingsForm.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The manages modules.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The manages modules.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountInterface $currentUser, ModuleHandlerInterface $moduleHandler) {
@@ @@
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The $form_state array for the form this element belongs to.
    *
    * @see form_process_pattern()
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/google_analytics/google_analytics.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user\ProfileForm;
+use Drupal\Core\Pager\PagerManagerInterface;
 /**
  * @file
  * Drupal Module: Google Analytics.
@@ @@
       $query_string = '?' . (\Drupal::state()->get('system.css_js_query_string') ?: '0');
       // @todo: Remove conditional after dropping support lower than 9.3.
       // @phpstan-ignore-next-line
-      $library = method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') : file_url_transform_relative(file_create_url('public://google_analytics/gtag.js')) . $query_string;
+      $library = method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') : \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') . $query_string;
     }
     else {
       // Fallback to default.
@@ @@
  */
 function google_analytics_form_user_form_alter(&$form, FormStateInterface $form_state) {
   $config = \Drupal::config('google_analytics.settings');
-  /** @var Drupal\user\ProfileForm $profileForm */
+  /** @var ProfileForm $profileForm */
   $profileForm = $form_state->getFormObject();
-  /** @var Drupal\user\Entity\User $account */
+  /** @var User $account */
   $account = $profileForm->getEntity();

   if ($account->hasPermission('opt-in or out of google analytics tracking') && ($visibility_user_account_mode = $config->get('visibility.user_account_mode')) != 0 && _google_analytics_visibility_roles($account)) {
@@ @@
  * Submit callback for user profile form to save the Google Analytics setting.
  */
 function google_analytics_user_profile_form_submit($form, FormStateInterface $form_state) {
-  /** @var Drupal\user\ProfileForm $profileForm */
+  /** @var ProfileForm $profileForm */
   $profileForm = $form_state->getFormObject();
-  /** @var Drupal\user\Entity\User $account */
+  /** @var User $account */
   $account = $profileForm->getEntity();
   if ($account->id() && $form_state->hasValue('user_account_users')) {
     \Drupal::service('user.data')->set('google_analytics', $account->id(), 'user_account_users', (int) $form_state->getValue('user_account_users'));
@@ @@
   // Only run on search results list.
   if ($config->get('track.site_search')) {
     // Get the pager manager to give us the number of items returned.
-    /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+    /** @var PagerManagerInterface $pager_manager */
     $pager_manager = \Drupal::service('pager.manager');
     $items = 0;
     if ($pager_manager->getPager()) {
@@ @@

           // @todo: Remove conditional after dropping support lower than 9.3.
           // @phpstan-ignore-next-line
-          return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : file_url_transform_relative(file_create_url($file_destination));
+          return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : \Drupal::service('file_url_generator')->generateString($file_destination);

         }
       }
@@ @@
   else {
     // @todo: Remove conditional after dropping support lower than 9.3.
     // @phpstan-ignore-next-line
-    return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : file_url_transform_relative(file_create_url($file_destination));
+    return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : \Drupal::service('file_url_generator')->generateString($file_destination);
   }
 }
    ----------- end diff -----------

Applied rules:
 * FileUrlTransformRelativeRector
 * ArgumentRemoverRector


 [OK] 12 files have been changed by Rector                                      

