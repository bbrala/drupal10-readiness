diff --git a/paragraphs_viewmode.info.yml b/paragraphs_viewmode.info.yml
index 7c97064..c1d526c 100644
--- a/paragraphs_viewmode.info.yml
+++ b/paragraphs_viewmode.info.yml
@@ -1,7 +1,7 @@
 name: Paragraphs View Modes
 type: module
 description: Allows you to select the paragraph view mode on a per paragraph basis.
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 package: Paragraphs
 dependencies:
   - paragraphs:paragraphs
diff --git a/src/ParagraphsViewmodeBehaviorInterface.php b/src/ParagraphsViewmodeBehaviorInterface.php
index 1828085..7385eb4 100644
--- a/src/ParagraphsViewmodeBehaviorInterface.php
+++ b/src/ParagraphsViewmodeBehaviorInterface.php
@@ -15,7 +15,7 @@ interface ParagraphsViewmodeBehaviorInterface extends ParagraphsBehaviorInterfac
    *
    * @param string $view_mode
    *   The current view mode.
-   * @param \Drupal\paragraphs\ParagraphInterface $paragraph
+   * @param ParagraphInterface $paragraph
    *   The paragraph.
    * @param array $context
    *   Additional context information.
diff --git a/src/Plugin/paragraphs/Behavior/ParagraphsViewmodeBehavior.php b/src/Plugin/paragraphs/Behavior/ParagraphsViewmodeBehavior.php
index 035de1a..99dcc57 100644
--- a/src/Plugin/paragraphs/Behavior/ParagraphsViewmodeBehavior.php
+++ b/src/Plugin/paragraphs/Behavior/ParagraphsViewmodeBehavior.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\paragraphs_viewmode\Plugin\paragraphs\Behavior;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 use Drupal\Core\Entity\EntityFieldManager;
@@ -26,14 +27,14 @@ class ParagraphsViewmodeBehavior extends ParagraphsBehaviorBase implements Parag
   /**
    * The entity Display Repository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -46,9 +47,9 @@ class ParagraphsViewmodeBehavior extends ParagraphsBehaviorBase implements Parag
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityFieldManager $entity_field_manager
+   * @param EntityFieldManager $entity_field_manager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityFieldManager $entity_field_manager, EntityDisplayRepositoryInterface $entity_display_repository) {
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 6e557a5..16a2162 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\paragraphs_viewmode\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -40,7 +41,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
