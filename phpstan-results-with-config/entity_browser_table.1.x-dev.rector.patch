diff --git a/composer.json b/composer.json
index d8df742..7801b67 100644
--- a/composer.json
+++ b/composer.json
@@ -12,6 +12,6 @@
     },
     "require": {
         "drupal/entity_browser" : "~2.2",
-        "drupal/core": "^8 || ^9"
+        "drupal/core": "^8 || ^9 || ^10"
     }
 }
diff --git a/entity_browser_table.info.yml b/entity_browser_table.info.yml
index 6930fac..892b1cf 100644
--- a/entity_browser_table.info.yml
+++ b/entity_browser_table.info.yml
@@ -1,8 +1,7 @@
 name: 'Entity Browser - Table Layout'
 type: module
 description: 'Creates a new Entity Browser display widget to display referenced content as a table.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: 'Media'
 dependencies:
   - entity_browser:entity_browser
diff --git a/src/Plugin/Field/FieldWidget/EntityReferenceBrowserTableWidget.php b/src/Plugin/Field/FieldWidget/EntityReferenceBrowserTableWidget.php
index 7ad916d..534e0cc 100644
--- a/src/Plugin/Field/FieldWidget/EntityReferenceBrowserTableWidget.php
+++ b/src/Plugin/Field/FieldWidget/EntityReferenceBrowserTableWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_browser_table\Plugin\Field\FieldWidget;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Component\Utility\Html;
 use Drupal\content_moderation\ModerationInformation;
@@ -143,7 +144,7 @@ class EntityReferenceBrowserTableWidget extends EntityReferenceBrowserWidget {
    *   The ID for the details element.
    * @param string[] $field_parents
    *   Field parents.
-   * @param \Drupal\Core\Entity\ContentEntityInterface[] $entities
+   * @param ContentEntityInterface[] $entities
    *   Array of referenced entities.
    *
    * @return array
@@ -329,7 +330,7 @@ class EntityReferenceBrowserTableWidget extends EntityReferenceBrowserWidget {
   }
 
   /**
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getFirstColumn(EntityInterface $entity): array {
     $value = $this->getFieldWidgetDisplay()->view($entity);
@@ -343,7 +344,7 @@ class EntityReferenceBrowserTableWidget extends EntityReferenceBrowserWidget {
   }
 
   /**
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getAdditionalFieldsColumn(EntityInterface $entity) {
     if (isset($this->getAdditionalFields()['status']) === FALSE) {
@@ -378,7 +379,7 @@ class EntityReferenceBrowserTableWidget extends EntityReferenceBrowserWidget {
   }
 
   /**
-   * @throws \Drupal\Component\Plugin\Exception\PluginException
+   * @throws PluginException
    */
   public function getFieldWidgetDisplay() {
     return $this->fieldDisplayManager->createInstance(
diff --git a/tests/src/Kernel/EntityReferenceBrowserTableWidgetTests.php b/tests/src/Kernel/EntityReferenceBrowserTableWidgetTests.php
index 4b1b765..4b8d53b 100644
--- a/tests/src/Kernel/EntityReferenceBrowserTableWidgetTests.php
+++ b/tests/src/Kernel/EntityReferenceBrowserTableWidgetTests.php
@@ -41,7 +41,7 @@ class EntityReferenceBrowserTableWidgetTests extends KernelTestBase {
     'entity_browser_table',
   ];
 
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp(); // TODO: Change the autogenerated stub
 
     $this->installEntitySchema('taxonomy_term');
@@ -88,7 +88,7 @@ class EntityReferenceBrowserTableWidgetTests extends KernelTestBase {
 
   public function testBuildTableRows__GivenThreeEntities__ReturnArrayOfThree() {
     $testBuildTableRows = $this->widget->buildTableRows($this->entities,$this->detailsId, $this->fieldParents);
-    $this->assertInternalType('array', $testBuildTableRows);
+    $this->assertIsArray($testBuildTableRows);
     $this->assertCount(3, $testBuildTableRows);
   }
 
@@ -121,6 +121,9 @@ class EntityReferenceBrowserTableWidgetTests extends KernelTestBase {
     $this->assertCount(8, $testBuildEditButton);
   }
 
+  /**
+   * @doesNotPerformAssertions
+   */
   public function testGetEntityTypeLabel() {
     // TODO: Figure out how to mock the entityTypeManager response.
     //    $this->assertEquals('Image', $this->widget->getEntityTypeLable($this->entities[0]));
