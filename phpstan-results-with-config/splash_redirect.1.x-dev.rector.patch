diff --git a/splash_redirect.info.yml b/splash_redirect.info.yml
index cbd60dc..3696465 100644
--- a/splash_redirect.info.yml
+++ b/splash_redirect.info.yml
@@ -1,6 +1,6 @@
 name: 'Splash Page Redirect'
 type: module
 description: 'A cookie-based redirect mechanism for implementing splash pages.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: 'Custom'
 configure: splash_redirect.settings
diff --git a/src/EventSubscriber/SplashRedirectEventSubscriber.php b/src/EventSubscriber/SplashRedirectEventSubscriber.php
index 9b55145..4f31815 100644
--- a/src/EventSubscriber/SplashRedirectEventSubscriber.php
+++ b/src/EventSubscriber/SplashRedirectEventSubscriber.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\splash_redirect\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Cookie;
 use Symfony\Component\HttpFoundation\Request;
@@ -21,21 +21,21 @@ class SplashRedirectEventSubscriber implements EventSubscriberInterface {
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;
 
   /**
    * The page cache kill switch.
    *
-   * @var Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;
 
@@ -61,10 +61,10 @@ class SplashRedirectEventSubscriber implements EventSubscriberInterface {
   /**
    * Kernel request event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   Response event.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     $config = $this->configFactory->get('splash_redirect.settings');
     $config_enabled = $config->get('splash_redirect.is_enabled');
     $config_source = $config->get('splash_redirect.source');
@@ -99,7 +99,7 @@ class SplashRedirectEventSubscriber implements EventSubscriberInterface {
         // or else anonymous users will not ever be able to reach source page.
         $this->killSwitch->trigger();
         $redir = new TrustedRedirectResponse($destination->setAbsolute()->toString(), '302');
-        $cookie = new Cookie($config_cookie, 'true', strtotime('now + ' . $config_duration . 'days'), '/', '.' . $http_host, FALSE, FALSE);
+        $cookie = Cookie::create($config_cookie, 'true', strtotime('now + ' . $config_duration . 'days'), '/', '.' . $http_host, FALSE, FALSE);
         $redir->headers->setCookie($cookie);
         $redir->headers->set('Cache-Control', 'public, max-age=0');
         $redir->addCacheableDependency($destination);
diff --git a/src/Form/SplashRedirectSettingsForm.php b/src/Form/SplashRedirectSettingsForm.php
index 3329161..90c9287 100644
--- a/src/Form/SplashRedirectSettingsForm.php
+++ b/src/Form/SplashRedirectSettingsForm.php
@@ -22,35 +22,35 @@ class SplashRedirectSettingsForm extends ConfigFormBase {
   /**
    * Drupal\Core\Config\ConfigFactoryInterface definition.
    *
-   * @var Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Drupal path alias manager service.
    *
-   * @var \Drupal\path_alias\AliasManager;
+   * @var AliasManager ;
    */
   protected $aliasManager;
 
   /**
    * The path validator.
    *
-   * @var \Drupal\Core\Path\PathValidatorInterface
+   * @var PathValidatorInterface
    */
   protected $pathValidator;
 
   /**
    * The request context.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   protected $requestContext;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 0dd5246..0aad703 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\splash_redirect\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
