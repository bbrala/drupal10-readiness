modules/contrib/gsso/gsso.install
modules/contrib/gsso/gsso.module
modules/contrib/gsso/src/Annotation/SSOType.php
modules/contrib/gsso/src/Form/AbstractGSSOSettingsForm.php
modules/contrib/gsso/src/Form/GSSOSettingsForm.php
modules/contrib/gsso/src/Plugin/SSOType/SAML.php
modules/contrib/gsso/src/SSOTypeManager.php
modules/contrib/gsso/src/SSOTypePluginBase.php
modules/contrib/gsso/src/SSOTypePluginInterface.php
modules/contrib/gsso/src/Services/GSSO.php
modules/contrib/gsso/tests/src/Functional/CrudFormTest.php

4 files with changes
====================

1) modules/contrib/gsso/tests/src/Functional/CrudFormTest.php:45

    ---------- begin diff ----------
@@ @@

     $this->drupalLogin($account);
     $this->drupalGet('/admin/group/sso');
-    $this->assertText('Group SSO settings');
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains('Group SSO settings');
   }

   /**
    ----------- end diff -----------

Applied rules:
 * AssertTextRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/gsso/src/Services/GSSO.php:45

    ---------- begin diff ----------
@@ @@
   /**
    * Provides an interface for an entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * Provides an interface for entity type managers.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Provides a database connection service.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;

@@ @@
   /**
    * GSSO constructor.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Provides an interface for an entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Provides an interface for entity type managers.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   Provides a database connection service.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   The logger service the instance should use.
    * @param \Drupal\group\GroupMembershipLoaderInterface $group_membership_loader
    *   The group membership loader.
@@ @@
   /**
    * Get user groups.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   Account to search for.
    */
   public function getUserGroups(UserInterface $account = NULL) {
@@ @@
   /**
    * Remove user from all his groups.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   Account to remove from groups.
    * @param bool $debug
    *   Show debug values.
@@ @@
   /**
    * Associate a User to his respective groups.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to associate to.
    * @param array $fss
    *   Claims.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/gsso/src/Form/AbstractGSSOSettingsForm.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * Provides an interface for an entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;

@@ @@
   /**
    * Provides an interface for entity type managers.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * GSSO Form constructor.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   Provides an interface for an entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Provides an interface for entity type managers.
    */
   public function __construct(EntityFieldManagerInterface $entity_field_manager, EntityTypeManagerInterface $entity_type_manager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/gsso/gsso.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\gsso\Services\GSSO;
 /**
  * @file
  * Group SSO module file.
@@ @@
       $fss = $fss_arr = $fss_group . $sso_separator . $fss_role;
     }
   }
-  /** @var \Drupal\gsso\Services\GSSO $gsso */
+  /** @var GSSO $gsso */
   $gsso = \Drupal::service('gsso.gsso');
   if ($debug) {
     $gsso->logger->get($gsso::GSSO_LOGGER)->debug('User @account FS: @fss', [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

