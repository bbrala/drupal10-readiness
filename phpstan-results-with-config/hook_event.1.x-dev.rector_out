modules/contrib/hook_event/hook_event.module
modules/contrib/hook_event/src/Discovery/ApiDiscovery.php
modules/contrib/hook_event/src/Discovery/ApiDiscoveryInterface.php
modules/contrib/hook_event/src/Event/ApiDiscoveryEvent.php
modules/contrib/hook_event/src/Event/ApiDiscoveryEventInterface.php
modules/contrib/hook_event/src/Event/HookAlterEvent.php
modules/contrib/hook_event/src/Event/HookEvent.php
modules/contrib/hook_event/src/Event/HookEventAlterInterface.php
modules/contrib/hook_event/src/Event/HookEventInterface.php
modules/contrib/hook_event/src/Event/HookInvokeEvent.php
modules/contrib/hook_event/src/Event/HookInvokeEventInterface.php
modules/contrib/hook_event/src/EventSubscriber/ApiDiscoveryEventSubscriber.php
modules/contrib/hook_event/src/Extension/ModuleHandler.php
modules/contrib/hook_event/src/Extension/ModuleHandlerImplementMethodsTrait.php
modules/contrib/hook_event/src/Processor/EntityTypeHookDefinitionProcessor.php
modules/contrib/hook_event/src/Processor/HookDefinitionsProcessor.php
modules/contrib/hook_event/src/Processor/HookDefinitionsProcessorInterface.php
modules/contrib/hook_event/src/Storage/HookDefinitionStorage.php
modules/contrib/hook_event/src/Storage/HookDefinitionStorageInterface.php
modules/contrib/hook_event/src/Utility/HookName.php

7 files with changes
====================

1) modules/contrib/hook_event/src/Storage/HookDefinitionStorage.php:12

    ---------- begin diff ----------
@@ @@
   /**
    * The API files discovery service.
    *
-   * @var \Drupal\hook_event\Discovery\ApiDiscoveryInterface
+   * @var ApiDiscoveryInterface
    */
   protected ApiDiscoveryInterface $apiDiscovery;

@@ @@
   /**
    * Creates the storage instance.
    *
-   * @param \Drupal\hook_event\Discovery\ApiDiscoveryInterface $api_discovery
+   * @param ApiDiscoveryInterface $api_discovery
    *   The API files discovery service.
    */
   public function __construct(ApiDiscoveryInterface $api_discovery,) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/hook_event/src/Processor/EntityTypeHookDefinitionProcessor.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Creates the entity type hooks resolver service.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager service.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/hook_event/src/Extension/ModuleHandlerImplementMethodsTrait.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * The base module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected ModuleHandlerInterface $baseHandler;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/hook_event/src/Extension/ModuleHandler.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The hook definition storge.
    *
-   * @var \Drupal\hook_event\Storage\HookDefinitionStorageInterface
+   * @var HookDefinitionStorageInterface
    */
   protected HookDefinitionStorageInterface $hookDefinitionStorage;

@@ @@
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected EventDispatcherInterface $eventDispatcher;

@@ @@
   /**
    * Constructs module handler decorator.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The original (inner) module handler service.
-   * @param \Drupal\hook_event\Storage\HookDefinitionStorageInterface $hook_definition_storage
+   * @param HookDefinitionStorageInterface $hook_definition_storage
    *   The hook definition storage.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(
@@ @@
    *
    * @param array $arguments
    *   The list of original arguments.
-   * @param \Drupal\hook_event\Event\HookEventInterface $event
+   * @param HookEventInterface $event
    *   The event object containing updated values.
    */
   protected function updateArguments(array &$arguments, HookEventInterface $event): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/hook_event/src/EventSubscriber/ApiDiscoveryEventSubscriber.php:13

    ---------- begin diff ----------
@@ @@
   /**
    * Constructs the api discovery subscriber.
    *
-   * @param \Drupal\hook_event\Processor\HookDefinitionsProcessorInterface $hookDefinitionsProcessor
+   * @param HookDefinitionsProcessorInterface $hookDefinitionsProcessor
    *   The hook definition processor.
    */
   public function __construct(
@@ @@
   /**
    * Allow to alter hook definitions before they are saved.
    *
-   * @param \Drupal\hook_event\Event\ApiDiscoveryEventInterface $event
+   * @param ApiDiscoveryEventInterface $event
    *   The event object.
    */
   public function onHookDefinitionsSave(ApiDiscoveryEventInterface $event): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/hook_event/src/Discovery/ApiDiscovery.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * Creates the api discovery instance.
    *
-   * @param \Drupal\Core\File\FileSystemInterface $fileSystem
+   * @param FileSystemInterface $fileSystem
    *   The file system service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   The cache backend.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The event dispatcher.
    */
   public function __construct(
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


7) modules/contrib/hook_event/hook_event.module:9

    ---------- begin diff ----------
@@ @@
  */
 function hook_event_help($route_name) {
   if ($route_name === 'help.page.hook_event') {
-    $path = drupal_get_path('module', 'hook_event');
+    $path = \Drupal::service('extension.list.module')->getPath('hook_event');
     $output = file_get_contents($path . '/README.md');
     return '<pre>' . $output . '</pre>';
   }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 7 files have been changed by Rector                                       

