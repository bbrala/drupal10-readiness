diff --git a/language_header.info.yml b/language_header.info.yml
index 57c6133..848170c 100644
--- a/language_header.info.yml
+++ b/language_header.info.yml
@@ -1,8 +1,7 @@
 name: 'Language HTTP header'
 type: module
 description: 'Provides language negotiation based on HTTP headers.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'Multilingual - Internationalization'
 dependencies:
   - language
diff --git a/language_header.module b/language_header.module
index 155f447..9fc1089 100644
--- a/language_header.module
+++ b/language_header.module
@@ -33,7 +33,7 @@ function language_header_language_negotiation_info() {
       'name' => t('HTTP header'),
       'weight' => -5,
       'config' => LANGUAGE_HEADER_CONFIG_PATH,
-      'file' => drupal_get_path('module', 'language_header') . '/language_header.module',
+      'file' => \Drupal::service('extension.list.module')->getPath('language_header') . '/language_header.module',
       'description' => t('Determine the language from HTTP header'),
       'callbacks' => array(
         'language' => 'language_header_language',
diff --git a/src/Form/NegotiationHeaderForm.php b/src/Form/NegotiationHeaderForm.php
index ef8730d..dc2a097 100644
--- a/src/Form/NegotiationHeaderForm.php
+++ b/src/Form/NegotiationHeaderForm.php
@@ -18,7 +18,7 @@ class NegotiationHeaderForm extends ConfigFormBase {
   /**
    * The configurable language manager.
    *
-   * @var \Drupal\language\ConfigurableLanguageManagerInterface
+   * @var ConfigurableLanguageManagerInterface
    */
   protected $languageManager;
 
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 89269f3..0c7201b 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\language_header\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -22,14 +23,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
