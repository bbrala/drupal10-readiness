diff --git a/src/Controller/TweetFeed.php b/src/Controller/TweetFeed.php
index f5099e7..cb86541 100644
--- a/src/Controller/TweetFeed.php
+++ b/src/Controller/TweetFeed.php
@@ -1,6 +1,7 @@
 <?php
 namespace Drupal\tweet_feed\Controller;
 
+use Drupal\taxonomy\Entity\Term;
 use Drupal\Core\Link;
 use Drush\Log;
 use Drupal\Core\Controller\ControllerBase;
@@ -454,7 +455,7 @@ class TweetFeed extends ControllerBase {
         }
       }
       if (empty($tid)) {
-        $new_term = \Drupal\taxonomy\Entity\Term::create([
+        $new_term = Term::create([
           'vid' => $taxonomy,
           'name' => $taxonomy_name,
         ]);
diff --git a/src/Entity/TweetEntity.php b/src/Entity/TweetEntity.php
index b620543..cd99db5 100755
--- a/src/Entity/TweetEntity.php
+++ b/src/Entity/TweetEntity.php
@@ -269,7 +269,7 @@ class TweetEntity extends ContentEntityBase implements TweetEntityInterface {
     foreach ($files as $file) {
       $file_uri = $file->getFileUri();
       // I can't believe this will survive Drupal 9 but there is no deprecation notice on it yet.
-      $urls[] = file_create_url($file_uri);
+      $urls[] = \Drupal::service('file_url_generator')->generateAbsoluteString($file_uri);
     }
     return $urls;
   }
diff --git a/src/Form/TweetEntitySettingsForm.php b/src/Form/TweetEntitySettingsForm.php
index 0310c3f..e9c8f22 100755
--- a/src/Form/TweetEntitySettingsForm.php
+++ b/src/Form/TweetEntitySettingsForm.php
@@ -27,7 +27,7 @@ class TweetEntitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class TweetEntitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Form/TwitterProfileEntitySettingsForm.php b/src/Form/TwitterProfileEntitySettingsForm.php
index 3f691c9..b600082 100755
--- a/src/Form/TwitterProfileEntitySettingsForm.php
+++ b/src/Form/TwitterProfileEntitySettingsForm.php
@@ -27,7 +27,7 @@ class TwitterProfileEntitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
@@ -39,7 +39,7 @@ class TwitterProfileEntitySettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/TweetHTMLFormatterType.php b/src/Plugin/Field/FieldFormatter/TweetHTMLFormatterType.php
index ded7e59..7231876 100755
--- a/src/Plugin/Field/FieldFormatter/TweetHTMLFormatterType.php
+++ b/src/Plugin/Field/FieldFormatter/TweetHTMLFormatterType.php
@@ -63,7 +63,7 @@ class TweetHTMLFormatterType extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
diff --git a/src/Plugin/Field/FieldFormatter/UserMentionsFormatterType.php b/src/Plugin/Field/FieldFormatter/UserMentionsFormatterType.php
index 421868e..4721f66 100755
--- a/src/Plugin/Field/FieldFormatter/UserMentionsFormatterType.php
+++ b/src/Plugin/Field/FieldFormatter/UserMentionsFormatterType.php
@@ -65,7 +65,7 @@ class UserMentionsFormatterType extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
diff --git a/src/TweetEntityAccessControlHandler.php b/src/TweetEntityAccessControlHandler.php
index 260c692..598dffa 100755
--- a/src/TweetEntityAccessControlHandler.php
+++ b/src/TweetEntityAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tweet_feed;
 
+use Drupal\tweet_feed\Entity\TweetEntityInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class TweetEntityAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\tweet_feed\Entity\TweetEntityInterface $entity */
+    /** @var TweetEntityInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'access content');
diff --git a/src/TweetEntityHtmlRouteProvider.php b/src/TweetEntityHtmlRouteProvider.php
index 695dce4..79ecde5 100755
--- a/src/TweetEntityHtmlRouteProvider.php
+++ b/src/TweetEntityHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class TweetEntityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/TwitterProfileEntityAccessControlHandler.php b/src/TwitterProfileEntityAccessControlHandler.php
index a6b1a91..cccce3e 100755
--- a/src/TwitterProfileEntityAccessControlHandler.php
+++ b/src/TwitterProfileEntityAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\tweet_feed;
 
+use Drupal\tweet_feed\Entity\TweetEntityInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class TwitterProfileEntityAccessControlHandler extends EntityAccessControlHandle
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\tweet_feed\Entity\TweetEntityInterface $entity */
+    /** @var TweetEntityInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'view published tweet entity entities');
diff --git a/src/TwitterProfileEntityHtmlRouteProvider.php b/src/TwitterProfileEntityHtmlRouteProvider.php
index 278088d..21b639d 100755
--- a/src/TwitterProfileEntityHtmlRouteProvider.php
+++ b/src/TwitterProfileEntityHtmlRouteProvider.php
@@ -32,10 +32,10 @@ class TwitterProfileEntityHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/tweet_feed.install b/tweet_feed.install
index 0eefa17..a5eb25c 100755
--- a/tweet_feed.install
+++ b/tweet_feed.install
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\taxonomy\Entity\Term;
+use Drupal\file\Entity\File;
 use Drupal\taxonomy\Entity\Vocabulary;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 
@@ -23,7 +25,7 @@ function tweet_feed_uninstall() {
         $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid->id());
         if (!empty($terms)) {
           foreach ($terms as $term) {
-            $term = \Drupal\taxonomy\Entity\Term::load($term->tid);
+            $term = Term::load($term->tid);
             $term->delete();
           }
         }
@@ -53,9 +55,9 @@ function tweet_feed_update_9401() {
         $files = $entity->get('linked_images')->getValue();
         foreach ($files as $file) {
           $fid = $file['target_id'];
-          $file_image = \Drupal\file\Entity\File::load($fid);
+          $file_image = File::load($fid);
           if ($file_image) {
-            $imageSRC = file_create_url($file_image->getFileUri());
+            $imageSRC = \Drupal::service('file_url_generator')->generateAbsoluteString($file_image->getFileUri());
             $filename = basename($imageSRC);
             if (empty($tweet_image_titles[$filename])) {
               $tweet_image_titles[$filename] = $entity_id;
