diff --git a/modules/type_style_example/type_style_example.install b/modules/type_style_example/type_style_example.install
index 3e7969f..2009cbc 100644
--- a/modules/type_style_example/type_style_example.install
+++ b/modules/type_style_example/type_style_example.install
@@ -1,10 +1,10 @@
 <?php
 
+use Drupal\node\NodeTypeInterface;
 /**
  * @file
  * Installation routines for the Type Style Example Module.
  */
-
 /**
  * Implements hook_install().
  */
@@ -25,7 +25,7 @@ function type_style_example_install() {
     'visibility',
     'wb_sunny',
   ];
-  /** @var \Drupal\node\NodeTypeInterface[] $content_types */
+  /** @var NodeTypeInterface[] $content_types */
   $content_types = \Drupal::entityTypeManager()
     ->getStorage('node_type')
     ->loadMultiple();
diff --git a/modules/type_style_moderation/type_style_moderation.module b/modules/type_style_moderation/type_style_moderation.module
index b8f1406..7f69326 100644
--- a/modules/type_style_moderation/type_style_moderation.module
+++ b/modules/type_style_moderation/type_style_moderation.module
@@ -1,5 +1,8 @@
 <?php
 
+use Drupal\content_moderation\ContentModerationState;
+use Drupal\workflows\WorkflowInterface;
+use Drupal\content_moderation\ModerationInformationInterface;
 /**
  * @file Hook implementations for the Type Style Moderation module.
  */
@@ -19,11 +22,11 @@ function type_style_moderation_type_style_entity_support() {
  * Implements hook_form_FORM_ID_alter().
  */
 function type_style_moderation_form_workflow_state_edit_form_alter(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\content_moderation\ContentModerationState $state */
+  /** @var ContentModerationState $state */
   $state = $form_state->get('state');
   $state_id = $state->id();
 
-  /** @var \Drupal\workflows\WorkflowInterface $workflow */
+  /** @var WorkflowInterface $workflow */
   $workflow = $form_state->getFormObject()->getEntity();
   $type_plugin = $workflow->getTypePlugin();
   $config = $type_plugin->getConfiguration();
@@ -36,11 +39,11 @@ function type_style_moderation_form_workflow_state_edit_form_alter(array &$form,
  * Form submit callback for the state edit form.
  */
 function type_style_moderation_form_workflow_state_edit_form_submit(array &$form, FormStateInterface $form_state) {
-  /** @var \Drupal\content_moderation\ContentModerationState $state */
+  /** @var ContentModerationState $state */
   $state = $form_state->get('state');
   $state_id = $state->id();
 
-  /** @var \Drupal\workflows\WorkflowInterface $workflow */
+  /** @var WorkflowInterface $workflow */
   $workflow = $form_state->getFormObject()->getEntity();
   $type_plugin = $workflow->getTypePlugin();
   $config = $type_plugin->getConfiguration();
@@ -54,7 +57,7 @@ function type_style_moderation_form_workflow_state_edit_form_submit(array &$form
 function type_style_moderation_form_workflow_transition_edit_form_alter(array &$form, FormStateInterface $form_state) {
   $transition_id = $form['id']['#value'];
 
-  /** @var \Drupal\workflows\WorkflowInterface $workflow */
+  /** @var WorkflowInterface $workflow */
   $workflow = $form_state->getFormObject()->getEntity();
   $type_plugin = $workflow->getTypePlugin();
   $config = $type_plugin->getConfiguration();
@@ -69,7 +72,7 @@ function type_style_moderation_form_workflow_transition_edit_form_alter(array &$
 function type_style_moderation_form_workflow_transition_edit_form_submit(array &$form, FormStateInterface $form_state) {
   $transition_id = $form['id']['#value'];
 
-  /** @var \Drupal\workflows\WorkflowInterface $workflow */
+  /** @var WorkflowInterface $workflow */
   $workflow = $form_state->getFormObject()->getEntity();
   $type_plugin = $workflow->getTypePlugin();
   $config = $type_plugin->getConfiguration();
@@ -80,7 +83,7 @@ function type_style_moderation_form_workflow_transition_edit_form_submit(array &
 /**
  * Helper function to grab a plugin style for a given workflow.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   A workflow entity, or an entity which has a workflow.
  * @param string $plugin
  *   The name of the workflow plugin (i.e. transitions/states).
@@ -102,7 +105,7 @@ function type_style_moderation_get_style(EntityInterface $entity, $plugin, $plug
 /**
  * Helper function to grab all plugin styles for a given workflow.
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   A workflow entity, or an entity which has a workflow.
  * @param string $plugin
  *   The name of the workflow plugin (i.e. transitions/states).
@@ -117,7 +120,7 @@ function type_style_moderation_get_styles(EntityInterface $entity, $plugin, $plu
     $workflow = $entity;
   }
   elseif ($entity instanceof ContentEntityInterface && \Drupal::moduleHandler()->moduleExists('content_moderation')) {
-    /** @var \Drupal\content_moderation\ModerationInformationInterface $information */
+    /** @var ModerationInformationInterface $information */
     $information = \Drupal::service('content_moderation.moderation_information');
     $workflow = $information->getWorkflowForEntity($entity);
   }
diff --git a/tests/src/Functional/TypeStyleTest.php b/tests/src/Functional/TypeStyleTest.php
index 344115a..4904225 100644
--- a/tests/src/Functional/TypeStyleTest.php
+++ b/tests/src/Functional/TypeStyleTest.php
@@ -42,7 +42,8 @@ class TypeStyleTest extends BrowserTestBase {
       'type_style[color]' => '#ffffff',
       'type_style[icon]' => 'my-icon',
     ];
-    $this->drupalPostForm('/admin/structure/types/manage/article', $edit, t('Save content type'));
+    $this->drupalGet('/admin/structure/types/manage/article');
+    $this->submitForm($edit, t('Save content type'));
     // Ensure that the configuration form contains the correct settings.
     $this->drupalGet('/admin/structure/types/manage/article');
     $this->assertSession()->pageTextContains('Style settings');
diff --git a/type_style.api.php b/type_style.api.php
index e299644..c0eeb2a 100644
--- a/type_style.api.php
+++ b/type_style.api.php
@@ -1,15 +1,14 @@
 <?php
 
+use Drupal\Core\Config\Entity\ConfigEntityBundleBase;
 /**
  * @file
  * Hooks related to Type Style module.
  */
-
 /**
  * @addtogroup hooks
  * @{
  */
-
 /**
  * Alter the form used by Type Style to configure styles.
  *
@@ -18,10 +17,10 @@
  *
  * @param array &$form
  *   The full type form. Add new styles to $form['type_style'].
- * @param \Drupal\Core\Config\Entity\ConfigEntityBundleBase $type
+ * @param ConfigEntityBundleBase $type
  *   The type being edited.
  */
-function hook_type_style_form_alter(array &$form, \Drupal\Core\Config\Entity\ConfigEntityBundleBase $type) {
+function hook_type_style_form_alter(array &$form, ConfigEntityBundleBase $type) {
   $label = $type->getEntityType()->getLabel();
   $settings = $type->getThirdPartySettings('type_style');
 
diff --git a/type_style.module b/type_style.module
index 2937cb0..38afb2b 100644
--- a/type_style.module
+++ b/type_style.module
@@ -111,7 +111,7 @@ function type_style_page_attachments(array &$attachments) {
  *
  * You can pass a bundle (ex: NodeType) or a bundlable entity (ex: Node).
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   A bundlable entity, or a bundle entity.
  * @param string $name
  *   The name of the style you want to get (i.e. color, icon).
@@ -131,7 +131,7 @@ function type_style_get_style(EntityInterface $entity, $name, $default = FALSE)
  *
  * You can pass a bundle (ex: NodeType) or a bundlable entity (ex: Node).
  *
- * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param EntityInterface $entity
  *   A bundlable entity, or a bundle entity.
  *
  * @return array
