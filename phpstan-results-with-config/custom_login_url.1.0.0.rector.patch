diff --git a/custom_login_url.info.yml b/custom_login_url.info.yml
index 85411fe..9aa0378 100644
--- a/custom_login_url.info.yml
+++ b/custom_login_url.info.yml
@@ -1,7 +1,7 @@
 name: Custom Login Url
 type: module
 description: 'Back office custom url Security'
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 package: Security
 dependencies:
   - drupal:user
diff --git a/src/KernelSubscriber/KernelSubscriber.php b/src/KernelSubscriber/KernelSubscriber.php
index ae37adb..773b5a4 100644
--- a/src/KernelSubscriber/KernelSubscriber.php
+++ b/src/KernelSubscriber/KernelSubscriber.php
@@ -2,9 +2,9 @@
 
 namespace Drupal\custom_login_url\KernelSubscriber;
 
+use Symfony\Component\HttpKernel\Event\ExceptionEvent;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;
 
@@ -18,14 +18,14 @@ class KernelSubscriber implements EventSubscriberInterface {
   /**
    * Route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * KernelSubscriber constructor.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $routeMatch
+   * @param RouteMatchInterface $routeMatch
    *   The route match.
    */
   public function __construct(RouteMatchInterface $routeMatch) {
@@ -43,10 +43,10 @@ class KernelSubscriber implements EventSubscriberInterface {
   /**
    * {@inheritdoc}
    */
-  public function onException(GetResponseForExceptionEvent $event) {
+  public function onException(ExceptionEvent $event) {
     if ($this->routeMatch->getRouteName() === 'user.page') {
       // Do not redirect to user page if user not connected and page not found.
-      $event->setException(new NotFoundHttpException());
+      $event->setThrowable(new NotFoundHttpException());
     }
   }
 
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index 7041e19..50274db 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -67,7 +67,7 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Return true if the route is a /user/* route.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route.
    *
    * @return bool
@@ -80,7 +80,7 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Alter user route using custom login pattern.
    *
-   * @param \Symfony\Component\Routing\Route $route
+   * @param Route $route
    *   The route.
    */
   protected function alterUserRoute(Route $route) {
diff --git a/tests/src/Unit/CustomLoginUrlValidationTest.php b/tests/src/Unit/CustomLoginUrlValidationTest.php
index 8a86f06..14fff43 100644
--- a/tests/src/Unit/CustomLoginUrlValidationTest.php
+++ b/tests/src/Unit/CustomLoginUrlValidationTest.php
@@ -16,14 +16,14 @@ class CustomLoginUrlValidationTest extends UnitTestCase {
   /**
    * The route subscriber.
    *
-   * @var \Drupal\custom_login_url\Routing\RouteSubscriber
+   * @var RouteSubscriber
    */
   protected RouteSubscriber $routeSubscriber;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->routeSubscriber = new RouteSubscriber();
   }
