diff --git a/modules/wse_config/src/Cache/WseCacheBackend.php b/modules/wse_config/src/Cache/WseCacheBackend.php
index e404edb..01ef010 100644
--- a/modules/wse_config/src/Cache/WseCacheBackend.php
+++ b/modules/wse_config/src/Cache/WseCacheBackend.php
@@ -16,23 +16,23 @@ class WseCacheBackend implements CacheBackendInterface {
   /**
    * The cache backend returned by the decorated cache backend factory.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $innerBackend;
 
   /**
    * The workspace ID detector.
    *
-   * @var \Drupal\wse_config\WorkspaceIdDetector
+   * @var WorkspaceIdDetector
    */
   protected $workspaceIdDetector;
 
   /**
    * Constructs a WseDatabaseBackend object.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $inner_backend
+   * @param CacheBackendInterface $inner_backend
    *   The cache backend returned by the decorated cache backend factory.
-   * @param \Drupal\wse_config\WorkspaceIdDetector $workspace_id_detector
+   * @param WorkspaceIdDetector $workspace_id_detector
    *   The workspace id detector.
    */
   public function __construct(CacheBackendInterface $inner_backend, WorkspaceIdDetector $workspace_id_detector) {
diff --git a/modules/wse_config/src/Cache/WseCacheBackendFactory.php b/modules/wse_config/src/Cache/WseCacheBackendFactory.php
index b576089..02b3456 100644
--- a/modules/wse_config/src/Cache/WseCacheBackendFactory.php
+++ b/modules/wse_config/src/Cache/WseCacheBackendFactory.php
@@ -13,23 +13,23 @@ class WseCacheBackendFactory implements CacheFactoryInterface {
   /**
    * The decorated cache backend factory.
    *
-   * @var \Drupal\Core\Cache\CacheFactoryInterface
+   * @var CacheFactoryInterface
    */
   protected $innerFactory;
 
   /**
    * The workspace ID detector.
    *
-   * @var \Drupal\wse_config\WorkspaceIdDetector
+   * @var WorkspaceIdDetector
    */
   protected $workspaceIdDetector;
 
   /**
    * Constructs the DatabaseBackendFactory object.
    *
-   * @param \Drupal\Core\Cache\CacheFactoryInterface $inner_factory
+   * @param CacheFactoryInterface $inner_factory
    *   The decorated cache backend factory.
-   * @param \Drupal\wse_config\WorkspaceIdDetector $workspace_id_detector
+   * @param WorkspaceIdDetector $workspace_id_detector
    *   The workspace id detector.
    *
    * @throws \BadMethodCallException
diff --git a/modules/wse_config/src/Cache/WseChainedFastBackend.php b/modules/wse_config/src/Cache/WseChainedFastBackend.php
index dd246c8..8bc50b8 100644
--- a/modules/wse_config/src/Cache/WseChainedFastBackend.php
+++ b/modules/wse_config/src/Cache/WseChainedFastBackend.php
@@ -14,16 +14,16 @@ class WseChainedFastBackend extends ChainedFastBackend {
   /**
    * The workspace ID detector.
    *
-   * @var \Drupal\wse_config\WorkspaceIdDetector
+   * @var WorkspaceIdDetector
    */
   protected $workspaceIdDetector;
 
   /**
    * Constructs a ChainedFastBackend object.
    *
-   * @param \Drupal\Core\Cache\CacheBackendInterface $consistent_backend
+   * @param CacheBackendInterface $consistent_backend
    *   The consistent cache backend.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $fast_backend
+   * @param CacheBackendInterface $fast_backend
    *   The fast cache backend.
    * @param string $bin
    *   The cache bin for which the object is created.
diff --git a/modules/wse_config/src/Cache/WseChainedFastBackendFactory.php b/modules/wse_config/src/Cache/WseChainedFastBackendFactory.php
index 77d3528..b97a177 100644
--- a/modules/wse_config/src/Cache/WseChainedFastBackendFactory.php
+++ b/modules/wse_config/src/Cache/WseChainedFastBackendFactory.php
@@ -20,14 +20,14 @@ class WseChainedFastBackendFactory implements CacheFactoryInterface {
   /**
    * The decorated cache backend factory.
    *
-   * @var \Drupal\Core\Cache\CacheFactoryInterface
+   * @var CacheFactoryInterface
    */
   protected $innerFactory;
 
   /**
    * The workspace ID detector.
    *
-   * @var \Drupal\wse_config\WorkspaceIdDetector
+   * @var WorkspaceIdDetector
    */
   protected $workspaceIdDetector;
 
@@ -48,13 +48,13 @@ class WseChainedFastBackendFactory implements CacheFactoryInterface {
   /**
    * Constructs the DatabaseBackendFactory object.
    *
-   * @param \Drupal\Core\Cache\CacheFactoryInterface $inner_factory
+   * @param CacheFactoryInterface $inner_factory
    *   The inner cache backend factory.
-   * @param \Drupal\wse_config\WorkspaceIdDetector $workspace_id_detector
+   * @param WorkspaceIdDetector $workspace_id_detector
    *   The workspace ID detector.
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The decorated cache backend factory.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The settings object.
    * @param string|null $consistent_service_name
    *   (optional) The service name of the consistent backend factory. Defaults
diff --git a/modules/wse_config/src/Event/WseConfigOptOutEvent.php b/modules/wse_config/src/Event/WseConfigOptOutEvent.php
index dd7d796..9cd241e 100644
--- a/modules/wse_config/src/Event/WseConfigOptOutEvent.php
+++ b/modules/wse_config/src/Event/WseConfigOptOutEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\wse_config\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Defines the wse_config opt out event.
diff --git a/modules/wse_config/src/EventSubscriber/WseConfigSubscriber.php b/modules/wse_config/src/EventSubscriber/WseConfigSubscriber.php
index 2a7aceb..6296729 100644
--- a/modules/wse_config/src/EventSubscriber/WseConfigSubscriber.php
+++ b/modules/wse_config/src/EventSubscriber/WseConfigSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wse_config\EventSubscriber;
 
+use Drupal\wse_config\WseConfigDatabaseStorage;
+use Drupal\Core\Entity\EntityFormInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
@@ -30,37 +32,37 @@ class WseConfigSubscriber implements EventSubscriberInterface {
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The WseConfigDatabaseStorage configuration storage.
    *
-   * @var \Drupal\wse_config\WseConfigDatabaseStorage
+   * @var WseConfigDatabaseStorage
    */
   protected $wseConfigStorage;
 
   /**
    * The workspace manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * Module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs event subscriber.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\wse_config\WseConfigDatabaseStorage $wse_config_storage
+   * @param WseConfigDatabaseStorage $wse_config_storage
    *   The WseConfigDatabaseStorage configuration storage.
    */
   public function __construct(MessengerInterface $messenger, StorageInterface $wse_config_storage, WorkspaceManagerInterface $workspace_manager, ModuleHandlerInterface $module_handler) {
@@ -77,7 +79,7 @@ class WseConfigSubscriber implements EventSubscriberInterface {
    *   Workspace safe form event.
    */
   public function onWorkspaceSafeForm(WorkspaceSafeFormEvent $event) {
-    /** @var \Drupal\Core\Entity\EntityFormInterface|NULL $callback_object */
+    /** @var EntityFormInterface|NULL $callback_object */
     $callback_object = $event->getFormState()->getBuildInfo()['callback_object'] ?? NULL;
     if (
       ($callback_object && method_exists($callback_object, 'getEntity') && $callback_object->getEntity() instanceof ConfigEntityInterface)
@@ -93,7 +95,7 @@ class WseConfigSubscriber implements EventSubscriberInterface {
   /**
    * Deploys wse_config to the active config after a workspace got published.
    *
-   * @param \Drupal\wse\Event\WorkspacePublishEvent $event
+   * @param WorkspacePublishEvent $event
    *   The event object passed with the post publish event.
    */
   public function onWorkspacePostPublish(WorkspacePublishEvent $event) {
@@ -119,7 +121,7 @@ class WseConfigSubscriber implements EventSubscriberInterface {
   /**
    * Deploys wse_config to the active config after a workspace is reverted.
    *
-   * @param \Drupal\wse\Event\WorkspaceRevertEvent $event
+   * @param WorkspaceRevertEvent $event
    *   The event object passed with the post revert event.
    */
   public function onWorkspacePostRevert(WorkspaceRevertEvent $event) {
@@ -141,7 +143,7 @@ class WseConfigSubscriber implements EventSubscriberInterface {
   /**
    * Provides a default list of ignored configs.
    *
-   * @param \Drupal\wse_config\Event\WseConfigOptOutEvent $event
+   * @param WseConfigOptOutEvent $event
    *   The wse config opt out event.
    */
   public function onWseConfigOptOut(WseConfigOptOutEvent $event) {
diff --git a/modules/wse_config/src/Form/WseConfigForm.php b/modules/wse_config/src/Form/WseConfigForm.php
index 72a4fff..2c74f66 100644
--- a/modules/wse_config/src/Form/WseConfigForm.php
+++ b/modules/wse_config/src/Form/WseConfigForm.php
@@ -20,7 +20,7 @@ class WseConfigForm extends ContentEntityForm {
     $link = $entity->toLink($this->t('View'))->toRenderable();
 
     $message_arguments = ['%label' => $this->entity->label()];
-    $logger_arguments = $message_arguments + ['link' => render($link)];
+    $logger_arguments = $message_arguments + ['link' => \Drupal::service('renderer')->render($link)];
 
     if ($result == SAVED_NEW) {
       $this->messenger()->addStatus($this->t('New wse config %label has been created.', $message_arguments));
diff --git a/modules/wse_config/src/WorkspaceIdDetector.php b/modules/wse_config/src/WorkspaceIdDetector.php
index c629723..6efa9c5 100644
--- a/modules/wse_config/src/WorkspaceIdDetector.php
+++ b/modules/wse_config/src/WorkspaceIdDetector.php
@@ -14,21 +14,21 @@ class WorkspaceIdDetector {
   /**
    * The session.
    *
-   * @var \Symfony\Component\HttpFoundation\Session\SessionInterface
+   * @var SessionInterface
    */
   protected $session;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
@@ -42,11 +42,11 @@ class WorkspaceIdDetector {
   /**
    * Constructs a WorkspaceIdDetector object.
    *
-   * @param \Symfony\Component\HttpFoundation\Session\SessionInterface $session
+   * @param SessionInterface $session
    *   The session.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
    */
   public function __construct(SessionInterface $session, RequestStack $request_stack, AccountInterface $current_user) {
diff --git a/modules/wse_config/src/WseConfigCachedStorage.php b/modules/wse_config/src/WseConfigCachedStorage.php
index 8aa39a2..ac5a5de 100644
--- a/modules/wse_config/src/WseConfigCachedStorage.php
+++ b/modules/wse_config/src/WseConfigCachedStorage.php
@@ -14,14 +14,14 @@ class WseConfigCachedStorage implements StorageInterface {
   /**
    * The configuration storage to be cached.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $storage;
 
   /**
    * Constructs a new WseConfigCachedStorage.
    *
-   * @param \Drupal\Core\Config\StorageInterface $storage
+   * @param StorageInterface $storage
    *   A configuration storage to be cached.
    */
   public function __construct(StorageInterface $storage) {
diff --git a/modules/wse_config/src/WseConfigDatabaseStorage.php b/modules/wse_config/src/WseConfigDatabaseStorage.php
index a63bc28..194b5c8 100644
--- a/modules/wse_config/src/WseConfigDatabaseStorage.php
+++ b/modules/wse_config/src/WseConfigDatabaseStorage.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\wse_config;
 
+use Drupal\Core\Config\DatabaseStorage;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Config\StorageInterface;
 use Drupal\Core\DependencyInjection\DependencySerializationTrait;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -17,35 +22,35 @@ class WseConfigDatabaseStorage implements StorageInterface {
   /**
    * The decorated config.storage service.
    *
-   * @var \Drupal\Core\Config\DatabaseStorage
+   * @var DatabaseStorage
    */
   protected $inner;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The workspace ID detector.
    *
-   * @var \Drupal\wse_config\WorkspaceIdDetector
+   * @var WorkspaceIdDetector
    */
   protected $workspaceIdDetector;
 
   /**
    * The wse config matcher.
    *
-   * @var \Drupal\wse_config\WseConfigMatcher
+   * @var WseConfigMatcher
    */
   protected $configMatcher;
 
   /**
    * The workspace association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $workspaceAssociation;
 
@@ -59,20 +64,20 @@ class WseConfigDatabaseStorage implements StorageInterface {
   /**
    * Constructs a new WseConfigDatabaseStorage.
    *
-   * @param \Drupal\Core\Config\StorageInterface $inner
+   * @param StorageInterface $inner
    *   The decorated config.storage.active service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\wse_config\WorkspaceIdDetector $workspace_id_detector
+   * @param WorkspaceIdDetector $workspace_id_detector
    *   The workspace ID detector.
-   * @param \Drupal\wse_config\WseConfigMatcher $config_matcher
+   * @param WseConfigMatcher $config_matcher
    *   The wse config matcher.
    * @param string $collection
    *   (optional) The collection to store configuration in. Defaults to the
    *   default collection.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function __construct(StorageInterface $inner, EntityTypeManagerInterface $entity_type_manager, WorkspaceIdDetector $workspace_id_detector, WseConfigMatcher $config_matcher, WorkspaceAssociationInterface $workspace_association, $collection = StorageInterface::DEFAULT_COLLECTION) {
     $this->inner = $inner;
@@ -390,11 +395,11 @@ class WseConfigDatabaseStorage implements StorageInterface {
    * @param string $name
    *   The name of the entity to be loaded.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|false
+   * @return EntityInterface|false
    *   A loaded entity or false if none was found for given name.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getWseConfigEntityByName($name) {
     $entities = $this->getWseConfigEntitiesByNames([$name]);
@@ -407,11 +412,11 @@ class WseConfigDatabaseStorage implements StorageInterface {
    * @param array $names
    *   The names of the entities to be loaded.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   Loaded entities.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getWseConfigEntitiesByNames(array $names) {
     return $this->getWseConfigStorage()->loadByProperties(['name' => $names]);
@@ -427,7 +432,7 @@ class WseConfigDatabaseStorage implements StorageInterface {
    * @return bool
    *   TRUE if wse_config storage should be used.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   protected function wseConfigStorageIsActive() {
     return $this->workspaceIdDetector->getActiveWorkspaceId();
@@ -436,11 +441,11 @@ class WseConfigDatabaseStorage implements StorageInterface {
   /**
    * Shortcut for the entity storage of wse_config entity storage.
    *
-   * @return \Drupal\Core\Entity\EntityStorageInterface
+   * @return EntityStorageInterface
    *   The wse_config entity storage.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function getWseConfigStorage() {
     return $this->entityTypeManager->getStorage('wse_config');
@@ -467,8 +472,8 @@ class WseConfigDatabaseStorage implements StorageInterface {
   /**
    * Writes all config stored in wse_config entities into the inner storage.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function publishWseConfig() {
     $configs = $this->listAllWseConfigs();
@@ -503,8 +508,8 @@ class WseConfigDatabaseStorage implements StorageInterface {
    * @return array
    *   List of config names.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function listAllWseConfigs($prefix = '') {
     $configs = [];
diff --git a/modules/wse_config/src/WseConfigListBuilder.php b/modules/wse_config/src/WseConfigListBuilder.php
index 2a61aed..8cc5957 100644
--- a/modules/wse_config/src/WseConfigListBuilder.php
+++ b/modules/wse_config/src/WseConfigListBuilder.php
@@ -18,27 +18,27 @@ class WseConfigListBuilder extends EntityListBuilder {
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;
 
   /**
    * Constructs a new WseConfigListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
@@ -90,7 +90,7 @@ class WseConfigListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\wse_config\WseConfigInterface $entity */
+    /** @var WseConfigInterface $entity */
     $row['id'] = $entity->toLink();
     $row['status'] = $entity->isEnabled() ? $this->t('Enabled') : $this->t('Disabled');
     $row['uid']['data'] = [
diff --git a/modules/wse_config/src/WseConfigMatcher.php b/modules/wse_config/src/WseConfigMatcher.php
index e54ce5a..dc6c720 100644
--- a/modules/wse_config/src/WseConfigMatcher.php
+++ b/modules/wse_config/src/WseConfigMatcher.php
@@ -21,14 +21,14 @@ class WseConfigMatcher {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a WseConfigMatcher object.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
@@ -61,7 +61,7 @@ class WseConfigMatcher {
    *   List of names of ignored configs.
    */
   public function getIgnoredConfigs(array $configs_to_check) {
-    /** @var \Drupal\wse_config\Event\WseConfigOptOutEvent $event */
+    /** @var WseConfigOptOutEvent $event */
     $event = $this->eventDispatcher->dispatch(
       new WseConfigOptOutEvent(),
       WseConfigEvents::WSE_CONFIG_OPT_OUT
diff --git a/modules/wse_config/wse_config.module b/modules/wse_config/wse_config.module
index 91550ab..48ba983 100644
--- a/modules/wse_config/wse_config.module
+++ b/modules/wse_config/wse_config.module
@@ -1,10 +1,10 @@
 <?php
 
+use Drupal\Core\Entity\EntityTypeInterface;
 /**
  * @file
  * Provides a revisionable content storage for config entities.
  */
-
 /**
  * Implements hook_entity_type_alter().
  *
@@ -13,11 +13,11 @@
  */
 function wse_config_entity_type_alter(array &$entity_types) {
   if (!empty($entity_types['asset_injector_css'])) {
-    /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
+    /** @var EntityTypeInterface[] $entity_types */
     $entity_types['asset_injector_css']->set('internal', TRUE);
   }
   if (!empty($entity_types['view'])) {
-    /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
+    /** @var EntityTypeInterface[] $entity_types */
     $entity_types['view']->set('internal', TRUE);
   }
 }
diff --git a/modules/wse_deploy/src/Event/WorkspaceExportEvent.php b/modules/wse_deploy/src/Event/WorkspaceExportEvent.php
index db049e1..a64e5e0 100644
--- a/modules/wse_deploy/src/Event/WorkspaceExportEvent.php
+++ b/modules/wse_deploy/src/Event/WorkspaceExportEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\wse_deploy\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\workspaces\WorkspaceInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the workspace export event.
@@ -15,14 +15,14 @@ class WorkspaceExportEvent extends Event {
   /**
    * The workspace being exported.
    *
-   * @var \Drupal\workspaces\WorkspaceInterface
+   * @var WorkspaceInterface
    */
   protected $workspace;
 
   /**
    * Constructs a new WorkspaceExportEvent.
    *
-   * @param \Drupal\workspaces\WorkspaceInterface $workspace
+   * @param WorkspaceInterface $workspace
    *   The workspace.
    */
   public function __construct(WorkspaceInterface $workspace) {
@@ -32,7 +32,7 @@ class WorkspaceExportEvent extends Event {
   /**
    * Gets the workspace.
    *
-   * @return \Drupal\workspaces\WorkspaceInterface
+   * @return WorkspaceInterface
    *   The workspace.
    */
   public function getWorkspace() {
diff --git a/modules/wse_deploy/src/Form/WorkspaceExportForm.php b/modules/wse_deploy/src/Form/WorkspaceExportForm.php
index 0cad545..dc72a05 100644
--- a/modules/wse_deploy/src/Form/WorkspaceExportForm.php
+++ b/modules/wse_deploy/src/Form/WorkspaceExportForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wse_deploy\Form;
 
+use Drupal\wse_deploy\WorkspaceExporter;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\workspaces\Form\WorkspacePublishForm;
 use Drupal\workspaces\WorkspaceInterface;
@@ -15,7 +16,7 @@ class WorkspaceExportForm extends WorkspacePublishForm {
   /**
    * The workspace exporter service.
    *
-   * @var \Drupal\wse_deploy\WorkspaceExporter
+   * @var WorkspaceExporter
    */
   protected $workspaceExporter;
 
diff --git a/modules/wse_deploy/src/JsonApiWorkspaceNegotiator.php b/modules/wse_deploy/src/JsonApiWorkspaceNegotiator.php
index 9f90d78..30cd059 100644
--- a/modules/wse_deploy/src/JsonApiWorkspaceNegotiator.php
+++ b/modules/wse_deploy/src/JsonApiWorkspaceNegotiator.php
@@ -15,14 +15,14 @@ class JsonApiWorkspaceNegotiator implements WorkspaceNegotiatorInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a new JsonApiWorkspaceNegotiator object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
diff --git a/modules/wse_deploy/src/WorkspaceExporter.php b/modules/wse_deploy/src/WorkspaceExporter.php
index 6ddb7f1..75868d4 100644
--- a/modules/wse_deploy/src/WorkspaceExporter.php
+++ b/modules/wse_deploy/src/WorkspaceExporter.php
@@ -28,57 +28,57 @@ class WorkspaceExporter {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The workspace association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $workspaceAssociation;
 
   /**
    * The JSON:API serializer.
    *
-   * @var \Drupal\jsonapi\Serializer\Serializer
+   * @var Serializer
    */
   protected $jsonApiSerializer;
 
   /**
    * The JSON:API resource type repository.
    *
-   * @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface
+   * @var ResourceTypeRepositoryInterface
    */
   protected $resourceTypeRepository;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new WorkspaceExporter instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The workspace association service.
-   * @param \Drupal\jsonapi\Serializer\Serializer $serializer
+   * @param Serializer $serializer
    *   The JSON:API serializer.
-   * @param \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface $resource_type_repository
+   * @param ResourceTypeRepositoryInterface $resource_type_repository
    *   The JSON:API resource type repository.
-   * @param \Drupal\Core\File\FileSystemInterface $file_system
+   * @param FileSystemInterface $file_system
    *   The file system service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, WorkspaceAssociationInterface $workspace_association, Serializer $serializer, ResourceTypeRepositoryInterface $resource_type_repository, FileSystemInterface $file_system, EventDispatcherInterface $event_dispatcher) {
diff --git a/modules/wse_group_access/src/Access/WseGroupAccess.php b/modules/wse_group_access/src/Access/WseGroupAccess.php
index 105bac1..ebb81ce 100644
--- a/modules/wse_group_access/src/Access/WseGroupAccess.php
+++ b/modules/wse_group_access/src/Access/WseGroupAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wse_group_access\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -18,7 +19,7 @@ class WseGroupAccess implements AccessInterface {
   /**
    * Checks workspace group access.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(Route $route, RouteMatchInterface $route_match, AccountInterface $account) {
diff --git a/modules/wse_group_access/wse_group_access.module b/modules/wse_group_access/wse_group_access.module
index 0a10b38..9e60847 100644
--- a/modules/wse_group_access/wse_group_access.module
+++ b/modules/wse_group_access/wse_group_access.module
@@ -71,9 +71,9 @@ function wse_group_access_wse_workspace_list_builder_entities_alter(&$entities)
 /**
  * Checks whether an account has access to a workspace, based on the groups.
  *
- * @param \Drupal\workspaces\WorkspaceInterface $workspace
+ * @param WorkspaceInterface $workspace
  *   The workspace to check.
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   (optional) The user object to check. Defaults to the current user.
  *
  * @return bool
diff --git a/modules/wse_scheduler/src/Commands/WseSchedulerCommands.php b/modules/wse_scheduler/src/Commands/WseSchedulerCommands.php
index 7af4a2b..f21cdde 100644
--- a/modules/wse_scheduler/src/Commands/WseSchedulerCommands.php
+++ b/modules/wse_scheduler/src/Commands/WseSchedulerCommands.php
@@ -15,7 +15,7 @@ class WseSchedulerCommands extends DrushCommands {
   /**
    * The scheduled workspace publisher service.
    *
-   * @var \Drupal\wse_scheduler\ScheduledWorkspacePublisher
+   * @var ScheduledWorkspacePublisher
    */
   protected $scheduledWorkspacePublisher;
 
diff --git a/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php b/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php
index cbf9087..85d2d4f 100644
--- a/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php
+++ b/modules/wse_scheduler/src/ScheduledWorkspacePublisher.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\wse_scheduler;
 
+use Drupal\workspaces\WorkspaceInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
@@ -25,30 +28,30 @@ class ScheduledWorkspacePublisher {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a ScheduledWorkspacePublisher object.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(
@@ -69,13 +72,13 @@ class ScheduledWorkspacePublisher {
   public function publishScheduledWorkspaces() {
     try {
       $logger = $this->getLogger('wse_scheduler');
-      /** @var \Drupal\workspaces\WorkspaceInterface $workspace */
+      /** @var WorkspaceInterface $workspace */
       foreach ($this->loadScheduledWorkspaces() as $workspace) {
 
         /** @var WorkspaceScheduledPublishEvent $event */
         $event = $this->eventDispatcher->dispatch(
-          WorkspaceSchedulerEvents::SCHEDULED_PUBLISHING_ELIGIBLE,
-          new WorkspaceScheduledPublishEvent($workspace)
+          new WorkspaceScheduledPublishEvent($workspace),
+          WorkspaceSchedulerEvents::SCHEDULED_PUBLISHING_ELIGIBLE
         );
 
         if ($event->isPublishingEligible()) {
@@ -101,10 +104,10 @@ class ScheduledWorkspacePublisher {
   /**
    * Loads workspaces which were scheduled and are due for publishing.
    *
-   * @return \Drupal\workspaces\WorkspaceInterface[]
+   * @return WorkspaceInterface[]
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function loadScheduledWorkspaces() {
     $storage = $this->entityTypeManager->getStorage('workspace');
diff --git a/modules/wse_scheduler/wse_scheduler.module b/modules/wse_scheduler/wse_scheduler.module
index f48956b..2ba36d8 100644
--- a/modules/wse_scheduler/wse_scheduler.module
+++ b/modules/wse_scheduler/wse_scheduler.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\workspaces\WorkspaceInterface;
 /**
  * @file
  * Contains hooks for wse_scheduler module.
@@ -82,7 +83,7 @@ function wse_scheduler_form_workspace_add_form_alter(&$form, FormStateInterface
  *   gets committed.
  */
 function wse_scheduler_entity_type_alter(array &$entity_types) {
-  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
+  /** @var EntityTypeInterface[] $entity_types */
   $entity_types['workspace']->setHandlerClass('views_data', EntityViewsData::class);
 }
 
@@ -100,7 +101,7 @@ function wse_scheduler_alter_workspace_form(&$form) {
  * Additional submit handler for workspaces edit and add forms.
  */
 function wse_scheduler_workspace_form_submit(&$form, FormStateInterface $form_state) {
-  /** @var \Drupal\workspaces\WorkspaceInterface $workspace */
+  /** @var WorkspaceInterface $workspace */
   $workspace = $form_state->getFormObject()->getEntity();
   $publish_timestamp = !empty($form_state->getValue('publish_on')[0]['value'])
     ? $form_state->getValue('publish_on')[0]['value']->getTimestamp()
diff --git a/src/Access/WorkspaceStateTypeAccess.php b/src/Access/WorkspaceStateTypeAccess.php
index e8a189e..6589be5 100644
--- a/src/Access/WorkspaceStateTypeAccess.php
+++ b/src/Access/WorkspaceStateTypeAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wse\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Routing\Access\AccessInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
@@ -17,7 +18,7 @@ class WorkspaceStateTypeAccess implements AccessInterface {
   /**
    * Checks workspace state type access.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(Route $route, RouteMatchInterface $route_match) {
diff --git a/src/Controller/RevisionDiffController.php b/src/Controller/RevisionDiffController.php
index b2a2924..9fc5e87 100644
--- a/src/Controller/RevisionDiffController.php
+++ b/src/Controller/RevisionDiffController.php
@@ -18,14 +18,14 @@ class RevisionDiffController extends ControllerBase {
   /**
    * The workspaces manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -39,9 +39,9 @@ class RevisionDiffController extends ControllerBase {
   /**
    * The controller constructor.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    * @param \Drupal\diff\DiffLayoutManager $diff_layout_manager
    *   The diff layout service.
diff --git a/src/Controller/SwitchToLiveController.php b/src/Controller/SwitchToLiveController.php
index f60e5d4..41de35a 100644
--- a/src/Controller/SwitchToLiveController.php
+++ b/src/Controller/SwitchToLiveController.php
@@ -17,14 +17,14 @@ class SwitchToLiveController extends ControllerBase {
   /**
    * The workspaces manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * The controller constructor.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspaces.manager service.
    * @param \Drupal\Core\Messenger\MessengerInterface
    *   The messenger service.
@@ -50,7 +50,7 @@ class SwitchToLiveController extends ControllerBase {
   /**
    * Switch to Live and redirect to the previous page.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse
+   * @return RedirectResponse
    *   A redirect to home of the live version of the site.
    */
   public function switchToLive() {
diff --git a/src/Event/WorkspacePublishEvent.php b/src/Event/WorkspacePublishEvent.php
index 2d9d248..fd0c1e4 100644
--- a/src/Event/WorkspacePublishEvent.php
+++ b/src/Event/WorkspacePublishEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\wse\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\workspaces\WorkspaceInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the workspace publish event.
@@ -15,14 +15,14 @@ class WorkspacePublishEvent extends Event {
   /**
    * The workspace being published.
    *
-   * @var \Drupal\workspaces\WorkspaceInterface
+   * @var WorkspaceInterface
    */
   protected $workspace;
 
   /**
    * Constructs a new WorkspacePublishEvent.
    *
-   * @param \Drupal\workspaces\WorkspaceInterface $workspace
+   * @param WorkspaceInterface $workspace
    *   The workspace.
    */
   public function __construct(WorkspaceInterface $workspace) {
@@ -32,7 +32,7 @@ class WorkspacePublishEvent extends Event {
   /**
    * Gets the workspace.
    *
-   * @return \Drupal\workspaces\WorkspaceInterface
+   * @return WorkspaceInterface
    *   The workspace.
    */
   public function getWorkspace() {
diff --git a/src/Event/WorkspaceRevertEvent.php b/src/Event/WorkspaceRevertEvent.php
index 5751549..56348d5 100644
--- a/src/Event/WorkspaceRevertEvent.php
+++ b/src/Event/WorkspaceRevertEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\wse\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\workspaces\WorkspaceInterface;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Defines the workspace revert event.
@@ -15,7 +15,7 @@ class WorkspaceRevertEvent extends Event {
   /**
    * The workspace being reverted.
    *
-   * @var \Drupal\workspaces\WorkspaceInterface
+   * @var WorkspaceInterface
    */
   protected $workspace;
 
@@ -36,7 +36,7 @@ class WorkspaceRevertEvent extends Event {
   /**
    * Constructs a new WorkspaceRevertEvent.
    *
-   * @param \Drupal\workspaces\WorkspaceInterface $workspace
+   * @param WorkspaceInterface $workspace
    *   The workspace.
    * @param array $revert_to_revisions
    *   An array of revision IDs which are being set as default revisions by the
@@ -54,7 +54,7 @@ class WorkspaceRevertEvent extends Event {
   /**
    * Gets the workspace.
    *
-   * @return \Drupal\workspaces\WorkspaceInterface
+   * @return WorkspaceInterface
    *   The workspace.
    */
   public function getWorkspace() {
diff --git a/src/EventSubscriber/WorkspacePublishingEventSubscriber.php b/src/EventSubscriber/WorkspacePublishingEventSubscriber.php
index b293218..1a9bd2a 100644
--- a/src/EventSubscriber/WorkspacePublishingEventSubscriber.php
+++ b/src/EventSubscriber/WorkspacePublishingEventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wse\EventSubscriber;
 
+use Drupal\Core\Queue\QueueInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Queue\QueueFactory;
 use Drupal\Core\Site\Settings;
@@ -18,50 +19,50 @@ class WorkspacePublishingEventSubscriber implements EventSubscriberInterface {
   /**
    * The workspace manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * The workspace association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $workspaceAssociation;
 
   /**
    * A config factory for retrieving required config settings.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The workspace revision cleaner queue.
    *
-   * @var \Drupal\Core\Queue\QueueInterface
+   * @var QueueInterface
    */
   protected $queue;
 
   /**
    * The published revisions storage.
    *
-   * @var \Drupal\wse\PublishedRevisionStorage
+   * @var PublishedRevisionStorage
    */
   protected $publishedRevisionStorage;
 
   /**
    * Constructs a new WorkspacePublishingEventSubscriber.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager.
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The workspace association service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving the site front page configuration.
-   * @param \Drupal\wse\PublishedRevisionStorage $published_revision_storage
+   * @param PublishedRevisionStorage $published_revision_storage
    *   The published revisions storage.
-   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   * @param QueueFactory $queue_factory
    *   The queue factory.
    */
   public function __construct(WorkspaceManagerInterface $workspace_manager, WorkspaceAssociationInterface $workspace_association, ConfigFactoryInterface $config_factory, PublishedRevisionStorage $published_revision_storage, QueueFactory $queue_factory) {
diff --git a/src/Form/DiscardEntityForm.php b/src/Form/DiscardEntityForm.php
index f9e29b7..9adfec4 100644
--- a/src/Form/DiscardEntityForm.php
+++ b/src/Form/DiscardEntityForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wse\Form;
 
+use Drupal\Core\Entity\RevisionableInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -19,28 +20,28 @@ class DiscardEntityForm extends ConfirmFormBase implements WorkspaceFormInterfac
   /**
    * The entity that will be discarded.
    *
-   * @var \Drupal\Core\Entity\RevisionableInterface
+   * @var RevisionableInterface
    */
   protected $entity;
 
   /**
    * The workspace from which the entity will be discarded.
    *
-   * @var \Drupal\workspaces\WorkspaceInterface
+   * @var WorkspaceInterface
    */
   protected $sourceWorkspace;
 
   /**
    * The workspace association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $workspaceAssociation;
 
   /**
    * Constructs a new DiscardEntityForm.
    *
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The workspace association service.
    */
   public function __construct(WorkspaceAssociationInterface $workspace_association) {
diff --git a/src/Form/MoveEntityForm.php b/src/Form/MoveEntityForm.php
index 5406d7b..8c07d4a 100644
--- a/src/Form/MoveEntityForm.php
+++ b/src/Form/MoveEntityForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wse\Form;
 
+use Drupal\Core\Entity\RevisionableInterface;
+use Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface;
 use Drupal\Core\Form\ConfirmFormBase;
@@ -21,44 +23,44 @@ class MoveEntityForm extends ConfirmFormBase implements WorkspaceFormInterface,
   /**
    * The entity that will be moved.
    *
-   * @var \Drupal\Core\Entity\RevisionableInterface
+   * @var RevisionableInterface
    */
   protected $entity;
 
   /**
    * The workspace where the entity will be moved from.
    *
-   * @var \Drupal\workspaces\WorkspaceInterface
+   * @var WorkspaceInterface
    */
   protected $sourceWorkspace;
 
   /**
    * The workspace where the entity will be moved to.
    *
-   * @var \Drupal\workspaces\WorkspaceInterface
+   * @var WorkspaceInterface
    */
   protected $targetWorkspace;
 
   /**
    * The workspace association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $workspaceAssociation;
 
   /**
    * The entity reference selection handler.
    *
-   * @var \Drupal\Core\Entity\EntityReferenceSelection\SelectionInterface
+   * @var SelectionInterface
    */
   protected $selectionHandler;
 
   /**
    * Constructs a new MoveEntityForm.
    *
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The workspace association service.
-   * @param \Drupal\Core\Entity\EntityReferenceSelection\SelectionPluginManagerInterface $selection_handler
+   * @param SelectionPluginManagerInterface $selection_handler
    */
   public function __construct(WorkspaceAssociationInterface $workspace_association, SelectionPluginManagerInterface $selection_handler) {
     $this->workspaceAssociation = $workspace_association;
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index b3e09f0..d9a4e60 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -19,7 +19,7 @@ class SettingsForm extends ConfigFormBase implements WorkspaceFormInterface {
   /**
    * The workspaces manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
diff --git a/src/Form/WorkspaceRevertForm.php b/src/Form/WorkspaceRevertForm.php
index a4fba94..188574b 100644
--- a/src/Form/WorkspaceRevertForm.php
+++ b/src/Form/WorkspaceRevertForm.php
@@ -18,21 +18,21 @@ class WorkspaceRevertForm extends ConfirmFormBase implements WorkspaceFormInterf
   /**
    * The workspace that will be reverted.
    *
-   * @var \Drupal\workspaces\WorkspaceInterface
+   * @var WorkspaceInterface
    */
   protected $workspace;
 
   /**
    * The workspace reverter service.
    *
-   * @var \Drupal\wse\WorkspaceReverter
+   * @var WorkspaceReverter
    */
   protected $workspaceReverter;
 
   /**
    * Constructs a new WorkspaceRevertForm.
    *
-   * @param \Drupal\wse\WorkspaceReverter $workspace_reverter
+   * @param WorkspaceReverter $workspace_reverter
    *   The workspace reverter service.
    */
   public function __construct(WorkspaceReverter $workspace_reverter) {
diff --git a/src/Form/WseWorkspacePublishForm.php b/src/Form/WseWorkspacePublishForm.php
index 575ccfc..c94a389 100644
--- a/src/Form/WseWorkspacePublishForm.php
+++ b/src/Form/WseWorkspacePublishForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wse\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -32,7 +33,7 @@ class WseWorkspacePublishForm extends WorkspacePublishForm {
   /**
    * Gets the form workspace.
    *
-   * @return \Drupal\workspaces\WorkspaceInterface
+   * @return WorkspaceInterface
    *   The current form workspace.
    */
   public function getWorkspace() {
@@ -63,7 +64,7 @@ class WseWorkspacePublishForm extends WorkspacePublishForm {
    * {@inheritdoc}
    */
   public function validateForm(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\workspaces\WorkspaceInterface $workspace */
+    /** @var WorkspaceInterface $workspace */
     $workspace = $form_state->getFormObject()->getWorkspace();
     $config = $this->config('wse.settings');
     $save_published_revisions = $config->get('override_save_published_revisions')
@@ -80,7 +81,7 @@ class WseWorkspacePublishForm extends WorkspacePublishForm {
    *
    * @param array $form
    *   The form the select is added to, passed by reference.
-   * @param \Drupal\Core\Config\ImmutableConfig $config
+   * @param ImmutableConfig $config
    *   The wse.settings config object containing the default value.
    */
   public static function addSaveRevisionsSelect(&$form, $config) {
diff --git a/src/Form/WseWorkspaceSwitcherForm.php b/src/Form/WseWorkspaceSwitcherForm.php
index b4c22ef..f62fd31 100644
--- a/src/Form/WseWorkspaceSwitcherForm.php
+++ b/src/Form/WseWorkspaceSwitcherForm.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\wse\Form;
 
+use Drupal\workspaces\WorkspaceInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\TempStore\TempStoreException;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -23,50 +27,50 @@ class WseWorkspaceSwitcherForm extends FormBase implements WorkspaceFormInterfac
   /**
    * The workspace manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The private tempstore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new WseWorkspaceSwitcherForm.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   The private temp store.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(
@@ -189,7 +193,7 @@ class WseWorkspaceSwitcherForm extends FormBase implements WorkspaceFormInterfac
 
     try {
       if ($id) {
-        /** @var \Drupal\workspaces\WorkspaceInterface $workspace */
+        /** @var WorkspaceInterface $workspace */
         $workspace = $this->entityTypeManager->getStorage('workspace')->load($id);
 
         $this->workspaceManager->setActiveWorkspace($workspace);
@@ -211,8 +215,8 @@ class WseWorkspaceSwitcherForm extends FormBase implements WorkspaceFormInterfac
    * @return array
    *   The grouped workspace options, keyed by workspace ID.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getWorkspaceOptions() {
     $recent = (string) $this->t('Recent workspaces');
@@ -282,7 +286,7 @@ class WseWorkspaceSwitcherForm extends FormBase implements WorkspaceFormInterfac
    * @return array
    *   An array of workspace labels, keyed by workspace ID.
    *
-   * @throws \Drupal\Core\TempStore\TempStoreException
+   * @throws TempStoreException
    */
   protected function getRecentWorkspaces($max_options = NULL) {
     $recent_ids = [];
diff --git a/src/PathProcessor/WsePathProcessor.php b/src/PathProcessor/WsePathProcessor.php
index e3bd079..f2c50dd 100644
--- a/src/PathProcessor/WsePathProcessor.php
+++ b/src/PathProcessor/WsePathProcessor.php
@@ -17,23 +17,23 @@ class WsePathProcessor implements OutboundPathProcessorInterface {
   /**
    * The workspace manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * A config factory for retrieving required config settings.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $config;
 
   /**
    * Constructs a WsePathProcessor object.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config
+   * @param ConfigFactoryInterface $config
    *   A config factory for retrieving the site front page configuration.
    */
   public function __construct(WorkspaceManagerInterface $workspace_manager, ConfigFactoryInterface $config) {
diff --git a/src/Plugin/Block/SwitchToLiveBlock.php b/src/Plugin/Block/SwitchToLiveBlock.php
index f97e528..bcac175 100644
--- a/src/Plugin/Block/SwitchToLiveBlock.php
+++ b/src/Plugin/Block/SwitchToLiveBlock.php
@@ -24,7 +24,7 @@ class SwitchToLiveBlock extends BlockBase implements ContainerFactoryPluginInter
   /**
    * The workspace manager service.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
diff --git a/src/Plugin/QueueWorker/WorkspaceRevisionCleaner.php b/src/Plugin/QueueWorker/WorkspaceRevisionCleaner.php
index 128eae3..4549355 100644
--- a/src/Plugin/QueueWorker/WorkspaceRevisionCleaner.php
+++ b/src/Plugin/QueueWorker/WorkspaceRevisionCleaner.php
@@ -23,14 +23,14 @@ class WorkspaceRevisionCleaner extends QueueWorkerBase implements ContainerFacto
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -43,9 +43,9 @@ class WorkspaceRevisionCleaner extends QueueWorkerBase implements ContainerFacto
    *   The plugin ID for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager, TimeInterface $time) {
diff --git a/src/PublishedRevisionStorage.php b/src/PublishedRevisionStorage.php
index 8b16347..333c16e 100644
--- a/src/PublishedRevisionStorage.php
+++ b/src/PublishedRevisionStorage.php
@@ -28,50 +28,50 @@ class PublishedRevisionStorage {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The workspaces.association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $workspacesAssociation;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * The workspace manager service.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * Constructs a PublishedRevisionStorage object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspaces_association
+   * @param WorkspaceAssociationInterface $workspaces_association
    *   The workspaces.association service.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, WorkspaceAssociationInterface $workspaces_association, Connection $connection, TimeInterface $time, WorkspaceManagerInterface $workspace_manager) {
@@ -85,7 +85,7 @@ class PublishedRevisionStorage {
   /**
    * Stores revision IDs that are about to be published from the given workspace.
    *
-   * @param \Drupal\workspaces\WorkspaceInterface $workspace
+   * @param WorkspaceInterface $workspace
    *   The workspace to collect the revision IDs from.
    */
   public function storePublishedRevisions(WorkspaceInterface $workspace) {
@@ -200,7 +200,7 @@ class PublishedRevisionStorage {
   /**
    * Stores all current default revision IDs after the workspace was published.
    *
-   * @param \Drupal\workspaces\WorkspaceInterface $workspace
+   * @param WorkspaceInterface $workspace
    *   The workspace to save the revision snapshot for.
    */
   public function storeAllRevisions(WorkspaceInterface $workspace) {
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index 91ac396..96aed5d 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -24,21 +24,21 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The workspace manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
diff --git a/src/WorkspaceReverter.php b/src/WorkspaceReverter.php
index 5acc77e..a3d8ee5 100644
--- a/src/WorkspaceReverter.php
+++ b/src/WorkspaceReverter.php
@@ -20,59 +20,59 @@ class WorkspaceReverter {
   /**
    * The entity type manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;
 
   /**
    * The workspace manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $workspaceManager;
 
   /**
    * The workspace association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $workspaceAssociation;
 
   /**
    * The published revision storage service.
    *
-   * @var \Drupal\wse\PublishedRevisionStorage
+   * @var PublishedRevisionStorage
    */
   protected $publishedRevisionStorage;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new WorkspaceReverter instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager.
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The workspace association service.
-   * @param \Drupal\wse\PublishedRevisionStorage $published_revision_storage
+   * @param PublishedRevisionStorage $published_revision_storage
    *   The published revision storage.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, Connection $database, WorkspaceManagerInterface $workspace_manager, WorkspaceAssociationInterface $workspace_association, PublishedRevisionStorage $published_revision_storage, EventDispatcherInterface $event_dispatcher) {
@@ -90,7 +90,7 @@ class WorkspaceReverter {
   public function revert(WorkspaceInterface $workspace) {
     $revert_to_revisions = $this->publishedRevisionStorage->getRevertRevisions($workspace->id());
     $revert_from_revisions = $this->publishedRevisionStorage->getPublishedRevisions($workspace->id());
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_PRE_REVERT, new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions));
+    $this->eventDispatcher->dispatch(new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions), WorkspaceEvents::WORKSPACE_PRE_REVERT);
 
     $transaction = $this->database->startTransaction();
     try {
@@ -159,7 +159,7 @@ class WorkspaceReverter {
       throw $e;
     }
 
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_POST_REVERT, new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions));
+    $this->eventDispatcher->dispatch(new WorkspaceRevertEvent($workspace, $revert_to_revisions, $revert_from_revisions), WorkspaceEvents::WORKSPACE_POST_REVERT);
   }
 
 }
diff --git a/src/WseWorkspaceAssociation.php b/src/WseWorkspaceAssociation.php
index a3c6a68..aea0bba 100644
--- a/src/WseWorkspaceAssociation.php
+++ b/src/WseWorkspaceAssociation.php
@@ -19,21 +19,21 @@ class WseWorkspaceAssociation implements WorkspaceAssociationInterface {
   /**
    * The inner workspace association service.
    *
-   * @var \Drupal\workspaces\WorkspaceAssociationInterface
+   * @var WorkspaceAssociationInterface
    */
   protected $innerWorkspaceAssociation;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a WseWorkspaceAssociation object.
    *
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The core workspace association service.
    */
   public function __construct(WorkspaceAssociationInterface $workspace_association, EntityTypeManagerInterface $entity_type_manager) {
@@ -51,11 +51,11 @@ class WseWorkspaceAssociation implements WorkspaceAssociationInterface {
   /**
    * Moves the given entity to another workspace.
    *
-   * @param \Drupal\Core\Entity\RevisionableInterface $entity
+   * @param RevisionableInterface $entity
    *   The entity to move.
-   * @param \Drupal\workspaces\WorkspaceInterface $source_workspace
+   * @param WorkspaceInterface $source_workspace
    *   The workspace in which the entity is currently tracked.
-   * @param \Drupal\workspaces\WorkspaceInterface $target_workspace
+   * @param WorkspaceInterface $target_workspace
    *   The workspace in which the entity will be tracked.
    */
   public function moveEntity(RevisionableInterface $entity, WorkspaceInterface $source_workspace, WorkspaceInterface $target_workspace) {
@@ -112,9 +112,9 @@ class WseWorkspaceAssociation implements WorkspaceAssociationInterface {
   /**
    * Discards the changes for an entity in the given workspace.
    *
-   * @param \Drupal\Core\Entity\RevisionableInterface $entity
+   * @param RevisionableInterface $entity
    *   The entity to discard.
-   * @param \Drupal\workspaces\WorkspaceInterface $workspace
+   * @param WorkspaceInterface $workspace
    *   The workspace in which the entity will be discarded.
    */
   public function discardEntity(RevisionableInterface $entity, WorkspaceInterface $workspace) {
diff --git a/src/WseWorkspaceListBuilder.php b/src/WseWorkspaceListBuilder.php
index 9c51d53..cf64294 100644
--- a/src/WseWorkspaceListBuilder.php
+++ b/src/WseWorkspaceListBuilder.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\wse;
 
+use Drupal\Core\Form\FormBuilderInterface;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Drupal\Core\Datetime\DateFormatter;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ -18,21 +21,21 @@ class WseWorkspaceListBuilder extends WorkspaceListBuilder implements WorkspaceF
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
diff --git a/src/WseWorkspaceManager.php b/src/WseWorkspaceManager.php
index 09e9397..81e96f3 100644
--- a/src/WseWorkspaceManager.php
+++ b/src/WseWorkspaceManager.php
@@ -19,41 +19,41 @@ class WseWorkspaceManager implements WorkspaceManagerInterface {
   /**
    * The decorated workspace manager.
    *
-   * @var \Drupal\workspaces\WorkspaceManagerInterface
+   * @var WorkspaceManagerInterface
    */
   protected $inner;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The private tempstore service.
    *
-   * @var \Drupal\Core\TempStore\PrivateTempStoreFactory
+   * @var PrivateTempStoreFactory
    */
   protected $tempStoreFactory;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * Constructs a new WseWorkspaceManager.
    *
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $inner
+   * @param WorkspaceManagerInterface $inner
    *   The inner workspace manager service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
+   * @param PrivateTempStoreFactory $temp_store_factory
    *   The private temp store.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(WorkspaceManagerInterface $inner, RequestStack $request_stack, PrivateTempStoreFactory $temp_store_factory, TimeInterface $time) {
diff --git a/src/WseWorkspaceOperationFactory.php b/src/WseWorkspaceOperationFactory.php
index 0a40235..dedceb2 100644
--- a/src/WseWorkspaceOperationFactory.php
+++ b/src/WseWorkspaceOperationFactory.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\wse;
 
+use Drupal\workspaces\WorkspacePublisherInterface;
+use Drupal\workspaces\WorkspaceMergerInterface;
 use Drupal\Core\Cache\CacheTagsInvalidatorInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -24,33 +26,33 @@ class WseWorkspaceOperationFactory extends WorkspaceOperationFactory {
   /**
    * The inner workspace operation factory service.
    *
-   * @var \Drupal\workspaces\WorkspaceOperationFactory
+   * @var WorkspaceOperationFactory
    */
   protected $inner;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new WseWorkspaceOperationFactory.
    *
-   * @param \Drupal\workspaces\WorkspaceOperationFactory $workspace_operation_factory
+   * @param WorkspaceOperationFactory $workspace_operation_factory
    *   The inner workspace operation factory service.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager service.
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The workspace association service.
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache_tags_invalidator
+   * @param CacheTagsInvalidatorInterface $cache_tags_invalidator
    *   The cache tags invalidator service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(WorkspaceOperationFactory $workspace_operation_factory, EntityTypeManagerInterface $entity_type_manager, Connection $database, WorkspaceManagerInterface $workspace_manager, WorkspaceAssociationInterface $workspace_association, CacheTagsInvalidatorInterface $cache_tags_invalidator, EventDispatcherInterface $event_dispatcher) {
@@ -66,10 +68,10 @@ class WseWorkspaceOperationFactory extends WorkspaceOperationFactory {
   /**
    * Gets the workspace publisher.
    *
-   * @param \Drupal\workspaces\WorkspaceInterface $source
+   * @param WorkspaceInterface $source
    *   A workspace entity.
    *
-   * @return \Drupal\workspaces\WorkspacePublisherInterface
+   * @return WorkspacePublisherInterface
    *   A workspace publisher object.
    */
   public function getPublisher(WorkspaceInterface $source) {
@@ -79,12 +81,12 @@ class WseWorkspaceOperationFactory extends WorkspaceOperationFactory {
   /**
    * Gets the workspace merger.
    *
-   * @param \Drupal\workspaces\WorkspaceInterface $source
+   * @param WorkspaceInterface $source
    *   The source workspace entity.
-   * @param \Drupal\workspaces\WorkspaceInterface $target
+   * @param WorkspaceInterface $target
    *   The target workspace entity.
    *
-   * @return \Drupal\workspaces\WorkspaceMergerInterface
+   * @return WorkspaceMergerInterface
    *   A workspace merger object.
    */
   public function getMerger(WorkspaceInterface $source, WorkspaceInterface $target) {
diff --git a/src/WseWorkspacePublisher.php b/src/WseWorkspacePublisher.php
index 1594386..ea78f9d 100644
--- a/src/WseWorkspacePublisher.php
+++ b/src/WseWorkspacePublisher.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\wse;
 
+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Component\Utility\Environment;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -24,24 +25,24 @@ class WseWorkspacePublisher extends WorkspacePublisher {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructs a new WseWorkspacePublisher.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   Database connection.
-   * @param \Drupal\workspaces\WorkspaceManagerInterface $workspace_manager
+   * @param WorkspaceManagerInterface $workspace_manager
    *   The workspace manager.
-   * @param \Drupal\workspaces\WorkspaceAssociationInterface $workspace_association
+   * @param WorkspaceAssociationInterface $workspace_association
    *   The workspace association service.
-   * @param \Drupal\workspaces\WorkspaceInterface $source
+   * @param WorkspaceInterface $source
    *   The source workspace entity.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, Connection $database, WorkspaceManagerInterface $workspace_manager, WorkspaceAssociationInterface $workspace_association, WorkspaceInterface $source, EventDispatcherInterface $event_dispatcher) {
@@ -53,7 +54,7 @@ class WseWorkspacePublisher extends WorkspacePublisher {
    * {@inheritdoc}
    */
   public function publish() {
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_PRE_PUBLISH, new WorkspacePublishEvent($this->sourceWorkspace));
+    $this->eventDispatcher->dispatch(new WorkspacePublishEvent($this->sourceWorkspace), WorkspaceEvents::WORKSPACE_PRE_PUBLISH);
 
     // This code is copied from the parent method, but it doesn't use access
     // checks in order to allow workspaces to be published from a CLI process.
@@ -76,7 +77,7 @@ class WseWorkspacePublisher extends WorkspacePublisher {
             $default_revisions = $this->entityTypeManager->getStorage($entity_type_id)
               ->loadMultiple(array_values($revision_difference_chunk));
 
-            /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+            /** @var ContentEntityInterface $entity */
             foreach ($entity_revisions as $entity) {
               // When pushing workspace-specific revisions to the default
               // workspace (Live), we simply need to mark them as default
@@ -110,7 +111,7 @@ class WseWorkspacePublisher extends WorkspacePublisher {
     // Notify the workspace association that a workspace has been published.
     $this->workspaceAssociation->postPublish($this->sourceWorkspace);
 
-    $this->eventDispatcher->dispatch(WorkspaceEvents::WORKSPACE_POST_PUBLISH, new WorkspacePublishEvent($this->sourceWorkspace));
+    $this->eventDispatcher->dispatch(new WorkspacePublishEvent($this->sourceWorkspace), WorkspaceEvents::WORKSPACE_POST_PUBLISH);
   }
 
 }
diff --git a/src/WseWorkspaceRepository.php b/src/WseWorkspaceRepository.php
index d23cab1..a5ff96a 100644
--- a/src/WseWorkspaceRepository.php
+++ b/src/WseWorkspaceRepository.php
@@ -10,12 +10,12 @@ use Drupal\workspaces\WorkspaceRepositoryInterface;
 class WseWorkspaceRepository implements WorkspaceRepositoryInterface {
 
   /**
-   * @var \Drupal\workspaces\WorkspaceRepositoryInterface
+   * @var WorkspaceRepositoryInterface
    */
   protected $innerRepository;
 
   /**
-   * @param \Drupal\workspaces\WorkspaceRepositoryInterface $inner_repository
+   * @param WorkspaceRepositoryInterface $inner_repository
    */
   public function __construct(WorkspaceRepositoryInterface $inner_repository) {
     $this->innerRepository = $inner_repository;
diff --git a/wse.module b/wse.module
index ca9510c..0ecf333 100644
--- a/wse.module
+++ b/wse.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\workspaces\WorkspaceManagerInterface;
 /**
  * @file
  * Provides extra functionality for the Workspaces module.
@@ -198,7 +199,7 @@ function wse_form_workspace_publish_form_alter(&$form, FormStateInterface $form_
  * Entity form builder to add various information to the workspace.
  */
 function wse_workspace_publish_form_validate($form, FormStateInterface $form_state) {
-  /** @var \Drupal\workspaces\WorkspaceInterface $workspace */
+  /** @var WorkspaceInterface $workspace */
   $workspace = $form_state->getFormObject()->getWorkspace();
 
   $workspace->_clone_on_publish = $form_state->getValue('clone_on_publish');
@@ -250,7 +251,7 @@ function wse_toolbar_alter(&$items) {
  * Implements hook_page_attachments().
  */
 function wse_page_attachments(array &$attachments) {
-  /** @var \Drupal\workspaces\WorkspaceManagerInterface $workspace_manger */
+  /** @var WorkspaceManagerInterface $workspace_manger */
   $workspace_manger = \Drupal::service('workspaces.manager');
   $wse_settings = \Drupal::config('wse.settings');
   if ($wse_settings->get('append_current_workspace_to_url') && $workspace_manger->hasActiveWorkspace()) {
