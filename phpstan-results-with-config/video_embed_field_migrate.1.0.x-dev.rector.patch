diff --git a/src/Commands/VideoEmbedFieldMigrateCommands.php b/src/Commands/VideoEmbedFieldMigrateCommands.php
index c379861..03ab943 100644
--- a/src/Commands/VideoEmbedFieldMigrateCommands.php
+++ b/src/Commands/VideoEmbedFieldMigrateCommands.php
@@ -11,12 +11,12 @@ use Drush\Commands\DrushCommands;
 class VideoEmbedFieldMigrateCommands extends DrushCommands {
 
   /**
-   * @var \Drupal\video_embed_field_migrate\VideoEmbedFieldMigrate
+   * @var VideoEmbedFieldMigrate
    */
   protected $videoEmbedMigrate;
 
   /**
-   * @param \Drupal\video_embed_field_migrate\VideoEmbedFieldMigrate $videoEmbedMigrate
+   * @param VideoEmbedFieldMigrate $videoEmbedMigrate
    */
   public function __construct(VideoEmbedFieldMigrate $videoEmbedMigrate) {
     parent::__construct();
diff --git a/src/VideoEmbedFieldMigrate.php b/src/VideoEmbedFieldMigrate.php
index 4f36960..e818b4e 100644
--- a/src/VideoEmbedFieldMigrate.php
+++ b/src/VideoEmbedFieldMigrate.php
@@ -2,6 +2,13 @@
 
 namespace Drupal\video_embed_field_migrate;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\field\Entity\FieldConfig;
+use Drupal\Core\Entity\EntityStorageException;
+use Symfony\Component\Yaml\Yaml;
+use Drupal\Core\Entity\ContentEntityBase;
+use Drupal\Core\Field\FieldItemList;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityDisplayRepository;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -15,30 +22,30 @@ class VideoEmbedFieldMigrate {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
-   * @var \Drupal\Core\Entity\EntityDisplayRepository
+   * @var EntityDisplayRepository
    */
   protected $entityDisplayRepository;
 
   /**
    * Constructs a VideoEmbedMigrate object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityDisplayRepository $entity_display_repository
+   * @param EntityDisplayRepository $entity_display_repository
    *   The entity display repository.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, EntityDisplayRepository $entity_display_repository) {
@@ -49,9 +56,9 @@ class VideoEmbedFieldMigrate {
   }
 
   /**
-   * @return \Drupal\media\Entity\MediaType|bool
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return MediaType|bool
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getRemoteVideoMediaType() {
     $types = $this->entityTypeManager->getStorage('media_type')->loadByProperties(['source' => 'oembed:video']);
@@ -63,8 +70,8 @@ class VideoEmbedFieldMigrate {
    * @param array $entityTypes
    *
    * @return bool
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function isFieldNameAvailable(string $fieldName, array $entityTypes) : bool {
     $fieldConfigQuery = $this->entityTypeManager->getStorage('field_config')->getQuery();
@@ -77,8 +84,8 @@ class VideoEmbedFieldMigrate {
    * Find the video_embed_field field to migrate.
    *
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function findFieldsToMigrate() : array {
     $fields = [];
@@ -89,7 +96,7 @@ class VideoEmbedFieldMigrate {
     $result = $fieldConfigQuery->execute();
 
     foreach($result as $id) {
-      /** @var \Drupal\field\Entity\FieldConfig $fieldConfig */
+      /** @var FieldConfig $fieldConfig */
       $fieldConfig = $fieldConfigStorage->load($id);
       $fields[] = [
         'field_name' => $fieldConfig->getName(),
@@ -109,8 +116,8 @@ class VideoEmbedFieldMigrate {
    * @param string $bundle
    *
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getFieldValues(string $fieldName, string $entityType, string $bundle) : array {
     $values = [];
@@ -137,8 +144,8 @@ class VideoEmbedFieldMigrate {
   }
 
   /**
-   * @return \Drupal\media\Entity\MediaType
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @return MediaType
+   * @throws EntityStorageException
    */
   public function createRemoteVideoMediaType() : MediaType {
     $media_type = MediaType::create([
@@ -166,7 +173,7 @@ class VideoEmbedFieldMigrate {
       ])
       ->save();
 
-    $standardPath = drupal_get_path('profile', 'standard');
+    $standardPath = \Drupal::service('extension.list.profile')->getPath('standard');
     $configs = [
       'core.entity_form_display.media.remote_video.default' => '/config/optional/core.entity_form_display.media.remote_video.default.yml',
       'core.entity_view_display.media.remote_video.default' => '/config/optional/core.entity_view_display.media.remote_video.default.yml'
@@ -179,7 +186,7 @@ class VideoEmbedFieldMigrate {
       $fileContents = file_get_contents($standardPath . $path);
       $editable = \Drupal::configFactory()->getEditable($name);
       if ($editable->isNew()) {
-        $config = \Symfony\Component\Yaml\Yaml::parse($fileContents);
+        $config = Yaml::parse($fileContents);
         $config['uuid'] = array_pop($uuids);
         $editable->setData($config);
         $editable->save();
@@ -192,9 +199,9 @@ class VideoEmbedFieldMigrate {
    * @param string $fieldName
    * @param array $bundles
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function createReferenceFields(string $fieldName, array $bundles) {
     $uuids = [
@@ -267,15 +274,15 @@ class VideoEmbedFieldMigrate {
   }
 
   /**
-   * @param \Drupal\media\Entity\MediaType $mediaType
+   * @param MediaType $mediaType
    * @param string $refFieldName
    * @param string $entityType
    * @param int $id
    * @param string $legacyField
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function migrateField(MediaType $mediaType, string $refFieldName, string $entityType, int $id, string $legacyField) {
     $mediaStorage = $this->entityTypeManager->getStorage('media');
@@ -283,9 +290,9 @@ class VideoEmbedFieldMigrate {
     $sourceField = $mediaType->getSource()->getSourceFieldDefinition($mediaType);
     $fieldValues = [];
 
-    /** @var \Drupal\Core\Entity\ContentEntityBase $targetEntity */
+    /** @var ContentEntityBase $targetEntity */
     $targetEntity = $storage->load($id);
-    /** @var \Drupal\Core\Field\FieldItemList $videoUrlFieldItems */
+    /** @var FieldItemList $videoUrlFieldItems */
     $videoUrlFieldItems = $targetEntity->get($legacyField);
     foreach ($videoUrlFieldItems->getIterator() as $videoUrlFieldItem) {
       $videoUrl = $videoUrlFieldItem->value;
diff --git a/video_embed_field_migrate.info.yml b/video_embed_field_migrate.info.yml
index ba57ec1..51f5318 100644
--- a/video_embed_field_migrate.info.yml
+++ b/video_embed_field_migrate.info.yml
@@ -2,6 +2,6 @@ name: Video Embed Field Migrate
 type: module
 description: Migrate from Video embed fields to core Oembed video media
 package: Custom
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:media
