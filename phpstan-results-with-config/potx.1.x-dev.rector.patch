diff --git a/potx.drush.inc b/potx.drush.inc
index 5575557..83cc17e 100644
--- a/potx.drush.inc
+++ b/potx.drush.inc
@@ -91,7 +91,7 @@ function potx_drush_extract($mode = NULL) {
   if (!empty($modules_option)) {
     $modules = explode(',', $modules_option);
     foreach ($modules as $module) {
-      $files = array_merge($files, _potx_explore_dir(drupal_get_path('module', $module) . '/', '*', $api_option, TRUE));
+      $files = array_merge($files, _potx_explore_dir(\Drupal::service('extension.list.module')->getPath($module) . '/', '*', $api_option, TRUE));
     }
   }
   elseif (!empty($files_option)) {
diff --git a/potx.inc b/potx.inc
index 963ef03..31c091d 100644
--- a/potx.inc
+++ b/potx.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\locale\PluralFormula;
 /**
  * @file
  * Extraction API used by the web and command line interface.
@@ -714,7 +715,7 @@ function _potx_get_header($file, $template_export_langcode = NULL, $api_version
   if (isset($template_export_langcode)) {
     if ($api_version >= POTX_API_8) {
       $languages = \Drupal::languageManager()->getLanguages();
-      /** @var \Drupal\locale\PluralFormula $PluralFormula */
+      /** @var PluralFormula $PluralFormula */
       $plural_formula = \Drupal::service('locale.plural.formula');
       $language = (object) [
         'name' => $languages[$template_export_langcode]->getName(),
diff --git a/src/Commands/PotxCommands.php b/src/Commands/PotxCommands.php
index efa05e6..0a74334 100644
--- a/src/Commands/PotxCommands.php
+++ b/src/Commands/PotxCommands.php
@@ -41,7 +41,7 @@ class PotxCommands extends DrushCommands {
    *   strings: Strings
    *   warnings: Warnings
    *
-   * @return \Consolidation\OutputFormatters\StructuredData\RowsOfFields
+   * @return RowsOfFields
    *   The number of files, strings, and errors processed, in a table format.
    */
   public function potx($mode = NULL, array $options = [
@@ -85,7 +85,7 @@ class PotxCommands extends DrushCommands {
     if (!empty($modules_option)) {
       $modules = explode(',', $modules_option);
       foreach ($modules as $module) {
-        $files = array_merge($files, _potx_explore_dir(drupal_get_path('module', $module) . '/', '*', $api_option, TRUE));
+        $files = array_merge($files, _potx_explore_dir(\Drupal::service('extension.list.module')->getPath($module) . '/', '*', $api_option, TRUE));
       }
     }
     elseif (!empty($files_option)) {
diff --git a/src/Form/PotxExtractTranslationForm.php b/src/Form/PotxExtractTranslationForm.php
index 6921aca..8a7c3c8 100644
--- a/src/Form/PotxExtractTranslationForm.php
+++ b/src/Form/PotxExtractTranslationForm.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\potx\Form;
 
+use Drupal\language\ConfigurableLanguageManagerInterface;
+use Drupal\Core\Extension\Extension;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
@@ -19,32 +21,32 @@ class PotxExtractTranslationForm extends FormBase {
   /**
    * The language manager.
    *
-   * @var \Drupal\language\ConfigurableLanguageManagerInterface
+   * @var ConfigurableLanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * Constructs a new PotxExtractTranslationForm object.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
    */
   public function __construct(LanguageManagerInterface $language_manager, ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler) {
@@ -214,7 +216,7 @@ class PotxExtractTranslationForm extends FormBase {
     // Get a list of all enabled modules and themes.
     $modules = $this->moduleHandler->getModuleList();
     $themes = $this->themeHandler->listInfo();
-    /** @var \Drupal\Core\Extension\Extension[] $result */
+    /** @var Extension[] $result */
     $result = array_merge($modules, $themes);
     foreach ($result as $component) {
       // Build directory tree structure.
diff --git a/tests/src/Kernel/PotxTest.php b/tests/src/Kernel/PotxTest.php
index a51ee17..10c42a2 100644
--- a/tests/src/Kernel/PotxTest.php
+++ b/tests/src/Kernel/PotxTest.php
@@ -21,7 +21,7 @@ class PotxTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     // Add potx.inc which we test for its functionality.
@@ -718,7 +718,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('MsgID "@raw" found', ['@raw' => $string]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -728,7 +728,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('MsgID "@raw" not found', ['@raw' => $string]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') === FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"') === FALSE, $message, $group);
   }
 
   /**
@@ -738,7 +738,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('MsgID "@raw" in context "@context" found', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -748,7 +748,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('No MsgID "@raw" in context "@context" found', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"' . "\nmsgctxt \"" . _potx_format_quoted_string('"' . $context . '"') . '"') === FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . '"' . "\nmsgctxt \"" . _potx_format_quoted_string('"' . $context . '"') . '"') === FALSE, $message, $group);
   }
 
   /**
@@ -758,7 +758,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('Plural ID "@raw" found', ['@raw' => $string]);
     }
-    $this->assert(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgid "' . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -768,7 +768,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('Plural ID "@raw" found with context "@context"', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') !== FALSE, $message, $group);
   }
 
   /**
@@ -778,7 +778,7 @@ class TestConstraint {
     if (!$message) {
       $message = new FormattableMarkup('No plural ID "@raw" found with context "@context"', ['@raw' => $string, '@context' => $context]);
     }
-    $this->assert(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') === FALSE, $message, $group);
+    $this->assertTrue(strpos($this->potx_output, 'msgctxt "' . _potx_format_quoted_string('"' . $context . '"') . "\"\nmsgid \"" . _potx_format_quoted_string('"' . $string . '"') . "\"\nmsgid_plural \"" . _potx_format_quoted_string('"' . $plural . '"') . '"') === FALSE, $message, $group);
   }
 
   /**
@@ -788,13 +788,13 @@ class TestConstraint {
    *   The list of expected errors.
    */
   private function assertPotxErrors($expected_errors) {
-    $this->assert(count($this->potx_status) == count($expected_errors), count($expected_errors) . ' error messages found');
+    $this->assertTrue(count($this->potx_status) == count($expected_errors), count($expected_errors) . ' error messages found');
 
     $potx_errors = array_column($this->potx_status, 0);
     foreach ($expected_errors as $assert_msg => $error_msg) {
       $key = array_search($error_msg, $potx_errors);
 
-      $this->assert($key !== FALSE, $assert_msg . ' found');
+      $this->assertTrue($key !== FALSE, $assert_msg . ' found');
 
       if ($key !== FALSE) {
         unset($potx_errors[$key]);
@@ -813,7 +813,6 @@ class TestConstraint {
     }
     $output_path = "$file_dir/$basename." . $this->randomName(10) . '.html';
     $rv = file_put_contents($output_path, $this->drupalGetContent());
-    $this->pass("$description: " . l(t('Contents of result page'), $output_path));
   }
 
 }
