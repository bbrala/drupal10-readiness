diff --git a/rest_api_access_token.info.yml b/rest_api_access_token.info.yml
index 50edf26..e7ff11e 100755
--- a/rest_api_access_token.info.yml
+++ b/rest_api_access_token.info.yml
@@ -3,5 +3,4 @@ description: REST API Access Token module.
 package: Web services
 type: module
 configure: rest_api_access_token.config_form
-core_version_requirement: ^8 || ^9
-core: 8.x
+core_version_requirement: ^8 || ^9 || ^10
diff --git a/src/Authentication/Event/LogoutEvent.php b/src/Authentication/Event/LogoutEvent.php
index a2ec4ab..6cd44a5 100755
--- a/src/Authentication/Event/LogoutEvent.php
+++ b/src/Authentication/Event/LogoutEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\rest_api_access_token\Authentication\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\Entity\User;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpFoundation\Request;
 
 /**
@@ -16,23 +16,23 @@ class LogoutEvent extends Event {
   /**
    * Request model.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   private $request;
 
   /**
    * User entity.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $user;
 
   /**
    * LogoutEvent constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request model.
-   * @param \Drupal\user\Entity\User $user
+   * @param User $user
    *   User entity.
    */
   public function __construct(Request $request, User $user) {
@@ -43,7 +43,7 @@ class LogoutEvent extends Event {
   /**
    * Get Request model.
    *
-   * @return \Symfony\Component\HttpFoundation\Request
+   * @return Request
    *   Request model.
    */
   public function getRequest(): Request {
@@ -53,7 +53,7 @@ class LogoutEvent extends Event {
   /**
    * Get User entity.
    *
-   * @return \Drupal\user\Entity\User
+   * @return User
    *   User entity.
    */
   public function getUser(): User {
diff --git a/src/Authentication/Event/TokenResponseEvent.php b/src/Authentication/Event/TokenResponseEvent.php
index c261dd4..da00ad5 100755
--- a/src/Authentication/Event/TokenResponseEvent.php
+++ b/src/Authentication/Event/TokenResponseEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\rest_api_access_token\Authentication\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\rest_api_access_token\Model\Token;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class TokenResponseEvent extends Event.
@@ -15,7 +15,7 @@ class TokenResponseEvent extends Event {
   /**
    * Token model.
    *
-   * @var \Drupal\rest_api_access_token\Model\Token
+   * @var Token
    */
   private $token;
 
@@ -43,7 +43,7 @@ class TokenResponseEvent extends Event {
   /**
    * TokenResponseEvent constructor.
    *
-   * @param \Drupal\rest_api_access_token\Model\Token $token
+   * @param Token $token
    *   Token model.
    * @param array $requestContent
    *   Request content.
@@ -56,7 +56,7 @@ class TokenResponseEvent extends Event {
   /**
    * Get Token model.
    *
-   * @return \Drupal\rest_api_access_token\Model\Token
+   * @return Token
    *   Token model.
    */
   public function getToken(): Token {
diff --git a/src/Authentication/Provider/AccessTokenProvider.php b/src/Authentication/Provider/AccessTokenProvider.php
index 55a2ba0..48f268a 100755
--- a/src/Authentication/Provider/AccessTokenProvider.php
+++ b/src/Authentication/Provider/AccessTokenProvider.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\rest_api_access_token\Authentication\Provider;
 
+use Drupal\user\UserStorageInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
@@ -28,46 +32,46 @@ class AccessTokenProvider implements AuthenticationProviderInterface {
   /**
    * Token repository.
    *
-   * @var \Drupal\rest_api_access_token\Repository\TokenRepository
+   * @var TokenRepository
    */
   protected $tokenRepository;
 
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Translator.
    *
-   * @var \Drupal\Core\StringTranslation\TranslationInterface
+   * @var TranslationInterface
    */
   protected $translator;
 
   /**
    * User storage.
    *
-   * @var \Drupal\user\UserStorageInterface
+   * @var UserStorageInterface
    */
   protected $userStorage;
 
   /**
    * AccessTokenProvider constructor.
    *
-   * @param \Drupal\rest_api_access_token\Repository\TokenRepository $tokenRepository
+   * @param TokenRepository $tokenRepository
    *   Token repository.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translator
+   * @param TranslationInterface $translator
    *   Translator.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    *   Invalid plugin definition exception.
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    *   Plugin not found exception.
    */
   public function __construct(TokenRepository $tokenRepository, ConfigFactoryInterface $configFactory, TranslationInterface $translator, EntityTypeManagerInterface $entityTypeManager) {
@@ -87,10 +91,10 @@ class AccessTokenProvider implements AuthenticationProviderInterface {
   /**
    * Authenticate user via tokens in request header.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Symfony http request.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   User entity.
    *
    * @throws \Exception
diff --git a/src/Controller/AuthController.php b/src/Controller/AuthController.php
index 398ccf5..800fdb5 100755
--- a/src/Controller/AuthController.php
+++ b/src/Controller/AuthController.php
@@ -37,41 +37,41 @@ class AuthController extends ControllerBase {
   /**
    * Access token provider.
    *
-   * @var \Drupal\rest_api_access_token\Authentication\Provider\AccessTokenProvider
+   * @var AccessTokenProvider
    */
   protected $accessTokenProvider;
 
   /**
    * Login service.
    *
-   * @var \Drupal\rest_api_access_token\Service\LoginService
+   * @var LoginService
    */
   protected $loginService;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $account;
 
   /**
    * AuthController constructor.
    *
-   * @param \Drupal\rest_api_access_token\Authentication\Provider\AccessTokenProvider $accessTokenProvider
+   * @param AccessTokenProvider $accessTokenProvider
    *   Access token provider.
-   * @param \Drupal\rest_api_access_token\Service\LoginService $loginService
+   * @param LoginService $loginService
    *   Login service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher
+   * @param EventDispatcherInterface $eventDispatcher
    *   The event dispatcher.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   Current user.
    */
   public function __construct(AccessTokenProvider $accessTokenProvider, LoginService $loginService, EventDispatcherInterface $eventDispatcher, AccountProxyInterface $account) {
@@ -98,10 +98,10 @@ class AuthController extends ControllerBase {
   /**
    * Get token and secret after success login.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Symfony http request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Json response.
    *
    * @throws \Exception
@@ -115,7 +115,7 @@ class AuthController extends ControllerBase {
     $token = $this->loginService->login($login, $password);
 
     $event = new TokenResponseEvent($token, $data);
-    $this->eventDispatcher->dispatch(AccessTokenEvents::TOKEN_RESPONSE, $event);
+    $this->eventDispatcher->dispatch($event, AccessTokenEvents::TOKEN_RESPONSE);
 
     if (!$event->hasAccess()) {
       throw new AuthenticationException($event->getErrorMessage());
@@ -133,10 +133,10 @@ class AuthController extends ControllerBase {
   /**
    * Logout user from current device.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Symfony http request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Json response.
    */
   public function logout(Request $request) {
@@ -147,7 +147,7 @@ class AuthController extends ControllerBase {
     $status = $this->loginService->logout($publicToken);
 
     $event = new LogoutEvent($request, $user);
-    $this->eventDispatcher->dispatch(AccessTokenEvents::LOGOUT, $event);
+    $this->eventDispatcher->dispatch($event, AccessTokenEvents::LOGOUT);
 
     $response = [
       self::FIELD_LOGOUT => $status,
@@ -158,10 +158,10 @@ class AuthController extends ControllerBase {
   /**
    * Logout user from all devices.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Symfony http request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Json response.
    */
   public function logoutFromAllDevices(Request $request) {
@@ -171,7 +171,7 @@ class AuthController extends ControllerBase {
     $status = $this->loginService->logoutFromAllDevices($user);
 
     $event = new LogoutEvent($request, $user);
-    $this->eventDispatcher->dispatch(AccessTokenEvents::LOGOUT, $event);
+    $this->eventDispatcher->dispatch($event, AccessTokenEvents::LOGOUT);
 
     $response = [
       self::FIELD_LOGOUT => $status,
diff --git a/src/EventSubscriber/CacheEndpointSubscriber.php b/src/EventSubscriber/CacheEndpointSubscriber.php
index 508e591..ed49c26 100755
--- a/src/EventSubscriber/CacheEndpointSubscriber.php
+++ b/src/EventSubscriber/CacheEndpointSubscriber.php
@@ -2,15 +2,15 @@
 
 namespace Drupal\rest_api_access_token\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Cache\Cache;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\rest_api_access_token\Authentication\Provider\AccessTokenProvider;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
 /**
@@ -25,32 +25,32 @@ class CacheEndpointSubscriber implements EventSubscriberInterface {
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Cache service.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cache;
 
   /**
    * Time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
   /**
    * CacheEndpointSubscriber constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache
+   * @param CacheBackendInterface $cache
    *   Cache service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   Time service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, CacheBackendInterface $cache, TimeInterface $time) {
@@ -79,10 +79,10 @@ class CacheEndpointSubscriber implements EventSubscriberInterface {
   /**
    * Get cached request.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   Response event.
    */
-  public function onKernelRequest(GetResponseEvent $event) {
+  public function onKernelRequest(RequestEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
@@ -108,10 +108,10 @@ class CacheEndpointSubscriber implements EventSubscriberInterface {
   /**
    * Store request response in cache.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   Response event.
    */
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     $request = $event->getRequest();
     $requestId = (string) $request->headers->get(AccessTokenProvider::REQUEST_ID);
diff --git a/src/Repository/TokenRepository.php b/src/Repository/TokenRepository.php
index 18697ef..003218e 100755
--- a/src/Repository/TokenRepository.php
+++ b/src/Repository/TokenRepository.php
@@ -17,7 +17,7 @@ class TokenRepository {
   /**
    * Database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    *   Database connection.
    */
   protected $connection;
@@ -25,7 +25,7 @@ class TokenRepository {
   /**
    * TokenRepository constructor.
    *
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   Database connection.
    */
   public function __construct(Connection $connection) {
@@ -38,10 +38,10 @@ class TokenRepository {
    * @param string $token
    *   User token.
    *
-   * @return \Drupal\rest_api_access_token\Model\Token
+   * @return Token
    *   Return Token model.
    *
-   * @throws \Drupal\rest_api_access_token\Exception\TokenNotFoundException
+   * @throws TokenNotFoundException
    *   Not found exception.
    */
   public function getByPublicToken(string $token) {
@@ -61,7 +61,7 @@ class TokenRepository {
   /**
    * Insert Token model into database.
    *
-   * @param \Drupal\rest_api_access_token\Model\Token $accessToken
+   * @param Token $accessToken
    *   Token model.
    *
    * @return int
@@ -99,7 +99,7 @@ class TokenRepository {
   /**
    * Remove Token model by User.
    *
-   * @param \Drupal\user\Entity\User $user
+   * @param User $user
    *   User model.
    *
    * @return int
diff --git a/src/Service/LoginService.php b/src/Service/LoginService.php
index fda2f7d..29950e9 100755
--- a/src/Service/LoginService.php
+++ b/src/Service/LoginService.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\rest_api_access_token\Service;
 
+use Drupal\rest_api_access_token\Model\Token;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\rest_api_access_token\Exception\AuthenticationException;
 use Drupal\rest_api_access_token\Exception\TokenGeneratorException;
@@ -20,41 +21,41 @@ class LoginService {
   /**
    * Token generator service.
    *
-   * @var \Drupal\rest_api_access_token\Service\TokenGenerator
+   * @var TokenGenerator
    */
   protected $tokenGenerator;
 
   /**
    * Token model repository.
    *
-   * @var \Drupal\rest_api_access_token\Repository\TokenRepository
+   * @var TokenRepository
    */
   protected $tokenRepository;
 
   /**
    * Entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * User authentication service.
    *
-   * @var \Drupal\user\UserAuthInterface
+   * @var UserAuthInterface
    */
   protected $userAuth;
 
   /**
    * LoginService constructor.
    *
-   * @param \Drupal\rest_api_access_token\Service\TokenGenerator $tokenGenerator
+   * @param TokenGenerator $tokenGenerator
    *   Token generator service.
-   * @param \Drupal\rest_api_access_token\Repository\TokenRepository $tokenRepository
+   * @param TokenRepository $tokenRepository
    *   Token model repository.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity manager service.
-   * @param \Drupal\user\UserAuthInterface $userAuth
+   * @param UserAuthInterface $userAuth
    *   User authentication service.
    */
   public function __construct(TokenGenerator $tokenGenerator, TokenRepository $tokenRepository, EntityTypeManagerInterface $entityTypeManager, UserAuthInterface $userAuth) {
@@ -72,7 +73,7 @@ class LoginService {
    * @param string $password
    *   User password.
    *
-   * @return bool|\Drupal\rest_api_access_token\Model\Token
+   * @return bool|Token
    *   Token model
    *
    * @throws \Exception
@@ -133,7 +134,7 @@ class LoginService {
   /**
    * Logout user form all devices.
    *
-   * @param \Drupal\user\Entity\User $user
+   * @param User $user
    *   User entity.
    *
    * @return bool
diff --git a/src/Service/TokenGenerator.php b/src/Service/TokenGenerator.php
index 8240be7..5a1ba95 100755
--- a/src/Service/TokenGenerator.php
+++ b/src/Service/TokenGenerator.php
@@ -18,10 +18,10 @@ class TokenGenerator {
    * @param int $userId
    *   User id.
    *
-   * @return \Drupal\rest_api_access_token\Model\Token
+   * @return Token
    *   Token model.
    *
-   * @throws \Drupal\rest_api_access_token\Exception\TokenGeneratorException
+   * @throws TokenGeneratorException
    *   When hash algorithm generate empty string.
    */
   public function execute(int $userId) {
