modules/contrib/user_online_status/src/Controller/OnlineStatusController.php
modules/contrib/user_online_status/src/Controller/UserOnlineStatusController.php
modules/contrib/user_online_status/src/Form/UserOnlineStatusSettingsForm.php
modules/contrib/user_online_status/src/Plugin/views/field/UserOnlineStatus.php
modules/contrib/user_online_status/src/StatusService.php
modules/contrib/user_online_status/tests/src/Functional/ServiceTest.php
modules/contrib/user_online_status/user_online_status.install
modules/contrib/user_online_status/user_online_status.module
modules/contrib/user_online_status/user_online_status.post_update.php
modules/contrib/user_online_status/user_online_status.views.inc

5 files with changes
====================

1) modules/contrib/user_online_status/tests/src/Functional/ServiceTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\user_online_status\Functional;

+use Drupal\user\Entity\User;
+use Drupal\user_online_status\StatusService;
 use Drupal\Tests\BrowserTestBase;
 use Symfony\Component\HttpFoundation\Request;

@@ @@
   /**
    * The online user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userOnline;

@@ @@
   /**
    * The absent user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userAbsent;

@@ @@
   /**
    * The offline user.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $userOffline;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $now = Request::createFromGlobals()->server->get('REQUEST_TIME');
     // Use default config.
@@ @@
    * Test user online status service.
    */
   public function testUserOnlineStatusService() {
-    /** @var \Drupal\user_online_status\StatusService $status_service */
+    /** @var StatusService $status_service */
     $status_service = \Drupal::service('user_online_status.status_service');

-    $this->assertEqual($status_service->getUserStatus($this->userOnline), 'online');
-    $this->assertEqual($status_service->getUserStatus($this->userAbsent), 'absent');
-    $this->assertEqual($status_service->getUserStatus($this->userOffline), 'offline');
+    $this->assertEquals($status_service->getUserStatus($this->userOnline), 'online');
+    $this->assertEquals($status_service->getUserStatus($this->userAbsent), 'absent');
+    $this->assertEquals($status_service->getUserStatus($this->userOffline), 'offline');
   }

 }
    ----------- end diff -----------

Applied rules:
 * AssertEqualRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/user_online_status/src/StatusService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_online_status;

+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Entity\EntityStorageInterface;
+use Drupal\Core\Config\Config;
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\user\Entity\User;
@@ @@
   /**
    * The current request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * The user storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $userStorage;

@@ @@
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\ImmutableConfig
+   * @var Config|ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * StatusService constructor.
    *
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
+   * @param EntityTypeManager $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   The config factory.
    */
   public function __construct(RequestStack $request_stack, EntityTypeManager $entity_type_manager, ConfigFactory $config_factory) {
@@ @@
   /**
    * Gets the status of a single user.
    *
-   * @param \Drupal\user\Entity\User $user
+   * @param User $user
    *   The user.
    *
    * @return string
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/user_online_status/src/Plugin/views/field/UserOnlineStatus.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_online_status\Plugin\views\field;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Render\RendererInterface;
 use Drupal\user\Entity\User;
@@ @@
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, RendererInterface $renderer) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/user_online_status/src/Controller/UserOnlineStatusController.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The status service.
    *
-   * @var \Drupal\user_online_status\StatusService
+   * @var StatusService
    */
   protected $statusService;

@@ @@
   /**
    * OnlineStatusController constructor.
    *
-   * @param \Drupal\user_online_status\StatusService $status_service
+   * @param StatusService $status_service
    *   The status service.
    */
   public function __construct(StatusService $status_service) {
@@ @@
   /**
    * Returns the status of given users.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response.
    */
   public function content(Request $request) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/user_online_status/src/Controller/OnlineStatusController.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The status service.
    *
-   * @var \Drupal\user_online_status\StatusService
+   * @var StatusService
    */
   protected $statusService;

@@ @@
   /**
    * OnlineStatusController constructor.
    *
-   * @param \Drupal\user_online_status\StatusService $status_service
+   * @param StatusService $status_service
    *   The status service.
    */
   public function __construct(StatusService $status_service) {
@@ @@
    * @param string $uids
    *   The user id's separated by comma.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   The response.
    *
    * @deprecated in 1.0.0-rc4
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 5 files have been changed by Rector                                       

