diff --git a/composer.json b/composer.json
index 3f73e84..7566ec3 100644
--- a/composer.json
+++ b/composer.json
@@ -5,7 +5,6 @@
     "homepage": "http://drupal.org/project/opigno_notification",
     "license": "GPL-2.0-or-later",
     "require": {
-        "drupal/core": "^9"
+        "drupal/core": "^9.3 || ^10"
     }
 }
-
diff --git a/opigno_notification.info.yml b/opigno_notification.info.yml
index d208e3d..635c476 100644
--- a/opigno_notification.info.yml
+++ b/opigno_notification.info.yml
@@ -1,7 +1,7 @@
 name: Opigno Notification
 type: module
 description: Opigno notification.
-core_version_requirement: ^9
+core_version_requirement: ^9.3 || ^10
 package: Opigno
 
 # Information added by Drupal.org packaging script on 2022-04-01
diff --git a/opigno_notification.install b/opigno_notification.install
index c37206e..3b1bf4b 100644
--- a/opigno_notification.install
+++ b/opigno_notification.install
@@ -11,7 +11,7 @@ use Drupal\Core\Config\FileStorage;
  * Update the notifications view config.
  */
 function opigno_notification_update_9001() {
-  $path = drupal_get_path('module', 'opigno_notification') . '/config/optional/';
+  $path = \Drupal::service('extension.list.module')->getPath('opigno_notification') . '/config/optional/';
   $config = 'views.view.opigno_notifications';
   $source = new FileStorage($path);
   \Drupal::service('config.storage')->write($config, $source->read($config));
diff --git a/opigno_notification.module b/opigno_notification.module
index d5b7242..511d4b4 100644
--- a/opigno_notification.module
+++ b/opigno_notification.module
@@ -1,5 +1,9 @@
 <?php
 
+use Drupal\opigno_notification\OpignoNotificationInterface;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 /**
  * @file
  * Contains opigno_notification.module.
@@ -32,10 +36,10 @@ function opigno_notification_theme() {
  * @param string $url
  *   Url to object mentioned in notification.
  *
- * @return \Drupal\opigno_notification\OpignoNotificationInterface
+ * @return OpignoNotificationInterface
  *   Created notification.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function opigno_set_message($uid, $message, $url = '/notifications') {
   $user = \Drupal::currentUser();
@@ -70,11 +74,11 @@ function opigno_notification_preprocess_views_view(&$vars) {
  *
  * Implements hook_user_delete().
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function opigno_notification_user_delete(EntityInterface $entity) {
-  /** @var \Drupal\opigno_notification\OpignoNotificationInterface[] $list */
+  /** @var OpignoNotificationInterface[] $list */
   $list = \Drupal::entityTypeManager()
     ->getStorage('opigno_notification')
     ->loadByProperties([
diff --git a/src/Controller/OpignoNotificationController.php b/src/Controller/OpignoNotificationController.php
index 230b0d6..5b6983e 100644
--- a/src/Controller/OpignoNotificationController.php
+++ b/src/Controller/OpignoNotificationController.php
@@ -28,21 +28,21 @@ class OpignoNotificationController extends ControllerBase {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * Opigno notifications manager service.
    *
-   * @var \Drupal\opigno_notification\Services\OpignoNotificationManager
+   * @var OpignoNotificationManager
    */
   protected $notificationsManager;
 
   /**
    * The router service.
    *
-   * @var \Drupal\Core\Routing\Router
+   * @var Router
    */
   protected $router;
 
@@ -56,13 +56,13 @@ class OpignoNotificationController extends ControllerBase {
   /**
    * OpignoNotificationController constructor.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
-   * @param \Drupal\opigno_notification\Services\OpignoNotificationManager $notifications_manager
+   * @param OpignoNotificationManager $notifications_manager
    *   Opigno notifications manager service.
-   * @param \Drupal\Core\Routing\Router $router
+   * @param Router $router
    *   The router service.
    * @param \Drupal\private_message\Service\PrivateMessageServiceInterface $pm_service
    *   The private messages service.
@@ -97,10 +97,10 @@ class OpignoNotificationController extends ControllerBase {
   /**
    * Ajax callback. Marks all current user notifications as read.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function markReadAll(Request $request): AjaxResponse {
@@ -149,7 +149,7 @@ class OpignoNotificationController extends ControllerBase {
   /**
    * Ajax callback. Get messages and its count.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function getMessages(): AjaxResponse {
diff --git a/src/Entity/OpignoNotification.php b/src/Entity/OpignoNotification.php
index 6dda4df..c02f177 100644
--- a/src/Entity/OpignoNotification.php
+++ b/src/Entity/OpignoNotification.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\opigno_notification\Entity;
 
+use Drupal\user\Entity\User;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ -118,7 +119,7 @@ class OpignoNotification extends ContentEntityBase implements OpignoNotification
   /**
    * Returns unread notifications count.
    *
-   * @param \Drupal\user\Entity\User|null $account
+   * @param User|null $account
    *   User for which notifications will be counted.
    *   Current user if not specified.
    *
@@ -142,7 +143,7 @@ class OpignoNotification extends ContentEntityBase implements OpignoNotification
   /**
    * Returns unread notifications list.
    *
-   * @param \Drupal\user\UserInterface|null $account
+   * @param UserInterface|null $account
    *   User to get notifications for. Current user will be taken by default.
    * @param int $amount
    *   The number of notifications to be loaded.
diff --git a/src/Services/OpignoNotificationManager.php b/src/Services/OpignoNotificationManager.php
index 62fadc6..319a7ff 100644
--- a/src/Services/OpignoNotificationManager.php
+++ b/src/Services/OpignoNotificationManager.php
@@ -23,16 +23,16 @@ class OpignoNotificationManager {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $user = NULL;
 
   /**
    * OpignoNotificationManager constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(AccountInterface $account, EntityTypeManagerInterface $entity_type_manager) {
@@ -52,8 +52,8 @@ class OpignoNotificationManager {
    * @return array
    *   The list of user unread notifications (ILT + LM + standard ones).
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getUserHeaderNotifications(): array {
     if (!$this->user instanceof UserInterface) {
