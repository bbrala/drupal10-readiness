diff --git a/openy_upgrade_tool.install b/openy_upgrade_tool.install
index 9659c96..cd1ee56 100644
--- a/openy_upgrade_tool.install
+++ b/openy_upgrade_tool.install
@@ -140,7 +140,7 @@ function openy_upgrade_tool_update_8004(&$sandbox) {
  * Import new configs + install advanced_help_block.
  */
 function openy_upgrade_tool_update_8005() {
-  $config_dir = drupal_get_path('module', 'openy_upgrade_tool') . '/config/install/';
+  $config_dir = \Drupal::service('extension.list.module')->getPath('openy_upgrade_tool') . '/config/install/';
   // Import new configuration.
   $config_importer = \Drupal::service('openy_upgrade_tool.importer');
   $config_importer->setDirectory($config_dir);
@@ -165,7 +165,7 @@ function openy_upgrade_tool_update_8007() {
   $entityTypeManager = \Drupal::entityTypeManager();
 
   // Load data from demo content.
-  $config_path = drupal_get_path('module', 'openy_demo_ahb') . '/config/install/migrate_plus.migration.openy_demo_entity_ahb.yml';
+  $config_path = \Drupal::service('extension.list.module')->getPath('openy_demo_ahb') . '/config/install/migrate_plus.migration.openy_demo_entity_ahb.yml';
   $entity_ahb_migration_data = Yaml::decode(file_get_contents($config_path));
   if (!isset($entity_ahb_migration_data['source']['data_rows'])) {
     // We have incorrect data.
@@ -195,7 +195,7 @@ function openy_upgrade_tool_update_8007() {
  * Add bulk update actions for OpenY Upgrade dashboard.
  */
 function openy_upgrade_tool_update_8008() {
-  $config_dir = drupal_get_path('module', 'openy_upgrade_tool') . '/config/install/';
+  $config_dir = \Drupal::service('extension.list.module')->getPath('openy_upgrade_tool') . '/config/install/';
   // Import new configuration.
   $config_importer = \Drupal::service('openy_upgrade_tool.importer');
   $config_importer->setDirectory($config_dir);
diff --git a/src/Annotation/ConfigEventIgnore.php b/src/Annotation/ConfigEventIgnore.php
index 49b5a0c..ddb9b33 100644
--- a/src/Annotation/ConfigEventIgnore.php
+++ b/src/Annotation/ConfigEventIgnore.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -33,7 +34,7 @@ class ConfigEventIgnore extends Plugin {
    *
    * @ingroup plugin_translatable
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
diff --git a/src/ConfigEventIgnorePluginManager.php b/src/ConfigEventIgnorePluginManager.php
index 2309d24..89f6cc1 100644
--- a/src/ConfigEventIgnorePluginManager.php
+++ b/src/ConfigEventIgnorePluginManager.php
@@ -77,7 +77,7 @@ class ConfigEventIgnorePluginManager extends DefaultPluginManager {
   /**
    * Check config ignore rules.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   Config object.
    * @param $config_type
    *   Config type.
diff --git a/src/Controller/OpenyUpgradeLogController.php b/src/Controller/OpenyUpgradeLogController.php
index 1499afd..0768353 100644
--- a/src/Controller/OpenyUpgradeLogController.php
+++ b/src/Controller/OpenyUpgradeLogController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Utility\Xss;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Datetime\DateFormatterInterface;
@@ -23,21 +24,21 @@ class OpenyUpgradeLogController extends ControllerBase implements ContainerInjec
   /**
    * Drupal\openy_upgrade_tool\OpenyUpgradeLogManager definition.
    *
-   * @var \Drupal\openy_upgrade_tool\OpenyUpgradeLogManagerInterface
+   * @var OpenyUpgradeLogManagerInterface
    */
   protected $upgradeLogManager;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
@@ -72,7 +73,7 @@ class OpenyUpgradeLogController extends ControllerBase implements ContainerInjec
    * @return array
    *   Render array with dashboard.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function dashboard() {
     $build = [];
@@ -143,7 +144,7 @@ class OpenyUpgradeLogController extends ControllerBase implements ContainerInjec
    * @return array
    *   An array suitable for drupal_render().
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function revisionShow($openy_upgrade_log_revision) {
     $openy_upgrade_log = \Drupal::entityTypeManager()->getStorage('openy_upgrade_log')->loadRevision($openy_upgrade_log_revision);
@@ -161,7 +162,7 @@ class OpenyUpgradeLogController extends ControllerBase implements ContainerInjec
    * @return string
    *   The page title.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function revisionPageTitle($openy_upgrade_log_revision) {
     $openy_upgrade_log = \Drupal::entityTypeManager()->getStorage('openy_upgrade_log')->loadRevision($openy_upgrade_log_revision);
@@ -171,13 +172,13 @@ class OpenyUpgradeLogController extends ControllerBase implements ContainerInjec
   /**
    * Generates an overview table of older revisions of a Openy upgrade log .
    *
-   * @param \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface $openy_upgrade_log
+   * @param OpenyUpgradeLogInterface $openy_upgrade_log
    *   A Openy upgrade log  object.
    *
    * @return array
    *   An array as expected by drupal_render().
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function revisionOverview(OpenyUpgradeLogInterface $openy_upgrade_log) {
     $account = $this->currentUser();
diff --git a/src/Entity/OpenyUpgradeLogInterface.php b/src/Entity/OpenyUpgradeLogInterface.php
index 1e1b9d9..4ec8259 100644
--- a/src/Entity/OpenyUpgradeLogInterface.php
+++ b/src/Entity/OpenyUpgradeLogInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool\Entity;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\RevisionLogInterface;
 use Drupal\Core\Entity\EntityChangedInterface;
@@ -74,7 +75,7 @@ interface OpenyUpgradeLogInterface extends ContentEntityInterface, RevisionLogIn
   /**
    * Gets the Openy upgrade log revision author.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user entity for the revision author.
    */
   public function getRevisionUser();
diff --git a/src/EventSubscriber/ConfigEventSubscriber.php b/src/EventSubscriber/ConfigEventSubscriber.php
index 5950888..deabcbd 100644
--- a/src/EventSubscriber/ConfigEventSubscriber.php
+++ b/src/EventSubscriber/ConfigEventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool\EventSubscriber;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Core\Config\ConfigCrudEvent;
 use Drupal\Core\Config\ConfigEvents;
 use Drupal\Core\Logger\LoggerChannelInterface;
@@ -22,23 +23,23 @@ class ConfigEventSubscriber implements EventSubscriberInterface {
   /**
    * The OpenyUpgradeLogManager.
    *
-   * @var \Drupal\openy_upgrade_tool\OpenyUpgradeLogManagerInterface
+   * @var OpenyUpgradeLogManagerInterface
    */
   protected $upgradeLogManager;
 
   /**
    * Logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * ConfigEventSubscriber constructor.
    *
-   * @param \Drupal\openy_upgrade_tool\OpenyUpgradeLogManagerInterface $upgrade_log_manager
+   * @param OpenyUpgradeLogManagerInterface $upgrade_log_manager
    *   OpenyUpgradeLog Manager.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $loggerChannel
+   * @param LoggerChannelInterface $loggerChannel
    *   Logger channel.
    */
   public function __construct(
@@ -60,10 +61,10 @@ class ConfigEventSubscriber implements EventSubscriberInterface {
   /**
    * Subscriber Callback for the event.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   Configuration save event.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function onSavingConfig(ConfigCrudEvent $event) {
     // TODO: Find solution without global variable.
diff --git a/src/Form/OpenyUpgradeLogDiff.php b/src/Form/OpenyUpgradeLogDiff.php
index a3650d1..18f13bf 100644
--- a/src/Form/OpenyUpgradeLogDiff.php
+++ b/src/Form/OpenyUpgradeLogDiff.php
@@ -29,66 +29,66 @@ class OpenyUpgradeLogDiff extends FormBase {
   /**
    * Drupal\openy_upgrade_tool\OpenyUpgradeLogManager definition.
    *
-   * @var \Drupal\openy_upgrade_tool\OpenyUpgradeLogManagerInterface
+   * @var OpenyUpgradeLogManagerInterface
    */
   protected $upgradeLogManager;
 
   /**
    * Drupal\Core\Config\StorageInterface definition.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $configStorage;
 
   /**
    * The source storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $configRevisionStorage;
 
   /**
    * Drupal\Core\Config\ConfigManagerInterface definition.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * Drupal\Core\Diff\DiffFormatter definition.
    *
-   * @var \Drupal\Core\Diff\DiffFormatter
+   * @var DiffFormatter
    */
   protected $diffFormatter;
 
   /**
    * The date formatter.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * OpenyUpgradeLog entity.
    *
-   * @var \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface
+   * @var OpenyUpgradeLogInterface
    */
   protected $entity;
 
   /**
    * Constructs a new OpenyUpgradeLogDiff object.
    *
-   * @param \Drupal\openy_upgrade_tool\OpenyUpgradeLogManagerInterface $openy_upgrade_log_manager
+   * @param OpenyUpgradeLogManagerInterface $openy_upgrade_log_manager
    *   OpenyUpgradeLogManager.
-   * @param \Drupal\Core\Config\StorageInterface $config_storage
+   * @param StorageInterface $config_storage
    *   Config storage.
-   * @param \Drupal\Core\Config\StorageInterface $config_revision_storage
+   * @param StorageInterface $config_revision_storage
    *   Config revision storage.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $config_manager
+   * @param ConfigManagerInterface $config_manager
    *   Config Manager.
-   * @param \Drupal\Core\Diff\DiffFormatter $diff_formatter
+   * @param DiffFormatter $diff_formatter
    *   The diff formatter.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter.
    */
   public function __construct(
diff --git a/src/Form/OpenyUpgradeLogForm.php b/src/Form/OpenyUpgradeLogForm.php
index 932bbfb..4926b05 100644
--- a/src/Form/OpenyUpgradeLogForm.php
+++ b/src/Form/OpenyUpgradeLogForm.php
@@ -20,7 +20,7 @@ class OpenyUpgradeLogForm extends ContentEntityForm {
   /**
    * Account Proxy.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $accountProxy;
 
diff --git a/src/Form/OpenyUpgradeLogManualMerge.php b/src/Form/OpenyUpgradeLogManualMerge.php
index b1e30dc..a01ea0e 100644
--- a/src/Form/OpenyUpgradeLogManualMerge.php
+++ b/src/Form/OpenyUpgradeLogManualMerge.php
@@ -20,14 +20,14 @@ class OpenyUpgradeLogManualMerge extends FormBase {
   /**
    * Drupal\openy_upgrade_tool\OpenyUpgradeLogManagerInterface definition.
    *
-   * @var \Drupal\openy_upgrade_tool\OpenyUpgradeLogManager
+   * @var OpenyUpgradeLogManager
    */
   protected $upgradeLogManager;
 
   /**
    * OpenyUpgradeLog entity.
    *
-   * @var \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface
+   * @var OpenyUpgradeLogInterface
    */
   protected $entity;
 
@@ -41,7 +41,7 @@ class OpenyUpgradeLogManualMerge extends FormBase {
   /**
    * Constructs a new OpenyUpgradeLogManualMerge object.
    *
-   * @param \Drupal\openy_upgrade_tool\OpenyUpgradeLogManagerInterface $openy_upgrade_log_manager
+   * @param OpenyUpgradeLogManagerInterface $openy_upgrade_log_manager
    *   Open Y Upgrade Log Manager.
    */
   public function __construct(
diff --git a/src/Form/OpenyUpgradeLogRevisionDeleteForm.php b/src/Form/OpenyUpgradeLogRevisionDeleteForm.php
index d266ed1..7736f9f 100644
--- a/src/Form/OpenyUpgradeLogRevisionDeleteForm.php
+++ b/src/Form/OpenyUpgradeLogRevisionDeleteForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool\Form;
 
+use Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface;
 use Drupal\Core\Database\Connection;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Form\ConfirmFormBase;
@@ -20,30 +21,30 @@ class OpenyUpgradeLogRevisionDeleteForm extends ConfirmFormBase {
   /**
    * The Openy upgrade log revision.
    *
-   * @var \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface
+   * @var OpenyUpgradeLogInterface
    */
   protected $revision;
 
   /**
    * The Openy upgrade log storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $OpenyUpgradeLogStorage;
 
   /**
    * The database connection.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $connection;
 
   /**
    * Constructs a new OpenyUpgradeLogRevisionDeleteForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The entity storage.
-   * @param \Drupal\Core\Database\Connection $connection
+   * @param Connection $connection
    *   The database connection.
    */
   public function __construct(EntityStorageInterface $entity_storage, Connection $connection) {
diff --git a/src/Form/OpenyUpgradeLogRevisionRevertForm.php b/src/Form/OpenyUpgradeLogRevisionRevertForm.php
index 7c839cf..f6c869e 100644
--- a/src/Form/OpenyUpgradeLogRevisionRevertForm.php
+++ b/src/Form/OpenyUpgradeLogRevisionRevertForm.php
@@ -21,30 +21,30 @@ class OpenyUpgradeLogRevisionRevertForm extends ConfirmFormBase {
   /**
    * The Openy upgrade log revision.
    *
-   * @var \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface
+   * @var OpenyUpgradeLogInterface
    */
   protected $revision;
 
   /**
    * The Openy upgrade log storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $OpenyUpgradeLogStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
   /**
    * Constructs a new OpenyUpgradeLogRevisionRevertForm.
    *
-   * @param \Drupal\Core\Entity\EntityStorageInterface $entity_storage
+   * @param EntityStorageInterface $entity_storage
    *   The Openy upgrade log storage.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityStorageInterface $entity_storage, DateFormatterInterface $date_formatter) {
@@ -131,12 +131,12 @@ class OpenyUpgradeLogRevisionRevertForm extends ConfirmFormBase {
   /**
    * Prepares a revision to be reverted.
    *
-   * @param \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface $revision
+   * @param OpenyUpgradeLogInterface $revision
    *   The revision to be reverted.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
-   * @return \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface
+   * @return OpenyUpgradeLogInterface
    *   The prepared revision ready to be stored.
    */
   protected function prepareRevertedRevision(OpenyUpgradeLogInterface $revision, FormStateInterface $form_state) {
diff --git a/src/Form/OpenyUpgradeLogSettingsForm.php b/src/Form/OpenyUpgradeLogSettingsForm.php
index ca0d077..b164e74 100644
--- a/src/Form/OpenyUpgradeLogSettingsForm.php
+++ b/src/Form/OpenyUpgradeLogSettingsForm.php
@@ -27,7 +27,7 @@ class OpenyUpgradeLogSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    *
    * @return array
@@ -61,7 +61,7 @@ class OpenyUpgradeLogSettingsForm extends FormBase {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/OpenYUpgradeToolFeatureStorage.php b/src/OpenYUpgradeToolFeatureStorage.php
index 65ccf20..20ef0bd 100644
--- a/src/OpenYUpgradeToolFeatureStorage.php
+++ b/src/OpenYUpgradeToolFeatureStorage.php
@@ -17,7 +17,7 @@ class OpenYUpgradeToolFeatureStorage extends FileStorage {
   /**
    * The active storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $configStorage;
 
diff --git a/src/OpenyUpgradeLogAccessControlHandler.php b/src/OpenyUpgradeLogAccessControlHandler.php
index 750ab1b..b5ca721 100644
--- a/src/OpenyUpgradeLogAccessControlHandler.php
+++ b/src/OpenyUpgradeLogAccessControlHandler.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool;
 
+use Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface;
 use Drupal\Core\Entity\EntityAccessControlHandler;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Session\AccountInterface;
@@ -18,7 +19,7 @@ class OpenyUpgradeLogAccessControlHandler extends EntityAccessControlHandler {
    * {@inheritdoc}
    */
   protected function checkAccess(EntityInterface $entity, $operation, AccountInterface $account) {
-    /** @var \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface $entity */
+    /** @var OpenyUpgradeLogInterface $entity */
     switch ($operation) {
       case 'view':
         return AccessResult::allowedIfHasPermission($account, 'view published openy upgrade log entities');
diff --git a/src/OpenyUpgradeLogHtmlRouteProvider.php b/src/OpenyUpgradeLogHtmlRouteProvider.php
index f9c2c89..7c9f2e4 100644
--- a/src/OpenyUpgradeLogHtmlRouteProvider.php
+++ b/src/OpenyUpgradeLogHtmlRouteProvider.php
@@ -48,10 +48,10 @@ class OpenyUpgradeLogHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the version history route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getHistoryRoute(EntityTypeInterface $entity_type) {
@@ -72,10 +72,10 @@ class OpenyUpgradeLogHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRoute(EntityTypeInterface $entity_type) {
@@ -96,10 +96,10 @@ class OpenyUpgradeLogHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision revert route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionRevertRoute(EntityTypeInterface $entity_type) {
@@ -120,10 +120,10 @@ class OpenyUpgradeLogHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the revision delete route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getRevisionDeleteRoute(EntityTypeInterface $entity_type) {
@@ -144,10 +144,10 @@ class OpenyUpgradeLogHtmlRouteProvider extends AdminHtmlRouteProvider {
   /**
    * Gets the settings form route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getSettingsFormRoute(EntityTypeInterface $entity_type) {
diff --git a/src/OpenyUpgradeLogManager.php b/src/OpenyUpgradeLogManager.php
index 721b5db..2061e6d 100644
--- a/src/OpenyUpgradeLogManager.php
+++ b/src/OpenyUpgradeLogManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\openy_upgrade_tool;
 
+use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
+use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\config\Form\ConfigSync;
 use Drupal\config\StorageReplaceDataWrapper;
 use Drupal\Core\Config\Config;
@@ -53,119 +55,119 @@ class OpenyUpgradeLogManager implements OpenyUpgradeLogManagerInterface {
   /**
    * Entity type manger.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $logger;
 
   /**
    * Logger Entity Storage.
    *
-   * @var \Drupal\Core\Entity\Sql\SqlContentEntityStorage
+   * @var SqlContentEntityStorage
    */
   public $loggerEntityStorage = NULL;
 
   /**
    * The config storage.
    *
-   * @var \Drupal\Core\Config\StorageInterface
+   * @var StorageInterface
    */
   protected $configStorage;
 
   /**
    * The configuration manager.
    *
-   * @var \Drupal\Core\Config\ConfigManagerInterface
+   * @var ConfigManagerInterface
    */
   protected $configManager;
 
   /**
    * The configuration Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The renderer service.
    *
-   * @var \Drupal\openy_upgrade_tool\ConfigEventIgnorePluginManager
+   * @var ConfigEventIgnorePluginManager
    */
   protected $configEventIgnoreManager;
 
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * The database lock object.
    *
-   * @var \Drupal\Core\Lock\LockBackendInterface
+   * @var LockBackendInterface
    */
   protected $lock;
 
   /**
    * The typed config manager.
    *
-   * @var \Drupal\Core\Config\TypedConfigManagerInterface
+   * @var TypedConfigManagerInterface
    */
   protected $typedConfigManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;
 
   /**
    * The module installer.
    *
-   * @var \Drupal\Core\Extension\ModuleInstallerInterface
+   * @var ModuleInstallerInterface
    */
   protected $moduleInstaller;
 
   /**
    * The module extension list.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $moduleExtensionList;
 
   /**
    * Defines a configuration importer.
    *
-   * @var \Drupal\Core\Config\ConfigImporter
+   * @var ConfigImporter
    */
   protected $configImporter;
 
   /**
    * If the config exists, this is that object. Otherwise, FALSE.
    *
-   * @var \Drupal\Core\Config\Config|\Drupal\Core\Config\Entity\ConfigEntityInterface|bool
+   * @var Config|ConfigEntityInterface|bool
    */
   protected $configExists = FALSE;
 
@@ -174,31 +176,31 @@ class OpenyUpgradeLogManager implements OpenyUpgradeLogManagerInterface {
    *
    * @param \Drupal\features\FeaturesManagerInterface $features_manager
    *   Features Manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\Core\Config\StorageInterface $config_storage
+   * @param StorageInterface $config_storage
    *   The config storage.
-   * @param \Drupal\Core\Config\ConfigManagerInterface $config_manager
+   * @param ConfigManagerInterface $config_manager
    *   The configuration manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\openy_upgrade_tool\ConfigEventIgnorePluginManager $config_event_ignore_manager
+   * @param ConfigEventIgnorePluginManager $config_event_ignore_manager
    *   The Config Event Ignore Plugin Manager.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher used to notify subscribers of config import events.
-   * @param \Drupal\Core\Lock\LockBackendInterface $lock
+   * @param LockBackendInterface $lock
    *   The lock backend to ensure multiple imports do not occur at same time.
-   * @param \Drupal\Core\Config\TypedConfigManagerInterface $typed_config
+   * @param TypedConfigManagerInterface $typed_config
    *   The typed configuration manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ModuleInstallerInterface $module_installer
+   * @param ModuleInstallerInterface $module_installer
    *   The module installer.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $loggerChannel
+   * @param LoggerChannelInterface $loggerChannel
    *   Logger channel.
    */
   public function __construct(
diff --git a/src/OpenyUpgradeLogManagerInterface.php b/src/OpenyUpgradeLogManagerInterface.php
index e541341..0098b59 100644
--- a/src/OpenyUpgradeLogManagerInterface.php
+++ b/src/OpenyUpgradeLogManagerInterface.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\openy_upgrade_tool;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Config\Config;
 /**
  * Interface for wrapper with main logic that related to OpenyUpgradeLog.
  */
@@ -70,7 +74,7 @@ interface OpenyUpgradeLogManagerInterface {
    *
    * @see openy_upgrade_tool.install
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function getLoggerEntityTypeName();
 
@@ -85,7 +89,7 @@ interface OpenyUpgradeLogManagerInterface {
    * @return bool
    *   TRUE if config was changed.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
+   * @throws InvalidPluginDefinitionException
    */
   public function isManuallyChanged($config_name, $check_force_mode = TRUE);
 
@@ -95,7 +99,7 @@ interface OpenyUpgradeLogManagerInterface {
    * @param int $id
    *   Upgrade log entity ID.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Upgrade log entity.
    */
   public function load($id);
@@ -106,7 +110,7 @@ interface OpenyUpgradeLogManagerInterface {
    * @param string $config_name
    *   Upgrade log entity name.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Upgrade log entity.
    */
   public function loadByName($config_name);
@@ -120,8 +124,8 @@ interface OpenyUpgradeLogManagerInterface {
    * @return OpenyUpgradeLogManager
    *   OpenyUpgradeLogManager instance.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function applyOpenyVersion($name);
 
@@ -135,8 +139,8 @@ interface OpenyUpgradeLogManagerInterface {
    * @param bool $delete_log
    *   If TRUE - delete OpenyUpgradeLog instance after import.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function updateExistingConfig($name, array $data, $delete_log = FALSE);
 
@@ -151,8 +155,8 @@ interface OpenyUpgradeLogManagerInterface {
    * @return bool
    *   Validation result. TRUE if valid.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function validateConfigData($name, array &$data);
 
@@ -170,11 +174,11 @@ interface OpenyUpgradeLogManagerInterface {
   /**
    * Validate config diff and get ignore status.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *
    * @return bool
    *   TRUE - if changes can be ignored.
    */
-  public function validateConfigDiff(\Drupal\Core\Config\Config $config);
+  public function validateConfigDiff(Config $config);
 
 }
diff --git a/src/OpenyUpgradeLogStorageInterface.php b/src/OpenyUpgradeLogStorageInterface.php
index b31b004..f6fd225 100644
--- a/src/OpenyUpgradeLogStorageInterface.php
+++ b/src/OpenyUpgradeLogStorageInterface.php
@@ -20,7 +20,7 @@ interface OpenyUpgradeLogStorageInterface extends ContentEntityStorageInterface
   /**
    * Gets a list of Openy upgrade log revision IDs for a specific Openy upgrade log.
    *
-   * @param \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface $entity
+   * @param OpenyUpgradeLogInterface $entity
    *   The Openy upgrade log entity.
    *
    * @return int[]
@@ -31,7 +31,7 @@ interface OpenyUpgradeLogStorageInterface extends ContentEntityStorageInterface
   /**
    * Gets a list of revision IDs having a given user as Openy upgrade log author.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user entity.
    *
    * @return int[]
@@ -42,7 +42,7 @@ interface OpenyUpgradeLogStorageInterface extends ContentEntityStorageInterface
   /**
    * Counts the number of revisions in the default language.
    *
-   * @param \Drupal\openy_upgrade_tool\Entity\OpenyUpgradeLogInterface $entity
+   * @param OpenyUpgradeLogInterface $entity
    *   The Openy upgrade log entity.
    *
    * @return int
@@ -53,7 +53,7 @@ interface OpenyUpgradeLogStorageInterface extends ContentEntityStorageInterface
   /**
    * Unsets the language for all Openy upgrade log with the given language.
    *
-   * @param \Drupal\Core\Language\LanguageInterface $language
+   * @param LanguageInterface $language
    *   The language object.
    */
   public function clearRevisionsLanguage(LanguageInterface $language);
diff --git a/src/Plugin/Action/ApplyCurrentActiveVersionAction.php b/src/Plugin/Action/ApplyCurrentActiveVersionAction.php
index 88aa169..00fb40b 100644
--- a/src/Plugin/Action/ApplyCurrentActiveVersionAction.php
+++ b/src/Plugin/Action/ApplyCurrentActiveVersionAction.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool\Plugin\Action;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Action\Plugin\Action\EntityActionBase;
 use Drupal\Core\Session\AccountInterface;
 
@@ -29,7 +30,7 @@ class ApplyCurrentActiveVersionAction extends EntityActionBase {
   public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE) {
     $key = $object->getEntityType()->getKey('status');
 
-    /** @var \Drupal\Core\Entity\EntityInterface $object */
+    /** @var EntityInterface $object */
     $result = $object->access('update', $account, TRUE)
       ->andIf($object->$key->access('edit', $account, TRUE));
 
diff --git a/src/Plugin/Action/ApplyOpenyVersionAction.php b/src/Plugin/Action/ApplyOpenyVersionAction.php
index 300689d..8ff8359 100644
--- a/src/Plugin/Action/ApplyOpenyVersionAction.php
+++ b/src/Plugin/Action/ApplyOpenyVersionAction.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\openy_upgrade_tool\Plugin\Action;
 
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Action\Plugin\Action\EntityActionBase;
 use Drupal\Core\Session\AccountInterface;
 
@@ -29,7 +30,7 @@ class ApplyOpenyVersionAction extends EntityActionBase {
   public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE) {
     $key = $object->getEntityType()->getKey('status');
 
-    /** @var \Drupal\Core\Entity\EntityInterface $object */
+    /** @var EntityInterface $object */
     $result = $object->access('update', $account, TRUE);
 
     return $return_as_object ? $result : $result->isAllowed();
