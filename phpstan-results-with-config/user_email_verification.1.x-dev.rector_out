modules/contrib/user_email_verification/src/Cache/Context/UserEmailVerificationNeeded.php
modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerify.php
modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerifyExtended.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationBlockAccountEvent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationCreateVerificationEvent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationDeleteAccountEvent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationEvents.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesEmailVerified.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesEmailVerifiedExtended.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesExtendedReminderMailSent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesReminderMailSent.php
modules/contrib/user_email_verification/src/Event/UserEmailVerificationVerifyEvent.php
modules/contrib/user_email_verification/src/Form/UserEmailVerificationRequestForm.php
modules/contrib/user_email_verification/src/Form/UserEmailVerificationSettingsForm.php
modules/contrib/user_email_verification/src/Plugin/Block/UserEmailVerificationNotificationBlock.php
modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVerificationExtendedPeriodExceeded.php
modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVerificationPeriodExceeded.php
modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVerificationUserEmailVerified.php
modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationBlockAccount.php
modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationDeleteAccount.php
modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationReminders.php
modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmailVerificationSendNotificationMail.php
modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmailVerificationVerifyUserEmail.php
modules/contrib/user_email_verification/src/Plugin/views/filter/EmailVerification.php
modules/contrib/user_email_verification/src/UserEmailVerification.php
modules/contrib/user_email_verification/src/UserEmailVerificationInterface.php
modules/contrib/user_email_verification/user_email_verification.install
modules/contrib/user_email_verification/user_email_verification.module
modules/contrib/user_email_verification/user_email_verification.post_update.php
modules/contrib/user_email_verification/user_email_verification.tokens.inc
modules/contrib/user_email_verification/user_email_verification.views.inc

20 files with changes
=====================

1) modules/contrib/user_email_verification/user_email_verification.tokens.inc:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user_email_verification\UserEmailVerificationInterface;
 /**
  * @file
  * Builds placeholder replacement tokens for user-related data.
@@ @@
   $replacements = [];

   if ($type == 'user' && isset($data['user']) && $data['user'] instanceof UserInterface) {
-    /** @var \Drupal\user_email_verification\UserEmailVerificationInterface $service */
+    /** @var UserEmailVerificationInterface $service */
     $service = \Drupal::service('user_email_verification.service');

     foreach ($tokens as $name => $original) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


2) modules/contrib/user_email_verification/user_email_verification.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\user_email_verification\UserEmailVerificationInterface;
 /**
  * @file
  * User email verification hooks and alters.
@@ @@
  */
 function user_email_verification_user_presave(UserInterface $user) {

-  /** @var \Drupal\user_email_verification\UserEmailVerificationInterface $service */
+  /** @var UserEmailVerificationInterface $service */
   $service = \Drupal::service('user_email_verification.service');

   // Mark user Email verified when admin user activates blocked user account.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


3) modules/contrib/user_email_verification/src/UserEmailVerificationInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_email_verification;

+use Drupal\Core\Url;
 use Drupal\user\UserInterface;

 /**
@@ @@
   /**
    * Build Email verification URL for requested user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to create email verification URL for.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Email verification URL.
    */
   public function buildVerificationUrl(UserInterface $user);
@@ @@
   /**
    * Build extended Email verification URL for requested user.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to create email verification URL for.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Extended Email verification URL.
    */
   public function buildExtendedVerificationUrl(UserInterface $user);
@@ @@
   /**
    * Create user email verification item.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to create email verification item for.
    * @param bool $verify
    *   Flag mark as verified/no on creation.
@@ @@
   /**
    * Delete user email verification item.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   User to delete email verification item for.
    */
   public function deleteVerification(UserInterface $user);
@@ @@
   /**
    * Send "blocked account verified Email" mail to site administrator.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   Blocked user who verified Email.
    *
    * @return bool
@@ @@
    * @param bool $active_only
    *   Whether to search for active users only.
    *
-   * @return null|\Drupal\user\UserInterface
+   * @return null|UserInterface
    *   Drupal user on success or NULL otherwise.
    */
   public function getUserByNameOrEmail($name_or_email, $active_only);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/user_email_verification/src/UserEmailVerification.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_email_verification;

+use Drupal\Core\Config\Config;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * The current primary database.
    *
-   * @var \Drupal\Core\Database\Connection
+   * @var Connection
    */
   protected $database;

@@ @@
   /**
    * The user_email_verification.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * The user.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $configUserSettings;

@@ @@
   /**
    * The system.site config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $configSystemSite;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * User carma update queue.
    *
-   * @var \Drupal\Core\Queue\QueueFactory
+   * @var QueueFactory
    */
   protected $queue;

@@ @@
   /**
    * Mail manager service.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The language manager.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;

@@ @@
   /**
    * The factory for configuration objects.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * Constructs a new DietService object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   Entity type manager.
-   * @param \Drupal\Core\Database\Connection $database
+   * @param Connection $database
    *   The current primary database.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\Component\Datetime\TimeInterface $datetime_time
+   * @param TimeInterface $datetime_time
    *   The time service.
-   * @param \Drupal\Core\Queue\QueueFactory $queue
+   * @param QueueFactory $queue
    *   The queue factory object.
-   * @param \Drupal\Core\Mail\MailManagerInterface $mail_manager
+   * @param MailManagerInterface $mail_manager
    *   Mail manager service.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(
@@ @@
     // Provide an ability to other modules to modify
     // verified state (like auto-verify some specific users).
     $event = new UserEmailVerificationCreateVerificationEvent($user, (bool) $verified);
-    $this->eventDispatcher->dispatch(UserEmailVerificationEvents::CREATE_VERIFICATION, $event);
+    $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::CREATE_VERIFICATION);

     if ($verify || $event->shouldBeVerified()) {
       $verified = $this->time->getRequestTime();
@@ @@
       // Provide an ability to other modules to act before
       // account block (like prevent some accounts block).
       $event = new UserEmailVerificationBlockAccountEvent($user, $user->isActive());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::BLOCK_ACCOUNT, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::BLOCK_ACCOUNT);

       if ($event->shouldBeBlocked()) {
         $user->block()->save();
@@ @@
       // Provide an ability to other modules to act before
       // account delete (like prevent some accounts delete).
       $event = new UserEmailVerificationDeleteAccountEvent($user, TRUE);
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::DELETE_ACCOUNT, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::DELETE_ACCOUNT);

       if ($event->shouldBeDeleted()) {
         $this->setVerificationState($user->id(), UserEmailVerificationInterface::STATE_DELETED);
@@ @@
    */
   public function initEmailMessage($key, array &$message, array $params) {

-    /** @var \Drupal\user\UserInterface $user */
+    /** @var UserInterface $user */
     $user = $params['user'];

     // Care about correct configuration translation usage.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


5) modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationReminders.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationDeleteAccount.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/user_email_verification/src/Plugin/QueueWorker/UserEmailVerificationBlockAccount.php:21

    ---------- begin diff ----------
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
   /**
    * A logger instance.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service, LoggerInterface $logger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/user_email_verification/src/Plugin/Block/UserEmailVerificationNotificationBlock.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The token service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, UserEmailVerificationInterface $user_email_verification_service, AccountProxyInterface $current_user, Token $token) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/user_email_verification/src/Form/UserEmailVerificationRequestForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_email_verification\Form;

+use Symfony\Component\HttpFoundation\Request;
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\FormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The currently active request object.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;

@@ @@
   /**
    * The user.settings config object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $configUserSettings;

@@ @@
   /**
    * Constructs a new UserEmailVerificationRequestForm object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, AccountProxyInterface $current_user, RequestStack $request_stack, ConfigFactoryInterface $config_factory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/user_email_verification/src/Event/UserEmailVerificationVerifyEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_email_verification\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Wraps a user email verification event for event subscribers.
@@ @@
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $notify_as_blocked
    *   Whether to notify the user as blocked account.
@@ @@
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesReminderMailSent.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;

@@ @@
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesExtendedReminderMailSent.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;

@@ @@
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


13) modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesEmailVerifiedExtended.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;

@@ @@
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


14) modules/contrib/user_email_verification/src/Event/UserEmailVerificationRulesEmailVerified.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * The user account.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $account;

@@ @@
   /**
    * Constructs the event object.
    *
-   * @param \Drupal\user\UserInterface $account
+   * @param UserInterface $account
    *   The account of a related user.
    */
   public function __construct(UserInterface $account) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


15) modules/contrib/user_email_verification/src/Event/UserEmailVerificationDeleteAccountEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_email_verification\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Wraps a user account delete event for event subscribers.
@@ @@
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $should_be_deleted
    *   Should the user account be deleted or no.
@@ @@
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


16) modules/contrib/user_email_verification/src/Event/UserEmailVerificationCreateVerificationEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_email_verification\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Wraps a user email verification creation event for event subscribers.
@@ @@
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $should_be_verified
    *   Should be user account verified by default or no.
@@ @@
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


17) modules/contrib/user_email_verification/src/Event/UserEmailVerificationBlockAccountEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_email_verification\Event;

+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\user\UserInterface;
-use Symfony\Component\EventDispatcher\Event;

 /**
  * Wraps a user account block event for event subscribers.
@@ @@
   /**
    * The user account being verify.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * Constructs a user email verification event object.
    *
-   * @param \Drupal\user\UserInterface $user
+   * @param UserInterface $user
    *   The user account being verify.
    * @param bool $should_be_blocked
    *   Should the user account be blocked or no.
@@ @@
   /**
    * Get the user account being verify.
    *
-   * @return \Drupal\user\UserInterface
+   * @return UserInterface
    *   The user account.
    */
   public function getUser() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


18) modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerifyExtended.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * Constructs a new object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Component\Datetime\TimeInterface $datetime_time
+   * @param TimeInterface $datetime_time
    *   The time service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, TimeInterface $datetime_time, EventDispatcherInterface $event_dispatcher) {
@@ @@
       $this->messenger()->addStatus($this->t('Thank you for verifying your Email address.'));

       $event = new UserEmailVerificationVerifyEvent($user, $user->isBlocked());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::VERIFY_EXTENDED, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::VERIFY_EXTENDED);

       $rules_event = new UserEmailVerificationRulesEmailVerifiedExtended($user);
       $this->eventDispatcher->dispatch($rules_event, $rules_event::EVENT_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


19) modules/contrib/user_email_verification/src/Controller/UserEmailVerificationVerify.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;

@@ @@
   /**
    * The event dispatcher service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;

@@ @@
   /**
    * Constructs a new object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Component\Datetime\TimeInterface $datetime_time
+   * @param TimeInterface $datetime_time
    *   The time service.
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher service.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, TimeInterface $datetime_time, EventDispatcherInterface $event_dispatcher) {
@@ @@
       $this->messenger()->addStatus($this->t('Thank you for verifying your Email address.'));

       $event = new UserEmailVerificationVerifyEvent($user, $user->isBlocked());
-      $this->eventDispatcher->dispatch(UserEmailVerificationEvents::VERIFY, $event);
+      $this->eventDispatcher->dispatch($event, UserEmailVerificationEvents::VERIFY);

       $rules_event = new UserEmailVerificationRulesEmailVerified($user);
       $this->eventDispatcher->dispatch($rules_event, $rules_event::EVENT_NAME);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


20) modules/contrib/user_email_verification/src/Cache/Context/UserEmailVerificationNeeded.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * User email verification helper service.
    *
-   * @var \Drupal\user_email_verification\UserEmailVerificationInterface
+   * @var UserEmailVerificationInterface
    */
   protected $userEmailVerification;

@@ @@
   /**
    * The current active user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;

@@ @@
   /**
    * Constructs a new object.
    *
-   * @param \Drupal\user_email_verification\UserEmailVerificationInterface $user_email_verification_service
+   * @param UserEmailVerificationInterface $user_email_verification_service
    *   User email verification helper service.
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current active user.
    */
   public function __construct(UserEmailVerificationInterface $user_email_verification_service, AccountProxyInterface $current_user) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmail
         VerificationVerifyUserEmail.php" file, due to:                         
         "Analyze error: "Class Drupal\rules\Core\RulesActionBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/RulesAction/UserEmail
         VerificationSendNotificationMail.php" file, due to:                    
         "Analyze error: "Class Drupal\rules\Core\RulesActionBase not found.".  
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVe
         rificationUserEmailVerified.php" file, due to:                         
         "Analyze error: "Class Drupal\rules\Core\RulesConditionBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVe
         rificationPeriodExceeded.php" file, due to:                            
         "Analyze error: "Class Drupal\rules\Core\RulesConditionBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [ERROR] Could not process                                                      
         "modules/contrib/user_email_verification/src/Plugin/Condition/UserEmailVe
         rificationExtendedPeriodExceeded.php" file, due to:                    
         "Analyze error: "Class Drupal\rules\Core\RulesConditionBase not found.".
         Include your files in "$rectorConfig->autoloadPaths([...]);" or        
         "$rectorConfig->bootstrapFiles([...]);" in "rector.php" config.        
         See https://github.com/rectorphp/rector#configuration".                

 [WARNING] 4 nodes were removed                                                 

