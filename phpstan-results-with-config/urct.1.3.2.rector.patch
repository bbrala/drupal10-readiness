diff --git a/src/Cache/Context/ReferralPathCacheContext.php b/src/Cache/Context/ReferralPathCacheContext.php
index 9f11e2a..7dcaa29 100644
--- a/src/Cache/Context/ReferralPathCacheContext.php
+++ b/src/Cache/Context/ReferralPathCacheContext.php
@@ -18,15 +18,15 @@ class ReferralPathCacheContext implements CacheContextInterface {
 
   /**
    * ReferramManager service object
-   * 
-   * @var \Drupal\urct\ReferralManager
+   *
+   * @var ReferralManager
    */
   protected $referralManager;
 
   /**
    * Constructs a new UserCacheContext service.
    *
-   * @param \Drupal\urct\ReferralManager $referralManager
+   * @param ReferralManager $referralManager
    *   The current user.
    */
   public function __construct(ReferralManager $referral_manager) {
diff --git a/src/PathProcessor/UrctPathProcessorManager.php b/src/PathProcessor/UrctPathProcessorManager.php
index 47abc25..4825420 100644
--- a/src/PathProcessor/UrctPathProcessorManager.php
+++ b/src/PathProcessor/UrctPathProcessorManager.php
@@ -19,7 +19,7 @@ class UrctPathProcessorManager extends PathProcessorManager {
   /**
    * Adds an inbound processor object to the $inboundProcessors property.
    *
-   * @param \Drupal\Core\PathProcessor\InboundPathProcessorInterface $processor
+   * @param InboundPathProcessorInterface $processor
    *   The processor object to add.
    * @param int $priority
    *   The priority of the processor being added.
diff --git a/src/ReferralManager.php b/src/ReferralManager.php
index dd7a124..fb4319f 100644
--- a/src/ReferralManager.php
+++ b/src/ReferralManager.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\urct;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\PageCache\ResponsePolicy\KillSwitch;
 use Drupal\user\Entity\User;
@@ -15,9 +17,7 @@ use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Drupal\user_referral\Event\UserReferralCookieEvent;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Drupal\Core\Routing\LocalRedirectResponse;
 use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\user_referral\Event\UserReferralReferralEntryEvent;
@@ -34,14 +34,14 @@ class ReferralManager implements OutboundPathProcessorInterface, EventSubscriber
   /**
    * Config Factory Service Object.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The kill switch.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicy\KillSwitch
+   * @var KillSwitch
    */
   protected $killSwitch;
 
@@ -53,7 +53,7 @@ class ReferralManager implements OutboundPathProcessorInterface, EventSubscriber
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
@@ -67,11 +67,11 @@ class ReferralManager implements OutboundPathProcessorInterface, EventSubscriber
   /**
    * Constructs a BookManager object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\PageCache\ResponsePolicy\KillSwitch $killSwitch
+   * @param KillSwitch $killSwitch
    *   The kill switch.
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    *   The current user.
    */
   public function __construct(ConfigFactoryInterface $config_factory, KillSwitch $killSwitch, AccountProxyInterface $account) {
@@ -199,7 +199,7 @@ class ReferralManager implements OutboundPathProcessorInterface, EventSubscriber
   /**
    * Check if current request is from bot agent.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *  The request to check against for user agent string.
    * @return boolean
    *  TRUE if request is from a crawler.
@@ -349,7 +349,7 @@ class ReferralManager implements OutboundPathProcessorInterface, EventSubscriber
     return $path;
   }
 
-  public function onKernelResponse(FilterResponseEvent $event) {
+  public function onKernelResponse(ResponseEvent $event) {
     $response = $event->getResponse();
     if (\Drupal::currentUser()->isAnonymous() && $response instanceof RedirectResponse && !\Drupal::service('router.admin_context')->isAdminRoute()) {
       $target_url = $response->getTargetUrl();
@@ -382,7 +382,7 @@ class ReferralManager implements OutboundPathProcessorInterface, EventSubscriber
 
   /**
    *
-   * @param \Drupal\user_referral\Event\UserReferralReferralEntryEvent $event
+   * @param UserReferralReferralEntryEvent $event
    *  The Event to process.
    */
   public function onReferralEntryBeingCreated(UserReferralReferralEntryEvent $event) {
@@ -406,10 +406,10 @@ class ReferralManager implements OutboundPathProcessorInterface, EventSubscriber
   /**
    * Performs a redirect if the URL not end with Referral ID.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   The Event to process.
    */
-  public function onKernelRequestRedirect(GetResponseEvent $event) {
+  public function onKernelRequestRedirect(RequestEvent $event) {
     if (\Drupal::currentUser()->isAuthenticated()) {
       // Skip for logged in users.
       return;
diff --git a/src/Tests/Functional/UrctBasicTest.php b/src/Tests/Functional/UrctBasicTest.php
index ed44f92..5f5d6ea 100644
--- a/src/Tests/Functional/UrctBasicTest.php
+++ b/src/Tests/Functional/UrctBasicTest.php
@@ -30,7 +30,7 @@ class UrctBasicTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/src/Tests/Functional/UrctTwoReferralIDTest.php b/src/Tests/Functional/UrctTwoReferralIDTest.php
index 126b009..d8afa2a 100644
--- a/src/Tests/Functional/UrctTwoReferralIDTest.php
+++ b/src/Tests/Functional/UrctTwoReferralIDTest.php
@@ -34,7 +34,7 @@ class UrctTwoReferralIDTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/src/Tests/Functional/UrctUserRegisterTest.php b/src/Tests/Functional/UrctUserRegisterTest.php
index 353117a..1ba6fbb 100644
--- a/src/Tests/Functional/UrctUserRegisterTest.php
+++ b/src/Tests/Functional/UrctUserRegisterTest.php
@@ -41,7 +41,7 @@ class UrctUserRegisterTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/urct.info.yml b/urct.info.yml
index 75cc028..80d7bb1 100644
--- a/urct.info.yml
+++ b/urct.info.yml
@@ -1,7 +1,7 @@
 name: User Referral Cookie Tokens
 type: module
 description: Provides tokens for the referral cookie.
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 
 dependencies:
   - user_referral:user_referral
diff --git a/urct.tokens.inc b/urct.tokens.inc
index e27add1..9215f4c 100644
--- a/urct.tokens.inc
+++ b/urct.tokens.inc
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\node\NodeInterface;
+use Drupal\Core\GeneratedUrl;
 /**
  * @file
  * Builds placeholder replacement tokens for user referral related data.
@@ -67,7 +69,7 @@ function urct_tokens($type, $tokens, array $data, array $options, BubbleableMeta
     }
   }
   else if ($type == 'node' && !empty($data['node'])) {
-    /** @var \Drupal\node\NodeInterface $node */
+    /** @var NodeInterface $node */
     $node = $data['node'];
 
     foreach ($tokens as $name => $original) {
@@ -85,7 +87,7 @@ function urct_tokens($type, $tokens, array $data, array $options, BubbleableMeta
     }
   }
   else if ($type == 'url' && !empty($data['url'])) {
-    /** @var \Drupal\Core\Url $url */
+    /** @var Url $url */
     $url = $data['url'];
 
     foreach ($tokens as $name => $original) {
@@ -108,7 +110,7 @@ function urct_tokens($type, $tokens, array $data, array $options, BubbleableMeta
     foreach ($tokens as $name => $original) {
       switch ($name) {
         case 'url-non-referral':
-          /** @var \Drupal\Core\GeneratedUrl $result */
+          /** @var GeneratedUrl $result */
           $result = Url::fromRoute('<front>', [], $url_options)->toString(TRUE);
           $bubbleable_metadata->addCacheableDependency($result);
           $url = $result->getGeneratedUrl();
