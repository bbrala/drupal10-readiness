modules/contrib/media_entity_instagram/media_entity_instagram.install
modules/contrib/media_entity_instagram/media_entity_instagram.module
modules/contrib/media_entity_instagram/media_entity_instagram.post_update.php
modules/contrib/media_entity_instagram/src/Form/InstagramMediaLibraryAddForm.php
modules/contrib/media_entity_instagram/src/Form/InstagramSettingsForm.php
modules/contrib/media_entity_instagram/src/OEmbed/InstagramUrlResolver.php
modules/contrib/media_entity_instagram/src/Plugin/Field/FieldFormatter/InstagramEmbedFormatter.php
modules/contrib/media_entity_instagram/src/Plugin/media/Source/Instagram.php
modules/contrib/media_entity_instagram/tests/src/Functional/InstagramEmbedFormatterTest.php

4 files with changes
====================

1) modules/contrib/media_entity_instagram/src/Plugin/media/Source/Instagram.php:87

    ---------- begin diff ----------
@@ @@
   /**
    * Runs preg_match on embed code/URL.
    *
-   * @param \Drupal\media\MediaInterface $media
+   * @param MediaInterface $media
    *   Media object.
    *
    * @return array|bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/media_entity_instagram/src/Form/InstagramMediaLibraryAddForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\media_entity_instagram\Form;

+use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
    *
    * @param array $form
    *   The form render array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function addButtonSubmit(array $form, FormStateInterface $form_state) {
@@ @@
   /**
    * Returns the definition of the source field for a media type.
    *
-   * @param \Drupal\media\MediaTypeInterface $media_type
+   * @param MediaTypeInterface $media_type
    *   The media type to get the source definition for.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface|null
+   * @return FieldDefinitionInterface|null
    *   The field definition.
    */
   protected function getSourceFieldDefinition(MediaTypeInterface $media_type) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/media_entity_instagram/media_entity_instagram.post_update.php:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
 /**
  * @file
  * Post update functions for Media entity Instagram module.
@@ @@
       $config->save();
       $source_configuration = $config->get('source_configuration');

-      /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
+      /** @var EntityTypeManagerInterface $entity_type_manager */
       $entity_type_manager = \Drupal::service('entity_type.manager');

-      /** @var \Drupal\Core\Entity\Display\EntityViewDisplayInterface[] $displays */
+      /** @var EntityViewDisplayInterface[] $displays */
       $displays = $entity_type_manager->getStorage('entity_view_display')
         ->loadByProperties([
           'targetEntityType' => 'media',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


4) modules/contrib/media_entity_instagram/media_entity_instagram.install:12

    ---------- begin diff ----------
@@ @@
 function media_entity_instagram_install() {
   $source = \Drupal::service('extension.list.module')->getPath('media_entity_instagram') . '/images/icons';
   $destination = \Drupal::config('media.settings')->get('icon_base_uri');
-  /** @var \Drupal\Core\File\FileSystemInterface $file_system */
+  /** @var FileSystemInterface $file_system */
   $file_system = \Drupal::service('file_system');
   $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

