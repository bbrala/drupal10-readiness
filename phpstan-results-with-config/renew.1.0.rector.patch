diff --git a/src/EventSubscriber/MaintainRequestSubscriber.php b/src/EventSubscriber/MaintainRequestSubscriber.php
index 7826431..80520a4 100644
--- a/src/EventSubscriber/MaintainRequestSubscriber.php
+++ b/src/EventSubscriber/MaintainRequestSubscriber.php
@@ -10,6 +10,9 @@
 
 namespace Drupal\renew\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Routing\RouteMatch;
@@ -30,23 +33,23 @@ class MaintainRequestSubscriber implements EventSubscriberInterface {
   /**
    * the renew config
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * Constructs a new MaintainRequestSubscriber
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface          $config_factory
-   * @param \Drupal\Core\Messenger\MessengerInterface           $messenger
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param ConfigFactoryInterface $config_factory
+   * @param MessengerInterface $messenger
+   * @param TranslationInterface $translation
    */
   public function __construct(ConfigFactoryInterface $config_factory, MessengerInterface $messenger, TranslationInterface $translation) {
     $this->config = $config_factory->get('renew.admin');
@@ -57,7 +60,7 @@ class MaintainRequestSubscriber implements EventSubscriberInterface {
   /**
    * Notify the user that a renewal is required.
    *
-   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
+   * @param RequestEvent $event
    *   The event to process.
    */
   public function onRequest(RequestEvent $event) {
@@ -118,8 +121,8 @@ class MaintainRequestSubscriber implements EventSubscriberInterface {
    * @param $message
    *
    * @return bool
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   protected function sendEmail($message = '') {
     if (empty($message)) {
diff --git a/src/Form/AdminForm.php b/src/Form/AdminForm.php
index 2988891..6f3c958 100644
--- a/src/Form/AdminForm.php
+++ b/src/Form/AdminForm.php
@@ -21,7 +21,7 @@ use Drupal\Core\Datetime\DrupalDateTime;
 class AdminForm extends FormBase {
 
   /**
-   * @var \Drupal\Core\Config\Config|null
+   * @var Config|null
    */
   protected $config = NULL;
 
@@ -31,7 +31,7 @@ class AdminForm extends FormBase {
   protected $isLogin = FALSE;
 
   /**
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    */
   public function __construct(Config $config) {
     $this->config = $config;
diff --git a/src/RenewUninstallValidator.php b/src/RenewUninstallValidator.php
index 5da3cb8..ecac6a0 100644
--- a/src/RenewUninstallValidator.php
+++ b/src/RenewUninstallValidator.php
@@ -9,6 +9,7 @@
 
 namespace Drupal\renew;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\StringTranslation\TranslationInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -22,15 +23,15 @@ class RenewUninstallValidator implements ModuleUninstallValidatorInterface {
   use StringTranslationTrait;
 
   /**
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Constructs a new RenewUninstallValidator.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface          $config_factory
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param ConfigFactoryInterface $config_factory
+   * @param TranslationInterface $string_translation
    */
   public function __construct(ConfigFactoryInterface $config_factory, TranslationInterface $string_translation) {
     $this->config = $config_factory->get('renew.admin');
