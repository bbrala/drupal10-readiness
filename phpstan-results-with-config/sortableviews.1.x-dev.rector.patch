diff --git a/sortableviews.info.yml b/sortableviews.info.yml
index ff48940..1fc6d08 100644
--- a/sortableviews.info.yml
+++ b/sortableviews.info.yml
@@ -2,6 +2,6 @@ name: Sortable Views
 type: module
 description: 'Enables users to sort views by using drag and drop'
 package: Views
-core_version_requirement: ^8.8 || ^9
+core_version_requirement: ^8.8 || ^9 || ^10
 dependencies:
   - drupal:views
diff --git a/src/Access/SortableviewsAccess.php b/src/Access/SortableviewsAccess.php
index 68f5dcc..c498157 100644
--- a/src/Access/SortableviewsAccess.php
+++ b/src/Access/SortableviewsAccess.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\sortableviews\Access;
 
+use Drupal\Core\Access\AccessResultInterface;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Routing\Access\AccessInterface;
@@ -17,23 +18,23 @@ class SortableviewsAccess implements AccessInterface {
   /**
    * An instance of the entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * An instance of ViewExecutableFactory.
    *
-   * @var \Drupal\views\ViewExecutableFactory
+   * @var ViewExecutableFactory
    */
   protected $viewsExecutableFactory;
 
   /**
    * Builds a new SortableViewsAccess object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager service.
-   * @param \Drupal\views\ViewExecutableFactory $views_executable_factory
+   * @param ViewExecutableFactory $views_executable_factory
    *   An instantiated ViewExecutableFactory object.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager, ViewExecutableFactory $views_executable_factory) {
@@ -44,12 +45,12 @@ class SortableviewsAccess implements AccessInterface {
   /**
    * Checks logged in user has access to ajax path.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The request object.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The currently logged in account.
    *
-   * @return \Drupal\Core\Access\AccessResultInterface
+   * @return AccessResultInterface
    *   The access result.
    */
   public function access(Request $request, AccountInterface $account) {
diff --git a/src/Controller/AjaxController.php b/src/Controller/AjaxController.php
index 19329f2..d700a6f 100644
--- a/src/Controller/AjaxController.php
+++ b/src/Controller/AjaxController.php
@@ -21,14 +21,14 @@ class AjaxController implements ContainerInjectionInterface {
   /**
    * An instance of the entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * Builds a new AjaxController object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager service.
    */
   public function __construct(EntityTypeManagerInterface $entity_manager) {
@@ -47,7 +47,7 @@ class AjaxController implements ContainerInjectionInterface {
   /**
    * Returns the entity order adjusted for the view pager.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
    * @return array
@@ -85,10 +85,10 @@ class AjaxController implements ContainerInjectionInterface {
   /**
    * Saves new weights.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request object.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   An response with Ajax commands.
    */
   public function ajaxSave(Request $request) {
diff --git a/src/SortableViewsStyleTrait.php b/src/SortableViewsStyleTrait.php
index afc86c1..4c9b24f 100644
--- a/src/SortableViewsStyleTrait.php
+++ b/src/SortableViewsStyleTrait.php
@@ -16,21 +16,21 @@ trait SortableViewsStyleTrait {
   /**
    * An instance of the entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityManager;
 
   /**
    * An URL generator service instance.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
   /**
    * An instance of the Entity Field Manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
@@ -43,11 +43,11 @@ trait SortableViewsStyleTrait {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager service.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The URL generator service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The Entity Field Manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_manager, UrlGeneratorInterface $url_generator, EntityFieldManagerInterface $entity_field_manager) {
diff --git a/tests/src/Functional/SortableviewsTest.php b/tests/src/Functional/SortableviewsTest.php
index f5c2e74..d7858aa 100755
--- a/tests/src/Functional/SortableviewsTest.php
+++ b/tests/src/Functional/SortableviewsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sortableviews\Functional;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 
 /**
@@ -16,21 +17,21 @@ class SortableviewsTest extends BrowserTestBase {
    *
    * @see https://www.drupal.org/node/3083055
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $defaultTheme = 'stark';
 
   /**
    * The privileged user performing the actions.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $user;
 
   /**
    * Required modules.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   public static $modules = [
     'node',
@@ -42,7 +43,7 @@ class SortableviewsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser([
       'access content',
@@ -62,8 +63,8 @@ class SortableviewsTest extends BrowserTestBase {
   public function testElements($path) {
     $this->drupalLogin($this->user);
     $this->drupalGet($path);
-    $this->assertElementPresent('.sortableviews-handle');
-    $this->assertElementPresent('.sortableviews-save-changes');
+    $this->assertSession()->elementExists('.sortableviews-handle');
+    $this->assertSession()->elementExists('.sortableviews-save-changes');
     $this->drupalLogout();
   }
 
diff --git a/tests/src/Unit/Access/SortableviewsAccessTest.php b/tests/src/Unit/Access/SortableviewsAccessTest.php
index 73803b5..134cdff 100755
--- a/tests/src/Unit/Access/SortableviewsAccessTest.php
+++ b/tests/src/Unit/Access/SortableviewsAccessTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\sortableviews\Unit\Access;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\sortableviews\Access\SortableviewsAccess;
 use Drupal\Tests\UnitTestCase;
 use Drupal\Core\Access\AccessResultAllowed;
@@ -17,24 +18,22 @@ class SortableviewsAccessTest extends UnitTestCase {
   /**
    * The instance of SortableviewsAccess to be tested.
    *
-   * @var \Drupal\sortableviews\Access\SortableviewsAccess
+   * @var SortableviewsAccess
    */
   protected $sortableViewsAccess;
 
   /**
    * An object mocked from AccountInterface.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
-    $view_style = $this->getMockBuilder('Drupal\views\Plugin\views\style\StylePluginBase')
-      ->disableOriginalConstructor()
-      ->getMock();
+  protected function setUp(): void {
+    $view_style = $this->createMock('Drupal\views\Plugin\views\style\StylePluginBase');
     $view_style->options['weight_field'] = 'some_field';
 
     $entity_type = $this->createMock('Drupal\Component\Plugin\Definition\PluginDefinitionInterface');
@@ -42,9 +41,7 @@ class SortableviewsAccessTest extends UnitTestCase {
       ->method('id')
       ->willReturn('some_entity');
 
-    $view_executable = $this->getMockBuilder('Drupal\views\ViewExecutable')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $view_executable = $this->createMock('Drupal\views\ViewExecutable');
     $view_executable->expects($this->any())
       ->method('getBaseEntityType')
       ->willReturn($entity_type);
@@ -54,9 +51,7 @@ class SortableviewsAccessTest extends UnitTestCase {
 
     $view_entity = $this->createMock('Drupal\views\ViewEntityInterface');
 
-    $executable_factory = $this->getMockBuilder('Drupal\views\ViewExecutableFactory')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $executable_factory = $this->createMock('Drupal\views\ViewExecutableFactory');
     $executable_factory->expects($this->any())
       ->method('get')
       ->with($view_entity)
diff --git a/tests/src/Unit/Controller/AjaxControllerTest.php b/tests/src/Unit/Controller/AjaxControllerTest.php
index 5209880..ac580cc 100755
--- a/tests/src/Unit/Controller/AjaxControllerTest.php
+++ b/tests/src/Unit/Controller/AjaxControllerTest.php
@@ -17,7 +17,7 @@ class AjaxControllerTest extends UnitTestCase {
   /**
    * The instance of AjaxController to be tested.
    *
-   * @var \Drupal\sortableviews\Controller\AjaxController
+   * @var AjaxController
    */
   protected $ajaxController;
 
@@ -57,7 +57,7 @@ class AjaxControllerTest extends UnitTestCase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     $this->initializeContainer();
 
     $entity_storage = $this->createMock('Drupal\Core\Entity\EntityStorageInterface');
