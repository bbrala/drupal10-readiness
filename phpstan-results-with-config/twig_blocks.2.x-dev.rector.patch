diff --git a/src/Twig/RenderBlock.php b/src/Twig/RenderBlock.php
index 77e7cb9..8a47cae 100644
--- a/src/Twig/RenderBlock.php
+++ b/src/Twig/RenderBlock.php
@@ -17,23 +17,23 @@ class RenderBlock extends AbstractExtension {
   /**
    * The renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructor method.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(RendererInterface $renderer, EntityTypeManagerInterface $entity_type_manager) {
diff --git a/src/View/BlockViewBuilder.php b/src/View/BlockViewBuilder.php
index 6a5bb34..932d029 100644
--- a/src/View/BlockViewBuilder.php
+++ b/src/View/BlockViewBuilder.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\twig_blocks\View;
 
+use Drupal\Component\Plugin\Exception\ContextException;
+use Drupal\Component\Plugin\Exception\MissingValueContextException;
 use Drupal\Core\Block\BlockPluginInterface;
 use Drupal\Core\Block\TitleBlockPluginInterface;
 use Drupal\Core\Cache\CacheableDependencyInterface;
@@ -23,68 +25,68 @@ class BlockViewBuilder {
   /**
    * The plugin.manager.block service.
    *
-   * @var \Drupal\Core\Cache\CacheableDependencyInterface
+   * @var CacheableDependencyInterface
    */
   protected $pluginManagerBlock;
 
   /**
    * The context repository service.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   * @var ContextRepositoryInterface
    */
   protected $contextRepository;
 
   /**
    * The plugin context handler.
    *
-   * @var \Drupal\Core\Plugin\Context\ContextHandlerInterface
+   * @var ContextHandlerInterface
    */
   protected $contextHandler;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * The title resolver.
    *
-   * @var \Drupal\Core\Controller\TitleResolverInterface
+   * @var TitleResolverInterface
    */
   protected $titleResolver;
 
   /**
    * Constructs a BlockViewBuilder object.
    *
-   * @param \Drupal\Core\Cache\CacheableDependencyInterface $plugin_manager_block
+   * @param CacheableDependencyInterface $plugin_manager_block
    *   The plugin block manager.
-   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   * @param ContextRepositoryInterface $context_repository
    *   The context repository.
-   * @param \Drupal\Core\Plugin\Context\ContextHandlerInterface $context_handler
+   * @param ContextHandlerInterface $context_handler
    *   The context handler.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The user account.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route matcher.
-   * @param \Drupal\Core\Controller\TitleResolverInterface $title_resolver
+   * @param TitleResolverInterface $title_resolver
    *   The title resolver.
    */
   public function __construct(
@@ -118,14 +120,14 @@ class BlockViewBuilder {
    * @return array
    *   A renderable array representing the content of the block.
    *
-   * @throws \Drupal\Component\Plugin\Exception\ContextException
-   * @throws \Drupal\Component\Plugin\Exception\MissingValueContextException
+   * @throws ContextException
+   * @throws MissingValueContextException
    */
   public function build(string $id, array $configuration = [], bool $wrapper = TRUE): array {
 
     $configuration += ['label_display' => BlockPluginInterface::BLOCK_LABEL_VISIBLE];
 
-    /** @var \Drupal\Core\Block\BlockPluginInterface $block_plugin */
+    /** @var BlockPluginInterface $block_plugin */
     $block_plugin = $this->pluginManagerBlock->createInstance($id, $configuration);
 
     // Inject runtime contexts.
