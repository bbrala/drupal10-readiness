diff --git a/src/EventSubscriber/AccessCheck.php b/src/EventSubscriber/AccessCheck.php
index 8ac94c1..0733c9f 100644
--- a/src/EventSubscriber/AccessCheck.php
+++ b/src/EventSubscriber/AccessCheck.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\exclusiv_access\EventSubscriber;
 
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Drupal\Core\EventSubscriber\DefaultExceptionHtmlSubscriber;
@@ -20,21 +20,21 @@ class AccessCheck implements EventSubscriberInterface {
   /**
    * Current User.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * Service current_route_match.
    *
-   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   * @var CurrentRouteMatch
    */
   protected $currentRouteMatch;
 
   /**
    * Service exception.default_html.
    *
-   * @var \Drupal\Core\EventSubscriber\DefaultExceptionHtmlSubscriber
+   * @var DefaultExceptionHtmlSubscriber
    */
   protected $exceptionDefaultHtml;
 
@@ -64,10 +64,10 @@ class AccessCheck implements EventSubscriberInterface {
   /**
    * Ad accessDenied Event subscriber.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param RequestEvent $event
    *   Event for interception.
    */
-  public function exclusivAccess(GetResponseEvent $event) {
+  public function exclusivAccess(RequestEvent $event) {
 
     // Try to find a entity from route.
     $entity = $this->getEntityFromRoute();
@@ -98,7 +98,7 @@ class AccessCheck implements EventSubscriberInterface {
   /**
    * Extract Entity from current route.
    *
-   * @return \Drupal\Core\Entity\ContentEntityInterface|null
+   * @return ContentEntityInterface|null
    *   Entity or NULL.
    */
   private function getEntityFromRoute() {
