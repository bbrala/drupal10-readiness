diff --git a/src/Plugin/Field/FieldFormatter/SvgImageFieldFormatter.php b/src/Plugin/Field/FieldFormatter/SvgImageFieldFormatter.php
index da0aebe..9972177 100644
--- a/src/Plugin/Field/FieldFormatter/SvgImageFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/SvgImageFieldFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\svg_image_field\Plugin\Field\FieldFormatter;
 
+use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\FormatterBase;
@@ -27,7 +28,7 @@ class SvgImageFieldFormatter extends FormatterBase implements ContainerFactoryPl
   /**
    * Logger.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   public $logger;
 
@@ -279,7 +280,7 @@ class SvgImageFieldFormatter extends FormatterBase implements ContainerFactoryPl
         // context to ensure different file URLs are generated for different
         // sites in a multisite setup, including HTTP and HTTPS versions of the
         // same site. Fix in https://www.drupal.org/node/2646744.
-        $url = Url::fromUri(file_create_url($uri));
+        $url = \Drupal::service('file_url_generator')->generate($uri);
         $cache_contexts[] = 'url.site';
       }
 
@@ -316,7 +317,7 @@ class SvgImageFieldFormatter extends FormatterBase implements ContainerFactoryPl
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -326,7 +327,7 @@ class SvgImageFieldFormatter extends FormatterBase implements ContainerFactoryPl
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   * @param LoggerChannelFactoryInterface $logger
    *   Logger.
    */
   public function __construct(
diff --git a/src/Plugin/Field/FieldType/SvgImageFieldItem.php b/src/Plugin/Field/FieldType/SvgImageFieldItem.php
index cdd778d..832910b 100644
--- a/src/Plugin/Field/FieldType/SvgImageFieldItem.php
+++ b/src/Plugin/Field/FieldType/SvgImageFieldItem.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\svg_image_field\Plugin\Field\FieldType;
 
+use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StreamWrapper\StreamWrapperInterface;
@@ -44,7 +45,7 @@ class SvgImageFieldItem extends FileItem {
   /**
    * The entity manager service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -279,7 +280,7 @@ class SvgImageFieldItem extends FileItem {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public static function validateDefaultImageForm(array &$element, FormStateInterface $form_state) {
@@ -309,7 +310,7 @@ class SvgImageFieldItem extends FileItem {
   /**
    * Gets the entity manager.
    *
-   * @return \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @return EntityTypeManagerInterface
    *   The entity manager service.
    */
   protected function getEntityTypeManager() {
diff --git a/src/Plugin/Field/FieldWidget/SvgImageFieldWidget.php b/src/Plugin/Field/FieldWidget/SvgImageFieldWidget.php
index de00f12..3a9c773 100644
--- a/src/Plugin/Field/FieldWidget/SvgImageFieldWidget.php
+++ b/src/Plugin/Field/FieldWidget/SvgImageFieldWidget.php
@@ -29,14 +29,14 @@ class SvgImageFieldWidget extends FileWidget {
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * The entity repository Service.
    *
-   * @var \Drupal\Core\Entity\EntityRepositoryInterface
+   * @var EntityRepositoryInterface
    */
   protected $entityRepository;
 
diff --git a/src/Plugin/media/Source/SVG.php b/src/Plugin/media/Source/SVG.php
index f8c78c7..72cf66e 100644
--- a/src/Plugin/media/Source/SVG.php
+++ b/src/Plugin/media/Source/SVG.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\svg_image_field\Plugin\media\Source;
 
+use Drupal\file\FileInterface;
 use Drupal\media\MediaInterface;
 use Drupal\media\MediaTypeInterface;
 use Drupal\media\Plugin\media\Source\File;
@@ -31,7 +32,7 @@ class SVG extends File {
    * {@inheritdoc}
    */
   public function getMetadata(MediaInterface $media, $name) {
-    /** @var \Drupal\file\FileInterface $file */
+    /** @var FileInterface $file */
     $file = $media->get($this->configuration['source_field'])->entity;
 
     // If the source field is not required, it may be empty.
diff --git a/svg_image_field.module b/svg_image_field.module
index 806a1f6..f18c390 100644
--- a/svg_image_field.module
+++ b/svg_image_field.module
@@ -89,7 +89,7 @@ function svg_image_field_theme() {
 /**
  * Checks that the file has valid mime type.
  *
- * @param \Drupal\file\FileInterface $file
+ * @param FileInterface $file
  *   A file entity.
  *
  * @return array
diff --git a/svg_image_field.views.inc b/svg_image_field.views.inc
index af9d282..719ad3c 100644
--- a/svg_image_field.views.inc
+++ b/svg_image_field.views.inc
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\Sql\DefaultTableMapping;
 /**
  * @file
  * Provide views data for svg_image_field.module.
@@ -42,7 +43,7 @@ function svg_image_field_field_views_data_views_data_alter(array &$data, FieldSt
   $entity_manager = \Drupal::entityTypeManager();
   $entity_type = $entity_manager->getDefinition($entity_type_id);
   $pseudo_field_name = 'reverse_' . $field_name . '_' . $entity_type_id;
-  /** @var \Drupal\Core\Entity\Sql\DefaultTableMapping $table_mapping */
+  /** @var DefaultTableMapping $table_mapping */
   $table_mapping = $entity_manager->getStorage($entity_type_id)->getTableMapping();
 
   list($label) = views_entity_field_label($entity_type_id, $field_name);
diff --git a/tests/src/Unit/FileValidationTest.php b/tests/src/Unit/FileValidationTest.php
index 9e3cb9c..95ef27f 100644
--- a/tests/src/Unit/FileValidationTest.php
+++ b/tests/src/Unit/FileValidationTest.php
@@ -36,7 +36,7 @@ class FileValidationTest extends FieldKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  public function setUp() {
+  public function setUp(): void {
     $this->testDataDirPath = dirname(__FILE__) . '/test_data';
     parent::setUp();
     $this->installEntitySchema('file');
