modules/contrib/revive_adserver/revive_adserver.install
modules/contrib/revive_adserver/src/Annotation/InvocationMethodService.php
modules/contrib/revive_adserver/src/Form/ReviveAdserverSettingsForm.php
modules/contrib/revive_adserver/src/InvocationMethodServiceBase.php
modules/contrib/revive_adserver/src/InvocationMethodServiceInterface.php
modules/contrib/revive_adserver/src/InvocationMethodServiceManager.php
modules/contrib/revive_adserver/src/Plugin/Block/ReviveAdserverZoneBlock.php
modules/contrib/revive_adserver/src/Plugin/Field/FieldFormatter/ReviveFormatter.php
modules/contrib/revive_adserver/src/Plugin/Field/FieldType/ReviveItem.php
modules/contrib/revive_adserver/src/Plugin/Field/FieldWidget/ReviveWidget.php
modules/contrib/revive_adserver/src/Plugin/ReviveAdserver/InvocationMethod/AsyncJavascript.php
modules/contrib/revive_adserver/src/Plugin/ReviveAdserver/InvocationMethod/Iframe.php
modules/contrib/revive_adserver/src/Plugin/ReviveAdserver/InvocationMethod/Javascript.php
modules/contrib/revive_adserver/tests/src/Functional/ReviveFieldTest.php
modules/contrib/revive_adserver/tests/src/Functional/ReviveSettingsTest.php
modules/contrib/revive_adserver/tests/src/FunctionalJavascript/ReviveBlockJavascriptTest.php
modules/contrib/revive_adserver/tests/src/FunctionalJavascript/ReviveFieldJavascriptTest.php
modules/contrib/revive_adserver/tests/src/Traits/ReviveTestTrait.php

12 files with changes
=====================

1) modules/contrib/revive_adserver/tests/src/Traits/ReviveTestTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\revive_adserver\Traits;

+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\field\Entity\FieldConfig;
@@ @@
    * @param bool $withInvocationMethodPerEntity
    *   Configures the field with invocation method per entity.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   private function setupReviveField($withInvocationMethodPerEntity = FALSE) {
     $field_storage = FieldStorageConfig::create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/revive_adserver/tests/src/FunctionalJavascript/ReviveFieldJavascriptTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\revive_adserver\FunctionalJavascript;

+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\Core\Entity\Entity\EntityViewDisplay;
 use Drupal\field\Entity\FieldConfig;
@@ @@
   /**
    * A user with permissions to access the revive adserver settings page.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     $this->drupalCreateContentType(['type' => 'article']);
@@ @@
       'title[0][value]' => 'My test title',
       'field_revive[0][zone_id]' => 1,
     ];
-    $this->drupalPostForm('node/add/article', $edit, 'Save');
+    $this->drupalGet('node/add/article');
+    $this->submitForm($edit, 'Save');

     // Verify that the ad is displayed correctly. By default with the "async_javascript"
     // method.
@@ @@
   /**
    * Creates the necessary fields.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function setupFields() {
     FieldStorageConfig::create([
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/revive_adserver/tests/src/FunctionalJavascript/ReviveBlockJavascriptTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\revive_adserver\FunctionalJavascript;

+use Drupal\user\UserInterface;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\revive_adserver\Traits\ReviveTestTrait;

@@ @@
   /**
    * A user with permissions to access the revive adserver settings page.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Log in as a user, that can add and configure blocks.
@@ @@
       'settings[invocation_method]' => 'iframe',
       'region' => 'content',
     ];
-    $this->drupalPostForm('admin/structure/block/add/revive_adserver_zone_block', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/add/revive_adserver_zone_block');
+    $this->submitForm($edit, 'Save block');

     // Check that the ad wrappers and iframe got loaded.
     $this->drupalGet('<front>');
@@ @@
     $edit = [
       'settings[invocation_method]' => 'async_javascript',
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver ins');
     $this->assertSession()->elementAttributeContains('css', '.block-revive-adserver ins', 'data-revive-zoneid', 1);

@@ @@
     $edit = [
       'settings[block_banner]' => TRUE,
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver ins');
     $this->assertSession()->elementAttributeContains('css', '.block-revive-adserver ins', 'data-revive-block', 1);

@@ @@
     $edit = [
       'settings[block_banner_campaign]' => TRUE,
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver ins');
     $this->assertSession()->elementAttributeContains('css', '.block-revive-adserver ins', 'data-revive-blockcampaign', 1);

@@ @@
     $edit = [
       'settings[invocation_method]' => 'javascript',
     ];
-    $this->drupalPostForm('admin/structure/block/manage/reviveadserverzoneblock', $edit, 'Save block');
+    $this->drupalGet('admin/structure/block/manage/reviveadserverzoneblock');
+    $this->submitForm($edit, 'Save block');
     $this->assertSession()->elementExists('css', '.block-revive-adserver script');
   }

 }
    ----------- end diff -----------

Applied rules:
 * UiHelperTraitDrupalPostFormRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/revive_adserver/tests/src/Functional/ReviveSettingsTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\revive_adserver\Functional;

+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\revive_adserver\Traits\ReviveTestTrait;

@@ @@
   /**
    * A user with permissions to access the revive settings page.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Log in as a user, that can configure the revive adserver settings.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/revive_adserver/tests/src/Functional/ReviveFieldTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\revive_adserver\Functional;

+use Drupal\user\UserInterface;
+use Drupal\node\NodeInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\revive_adserver\Traits\ReviveTestTrait;

@@ @@
   /**
    * A user with permissions to edit Articles.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $contentAuthorUser;

@@ @@
   /**
    * The node object used in the test.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;

@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create the Article node type.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/revive_adserver/src/Plugin/Field/FieldWidget/ReviveWidget.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;

@@ @@
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/revive_adserver/src/Plugin/Field/FieldFormatter/ReviveFormatter.php:25

    ---------- begin diff ----------
@@ @@
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;

@@ @@
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ @@
    *   The formatter label display setting.
    * @param string $view_mode
    *   The view mode.
-   * @param \Drupal\revive_adserver\InvocationMethodServiceManager $invocationMethodServiceManager
+   * @param InvocationMethodServiceManager $invocationMethodServiceManager
    *   The Invocation Method Manager.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, InvocationMethodServiceManager $invocationMethodServiceManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/revive_adserver/src/Plugin/Block/ReviveAdserverZoneBlock.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\revive_adserver\Plugin\Block;

+use Drupal\Core\Session\AccountProxyInterface;
 use Drupal\Core\Block\BlockBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;

@@ @@
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
-   * @param \Drupal\Core\Session\AccountProxyInterface $account
+   * @param AccountProxyInterface $account
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, InvocationMethodServiceManager $invocationMethodServiceManager) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
@@ @@
   }

   /**
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    * @param array $configuration
    * @param string $plugin_id
    * @param mixed $plugin_definition
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/revive_adserver/src/InvocationMethodServiceManager.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\revive_adserver;

+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
 use Drupal\Core\Cache\CacheBackendInterface;
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ @@
    * @param string $input
    *   Input provided from a field.
    *
-   * @return \Drupal\revive_adserver\InvocationMethodServiceInterface|bool
+   * @return InvocationMethodServiceInterface|bool
    *   The loaded plugin.
    */
   public function loadInvocationMethodFromInput($input) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/revive_adserver/src/InvocationMethodServiceBase.php:57

    ---------- begin diff ----------
@@ @@
   /**
    * Config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;

@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory service.
-   * @param \Drupal\revive_adserver\InvocationMethodServiceManager $invocationMethodServiceManager
+   * @param InvocationMethodServiceManager $invocationMethodServiceManager
    *   Invocation method manager service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, ConfigFactoryInterface $configFactory, InvocationMethodServiceManager $invocationMethodServiceManager) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/revive_adserver/src/Form/ReviveAdserverSettingsForm.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The Invocation Method Manager.
    *
-   * @var \Drupal\revive_adserver\InvocationMethodServiceManager
+   * @var InvocationMethodServiceManager
    */
   protected $invocationMethodManager;

@@ @@
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    */
   public function syncZones(array &$form, FormStateInterface $form_state) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/revive_adserver/src/Annotation/InvocationMethodService.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\revive_adserver\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


 [OK] 12 files have been changed by Rector                                      

