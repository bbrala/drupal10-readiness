diff --git a/one_time_login_link_admin.info.yml b/one_time_login_link_admin.info.yml
index dc6a321..828c773 100644
--- a/one_time_login_link_admin.info.yml
+++ b/one_time_login_link_admin.info.yml
@@ -1,6 +1,5 @@
 name: 'One Time Login Link Admin'
 type: module
 description: 'Generate one time login link for user from admin UI'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: 'Custom'
diff --git a/one_time_login_link_admin.module b/one_time_login_link_admin.module
index 0f7763c..eb87e75 100644
--- a/one_time_login_link_admin.module
+++ b/one_time_login_link_admin.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\User\UserInterface;
 /**
  * @file
  * Contains one_time_login_link_admin.module.
@@ -30,7 +31,7 @@ function one_time_login_link_admin_help($route_name, RouteMatchInterface $route_
  */
 function one_time_login_link_admin_entity_operation_alter(array &$operations, EntityInterface $entity) {
   $current_user = \Drupal::currentUser();
-  /** @var \Drupal\User\UserInterface $entity */
+  /** @var UserInterface $entity */
   // Add operation for generating one-time user login links for administrator.
   if ($entity->getEntityTypeId() === 'user' && $current_user->hasPermission('administer users') && !$entity->hasRole('administrator') && $entity->isActive()) {
     $operations['one_time_login_link_admin_generate_login_link'] = [
diff --git a/src/Controller/OneTimeLoginLinkController.php b/src/Controller/OneTimeLoginLinkController.php
index 4e4e387..a5c72b3 100644
--- a/src/Controller/OneTimeLoginLinkController.php
+++ b/src/Controller/OneTimeLoginLinkController.php
@@ -23,7 +23,7 @@ class OneTimeLoginLinkController extends ControllerBase {
   /**
    * Date time formatter service.
    *
-   * @var Drupal\Core\Datetime\DateFormatter
+   * @var DateFormatter
    */
   protected $dateFormatter;
 
@@ -46,10 +46,10 @@ class OneTimeLoginLinkController extends ControllerBase {
   /**
    * Generates a one-time login (password reset) link for the given user.
    *
-   * @param \Drupal\Core\Session\AccountInterface $user
+   * @param AccountInterface $user
    *   The user for which to generate the login link.
    *
-   * @return \Symfony\Component\HttpFoundation\RedirectResponse|null
+   * @return RedirectResponse|null
    *   A redirect to the destination, if one was provided.
    */
   public function generateLoginLink(AccountInterface $user) {
diff --git a/tests/src/Unit/TestOnetimetimeloginlinkFunctional.php b/tests/src/Unit/TestOnetimetimeloginlinkFunctional.php
index ddeff66..ad926ed 100755
--- a/tests/src/Unit/TestOnetimetimeloginlinkFunctional.php
+++ b/tests/src/Unit/TestOnetimetimeloginlinkFunctional.php
@@ -7,6 +7,7 @@
 
 namespace Drupal\Tests\one_time_login_link_admin\Unit;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 
 use Drupal\Core\Url;
@@ -26,21 +27,21 @@ class TestOnetimetimeloginlinkFunctional extends BrowserTestBase {
   /**
    * A user for testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $webUser;
 
   /**
    * A user for testing.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $adminUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->adminUser = $this->drupalCreateUser([
       'access administration pages',
@@ -63,7 +64,7 @@ class TestOnetimetimeloginlinkFunctional extends BrowserTestBase {
     $this->drupalGet(Url::fromRoute('one_time_login_link_admin.generate_login_link',
       ['user' => 310]));
     // Check path.
-    $this->assertResponse(404);
+    $this->assertSession()->statusCodeEquals(404);
     $assert->pageTextContains('The requested page could not be found');
   }
 
