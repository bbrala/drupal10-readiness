diff --git a/enforce_user_fields.info.yml b/enforce_user_fields.info.yml
index e02c395..c2f5124 100644
--- a/enforce_user_fields.info.yml
+++ b/enforce_user_fields.info.yml
@@ -1,7 +1,6 @@
 name: 'Enforce User Fields'
 type: module
 description: 'Force users to fill any required fields in user account at login.'
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 configure: enforce_user_fields.settings
 
diff --git a/enforce_user_fields.module b/enforce_user_fields.module
index 20d4e8f..b8a9069 100644
--- a/enforce_user_fields.module
+++ b/enforce_user_fields.module
@@ -54,7 +54,7 @@ function enforce_user_fields_form_user_form_alter(&$form, FormStateInterface $fo
 /**
  * Checks, if the given user has admin rights.
  *
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  *   The account to check.
  *
  * @return bool
@@ -71,7 +71,7 @@ function enforce_user_fields_user_bypass(AccountInterface $account) {
 }
 
 /**
- * @param \Drupal\Core\Session\AccountInterface $account
+ * @param AccountInterface $account
  * @return bool
  */
 function enforce_user_fields_have_unfilled_required_fields(AccountInterface $account){
@@ -117,7 +117,7 @@ function enforce_user_fields_have_unfilled_required_fields(AccountInterface $acc
 /**
  * Submit user form callback
  * @param $form
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  * @param $form_id
  */
 function enforce_user_fields_form_user_form_submit(&$form, FormStateInterface $form_state) {
diff --git a/src/EventSubscriber/EnforceUserFieldsSubscriber.php b/src/EventSubscriber/EnforceUserFieldsSubscriber.php
index 669ea73..649e494 100644
--- a/src/EventSubscriber/EnforceUserFieldsSubscriber.php
+++ b/src/EventSubscriber/EnforceUserFieldsSubscriber.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\enforce_user_fields\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\Core\Path\PathMatcherInterface;
@@ -11,7 +13,6 @@ use Drupal\Core\Url;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -22,59 +23,59 @@ class EnforceUserFieldsSubscriber implements EventSubscriberInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountProxyInterface
+   * @var AccountProxyInterface
    */
   protected $currentUser;
 
   /**
    * The route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;
 
   /**
    * The path matcher.
    *
-   * @var \Drupal\Core\Path\PathMatcherInterface
+   * @var PathMatcherInterface
    */
   protected $pathMatcher;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $requestStack;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
   /**
    * The enforce user fields settings config.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $globalConfig;
 
   /**
    * EnforceUserFieldsSubscriber constructor.
    *
-   * @param \Drupal\Core\Session\AccountProxyInterface $current_user
+   * @param AccountProxyInterface $current_user
    *   The current user.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The route match.
-   * @param \Drupal\Core\Path\PathMatcherInterface $path_matcher
+   * @param PathMatcherInterface $path_matcher
    *   The path matcher service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory service.
    */
   public function __construct(AccountProxyInterface $current_user, RouteMatchInterface $route_match, PathMatcherInterface $path_matcher, RequestStack $request_stack, MessengerInterface $messenger, ConfigFactoryInterface $config_factory) {
@@ -89,7 +90,7 @@ class EnforceUserFieldsSubscriber implements EventSubscriberInterface {
   /**
    * Check that user have filled all required fields.
    */
-  public function checkForUserFields(GetResponseEvent $event) {
+  public function checkForUserFields(RequestEvent $event) {
     $route_name = $this->routeMatch->getRouteName();
     $skip_route = in_array($route_name, [
       'entity.user.edit_form',
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index bf252f9..e5e2b7f 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\enforce_user_fields\Form;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 
@@ -28,7 +29,7 @@ class SettingsForm extends ConfigFormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Config\Config $config */
+    /** @var Config $config */
     $config = $this->config('enforce_user_fields.settings');
     $form['message'] = [
       '#type' => 'textfield',
