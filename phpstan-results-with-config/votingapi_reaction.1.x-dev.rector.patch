diff --git a/composer.json b/composer.json
index afca888..132eb63 100644
--- a/composer.json
+++ b/composer.json
@@ -16,7 +16,7 @@
   },
   "license": "GPL-2.0",
   "require": {
-    "drupal/core": "^8.7.7 || ^9",
-    "drupal/votingapi": "^3.0"
+    "drupal/votingapi": "^3.0",
+    "drupal/core": "^9.3 || ^10"
   }
 }
diff --git a/src/FieldPermissions.php b/src/FieldPermissions.php
index c411442..1ad40d1 100644
--- a/src/FieldPermissions.php
+++ b/src/FieldPermissions.php
@@ -17,14 +17,14 @@ class FieldPermissions implements ContainerInjectionInterface {
   /**
    * Entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManager
+   * @var EntityFieldManager
    */
   protected $fieldManager;
 
   /**
    * Constructs a FieldPermissionsService instance.
    *
-   * @param \Drupal\Core\Entity\EntityFieldManager $fieldManager
+   * @param EntityFieldManager $fieldManager
    *   Entity field manager service.
    */
   public function __construct(EntityFieldManager $fieldManager) {
diff --git a/src/Form/VotingApiReactionForm.php b/src/Form/VotingApiReactionForm.php
index c428c78..bea1028 100644
--- a/src/Form/VotingApiReactionForm.php
+++ b/src/Form/VotingApiReactionForm.php
@@ -22,36 +22,36 @@ class VotingApiReactionForm extends ContentEntityForm {
   /**
    * The entity being used by this form.
    *
-   * @var \Drupal\votingapi\Entity\Vote
+   * @var Vote
    */
   protected $entity;
 
   /**
    * Voting API Reaction manager service.
    *
-   * @var \Drupal\votingapi_reaction\VotingApiReactionManager
+   * @var VotingApiReactionManager
    */
   protected $reactionManager;
 
   /**
    * Current user service.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\votingapi_reaction\VotingApiReactionManager $reaction_manager
+   * @param VotingApiReactionManager $reaction_manager
    *   Voting API Reaction manager service.
-   * @param \Drupal\Core\Session\AccountProxy $current_user
+   * @param AccountProxy $current_user
    *   Current user service.
-   * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
+   * @param EntityRepositoryInterface $entity_repository
    *   The entity repository service.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
-   * @param \Drupal\Component\Datetime\TimeInterface $time
+   * @param TimeInterface $time
    *   The time service.
    */
   public function __construct(VotingApiReactionManager $reaction_manager, AccountProxy $current_user, EntityRepositoryInterface $entity_repository, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
@@ -258,7 +258,7 @@ class VotingApiReactionForm extends ContentEntityForm {
    *
    * @param array $form
    *   The form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return array
@@ -273,7 +273,7 @@ class VotingApiReactionForm extends ContentEntityForm {
   /**
    * Check if current form should be visible, closed or opened.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return mixed
@@ -293,7 +293,7 @@ class VotingApiReactionForm extends ContentEntityForm {
   /**
    * Check if current user has access to this form.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param mixed $modify
    *   Vote entity is beign modified.
diff --git a/src/Plugin/Field/FieldFormatter/VotingApiReactionFormatter.php b/src/Plugin/Field/FieldFormatter/VotingApiReactionFormatter.php
index 099035d..19f9408 100644
--- a/src/Plugin/Field/FieldFormatter/VotingApiReactionFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/VotingApiReactionFormatter.php
@@ -31,7 +31,7 @@ class VotingApiReactionFormatter extends FormatterBase implements ContainerFacto
   /**
    * Form builder service.
    *
-   * @var \Drupal\Core\Entity\EntityFormBuilder
+   * @var EntityFormBuilder
    */
   protected $formBuilder;
 
@@ -42,7 +42,7 @@ class VotingApiReactionFormatter extends FormatterBase implements ContainerFacto
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -52,7 +52,7 @@ class VotingApiReactionFormatter extends FormatterBase implements ContainerFacto
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Entity\EntityFormBuilder $form_builder
+   * @param EntityFormBuilder $form_builder
    *   Form builder service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, EntityFormBuilder $form_builder) {
diff --git a/src/Plugin/Field/FieldWidget/VotingApiReactionWidget.php b/src/Plugin/Field/FieldWidget/VotingApiReactionWidget.php
index 12e12eb..736be60 100644
--- a/src/Plugin/Field/FieldWidget/VotingApiReactionWidget.php
+++ b/src/Plugin/Field/FieldWidget/VotingApiReactionWidget.php
@@ -28,7 +28,7 @@ class VotingApiReactionWidget extends WidgetBase implements ContainerFactoryPlug
   /**
    * Current user service.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
@@ -39,13 +39,13 @@ class VotingApiReactionWidget extends WidgetBase implements ContainerFactoryPlug
    *   The plugin_id for the widget.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the widget is associated.
    * @param array $settings
    *   The widget settings.
    * @param array $third_party_settings
    *   Any third party settings.
-   * @param \Drupal\Core\Session\AccountProxy $currentUser
+   * @param AccountProxy $currentUser
    *   Current user service.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, array $third_party_settings, AccountProxy $currentUser) {
diff --git a/src/VotingApiReactionManager.php b/src/VotingApiReactionManager.php
index a37eac9..b1a2492 100644
--- a/src/VotingApiReactionManager.php
+++ b/src/VotingApiReactionManager.php
@@ -2,6 +2,10 @@
 
 namespace Drupal\votingapi_reaction;
 
+use Drupal\votingapi\VoteStorage;
+use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
+use Drupal\Core\Config\ConfigFactory;
+use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Render\Renderer;
@@ -21,64 +25,64 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
   /**
    * Vote storage.
    *
-   * @var \Drupal\votingapi\VoteStorage
+   * @var VoteStorage
    */
   protected $voteStorage;
 
   /**
    * Vote type storage.
    *
-   * @var \Drupal\Core\Entity\Sql\SqlContentEntityStorage
+   * @var SqlContentEntityStorage
    */
   protected $voteTypeStorage;
 
   /**
    * File storage.
    *
-   * @var \Drupal\Core\Entity\Sql\SqlContentEntityStorage
+   * @var SqlContentEntityStorage
    */
   protected $fileStorage;
 
   /**
    * Current user service.
    *
-   * @var \Drupal\Core\Session\AccountProxy
+   * @var AccountProxy
    */
   protected $currentUser;
 
   /**
    * Voting API results service.
    *
-   * @var \Drupal\votingapi\VoteResultFunctionManager
+   * @var VoteResultFunctionManager
    */
   protected $votingApiResults;
 
   /**
    * Renderer service.
    *
-   * @var \Drupal\Core\Render\Renderer
+   * @var Renderer
    */
   protected $renderer;
 
   /**
    * Configuration factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   protected $configFactory;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager service.
-   * @param \Drupal\Core\Session\AccountProxy $currentUser
+   * @param AccountProxy $currentUser
    *   Current user service.
-   * @param \Drupal\votingapi\VoteResultFunctionManager $votingApiResults
+   * @param VoteResultFunctionManager $votingApiResults
    *   Voting API results service.
-   * @param \Drupal\Core\Render\Renderer $renderer
+   * @param Renderer $renderer
    *   Renderer service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Configuration factory service.
    */
   public function __construct(EntityTypeManagerInterface $entityTypeManager, AccountProxy $currentUser, VoteResultFunctionManager $votingApiResults, Renderer $renderer, ConfigFactoryInterface $configFactory) {
@@ -107,12 +111,12 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
   /**
    * Load previous reaction of the user for certain field.
    *
-   * @param \Drupal\votingapi\Entity\Vote $entity
+   * @param Vote $entity
    *   Current vote entity.
    * @param array $settings
    *   Field settings.
    *
-   * @return \Drupal\Core\Entity\EntityInterface
+   * @return EntityInterface
    *   Last reaction for current user.
    */
   public function lastReaction(Vote $entity, array $settings) {
@@ -158,7 +162,7 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
   /**
    * Return voting results for each active reaction.
    *
-   * @param \Drupal\votingapi\Entity\Vote $entity
+   * @param Vote $entity
    *   Current vote entity.
    * @param array $settings
    *   Field settings.
@@ -267,7 +271,7 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
   /**
    * Store reaction from session variable.
    *
-   * @param \Drupal\votingapi\Entity\Vote $entity
+   * @param Vote $entity
    *   Current vote entity.
    */
   public function rememberReaction(Vote $entity) {
@@ -281,7 +285,7 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
   /**
    * Remove reaction from session variable.
    *
-   * @param \Drupal\votingapi\Entity\Vote $entity
+   * @param Vote $entity
    *   Current vote entity.
    */
   public function forgetReaction(Vote $entity) {
@@ -295,7 +299,7 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
   /**
    * Restore reaction from session variable.
    *
-   * @param \Drupal\votingapi\Entity\Vote $entity
+   * @param Vote $entity
    *   Current vote entity.
    *
    * @return string|null
@@ -315,7 +319,7 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
   /**
    * Return URL to reaction icon.
    *
-   * @param \Drupal\votingapi\Entity\VoteType $entity
+   * @param VoteType $entity
    *   Current vote entity.
    * @param bool $default
    *   Default icon is used.
@@ -325,7 +329,7 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
    */
   public function getIcon(VoteType $entity, &$default = TRUE) {
     $path = implode('/', [
-      drupal_get_path('module', 'votingapi_reaction'),
+      \Drupal::service('extension.list.module')->getPath('votingapi_reaction'),
       'svg',
       '', // Trailing slash.
     ]);
@@ -343,7 +347,7 @@ class VotingApiReactionManager implements ContainerInjectionInterface {
       $url = $path . $entity->id() . '.svg';
     }
 
-    return file_create_url($url);
+    return \Drupal::service('file_url_generator')->generateAbsoluteString($url);
   }
 
 }
diff --git a/votingapi_reaction.info.yml b/votingapi_reaction.info.yml
index 288ed25..e787d02 100644
--- a/votingapi_reaction.info.yml
+++ b/votingapi_reaction.info.yml
@@ -2,8 +2,7 @@ name: Voting API Reaction
 type: module
 description: 'Allows users to react to any entity using Voting and Field APIs'
 package: Voting
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 
 dependencies:
   - votingapi:votingapi
diff --git a/votingapi_reaction.module b/votingapi_reaction.module
index 08ba2aa..1f46be7 100644
--- a/votingapi_reaction.module
+++ b/votingapi_reaction.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityStorageException;
 /**
  * @file
  * Allows users to react to any entity using Voting and Field APIs.
@@ -139,10 +140,10 @@ function votingapi_reaction_form_alter(&$form, FormStateInterface $form_state, $
  *
  * @param array $form
  *   The form to process.
- * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param FormStateInterface $form_state
  *   The form state.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function votingapi_reaction_form_vote_type_form_submit(array &$form, FormStateInterface $form_state) {
   $form_file = $form_state->getValue('new', 0);
