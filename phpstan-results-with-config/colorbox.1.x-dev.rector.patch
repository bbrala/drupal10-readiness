diff --git a/colorbox.post_update.php b/colorbox.post_update.php
index a481543..254f95f 100644
--- a/colorbox.post_update.php
+++ b/colorbox.post_update.php
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\Display\EntityDisplayInterface;
 /**
  * @file
  * Post-update functions for Colorbox.
@@ -14,7 +15,7 @@ use Drupal\Core\Entity\Entity\EntityFormDisplay;
 function colorbox_post_update_image_style_dependencies() {
   // Merge view and form displays. Use array_values() to avoid key collisions.
   $displays = array_merge(array_values(EntityViewDisplay::loadMultiple()), array_values(EntityFormDisplay::loadMultiple()));
-  /** @var \Drupal\Core\Entity\Display\EntityDisplayInterface[] $displays */
+  /** @var EntityDisplayInterface[] $displays */
   foreach ($displays as $display) {
     // Re-save each config entity to add missed dependencies.
     $display->save();
diff --git a/colorbox.theme.inc b/colorbox.theme.inc
index 30fa7a5..9ee8ad1 100644
--- a/colorbox.theme.inc
+++ b/colorbox.theme.inc
@@ -132,7 +132,7 @@ function template_preprocess_colorbox_formatter(&$variables) {
     $variables['url'] = $style->buildUrl($image_uri);
   }
   else {
-    $variables['url'] = file_create_url($image_uri);
+    $variables['url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
   }
 
   // If File Entity module is enabled, load attribute values from file entity.
diff --git a/src/ActivationCheck.php b/src/ActivationCheck.php
index 15ae847..5610bb3 100644
--- a/src/ActivationCheck.php
+++ b/src/ActivationCheck.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\colorbox;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
 
@@ -13,14 +14,14 @@ class ActivationCheck implements ActivationCheckInterface {
   /**
    * The colorbox settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $settings;
 
   /**
    * The request stack.
    *
-   * @var \Symfony\Component\HttpFoundation\RequestStack
+   * @var RequestStack
    */
   protected $request;
 
diff --git a/src/ColorboxAttachment.php b/src/ColorboxAttachment.php
index cd09389..bad2d78 100644
--- a/src/ColorboxAttachment.php
+++ b/src/ColorboxAttachment.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\colorbox;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Installer\InstallerKernel;
@@ -17,21 +18,21 @@ class ColorboxAttachment implements ElementAttachmentInterface {
   /**
    * The service to determine if colorbox should be activated.
    *
-   * @var \Drupal\colorbox\ActivationCheckInterface
+   * @var ActivationCheckInterface
    */
   protected $activation;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The colorbox settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $settings;
 
diff --git a/src/Form/ColorboxSettingsForm.php b/src/Form/ColorboxSettingsForm.php
index 537dde3..54427ff 100644
--- a/src/Form/ColorboxSettingsForm.php
+++ b/src/Form/ColorboxSettingsForm.php
@@ -18,7 +18,7 @@ class ColorboxSettingsForm extends ConfigFormBase {
   /**
    * The list of available modules.
    *
-   * @var \Drupal\Core\Extension\ModuleExtensionList
+   * @var ModuleExtensionList
    */
   protected $extensionListModule;
 
@@ -42,20 +42,20 @@ class ColorboxSettingsForm extends ConfigFormBase {
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;
 
   /**
    * Class constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The Configuration Factory.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The module handler service.
-   * @param \Drupal\Core\Extension\ModuleExtensionList $extension_list_module
+   * @param ModuleExtensionList $extension_list_module
    *   The list of available modules.
-   * @param \Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   The library discovery service.
    */
   public function __construct(ConfigFactoryInterface $config_factory,
diff --git a/src/GalleryIdHelper.php b/src/GalleryIdHelper.php
index df900e8..3a3d9f4 100644
--- a/src/GalleryIdHelper.php
+++ b/src/GalleryIdHelper.php
@@ -25,23 +25,23 @@ class GalleryIdHelper {
   /**
    * The Configuration Factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * The Token.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
   /**
    * GalleryIdHelper constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The Configuration Factory.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The Token.
    */
   public function __construct(ConfigFactoryInterface $configFactory, Token $token) {
@@ -52,9 +52,9 @@ class GalleryIdHelper {
   /**
    * Generate ID.
    *
-   * @param \Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   The Entity.
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   The Item.
    * @param array $settings
    *   The Settings.
diff --git a/src/Plugin/Field/FieldFormatter/ColorboxFormatter.php b/src/Plugin/Field/FieldFormatter/ColorboxFormatter.php
index 8429e31..5a945e9 100644
--- a/src/Plugin/Field/FieldFormatter/ColorboxFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ColorboxFormatter.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\colorbox\Plugin\Field\FieldFormatter;
 
+use Drupal\image\ImageStyleStorageInterface;
+use Drupal\image\ImageStyleInterface;
 use Drupal\Core\Asset\LibraryDiscoveryInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ -35,28 +37,28 @@ class ColorboxFormatter extends ImageFormatterBase implements ContainerFactoryPl
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The image style entity storage.
    *
-   * @var \Drupal\image\ImageStyleStorageInterface
+   * @var ImageStyleStorageInterface
    */
   protected $imageStyleStorage;
 
   /**
    * Drupal\Core\Extension\ModuleHandlerInterface definition.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   private $moduleHandler;
 
   /**
    * Library discovery service.
    *
-   * @var \Drupal\Core\Asset\LibraryDiscoveryInterface
+   * @var LibraryDiscoveryInterface
    */
   private $libraryDiscovery;
 
@@ -67,7 +69,7 @@ class ColorboxFormatter extends ImageFormatterBase implements ContainerFactoryPl
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -77,15 +79,15 @@ class ColorboxFormatter extends ImageFormatterBase implements ContainerFactoryPl
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   The current user.
-   * @param Drupal\Core\Entity\EntityStorageInterface $image_style_storage
+   * @param EntityStorageInterface $image_style_storage
    *   The image style storage.
-   * @param \Drupal\colorbox\ElementAttachmentInterface $attachment
+   * @param ElementAttachmentInterface $attachment
    *   Allow the library to be attached to the page.
-   * @param Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   Module handler services.
-   * @param Drupal\Core\Asset\LibraryDiscoveryInterface $libraryDiscovery
+   * @param LibraryDiscoveryInterface $libraryDiscovery
    *   Library discovery service.
    */
   public function __construct($plugin_id,
@@ -451,7 +453,7 @@ class ColorboxFormatter extends ImageFormatterBase implements ContainerFactoryPl
       $style_ids[] = $this->getSetting('colorbox_node_style_first');
     }
     $style_ids[] = $this->getSetting('colorbox_image_style');
-    /** @var \Drupal\image\ImageStyleInterface $style */
+    /** @var ImageStyleInterface $style */
     foreach ($style_ids as $style_id) {
       if ($style_id && $style = ImageStyle::load($style_id)) {
         // If this formatter uses a valid image style to display the image, add
@@ -473,7 +475,7 @@ class ColorboxFormatter extends ImageFormatterBase implements ContainerFactoryPl
       $style_ids['colorbox_node_style_first'] = $this->getSetting('colorbox_node_style_first');
     }
     $style_ids['colorbox_image_style'] = $this->getSetting('colorbox_image_style');
-    /** @var \Drupal\image\ImageStyleInterface $style */
+    /** @var ImageStyleInterface $style */
     foreach ($style_ids as $name => $style_id) {
       if ($style_id && $style = ImageStyle::load($style_id)) {
         if (!empty($dependencies[$style->getConfigDependencyKey()][$style->getConfigDependencyName()])) {
diff --git a/tests/src/FunctionalJavascript/ColorboxJavascriptTest.php b/tests/src/FunctionalJavascript/ColorboxJavascriptTest.php
index fcb09ab..603d9ad 100644
--- a/tests/src/FunctionalJavascript/ColorboxJavascriptTest.php
+++ b/tests/src/FunctionalJavascript/ColorboxJavascriptTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\colorbox\FunctionalJavascript;
 
+use Drupal\node\NodeInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\file\Entity\File;
@@ -43,7 +44,7 @@ class ColorboxJavascriptTest extends WebDriverTestBase {
   /**
    * Node var.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
 
@@ -138,7 +139,7 @@ class ColorboxJavascriptTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->createContentType(['type' => 'page']);
     FieldStorageConfig::create([
