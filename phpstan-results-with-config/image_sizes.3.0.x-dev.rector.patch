diff --git a/image_sizes.module b/image_sizes.module
index c223259..2bc1ef2 100644
--- a/image_sizes.module
+++ b/image_sizes.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\image_sizes\ImageSizesService;
 /**
  * @file
  * Implements all hooks needed for image sizes module.
@@ -29,7 +30,7 @@ function image_sizes_theme() {
 
 function template_preprocess_image_sizes(&$variables) {
   /**
-   * @var \Drupal\image_sizes\ImageSizesService
+   * @var ImageSizesService
    */
   $service = \Drupal::service('image_sizes');
   $attributes = $service->getAttributes($variables['style'], $variables['entity'], true);
diff --git a/src/Commands/AddFormatCommand.php b/src/Commands/AddFormatCommand.php
index b0dbf73..983ad2f 100644
--- a/src/Commands/AddFormatCommand.php
+++ b/src/Commands/AddFormatCommand.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\image_sizes\Commands;
 
+use Drupal\image\Entity\ImageStyle;
+use Drupal\image\ConfigurableImageEffectBase;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\image\Plugin\ImageEffect\ConvertImageEffect;
 use Symfony\Component\Console\Output\OutputInterface;
@@ -15,14 +17,14 @@ class AddFormatCommand extends DrushCommands {
   /**
    * Entity type manager service.
    *
-   * @var Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * DeleteCommand constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
    */
   public function __construct(
@@ -57,12 +59,12 @@ class AddFormatCommand extends DrushCommands {
    */
   protected function execute(OutputInterface $output, $format) {
     /**
-     * @var \Drupal\image\Entity\ImageStyle[]
+     * @var ImageStyle[]
      */
     $styles = $this->entityTypeManager->getStorage('image_style')->loadMultiple();
     foreach ($styles as $style) {
       /**
-       * @var \Drupal\image\ConfigurableImageEffectBase[]
+       * @var ConfigurableImageEffectBase[]
        */
       $effects = $style->getEffects();
       $convert = FALSE;
diff --git a/src/Commands/GenerateImageSizeCommand.php b/src/Commands/GenerateImageSizeCommand.php
index bfdba02..5a5fa23 100644
--- a/src/Commands/GenerateImageSizeCommand.php
+++ b/src/Commands/GenerateImageSizeCommand.php
@@ -39,7 +39,7 @@ class GenerateImageSizeCommand extends DrushCommands {
   /**
    * Entity type manager service.
    *
-   * @var Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -53,9 +53,9 @@ class GenerateImageSizeCommand extends DrushCommands {
   /**
    * DeleteCommand constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   Module Handler.
    */
   public function __construct(
diff --git a/src/ImageSizesService.php b/src/ImageSizesService.php
index 35902c1..207a98c 100644
--- a/src/ImageSizesService.php
+++ b/src/ImageSizesService.php
@@ -76,7 +76,7 @@ class ImageSizesService {
    *
    * @param string $uri
    *   File uri.
-   * @param \Drupal\image_sizes\Entity\ImageSizesPresetEntity $preset
+   * @param ImageSizesPresetEntity $preset
    *   ImageSizesPreset entity.
    *
    * @return string
@@ -84,12 +84,12 @@ class ImageSizesService {
    */
   protected static function getFallBackStyle($uri, ImageSizesPresetEntity $preset) {
     if ($preset->getFallbackStyle() == 'original') {
-      return file_create_url($uri);
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
     }
 
     $style = ImageStyle::load($preset->getFallbackStyle());
     if (!$style) {
-      return file_create_url($uri);
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
     }
 
     return $style->buildUrl($uri);
@@ -100,7 +100,7 @@ class ImageSizesService {
    *
    * @param string $uri
    *   File uri.
-   * @param \Drupal\image_sizes\Entity\ImageSizesPresetEntity $preset
+   * @param ImageSizesPresetEntity $preset
    *   ImageSizesPreset entity.
    *
    * @return string
@@ -109,7 +109,7 @@ class ImageSizesService {
   protected static function getPreloadStyle($uri, ImageSizesPresetEntity $preset) {
     $style = ImageStyle::load($preset->getPreloadStyle());
     if (!$style) {
-      return file_create_url($uri);
+      return \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
     }
 
     return $style->buildUrl($uri);
@@ -147,7 +147,7 @@ class ImageSizesService {
    *
    * @param string $uri
    *   File uri.
-   * @param \Drupal\image_sizes\Entity\ImageSizesPresetEntity $preset
+   * @param ImageSizesPresetEntity $preset
    *   ImageSizesPreset entity.
    *
    * @return array
diff --git a/src/Plugin/Field/FieldFormatter/ImageSizesPresetFormatter.php b/src/Plugin/Field/FieldFormatter/ImageSizesPresetFormatter.php
index ec6ea4b..c06f93a 100644
--- a/src/Plugin/Field/FieldFormatter/ImageSizesPresetFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/ImageSizesPresetFormatter.php
@@ -114,7 +114,7 @@ class ImageSizesPresetFormatter extends FormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
