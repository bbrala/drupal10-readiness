diff --git a/src/Controller/IPNController.php b/src/Controller/IPNController.php
index d03d022..b5e3e12 100644
--- a/src/Controller/IPNController.php
+++ b/src/Controller/IPNController.php
@@ -20,14 +20,14 @@ class IPNController extends ControllerBase {
   /**
    * The event dispatcher.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * Constructor.
    *
-   * @param \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher
+   * @param EventDispatcherInterface $event_dispatcher
    *   The event dispatcher.
    */
   public function __construct(EventDispatcherInterface $event_dispatcher) {
@@ -46,7 +46,7 @@ class IPNController extends ControllerBase {
   /**
    * IPN Listener.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   Response.
    */
   public function listen() {
@@ -75,12 +75,12 @@ class IPNController extends ControllerBase {
     if ($ipnMessage->validate()) {
       $responseMessage = 'Got valid IPN data';
       $this->getLogger('recurring_donation')->notice($responseMessage);
-      $this->eventDispatcher->dispatch(IPNMessageEvents::VALID, $event);
+      $this->eventDispatcher->dispatch($event, IPNMessageEvents::VALID);
     }
     else {
       $responseMessage = 'Got invalid IPN data';
       $this->getLogger('recurring_donation')->error($responseMessage);
-      $this->eventDispatcher->dispatch(IPNMessageEvents::INVALID, $event);
+      $this->eventDispatcher->dispatch($event, IPNMessageEvents::INVALID);
     }
 
     return new Response($responseMessage, 200);
diff --git a/src/Event/IPNMessageReceivedEvent.php b/src/Event/IPNMessageReceivedEvent.php
index 1638e86..0d61ccb 100644
--- a/src/Event/IPNMessageReceivedEvent.php
+++ b/src/Event/IPNMessageReceivedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\recurring_donation\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use PayPal\IPN\PPIPNMessage;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class IPNMessageReceivedEvent.
@@ -15,7 +15,7 @@ class IPNMessageReceivedEvent extends Event {
   /**
    * The IPN message.
    *
-   * @var \PayPal\IPN\PPIPNMessage
+   * @var PPIPNMessage
    *   The IPN message.
    */
   protected $ipnMessage;
@@ -23,7 +23,7 @@ class IPNMessageReceivedEvent extends Event {
   /**
    * Constructs a new IPNMessageEvent.
    *
-   * @param \PayPal\IPN\PPIPNMessage $ipnMessage
+   * @param PPIPNMessage $ipnMessage
    *   The IPN message.
    */
   public function __construct(PPIPNMessage $ipnMessage) {
@@ -33,7 +33,7 @@ class IPNMessageReceivedEvent extends Event {
   /**
    * Gets the IPN message.
    *
-   * @return \PayPal\IPN\PPIPNMessage
+   * @return PPIPNMessage
    *   The IPN message.
    */
   public function getIpnMessage() {
diff --git a/src/EventSubscriber/IPNRouteSubscriber.php b/src/EventSubscriber/IPNRouteSubscriber.php
index 21dafc1..dcd1729 100644
--- a/src/EventSubscriber/IPNRouteSubscriber.php
+++ b/src/EventSubscriber/IPNRouteSubscriber.php
@@ -19,14 +19,14 @@ class IPNRouteSubscriber extends RouteSubscriberBase {
   /**
    * The config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a new NodeAdminRouteSubscriber.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
    */
   public function __construct(ConfigFactoryInterface $config_factory) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index c0ae355..2e1cb4b 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -20,16 +20,16 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The email validator.
    *
-   * @var \Egulias\EmailValidator\EmailValidator
+   * @var EmailValidator
    */
   protected $emailValidator;
 
   /**
    * Constructs a \Drupal\system\ConfigFormBase object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Egulias\EmailValidator\EmailValidator $email_validator
+   * @param EmailValidator $email_validator
    *   Email validator.
    */
   public function __construct(ConfigFactoryInterface $config_factory, EmailValidator $email_validator) {
diff --git a/src/Plugin/Block/DonationBlock.php b/src/Plugin/Block/DonationBlock.php
index 0d8e941..c8fc5a6 100644
--- a/src/Plugin/Block/DonationBlock.php
+++ b/src/Plugin/Block/DonationBlock.php
@@ -27,14 +27,14 @@ class DonationBlock extends BlockBase implements ContainerFactoryPluginInterface
   /**
    * The form builder.
    *
-   * @var \Drupal\Core\Form\FormBuilderInterface
+   * @var FormBuilderInterface
    */
   protected $formBuilder;
 
   /**
    * Stores the configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
@@ -47,9 +47,9 @@ class DonationBlock extends BlockBase implements ContainerFactoryPluginInterface
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
+   * @param FormBuilderInterface $form_builder
    *   The form builder.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, FormBuilderInterface $form_builder, ConfigFactoryInterface $config_factory) {
