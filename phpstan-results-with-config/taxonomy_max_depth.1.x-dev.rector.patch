diff --git a/src/Form/FormAltererBase.php b/src/Form/FormAltererBase.php
index 2d61da1..9874477 100644
--- a/src/Form/FormAltererBase.php
+++ b/src/Form/FormAltererBase.php
@@ -29,7 +29,7 @@ abstract class FormAltererBase implements FormAltererInterface {
   /**
    * The vocabulary settings reader.
    *
-   * @var \Drupal\taxonomy_max_depth\Taxonomy\VocabularySettingsReaderInterface
+   * @var VocabularySettingsReaderInterface
    */
   protected $settingsReader;
 
@@ -38,7 +38,7 @@ abstract class FormAltererBase implements FormAltererInterface {
    *
    * @param string $service_name
    *   The service name the class instance is defined as.
-   * @param \Drupal\taxonomy_max_depth\Taxonomy\VocabularySettingsReaderInterface $settings_reader
+   * @param VocabularySettingsReaderInterface $settings_reader
    *   The vocabulary settings reader.
    */
   public function __construct(
diff --git a/src/Form/FormAltererInterface.php b/src/Form/FormAltererInterface.php
index 893acb0..1cb5162 100644
--- a/src/Form/FormAltererInterface.php
+++ b/src/Form/FormAltererInterface.php
@@ -14,7 +14,7 @@ interface FormAltererInterface {
    *
    * @param array $form
    *   The form array to alter.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function alter(array &$form, FormStateInterface $form_state);
diff --git a/src/Form/TermFormAlterer.php b/src/Form/TermFormAlterer.php
index 109a99e..93611f8 100644
--- a/src/Form/TermFormAlterer.php
+++ b/src/Form/TermFormAlterer.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\taxonomy_max_depth\Form;
 
+use Drupal\Core\Entity\EntityFormInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -28,14 +29,14 @@ class TermFormAlterer extends FormAltererBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The term depth helper.
    *
-   * @var \Drupal\taxonomy_max_depth\Taxonomy\TermTreeDepthHelperInterface
+   * @var TermTreeDepthHelperInterface
    */
   protected $termDepthHelper;
 
@@ -44,11 +45,11 @@ class TermFormAlterer extends FormAltererBase {
    *
    * @param string $service_name
    *   The service name the class instance is defined as.
-   * @param \Drupal\taxonomy_max_depth\Taxonomy\VocabularySettingsReaderInterface $settings_reader
+   * @param VocabularySettingsReaderInterface $settings_reader
    *   The vocabulary settings reader.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\taxonomy_max_depth\Taxonomy\TermTreeDepthHelperInterface $term_depth_helper
+   * @param TermTreeDepthHelperInterface $term_depth_helper
    *   The term depth helper.
    */
   public function __construct(
@@ -88,11 +89,11 @@ class TermFormAlterer extends FormAltererBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validate(array &$form, FormStateInterface $form_state) {
-    /** @var \Drupal\Core\Entity\EntityFormInterface $form_object */
+    /** @var EntityFormInterface $form_object */
     $form_object = $form_state->getFormObject();
     $term = $form_object->getEntity();
     if (!$term instanceof TermInterface) {
@@ -115,7 +116,7 @@ class TermFormAlterer extends FormAltererBase {
   /**
    * Validates that the term has no parents except the root.
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function validateDisabledHierarchy(
@@ -136,9 +137,9 @@ class TermFormAlterer extends FormAltererBase {
   /**
    * Validates max depth of the term and its children.
    *
-   * @param \Drupal\taxonomy\TermInterface $term
+   * @param TermInterface $term
    *   The term.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param int $max_depth_allowed
    *   The maximum allowed number of ancestors.
diff --git a/src/Form/TermOverviewFormAlterer.php b/src/Form/TermOverviewFormAlterer.php
index 410bd07..6d7d9b6 100644
--- a/src/Form/TermOverviewFormAlterer.php
+++ b/src/Form/TermOverviewFormAlterer.php
@@ -76,7 +76,7 @@ class TermOverviewFormAlterer extends FormAltererBase {
    *
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function validate(array &$form, FormStateInterface $form_state) {
diff --git a/src/Form/VocabularyFormAlterer.php b/src/Form/VocabularyFormAlterer.php
index e900958..1547cc3 100644
--- a/src/Form/VocabularyFormAlterer.php
+++ b/src/Form/VocabularyFormAlterer.php
@@ -18,7 +18,7 @@ class VocabularyFormAlterer extends FormAltererBase {
   /**
    * The vocabulary settings writer.
    *
-   * @var \Drupal\taxonomy_max_depth\Taxonomy\VocabularySettingsWriterInterface
+   * @var VocabularySettingsWriterInterface
    */
   protected $settingsWriter;
 
@@ -27,9 +27,9 @@ class VocabularyFormAlterer extends FormAltererBase {
    *
    * @param string $service_name
    *   The service name the class instance is defined as.
-   * @param \Drupal\taxonomy_max_depth\Taxonomy\VocabularySettingsReaderInterface $settings_reader
+   * @param VocabularySettingsReaderInterface $settings_reader
    *   The vocabulary settings reader.
-   * @param \Drupal\taxonomy_max_depth\Taxonomy\VocabularySettingsWriterInterface $settings_writer
+   * @param VocabularySettingsWriterInterface $settings_writer
    *   The vocabulary settings writer.
    */
   public function __construct(
@@ -47,7 +47,7 @@ class VocabularyFormAlterer extends FormAltererBase {
    */
   public function alter(array &$form, FormStateInterface $form_state) {
     /** @var \Drupal\Core\Entity\EntityFormInterface $form_object */
-    /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+    /** @var VocabularyInterface $vocabulary */
     $form_object = $form_state->getFormObject();
     $vocabulary = $form_object->getEntity();
     $max_depth = $this->settingsReader->getMaxAncestorDepth($vocabulary);
@@ -76,11 +76,11 @@ class VocabularyFormAlterer extends FormAltererBase {
    *
    * @param string $entity_type
    *   The entity type.
-   * @param \Drupal\taxonomy\VocabularyInterface $vocabulary
+   * @param VocabularyInterface $vocabulary
    *   The vocabulary entity.
    * @param array $form
    *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   public function buildEntity(
diff --git a/src/Taxonomy/TermTreeDepthHelper.php b/src/Taxonomy/TermTreeDepthHelper.php
index cebad04..988f952 100644
--- a/src/Taxonomy/TermTreeDepthHelper.php
+++ b/src/Taxonomy/TermTreeDepthHelper.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\taxonomy_max_depth\Taxonomy;
 
+use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
 /**
  * Helper for detecting term ancestor or child depth.
  */
@@ -19,7 +20,7 @@ class TermTreeDepthHelper implements TermTreeDepthHelperInterface {
 
       $level_parents = [];
       foreach ($terms as $term) {
-        /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $item_list */
+        /** @var EntityReferenceFieldItemListInterface $item_list */
         $item_list = $term->get('parent');
         $term_parents = $item_list->referencedEntities();
         $level_parents = array_merge($level_parents, array_values($term_parents));
diff --git a/src/Taxonomy/TermTreeDepthHelperInterface.php b/src/Taxonomy/TermTreeDepthHelperInterface.php
index feb1ada..42274b8 100644
--- a/src/Taxonomy/TermTreeDepthHelperInterface.php
+++ b/src/Taxonomy/TermTreeDepthHelperInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\taxonomy_max_depth\Taxonomy;
 
+use Drupal\taxonomy\TermInterface;
 /**
  * Helper for detecting term ancestor or descendant depth.
  */
@@ -23,7 +24,7 @@ interface TermTreeDepthHelperInterface {
   /**
    * Returns length of the longest ancestor chain.
    *
-   * @param \Drupal\taxonomy\TermInterface[] $parents
+   * @param TermInterface[] $parents
    *   The parents list of a term.
    *
    * @return int
diff --git a/src/Taxonomy/VocabularySettingsReader.php b/src/Taxonomy/VocabularySettingsReader.php
index 46fdc1b..ba1465d 100644
--- a/src/Taxonomy/VocabularySettingsReader.php
+++ b/src/Taxonomy/VocabularySettingsReader.php
@@ -29,14 +29,14 @@ class VocabularySettingsReader implements VocabularySettingsReaderInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * A constructor.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(
@@ -51,11 +51,11 @@ class VocabularySettingsReader implements VocabularySettingsReaderInterface {
    * @param string $vid
    *   The vocabulary ID.
    *
-   * @return \Drupal\taxonomy\VocabularyInterface
+   * @return VocabularyInterface
    *   The loaded vocabulary.
    */
   protected function loadVocabulary(string $vid): VocabularyInterface {
-    /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
+    /** @var VocabularyInterface $vocabulary */
     $vocabulary = $this->entityTypeManager
       ->getStorage(static::VOCABULARY_ENTITY_TYPE)
       ->load($vid);
diff --git a/src/Taxonomy/VocabularySettingsReaderInterface.php b/src/Taxonomy/VocabularySettingsReaderInterface.php
index 6233ccf..1170945 100644
--- a/src/Taxonomy/VocabularySettingsReaderInterface.php
+++ b/src/Taxonomy/VocabularySettingsReaderInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\taxonomy_max_depth\Taxonomy;
 
+use Drupal\taxonomy\VocabularyInterface;
 /**
  * Reads module settings from the vocabulary third-party settings.
  */
@@ -10,7 +11,7 @@ interface VocabularySettingsReaderInterface {
   /**
    * Returns max ancestor depth set for the vocabulary.
    *
-   * @param string|\Drupal\taxonomy\VocabularyInterface $vocabulary
+   * @param string|VocabularyInterface $vocabulary
    *   The vocabulary or its ID.
    *
    * @return int|null
diff --git a/src/Taxonomy/VocabularySettingsWriterInterface.php b/src/Taxonomy/VocabularySettingsWriterInterface.php
index bcd4009..a407721 100644
--- a/src/Taxonomy/VocabularySettingsWriterInterface.php
+++ b/src/Taxonomy/VocabularySettingsWriterInterface.php
@@ -12,7 +12,7 @@ interface VocabularySettingsWriterInterface {
   /**
    * Sets max ancestor depth to the vocabulary.
    *
-   * @param \Drupal\taxonomy\VocabularyInterface $vocabulary
+   * @param VocabularyInterface $vocabulary
    *   The vocabulary.
    * @param int|null $max_depth
    *   Max ancestor depth. Pass NULL to disable the limit.
diff --git a/taxonomy_max_depth.module b/taxonomy_max_depth.module
index 061634e..e5a5865 100644
--- a/taxonomy_max_depth.module
+++ b/taxonomy_max_depth.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\taxonomy_max_depth\Form\FormAltererInterface;
 /**
  * @file
  * The module file.
@@ -14,7 +15,7 @@ function taxonomy_max_depth_form_taxonomy_overview_terms_alter(
   array &$form,
   FormStateInterface $form_state
 ) {
-  /** @var \Drupal\taxonomy_max_depth\Form\FormAltererInterface $alterer */
+  /** @var FormAltererInterface $alterer */
   $alterer = \Drupal::service('taxonomy_max_depth.term_overview_form_alterer');
   $alterer->alter($form, $form_state);
 }
@@ -26,7 +27,7 @@ function taxonomy_max_depth_form_taxonomy_vocabulary_form_alter(
   array &$form,
   FormStateInterface $form_state
 ) {
-  /** @var \Drupal\taxonomy_max_depth\Form\FormAltererInterface $alterer */
+  /** @var FormAltererInterface $alterer */
   $alterer = \Drupal::service('taxonomy_max_depth.vocabulary_form_alterer');
   $alterer->alter($form, $form_state);
 }
@@ -38,7 +39,7 @@ function taxonomy_max_depth_form_taxonomy_term_form_alter(
   array &$form,
   FormStateInterface $form_state
 ) {
-  /** @var \Drupal\taxonomy_max_depth\Form\FormAltererInterface $alterer */
+  /** @var FormAltererInterface $alterer */
   $alterer = \Drupal::service('taxonomy_max_depth.term_form_alterer');
   $alterer->alter($form, $form_state);
 }
diff --git a/tests/src/Functional/Form/FormTestBase.php b/tests/src/Functional/Form/FormTestBase.php
index a59ceaa..bc32087 100644
--- a/tests/src/Functional/Form/FormTestBase.php
+++ b/tests/src/Functional/Form/FormTestBase.php
@@ -13,7 +13,7 @@ abstract class FormTestBase extends BrowserTestBase {
 
   protected $defaultTheme = 'classy';
 
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $user = $this->createUser(['administer taxonomy']);
