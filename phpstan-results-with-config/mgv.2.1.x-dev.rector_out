modules/contrib/mgv/mgv.module
modules/contrib/mgv/src/Annotation/Mgv.php
modules/contrib/mgv/src/MgvPluginManager.php
modules/contrib/mgv/src/MgvPluginManagerInterface.php
modules/contrib/mgv/src/Plugin/GlobalVariable.php
modules/contrib/mgv/src/Plugin/GlobalVariable/BaseUrl.php
modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentLangcode.php
modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentLangname.php
modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentPageTitle.php
modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentPath.php
modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentPathAlias.php
modules/contrib/mgv/src/Plugin/GlobalVariable/RawCurrentPageTitle.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SiteLogo.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SiteMail.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SiteName.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SiteSlogan.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SocialSharingEmail.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SocialSharingFacebook.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SocialSharingLinkedin.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SocialSharingTwitter.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SocialSharingWhatsapp.php
modules/contrib/mgv/src/Plugin/GlobalVariable/SystemSiteBase.php
modules/contrib/mgv/src/Plugin/GlobalVariableInterface.php
modules/contrib/mgv/tests/src/Functional/VariablesTest.php

11 files with changes
=====================

1) modules/contrib/mgv/src/Plugin/GlobalVariable/SystemSiteBase.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mgv\Plugin\GlobalVariable;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\mgv\Plugin\GlobalVariable;
@@ @@
   /**
    * Config instance.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/mgv/src/Plugin/GlobalVariable/SiteLogo.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mgv\Plugin\GlobalVariable;

+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Theme\ThemeManagerInterface;
 use Drupal\mgv\Plugin\GlobalVariable;
@@ @@
   /**
    * Language manager instance.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $themeManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/mgv/src/Plugin/GlobalVariable/RawCurrentPageTitle.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mgv\Plugin\GlobalVariable;

+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Controller\TitleResolverInterface;
 use Drupal\Core\Http\RequestStack;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ @@
   /**
    * Current request instance.
    *
-   * @var \Symfony\Component\HttpFoundation\Request|null
+   * @var Request|null
    */
   protected $request;

@@ @@
   /**
    * Title resolver.
    *
-   * @var \Drupal\Core\Controller\TitleResolverInterface
+   * @var TitleResolverInterface
    */
   protected $titleResolver;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentPathAlias.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Path alias manager instance.
    *
-   * @var \Drupal\path_alias\AliasManagerInterface
+   * @var AliasManagerInterface
    */
   protected $pathAliasManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentPath.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mgv\Plugin\GlobalVariable;

+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Path\CurrentPathStack;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\mgv\Plugin\GlobalVariable;
@@ @@
   /**
    * Language manager instance.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $currentPathStack;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentPageTitle.php:23

    ---------- begin diff ----------
@@ @@
   /**
    * Renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentLangname.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * Language manager instance.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/mgv/src/Plugin/GlobalVariable/CurrentLangcode.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * Language manager instance.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


9) modules/contrib/mgv/src/MgvPluginManagerInterface.php:24

    ---------- begin diff ----------
@@ @@
    *
    * @param string $plugin_id
    *   Plugin id.
-   * @param \Drupal\mgv\Plugin\GlobalVariableInterface $variable
+   * @param GlobalVariableInterface $variable
    *   Plugin instance.
    *
    * @return array|mixed
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/mgv/src/MgvPluginManager.php:30

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
@@ @@
       $this->variables = [];
       $all = $this->getDefinitions();
       foreach ($all as $definition_info) {
-        /** @var \Drupal\mgv\Plugin\GlobalVariableInterface $variable */
+        /** @var GlobalVariableInterface $variable */
         $variable = $this->createInstance($definition_info['id']);
         $this->variables = NestedArray::mergeDeep(
           $this->variables,
@@ @@
   public function createInstance($plugin_id, array $configuration = []) {
     if (!empty($configuration['variableDependencies'])) {
       foreach ($configuration['variableDependencies'] as $key => $plugin) {
-        /** @var \Drupal\mgv\Plugin\GlobalVariableInterface $instance */
+        /** @var GlobalVariableInterface $instance */
         $instance = $this->createInstance($plugin);
         unset($configuration['variableDependencies'][$key]);
         $configuration['variableDependencies'][$plugin] = $instance->getValue();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/mgv/mgv.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\mgv\MgvPluginManagerInterface;
+use Drupal\mgv\MgvPluginManager;
 /**
  * @file
  * Create global variables to be printed in any template like so {{ variable }}.
@@ @@
 function mgv_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     case 'help.page.mgv':
-      /** @var \Drupal\mgv\MgvPluginManagerInterface $mgv */
+      /** @var MgvPluginManagerInterface $mgv */
       $mgv = \Drupal::service('plugin.manager.mgv');
       $rows = [];
       foreach ($mgv->getDefinitions() as $id => $definition) {
@@ @@
  * Implements hook_template_preprocess_default_variables_alter().
  */
 function mgv_template_preprocess_default_variables_alter(&$variables) {
-  /** @var \Drupal\mgv\MgvPluginManager $variables_manager */
+  /** @var MgvPluginManager $variables_manager */
   $variables_manager = \Drupal::service('plugin.manager.mgv');
   $variables['global_variables'] = $variables_manager->getVariables();
 }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 11 files have been changed by Rector                                      

