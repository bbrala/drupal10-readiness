modules/contrib/user_visits/src/Entity/UserVisit.php
modules/contrib/user_visits/src/EventSubscriber/UserVisitsSubscriber.php
modules/contrib/user_visits/src/Form/SettingsForm.php
modules/contrib/user_visits/src/Form/UserVisitForm.php
modules/contrib/user_visits/src/Routing/UserVisitHtmlRouteProvider.php
modules/contrib/user_visits/src/UserVisitInterface.php
modules/contrib/user_visits/src/UserVisitListBuilder.php
modules/contrib/user_visits/user_visits.module

2 files with changes
====================

1) modules/contrib/user_visits/src/UserVisitListBuilder.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * Constructs a new UserVisitListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter) {
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\user_visits\UserVisitInterface $entity */
+    /** @var UserVisitInterface $entity */
     $row['id'] = $entity->id();
     $row['vuid']['data'] = [
       '#theme' => 'username',
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/user_visits/src/EventSubscriber/UserVisitsSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\user_visits\EventSubscriber;

+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\user\Entity\User;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Http\RequestStack;
 use Drupal\Core\Path\CurrentPathStack;
@@ @@
   /**
    * The config object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;

@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $account;

@@ @@
   /**
    * The current route match.
    *
-   * @var \Drupal\Core\Routing\RouteMatchInterface
+   * @var RouteMatchInterface
    */
   protected $routeMatch;

@@ @@
   /**
    * The current path.
    *
-   * @var \Drupal\Core\Path\CurrentPathStack
+   * @var CurrentPathStack
    */
   protected $currentPath;

@@ @@
   /**
    * The request stack.
    *
-   * @var \Drupal\Core\Http\RequestStack
+   * @var RequestStack
    */
   private $requestStack;

@@ @@
   /**
    * Constructs an UserVisitsSubscriber object.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user.
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   The current route match.
-   * @param \Drupal\Core\Path\CurrentPathStack $current_path
+   * @param CurrentPathStack $current_path
    *   The current path.
-   * @param \Drupal\Core\Http\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(
@@ @@
   /**
    * Kernel response event handler.
    *
-   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   * @param ResponseEvent $event
    *   Response event.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityStorageException
    */
   public function onKernelResponse(ResponseEvent $event) {
     $user_roles = array_intersect(
@@ @@
       $this->config->get('hidden_roles')
     );

-    /** @var \Drupal\user\Entity\User $user */
+    /** @var User $user */
     $user = \Drupal::routeMatch()->getParameter('user');

     if (
@@ @@
           'vuid' => $this->account->id(),
         ]);

-      /** @var \Drupal\user_visits\Entity\UserVisit $user_visit */
+      /** @var UserVisit $user_visit */
       if ($user_visit = reset($user_visits)) {
         // Update the changed timestamp.
         $user_visit
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 2 files have been changed by Rector                                       

