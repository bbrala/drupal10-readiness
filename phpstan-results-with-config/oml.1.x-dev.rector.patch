diff --git a/src/Breadcrumb/BreadcrumbBuilder.php b/src/Breadcrumb/BreadcrumbBuilder.php
index d769498..f16d15d 100644
--- a/src/Breadcrumb/BreadcrumbBuilder.php
+++ b/src/Breadcrumb/BreadcrumbBuilder.php
@@ -16,7 +16,7 @@ use Drupal\user\Entity\User;
  */
 class BreadcrumbBuilder implements BreadcrumbBuilderInterface {
 
-  /** @var \Drupal\Core\Session\AccountProxy $current_user */
+  /** @var AccountProxy $current_user */
   protected $current_user;
 
   /**
diff --git a/src/Controller/OutgoingMailLoggerController.php b/src/Controller/OutgoingMailLoggerController.php
index 1e0d851..b7ab01a 100644
--- a/src/Controller/OutgoingMailLoggerController.php
+++ b/src/Controller/OutgoingMailLoggerController.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\outgoing_mail_logger\Controller;
 
+use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\MessageCommand;
 use Drupal\Core\Ajax\OpenModalDialogCommand;
@@ -64,7 +65,7 @@ class OutgoingMailLoggerController extends ControllerBase {
 
       $data['user'] = 'Undefined';
       if ($data['uid']) {
-        /** @var \Drupal\Core\Session\AccountInterface $user */
+        /** @var AccountInterface $user */
         if ($user = User::load($data['uid'])) {
           $data['user'] = $user->getDisplayName() . " ({$data['uid']})";
         }
diff --git a/src/Event/LogCreatedEvent.php b/src/Event/LogCreatedEvent.php
index 6220dff..114c351 100644
--- a/src/Event/LogCreatedEvent.php
+++ b/src/Event/LogCreatedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\outgoing_mail_logger\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\outgoing_mail_logger\Model\OutgoingMailLog;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class LogCreatedEvent
diff --git a/src/Event/LogUpdatedEvent.php b/src/Event/LogUpdatedEvent.php
index 2bfe51a..c3e9afe 100644
--- a/src/Event/LogUpdatedEvent.php
+++ b/src/Event/LogUpdatedEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\outgoing_mail_logger\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\outgoing_mail_logger\Model\OutgoingMailLog;
-use Symfony\Component\EventDispatcher\Event;
 
 /**
  * Class LogUpdatedEvent
diff --git a/src/Event/MailSentEvent.php b/src/Event/MailSentEvent.php
index 113a2c8..397680a 100644
--- a/src/Event/MailSentEvent.php
+++ b/src/Event/MailSentEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\outgoing_mail_logger\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;
 
 /**
  * Class MailSentEvent
diff --git a/src/Form/FIlterForm.php b/src/Form/FIlterForm.php
index aacbbdb..6057056 100644
--- a/src/Form/FIlterForm.php
+++ b/src/Form/FIlterForm.php
@@ -354,7 +354,7 @@ class FIlterForm extends FormBase {
   /**
    * Process filter-form submission
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
    * @return array
    */
@@ -418,7 +418,7 @@ class FIlterForm extends FormBase {
   /**
    * Adds query conditions based on defined filters
    *
-   * @param \Drupal\Core\Database\Query\SelectInterface $query
+   * @param SelectInterface $query
    * @param array $filters
    */
   protected function processQueryFilters(SelectInterface $query, array $filters)
diff --git a/src/Form/ResendForm.php b/src/Form/ResendForm.php
index 9fb5d4f..fe3e874 100644
--- a/src/Form/ResendForm.php
+++ b/src/Form/ResendForm.php
@@ -8,6 +8,7 @@
 namespace Drupal\outgoing_mail_logger\Form;
 
 
+use Drupal\Core\Form\FormBase;
 use Drupal\Core\Ajax\AjaxResponse;
 use Drupal\Core\Ajax\CloseModalDialogCommand;
 use Drupal\Core\Ajax\MessageCommand;
@@ -18,7 +19,7 @@ use Drupal\outgoing_mail_logger\OutgoingMailLogger;
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
-class ResendForm extends \Drupal\Core\Form\FormBase {
+class ResendForm extends FormBase {
 
   /** @var OutgoingMailLogger */
   protected $outgoing_mail_logger;
@@ -135,7 +136,7 @@ class ResendForm extends \Drupal\Core\Form\FormBase {
   /**
    * Returns reload form argument (build-info[1])
    *
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *
    * @return bool
    */
diff --git a/src/OutgoingMailLogger.php b/src/OutgoingMailLogger.php
index 7fd822a..0703442 100644
--- a/src/OutgoingMailLogger.php
+++ b/src/OutgoingMailLogger.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\outgoing_mail_logger;
 
+use Drupal\Core\Database\StatementInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Link;
 use Drupal\Core\Mail\MailManagerInterface;
@@ -168,11 +169,10 @@ class OutgoingMailLogger {
   // SERVICE OPERATIONS
   //////////////////////////////////////////////////////
   //////////////////////////////////////////////////////
-
   /**
    * Returns TRUE if the OML log can be sent based on global resend setting, user access, and log properties.
    *
-   * @param \Drupal\outgoing_mail_logger\Model\OutgoingMailLog $log
+   * @param OutgoingMailLog $log
    * @param string $reason
    *
    * @return bool
@@ -225,7 +225,7 @@ class OutgoingMailLogger {
   /**
    * @param int $id
    *
-   * @return \Drupal\outgoing_mail_logger\Model\OutgoingMailLog|null
+   * @return OutgoingMailLog|null
    */
   public function getLogById(int $id) : ?OutgoingMailLog
   {
@@ -298,9 +298,9 @@ class OutgoingMailLogger {
   }
 
   /**
-   * @param \Drupal\outgoing_mail_logger\Model\OutgoingMailLog $log
+   * @param OutgoingMailLog $log
    *
-   * @return \Drupal\Core\Database\StatementInterface|int|string|null
+   * @return StatementInterface|int|string|null
    */
   public function saveLog(OutgoingMailLog $log)
   {
@@ -325,7 +325,7 @@ class OutgoingMailLogger {
           ->fields($data)
           ->execute();
         $log->setId($result);
-        $this->event_dispatcher->dispatch(OutgoingMailLoggerEvents::OML_EVENT_LOG_CREATED, new LogCreatedEvent($log));
+        $this->event_dispatcher->dispatch(new LogCreatedEvent($log), OutgoingMailLoggerEvents::OML_EVENT_LOG_CREATED);
       }
       else {
         unset($data['id']);
@@ -334,7 +334,7 @@ class OutgoingMailLogger {
           ->condition('id', $log->getId())
           ->fields($data)
           ->execute();
-        $this->event_dispatcher->dispatch(OutgoingMailLoggerEvents::OML_EVENT_LOG_UPDATED, new LogUpdatedEvent($log));
+        $this->event_dispatcher->dispatch(new LogUpdatedEvent($log), OutgoingMailLoggerEvents::OML_EVENT_LOG_UPDATED);
       }
 
     } catch (\Exception $e) {
diff --git a/tests/src/Functional/OutgoingMailLoggerTest.php b/tests/src/Functional/OutgoingMailLoggerTest.php
index f8898fa..dc50810 100644
--- a/tests/src/Functional/OutgoingMailLoggerTest.php
+++ b/tests/src/Functional/OutgoingMailLoggerTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\outgoing_mail_logger\Tests;
 
+use Drupal\outgoing_mail_logger\OutgoingMailLogger;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\outgoing_mail_logger\Form\SettingsForm;
 use Drupal\Tests\system\Kernel\Theme\FunctionsTest;
@@ -29,7 +30,7 @@ class OutgoingMailLoggerTest extends FunctionsTest {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 //    $config_map = [
 //      'outgoing_mail_logger.settings' => [
@@ -57,7 +58,7 @@ class OutgoingMailLoggerTest extends FunctionsTest {
    * Test site information form.
    */
   public function testFieldStorageSettingsForm() {
-    /** @var \Drupal\outgoing_mail_logger\OutgoingMailLogger $oml_service */
+    /** @var OutgoingMailLogger $oml_service */
     $oml_service = \Drupal::service('outgoing_mail_logger.service');
     $this->assertEquals(15, $oml_service->getConfigMaxAge());
   }
