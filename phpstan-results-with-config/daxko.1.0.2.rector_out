modules/contrib/daxko/daxko.module
modules/contrib/daxko/src/DataWrapperBase.php
modules/contrib/daxko/src/DataWrapperInterface.php
modules/contrib/daxko/src/DaxkoClient.php
modules/contrib/daxko/src/DaxkoClientException.php
modules/contrib/daxko/src/DaxkoClientFactory.php
modules/contrib/daxko/src/DaxkoClientFactoryInterface.php
modules/contrib/daxko/src/DaxkoClientInterface.php
modules/contrib/daxko/src/DaxkoDataWrapper.php
modules/contrib/daxko/src/DummyDataWrapper.php
modules/contrib/daxko/src/Form/SettingsForm.php

5 files with changes
====================

1) modules/contrib/daxko/src/DaxkoDataWrapper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\daxko;

+use Drupal\Core\Url;
 use Drupal\openy_socrates\OpenyDataServiceInterface;

 /**
@@ @@
         continue;
       }
       $uri = !empty($typeIcons[$location->bundle()]) ? $typeIcons[$location->bundle()] :
-        '/' . drupal_get_path('module', 'openy_map') . "/img/map_icon_green.png";
+        '/' . \Drupal::service('extension.list.module')->getPath('openy_map') . "/img/map_icon_green.png";
       $pins[] = [
         'icon' => $uri,
         'tags' => [$tag],
@@ @@
    * @param string $membership_id
    *   Membership type ID.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *   Redirect url.
    */
   public function getRedirectUrl($location_id, $membership_id) {
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/daxko/src/DaxkoClientFactoryInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\daxko;

+use GuzzleHttp\Client;
 /**
  * Interface DaxkoClientFactoryInterface.
  *
@@ @@
   /**
    * Returns Daxko client.
    *
-   * @return \GuzzleHttp\Client
+   * @return Client
    *   The http client.
    */
   public function get();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/daxko/src/DaxkoClientFactory.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * Constructs a new Daxko Client Factory instance.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config Factory.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


4) modules/contrib/daxko/src/DaxkoClient.php:29

    ---------- begin diff ----------
@@ @@
    * @return mixed
    *   Data from Daxko.
    *
-   * @throws \Drupal\daxko\DaxkoClientException
+   * @throws DaxkoClientException
    */
   private function makeRequest($method, $uri, array $parameters = []) {
     try {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/daxko/src/DataWrapperBase.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * Entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;

@@ @@
   /**
    * Renderer.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Daxko client.
    *
-   * @var \Drupal\daxko\DaxkoClientInterface
+   * @var DaxkoClientInterface
    */
   protected $daxkoClient;

@@ @@
   /**
    * Cache backend.
    *
-   * @var \Drupal\Core\Cache\CacheBackendInterface
+   * @var CacheBackendInterface
    */
   protected $cacheBackend;

@@ @@
   /**
    * Mapping repository.
    *
-   * @var \Drupal\openy_mappings\MappingRepository
+   * @var MappingRepository
    */
   protected $mappingRepo;

@@ @@
   /**
    * Location mapping repository.
    *
-   * @var \Drupal\openy_mappings\LocationMappingRepository
+   * @var LocationMappingRepository
    */
   protected $locationRepo;

@@ @@
   /**
    * MembershipType Repo.
    *
-   * @var \Drupal\openy_mappings\MembershipTypeMappingRepository
+   * @var MembershipTypeMappingRepository
    */
   protected $membershipTypeRepo;

@@ @@
   /**
    * Logger channel.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelInterface
+   * @var LoggerChannelInterface
    */
   protected $loggerChannel;

@@ @@
   /**
    * Config factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;

@@ @@
   /**
    * DataWrapperBase constructor.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   Renderer.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity type manager.
-   * @param \Drupal\daxko\DaxkoClientInterface $daxkoClient
+   * @param DaxkoClientInterface $daxkoClient
    *   Daxko client.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cacheBackend
+   * @param CacheBackendInterface $cacheBackend
    *   Cache backend.
-   * @param \Drupal\openy_mappings\MappingRepository $mappingRepo
+   * @param MappingRepository $mappingRepo
    *   Mapping repository.
-   * @param \Drupal\openy_mappings\LocationMappingRepository $locationRepo
+   * @param LocationMappingRepository $locationRepo
    *   Location mapping repository.
-   * @param \Drupal\openy_mappings\MembershipTypeMappingRepository $membershipTypeRepo
+   * @param MembershipTypeMappingRepository $membershipTypeRepo
    *   Membership type mapping repository.
-   * @param \Drupal\Core\Logger\LoggerChannelInterface $loggerChannel
+   * @param LoggerChannelInterface $loggerChannel
    *   Logger channel.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config factory.
    */
   public function __construct(RendererInterface $renderer, EntityTypeManagerInterface $entityTypeManager, DaxkoClientInterface $daxkoClient, CacheBackendInterface $cacheBackend, MappingRepository $mappingRepo, LocationMappingRepository $locationRepo, MembershipTypeMappingRepository $membershipTypeRepo, LoggerChannelInterface $loggerChannel, ConfigFactoryInterface $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


 [OK] 5 files have been changed by Rector                                       

