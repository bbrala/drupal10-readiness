diff --git a/revealjs_node.module b/revealjs_node.module
index 7f7021f..a97e3c3 100644
--- a/revealjs_node.module
+++ b/revealjs_node.module
@@ -20,7 +20,7 @@ use Drupal\editor\Entity\Editor;
  * Prepare presentation configuration for FE.
  */
 function revealjs_node_preprocess_node(&$variables) {
-  /** @var \Drupal\revealjs_node\Helper $helper */
+  /** @var Helper $helper */
   $helper = Drupal::service('revealjs_node.helper');
   if ($helper->isPresentation($variables['node'])) {
     $user = Drupal::currentUser();
@@ -39,7 +39,7 @@ function revealjs_node_preprocess_node(&$variables) {
  * Prepare presentation configuration for FE.
  */
 function revealjs_node_preprocess_media(&$variables) {
-  /** @var \Drupal\revealjs_node\Helper $helper */
+  /** @var Helper $helper */
   $helper = Drupal::service('revealjs_node.helper');
   if ($helper->isPresentation($variables['media'])) {
     $helper->setPresentationTheme($variables['media']);
@@ -53,7 +53,7 @@ function revealjs_node_preprocess_media(&$variables) {
  */
 function revealjs_node_ckeditor_css_alter(array &$css, Editor $editor) {
   if ($editor->id() == 'reveal_js_presentation') {
-    $css[] = drupal_get_path('module', 'revealjs_node') . '/css/ckeditor.css';
+    $css[] = \Drupal::service('extension.list.module')->getPath('revealjs_node') . '/css/ckeditor.css';
   }
 }
 
diff --git a/revealjs_theme/revealjs_theme.theme b/revealjs_theme/revealjs_theme.theme
index 47ab475..a3dac49 100644
--- a/revealjs_theme/revealjs_theme.theme
+++ b/revealjs_theme/revealjs_theme.theme
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\revealjs_node\Helper;
 /**
  * @file
  * Theme-file for Reveal.js-presentations.
@@ -10,7 +11,7 @@
  */
 function revealjs_theme_preprocess_html(array &$variables) {
   $variables['#attached']['library'][] = 'revealjs_theme/revealjs_theme';
-  /** @var \Drupal\revealjs_node\Helper $helper */
+  /** @var Helper $helper */
   $helper = Drupal::service('revealjs_node.helper');
   $variables['#attached']['library'][] = $helper->getPresentationTheme();
 }
diff --git a/src/Helper.php b/src/Helper.php
index c932b8a..a93f50f 100644
--- a/src/Helper.php
+++ b/src/Helper.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\revealjs_node;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Drupal\Core\Field\FieldItemList;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -26,7 +28,7 @@ class Helper implements ContainerInjectionInterface {
   /**
    * Revealjs setting - from configuration.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   private $settings;
 
@@ -47,7 +49,7 @@ class Helper implements ContainerInjectionInterface {
    * class, but not the container itself. Every call to this method must return
    * a new instance of this class; that is, it may not implement a singleton.
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   The service container this instance should use.
    */
   public static function create(ContainerInterface $container) {
@@ -59,7 +61,7 @@ class Helper implements ContainerInjectionInterface {
   /**
    * Checks wether the entity is a presentation.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The presentation entity (node or media).
    */
   public function isPresentation(EntityInterface $entity) {
@@ -83,12 +85,12 @@ class Helper implements ContainerInjectionInterface {
   /**
    * Setter.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The presentation entity (node or media).
    */
   public function setPresentationTheme(EntityInterface $entity) {
     try {
-      /** @var \Drupal\Core\Field\FieldItemList $theme */
+      /** @var FieldItemList $theme */
       $theme = $entity->get('presentation_theme');
       if ($theme) {
         $this->theme = $theme->getString();
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index eba84c2..3221598 100644
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,11 @@
 
 namespace Drupal\Tests\revealjs_node\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Extension\ModuleHandler;
+use Drupal\Core\Extension\Extension;
+use Drupal\Core\Extension\ThemeHandler;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\revealjs_node\Helper;
 use Drupal\Tests\BrowserTestBase;
@@ -43,21 +48,21 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * Tests whether all modules, themes and content-types are installed.
    *
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws PluginNotFoundException
    */
   public function testInstallation() {
 
-    /** @var \Drupal\Core\Extension\ModuleHandler $moduleHandler */
+    /** @var ModuleHandler $moduleHandler */
     $moduleHandler = \Drupal::service('module_handler');
 
-    /** @var \Drupal\Core\Extension\Extension $module */
+    /** @var Extension $module */
     foreach (self::$neededModules as $moduleName) {
       try {
         $module = $moduleHandler->getModule($moduleName);
@@ -68,7 +73,7 @@ class LoadTest extends BrowserTestBase {
       }
     }
 
-    /** @var \Drupal\Core\Extension\ThemeHandler $themeHandler */
+    /** @var ThemeHandler $themeHandler */
     $themeHandler = \Drupal::service('theme_handler');
     try {
       $theme = $themeHandler->getTheme('revealjs_theme');
diff --git a/tests/src/Functional/NodeCreationTest.php b/tests/src/Functional/NodeCreationTest.php
index ede933e..3eb384d 100644
--- a/tests/src/Functional/NodeCreationTest.php
+++ b/tests/src/Functional/NodeCreationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\revealjs_node\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\node\Entity\Node;
 use Drupal\Tests\node\Functional\NodeTestBase;
 
@@ -42,7 +43,7 @@ class NodeCreationTest extends NodeTestBase {
   /**
    * A user with permission create presentations.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
