modules/contrib/mimeinfo/src/File/MimeType/MimeTypeGuesser.php
modules/contrib/mimeinfo/src/MimeInfoServiceProvider.php
modules/contrib/mimeinfo/src/ProxyClass/File/MimeType/MimeTypeGuesser.php
modules/contrib/mimeinfo/tests/src/Unit/File/MimeType/MimeTypeGuesserTest.php
modules/contrib/mimeinfo/tests/src/Unit/File/MimeType/SupportedMimeTypeGuesser.php
modules/contrib/mimeinfo/tests/src/Unit/File/MimeType/UnsupportedMimeTypeGuesser.php

4 files with changes
====================

1) modules/contrib/mimeinfo/tests/src/Unit/File/MimeType/UnsupportedMimeTypeGuesser.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\mimeinfo\Unit\File\MimeType;

-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;
+use Symfony\Component\Mime\MimeTypesInterface;

 /**
  * Class UnsupportedMimeTypeGuesser.
@@ @@
  * Dummy guesser implementation to test that unsupported guesser will not
  * be used for guessing the MIME type of file.
  */
-class UnsupportedMimeTypeGuesser implements MimeTypeGuesserInterface {
+class UnsupportedMimeTypeGuesser implements MimeTypesInterface {

   /**
    * Check that environment supports guessing mechanism.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


2) modules/contrib/mimeinfo/src/ProxyClass/File/MimeType/MimeTypeGuesser.php:6

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mimeinfo\ProxyClass\File\MimeType {

+    use Symfony\Component\Mime\MimeTypesInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
     /**
      * Provides a proxy class for \Drupal\mimeinfo\File\MimeType\MimeTypeGuesser.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class MimeTypeGuesser implements \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface
+    class MimeTypeGuesser implements MimeTypesInterface
     {

-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;

         /**
          * The id of the original proxied service.
@@ @@
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;

@@ @@
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ @@
         /**
          * {@inheritdoc}
          */
-        public function addGuesser(\Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface $guesser, $priority = 0)
+        public function addGuesser(MimeTypesInterface $guesser, $priority = 0)
         {
             return $this->lazyLoadItself()->addGuesser($guesser, $priority);
         }
@@ @@
         /**
          * {@inheritdoc}
          */
-        public static function registerWithSymfonyGuesser(\Symfony\Component\DependencyInjection\ContainerInterface $container)
+        public static function registerWithSymfonyGuesser(ContainerInterface $container)
         {
             \Drupal\Core\File\MimeType\MimeTypeGuesser::registerWithSymfonyGuesser($container);
         }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


3) modules/contrib/mimeinfo/src/MimeInfoServiceProvider.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mimeinfo;

+use Symfony\Component\Mime\FileinfoMimeTypeGuesser;
+use Symfony\Component\Mime\FileBinaryMimeTypeGuesser;
 use Drupal\Core\DependencyInjection\ContainerBuilder;
 use Drupal\Core\DependencyInjection\ServiceProviderBase;
 use Drupal\Core\File\MimeType\MimeTypeGuesser as MimeTypeGuesserCore;
 use Drupal\mimeinfo\File\MimeType\MimeTypeGuesser;
 use Symfony\Component\DependencyInjection\Definition;
-use Symfony\Component\HttpFoundation\File\MimeType\FileinfoMimeTypeGuesser;
-use Symfony\Component\HttpFoundation\File\MimeType\FileBinaryMimeTypeGuesser;

 /**
  * Class MimeInfoServiceProvider.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/mimeinfo/src/File/MimeType/MimeTypeGuesser.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\mimeinfo\File\MimeType;

+use Symfony\Component\Mime\MimeTypesInterface;
 use Drupal\Core\File\MimeType\MimeTypeGuesser as BaseMimeTypeGuesser;
-use Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface;

 /**
  * The MIME type guesser.
@@ @@
   /**
    * {@inheritdoc}
    */
-  public function addGuesser(MimeTypeGuesserInterface $guesser, $priority = 0) {
+  public function addGuesser(MimeTypesInterface $guesser, $priority = 0) {
     // Symfony's guessers has non-interfaced "isSupported" method to check that
     // environment supports guessing mechanism. Allow all guessers define same
     // the method for same purposes. Otherwise consider that guesser is allowed
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [WARNING] 2 nodes were removed                                                 

 [OK] 4 files have been changed by Rector                                       

