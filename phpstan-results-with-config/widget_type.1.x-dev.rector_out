modules/contrib/widget_type/src/Controller/InteractiveComponents.php
modules/contrib/widget_type/src/Entity/WidgetRegistrySource.php
modules/contrib/widget_type/src/Entity/WidgetType.php
modules/contrib/widget_type/src/Form/WidgetRegistrySourceForm.php
modules/contrib/widget_type/src/Form/WidgetTypeSettingsForm.php
modules/contrib/widget_type/src/WidgetRegistrySourceInterface.php
modules/contrib/widget_type/src/WidgetRegistrySourceListBuilder.php
modules/contrib/widget_type/src/WidgetTypeAccessControlHandler.php
modules/contrib/widget_type/src/WidgetTypeConfiguration.php
modules/contrib/widget_type/src/WidgetTypeInterface.php
modules/contrib/widget_type/src/WidgetTypeListBuilder.php
modules/contrib/widget_type/src/WidgetTypeViewBuilder.php
modules/contrib/widget_type/tests/src/Functional/Controller/InteractiveComponentsTest.php
modules/contrib/widget_type/tests/src/Kernel/WidgetRegistrySourceListBuilderTest.php
modules/contrib/widget_type/tests/src/Kernel/WidgetTypeAccessControlHandlerTest.php
modules/contrib/widget_type/tests/src/Kernel/WidgetTypeListBuilderTest.php
modules/contrib/widget_type/tests/src/Kernel/WidgetTypeViewBuilderTest.php
modules/contrib/widget_type/tests/src/Unit/WidgetTypeConfigurationTest.php
modules/contrib/widget_type/widget_type.install
modules/contrib/widget_type/widget_type.module

12 files with changes
=====================

1) modules/contrib/widget_type/tests/src/Unit/WidgetTypeConfigurationTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\widget_type\Unit;

+use Prophecy\PhpUnit\ProphecyTrait;
 use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Tests\UnitTestCase;
 use Drupal\widget_type\WidgetTypeConfiguration;
@@ @@
  */
 final class WidgetTypeConfigurationTest extends UnitTestCase {

+  use ProphecyTrait;
   /**
    * @covers ::shouldIngestAssets
    * @dataProvider shouldIngestAssetsProvider
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/widget_type/tests/src/Kernel/WidgetTypeViewBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\widget_type\Kernel;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\widget_type\WidgetTypeInterface;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Core\Entity\EntityRepositoryInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
  */
 class WidgetTypeViewBuilderTest extends KernelTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ @@
   /**
    * The system under test.
    *
-   * @var \Drupal\widget_type\WidgetTypeViewBuilder
+   * @var WidgetTypeViewBuilder
    */
   private $theSut;

@@ @@
   /**
    * The entity.
    *
-   * @var \Drupal\widget_type\WidgetTypeInterface
+   * @var WidgetTypeInterface
    */
   private $entity;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/widget_type/tests/src/Kernel/WidgetTypeListBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\widget_type\Kernel;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\widget_type\WidgetTypeInterface;
 use Drupal\Core\Datetime\DateFormatterInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
@@ @@
  */
 class WidgetTypeListBuilderTest extends KernelTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ @@
   /**
    * The system under test.
    *
-   * @var \Drupal\widget_type\WidgetTypeListBuilder
+   * @var WidgetTypeListBuilder
    */
   private $theSut;

@@ @@
   /**
    * The entity.
    *
-   * @var \Drupal\widget_type\WidgetTypeInterface
+   * @var WidgetTypeInterface
    */
   private $entity;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/widget_type/tests/src/Kernel/WidgetTypeAccessControlHandlerTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\widget_type\Kernel;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\widget_type\WidgetTypeInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\KernelTests\KernelTestBase;
@@ @@
  */
 class WidgetTypeAccessControlHandlerTest extends KernelTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ @@
   /**
    * The system under test.
    *
-   * @var \Drupal\widget_type\WidgetTypeAccessControlHandler
+   * @var WidgetTypeAccessControlHandler
    */
   private $theSut;

@@ @@
   /**
    * The entity.
    *
-   * @var \Drupal\widget_type\WidgetTypeInterface
+   * @var WidgetTypeInterface
    */
   private $entity;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/widget_type/tests/src/Kernel/WidgetRegistrySourceListBuilderTest.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\widget_type\Kernel;

+use Prophecy\PhpUnit\ProphecyTrait;
+use Drupal\widget_type\WidgetRegistrySourceInterface;
 use Drupal\Core\Entity\EntityStorageInterface;
 use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\StringTranslation\TranslatableMarkup;
@@ @@
  */
 class WidgetRegistrySourceListBuilderTest extends KernelTestBase {

+  use ProphecyTrait;
   /**
    * {@inheritdoc}
    */
@@ @@
   /**
    * The system under test.
    *
-   * @var \Drupal\widget_type\WidgetRegistrySourceListBuilder
+   * @var WidgetRegistrySourceListBuilder
    */
   private $theSut;

@@ @@
   /**
    * The entity.
    *
-   * @var \Drupal\widget_type\WidgetRegistrySourceInterface
+   * @var WidgetRegistrySourceInterface
    */
   private $entity;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * AddProphecyTraitRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/widget_type/src/WidgetTypeListBuilder.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

@@ @@
   /**
    * The redirect destination service.
    *
-   * @var \Drupal\Core\Routing\RedirectDestinationInterface
+   * @var RedirectDestinationInterface
    */
   protected $redirectDestination;

@@ @@
   /**
    * Constructs a new WidgetTypeListBuilder object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param DateFormatterInterface $date_formatter
    *   The date formatter service.
-   * @param \Drupal\Core\Routing\RedirectDestinationInterface $redirect_destination
+   * @param RedirectDestinationInterface $redirect_destination
    *   The redirect destination service.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, DateFormatterInterface $date_formatter, RedirectDestinationInterface $redirect_destination) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/widget_type/src/WidgetTypeInterface.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\widget_type;

+use Drupal\widget_type\Entity\WidgetType;
+use Drupal\Core\TypedData\Exception\MissingDataException;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityChangedInterface;

@@ @@
    * @param array $settings
    *   The widget type version.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setSettingsSchema(array $settings): self;
@@ @@
    * @param string $version
    *   The widget type version.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setVersion(string $version): self;
@@ @@
    * @param array $lang_codes
    *   The widget type remote languages.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setRemoteLanguages(array $lang_codes): self;
@@ @@
    * @param array $files
    *   The list of widget files.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setFiles(array $files): self;
@@ @@
    * @param string $directory
    *   The widget type version.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setDirectory(string $directory): self;
@@ @@
    * @param string $description
    *   The widget type description.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setDescription(string $description): self;
@@ @@
    * @param string $remote_id
    *   The widget type remote ID.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setRemoteId(string $remote_id): self;
@@ @@
    * @return string|null
    *   The language to provide to the widget.
    *
-   * @throws \Drupal\Core\TypedData\Exception\MissingDataException
+   * @throws MissingDataException
    */
   public function negotiateLanguage($lang_code = NULL): ?string;

@@ @@
    * @param array $settings
    *   The widget type form schema.
    *
-   * @return \Drupal\widget_type\Entity\WidgetType
+   * @return WidgetType
    *   The widget type.
    */
   public function setFormSchema(array $settings): WidgetTypeInterface;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/widget_type/src/WidgetTypeConfiguration.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\widget_type;

+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Config\Config;

 /**
@@ @@
   /**
    * The configuration object.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   private $config;

@@ @@
   /**
    * WidgetTypeConfiguration constructor.
    *
-   * @param \Drupal\Core\Config\Config $config
+   * @param Config $config
    *   The configuration.
    */
   public function __construct(Config $config) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/widget_type/src/WidgetRegistrySourceListBuilder.php:23

    ---------- begin diff ----------
@@ @@
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\widget_type\WidgetRegistrySourceInterface $entity */
+    /** @var WidgetRegistrySourceInterface $entity */
     [$color, $complementary_color] = $entity->calculateColors();
     $row['label'] = [
       'data' => [
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


10) modules/contrib/widget_type/src/Form/WidgetRegistrySourceForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\widget_type\Form;

+use Drupal\widget_type\WidgetRegistrySourceInterface;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;

@@ @@
 /**
  * Widget Registry Source form.
  *
- * @property \Drupal\widget_type\WidgetRegistrySourceInterface $entity
+ * @property WidgetRegistrySourceInterface $entity
  */
 class WidgetRegistrySourceForm extends EntityForm {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


11) modules/contrib/widget_type/src/Entity/WidgetType.php:369

    ---------- begin diff ----------
@@ @@
   /**
    * The field definitions to integrate with the widget registry.
    *
-   * @return \Drupal\Core\Field\BaseFieldDefinition[]
+   * @return BaseFieldDefinition[]
    *   The definitions.
    */
   public static function customBaseFieldDedfinitions(): array {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


12) modules/contrib/widget_type/src/Controller/InteractiveComponents.php:20

    ---------- begin diff ----------
@@ @@
   /**
    * The menu link tree.
    *
-   * @var \Drupal\Core\Menu\MenuLinkTreeElement
+   * @var MenuLinkTreeElement
    */
   private $menuTree;

@@ @@
   /**
    * InteractiveComponents constructor.
    *
-   * @param \Drupal\Core\Menu\MenuLinkTreeInterface $menu_link_tree
+   * @param MenuLinkTreeInterface $menu_link_tree
    *   The menu link tree service.
    */
   public function __construct(MenuLinkTreeInterface $menu_link_tree) {
@@ @@
   /**
    * Hides the video and remembers not to show it again.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response.
    */
   public function hideVideo(): AjaxResponse {
@@ @@
         '#url' => Url::fromUri('https://video.mateuaguilo.com/videos/watch/playlist/d08e8938-8d52-4cb0-9f34-52f73a0d3cda'),
         '#title' => [
           '#theme' => 'image',
-          '#uri' => drupal_get_path('module', 'widget_type') . '/assets/video-series.png',
+          '#uri' => \Drupal::service('extension.list.module')->getPath('widget_type') . '/assets/video-series.png',
           '#alt' => 'Image lazy load testing image',
           '#width' => '350',
         ],
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 12 files have been changed by Rector                                      

