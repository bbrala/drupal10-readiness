diff --git a/composer.json b/composer.json
index faacb04..be806a6 100644
--- a/composer.json
+++ b/composer.json
@@ -5,8 +5,8 @@
     "homepage": "http://drupal.org/project/domain_language_google_tag",
     "license": "GPL-2.0+",
     "require": {
-        "drupal/core": "^8.7.7 || ^9",
         "drupal/domain": "^1.0@beta",
-        "drupal/domain_language": "^1.0@alpha || ^2"
+        "drupal/domain_language": "^1.0@alpha || ^2",
+        "drupal/core": "^9.3 || ^10"
     }
 }
diff --git a/domain_language_google_tag.info.yml b/domain_language_google_tag.info.yml
index f9c25ca..9c9fb12 100644
--- a/domain_language_google_tag.info.yml
+++ b/domain_language_google_tag.info.yml
@@ -7,4 +7,4 @@ dependencies:
   - domain:domain
   - drupal:domain_language
 configure: domain_language_google_tag.google_tag_settings_form
-core_version_requirement: ^8.7.7 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/src/EventSubscriber/GoogleTagResponseSubscriber.php b/src/EventSubscriber/GoogleTagResponseSubscriber.php
index 7d42604..efd34de 100755
--- a/src/EventSubscriber/GoogleTagResponseSubscriber.php
+++ b/src/EventSubscriber/GoogleTagResponseSubscriber.php
@@ -2,9 +2,10 @@
 
 namespace Drupal\domain_language_google_tag\EventSubscriber;
 
+use Drupal\Core\Config\ImmutableConfig;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Drupal\domain\DomainNegotiatorInterface;
 use Drupal\Core\Language\LanguageManager;
@@ -19,32 +20,32 @@ class GoogleTagResponseSubscriber implements EventSubscriberInterface {
   /**
    * The config object for the domain_language_google_tag settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * The DomainNegotiator.
    *
-   * @var \Drupal\domain\DomainNegotiatorInterface
+   * @var DomainNegotiatorInterface
    */
   protected $activeDomain;
 
   /**
    * The LanguageManager.
    *
-   * @var \Drupal\Core\Language\LanguageManager
+   * @var LanguageManager
    */
   protected $languageManager;
 
   /**
    * Constructs a new Google Tag Manager response subscriber.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   The config factory service.
-   * @param \Drupal\domain\DomainNegotiatorInterface $negotiator
+   * @param DomainNegotiatorInterface $negotiator
    *   The domain negotiator service.
-   * @param \Drupal\Core\Language\LanguageManager $languageManager
+   * @param LanguageManager $languageManager
    *   The language manager service.
    */
   public function __construct(ConfigFactoryInterface $configFactory, DomainNegotiatorInterface $negotiator, LanguageManager $languageManager) {
@@ -58,11 +59,11 @@ class GoogleTagResponseSubscriber implements EventSubscriberInterface {
   /**
    * Add a tags in boby.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *
    *   Set response.
    */
-  public function addTag(FilterResponseEvent $event) {
+  public function addTag(ResponseEvent $event) {
     if (!$event->isMasterRequest()) {
       return;
     }
diff --git a/src/Form/DomainLanguageGoogleTagSettingsForm.php b/src/Form/DomainLanguageGoogleTagSettingsForm.php
index 889830e..90e8bd3 100755
--- a/src/Form/DomainLanguageGoogleTagSettingsForm.php
+++ b/src/Form/DomainLanguageGoogleTagSettingsForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\domain_language_google_tag\Form;
 
+use Drupal\Core\Config\ImmutableConfig;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Entity\EntityTypeManager;
@@ -18,14 +19,14 @@ class DomainLanguageGoogleTagSettingsForm extends ConfigFormBase {
   /**
    * The config object for the domain_language_google_tag settings.
    *
-   * @var \Drupal\Core\Config\ImmutableConfig
+   * @var ImmutableConfig
    */
   protected $config;
 
   /**
    * Drupal\Core\Entity\EntityTypeManager definition.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
   /**
@@ -146,7 +147,7 @@ class DomainLanguageGoogleTagSettingsForm extends ConfigFormBase {
       $url = Url::fromRoute('domain.admin');
       $domain_link = Link::fromTextAndUrl($this->t('Domain records'), $url);
       $domain_link = $domain_link->toRenderable();
-      $form['title']['#markup'] = $this->t('There is no Domain record yet.Please create a domain records. See link: @domain_list', ['@domain_list' => render($domain_link)]);
+      $form['title']['#markup'] = $this->t('There is no Domain record yet.Please create a domain records. See link: @domain_list', ['@domain_list' => \Drupal::service('renderer')->render($domain_link)]);
       return $form;
     }
   }
