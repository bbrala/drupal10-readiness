diff --git a/google_analytics.module b/google_analytics.module
index 2635c6b..cbcf73c 100644
--- a/google_analytics.module
+++ b/google_analytics.module
@@ -1,5 +1,7 @@
 <?php
 
+use Drupal\user\ProfileForm;
+use Drupal\Core\Pager\PagerManagerInterface;
 /**
  * @file
  * Drupal Module: Google Analytics.
@@ -350,7 +352,7 @@ function google_analytics_page_attachments(array &$page) {
       $query_string = '?' . (\Drupal::state()->get('system.css_js_query_string') ?: '0');
       // @todo: Remove conditional after dropping support lower than 9.3.
       // @phpstan-ignore-next-line
-      $library = method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') : file_url_transform_relative(file_create_url('public://google_analytics/gtag.js')) . $query_string;
+      $library = method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') : \Drupal::service('file_url_generator')->generateString('public://google_analytics/gtag.js') . $query_string;
     }
     else {
       // Fallback to default.
@@ -413,9 +415,9 @@ function google_analytics_entity_extra_field_info() {
  */
 function google_analytics_form_user_form_alter(&$form, FormStateInterface $form_state) {
   $config = \Drupal::config('google_analytics.settings');
-  /** @var Drupal\user\ProfileForm $profileForm */
+  /** @var ProfileForm $profileForm */
   $profileForm = $form_state->getFormObject();
-  /** @var Drupal\user\Entity\User $account */
+  /** @var User $account */
   $account = $profileForm->getEntity();
 
   if ($account->hasPermission('opt-in or out of google analytics tracking') && ($visibility_user_account_mode = $config->get('visibility.user_account_mode')) != 0 && _google_analytics_visibility_roles($account)) {
@@ -455,9 +457,9 @@ function google_analytics_form_user_form_alter(&$form, FormStateInterface $form_
  * Submit callback for user profile form to save the Google Analytics setting.
  */
 function google_analytics_user_profile_form_submit($form, FormStateInterface $form_state) {
-  /** @var Drupal\user\ProfileForm $profileForm */
+  /** @var ProfileForm $profileForm */
   $profileForm = $form_state->getFormObject();
-  /** @var Drupal\user\Entity\User $account */
+  /** @var User $account */
   $account = $profileForm->getEntity();
   if ($account->id() && $form_state->hasValue('user_account_users')) {
     \Drupal::service('user.data')->set('google_analytics', $account->id(), 'user_account_users', (int) $form_state->getValue('user_account_users'));
@@ -489,7 +491,7 @@ function google_analytics_preprocess_item_list__search_results(&$variables) {
   // Only run on search results list.
   if ($config->get('track.site_search')) {
     // Get the pager manager to give us the number of items returned.
-    /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
+    /** @var PagerManagerInterface $pager_manager */
     $pager_manager = \Drupal::service('pager.manager');
     $items = 0;
     if ($pager_manager->getPager()) {
@@ -563,7 +565,7 @@ function _google_analytics_cache($location, $synchronize = FALSE) {
 
           // @todo: Remove conditional after dropping support lower than 9.3.
           // @phpstan-ignore-next-line
-          return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : file_url_transform_relative(file_create_url($file_destination));
+          return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : \Drupal::service('file_url_generator')->generateString($file_destination);
 
         }
       }
@@ -575,7 +577,7 @@ function _google_analytics_cache($location, $synchronize = FALSE) {
   else {
     // @todo: Remove conditional after dropping support lower than 9.3.
     // @phpstan-ignore-next-line
-    return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : file_url_transform_relative(file_create_url($file_destination));
+    return method_exists('\Drupal\Core\File\FileUrlGenerator', 'generateString') ? \Drupal::service('file_url_generator')->generateString($file_destination) : \Drupal::service('file_url_generator')->generateString($file_destination);
   }
 }
 
diff --git a/src/Form/GoogleAnalyticsAdminSettingsForm.php b/src/Form/GoogleAnalyticsAdminSettingsForm.php
index 2ab6e17..768176f 100644
--- a/src/Form/GoogleAnalyticsAdminSettingsForm.php
+++ b/src/Form/GoogleAnalyticsAdminSettingsForm.php
@@ -19,25 +19,25 @@ class GoogleAnalyticsAdminSettingsForm extends ConfigFormBase {
   /**
    * The manages modules.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * The constructor method.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The config factory.
-   * @param \Drupal\Core\Session\AccountInterface $currentUser
+   * @param AccountInterface $currentUser
    *   The current user.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
+   * @param ModuleHandlerInterface $moduleHandler
    *   The manages modules.
    */
   public function __construct(ConfigFactoryInterface $config_factory, AccountInterface $currentUser, ModuleHandlerInterface $moduleHandler) {
@@ -842,7 +842,7 @@ class GoogleAnalyticsAdminSettingsForm extends ConfigFormBase {
    * @param array $element
    *   An associative array containing the properties and children of the
    *   generic form element.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The $form_state array for the form this element belongs to.
    *
    * @see form_process_pattern()
diff --git a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php
index ccd6b71..1cb2f86 100644
--- a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php
+++ b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php
@@ -24,7 +24,7 @@ class GoogleAnalyticsVisibilityPages extends ProcessPluginBase implements Contai
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -34,7 +34,7 @@ class GoogleAnalyticsVisibilityPages extends ProcessPluginBase implements Contai
    * The migration process plugin, configured for lookups in the d6_user_role
    * and d7_user_role migrations.
    *
-   * @var \Drupal\migrate\Plugin\MigrateProcessInterface
+   * @var MigrateProcessInterface
    */
   protected $migrationPlugin;
 
diff --git a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php
index c6b4374..79b719f 100644
--- a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php
+++ b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php
@@ -23,7 +23,7 @@ class GoogleAnalyticsVisibilityRoles extends ProcessPluginBase implements Contai
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
@@ -33,7 +33,7 @@ class GoogleAnalyticsVisibilityRoles extends ProcessPluginBase implements Contai
    * The migration process plugin, configured for lookups in the d6_user_role
    * and d7_user_role migrations.
    *
-   * @var \Drupal\migrate\Plugin\MigrateProcessInterface
+   * @var MigrateProcessInterface
    */
   protected $migrationPlugin;
 
diff --git a/tests/src/Functional/GoogleAnalyticsBasicTest.php b/tests/src/Functional/GoogleAnalyticsBasicTest.php
index e58c7ae..abb21ff 100644
--- a/tests/src/Functional/GoogleAnalyticsBasicTest.php
+++ b/tests/src/Functional/GoogleAnalyticsBasicTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\UserInterface;
+use Drupal\user\Entity\User;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Url;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ -19,14 +21,14 @@ class GoogleAnalyticsBasicTest extends BrowserTestBase {
   /**
    * User without permissions to use snippets.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $noSnippetUser;
 
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php b/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php
index 1b187d8..cf71ef7 100644
--- a/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php
+++ b/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
@@ -34,7 +35,7 @@ class GoogleAnalyticsCustomDimensionsAndMetricsTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/GoogleAnalyticsCustomUrls.php b/tests/src/Functional/GoogleAnalyticsCustomUrls.php
index 448d7dc..6aab4fd 100644
--- a/tests/src/Functional/GoogleAnalyticsCustomUrls.php
+++ b/tests/src/Functional/GoogleAnalyticsCustomUrls.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Component\Serialization\Json;
 use Drupal\Tests\BrowserTestBase;
 
@@ -29,7 +30,7 @@ class GoogleAnalyticsCustomUrls extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/GoogleAnalyticsRolesTest.php b/tests/src/Functional/GoogleAnalyticsRolesTest.php
index 741e585..4b4d3b6 100644
--- a/tests/src/Functional/GoogleAnalyticsRolesTest.php
+++ b/tests/src/Functional/GoogleAnalyticsRolesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Tests\BrowserTestBase;
 
@@ -29,7 +30,7 @@ class GoogleAnalyticsRolesTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/GoogleAnalyticsSearchTest.php b/tests/src/Functional/GoogleAnalyticsSearchTest.php
index 97798a9..8dd77c5 100644
--- a/tests/src/Functional/GoogleAnalyticsSearchTest.php
+++ b/tests/src/Functional/GoogleAnalyticsSearchTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\Entity\User;
+use Drupal\node\NodeInterface;
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\search\SearchIndexInterface;
@@ -26,7 +28,7 @@ class GoogleAnalyticsSearchTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
@@ -109,7 +111,7 @@ class GoogleAnalyticsSearchTest extends BrowserTestBase {
    * @param string $test_string
    *   Some unique identifying string to add to the text of the node.
    *
-   * @return \Drupal\node\NodeInterface
+   * @return NodeInterface
    *   The created node.
    * @internal
    */
diff --git a/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php b/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php
index 6cc2023..3d04e30 100644
--- a/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php
+++ b/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
 
@@ -31,7 +32,7 @@ class GoogleAnalyticsStatusMessagesTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
diff --git a/tests/src/Functional/GoogleAnalyticsUninstallTest.php b/tests/src/Functional/GoogleAnalyticsUninstallTest.php
index fb86e29..9bd33a1 100644
--- a/tests/src/Functional/GoogleAnalyticsUninstallTest.php
+++ b/tests/src/Functional/GoogleAnalyticsUninstallTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Tests\BrowserTestBase;
 
@@ -31,14 +32,14 @@ class GoogleAnalyticsUninstallTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -77,10 +78,17 @@ class GoogleAnalyticsUninstallTest extends BrowserTestBase {
     // Uninstall the module.
     $edit = [];
     $edit['uninstall[google_analytics]'] = TRUE;
-    $this->drupalPostForm('admin/modules/uninstall', $edit, $this->t('Uninstall'));
-    $this->assertNoText(\Drupal::translation()->translate('Configuration deletions'));
-    $this->drupalPostForm(NULL, NULL, $this->t('Uninstall'));
-    $this->assertText($this->t('The selected modules have been uninstalled.'));
+    $this->drupalGet('admin/modules/uninstall');
+    $this->submitForm($edit, $this->t('Uninstall'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextNotContains() for HTML responses, responseNotContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextNotContains(\Drupal::translation()->translate('Configuration deletions'));
+    $this->submitForm(NULL, $this->t('Uninstall'));
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Verify the assertion: pageTextContains() for HTML responses, responseContains() for non-HTML responses.
+    // The passed text should be HTML decoded, exactly as a human sees it in the browser.
+    $this->assertSession()->pageTextContains($this->t('The selected modules have been uninstalled.'));
 
     // Test if the directory and all files have been removed.
     $this->assertFalse($file_system->prepareDirectory($cache_path), 'Cache directory "public://google_analytics" has been removed.');
diff --git a/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php b/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
index 61a2073..fb5ab85 100644
--- a/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
+++ b/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 
@@ -31,14 +32,14 @@ class GoogleAnalyticsUserFieldsTest extends BrowserTestBase {
   /**
    * Admin user.
    *
-   * @var \Drupal\user\Entity\User|bool
+   * @var User|bool
    */
   protected $adminUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -61,28 +62,28 @@ class GoogleAnalyticsUserFieldsTest extends BrowserTestBase {
 
     // Check if the pseudo field is shown on account forms.
     $this->drupalGet('admin/config/people/accounts/form-display');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Google Analytics settings'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Google Analytics settings'));
 
     // No customization allowed.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 0)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertNoRaw($this->t('Google Analytics settings'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseNotContains($this->t('Google Analytics settings'));
 
     // Tracking on by default, users with opt-in or out of tracking permission
     // can opt out.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 1)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Users are tracked by default, but you are able to opt out.'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Users are tracked by default, but you are able to opt out.'));
 
     // Tracking off by default, users with opt-in or out of tracking permission
     // can opt in.
     $this->config('google_analytics.settings')->set('visibility.user_account_mode', 2)->save();
     $this->drupalGet('user/' . $this->adminUser->id() . '/edit');
-    $this->assertResponse(200);
-    $this->assertRaw($this->t('Users are <em>not</em> tracked by default, but you are able to opt in.'));
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->responseContains($this->t('Users are <em>not</em> tracked by default, but you are able to opt in.'));
   }
 
 }
