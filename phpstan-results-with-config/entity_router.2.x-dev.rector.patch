diff --git a/entity_router.info.yml b/entity_router.info.yml
index 55722e6..b8141a6 100644
--- a/entity_router.info.yml
+++ b/entity_router.info.yml
@@ -2,6 +2,5 @@ name: 'Entity Router'
 description: 'Lookup entities by their paths/redirects and convert to a given format.'
 package: 'Web services'
 type: module
-core: 8.x
 
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
diff --git a/src/Controller/EntityRouterController.php b/src/Controller/EntityRouterController.php
index 44fab64..d04f11f 100644
--- a/src/Controller/EntityRouterController.php
+++ b/src/Controller/EntityRouterController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\entity_router\Controller;
 
+use Drupal\Core\Entity\EntityMalformedException;
+use Drupal\Core\Entity\Exception\UndefinedLinkTemplateException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Routing\AccessAwareRouterInterface;
@@ -18,7 +20,7 @@ class EntityRouterController extends ControllerBase {
   /**
    * An instance of the "router" service.
    *
-   * @var \Drupal\Core\Routing\AccessAwareRouterInterface
+   * @var AccessAwareRouterInterface
    */
   protected $router;
 
@@ -47,14 +49,14 @@ class EntityRouterController extends ControllerBase {
   /**
    * Returns a JSON API resource by the path alias or redirect.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The inbound request.
    *
-   * @return \Drupal\entity_router\Response\EntityResponse
+   * @return EntityResponse
    *   The response.
    *
-   * @throws \Drupal\Core\Entity\EntityMalformedException
-   * @throws \Drupal\Core\Entity\Exception\UndefinedLinkTemplateException
+   * @throws EntityMalformedException
+   * @throws UndefinedLinkTemplateException
    *
    * @example
    * GET /ROUTE?format=jsonapi&path=/node/1
@@ -88,7 +90,7 @@ class EntityRouterController extends ControllerBase {
    * @param string $path
    *   The internal path or alias of an entity.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|null
+   * @return EntityInterface|null
    *   The entity.
    */
   protected function getEntityByPath(string $path): ?EntityInterface {
diff --git a/src/EntityResponseHandlerInterface.php b/src/EntityResponseHandlerInterface.php
index dc576e2..aac4996 100644
--- a/src/EntityResponseHandlerInterface.php
+++ b/src/EntityResponseHandlerInterface.php
@@ -15,12 +15,12 @@ interface EntityResponseHandlerInterface extends ContainerFactoryPluginInterface
   /**
    * Returns the response for a given entity.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The inbound request.
-   * @param \Drupal\Core\Entity\EntityInterface|null $entity
+   * @param EntityInterface|null $entity
    *   The entity to generate a response for.
    *
-   * @return \Symfony\Component\HttpFoundation\Response
+   * @return Response
    *   The response.
    *
    * @see \Drupal\entity_router\Response\EntityResponse
diff --git a/src/Event/EntityResponseEvent.php b/src/Event/EntityResponseEvent.php
index 545402c..0befb32 100644
--- a/src/Event/EntityResponseEvent.php
+++ b/src/Event/EntityResponseEvent.php
@@ -2,8 +2,8 @@
 
 namespace Drupal\entity_router\Event;
 
+use Symfony\Contracts\EventDispatcher\Event;
 use Drupal\Core\Entity\EntityInterface;
-use Symfony\Component\EventDispatcher\Event;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 
@@ -20,21 +20,21 @@ class EntityResponseEvent extends Event {
   /**
    * The inbound HTTP request.
    *
-   * @var \Symfony\Component\HttpFoundation\Request
+   * @var Request
    */
   protected $request;
 
   /**
    * The response to send.
    *
-   * @var \Symfony\Component\HttpFoundation\Response
+   * @var Response
    */
   protected $response;
 
   /**
    * The requested entity.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $entity;
 
diff --git a/src/EventSubscriber.php b/src/EventSubscriber.php
index 5676071..9f14162 100644
--- a/src/EventSubscriber.php
+++ b/src/EventSubscriber.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\entity_router;
 
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Cache\CacheableResponseInterface;
@@ -10,7 +11,6 @@ use Drupal\entity_router\Response\EntityResponse;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -21,14 +21,14 @@ class EventSubscriber implements EventSubscriberInterface {
   /**
    * An instance of the "event_dispatcher" service.
    *
-   * @var \Symfony\Component\EventDispatcher\EventDispatcherInterface
+   * @var EventDispatcherInterface
    */
   protected $eventDispatcher;
 
   /**
    * An instance of the "MODULE.plugin.manager.event_response_handler" service.
    *
-   * @var \Drupal\entity_router\EntityResponseHandlerManager
+   * @var EntityResponseHandlerManager
    */
   protected $entityResponseHandlerManager;
 
@@ -54,7 +54,7 @@ class EventSubscriber implements EventSubscriberInterface {
   /**
    * {@inheritdoc}
    */
-  public function onResponse(FilterResponseEvent $event): void {
+  public function onResponse(ResponseEvent $event): void {
     $response = $event->getResponse();
 
     if ($response instanceof EntityResponse) {
@@ -83,7 +83,7 @@ class EventSubscriber implements EventSubscriberInterface {
             );
         }
 
-        $this->eventDispatcher->dispatch(EntityResponseEvent::NAME, new EntityResponseEvent($request, $response, $entity));
+        $this->eventDispatcher->dispatch(new EntityResponseEvent($request, $response, $entity), EntityResponseEvent::NAME);
       }
       catch (PluginException $e) {
         $status = 400;
diff --git a/src/Plugin/EntityResponseHandler/JsonApiEntityResponseHandler.php b/src/Plugin/EntityResponseHandler/JsonApiEntityResponseHandler.php
index fe6b52e..f3bdcfb 100644
--- a/src/Plugin/EntityResponseHandler/JsonApiEntityResponseHandler.php
+++ b/src/Plugin/EntityResponseHandler/JsonApiEntityResponseHandler.php
@@ -26,7 +26,7 @@ class JsonApiEntityResponseHandler implements EntityResponseHandlerInterface {
   /**
    * An instance of the "jsonapi.resource_type.repository" service.
    *
-   * @var \Drupal\jsonapi\ResourceType\ResourceTypeRepositoryInterface
+   * @var ResourceTypeRepositoryInterface
    */
   protected $resourceTypeRepository;
 
@@ -44,7 +44,7 @@ class JsonApiEntityResponseHandler implements EntityResponseHandlerInterface {
    *
    * NOTE: available in "jsonapi:2.x" only.
    *
-   * @var \Drupal\jsonapi\Controller\EntityResource|null
+   * @var EntityResource|null
    */
   protected $entityResource;
 
diff --git a/src/Response/EntityResponse.php b/src/Response/EntityResponse.php
index 820ad2f..6eeb143 100644
--- a/src/Response/EntityResponse.php
+++ b/src/Response/EntityResponse.php
@@ -22,7 +22,7 @@ class EntityResponse extends Response {
   /**
    * The entity.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $entity;
 
