modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/ConfigureSectionFormInterface.php
modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/EventSubscriber/BlockComponentRenderArraySubscriber.php
modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/EventSubscriber/RouteSubscriber.php
modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/Form/ConfigureSectionForm.php
modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/LayoutBuilderTrustedCallbacks.php
modules/contrib/ui_styles/modules/ui_styles_layout_builder/tests/src/Functional/UiStylesLayoutBuilderTest.php
modules/contrib/ui_styles/modules/ui_styles_layout_builder/ui_styles_layout_builder.module
modules/contrib/ui_styles/modules/ui_styles_library/src/Controller/StylesLibraryController.php
modules/contrib/ui_styles/modules/ui_styles_library/ui_styles_library.install
modules/contrib/ui_styles/modules/ui_styles_library/ui_styles_library.module
modules/contrib/ui_styles/src/Render/Element.php
modules/contrib/ui_styles/src/Render/TrustedCallbackWrapper.php
modules/contrib/ui_styles/src/StylePluginManager.php
modules/contrib/ui_styles/src/StylePluginManagerInterface.php
modules/contrib/ui_styles/tests/src/Kernel/PluginTest.php
modules/contrib/ui_styles/tests/src/Kernel/UiStylesRenderElementTest.php
modules/contrib/ui_styles/tests/src/Unit/UiStylesPluginManagerTest.php
modules/contrib/ui_styles/tests/src/Unit/UiStylesRenderElementTest.php

10 files with changes
=====================

1) modules/contrib/ui_styles/tests/src/Unit/UiStylesRenderElementTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\ui_styles\Unit;

+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Core\Render\ElementInfoManager;
 use Drupal\Core\Security\TrustedCallbackInterface;
 use Drupal\Core\Theme\Registry;
@@ @@
   /**
    * The theme registry.
    *
-   * @var \Drupal\Core\Theme\Registry|\PHPUnit\Framework\MockObject\MockObject
+   * @var Registry|MockObject
    */
   protected $themeRegistry;

@@ @@
   /**
    * The element info plugin manager.
    *
-   * @var \Drupal\Core\Render\ElementInfoManager|\PHPUnit\Framework\MockObject\MockObject
+   * @var ElementInfoManager|MockObject
    */
   protected $elementInfoManager;

@@ @@
   /**
    * The dependency injection container.
    *
-   * @var \Symfony\Component\DependencyInjection\ContainerBuilder
+   * @var ContainerBuilder
    */
   protected $container;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/ui_styles/tests/src/Unit/UiStylesPluginManagerTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\ui_styles\Unit;

+use Drupal\Component\Plugin\Discovery\DiscoveryInterface;
+use Symfony\Component\DependencyInjection\TaggedContainerInterface;
+use PHPUnit\Framework\MockObject\MockObject;
 use Drupal\Component\Plugin\Exception\PluginException;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
@@ @@
   /**
    * The Style plugin manager.
    *
-   * @var \Drupal\ui_styles\StylePluginManager
+   * @var StylePluginManager
    */
   protected $stylePluginManager;

@@ @@
   /**
    * The plugin discovery.
    *
-   * @var \Drupal\Component\Plugin\Discovery\DiscoveryInterface
+   * @var DiscoveryInterface
    */
   protected $discovery;

@@ @@
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * The container.
    *
-   * @var \Symfony\Component\DependencyInjection\TaggedContainerInterface
+   * @var TaggedContainerInterface
    */
   protected $container;

@@ @@
     \Drupal::setContainer($container);

     // Set up for this class.
-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface|\PHPUnit\Framework\MockObject\MockObject $moduleHandler */
+    /** @var ModuleHandlerInterface|MockObject $moduleHandler */
     $moduleHandler = $this->createMock(ModuleHandlerInterface::class);
     $moduleHandler->expects($this->any())
       ->method('getModuleDirectories')
       ->willReturn([]);

-    /** @var \Drupal\Core\Extension\ThemeHandlerInterface|\PHPUnit\Framework\MockObject\MockObject $themeHandler */
+    /** @var ThemeHandlerInterface|MockObject $themeHandler */
     $themeHandler = $this->createMock(ThemeHandlerInterface::class);
     $themeHandler->expects($this->any())
       ->method('getThemeDirectories')
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/ui_styles/tests/src/Kernel/PluginTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\ui_styles\Kernel;

+use Drupal\ui_styles\StylePluginManagerInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\KernelTests\KernelTestBase;

@@ @@
    * Tests that examples can be provided by YAML files.
    */
   public function testDetectedExamples(): void {
-    /** @var \Drupal\ui_styles\StylePluginManagerInterface $styles_manager */
+    /** @var StylePluginManagerInterface $styles_manager */
     $styles_manager = $this->container->get('plugin.manager.ui_styles');
     /** @var array $definitions */
     $definitions = $styles_manager->getDefinitions();
@@ @@

     // Test when the module overriding the definition is executed before.
     \module_set_weight('ui_styles_test_disabled', -1);
-    /** @var \Drupal\ui_styles\StylePluginManagerInterface $examples_manager */
+    /** @var StylePluginManagerInterface $examples_manager */
     $examples_manager = $this->container->get('plugin.manager.ui_styles');
     $this->assertArrayHasKey('test', $examples_manager->getDefinitions());

@@ @@
     // Test when the module overriding the definition is executed after.
     \module_set_weight('ui_styles_test_disabled', 1);
     \drupal_flush_all_caches();
-    /** @var \Drupal\ui_styles\StylePluginManagerInterface $examples_manager */
+    /** @var StylePluginManagerInterface $examples_manager */
     $examples_manager = $this->container->get('plugin.manager.ui_styles');
     $this->assertArrayNotHasKey('test', $examples_manager->getDefinitions());
   }
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * AssertEqualsParameterToSpecificMethodsTypeRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


4) modules/contrib/ui_styles/src/StylePluginManager.php:24

    ---------- begin diff ----------
@@ @@
   /**
    * The theme handler.
    *
-   * @var \Drupal\Core\Extension\ThemeHandlerInterface
+   * @var ThemeHandlerInterface
    */
   protected $themeHandler;

@@ @@
   /**
    * The Messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;

@@ @@
   /**
    * Constructs a new StylePluginManager object.
    *
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Extension\ThemeHandlerInterface $theme_handler
+   * @param ThemeHandlerInterface $theme_handler
    *   The theme handler.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $translation
+   * @param TranslationInterface $translation
    *   The string translation service.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
    */
   public function __construct(ModuleHandlerInterface $module_handler, ThemeHandlerInterface $theme_handler, TranslationInterface $translation, CacheBackendInterface $cache_backend, MessengerInterface $messenger) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/ui_styles/modules/ui_styles_library/src/Controller/StylesLibraryController.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Styles manager service.
    *
-   * @var \Drupal\ui_styles\StylePluginManagerInterface
+   * @var StylePluginManagerInterface
    */
   protected $stylesManager;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/ui_styles/modules/ui_styles_layout_builder/ui_styles_layout_builder.module:5

    ---------- begin diff ----------
@@ @@
  */

 declare(strict_types = 1);
+use Drupal\layout_builder\Form\ConfigureBlockFormBase;
+use Drupal\ui_styles_layout_builder\ConfigureSectionFormInterface;
+use Drupal\Core\Entity\ContentEntityInterface;
+use Drupal\layout_builder\Plugin\Field\FieldType\LayoutSectionItem;
+use Drupal\layout_builder\Section;

 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
 function ui_styles_layout_builder_form_alter(array &$form, FormStateInterface $formState): void {
   if ($form['#form_id'] === 'layout_builder_add_block' || $form['#form_id'] === 'layout_builder_update_block') {
     $styles_manager = \Drupal::service('plugin.manager.ui_styles');
-    /** @var \Drupal\layout_builder\Form\ConfigureBlockFormBase $formObject */
+    /** @var ConfigureBlockFormBase $formObject */
     $formObject = $formState->getFormObject();
     $component = $formObject->getCurrentComponent();

@@ @@
  * which is later persisted to section storage by layout builder's base form.
  */
 function _ui_styles_layout_builder_submit_block_form(array $form, FormStateInterface $formState): void {
-  /** @var \Drupal\layout_builder\Form\ConfigureBlockFormBase $formObject */
+  /** @var ConfigureBlockFormBase $formObject */
   $formObject = $formState->getFormObject();
   $component = $formObject->getCurrentComponent();

@@ @@
  * Modify the configuration form for layout builder sections (layouts).
  */
 function ui_styles_layout_builder_form_layout_builder_configure_section_alter(array &$form, FormStateInterface $form_state, string $form_id): void {
-  /** @var \Drupal\ui_styles_layout_builder\ConfigureSectionFormInterface $formObject */
+  /** @var ConfigureSectionFormInterface $formObject */
   $formObject = $form_state->getFormObject();
   // Alter form only on section update, not on section creation, because of
   // the section delta shift.
@@ @@
       $selected[$id] = $value;
     }
   }
-  /** @var \Drupal\ui_styles_layout_builder\ConfigureSectionFormInterface $formObject */
+  /** @var ConfigureSectionFormInterface $formObject */
   $formObject = $formState->getFormObject();
   $section = $formObject->getCurrentSection();
   if ($section != NULL) {
@@ @@
  * - using hook_element_info_alter() while previewing.
  */
 function ui_styles_layout_builder_entity_view_alter(array &$build, EntityInterface $entity, LayoutEntityDisplayInterface $display): void {
-  /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
+  /** @var ContentEntityInterface $entity */
   if ($display->isLayoutBuilderEnabled()) {
     $styles_manager = \Drupal::service('plugin.manager.ui_styles');
     $layout_builder = &$build['_layout_builder'];
@@ @@
         return;
       }
       foreach ($entity->get($layout_field_name) as $delta => $section_item) {
-        /** @var Drupal\layout_builder\Plugin\Field\FieldType\LayoutSectionItem $section_item */
+        /** @var LayoutSectionItem $section_item */
         if (!$layout_builder[$delta]) {
           // We may encounter some issue when manipulating the last section.
           continue;
         }
-        /** @var \Drupal\layout_builder\Section $section */
+        /** @var Section $section */
         $section = $section_item->get('section')->getValue();
         $selected = $section->getThirdPartySetting('ui_styles', 'selected') ?: [];
         /** @var string $extra */
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


7) modules/contrib/ui_styles/modules/ui_styles_layout_builder/tests/src/Functional/UiStylesLayoutBuilderTest.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\ui_styles\Functional;

+use Drupal\node\NodeInterface;
 use Drupal\layout_builder\Entity\LayoutBuilderEntityViewDisplay;
 use Drupal\Tests\BrowserTestBase;

@@ @@
    */
   protected $strictConfigSchema = FALSE;
   // phpcs:enable
-
   /**
    * A test node to which comments will be posted.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $node;
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


8) modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/LayoutBuilderTrustedCallbacks.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ui_styles_layout_builder;

+use Drupal\layout_builder\SectionStorageInterface;
 use Drupal\Core\Render\Element;
 use Drupal\Core\Security\TrustedCallbackInterface;

@@ @@
   public static function preRender(array $element): array {
     $styles_manager = \Drupal::service('plugin.manager.ui_styles');
     $layout_builder = $element['layout_builder'];
-    /** @var \Drupal\layout_builder\SectionStorageInterface $section_storage */
+    /** @var SectionStorageInterface $section_storage */
     $section_storage = $element['#section_storage'];
     $delta = 0;
     $max = \count($section_storage->getSections());
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


9) modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/EventSubscriber/BlockComponentRenderArraySubscriber.php:16

    ---------- begin diff ----------
@@ @@
   /**
    * The style manager.
    *
-   * @var \Drupal\ui_styles\StylePluginManagerInterface
+   * @var StylePluginManagerInterface
    */
   protected $styleManager;

@@ @@
   /**
    * Dependency injection.
    *
-   * @param \Drupal\ui_styles\StylePluginManagerInterface $style_manager
+   * @param StylePluginManagerInterface $style_manager
    *   The style manager.
    */
   public function __construct(StylePluginManagerInterface $style_manager) {
@@ @@
   /**
    * Add each component's block styles to the render array.
    *
-   * @param \Drupal\layout_builder\Event\SectionComponentBuildRenderArrayEvent $event
+   * @param SectionComponentBuildRenderArrayEvent $event
    *   The section component render event.
    */
   public function onBuildRender(SectionComponentBuildRenderArrayEvent $event): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


10) modules/contrib/ui_styles/modules/ui_styles_layout_builder/src/ConfigureSectionFormInterface.php:3

    ---------- begin diff ----------
@@ @@

 namespace Drupal\ui_styles_layout_builder;

+use Drupal\layout_builder\Section;
 use Drupal\Core\Form\FormInterface;

 /**
@@ @@
   /**
    * Get the layout section being modified.
    *
-   * @return \Drupal\layout_builder\Section|null
+   * @return Section|null
    *   The layout section.
    */
   public function getCurrentSection();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 10 files have been changed by Rector                                      

