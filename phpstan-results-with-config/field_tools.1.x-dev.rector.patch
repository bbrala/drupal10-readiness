diff --git a/field_tools.admin.inc b/field_tools.admin.inc
index 834a914..cc53dc5 100644
--- a/field_tools.admin.inc
+++ b/field_tools.admin.inc
@@ -69,7 +69,7 @@ function field_tools_field_overview() {
     'header' => $header,
   ));
 
-  drupal_add_css(drupal_get_path('module', 'field_tools') . '/field_tools.css');
+  drupal_add_css(\Drupal::service('extension.list.module')->getPath('field_tools') . '/field_tools.css');
 
   return $output;
 }
diff --git a/field_tools.info.yml b/field_tools.info.yml
index 0cf7ca8..2cd3f3f 100644
--- a/field_tools.info.yml
+++ b/field_tools.info.yml
@@ -2,7 +2,6 @@ name: 'Field Tools'
 description: 'Provides tools for working with fields, such as cloning to other entities and bundles.'
 package: Development
 type: module
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 dependencies:
   - drupal:field_ui
diff --git a/field_tools.module b/field_tools.module
index 10faea5..c47b9ee 100644
--- a/field_tools.module
+++ b/field_tools.module
@@ -1,4 +1,10 @@
 <?php
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\field_tools\Form\FieldStorageConfigDeleteForm;
+use Drupal\field_tools\EntityHandler\FieldStorageConfigAccess;
+use Drupal\Core\Entity\Routing\AdminHtmlRouteProvider;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Url;
 /**
  * @file field_tools.module
  * Contains useful tools for working with fields.
@@ -7,7 +13,7 @@
 /**
  * Implements hook_help().
  */
-function field_tools_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
+function field_tools_help($route_name, RouteMatchInterface $route_match) {
   switch ($route_name) {
     // Main module help.
     case 'help.page.field_tools':
@@ -58,16 +64,16 @@ function field_tools_entity_type_build(array &$entity_types) {
   // FieldConfig::linkTemplates(), but we can't hack into that.
 
   // Add a delete form and link to field storage config.
-  $entity_types['field_storage_config']->setFormClass('delete', Drupal\field_tools\Form\FieldStorageConfigDeleteForm::class);
+  $entity_types['field_storage_config']->setFormClass('delete', FieldStorageConfigDeleteForm::class);
   $entity_types['field_storage_config']->setLinkTemplate('delete-form', '/admin/reports/fields/tools/{field_storage_config}/delete');
-  $entity_types['field_storage_config']->setHandlerClass('access', Drupal\field_tools\EntityHandler\FieldStorageConfigAccess::class);
+  $entity_types['field_storage_config']->setHandlerClass('access', FieldStorageConfigAccess::class);
   // @todo Core forgot to add a direct way to manipulate route_provider, so
   // we have to do it the sloppy way for now.
   $route_providers = $entity_types['field_storage_config']->getRouteProviderClasses() ?: [];
   if (empty($route_providers['field_tools'])) {
     // This will only provide the delete route, as all the other link templates
     // aren't defined.
-    $route_providers['field_tools'] = \Drupal\Core\Entity\Routing\AdminHtmlRouteProvider::class;
+    $route_providers['field_tools'] = AdminHtmlRouteProvider::class;
     $entity_types['field_storage_config']->setHandlerClass('route_provider', $route_providers);
   }
 }
@@ -75,7 +81,7 @@ function field_tools_entity_type_build(array &$entity_types) {
 /**
  * Implements hook_entity_operation().
  */
-function field_tools_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
+function field_tools_entity_operation(EntityInterface $entity) {
   $operations = [];
 
   if ($entity->getEntityTypeId() == 'field_config' && $entity->access('update')) {
@@ -95,7 +101,7 @@ function field_tools_entity_operation(\Drupal\Core\Entity\EntityInterface $entit
     // Field clone operation.
     $operations['clone'] = array(
       'title' => t('Clone'),
-      'url' => \Drupal\Core\Url::fromRoute("entity.field_config.{$target_entity_type_id}_field_tools_clone_form", $parameters),
+      'url' => Url::fromRoute("entity.field_config.{$target_entity_type_id}_field_tools_clone_form", $parameters),
       'weight' => 50,
     );
   }
@@ -115,7 +121,7 @@ function field_tools_entity_operation(\Drupal\Core\Entity\EntityInterface $entit
 
       $operations['clone_fields'] = array(
         'title' => t('Clone fields'),
-        'url' => \Drupal\Core\Url::fromRoute("field_tools.field_bulk_clone_{$bundle_of_entity_type_id}", $parameters),
+        'url' => Url::fromRoute("field_tools.field_bulk_clone_{$bundle_of_entity_type_id}", $parameters),
         'weight' => 50,
       );
     }
diff --git a/src/Controller/FieldGraph.php b/src/Controller/FieldGraph.php
index 8ff230a..ba75351 100644
--- a/src/Controller/FieldGraph.php
+++ b/src/Controller/FieldGraph.php
@@ -28,7 +28,7 @@ class FieldGraph implements ContainerInjectionInterface, FormInterface {
   /**
    * Creates a FieldGraph object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    */
   public function __construct(
diff --git a/src/Controller/FieldList.php b/src/Controller/FieldList.php
index 17fb93a..44bf9e5 100644
--- a/src/Controller/FieldList.php
+++ b/src/Controller/FieldList.php
@@ -29,7 +29,7 @@ class FieldList implements ContainerInjectionInterface, FormInterface {
   /**
    * Creates an FieldList object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    */
   public function __construct(
diff --git a/src/Controller/FieldListTrait.php b/src/Controller/FieldListTrait.php
index 2504f59..d408fb0 100644
--- a/src/Controller/FieldListTrait.php
+++ b/src/Controller/FieldListTrait.php
@@ -21,7 +21,7 @@ trait FieldListTrait {
    *  The name of a field on field_storage_config entities that can be used for
    *  sorting.
    *
-   * @return \Drupal\Core\Url
+   * @return Url
    *  A URL object.
    */
   protected function getSortQueryURL($sort) {
diff --git a/src/Controller/FieldReferencesList.php b/src/Controller/FieldReferencesList.php
index 848f5bc..97eac06 100644
--- a/src/Controller/FieldReferencesList.php
+++ b/src/Controller/FieldReferencesList.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\field_tools\Controller;
 
+use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityFieldManagerInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
@@ -43,7 +44,7 @@ class FieldReferencesList implements ContainerInjectionInterface, FormInterface
   /**
    * Creates an FieldReferencesList object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_manager
+   * @param EntityTypeManagerInterface $entity_manager
    *   The entity manager.
    */
   public function __construct(
@@ -110,7 +111,7 @@ class FieldReferencesList implements ContainerInjectionInterface, FormInterface
 
     $reference_storage_definitions = [];
     $referenced_types = [];
-    /** @var \Drupal\Core\Entity\EntityTypeInterface $entity_type */
+    /** @var EntityTypeInterface $entity_type */
     foreach ($this->entityTypeManager->getDefinitions() as $entity_type_id => $entity_type) {
       if ($entity_type->getGroup() != 'content') {
         continue;
@@ -218,7 +219,7 @@ class FieldReferencesList implements ContainerInjectionInterface, FormInterface
   /**
    * Returns a table row for a single field storage.
    *
-   * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $storage_definition
+   * @param FieldStorageDefinitionInterface $storage_definition
    *   The field storage.
    *
    * @return array
@@ -310,7 +311,7 @@ class FieldReferencesList implements ContainerInjectionInterface, FormInterface
   /**
    * Builds operation links for a single storage definition.
    *
-   * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $storage_definition
+   * @param FieldStorageDefinitionInterface $storage_definition
    *   The field storage.
    *
    * @return array
@@ -331,7 +332,7 @@ class FieldReferencesList implements ContainerInjectionInterface, FormInterface
    * TODO: improve this when
    * https://www.drupal.org/project/drupal/issues/3057545 is fixed.
    *
-   * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $storage_definition
+   * @param FieldStorageDefinitionInterface $storage_definition
    *   The field storage.
    *
    * @return string
diff --git a/src/DisplayCloner.php b/src/DisplayCloner.php
index c7ee7b8..9c06849 100644
--- a/src/DisplayCloner.php
+++ b/src/DisplayCloner.php
@@ -15,32 +15,32 @@ class DisplayCloner {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new FieldCloner.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(
@@ -64,7 +64,7 @@ class DisplayCloner {
    *  - Fields which are on the target only but not the source have their
    *    settings left untouched.
    *
-   * @param \Drupal\Core\Entity\EntityDisplayBase $source_entity_display
+   * @param EntityDisplayBase $source_entity_display
    *  The entity display (form or view) to clone.
    * @param string $destination_bundle
    *  The destination bundle.
diff --git a/src/DisplaySettingsCopier.php b/src/DisplaySettingsCopier.php
index d4f28b7..9ea790c 100644
--- a/src/DisplaySettingsCopier.php
+++ b/src/DisplaySettingsCopier.php
@@ -15,23 +15,23 @@ class DisplaySettingsCopier {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new FieldCloner.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler) {
diff --git a/src/FieldCloner.php b/src/FieldCloner.php
index 2612990..25b004c 100644
--- a/src/FieldCloner.php
+++ b/src/FieldCloner.php
@@ -15,23 +15,23 @@ class FieldCloner {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * Constructs a new FieldCloner.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler) {
@@ -46,7 +46,7 @@ class FieldCloner {
    * name exists on the destination bundle.
    * TODO: check for this and throw an exception.
    *
-   * @param \Drupal\field\FieldConfigInterface $field_config
+   * @param FieldConfigInterface $field_config
    *  The field config entity to clone.
    * @param string $destination_entity_type_id
    *  The entity type to clone the field to. If this is different from the
@@ -58,7 +58,7 @@ class FieldCloner {
    * @param string $destination_bundle
    *  The destination bundle.
    *
-   * @throws \Drupal\Core\Field\FieldException
+   * @throws FieldException
    *  Throws an exception if there is already a field storage with the same name
    *  on the target entity type, whose type does not match the given field.
    */
@@ -124,7 +124,7 @@ class FieldCloner {
    * @param string $display_type
    *  The entity type ID of the display entities to copy: one of
    *  'entity_view_display' or entity_form_display'.
-   * @param \Drupal\field\FieldConfigInterface $field_config
+   * @param FieldConfigInterface $field_config
    *  The field config entity to clone.
    * @param string $destination_entity_type_id
    *  The destination entity type.
diff --git a/src/FieldToolsReferencesInfo.php b/src/FieldToolsReferencesInfo.php
index 134bcd7..84c41dd 100644
--- a/src/FieldToolsReferencesInfo.php
+++ b/src/FieldToolsReferencesInfo.php
@@ -29,23 +29,23 @@ class FieldToolsReferencesInfo {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The Entity field manager.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * Creates a FieldToolsReferencesInfo instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The Entity field manager.
    */
   public function __construct(
@@ -66,7 +66,7 @@ class FieldToolsReferencesInfo {
    * @param bool $include_config_targets
    *   (optional) Whether to include references to config entity types.
    *
-   * @return \Drupal\Core\Field\FieldDefinitionInterface[]
+   * @return FieldDefinitionInterface[]
    *   An array of field definitions. This can be a mix of base fields and
    *   config fields. The keys are of the form 'ENTITY_ID:BUNDLE:FIELD_NAME'.
    */
@@ -181,7 +181,7 @@ class FieldToolsReferencesInfo {
    * TODO: improve this when
    * https://www.drupal.org/project/drupal/issues/3057545 is fixed.
    *
-   * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $storage_definition
+   * @param FieldStorageDefinitionInterface $storage_definition
    *   The field storage.
    *
    * @return string[]
@@ -208,7 +208,7 @@ class FieldToolsReferencesInfo {
   /**
    * Gets the bundles that a field references.
    *
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *
    * @return string[]
    *   Array of whose values are of the form TARGET_ENTITY_TYPE:TARGET_BUNDLE.
diff --git a/src/Form/BundleDestinationOptionsTrait.php b/src/Form/BundleDestinationOptionsTrait.php
index 48100c8..4a83d56 100644
--- a/src/Form/BundleDestinationOptionsTrait.php
+++ b/src/Form/BundleDestinationOptionsTrait.php
@@ -13,9 +13,9 @@ trait BundleDestinationOptionsTrait {
   /**
    * Gets the options for the destination entity types and bundles form element.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
    *
    * @return
diff --git a/src/Form/ConfigFieldsExportToCodeForm.php b/src/Form/ConfigFieldsExportToCodeForm.php
index 8424a53..80cddb8 100644
--- a/src/Form/ConfigFieldsExportToCodeForm.php
+++ b/src/Form/ConfigFieldsExportToCodeForm.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\field_tools\Form;
 
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Form\FormBase;
@@ -17,32 +18,32 @@ class ConfigFieldsExportToCodeForm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The field cloner.
    *
-   * @var \Drupal\field_tools\FieldCloner
+   * @var FieldCloner
    */
   protected $fieldCloner;
 
   /**
    * Creates a Clone instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\field_tools\FieldCloner $field_cloner
+   * @param FieldCloner $field_cloner
    *   The field cloner.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, FieldCloner $field_cloner) {
@@ -132,7 +133,7 @@ class ConfigFieldsExportToCodeForm extends FormBase {
       $code[] = "  ->setRequired(TRUE)";
     }
 
-    if ($field instanceof \Drupal\Core\Field\FieldStorageDefinitionInterface) {
+    if ($field instanceof FieldStorageDefinitionInterface) {
       if ($field->isRevisionable()) {
         $code[] = "  ->setRevisionable(TRUE)";
       }
diff --git a/src/Form/EntityDisplayBulkCloneForm.php b/src/Form/EntityDisplayBulkCloneForm.php
index 0b57d14..27b94c9 100644
--- a/src/Form/EntityDisplayBulkCloneForm.php
+++ b/src/Form/EntityDisplayBulkCloneForm.php
@@ -18,41 +18,41 @@ class EntityDisplayBulkCloneForm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The entity display repository service.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * The field cloner.
    *
-   * @var \Drupal\field_tools\DisplayCloner
+   * @var DisplayCloner
    */
   protected $displayCloner;
 
   /**
    * Creates a Clone instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository service.
-   * @param \Drupal\field_tools\DisplayCloner $display_cloner
+   * @param DisplayCloner $display_cloner
    *   The display cloner.
    */
   public function __construct(
diff --git a/src/Form/EntityDisplaySettingsBulkCopyForm.php b/src/Form/EntityDisplaySettingsBulkCopyForm.php
index 467f228..9d5bb2c 100644
--- a/src/Form/EntityDisplaySettingsBulkCopyForm.php
+++ b/src/Form/EntityDisplaySettingsBulkCopyForm.php
@@ -19,50 +19,50 @@ class EntityDisplaySettingsBulkCopyForm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The entity field manager service.
    *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
+   * @var EntityFieldManagerInterface
    */
   protected $entityFieldManager;
 
   /**
    * The entity display repository service.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * The field cloner.
    *
-   * @var \Drupal\field_tools\DisplaySettingsCopier
+   * @var DisplaySettingsCopier
    */
   protected $displaySettingsCopier;
 
   /**
    * Creates a Clone instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param EntityFieldManagerInterface $entity_field_manager
    *   The entity field manager service.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository
+   * @param EntityDisplayRepositoryInterface $entity_display_repository
    *   The entity display repository service.
-   * @param \Drupal\field_tools\DisplaySettingsCopier $display_settings_copier
+   * @param DisplaySettingsCopier $display_settings_copier
    *   The display settings copier.
    */
   public function __construct(
diff --git a/src/Form/FieldBulkCloneForm.php b/src/Form/FieldBulkCloneForm.php
index 4d0390e..0c7bfaa 100644
--- a/src/Form/FieldBulkCloneForm.php
+++ b/src/Form/FieldBulkCloneForm.php
@@ -19,32 +19,32 @@ class FieldBulkCloneForm extends FormBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The field cloner.
    *
-   * @var \Drupal\field_tools\FieldCloner
+   * @var FieldCloner
    */
   protected $fieldCloner;
 
   /**
    * Creates a Clone instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\field_tools\FieldCloner $field_cloner
+   * @param FieldCloner $field_cloner
    *   The field cloner.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, FieldCloner $field_cloner) {
diff --git a/src/Form/FieldConfigCloneForm.php b/src/Form/FieldConfigCloneForm.php
index 5b617ba..2046d61 100644
--- a/src/Form/FieldConfigCloneForm.php
+++ b/src/Form/FieldConfigCloneForm.php
@@ -19,32 +19,32 @@ class FieldConfigCloneForm extends EntityForm {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * The entity type bundle info service.
    *
-   * @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface
+   * @var EntityTypeBundleInfoInterface
    */
   protected $entityTypeBundleInfo;
 
   /**
    * The field cloner.
    *
-   * @var \Drupal\field_tools\FieldCloner
+   * @var FieldCloner
    */
   protected $fieldCloner;
 
   /**
    * Creates a Clone instance.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
+   * @param EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle info service.
-   * @param \Drupal\field_tools\FieldCloner $field_cloner
+   * @param FieldCloner $field_cloner
    *   The field cloner.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityTypeBundleInfoInterface $entity_type_bundle_info, FieldCloner $field_cloner) {
@@ -139,7 +139,7 @@ class FieldConfigCloneForm extends EntityForm {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   A reference to a keyed array containing the current state of the form.
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Derivative/FieldToolsLocalTask.php b/src/Plugin/Derivative/FieldToolsLocalTask.php
index eb8901a..f910230 100644
--- a/src/Plugin/Derivative/FieldToolsLocalTask.php
+++ b/src/Plugin/Derivative/FieldToolsLocalTask.php
@@ -19,25 +19,25 @@ class FieldToolsLocalTask extends DeriverBase implements ContainerDeriverInterfa
   /**
    * The route provider.
    *
-   * @var \Drupal\Core\Routing\RouteProviderInterface
+   * @var RouteProviderInterface
    */
   protected $routeProvider;
 
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Creates an FieldToolsLocalTask object.
    *
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   The route provider.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
    */
   public function __construct(RouteProviderInterface $route_provider, EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index 84d4466..ef3ad7c 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -16,14 +16,14 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Constructs a RouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager) {
