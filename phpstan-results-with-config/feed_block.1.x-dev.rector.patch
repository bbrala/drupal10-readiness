diff --git a/feed_block.info.yml b/feed_block.info.yml
index 69d91ef..8f6476f 100644
--- a/feed_block.info.yml
+++ b/feed_block.info.yml
@@ -8,5 +8,4 @@ dependencies:
   - drupal:block_content
   - drupal:node
   - drupal:link
-core: '8.x'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
diff --git a/src/EventSubscriber/FeedBlockCacheExpire.php b/src/EventSubscriber/FeedBlockCacheExpire.php
index cf6db3f..4688eda 100644
--- a/src/EventSubscriber/FeedBlockCacheExpire.php
+++ b/src/EventSubscriber/FeedBlockCacheExpire.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\feed_block\EventSubscriber;
 
+use Drupal\Core\Config\Config;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Drupal\Core\Cache\CacheableResponseInterface;
 use Drupal\Core\Cache\Context\CacheContextsManager;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -9,7 +11,6 @@ use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\PageCache\RequestPolicyInterface;
 use Drupal\Core\PageCache\ResponsePolicyInterface;
 use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 
@@ -23,35 +24,35 @@ class FeedBlockCacheExpire implements EventSubscriberInterface {
   /**
    * The language manager object for retrieving the correct language code.
    *
-   * @var \Drupal\Core\Language\LanguageManagerInterface
+   * @var LanguageManagerInterface
    */
   protected $languageManager;
 
   /**
    * A config object for the system performance configuration.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * A policy rule determining the cacheability of a request.
    *
-   * @var \Drupal\Core\PageCache\RequestPolicyInterface
+   * @var RequestPolicyInterface
    */
   protected $requestPolicy;
 
   /**
    * A policy rule determining the cacheability of the response.
    *
-   * @var \Drupal\Core\PageCache\ResponsePolicyInterface
+   * @var ResponsePolicyInterface
    */
   protected $responsePolicy;
 
   /**
    * The cache contexts manager service.
    *
-   * @var \Drupal\Core\Cache\Context\CacheContextsManager
+   * @var CacheContextsManager
    */
   protected $cacheContexts;
 
@@ -65,15 +66,15 @@ class FeedBlockCacheExpire implements EventSubscriberInterface {
   /**
    * Constructs the FeedBlockCacheExpire object.
    *
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param LanguageManagerInterface $language_manager
    *   The language manager object for retrieving the correct language code.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   A config factory for retrieving required config objects.
-   * @param \Drupal\Core\PageCache\RequestPolicyInterface $request_policy
+   * @param RequestPolicyInterface $request_policy
    *   A policy rule determining the cacheability of a request.
-   * @param \Drupal\Core\PageCache\ResponsePolicyInterface $response_policy
+   * @param ResponsePolicyInterface $response_policy
    *   A policy rule determining the cacheability of a response.
-   * @param \Drupal\Core\Cache\Context\CacheContextsManager $cache_contexts_manager
+   * @param CacheContextsManager $cache_contexts_manager
    *   The cache contexts manager service.
    * @param bool $http_response_debug_cacheability_headers
    *   (optional) Whether to send cacheability headers for debugging purposes.
@@ -90,10 +91,10 @@ class FeedBlockCacheExpire implements EventSubscriberInterface {
   /**
    * Sets extra headers on successful responses.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
+  public function onRespond(ResponseEvent $event) {
 
     $request = $event->getRequest();
     $response = $event->getResponse();
@@ -117,7 +118,7 @@ class FeedBlockCacheExpire implements EventSubscriberInterface {
    * This overrides the default logic provided by Internal Page Cache.
    * See https://www.drupal.org/project/drupal/issues/2862894
    *
-   * @param \Symfony\Component\HttpFoundation\Response $response
+   * @param Response $response
    *   A response object.
    */
   protected function setExpiresCacheLifetime(Response $response) {
diff --git a/src/Plugin/Field/FieldWidget/RSSFeedWidget.php b/src/Plugin/Field/FieldWidget/RSSFeedWidget.php
index 9432fa1..0b19f24 100644
--- a/src/Plugin/Field/FieldWidget/RSSFeedWidget.php
+++ b/src/Plugin/Field/FieldWidget/RSSFeedWidget.php
@@ -28,14 +28,14 @@ class RSSFeedWidget extends WidgetBase implements ContainerFactoryPluginInterfac
   /**
    * The date format storage.
    *
-   * @var \Drupal\Core\Entity\EntityStorageInterface
+   * @var EntityStorageInterface
    */
   protected $dateStorage;
 
   /**
    * The date formatter service.
    *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;
 
diff --git a/tests/src/FunctionalJavascript/RssTypesTest.php b/tests/src/FunctionalJavascript/RssTypesTest.php
index fd8c0f6..8f257e3 100644
--- a/tests/src/FunctionalJavascript/RssTypesTest.php
+++ b/tests/src/FunctionalJavascript/RssTypesTest.php
@@ -32,7 +32,7 @@ class RssTypesTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $admin_user = $this->drupalCreateUser([
