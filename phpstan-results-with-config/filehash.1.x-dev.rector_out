modules/contrib/filehash/filehash.drush.inc
modules/contrib/filehash/filehash.install
modules/contrib/filehash/filehash.module
modules/contrib/filehash/filehash.post_update.php
modules/contrib/filehash/filehash.tokens.inc
modules/contrib/filehash/filehash.views.inc
modules/contrib/filehash/src/Batch/CleanBatch.php
modules/contrib/filehash/src/Batch/GenerateBatch.php
modules/contrib/filehash/src/Commands/FileHashCommands.php
modules/contrib/filehash/src/EventSubscriber/FileHashConfigSubscriber.php
modules/contrib/filehash/src/Form/FileHashCleanForm.php
modules/contrib/filehash/src/Form/FileHashConfigForm.php
modules/contrib/filehash/src/Form/FileHashGenerateForm.php
modules/contrib/filehash/src/Plugin/Field/FieldFormatter/TableFormatter.php
modules/contrib/filehash/tests/src/Functional/DrushTest.php
modules/contrib/filehash/tests/src/Functional/FileHashTest.php

9 files with changes
====================

1) modules/contrib/filehash/tests/src/Functional/FileHashTest.php:94

    ---------- begin diff ----------
@@ @@

   /**
    * Tests the table with file hashes field formatter.
+   * @doesNotPerformAssertions
    */
   public function testFileHashField(): void {
     $field_name = strtolower($this->randomMachineName());
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/filehash/tests/src/Functional/DrushTest.php:25

    ---------- begin diff ----------
@@ @@

   /**
    * Tests drush commands.
+   * @doesNotPerformAssertions
    */
   public function testCommands(): void {
     $this->drush('filehash:generate');
    ----------- end diff -----------

Applied rules:
 * AddDoesNotPerformAssertionToNonAssertingTestRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


3) modules/contrib/filehash/src/Plugin/Field/FieldFormatter/TableFormatter.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\filehash\Plugin\Field\FieldFormatter;

+use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\file\Plugin\Field\FieldFormatter\DescriptionAwareFileFormatterBase;
@@ @@
   public function viewElements(FieldItemListInterface $items, $langcode) {
     $elements = [];

-    /** @var \Drupal\Core\Field\EntityReferenceFieldItemListInterface $items */
+    /** @var EntityReferenceFieldItemListInterface $items */
     if ($files = $this->getEntitiesToView($items, $langcode)) {
       $names = filehash_names();
       $header = [
@@ @@
    *
    * @param mixed[] $form
    *   The settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
    * @return mixed[]
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/filehash/src/Form/FileHashGenerateForm.php:51

    ---------- begin diff ----------
@@ @@
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/filehash/src/Form/FileHashConfigForm.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * Stores a module manager.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed[]
@@ @@
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


6) modules/contrib/filehash/src/Form/FileHashCleanForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\filehash\Form;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Url;
@@ @@
   /**
    * The database columns to be purged.
    *
-   * @var \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @var TranslatableMarkup[]
    */
   public $columns;

@@ @@
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    *
    * @return mixed[]
@@ @@
    *
    * @param mixed[] $form
    *   Form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   Form state.
    */
   public function submitForm(array &$form, FormStateInterface $form_state): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


7) modules/contrib/filehash/src/EventSubscriber/FileHashConfigSubscriber.php:15

    ---------- begin diff ----------
@@ @@
   /**
    * The cache tags invalidator.
    *
-   * @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface
+   * @var CacheTagsInvalidatorInterface
    */
   protected $cacheTagsInvalidator;

@@ @@
   /**
    * The module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;

@@ @@
   /**
    * Constructs the filehashConfigSubscriber.
    *
-   * @param \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache_tags_invalidator
+   * @param CacheTagsInvalidatorInterface $cache_tags_invalidator
    *   The cache tags invalidator.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    */
   public function __construct(CacheTagsInvalidatorInterface $cache_tags_invalidator, ModuleHandlerInterface $module_handler) {
@@ @@
   /**
    * Updates File Hash schema when needed.
    *
-   * @param \Drupal\Core\Config\ConfigCrudEvent $event
+   * @param ConfigCrudEvent $event
    *   The ConfigCrudEvent to process.
    */
   public function onSave(ConfigCrudEvent $event): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


8) modules/contrib/filehash/src/Batch/CleanBatch.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\filehash\Batch;

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * Drops disabled database columns.
  */
@@ @@
   /**
    * Returns database columns that are pending delete.
    *
-   * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+   * @return TranslatableMarkup[]
    *   Database columns.
    */
   public static function columns() {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


9) modules/contrib/filehash/filehash.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\StringTranslation\TranslatableMarkup;
 /**
  * @file
  * Generate hashes for each uploaded file.
@@ @@
 /**
  * Checks that file is not a duplicate.
  *
- * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+ * @return TranslatableMarkup[]
  *   Array of validation errors.
  */
 function filehash_validate_dedupe(FileInterface $file) {
@@ @@
 /**
  * Returns array of human-readable hash algorithm names.
  *
- * @return \Drupal\Core\StringTranslation\TranslatableMarkup[]
+ * @return TranslatableMarkup[]
  *   Hash algorithm names.
  */
 function filehash_names() {
@@ @@
 /**
  * Adds <media:hash> RSS elements to $node object.
  *
- * @param \Drupal\file\FileInterface|null $file
+ * @param FileInterface|null $file
  *   The file entity object or NULL.
- * @param \Drupal\Core\Entity\EntityInterface $node
+ * @param EntityInterface $node
  *   The node entity object.
  */
 function filehash_rss_elements($file, EntityInterface $node): void {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 9 files have been changed by Rector                                       

