diff --git a/bug_tracker.info.yml b/bug_tracker.info.yml
index f68b326..c2ee115 100644
--- a/bug_tracker.info.yml
+++ b/bug_tracker.info.yml
@@ -2,8 +2,7 @@ name: Bug tracker
 type: module
 description: 'Bug report system for development process'
 package: Development
-core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 configure: bug_tracker.settings
 dependencies:
   - drupal:block
\ No newline at end of file
diff --git a/bug_tracker.module b/bug_tracker.module
index 7519626..341dc44 100644
--- a/bug_tracker.module
+++ b/bug_tracker.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\taxonomy\Entity\Term;
 /**
  * hook_install()
  */
@@ -21,7 +22,7 @@ function bug_tracker_install() {
   ];
 
   foreach ($bugs_priorities_terms as $priority_term) {
-    $term = \Drupal\taxonomy\Entity\Term::create([
+    $term = Term::create([
       'vid' => 'bugs_priorities',
       'name' => $priority_term,
     ]);
@@ -29,7 +30,7 @@ function bug_tracker_install() {
   }
 
   foreach ($bugs_statuses_terms as $status_term) {
-    $term = \Drupal\taxonomy\Entity\Term::create([
+    $term = Term::create([
       'vid' => 'bugs_statuses',
       'name' => $status_term,
     ]);
diff --git a/composer.json b/composer.json
index 7f7875e..f3a553d 100644
--- a/composer.json
+++ b/composer.json
@@ -22,6 +22,6 @@
   },
   "require": {
     "php": ">=7.1",
-    "drupal/core": "^8"
+    "drupal/core": "^9.3 || ^10"
   }
 }
diff --git a/src/Controller/BugReportsController.php b/src/Controller/BugReportsController.php
index 99a4ac7..b7c590f 100644
--- a/src/Controller/BugReportsController.php
+++ b/src/Controller/BugReportsController.php
@@ -18,13 +18,13 @@ class BugReportsController extends ControllerBase {
   /**
    * Create bug report callback.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   Request object.
    *
-   * @return \Symfony\Component\HttpFoundation\JsonResponse
+   * @return JsonResponse
    *   Response
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   public function createBugReport(Request $request) {
 
@@ -36,7 +36,7 @@ class BugReportsController extends ControllerBase {
     $img = str_replace('data:image/png;base64,', '', $fileData);
     $img = str_replace(' ', '+', $img);
     $data = base64_decode($img);
-    $file = file_save_data($data, 'public://bug_reports/' . $file_name . '.png');
+    $file = \Drupal::service('file.repository')->writeData($data, 'public://bug_reports/' . $file_name . '.png');
 
     try {
       $bugReport = BugReportEntity::create($bugReportParams);
diff --git a/src/Entity/Controller/BugReportListBuilder.php b/src/Entity/Controller/BugReportListBuilder.php
index e20cf7d..102f1fd 100644
--- a/src/Entity/Controller/BugReportListBuilder.php
+++ b/src/Entity/Controller/BugReportListBuilder.php
@@ -21,7 +21,7 @@ class BugReportListBuilder extends EntityListBuilder {
   /**
    * The url generator.
    *
-   * @var \Drupal\Core\Routing\UrlGeneratorInterface
+   * @var UrlGeneratorInterface
    */
   protected $urlGenerator;
 
@@ -39,11 +39,11 @@ class BugReportListBuilder extends EntityListBuilder {
   /**
    * Constructs a new BugReport object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type definition.
-   * @param \Drupal\Core\Entity\EntityStorageInterface $storage
+   * @param EntityStorageInterface $storage
    *   The entity storage class.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
+   * @param UrlGeneratorInterface $url_generator
    *   The url generator.
    */
   public function __construct(EntityTypeInterface $entity_type, EntityStorageInterface $storage, UrlGeneratorInterface $url_generator) {
@@ -99,7 +99,7 @@ class BugReportListBuilder extends EntityListBuilder {
   public function getFileLink($fid) {
     $file_object = File::load($fid);
     $file_name = $file_object ? $file_object->getFilename() : '';
-    $file_url = $file_name ? Url::fromUri(file_create_url($file_object->getFileUri()))->toString() : '';
+    $file_url = $file_name ? \Drupal::service('file_url_generator')->generate($file_object->getFileUri())->toString() : '';
     $link = $file_url ? "<a href='{$file_url}' target='_blank'>{$file_name}</a>" : '';
     return $link;
   }
diff --git a/src/Plugin/Block/ReportBugBlock.php b/src/Plugin/Block/ReportBugBlock.php
index 06f3989..4910908 100644
--- a/src/Plugin/Block/ReportBugBlock.php
+++ b/src/Plugin/Block/ReportBugBlock.php
@@ -20,7 +20,7 @@ class ReportBugBlock extends BlockBase {
  /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
@@ -33,7 +33,7 @@ class ReportBugBlock extends BlockBase {
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
