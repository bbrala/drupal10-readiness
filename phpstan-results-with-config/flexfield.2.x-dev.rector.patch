diff --git a/flexfield.info.yml b/flexfield.info.yml
index 6af2a19..d27a7ca 100755
--- a/flexfield.info.yml
+++ b/flexfield.info.yml
@@ -1,7 +1,7 @@
 name: Flex Field
 type: module
 description: Create simple, but flexible, multivalue fields without the hassle of entity references.
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: Field
 dependencies:
   - field
diff --git a/src/Annotation/FlexFieldType.php b/src/Annotation/FlexFieldType.php
index f77c388..dd3e8ad 100755
--- a/src/Annotation/FlexFieldType.php
+++ b/src/Annotation/FlexFieldType.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class FlexFieldType extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -34,7 +35,7 @@ class FlexFieldType extends Plugin {
   /**
    * A short human readable description for the flexfield type.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Plugin/Field/FieldFormatter/FlexFormatter.php b/src/Plugin/Field/FieldFormatter/FlexFormatter.php
index 9ec4b48..72d60f0 100755
--- a/src/Plugin/Field/FieldFormatter/FlexFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FlexFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldFormatter;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -57,7 +58,7 @@ class FlexFormatter extends FlexFormatterBase {
     ];
 
     $label_display = $this->getSetting('label_display');
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $form['label_display'][$name] = [
         '#type' => 'select',
@@ -79,7 +80,7 @@ class FlexFormatter extends FlexFormatterBase {
     $summary = [];
 
     $label_display = $this->getSetting('label_display');
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $summary[] = t('@label label display: @label_display', [
         '@label' => $flexitem->getLabel(),
@@ -93,7 +94,7 @@ class FlexFormatter extends FlexFormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
@@ -111,7 +112,7 @@ class FlexFormatter extends FlexFormatterBase {
     ];
     $label_display = $this->getSetting('label_display');
 
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $output['#items'][] = [
         'name' => $name,
diff --git a/src/Plugin/Field/FieldFormatter/FlexFormatterBase.php b/src/Plugin/Field/FieldFormatter/FlexFormatterBase.php
index 4d37366..e3ba3ee 100755
--- a/src/Plugin/Field/FieldFormatter/FlexFormatterBase.php
+++ b/src/Plugin/Field/FieldFormatter/FlexFormatterBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldFormatter;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemInterface;
@@ -72,7 +73,7 @@ abstract class FlexFormatterBase extends FormatterBase implements ContainerFacto
   /**
    * Get the flexfield items for this field.
    *
-   * @return \Drupal\flexfield\Plugin\FlexFieldTypeInterface[]
+   * @return FlexFieldTypeInterface[]
    */
   public function getFlexFieldItems() {
     return $this->flexFieldManager->getFlexFieldItems($this->fieldDefinition->getSettings());
diff --git a/src/Plugin/Field/FieldFormatter/FlexInlineFormatter.php b/src/Plugin/Field/FieldFormatter/FlexInlineFormatter.php
index 6ea3b4a..54e2d68 100755
--- a/src/Plugin/Field/FieldFormatter/FlexInlineFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FlexInlineFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldFormatter;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -97,7 +98,7 @@ class FlexInlineFormatter extends FlexFormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
@@ -107,7 +108,7 @@ class FlexInlineFormatter extends FlexFormatterBase {
 
     $output = [];
 
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       if ($this->getSetting('show_labels')) {
         $output[] = implode($this->getSetting('label_separator'), [
diff --git a/src/Plugin/Field/FieldFormatter/FlexListFormatter.php b/src/Plugin/Field/FieldFormatter/FlexListFormatter.php
index 558cb43..61fb233 100755
--- a/src/Plugin/Field/FieldFormatter/FlexListFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FlexListFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldFormatter;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -76,7 +77,7 @@ class FlexListFormatter extends FlexFormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
@@ -97,7 +98,7 @@ class FlexListFormatter extends FlexFormatterBase {
       ],
     ];
 
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $output['#items'][] = [
         '#markup' => $flexitem->getLabel() . ': ' . $flexitem->value($item),
diff --git a/src/Plugin/Field/FieldFormatter/FlexTableFormatter.php b/src/Plugin/Field/FieldFormatter/FlexTableFormatter.php
index 63510c7..0b994a0 100755
--- a/src/Plugin/Field/FieldFormatter/FlexTableFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FlexTableFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldFormatter;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -59,7 +60,7 @@ class FlexTableFormatter extends FlexFormatterBase {
     $component = Html::cleanCssIdentifier($this->fieldDefinition->get('field_name'));
     $flexitems = $this->getFlexFieldItems();
     $header = [];
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($flexitems as $flexitem) {
       $header[] = $flexitem->getLabel();
     }
diff --git a/src/Plugin/Field/FieldFormatter/FlexTemplateFormatter.php b/src/Plugin/Field/FieldFormatter/FlexTemplateFormatter.php
index 150dbaa..9ae9e92 100755
--- a/src/Plugin/Field/FieldFormatter/FlexTemplateFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/FlexTemplateFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldFormatter;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
@@ -49,7 +50,7 @@ class FlexTemplateFormatter extends FlexFormatterBase {
     $tokens = [
       '#theme' => 'item_list',
     ];
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $label = $flexitem->getLabel();
       $tokens['#items'][] = "[$name]: $label value";
@@ -81,7 +82,7 @@ class FlexTemplateFormatter extends FlexFormatterBase {
   /**
    * Generate the output appropriate for one field item.
    *
-   * @param \Drupal\Core\Field\FieldItemInterface $item
+   * @param FieldItemInterface $item
    *   One field item.
    *
    * @return string
@@ -90,7 +91,7 @@ class FlexTemplateFormatter extends FlexFormatterBase {
   protected function viewValue(FieldItemInterface $item) {
     $output = '';
     $replacements = [];
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $replacements["[$name]"] = $flexitem->value($item);
       $replacements["[$name:label]"] = $flexitem->getLabel();
diff --git a/src/Plugin/Field/FieldType/FlexItem.php b/src/Plugin/Field/FieldType/FlexItem.php
index 3f4d117..de7241f 100755
--- a/src/Plugin/Field/FieldType/FlexItem.php
+++ b/src/Plugin/Field/FieldType/FlexItem.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldType;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
+use Drupal\flexfield\Plugin\FlexFieldTypeManagerInterface;
 use Drupal\Component\Utility\Random;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemBase;
@@ -425,7 +427,7 @@ class FlexItem extends FieldItemBase {
       $field_settings = $this->getSetting('field_settings');
     }
 
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface[] $flexitems */
+    /** @var FlexFieldTypeInterface[] $flexitems */
     $flexitems = $this->getFlexFieldManager()->getFlexFieldItems($settings);
 
     $wrapper_id = 'flexfield-settings-wrapper';
@@ -455,7 +457,7 @@ class FlexItem extends FieldItemBase {
     ];
 
     // Build the table rows and columns.
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($flexitems as $name => $flexitem) {
       $definition = $flexitem->getPluginDefinition();
       $weight = isset($field_settings[$name]['weight']) ? $field_settings[$name]['weight'] : 0;
@@ -525,7 +527,7 @@ class FlexItem extends FieldItemBase {
   /**
    * Get the flexfield_type manager plugin.
    *
-   * @return \Drupal\flexfield\Plugin\FlexFieldTypeManagerInterface
+   * @return FlexFieldTypeManagerInterface
    */
   public function getFlexFieldManager() {
     return \Drupal::service('plugin.manager.flexfield_type');
diff --git a/src/Plugin/Field/FieldWidget/FlexStackedWidget.php b/src/Plugin/Field/FieldWidget/FlexStackedWidget.php
index d3838b0..251af47 100755
--- a/src/Plugin/Field/FieldWidget/FlexStackedWidget.php
+++ b/src/Plugin/Field/FieldWidget/FlexStackedWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldWidget;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\WidgetBase;
@@ -35,7 +36,7 @@ class FlexStackedWidget extends FlexWidgetBase {
 
     $element = parent::formElement($items, $delta, $element, $form, $form_state);
 
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $element[$name] = $flexitem->widget($items, $delta, $element, $form, $form_state);
     }
diff --git a/src/Plugin/Field/FieldWidget/FlexWidget.php b/src/Plugin/Field/FieldWidget/FlexWidget.php
index 27bec20..8c5c4ca 100755
--- a/src/Plugin/Field/FieldWidget/FlexWidget.php
+++ b/src/Plugin/Field/FieldWidget/FlexWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldWidget;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Field\FieldItemListInterface;
@@ -77,7 +78,7 @@ class FlexWidget extends FlexWidgetBase {
     ];
 
     $proportions = $this->getSettings()['proportions'];
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $elements['proportions'][$name] = [
         '#type' => 'select',
@@ -143,7 +144,7 @@ class FlexWidget extends FlexWidgetBase {
     $element['wrapper_prefix']['#markup'] = '<div class="' . implode(' ', $classes) . '">';
 
     $proportions = $this->getSettings()['proportions'];
-    /** @var \Drupal\flexfield\Plugin\FlexFieldTypeInterface $flexitem */
+    /** @var FlexFieldTypeInterface $flexitem */
     foreach ($this->getFlexFieldItems() as $name => $flexitem) {
       $element[$name] = $flexitem->widget($items, $delta, $element, $form, $form_state);
       $element[$name]['#attributes']['class'][] = 'flexfield-inline__field';
diff --git a/src/Plugin/Field/FieldWidget/FlexWidgetBase.php b/src/Plugin/Field/FieldWidget/FlexWidgetBase.php
index 8df7a98..307d867 100755
--- a/src/Plugin/Field/FieldWidget/FlexWidgetBase.php
+++ b/src/Plugin/Field/FieldWidget/FlexWidgetBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\flexfield\Plugin\Field\FieldWidget;
 
+use Drupal\flexfield\Plugin\FlexFieldTypeInterface;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Field\WidgetBase;
@@ -17,7 +18,7 @@ abstract class FlexWidgetBase extends WidgetBase implements ContainerFactoryPlug
   /**
    * The flexfield manager
    *
-   * @var \Drupal\flexfield\Plugin\FlexFieldTypeManagerInterface
+   * @var FlexFieldTypeManagerInterface
    */
   protected $flexFieldManager;
 
@@ -105,7 +106,7 @@ abstract class FlexWidgetBase extends WidgetBase implements ContainerFactoryPlug
   /**
    * Get the flexfield items for this field.
    *
-   * @return \Drupal\flexfield\Plugin\FlexFieldTypeInterface[]
+   * @return FlexFieldTypeInterface[]
    */
   public function getFlexFieldItems() {
     return $this->flexFieldManager->getFlexFieldItems($this->fieldDefinition->getSettings());
diff --git a/src/Plugin/FlexFieldTypeInterface.php b/src/Plugin/FlexFieldTypeInterface.php
index ad03b75..d1fb6ba 100755
--- a/src/Plugin/FlexFieldTypeInterface.php
+++ b/src/Plugin/FlexFieldTypeInterface.php
@@ -35,7 +35,7 @@ interface FlexFieldTypeInterface extends PluginInspectionInterface {
    *   The form where the settings form is being included in. Provided as a
    *   reference. Implementations of this method should return a new form
    *   element which will be inserted into the main settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the (entire) configuration form.
    *
    * @return array
@@ -50,7 +50,7 @@ interface FlexFieldTypeInterface extends PluginInspectionInterface {
    *   The form where the settings form is being included in. Provided as a
    *   reference. Implementations of this method should return a new form
    *   element which will be inserted into the main settings form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state of the (entire) configuration form.
    *
    * @return array
diff --git a/src/Plugin/FlexFieldTypeManager.php b/src/Plugin/FlexFieldTypeManager.php
index 6270309..40123ea 100755
--- a/src/Plugin/FlexFieldTypeManager.php
+++ b/src/Plugin/FlexFieldTypeManager.php
@@ -20,9 +20,9 @@ class FlexFieldTypeManager extends DefaultPluginManager implements FlexFieldType
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/FlexFieldTypeManagerInterface.php b/src/Plugin/FlexFieldTypeManagerInterface.php
index 70b5da1..65ab477 100755
--- a/src/Plugin/FlexFieldTypeManagerInterface.php
+++ b/src/Plugin/FlexFieldTypeManagerInterface.php
@@ -13,7 +13,7 @@ interface FlexFieldTypeManagerInterface {
    * @param  array $settings
    *   The array of Drupal\flexfield\Plugin\Field\FieldType\FlexItem settings.
    *
-   * @return \Drupal\flexfield\Plugin\FlexFieldTypeInterface[]
+   * @return FlexFieldTypeInterface[]
    */
   public function getFlexFieldItems(array $settings);
 
diff --git a/tests/src/Functional/LoadTest.php b/tests/src/Functional/LoadTest.php
index 5b73e25..6dbf4f9 100755
--- a/tests/src/Functional/LoadTest.php
+++ b/tests/src/Functional/LoadTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\flexfield\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 
@@ -24,14 +25,14 @@ class LoadTest extends BrowserTestBase {
   /**
    * A user with permission to administer site configuration.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $user;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->user = $this->drupalCreateUser(['administer site configuration']);
     $this->drupalLogin($this->user);
@@ -42,7 +43,7 @@ class LoadTest extends BrowserTestBase {
    */
   public function testLoad() {
     $this->drupalGet(Url::fromRoute('<front>'));
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);
   }
 
 }
