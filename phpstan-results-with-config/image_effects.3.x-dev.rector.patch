diff --git a/image_effects.api.php b/image_effects.api.php
index 919942f..d53089e 100644
--- a/image_effects.api.php
+++ b/image_effects.api.php
@@ -12,7 +12,7 @@ use Drupal\image\ConfigurableImageEffectBase;
  *
  * @param string $text
  *   The text string to be altered.
- * @param \Drupal\image\ConfigurableImageEffectBase $image_effect
+ * @param ConfigurableImageEffectBase $image_effect
  *   The Text Overlay image effect plugin for which text need to be altered.
  */
 function hook_image_effects_text_overlay_text_alter(&$text, ConfigurableImageEffectBase $image_effect) {
diff --git a/src/Commands/ImageEffectsCommands.php b/src/Commands/ImageEffectsCommands.php
index f368618..b4b4fac 100644
--- a/src/Commands/ImageEffectsCommands.php
+++ b/src/Commands/ImageEffectsCommands.php
@@ -18,23 +18,23 @@ class ImageEffectsCommands extends DrushCommands {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private $entityTypeManager;
 
   /**
    * The image effects converter.
    *
-   * @var \Drupal\image_effects\ImageEffectsConverter
+   * @var ImageEffectsConverter
    */
   private $imageEffectsConverter;
 
   /**
    * Constructs an ImageEffectsCommands object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\image_effects\ImageEffectsConverter $image_effects_converter
+   * @param ImageEffectsConverter $image_effects_converter
    *   The image effects converter.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, ImageEffectsConverter $image_effects_converter) {
@@ -154,7 +154,7 @@ class ImageEffectsCommands extends DrushCommands {
    *   When not null, the query will be limited to ImageStyle entities whose
    *   label contain the value indicated.
    *
-   * @return \Drupal\Core\Entity\Query\QueryInterface
+   * @return QueryInterface
    *   The entity query.
    */
   private function getImageStyleQuery(?string $name_contains, ?string $label_contains): QueryInterface {
diff --git a/src/Element/ImageEffectsColor.php b/src/Element/ImageEffectsColor.php
index db67f26..c9891bf 100644
--- a/src/Element/ImageEffectsColor.php
+++ b/src/Element/ImageEffectsColor.php
@@ -73,7 +73,7 @@ class ImageEffectsColor extends FormElement {
    *      hidden, and the value returned is NULL.
    *     '#allow_opacity' - if set to TRUE, a textfield is displayed to capture
    *      the 'opacity' value, as a percentage.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Element/ImageEffectsPxPerc.php b/src/Element/ImageEffectsPxPerc.php
index 382a574..8d20f95 100644
--- a/src/Element/ImageEffectsPxPerc.php
+++ b/src/Element/ImageEffectsPxPerc.php
@@ -51,7 +51,7 @@ class ImageEffectsPxPerc extends FormElement {
    *
    * @param array $element
    *   The form element to process.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 5649578..9a1cf1a 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -23,34 +23,34 @@ class SettingsForm extends ConfigFormBase {
   /**
    * The color selector plugin manager.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginManager
+   * @var ImageEffectsPluginManager
    */
   protected $colorManager;
 
   /**
    * The image selector plugin manager.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginManager
+   * @var ImageEffectsPluginManager
    */
   protected $imageManager;
 
   /**
    * The font selector plugin manager.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginManager
+   * @var ImageEffectsPluginManager
    */
   protected $fontManager;
 
   /**
    * Constructs the class for image_effects settings form.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The factory for configuration objects.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginManager $color_plugin_manager
+   * @param ImageEffectsPluginManager $color_plugin_manager
    *   The color selector plugin manager.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginManager $image_plugin_manager
+   * @param ImageEffectsPluginManager $image_plugin_manager
    *   The image selector plugin manager.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginManager $font_plugin_manager
+   * @param ImageEffectsPluginManager $font_plugin_manager
    *   The font selector plugin manager.
    */
   public function __construct(ConfigFactoryInterface $config_factory, ImageEffectsPluginManager $color_plugin_manager, ImageEffectsPluginManager $image_plugin_manager, ImageEffectsPluginManager $font_plugin_manager) {
diff --git a/src/ImageEffectsConverter.php b/src/ImageEffectsConverter.php
index c98fb9f..34d8b4c 100644
--- a/src/ImageEffectsConverter.php
+++ b/src/ImageEffectsConverter.php
@@ -12,7 +12,7 @@ class ImageEffectsConverter {
   /**
    * Converts a Drupal core's Rotate effect(s) to Image Effects.
    *
-   * @param \Drupal\image\Entity\ImageStyle $style
+   * @param ImageStyle $style
    *   The ImageStyle containing the effect(s) to convert.
    *
    * @return bool
@@ -62,7 +62,7 @@ class ImageEffectsConverter {
   /**
    * Converts an Image Effects' Rotate effect(s) to Drupal core.
    *
-   * @param \Drupal\image\Entity\ImageStyle $style
+   * @param ImageStyle $style
    *   The ImageStyle containing the effect(s) to convert.
    *
    * @return bool
diff --git a/src/ImageEffectsUninstallValidator.php b/src/ImageEffectsUninstallValidator.php
index c0bd793..dc046bc 100644
--- a/src/ImageEffectsUninstallValidator.php
+++ b/src/ImageEffectsUninstallValidator.php
@@ -17,16 +17,16 @@ class ImageEffectsUninstallValidator implements ModuleUninstallValidatorInterfac
   /**
    * The configuration factory.
    *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * Constructs a new ImageEffectsUninstallValidator.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The string translation service.
    */
   public function __construct(ConfigFactoryInterface $config_factory, TranslationInterface $string_translation) {
diff --git a/src/Plugin/ImageEffect/AspectSwitcherImageEffect.php b/src/Plugin/ImageEffect/AspectSwitcherImageEffect.php
index c9f5b0b..4e28b86 100644
--- a/src/Plugin/ImageEffect/AspectSwitcherImageEffect.php
+++ b/src/Plugin/ImageEffect/AspectSwitcherImageEffect.php
@@ -202,7 +202,7 @@ class AspectSwitcherImageEffect extends ConfigurableImageEffectBase {
    * @param string $image_style_name
    *   The name of the image style to get.
    *
-   * @return \Drupal\image\Entity\ImageStyle|null|false
+   * @return ImageStyle|null|false
    *   The image style object, or NULL if the name is NULL, or FALSE if the
    *   image style went missing from the db.
    */
diff --git a/src/Plugin/ImageEffect/AutoOrientImageEffect.php b/src/Plugin/ImageEffect/AutoOrientImageEffect.php
index 12703be..0115998 100644
--- a/src/Plugin/ImageEffect/AutoOrientImageEffect.php
+++ b/src/Plugin/ImageEffect/AutoOrientImageEffect.php
@@ -31,7 +31,7 @@ class AutoOrientImageEffect extends ConfigurableImageEffectBase implements Conta
   /**
    * The file metadata manager service.
    *
-   * @var \Drupal\file_mdm\FileMetadataManagerInterface
+   * @var FileMetadataManagerInterface
    */
   protected $fileMetadataManager;
 
@@ -44,9 +44,9 @@ class AutoOrientImageEffect extends ConfigurableImageEffectBase implements Conta
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\file_mdm\FileMetadataManagerInterface $file_metadata_manager
+   * @param FileMetadataManagerInterface $file_metadata_manager
    *   The file metadata manager service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, FileMetadataManagerInterface $file_metadata_manager) {
diff --git a/src/Plugin/ImageEffect/BackgroundImageEffect.php b/src/Plugin/ImageEffect/BackgroundImageEffect.php
index e63f05d..1135eeb 100644
--- a/src/Plugin/ImageEffect/BackgroundImageEffect.php
+++ b/src/Plugin/ImageEffect/BackgroundImageEffect.php
@@ -26,14 +26,14 @@ class BackgroundImageEffect extends ConfigurableImageEffectBase implements Conta
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;
 
@@ -46,11 +46,11 @@ class BackgroundImageEffect extends ConfigurableImageEffectBase implements Conta
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface $image_selector
+   * @param ImageEffectsPluginBaseInterface $image_selector
    *   The image selector plugin.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsPluginBaseInterface $image_selector) {
diff --git a/src/Plugin/ImageEffect/MaskImageEffect.php b/src/Plugin/ImageEffect/MaskImageEffect.php
index eb1d27d..ef782f3 100644
--- a/src/Plugin/ImageEffect/MaskImageEffect.php
+++ b/src/Plugin/ImageEffect/MaskImageEffect.php
@@ -28,14 +28,14 @@ class MaskImageEffect extends ConfigurableImageEffectBase implements ContainerFa
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;
 
@@ -48,11 +48,11 @@ class MaskImageEffect extends ConfigurableImageEffectBase implements ContainerFa
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface $image_selector
+   * @param ImageEffectsPluginBaseInterface $image_selector
    *   The image selector plugin.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsPluginBaseInterface $image_selector) {
diff --git a/src/Plugin/ImageEffect/TextOverlayImageEffect.php b/src/Plugin/ImageEffect/TextOverlayImageEffect.php
index eba1b82..a445ff8 100644
--- a/src/Plugin/ImageEffect/TextOverlayImageEffect.php
+++ b/src/Plugin/ImageEffect/TextOverlayImageEffect.php
@@ -42,28 +42,28 @@ class TextOverlayImageEffect extends ConfigurableImageEffectBase implements Cont
   /**
    * The module handler service.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected $moduleHandler;
 
   /**
    * The Image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The font selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsFontSelectorPluginInterface
+   * @var ImageEffectsFontSelectorPluginInterface
    */
   protected $fontSelector;
 
   /**
    * The token resolution service.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected $token;
 
@@ -76,15 +76,15 @@ class TextOverlayImageEffect extends ConfigurableImageEffectBase implements Cont
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsFontSelectorPluginInterface $font_selector_plugin
+   * @param ImageEffectsFontSelectorPluginInterface $font_selector_plugin
    *   The font selector plugin.
-   * @param \Drupal\Core\Utility\Token $token_service
+   * @param Token $token_service
    *   The token resolution service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsFontSelectorPluginInterface $font_selector_plugin, Token $token_service, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/ImageEffect/WatermarkImageEffect.php b/src/Plugin/ImageEffect/WatermarkImageEffect.php
index 6402e9b..d51cf8e 100644
--- a/src/Plugin/ImageEffect/WatermarkImageEffect.php
+++ b/src/Plugin/ImageEffect/WatermarkImageEffect.php
@@ -28,14 +28,14 @@ class WatermarkImageEffect extends ConfigurableImageEffectBase implements Contai
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;
 
@@ -48,11 +48,11 @@ class WatermarkImageEffect extends ConfigurableImageEffectBase implements Contai
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   A logger instance.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface $image_selector
+   * @param ImageEffectsPluginBaseInterface $image_selector
    *   The image selector plugin.
    */
   public function __construct(array $configuration, $plugin_id, array $plugin_definition, LoggerInterface $logger, ImageFactory $image_factory, ImageEffectsPluginBaseInterface $image_selector) {
diff --git a/src/Plugin/ImageEffectsPluginBase.php b/src/Plugin/ImageEffectsPluginBase.php
index 78df6c9..ac2fa94 100644
--- a/src/Plugin/ImageEffectsPluginBase.php
+++ b/src/Plugin/ImageEffectsPluginBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\image_effects\Plugin;
 
+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Plugin\PluginBase;
@@ -23,14 +24,14 @@ abstract class ImageEffectsPluginBase extends PluginBase implements ImageEffects
   /**
    * Configuration object for image_effects.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
   /**
    * The image_effects logger.
    *
-   * @var \Psr\Log\LoggerInterface
+   * @var LoggerInterface
    */
   protected $logger;
 
@@ -43,9 +44,9 @@ abstract class ImageEffectsPluginBase extends PluginBase implements ImageEffects
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The image_effects logger.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, LoggerInterface $logger) {
diff --git a/src/Plugin/ImageEffectsPluginManager.php b/src/Plugin/ImageEffectsPluginManager.php
index f826092..98aecdd 100644
--- a/src/Plugin/ImageEffectsPluginManager.php
+++ b/src/Plugin/ImageEffectsPluginManager.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\image_effects\Plugin;
 
+use Drupal\Core\Config\Config;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -17,7 +18,7 @@ class ImageEffectsPluginManager extends DefaultPluginManager {
   /**
    * The configuration object.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;
 
@@ -27,13 +28,13 @@ class ImageEffectsPluginManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler.
    * @param string $type
    *   The plugin type, for example 'color_selector'.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, $type, ConfigFactoryInterface $config_factory) {
@@ -63,7 +64,7 @@ class ImageEffectsPluginManager extends DefaultPluginManager {
    * @param string $plugin_id
    *   The plugin id.
    *
-   * @return \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @return ImageEffectsPluginBaseInterface
    *   An instance of the specified 'image_effects' plugin.
    */
   public function getPlugin($plugin_id = NULL) {
diff --git a/src/Plugin/ImageToolkit/Operation/gd/GDOperationTrait.php b/src/Plugin/ImageToolkit/Operation/gd/GDOperationTrait.php
index 4dda4d7..04709f9 100644
--- a/src/Plugin/ImageToolkit/Operation/gd/GDOperationTrait.php
+++ b/src/Plugin/ImageToolkit/Operation/gd/GDOperationTrait.php
@@ -62,7 +62,7 @@ trait GDOperationTrait {
    * GD requires a simple array of point coordinates in its
    * imagepolygon() function.
    *
-   * @param \Drupal\image_effects\Component\PositionedRectangle $rect
+   * @param PositionedRectangle $rect
    *   A PositionedRectangle object.
    *
    * @return array
@@ -404,7 +404,7 @@ trait GDOperationTrait {
    * @param string $height
    *   The height of the crop.
    *
-   * @return \Drupal\image_effects\Component\PositionedRectangle
+   * @return PositionedRectangle
    *   The PositionedRectangle object marking the crop area.
    */
   protected function getEntropyCropBySlicing($src, $width, $height) {
@@ -493,7 +493,7 @@ trait GDOperationTrait {
    * @param int $grid_sub_columns
    *   The number of columns of the sub-grid for the sum calculation.
    *
-   * @return \Drupal\image_effects\Component\PositionedRectangle
+   * @return PositionedRectangle
    *   The PositionedRectangle object marking the crop area.
    */
   protected function getEntropyCropByGridding($src, $crop_width, $crop_height, $simulate, $grid_width, $grid_height, $grid_rows, $grid_columns, $grid_sub_rows, $grid_sub_columns) {
diff --git a/src/Plugin/ImageToolkit/Operation/gd/TextToWrapper.php b/src/Plugin/ImageToolkit/Operation/gd/TextToWrapper.php
index 1936791..2d9dac0 100644
--- a/src/Plugin/ImageToolkit/Operation/gd/TextToWrapper.php
+++ b/src/Plugin/ImageToolkit/Operation/gd/TextToWrapper.php
@@ -288,7 +288,7 @@ class TextToWrapper extends GDImageToolkitOperationBase {
    *
    * Credit to Ruquay K Calloway.
    *
-   * @param \Drupal\image_effects\Component\PositionedRectangle $rect
+   * @param PositionedRectangle $rect
    *   A PositionedRectangle object, including basepoint.
    * @param string $rgba
    *   RGBA color of the rectangle.
diff --git a/src/Plugin/image_effects/FontSelector/Basic.php b/src/Plugin/image_effects/FontSelector/Basic.php
index 549b189..e4e07f0 100644
--- a/src/Plugin/image_effects/FontSelector/Basic.php
+++ b/src/Plugin/image_effects/FontSelector/Basic.php
@@ -27,7 +27,7 @@ class Basic extends ImageEffectsPluginBase implements ImageEffectsFontSelectorPl
   /**
    * The file metadata manager service.
    *
-   * @var \Drupal\file_mdm\FileMetadataManagerInterface
+   * @var FileMetadataManagerInterface
    */
   protected $fileMetadataManager;
 
@@ -40,11 +40,11 @@ class Basic extends ImageEffectsPluginBase implements ImageEffectsFontSelectorPl
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The image_effects logger.
-   * @param \Drupal\file_mdm\FileMetadataManagerInterface $file_metadata_manager
+   * @param FileMetadataManagerInterface $file_metadata_manager
    *   The file metadata manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, LoggerInterface $logger, FileMetadataManagerInterface $file_metadata_manager) {
diff --git a/src/Plugin/image_effects/ImageSelector/Dropdown.php b/src/Plugin/image_effects/ImageSelector/Dropdown.php
index 82873d0..9d60a3c 100644
--- a/src/Plugin/image_effects/ImageSelector/Dropdown.php
+++ b/src/Plugin/image_effects/ImageSelector/Dropdown.php
@@ -29,14 +29,14 @@ class Dropdown extends ImageEffectsPluginBase {
   /**
    * The image factory service.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The messenger.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   protected $messenger;
 
@@ -49,13 +49,13 @@ class Dropdown extends ImageEffectsPluginBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Psr\Log\LoggerInterface $logger
+   * @param LoggerInterface $logger
    *   The image_effects logger.
-   * @param \Drupal\Core\Image\ImageFactory $image_factory
+   * @param ImageFactory $image_factory
    *   The image factory service.
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory, LoggerInterface $logger, ImageFactory $image_factory, MessengerInterface $messenger) {
diff --git a/src/ProxyClass/ImageEffectsUninstallValidator.php b/src/ProxyClass/ImageEffectsUninstallValidator.php
index 5ef0e98..dd6aacc 100644
--- a/src/ProxyClass/ImageEffectsUninstallValidator.php
+++ b/src/ProxyClass/ImageEffectsUninstallValidator.php
@@ -7,15 +7,19 @@
 
 namespace Drupal\image_effects\ProxyClass {
 
+    use Drupal\Core\Extension\ModuleUninstallValidatorInterface;
+    use Drupal\Core\DependencyInjection\DependencySerializationTrait;
+    use Symfony\Component\DependencyInjection\ContainerInterface;
+    use Drupal\Core\StringTranslation\TranslationInterface;
     /**
      * Provides a proxy class for \Drupal\image_effects\ImageEffectsUninstallValidator.
      *
      * @see \Drupal\Component\ProxyBuilder
      */
-    class ImageEffectsUninstallValidator implements \Drupal\Core\Extension\ModuleUninstallValidatorInterface
+    class ImageEffectsUninstallValidator implements ModuleUninstallValidatorInterface
     {
 
-        use \Drupal\Core\DependencyInjection\DependencySerializationTrait;
+        use DependencySerializationTrait;
 
         /**
          * The id of the original proxied service.
@@ -34,19 +38,19 @@ namespace Drupal\image_effects\ProxyClass {
         /**
          * The service container.
          *
-         * @var \Symfony\Component\DependencyInjection\ContainerInterface
+         * @var ContainerInterface
          */
         protected $container;
 
         /**
          * Constructs a ProxyClass Drupal proxy object.
          *
-         * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+         * @param ContainerInterface $container
          *   The container.
          * @param string $drupal_proxy_original_service_id
          *   The service ID of the original service.
          */
-        public function __construct(\Symfony\Component\DependencyInjection\ContainerInterface $container, $drupal_proxy_original_service_id)
+        public function __construct(ContainerInterface $container, $drupal_proxy_original_service_id)
         {
             $this->container = $container;
             $this->drupalProxyOriginalServiceId = $drupal_proxy_original_service_id;
@@ -78,7 +82,7 @@ namespace Drupal\image_effects\ProxyClass {
         /**
          * {@inheritdoc}
          */
-        public function setStringTranslation(\Drupal\Core\StringTranslation\TranslationInterface $translation)
+        public function setStringTranslation(TranslationInterface $translation)
         {
             return $this->lazyLoadItself()->setStringTranslation($translation);
         }
diff --git a/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/FontSelectionImageEffect.php b/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/FontSelectionImageEffect.php
index adc04ca..3498b51 100644
--- a/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/FontSelectionImageEffect.php
+++ b/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/FontSelectionImageEffect.php
@@ -23,7 +23,7 @@ class FontSelectionImageEffect extends ConfigurableImageEffectBase implements Co
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsFontSelectorPluginInterface
+   * @var ImageEffectsFontSelectorPluginInterface
    */
   protected $fontSelector;
 
diff --git a/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/ImageSelectionImageEffect.php b/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/ImageSelectionImageEffect.php
index a0ba801..6740eb2 100644
--- a/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/ImageSelectionImageEffect.php
+++ b/tests/modules/image_effects_module_test/src/Plugin/ImageEffect/ImageSelectionImageEffect.php
@@ -23,7 +23,7 @@ class ImageSelectionImageEffect extends ConfigurableImageEffectBase implements C
   /**
    * The image selector plugin.
    *
-   * @var \Drupal\image_effects\Plugin\ImageEffectsPluginBaseInterface
+   * @var ImageEffectsPluginBaseInterface
    */
   protected $imageSelector;
 
diff --git a/tests/src/Functional/Effect/AspectSwitcherTest.php b/tests/src/Functional/Effect/AspectSwitcherTest.php
index 05eb017..d553bf1 100644
--- a/tests/src/Functional/Effect/AspectSwitcherTest.php
+++ b/tests/src/Functional/Effect/AspectSwitcherTest.php
@@ -118,7 +118,7 @@ class AspectSwitcherTest extends ImageEffectsTestBase {
     // landscape.
     // Check that ::transformDimensions returns expected dimensions.
     $original_landscape_image = $image_factory->get($original_landscape_uri);
-    $derivative_landscape_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_landscape_uri));
+    $derivative_landscape_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_landscape_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
@@ -138,7 +138,7 @@ class AspectSwitcherTest extends ImageEffectsTestBase {
     // portrait.
     // Check that ::transformDimensions returns expected dimensions.
     $original_portrait_image = $image_factory->get($original_portrait_uri);
-    $derivative_portrait_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_portrait_uri));
+    $derivative_portrait_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_portrait_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
@@ -190,7 +190,7 @@ class AspectSwitcherTest extends ImageEffectsTestBase {
     // Check that no changes are made when source image is portrait.
     // Check that ::transformDimensions returns expected dimensions.
     $original_portrait_image = $image_factory->get($original_portrait_uri);
-    $derivative_portrait_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_portrait_uri));
+    $derivative_portrait_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_portrait_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => $this->testImageStyleName,
diff --git a/tests/src/Functional/Effect/AutoOrientTest.php b/tests/src/Functional/Effect/AutoOrientTest.php
index b6fb809..f15e519 100644
--- a/tests/src/Functional/Effect/AutoOrientTest.php
+++ b/tests/src/Functional/Effect/AutoOrientTest.php
@@ -90,7 +90,7 @@ class AutoOrientTest extends ImageEffectsTestBase {
       $this->assertEquals($data['original_height'], $image->getHeight());
 
       // Get expected derivative URL.
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
 
       // Check that ::transformDimensions returns expected dimensions.
       $variables = [
@@ -137,7 +137,7 @@ class AutoOrientTest extends ImageEffectsTestBase {
 
     $test_data = [];
     for ($i = 1; $i < 9; $i++) {
-      $test_data[$i]['test_file'] = drupal_get_path('module', 'image_effects') . "/tests/images/image-test-exif-orientation-$i.jpeg";
+      $test_data[$i]['test_file'] = \Drupal::service('extension.list.module')->getPath('image_effects') . "/tests/images/image-test-exif-orientation-$i.jpeg";
     }
 
     foreach ($test_data as $data) {
diff --git a/tests/src/Functional/Effect/BackgroundTest.php b/tests/src/Functional/Effect/BackgroundTest.php
index cd00ff5..3112ac5 100644
--- a/tests/src/Functional/Effect/BackgroundTest.php
+++ b/tests/src/Functional/Effect/BackgroundTest.php
@@ -55,7 +55,7 @@ class BackgroundTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/ImagemagickArgumentsTest.php b/tests/src/Functional/Effect/ImagemagickArgumentsTest.php
index d21523b..0fc4247 100644
--- a/tests/src/Functional/Effect/ImagemagickArgumentsTest.php
+++ b/tests/src/Functional/Effect/ImagemagickArgumentsTest.php
@@ -55,7 +55,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
 
     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -91,7 +91,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
     // Check that ::transformDimensions does not provide dimension
     // attributes.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -129,7 +129,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
 
     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -158,7 +158,7 @@ class ImagemagickArgumentsTest extends ImageEffectsTestBase {
 
     // Check that ::transformDimensions returns expected dimensions.
     $image = $this->imageFactory->get($original_uri);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/InterlaceTest.php b/tests/src/Functional/Effect/InterlaceTest.php
index 5b33a6a..fa351de 100644
--- a/tests/src/Functional/Effect/InterlaceTest.php
+++ b/tests/src/Functional/Effect/InterlaceTest.php
@@ -72,7 +72,7 @@ class InterlaceTest extends ImageEffectsTestBase {
   /**
    * Checks if this is an interlaced PNG.
    *
-   * @param \Drupal\Core\Image\ImageInterface $image
+   * @param ImageInterface $image
    *   An image object that need to be checked.
    *
    * @return bool
diff --git a/tests/src/Functional/Effect/RelativeCropTest.php b/tests/src/Functional/Effect/RelativeCropTest.php
index c4b0a17..db1fe94 100644
--- a/tests/src/Functional/Effect/RelativeCropTest.php
+++ b/tests/src/Functional/Effect/RelativeCropTest.php
@@ -50,7 +50,7 @@ class RelativeCropTest extends ImageEffectsTestBase {
     $this->assertEquals(14, $image_gd->getHeight());
 
     $derivative_uri = $this->testImageStyle->buildUri($test_file_uris['border']);
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($test_file_uris['border']));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($test_file_uris['border']));
 
     // Test that no cropping will be done if the ratio matches the original.
     $test_data['Matching ratio'] = [
diff --git a/tests/src/Functional/Effect/ResizePercentageTest.php b/tests/src/Functional/Effect/ResizePercentageTest.php
index 8bf5bde..f774cd4 100644
--- a/tests/src/Functional/Effect/ResizePercentageTest.php
+++ b/tests/src/Functional/Effect/ResizePercentageTest.php
@@ -148,7 +148,7 @@ class ResizePercentageTest extends ImageEffectsTestBase {
       $image = $this->imageFactory->get($original_uri);
       $this->assertEquals(40, $image->getWidth());
       $this->assertEquals(20, $image->getHeight());
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
       $variables = [
         '#theme' => 'image_style',
         '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/RotateTest.php b/tests/src/Functional/Effect/RotateTest.php
index 3c88d6f..78ad9d7 100644
--- a/tests/src/Functional/Effect/RotateTest.php
+++ b/tests/src/Functional/Effect/RotateTest.php
@@ -137,7 +137,7 @@ class RotateTest extends ImageEffectsTestBase {
         }
         $this->assertSame(40, $image->getWidth(), $test_message);
         $this->assertSame(20, $image->getHeight(), $test_message);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
@@ -315,7 +315,7 @@ class RotateTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertSame(40, $image->getWidth());
     $this->assertSame(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/ScaleAndSmartCropTest.php b/tests/src/Functional/Effect/ScaleAndSmartCropTest.php
index 33fc99e..f3c1f03 100644
--- a/tests/src/Functional/Effect/ScaleAndSmartCropTest.php
+++ b/tests/src/Functional/Effect/ScaleAndSmartCropTest.php
@@ -57,7 +57,7 @@ class ScaleAndSmartCropTest extends ImageEffectsTestBase {
 
         // Check that ::transformDimensions returns expected dimensions.
         $image = $this->imageFactory->get($original_uri);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
@@ -126,7 +126,7 @@ class ScaleAndSmartCropTest extends ImageEffectsTestBase {
 
         // Check that ::transformDimensions returns expected dimensions.
         $image = $this->imageFactory->get($original_uri);
-        $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+        $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
         $variables = [
           '#theme' => 'image_style',
           '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/SetCanvasTest.php b/tests/src/Functional/Effect/SetCanvasTest.php
index 73f047e..c7a4e4e 100644
--- a/tests/src/Functional/Effect/SetCanvasTest.php
+++ b/tests/src/Functional/Effect/SetCanvasTest.php
@@ -59,7 +59,7 @@ class SetCanvasTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
@@ -102,7 +102,7 @@ class SetCanvasTest extends ImageEffectsTestBase {
     $image = $this->imageFactory->get($original_uri);
     $this->assertEquals(40, $image->getWidth());
     $this->assertEquals(20, $image->getHeight());
-    $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+    $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
     $variables = [
       '#theme' => 'image_style',
       '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/SmartCropTest.php b/tests/src/Functional/Effect/SmartCropTest.php
index 4126f58..af9030c 100644
--- a/tests/src/Functional/Effect/SmartCropTest.php
+++ b/tests/src/Functional/Effect/SmartCropTest.php
@@ -67,7 +67,7 @@ class SmartCropTest extends ImageEffectsTestBase {
       $image = $this->imageFactory->get($original_uri);
       $this->assertEquals(40, $image->getWidth());
       $this->assertEquals(40, $image->getHeight());
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
       $variables = [
         '#theme' => 'image_style',
         '#style_name' => 'image_effects_test',
diff --git a/tests/src/Functional/Effect/TextOverlayTest.php b/tests/src/Functional/Effect/TextOverlayTest.php
index 269bf03..cd4cd04 100644
--- a/tests/src/Functional/Effect/TextOverlayTest.php
+++ b/tests/src/Functional/Effect/TextOverlayTest.php
@@ -116,7 +116,7 @@ class TextOverlayTest extends ImageEffectsTestBase {
       $image = $this->imageFactory->get($original_uri);
 
       // Load Image Style and get expected derivative URL.
-      $derivative_url = file_url_transform_relative($this->testImageStyle->buildUrl($original_uri));
+      $derivative_url = \Drupal::service('file_url_generator')->transformRelative($this->testImageStyle->buildUrl($original_uri));
 
       // Check that ::applyEffect generates image with expected dimensions
       // and colors at corners.
diff --git a/tests/src/Functional/ImageEffectsTestBase.php b/tests/src/Functional/ImageEffectsTestBase.php
index bd7ea47..db6a72a 100644
--- a/tests/src/Functional/ImageEffectsTestBase.php
+++ b/tests/src/Functional/ImageEffectsTestBase.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\image_effects\Functional;
 
+use Drupal\Core\Image\ImageFactory;
 use Drupal\Core\Database\Database;
 use Drupal\Core\File\FileSystemInterface;
 use Drupal\Core\Image\ImageInterface;
@@ -33,7 +34,7 @@ abstract class ImageEffectsTestBase extends BrowserTestBase {
   /**
    * Test image style.
    *
-   * @var \Drupal\image\Entity\ImageStyle
+   * @var ImageStyle
    */
   protected $testImageStyle;
 
@@ -54,14 +55,14 @@ abstract class ImageEffectsTestBase extends BrowserTestBase {
   /**
    * Image factory.
    *
-   * @var \Drupal\Core\Image\ImageFactory
+   * @var ImageFactory
    */
   protected $imageFactory;
 
   /**
    * The file system service.
    *
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -260,7 +261,9 @@ abstract class ImageEffectsTestBase extends BrowserTestBase {
   protected function getTestImageCopyUri($path, $name = NULL, $type = 'module') {
     $test_directory = 'public://test-images/';
     $this->fileSystem->prepareDirectory($test_directory, FileSystemInterface::CREATE_DIRECTORY);
-    $source_uri = $name ? drupal_get_path($type, $name) : '';
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Unsupported extension type encountered, using extension.path.resolver instead of extension.list
+    $source_uri = $name ? \Drupal::service('extension.path.resolver')->getPath($type, $name) : '';
     $source_uri .= $path;
     $target_uri = $test_directory . \Drupal::service('file_system')->basename($source_uri);
     return $this->fileSystem->copy($source_uri, $target_uri, FileSystemInterface::EXISTS_REPLACE);
@@ -375,9 +378,9 @@ abstract class ImageEffectsTestBase extends BrowserTestBase {
    *
    * Some difference can be allowed to account for e.g. compression artifacts.
    *
-   * @param \Drupal\Core\Image\ImageInterface $expected_image
+   * @param ImageInterface $expected_image
    *   A GD image resource for the expected image.
-   * @param \Drupal\Core\Image\ImageInterface $actual_image
+   * @param ImageInterface $actual_image
    *   A GD image resource for the actual image.
    * @param int $max_diff
    *   (optional) The maximum allowed difference, range from 0 to 255. Defaults
@@ -406,9 +409,9 @@ abstract class ImageEffectsTestBase extends BrowserTestBase {
    *
    * Some difference can be allowed to account for e.g. compression artifacts.
    *
-   * @param \Drupal\Core\Image\ImageInterface $expected_image
+   * @param ImageInterface $expected_image
    *   A GD image resource for the expected image.
-   * @param \Drupal\Core\Image\ImageInterface $actual_image
+   * @param ImageInterface $actual_image
    *   A GD image resource for the actual image.
    * @param int $max_diff
    *   (optional) The maximum allowed difference, range from 0 to 255. Defaults
diff --git a/tests/src/Functional/SelectorPluginTest.php b/tests/src/Functional/SelectorPluginTest.php
index 1ecc70c..ae701a2 100644
--- a/tests/src/Functional/SelectorPluginTest.php
+++ b/tests/src/Functional/SelectorPluginTest.php
@@ -26,7 +26,7 @@ class SelectorPluginTest extends ImageEffectsTestBase {
    * Image selector test.
    */
   public function testImageSelector() {
-    $image_path = drupal_get_path('module', 'image_effects') . '/tests/images';
+    $image_path = \Drupal::service('extension.list.module')->getPath('image_effects') . '/tests/images';
     $image_file = 'portrait-painting.jpe';
 
     // Test the Basic plugin.
diff --git a/tests/src/Kernel/ConverterTest.php b/tests/src/Kernel/ConverterTest.php
index 4a53405..8b7862a 100644
--- a/tests/src/Kernel/ConverterTest.php
+++ b/tests/src/Kernel/ConverterTest.php
@@ -23,7 +23,7 @@ class ConverterTest extends KernelTestBase {
   /**
    * Test image style.
    *
-   * @var \Drupal\image\Entity\ImageStyle
+   * @var ImageStyle
    */
   protected $testImageStyle;
 
