diff --git a/src/Annotation/GeofieldBackend.php b/src/Annotation/GeofieldBackend.php
index ebd07aa..3ba0804 100644
--- a/src/Annotation/GeofieldBackend.php
+++ b/src/Annotation/GeofieldBackend.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -23,7 +24,7 @@ class GeofieldBackend extends Plugin {
   /**
    * The administrative label of the geofield backend.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -32,7 +33,7 @@ class GeofieldBackend extends Plugin {
   /**
    * The description of the geofield backend.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
diff --git a/src/Annotation/GeofieldProximitySource.php b/src/Annotation/GeofieldProximitySource.php
index 85428e8..c4bfe4a 100644
--- a/src/Annotation/GeofieldProximitySource.php
+++ b/src/Annotation/GeofieldProximitySource.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -25,7 +26,7 @@ class GeofieldProximitySource extends Plugin {
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -34,7 +35,7 @@ class GeofieldProximitySource extends Plugin {
   /**
    * A short description of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
@@ -43,7 +44,7 @@ class GeofieldProximitySource extends Plugin {
   /**
    * A description to show in the exposed form.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *   (optional)
    *
    * @ingroup plugin_translatable
diff --git a/src/DmsConverterInterface.php b/src/DmsConverterInterface.php
index 973c6a9..94397ea 100644
--- a/src/DmsConverterInterface.php
+++ b/src/DmsConverterInterface.php
@@ -10,7 +10,7 @@ interface DmsConverterInterface {
   /**
    * Transforms a DMS point to a decimal one.
    *
-   * @param \Drupal\geofield\DmsPoint $point
+   * @param DmsPoint $point
    *   The DMS Point to transform.
    *
    * @return array
@@ -26,7 +26,7 @@ interface DmsConverterInterface {
    * @param float $lat
    *   The Decimal Point to transform latitude.
    *
-   * @return \Drupal\geofield\DmsPoint
+   * @return DmsPoint
    *   The equivalent DMS Point object.
    */
   public static function decimalToDms($lon, $lat);
diff --git a/src/Element/GeofieldBounds.php b/src/Element/GeofieldBounds.php
index e0113b2..b6bb160 100644
--- a/src/Element/GeofieldBounds.php
+++ b/src/Element/GeofieldBounds.php
@@ -58,7 +58,7 @@ class GeofieldBounds extends GeofieldElementBase {
    *
    * @param array $element
    *   The element being processed.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Element/GeofieldDms.php b/src/Element/GeofieldDms.php
index ee77548..b8f3195 100644
--- a/src/Element/GeofieldDms.php
+++ b/src/Element/GeofieldDms.php
@@ -37,7 +37,7 @@ class GeofieldDms extends FormElement {
    *   An associative array containing the properties and children of the
    *   element. Note that $element must be taken by reference here, so processed
    *   child elements are taken over into $form_state.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -81,7 +81,7 @@ class GeofieldDms extends FormElement {
    *
    * @param array $element
    *   The element being processed.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Element/GeofieldElementBase.php b/src/Element/GeofieldElementBase.php
index 92ac0f7..885fc45 100644
--- a/src/Element/GeofieldElementBase.php
+++ b/src/Element/GeofieldElementBase.php
@@ -27,7 +27,7 @@ abstract class GeofieldElementBase extends FormElement {
    *   An associative array containing the properties and children of the
    *   element. Note that $element must be taken by reference here, so processed
    *   child elements are taken over into $form_state.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
@@ -63,7 +63,7 @@ abstract class GeofieldElementBase extends FormElement {
    *
    * @param array $element
    *   The element being processed.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Element/GeofieldLatLon.php b/src/Element/GeofieldLatLon.php
index 67c405b..c08132c 100644
--- a/src/Element/GeofieldLatLon.php
+++ b/src/Element/GeofieldLatLon.php
@@ -51,7 +51,7 @@ class GeofieldLatLon extends GeofieldElementBase {
    *   An associative array containing the properties and children of the
    *   element. Note that $element must be taken by reference here, so processed
    *   child elements are taken over into $form_state.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param array $complete_form
    *   The complete form structure.
diff --git a/src/Plugin/Field/FieldFormatter/GeofieldDefaultFormatter.php b/src/Plugin/Field/FieldFormatter/GeofieldDefaultFormatter.php
index 2e0b88d..8ebdece 100644
--- a/src/Plugin/Field/FieldFormatter/GeofieldDefaultFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/GeofieldDefaultFormatter.php
@@ -27,7 +27,7 @@ class GeofieldDefaultFormatter extends FormatterBase implements ContainerFactory
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
@@ -45,7 +45,7 @@ class GeofieldDefaultFormatter extends FormatterBase implements ContainerFactory
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -55,7 +55,7 @@ class GeofieldDefaultFormatter extends FormatterBase implements ContainerFactory
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The The geoPhpWrapper.
    */
   public function __construct(
diff --git a/src/Plugin/Field/FieldWidget/GeofieldBaseWidget.php b/src/Plugin/Field/FieldWidget/GeofieldBaseWidget.php
index ada427a..6c3f92a 100644
--- a/src/Plugin/Field/FieldWidget/GeofieldBaseWidget.php
+++ b/src/Plugin/Field/FieldWidget/GeofieldBaseWidget.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield\Plugin\Field\FieldWidget;
 
+use Drupal\geofield\Plugin\GeofieldBackendPluginInterface;
 use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\WidgetBase;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
@@ -19,21 +20,21 @@ abstract class GeofieldBaseWidget extends WidgetBase implements ContainerFactory
   /**
    * The Geofield Backend setup for the specific Field definition.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldBackendPluginInterface|null
+   * @var GeofieldBackendPluginInterface|null
    */
   protected $geofieldBackend = NULL;
 
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
   /**
    * The WKT format Generator service.
    *
-   * @var \Drupal\geofield\WktGeneratorInterface
+   * @var WktGeneratorInterface
    */
   protected $wktGenerator;
 
@@ -44,17 +45,17 @@ abstract class GeofieldBaseWidget extends WidgetBase implements ContainerFactory
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The geoPhpWrapper.
-   * @param \Drupal\geofield\WktGeneratorInterface $wkt_generator
+   * @param WktGeneratorInterface $wkt_generator
    *   The WKT format Generator service.
-   * @param \Drupal\geofield\Plugin\GeofieldBackendManager $geofield_backend_manager
+   * @param GeofieldBackendManager $geofield_backend_manager
    *   The geofieldBackendManager.
    */
   public function __construct(
diff --git a/src/Plugin/GeofieldBackendBase.php b/src/Plugin/GeofieldBackendBase.php
index af63537..b9e2ae7 100644
--- a/src/Plugin/GeofieldBackendBase.php
+++ b/src/Plugin/GeofieldBackendBase.php
@@ -29,7 +29,7 @@ abstract class GeofieldBackendBase extends PluginBase implements GeofieldBackend
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
@@ -42,7 +42,7 @@ abstract class GeofieldBackendBase extends PluginBase implements GeofieldBackend
    *   The plugin ID for the migration process to do.
    * @param mixed $plugin_definition
    *   The configuration for the plugin.
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The geoPhpWrapper.
    */
   public function __construct(
diff --git a/src/Plugin/GeofieldBackendManager.php b/src/Plugin/GeofieldBackendManager.php
index b80c07f..32e28b9 100644
--- a/src/Plugin/GeofieldBackendManager.php
+++ b/src/Plugin/GeofieldBackendManager.php
@@ -17,9 +17,9 @@ class GeofieldBackendManager extends DefaultPluginManager {
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
diff --git a/src/Plugin/GeofieldProximitySource/ContextProximityFilter.php b/src/Plugin/GeofieldProximitySource/ContextProximityFilter.php
index a28485e..de38da0 100644
--- a/src/Plugin/GeofieldProximitySource/ContextProximityFilter.php
+++ b/src/Plugin/GeofieldProximitySource/ContextProximityFilter.php
@@ -29,7 +29,7 @@ class ContextProximityFilter extends GeofieldProximitySourceBase implements Cont
   /**
    * The geofield proximity manager.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceManager
+   * @var GeofieldProximitySourceManager
    */
   protected $proximitySourceManager;
 
@@ -54,7 +54,7 @@ class ContextProximityFilter extends GeofieldProximitySourceBase implements Cont
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\geofield\Plugin\GeofieldProximitySourceManager $proximitySourceManager
+   * @param GeofieldProximitySourceManager $proximitySourceManager
    *   The Geofield Proximity Source manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GeofieldProximitySourceManager $proximitySourceManager) {
@@ -68,7 +68,7 @@ class ContextProximityFilter extends GeofieldProximitySourceBase implements Cont
   public function getOrigin() {
     $origin = [];
     if (isset($this->viewHandler)) {
-      /** @var \Drupal\geofield\Plugin\views\argument\GeofieldProximityArgument $geofield_proximity_argument */
+      /** @var GeofieldProximityArgument $geofield_proximity_argument */
       $geofield_proximity_argument = $this->viewHandler->view->argument;
       foreach ($this->viewHandler->view->argument as $argument) {
         if ($argument instanceof GeofieldProximityArgument) {
diff --git a/src/Plugin/GeofieldProximitySource/OriginFromProximityFilter.php b/src/Plugin/GeofieldProximitySource/OriginFromProximityFilter.php
index 4682d62..8bec65e 100644
--- a/src/Plugin/GeofieldProximitySource/OriginFromProximityFilter.php
+++ b/src/Plugin/GeofieldProximitySource/OriginFromProximityFilter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\geofield\Plugin\GeofieldProximitySource;
 
+use Drupal\views\Plugin\views\filter\FilterPluginBase;
+use Drupal\geofield\Plugin\views\filter\GeofieldProximityFilter;
+use Drupal\geofield\Plugin\GeofieldProximitySourceInterface;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Ajax\AjaxResponse;
@@ -31,7 +34,7 @@ class OriginFromProximityFilter extends GeofieldProximitySourceBase implements C
   /**
    * The geofield proximity manager.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceManager
+   * @var GeofieldProximitySourceManager
    */
   protected $proximitySourceManager;
 
@@ -56,7 +59,7 @@ class OriginFromProximityFilter extends GeofieldProximitySourceBase implements C
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\geofield\Plugin\GeofieldProximitySourceManager $proximitySourceManager
+   * @param GeofieldProximitySourceManager $proximitySourceManager
    *   The Geofield Proximity Source manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GeofieldProximitySourceManager $proximitySourceManager) {
@@ -73,7 +76,7 @@ class OriginFromProximityFilter extends GeofieldProximitySourceBase implements C
   protected function getAvailableProximityFilters() {
     $proximity_filters = [];
 
-    /** @var \Drupal\views\Plugin\views\filter\FilterPluginBase $filter */
+    /** @var FilterPluginBase $filter */
     foreach ($this->viewHandler->displayHandler->getHandlers('filter') as $delta => $filter) {
       if ($filter->pluginId === 'geofield_proximity_filter') {
         $proximity_filters[$delta] = $filter->adminLabel();
@@ -134,10 +137,10 @@ class OriginFromProximityFilter extends GeofieldProximitySourceBase implements C
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function sourceProximityFilterUpdate(array $form, FormStateInterface $form_state) {
@@ -160,7 +163,7 @@ class OriginFromProximityFilter extends GeofieldProximitySourceBase implements C
       && is_a($this->viewHandler->view->filter[$this->viewHandler->options['source_configuration']['source_proximity_filter']], '\Drupal\geofield\Plugin\views\filter\GeofieldProximityFilter')
       && $source_proximity_filter = $this->viewHandler->options['source_configuration']['source_proximity_filter']
     ) {
-      /** @var \Drupal\geofield\Plugin\views\filter\GeofieldProximityFilter $geofield_proximity_filter */
+      /** @var GeofieldProximityFilter $geofield_proximity_filter */
       $geofield_proximity_filter = $this->viewHandler->view->filter[$source_proximity_filter];
 
       $source_plugin_id = $geofield_proximity_filter->options['source'];
@@ -168,7 +171,7 @@ class OriginFromProximityFilter extends GeofieldProximitySourceBase implements C
 
       try {
 
-        /** @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface $source_plugin */
+        /** @var GeofieldProximitySourceInterface $source_plugin */
         $source_plugin = $this->proximitySourceManager->createInstance($source_plugin_id, $source_plugin_configuration);
         $source_plugin->setViewHandler($geofield_proximity_filter);
 
diff --git a/src/Plugin/GeofieldProximitySourceBase.php b/src/Plugin/GeofieldProximitySourceBase.php
index 24755ab..a80658d 100644
--- a/src/Plugin/GeofieldProximitySourceBase.php
+++ b/src/Plugin/GeofieldProximitySourceBase.php
@@ -27,7 +27,7 @@ abstract class GeofieldProximitySourceBase extends PluginBase implements Geofiel
   /**
    * The view handler which uses this proximity plugin.
    *
-   * @var \Drupal\views\Plugin\views\HandlerBase
+   * @var HandlerBase
    */
   protected $viewHandler;
 
diff --git a/src/Plugin/GeofieldProximitySourceInterface.php b/src/Plugin/GeofieldProximitySourceInterface.php
index 5cb190d..d2fdfbf 100644
--- a/src/Plugin/GeofieldProximitySourceInterface.php
+++ b/src/Plugin/GeofieldProximitySourceInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\geofield\Plugin;
 
+use Drupal\geofield\Exception\InvalidPointException;
+use Drupal\geofield\Exception\ProximityUnavailableException;
+use Drupal\geofield\Exception\HaversineUnavailableException;
 use Drupal\Component\Plugin\PluginInspectionInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\HandlerBase;
@@ -44,7 +47,7 @@ interface GeofieldProximitySourceInterface extends PluginInspectionInterface {
    *
    * @param array $form
    *   The form element to build.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $options_parents
    *   The values parents.
@@ -58,7 +61,7 @@ interface GeofieldProximitySourceInterface extends PluginInspectionInterface {
    *
    * @param array $form
    *   The form element to build.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    * @param array $options_parents
    *   The values parents.
@@ -84,40 +87,40 @@ interface GeofieldProximitySourceInterface extends PluginInspectionInterface {
   /**
    * Sets view handler which uses this proximity plugin.
    *
-   * @param \Drupal\views\Plugin\views\HandlerBase $view_handler
+   * @param HandlerBase $view_handler
    *   The view handler which uses this proximity plugin.
    */
   public function setViewHandler(HandlerBase $view_handler);
 
   /**
-   * Get the calculated proximity.
-   *
-   * @param float $lat
-   *   The current point latitude.
-   * @param float $lon
-   *   The current point longitude.
-   *
-   * @return float
-   *   The calculated proximity.
-   *
-   * @throws \Drupal\geofield\Exception\InvalidPointException;
-   *   If the proximity cannot be created, due to incorrect point coordinates
-   *   definition.
-   *
-   * @throws \Drupal\geofield\Exception\ProximityUnavailableException;
-   *   If any other case the proximity value cannot be created correctly.
-   */
+  * Get the calculated proximity.
+  *
+  * @param float $lat
+  *   The current point latitude.
+  * @param float $lon
+  *   The current point longitude.
+  *
+  * @return float
+  *   The calculated proximity.
+  *
+   * @throws InvalidPointException ;
+    If the proximity cannot be created, due to incorrect point coordinates
+    definition.
+  *
+   * @throws ProximityUnavailableException ;
+    If any other case the proximity value cannot be created correctly.
+  */
   public function getProximity($lat, $lon);
 
   /**
-   * Gets the haversine options.
-   *
-   * @return array
-   *   The haversine options.
-   *
-   * @throws \Drupal\geofield\Exception\HaversineUnavailableException;
-   *   If the haversine is unavailable, due to incorrect setup definitions.
-   */
+  * Gets the haversine options.
+  *
+  * @return array
+  *   The haversine options.
+  *
+   * @throws HaversineUnavailableException ;
+    If the haversine is unavailable, due to incorrect setup definitions.
+  */
   public function getHaversineOptions();
 
   /**
diff --git a/src/Plugin/GeofieldProximitySourceManager.php b/src/Plugin/GeofieldProximitySourceManager.php
index a095299..ba5a8d0 100644
--- a/src/Plugin/GeofieldProximitySourceManager.php
+++ b/src/Plugin/GeofieldProximitySourceManager.php
@@ -32,7 +32,7 @@ class GeofieldProximitySourceManager extends DefaultPluginManager {
    *
    * @param array $form
    *   An associative array containing the structure of the form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The current state of the form.
    * @param string $context
    *   The array list of the specific view handler plugin type to look for.
@@ -96,10 +96,10 @@ class GeofieldProximitySourceManager extends DefaultPluginManager {
    *
    * @param array $form
    *   The build form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   Ajax response with updated form element.
    */
   public static function sourceUpdate(array $form, FormStateInterface $form_state) {
diff --git a/src/Plugin/Validation/Constraint/GeoConstraintValidator.php b/src/Plugin/Validation/Constraint/GeoConstraintValidator.php
index 25e8c84..5664b3b 100644
--- a/src/Plugin/Validation/Constraint/GeoConstraintValidator.php
+++ b/src/Plugin/Validation/Constraint/GeoConstraintValidator.php
@@ -16,14 +16,14 @@ class GeoConstraintValidator extends ConstraintValidator implements ContainerInj
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
   /**
    * Constructs a new GeoConstraintValidator object.
    *
-   * @param \Drupal\geofield\GeoPHP\GeoPHPInterface $geophp_wrapper
+   * @param GeoPHPInterface $geophp_wrapper
    *   The geoPhpWrapper.
    */
   public function __construct(GeoPHPInterface $geophp_wrapper) {
diff --git a/src/Plugin/migrate/process/GeoField.php b/src/Plugin/migrate/process/GeoField.php
index b67dd2b..20b36f3 100644
--- a/src/Plugin/migrate/process/GeoField.php
+++ b/src/Plugin/migrate/process/GeoField.php
@@ -21,7 +21,7 @@ class GeoField extends ProcessPluginBase implements ContainerFactoryPluginInterf
   /**
    * The geoPhpWrapper service.
    *
-   * @var \Drupal\geofield\GeoPHP\GeoPHPInterface
+   * @var GeoPHPInterface
    */
   protected $geoPhpWrapper;
 
diff --git a/src/Plugin/migrate/process/GeofieldLatLon.php b/src/Plugin/migrate/process/GeofieldLatLon.php
index 68be6fe..f78e454 100644
--- a/src/Plugin/migrate/process/GeofieldLatLon.php
+++ b/src/Plugin/migrate/process/GeofieldLatLon.php
@@ -21,7 +21,7 @@ class GeofieldLatLon extends ProcessPluginBase implements ContainerFactoryPlugin
   /**
    * The WktGenerator service.
    *
-   * @var \Drupal\geofield\WktGeneratorInterface
+   * @var WktGeneratorInterface
    */
   protected $wktGenerator;
 
diff --git a/src/Plugin/migrate/process/GeofieldWKT.php b/src/Plugin/migrate/process/GeofieldWKT.php
index 7cf668a..d38ccca 100644
--- a/src/Plugin/migrate/process/GeofieldWKT.php
+++ b/src/Plugin/migrate/process/GeofieldWKT.php
@@ -21,7 +21,7 @@ class GeofieldWKT extends ProcessPluginBase implements ContainerFactoryPluginInt
   /**
    * The WktGenerator service.
    *
-   * @var \Drupal\geofield\WktGeneratorInterface
+   * @var WktGeneratorInterface
    */
   protected $wktGenerator;
 
diff --git a/src/Plugin/views/GeofieldProximityHandlerTrait.php b/src/Plugin/views/GeofieldProximityHandlerTrait.php
index 9bf72bd..395c4e9 100644
--- a/src/Plugin/views/GeofieldProximityHandlerTrait.php
+++ b/src/Plugin/views/GeofieldProximityHandlerTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\geofield\Plugin\views;
 
+use Drupal\views\Plugin\views\query\Sql;
+use Drupal\geofield\Plugin\GeofieldProximitySourceInterface;
 /**
  * Trait class for Geofield Proximity View Handlers.
  */
@@ -17,11 +19,11 @@ trait GeofieldProximityHandlerTrait {
     $this->ensureMyTable();
     $lat_alias = $this->realField . '_lat';
     $lon_alias = $this->realField . '_lon';
-    /** @var \Drupal\views\Plugin\views\query\Sql $query */
+    /** @var Sql $query */
     $query = $this->query;
 
     try {
-      /** @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface $source_plugin */
+      /** @var GeofieldProximitySourceInterface $source_plugin */
       $source_plugin = $this->proximitySourceManager->createInstance($this->options['source'], $this->options['source_configuration']);
       $source_plugin->setViewHandler($this);
       $source_plugin->setUnits($this->options['units']);
diff --git a/src/Plugin/views/argument/GeofieldProximityArgument.php b/src/Plugin/views/argument/GeofieldProximityArgument.php
index 25bfd20..5444a3e 100644
--- a/src/Plugin/views/argument/GeofieldProximityArgument.php
+++ b/src/Plugin/views/argument/GeofieldProximityArgument.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\geofield\Plugin\views\argument;
 
+use Drupal\geofield\Plugin\GeofieldProximitySourceInterface;
+use Drupal\views\Plugin\views\query\Sql;
 use Drupal\geofield\WktGenerator;
 use Drupal\views\Plugin\views\argument\Formula;
 use Drupal\Core\Form\FormStateInterface;
@@ -25,21 +27,21 @@ class GeofieldProximityArgument extends Formula implements ContainerFactoryPlugi
   /**
    * The WktGenerator object.
    *
-   * @var \Drupal\geofield\WktGenerator
+   * @var WktGenerator
    */
   protected $wktGenerator;
 
   /**
    * The geofield proximity manager.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceManager
+   * @var GeofieldProximitySourceManager
    */
   protected $proximitySourceManager;
 
   /**
    * The Geofield Proximity Source Plugin.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface
+   * @var GeofieldProximitySourceInterface
    */
   protected $sourcePlugin;
 
@@ -110,9 +112,9 @@ class GeofieldProximityArgument extends Formula implements ContainerFactoryPlugi
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\geofield\WktGenerator $wkt_generator
+   * @param WktGenerator $wkt_generator
    *   The WktGenerator object.
-   * @param \Drupal\geofield\Plugin\GeofieldProximitySourceManager $proximity_source_manager
+   * @param GeofieldProximitySourceManager $proximity_source_manager
    *   The Geofield Proximity Source manager service.
    */
   public function __construct(
@@ -160,7 +162,7 @@ class GeofieldProximityArgument extends Formula implements ContainerFactoryPlugi
     $lon_alias = $this->realField . '_lon';
 
     try {
-      /** @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface $source_plugin */
+      /** @var GeofieldProximitySourceInterface $source_plugin */
       $values = $this->getParsedReferenceLocation();
       if (!empty($values)) {
         $source_configuration = [
@@ -192,7 +194,7 @@ class GeofieldProximityArgument extends Formula implements ContainerFactoryPlugi
   protected function operator($options, $distance, $operator) {
 
     if (!empty($distance) && is_numeric($distance)) {
-      /** @var \Drupal\views\Plugin\views\query\Sql $query */
+      /** @var Sql $query */
       $query = $this->query;
       $query->addWhereExpression(0, geofield_haversine($options) . ' ' . $operator . ' ' . $distance);
     }
diff --git a/src/Plugin/views/field/GeofieldProximityField.php b/src/Plugin/views/field/GeofieldProximityField.php
index 80be783..33c097f 100644
--- a/src/Plugin/views/field/GeofieldProximityField.php
+++ b/src/Plugin/views/field/GeofieldProximityField.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield\Plugin\views\field;
 
+use Drupal\geofield\Plugin\GeofieldProximitySourceInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\geofield\Plugin\views\GeofieldProximityHandlerTrait;
 use Drupal\views\Plugin\views\field\NumericField;
@@ -23,14 +24,14 @@ class GeofieldProximityField extends NumericField {
   /**
    * The geofield proximity manager.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceManager
+   * @var GeofieldProximitySourceManager
    */
   protected $proximitySourceManager;
 
   /**
    * The Geofield Proximity Source Plugin.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface
+   * @var GeofieldProximitySourceInterface
    */
   protected $sourcePlugin;
 
@@ -58,7 +59,7 @@ class GeofieldProximityField extends NumericField {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\geofield\Plugin\GeofieldProximitySourceManager $proximity_source_manager
+   * @param GeofieldProximitySourceManager $proximity_source_manager
    *   The Geofield Proximity Source manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GeofieldProximitySourceManager $proximity_source_manager) {
diff --git a/src/Plugin/views/filter/GeofieldProximityFilter.php b/src/Plugin/views/filter/GeofieldProximityFilter.php
index c3a4514..56f402a 100644
--- a/src/Plugin/views/filter/GeofieldProximityFilter.php
+++ b/src/Plugin/views/filter/GeofieldProximityFilter.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\geofield\Plugin\views\filter;
 
+use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
+use Drupal\geofield\Plugin\GeofieldProximitySourceInterface;
+use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Database\Query\Condition;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Render\RendererInterface;
@@ -22,14 +25,14 @@ class GeofieldProximityFilter extends NumericFilter {
   /**
    * The Renderer service property.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $renderer;
 
   /**
    * The geofield proximity manager.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceManager
+   * @var GeofieldProximitySourceManager
    */
   protected $proximitySourceManager;
 
@@ -43,14 +46,14 @@ class GeofieldProximityFilter extends NumericFilter {
   /**
    * The Geofield Proximity Source Plugin.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface
+   * @var GeofieldProximitySourceInterface
    */
   protected $sourcePlugin;
 
   /**
    * The current request.
    *
-   * @var null|\Symfony\Component\HttpFoundation\Request
+   * @var null|Request
    */
   protected $request;
 
@@ -92,11 +95,11 @@ class GeofieldProximityFilter extends NumericFilter {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer.
-   * @param \Drupal\geofield\Plugin\GeofieldProximitySourceManager $proximity_source_manager
+   * @param GeofieldProximitySourceManager $proximity_source_manager
    *   The Geofield Proximity Source manager service.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The request stack.
    */
   public function __construct(
@@ -195,7 +198,7 @@ class GeofieldProximityFilter extends NumericFilter {
     $lon_alias = $this->realField . '_lon';
 
     try {
-      /** @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface $source_plugin */
+      /** @var GeofieldProximitySourceInterface $source_plugin */
       $this->sourcePlugin = $this->proximitySourceManager->createInstance($this->options['source'], $this->options['source_configuration']);
       $this->sourcePlugin->setViewHandler($this);
       $this->sourcePlugin->setUnits($this->options['units']);
@@ -475,7 +478,7 @@ class GeofieldProximityFilter extends NumericFilter {
         $source_plugin_id = $this->options['source'];
         $source_plugin_configuration = isset($identifier) && isset($user_input[$identifier]['origin']) ? $user_input[$identifier] : $this->options['source_configuration'];
 
-        /** @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface $source_plugin */
+        /** @var GeofieldProximitySourceInterface $source_plugin */
         $this->sourcePlugin = $this->proximitySourceManager->createInstance($source_plugin_id, $source_plugin_configuration);
         $this->sourcePlugin->setViewHandler($this);
         $proximity_origin = $this->sourcePlugin->getOrigin();
diff --git a/src/Plugin/views/sort/GeofieldProximitySort.php b/src/Plugin/views/sort/GeofieldProximitySort.php
index 30a3b95..63a243d 100644
--- a/src/Plugin/views/sort/GeofieldProximitySort.php
+++ b/src/Plugin/views/sort/GeofieldProximitySort.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\geofield\Plugin\views\sort;
 
+use Drupal\geofield\Plugin\GeofieldProximitySourceInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\views\Plugin\views\sort\SortPluginBase;
 use Drupal\geofield\Plugin\views\GeofieldProximityHandlerTrait;
@@ -22,14 +23,14 @@ class GeofieldProximitySort extends SortPluginBase {
   /**
    * The geofield proximity manager.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceManager
+   * @var GeofieldProximitySourceManager
    */
   protected $proximitySourceManager;
 
   /**
    * The Geofield Proximity Source Plugin.
    *
-   * @var \Drupal\geofield\Plugin\GeofieldProximitySourceInterface
+   * @var GeofieldProximitySourceInterface
    */
   protected $sourcePlugin;
 
@@ -57,7 +58,7 @@ class GeofieldProximitySort extends SortPluginBase {
    *   The plugin_id for the plugin instance.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\geofield\Plugin\GeofieldProximitySourceManager $proximity_source_manager
+   * @param GeofieldProximitySourceManager $proximity_source_manager
    *   The Geofield Proximity Source manager service.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition, GeofieldProximitySourceManager $proximity_source_manager) {
diff --git a/tests/src/Functional/GeofieldWidgetTest.php b/tests/src/Functional/GeofieldWidgetTest.php
index 6b26eea..fbc63e3 100644
--- a/tests/src/Functional/GeofieldWidgetTest.php
+++ b/tests/src/Functional/GeofieldWidgetTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\geofield\Functional;
 
+use Drupal\Tests\WebAssert;
 use Drupal\Core\Entity\Entity\EntityFormDisplay;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\field\Entity\FieldConfig;
@@ -33,28 +34,28 @@ class GeofieldWidgetTest extends FieldTestBase {
   /**
    * A field storage with cardinality 1 to use in this test class.
    *
-   * @var \Drupal\field\Entity\FieldStorageConfig
+   * @var FieldStorageConfig
    */
   protected $fieldStorage;
 
   /**
    * A Field to use in this test class.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $field;
 
   /**
    * The web assert object.
    *
-   * @var \Drupal\Tests\WebAssert
+   * @var WebAssert
    */
   protected $assertSession;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->fieldStorage = FieldStorageConfig::create([
diff --git a/tests/src/Kernel/ConstraintsTest.php b/tests/src/Kernel/ConstraintsTest.php
index 671aa8c..9ea2e5c 100644
--- a/tests/src/Kernel/ConstraintsTest.php
+++ b/tests/src/Kernel/ConstraintsTest.php
@@ -34,9 +34,7 @@ class ConstraintsTest extends KernelTestBase {
     $constraint = new GeoConstraint();
     $this->assertEquals('"@value" is not a valid geospatial content.', $constraint->message, 'Correct constraint message found.');
 
-    $execution_context = $this->getMockBuilder('\Drupal\Core\TypedData\Validation\ExecutionContext')
-      ->disableOriginalConstructor()
-      ->getMock();
+    $execution_context = $this->createMock('\Drupal\Core\TypedData\Validation\ExecutionContext');
 
     if ($expected_violation_count) {
       $execution_context->expects($this->exactly($expected_violation_count))
diff --git a/tests/src/Kernel/GeofieldFormatterTest.php b/tests/src/Kernel/GeofieldFormatterTest.php
index 0de40c8..19871e3 100644
--- a/tests/src/Kernel/GeofieldFormatterTest.php
+++ b/tests/src/Kernel/GeofieldFormatterTest.php
@@ -38,7 +38,7 @@ class GeofieldFormatterTest extends EntityKernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     FieldStorageConfig::create([
diff --git a/tests/src/Kernel/GeofieldItemTest.php b/tests/src/Kernel/GeofieldItemTest.php
index 365120e..1b5b74d 100644
--- a/tests/src/Kernel/GeofieldItemTest.php
+++ b/tests/src/Kernel/GeofieldItemTest.php
@@ -26,21 +26,21 @@ class GeofieldItemTest extends FieldKernelTestBase {
   /**
    * Field storage entity.
    *
-   * @var \Drupal\field\Entity\FieldStorageConfig
+   * @var FieldStorageConfig
    */
   protected $fieldStorage;
 
   /**
    * Field entity.
    *
-   * @var \Drupal\field\Entity\FieldConfig
+   * @var FieldConfig
    */
   protected $field;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installEntitySchema('entity_test_rev');
diff --git a/tests/src/Kernel/WktGeneratorTest.php b/tests/src/Kernel/WktGeneratorTest.php
index 921bc88..4370a2b 100644
--- a/tests/src/Kernel/WktGeneratorTest.php
+++ b/tests/src/Kernel/WktGeneratorTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\geofield\Kernel;
 
+use Drupal\geofield\WktGenerator;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -14,7 +15,7 @@ class WktGeneratorTest extends KernelTestBase {
   /**
    * WKT Generator service.
    *
-   * @var \Drupal\geofield\WktGenerator
+   * @var WktGenerator
    */
   public $wktGenerator;
 
@@ -70,7 +71,7 @@ class WktGeneratorTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->wktGenerator = \Drupal::service('geofield.wkt_generator');
   }
