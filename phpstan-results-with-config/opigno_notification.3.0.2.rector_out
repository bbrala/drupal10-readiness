modules/contrib/opigno_notification/opigno_notification.install
modules/contrib/opigno_notification/opigno_notification.module
modules/contrib/opigno_notification/src/Controller/OpignoNotificationController.php
modules/contrib/opigno_notification/src/Entity/Controller/OpignoNotificationListBuilder.php
modules/contrib/opigno_notification/src/Entity/OpignoNotification.php
modules/contrib/opigno_notification/src/OpignoNotificationAccessControlHandler.php
modules/contrib/opigno_notification/src/OpignoNotificationInterface.php
modules/contrib/opigno_notification/src/Services/OpignoNotificationManager.php

5 files with changes
====================

1) modules/contrib/opigno_notification/src/Services/OpignoNotificationManager.php:22

    ---------- begin diff ----------
@@ @@
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Entity\EntityInterface|null
+   * @var EntityInterface|null
    */
   protected $user = NULL;

@@ @@
   /**
    * OpignoNotificationManager constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager service.
    */
   public function __construct(AccountInterface $account, EntityTypeManagerInterface $entity_type_manager) {
@@ @@
    * @return array
    *   The list of user unread notifications (ILT + LM + standard ones).
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getUserHeaderNotifications(): array {
     if (!$this->user instanceof UserInterface) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


2) modules/contrib/opigno_notification/src/Entity/OpignoNotification.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\opigno_notification\Entity;

+use Drupal\user\Entity\User;
 use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
 use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Entity\EntityStorageInterface;
@@ @@
   /**
    * Returns unread notifications count.
    *
-   * @param \Drupal\user\Entity\User|null $account
+   * @param User|null $account
    *   User for which notifications will be counted.
    *   Current user if not specified.
    *
@@ @@
   /**
    * Returns unread notifications list.
    *
-   * @param \Drupal\user\UserInterface|null $account
+   * @param UserInterface|null $account
    *   User to get notifications for. Current user will be taken by default.
    * @param int $amount
    *   The number of notifications to be loaded.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/opigno_notification/src/Controller/OpignoNotificationController.php:27

    ---------- begin diff ----------
@@ @@
   /**
    * The renderer service.
    *
-   * @var \Drupal\Core\Render\RendererInterface
+   * @var RendererInterface
    */
   protected $renderer;

@@ @@
   /**
    * Opigno notifications manager service.
    *
-   * @var \Drupal\opigno_notification\Services\OpignoNotificationManager
+   * @var OpignoNotificationManager
    */
   protected $notificationsManager;

@@ @@
   /**
    * The router service.
    *
-   * @var \Drupal\Core\Routing\Router
+   * @var Router
    */
   protected $router;

@@ @@
   /**
    * OpignoNotificationController constructor.
    *
-   * @param \Drupal\Core\Render\RendererInterface $renderer
+   * @param RendererInterface $renderer
    *   The renderer service.
-   * @param \Drupal\Core\Session\AccountInterface $account
+   * @param AccountInterface $account
    *   The current user account.
-   * @param \Drupal\opigno_notification\Services\OpignoNotificationManager $notifications_manager
+   * @param OpignoNotificationManager $notifications_manager
    *   Opigno notifications manager service.
-   * @param \Drupal\Core\Routing\Router $router
+   * @param Router $router
    *   The router service.
    * @param \Drupal\private_message\Service\PrivateMessageServiceInterface $pm_service
    *   The private messages service.
@@ @@
   /**
    * Ajax callback. Marks all current user notifications as read.
    *
-   * @param \Symfony\Component\HttpFoundation\Request $request
+   * @param Request $request
    *   The current request.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function markReadAll(Request $request): AjaxResponse {
@@ @@
   /**
    * Ajax callback. Get messages and its count.
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
+   * @return AjaxResponse
    *   The response object.
    */
   public function getMessages(): AjaxResponse {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/opigno_notification/opigno_notification.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\opigno_notification\OpignoNotificationInterface;
+use Drupal\Core\Entity\EntityStorageException;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 /**
  * @file
  * Contains opigno_notification.module.
@@ @@
  * @param string $url
  *   Url to object mentioned in notification.
  *
- * @return \Drupal\opigno_notification\OpignoNotificationInterface
+ * @return OpignoNotificationInterface
  *   Created notification.
  *
- * @throws \Drupal\Core\Entity\EntityStorageException
+ * @throws EntityStorageException
  */
 function opigno_set_message($uid, $message, $url = '/notifications') {
   $user = \Drupal::currentUser();
@@ @@
  *
  * Implements hook_user_delete().
  *
- * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
- * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+ * @throws InvalidPluginDefinitionException
+ * @throws PluginNotFoundException
  */
 function opigno_notification_user_delete(EntityInterface $entity) {
-  /** @var \Drupal\opigno_notification\OpignoNotificationInterface[] $list */
+  /** @var OpignoNotificationInterface[] $list */
   $list = \Drupal::entityTypeManager()
     ->getStorage('opigno_notification')
     ->loadByProperties([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


5) modules/contrib/opigno_notification/opigno_notification.install:10

    ---------- begin diff ----------
@@ @@
  * Update the notifications view config.
  */
 function opigno_notification_update_9001() {
-  $path = drupal_get_path('module', 'opigno_notification') . '/config/optional/';
+  $path = \Drupal::service('extension.list.module')->getPath('opigno_notification') . '/config/optional/';
   $config = 'views.view.opigno_notifications';
   $source = new FileStorage($path);
   \Drupal::service('config.storage')->write($config, $source->read($config));
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector


 [OK] 5 files have been changed by Rector                                       

