modules/contrib/minimal_share/minimal_share.module
modules/contrib/minimal_share/src/Annotation/MinimalShareProvider.php
modules/contrib/minimal_share/src/Form/ConfigForm.php
modules/contrib/minimal_share/src/MinimalShareManager.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/Email.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/Facebook.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/FacebookMessenger.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/GooglePlus.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/LinkedIn.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/Pinterest.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/Printer.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/Tumblr.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/Twitter.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/WhatsApp.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProvider/Xing.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProviderBase.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProviderInterface.php
modules/contrib/minimal_share/src/Plugin/MinimalShareProviderManager.php

6 files with changes
====================

1) modules/contrib/minimal_share/src/Plugin/MinimalShareProviderManager.php:17

    ---------- begin diff ----------
@@ @@
    * @param \Traversable $namespaces
    *   An object that implements \Traversable which contains the root paths
    *   keyed by the corresponding namespace to look for plugin implementations.
-   * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
+   * @param CacheBackendInterface $cache_backend
    *   Cache backend instance to use.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler to invoke the alter hook with.
    */
   public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/minimal_share/src/Plugin/MinimalShareProviderBase.php:26

    ---------- begin diff ----------
@@ @@
    * @return string
    */
   public function getIconPath() {
-    return drupal_get_path('module', 'minimal_share') . '/assets/icons/';
+    return \Drupal::service('extension.list.module')->getPath('minimal_share') . '/assets/icons/';
   }
 }
    ----------- end diff -----------

Applied rules:
 * DrupalGetPathRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/minimal_share/src/MinimalShareManager.php:32

    ---------- begin diff ----------
@@ @@
   /**
    * MinimalShareManager constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
-   * @param \Drupal\minimal_share\Plugin\MinimalShareProviderManager $provider_manager
+   * @param ConfigFactory $config_factory
+   * @param MinimalShareProviderManager $provider_manager
    */
   public function __construct(ConfigFactory $config_factory, MinimalShareProviderManager $provider_manager) {
     $this->config = $config_factory->get('minimal_share.config')->get();
@@ @@
    *   The machine-readable string.
    */
   public function getMachineName($str) {
-    return Unicode::strtolower(Html::cleanCssIdentifier($str));
+    return mb_strtolower(Html::cleanCssIdentifier($str));
   }

   /**
@@ @@
   /**
    * Build share info from entity.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *
    * @return array
    */
    ----------- end diff -----------

Applied rules:
 * UnicodeStrtolowerRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


4) modules/contrib/minimal_share/src/Form/ConfigForm.php:15

    ---------- begin diff ----------
@@ @@
 class ConfigForm extends ConfigFormBase {

   /**
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   * @var DateFormatterInterface
    */
   protected $dateFormatter;

   /**
-   * @var \Drupal\minimal_share\MinimalShareManager
+   * @var MinimalShareManager
    */
   protected $manager;

   /**
    * ConfigForm constructor.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
-   * @param \Drupal\minimal_share\MinimalShareManager $minimal_share_manager
+   * @param DateFormatterInterface $date_formatter
+   * @param MinimalShareManager $minimal_share_manager
    */
   public function __construct(DateFormatterInterface $date_formatter, MinimalShareManager $minimal_share_manager) {
     $this->dateFormatter = $date_formatter;
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/minimal_share/src/Annotation/MinimalShareProvider.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\minimal_share\Annotation;

+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;

 /**
@@ @@
   /**
    * The label of the plugin.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    *
    * @ingroup plugin_translatable
    */
    ----------- end diff -----------

Applied rules:
 * PseudoNamespaceToNamespaceRector


6) modules/contrib/minimal_share/minimal_share.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\minimal_share\MinimalShareManager;
+use Drupal\Core\Entity\EntityTypeBundleInfoInterface;
 /**
  * @file
  * Contains minimal_share.module.
@@ @@
  */
 function minimal_share_entity_extra_field_info() {
   $extra = [];
-  /** @var \Drupal\minimal_share\MinimalShareManager $manager */
+  /** @var MinimalShareManager $manager */
   $manager = \Drupal::service('minimal_share.manager');
   $config = $manager->getConfig();

@@ @@
   // Iterate all enabled entity types and provide
   // an extra field for each bundle.
   foreach ($config['entity_types'] as $entity_type) {
-    /** @var \Drupal\Core\Entity\EntityTypeBundleInfoInterface $definition */
+    /** @var EntityTypeBundleInfoInterface $definition */
     $bundle_info = \Drupal::service('entity_type.bundle.info');
     $bundles = $bundle_info->getBundleInfo($entity_type);

@@ @@
  * Implements hook_entity_view().
  */
 function minimal_share_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
-  /** @var \Drupal\minimal_share\MinimalShareManager $manager */
+  /** @var MinimalShareManager $manager */
   $manager = \Drupal::service('minimal_share.manager');
   $entity_type = $entity->getEntityTypeId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 6 files have been changed by Rector                                       

