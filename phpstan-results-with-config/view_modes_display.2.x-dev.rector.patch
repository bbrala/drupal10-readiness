diff --git a/src/Controller/PreviewController.php b/src/Controller/PreviewController.php
index 09f7fd0..caf8111 100644
--- a/src/Controller/PreviewController.php
+++ b/src/Controller/PreviewController.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\view_modes_display\Controller;
 
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityMalformedException;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
@@ -24,23 +27,23 @@ class PreviewController extends ControllerBase {
   /**
    * ConfigFactory.
    *
-   * @var \Drupal\view_modes_display\Service\PreviewFactory
+   * @var PreviewFactory
    */
   protected $previewFactory;
 
   /**
    * EntityDisplayRepository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * DefaultController constructor.
    *
-   * @param \Drupal\view_modes_display\Service\PreviewFactory $previewFactory
+   * @param PreviewFactory $previewFactory
    *   Preview Factory.
-   * @param \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entityDisplayRepository
+   * @param EntityDisplayRepositoryInterface $entityDisplayRepository
    *   Entity Display Repository.
    */
   public function __construct(
@@ -54,10 +57,10 @@ class PreviewController extends ControllerBase {
   /**
    * {@inheritdoc}
    *
-   * @param \Symfony\Component\DependencyInjection\ContainerInterface $container
+   * @param ContainerInterface $container
    *   Container.
    *
-   * @return \Drupal\Core\Controller\ControllerBase
+   * @return ControllerBase
    *   ControllerBase with injected services.
    */
   public static function create(ContainerInterface $container) {
@@ -70,7 +73,7 @@ class PreviewController extends ControllerBase {
   /**
    * Returns preview for entity - dedicated view mode or all of them.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    *   Route match.
    *
    * @param string $entity_type
@@ -93,7 +96,7 @@ class PreviewController extends ControllerBase {
       $markup = $this->previewFactory->buildMarkup($entity, $view_mode);
       $renderArray[] = [
         '#prefix' => '<div class="view-mode-list-item view-mode-list-item-' . $view_mode . '"><div class="view-mode-list-item-label">' . $view_modes[$view_mode]['label'] . '</div><div class="view-mode-list-item-content">',
-        '#markup' => render($markup),
+        '#markup' => \Drupal::service('renderer')->render($markup),
         '#suffix' => '</div></div>',
       ];
     }
@@ -103,13 +106,13 @@ class PreviewController extends ControllerBase {
   /**
    * Provides a link list with all available - dedicated - view mode previews.
    *
-   * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
+   * @param RouteMatchInterface $route_match
    * @param string $entity_type
    *
    * @return array
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
-   * @throws \Drupal\Core\Entity\EntityMalformedException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
+   * @throws EntityMalformedException
    */
   public function previewList(RouteMatchInterface $route_match, $entity_type) {
     $content = [];
diff --git a/src/EntityTypeInfo.php b/src/EntityTypeInfo.php
index e485c08..d422873 100644
--- a/src/EntityTypeInfo.php
+++ b/src/EntityTypeInfo.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\view_modes_display;
 
+use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
 use Drupal\Core\Entity\EntityInterface;
@@ -22,21 +23,21 @@ class EntityTypeInfo implements ContainerInjectionInterface {
   /**
    * The current user.
    *
-   * @var \Drupal\Core\Session\AccountInterface
+   * @var AccountInterface
    */
   protected $currentUser;
 
   /**
    * EntityDisplayRepository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * EntityTypeInfo constructor.
    *
-   * @param \Drupal\Core\Session\AccountInterface $current_user
+   * @param AccountInterface $current_user
    *   Current user.
    */
   public function __construct(AccountInterface $current_user, EntityDisplayRepositoryInterface $entityDisplayRepository) {
@@ -59,7 +60,7 @@ class EntityTypeInfo implements ContainerInjectionInterface {
    *
    * This is an alter hook bridge.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface[] $entity_types
+   * @param EntityTypeInterface[] $entity_types
    *   The master entity type list to alter.
    *
    * @see hook_entity_type_alter()
@@ -76,7 +77,7 @@ class EntityTypeInfo implements ContainerInjectionInterface {
   /**
    * Adds preview operations on entity that supports it.
    *
-   * @param \Drupal\Core\Entity\EntityInterface $entity
+   * @param EntityInterface $entity
    *   The entity on which to define an operation.
    *
    * @return array
diff --git a/src/Plugin/Derivative/ViewModeDisplayLocalTask.php b/src/Plugin/Derivative/ViewModeDisplayLocalTask.php
index 26865b0..d535d8d 100644
--- a/src/Plugin/Derivative/ViewModeDisplayLocalTask.php
+++ b/src/Plugin/Derivative/ViewModeDisplayLocalTask.php
@@ -22,16 +22,16 @@ class ViewModeDisplayLocalTask extends DeriverBase implements ContainerDeriverIn
   /**
    * The entity manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * Creates an ViewModeDisplayLocalTask object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity manager.
-   * @param \Drupal\Core\StringTranslation\TranslationInterface $string_translation
+   * @param TranslationInterface $string_translation
    *   The translation manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, TranslationInterface $string_translation) {
diff --git a/src/Routing/RouteSubscriber.php b/src/Routing/RouteSubscriber.php
index d8e283c..257cd85 100644
--- a/src/Routing/RouteSubscriber.php
+++ b/src/Routing/RouteSubscriber.php
@@ -18,14 +18,14 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * EntityDisplayRepository.
    *
-   * @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
@@ -33,7 +33,7 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Constructs a RouteSubscriber object.
    *
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
    */
   public function __construct(EntityTypeManagerInterface $entity_type_manager, EntityDisplayRepositoryInterface $entityDisplayRepository) {
@@ -60,10 +60,10 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Gets the entity load route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getPreviewList(EntityTypeInterface $entity_type) {
@@ -92,10 +92,10 @@ class RouteSubscriber extends RouteSubscriberBase {
   /**
    * Gets the entity render route.
    *
-   * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
+   * @param EntityTypeInterface $entity_type
    *   The entity type.
    *
-   * @return \Symfony\Component\Routing\Route|null
+   * @return Route|null
    *   The generated route, if available.
    */
   protected function getPreviewRenderRoute(EntityTypeInterface $entity_type) {
diff --git a/src/Service/PreviewFactory.php b/src/Service/PreviewFactory.php
index 0ce121b..4d0f26e 100644
--- a/src/Service/PreviewFactory.php
+++ b/src/Service/PreviewFactory.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\view_modes_display\Service;
 
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\Core\Entity\EntityDisplayRepositoryInterface;
@@ -17,32 +20,32 @@ class PreviewFactory {
   /**
    * ConfigFactory.
    *
-   * @var Drupal\Core\Config\ConfigFactoryInterface
+   * @var ConfigFactoryInterface
    */
   protected $configFactory;
 
   /**
    * EntityTypeManager.
    *
-   * @var Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   protected $entityTypeManager;
 
   /**
    * EntityDisplayRepository.
    *
-   * @var Drupal\Core\Entity\EntityDisplayRepositoryInterface
+   * @var EntityDisplayRepositoryInterface
    */
   protected $entityDisplayRepository;
 
   /**
    * DefaultController constructor.
    *
-   * @param Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Config Factory.
-   * @param Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
+   * @param EntityTypeManagerInterface $entityTypeManager
    *   Entity Type Manager.
-   * @param Drupal\Core\Entity\EntityDisplayRepositoryInterface $entityDisplayRepository
+   * @param EntityDisplayRepositoryInterface $entityDisplayRepository
    *   Entity Display Repository.
    */
   public function __construct(
@@ -81,7 +84,7 @@ class PreviewFactory {
       $markup = $this->buildMarkup($entity, $viewMode);
       $renderArray[] = [
         '#prefix' => '<div class="view-mode-list-item view-mode-list-item-' . $viewMode . '"><div class="view-mode-list-item-label">' . $viewModeData['label'] . '</div><div class="view-mode-list-item-content">',
-        '#markup' => render($markup),
+        '#markup' => \Drupal::service('renderer')->render($markup),
         '#suffix' => '</div></div>',
       ];
     }
@@ -121,11 +124,11 @@ class PreviewFactory {
    * @param string $entityBundle
    *   Entity bundle.
    *
-   * @return \Drupal\Core\Entity\EntityInterface[]
+   * @return EntityInterface[]
    *   Array of entity displays.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public function getEntityDisplays($entityTypeId, $entityBundle) {
     $configPrefix = 'core.entity_view_display';
@@ -144,7 +147,7 @@ class PreviewFactory {
   /**
    * Build markup required to render the entity in the desired view mode.
    *
-   * @param Drupal\Core\Entity\ContentEntityInterface $entity
+   * @param ContentEntityInterface $entity
    *   Entity class.
    * @param string $viewMode
    *   Entity view mode.
diff --git a/view_modes_display.info.yml b/view_modes_display.info.yml
index 38a56fd..d23750e 100644
--- a/view_modes_display.info.yml
+++ b/view_modes_display.info.yml
@@ -1,6 +1,5 @@
 name: View Modes Display
 type: module
 description: Preview view modes for every entity type
-core: 8.x
 package: Other
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
diff --git a/view_modes_display.module b/view_modes_display.module
index bef87c0..e7d726f 100644
--- a/view_modes_display.module
+++ b/view_modes_display.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\Core\Entity\EntityInterface;
 /**
  * @file
  * Contains view_modes_display.module..
@@ -45,7 +46,7 @@ function view_modes_display_entity_type_alter(array &$entity_types) {
 /**
  * Implements hook_entity_operation().
  */
-function view_modes_display_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
+function view_modes_display_entity_operation(EntityInterface $entity) {
   return \Drupal::service('class_resolver')
     ->getInstanceFromDefinition(EntityTypeInfo::class)
     ->entityOperation($entity);
