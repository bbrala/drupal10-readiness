diff --git a/src/Annotation/WebformScheduledResultSet.php b/src/Annotation/WebformScheduledResultSet.php
index 8d3345c..ba86129 100644
--- a/src/Annotation/WebformScheduledResultSet.php
+++ b/src/Annotation/WebformScheduledResultSet.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_scheduled_tasks\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class WebformScheduledResultSet extends Plugin {
   /**
    * The human-readable label.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
diff --git a/src/Annotation/WebformScheduledTask.php b/src/Annotation/WebformScheduledTask.php
index 8396ab4..3fde412 100644
--- a/src/Annotation/WebformScheduledTask.php
+++ b/src/Annotation/WebformScheduledTask.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_scheduled_tasks\Annotation;
 
+use Drupal\Core\Annotation\Translation;
 use Drupal\Component\Annotation\Plugin;
 
 /**
@@ -21,7 +22,7 @@ class WebformScheduledTask extends Plugin {
   /**
    * The human-readable label.
    *
-   * @var \Drupal\Core\Annotation\Translation
+   * @var Translation
    */
   public $label;
 
diff --git a/src/Entity/WebformScheduledTask.php b/src/Entity/WebformScheduledTask.php
index e9ff5ba..2970699 100644
--- a/src/Entity/WebformScheduledTask.php
+++ b/src/Entity/WebformScheduledTask.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\webform_scheduled_tasks\Entity;
 
+use Drupal\webform_scheduled_tasks\SchedulingStateInterface;
+use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Config\Entity\ConfigEntityBase;
 use Drupal\Core\Entity\EntityWithPluginCollectionInterface;
 use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;
@@ -110,14 +112,14 @@ class WebformScheduledTask extends ConfigEntityBase implements WebformScheduledT
   /**
    * The scheduling state service.
    *
-   * @var \Drupal\webform_scheduled_tasks\SchedulingStateInterface
+   * @var SchedulingStateInterface
    */
   protected $scheduleState;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
@@ -134,7 +136,7 @@ class WebformScheduledTask extends ConfigEntityBase implements WebformScheduledT
   /**
    * Get a plugin collection from a manager, type and settings.
    *
-   * @return \Drupal\Core\Plugin\DefaultSingleLazyPluginCollection|null
+   * @return DefaultSingleLazyPluginCollection|null
    *   A collection, or NULL if none is instantiable yet.
    */
   protected function getPluginCollection($plugin_manager, $type, $settings) {
@@ -251,7 +253,7 @@ class WebformScheduledTask extends ConfigEntityBase implements WebformScheduledT
   /**
    * Get the schedule state service.
    *
-   * @return \Drupal\webform_scheduled_tasks\SchedulingStateInterface
+   * @return SchedulingStateInterface
    *   The state service.
    */
   protected function getScheduleState() {
@@ -264,7 +266,7 @@ class WebformScheduledTask extends ConfigEntityBase implements WebformScheduledT
   /**
    * Get the time service.
    *
-   * @return \Drupal\Component\Datetime\TimeInterface
+   * @return TimeInterface
    *   The time service.
    */
   protected function getTime() {
diff --git a/src/Entity/WebformScheduledTaskInterface.php b/src/Entity/WebformScheduledTaskInterface.php
index bd7b5be..8258203 100644
--- a/src/Entity/WebformScheduledTaskInterface.php
+++ b/src/Entity/WebformScheduledTaskInterface.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\webform_scheduled_tasks\Entity;
 
+use Drupal\webform_scheduled_tasks\Plugin\WebformScheduledTasks\TaskPluginInterface;
+use Drupal\webform_scheduled_tasks\Plugin\WebformScheduledTasks\ResultSetPluginInterface;
+use Drupal\webform\WebformInterface;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 
 /**
@@ -12,7 +15,7 @@ interface WebformScheduledTaskInterface extends ConfigEntityInterface {
   /**
    * Get the task plugin.
    *
-   * @return \Drupal\webform_scheduled_tasks\Plugin\WebformScheduledTasks\TaskPluginInterface
+   * @return TaskPluginInterface
    *   The task plugin.
    */
   public function getTaskPlugin();
@@ -20,7 +23,7 @@ interface WebformScheduledTaskInterface extends ConfigEntityInterface {
   /**
    * Get the result set plugin.
    *
-   * @return \Drupal\webform_scheduled_tasks\Plugin\WebformScheduledTasks\ResultSetPluginInterface
+   * @return ResultSetPluginInterface
    *   The result set plugin.
    */
   public function getResultSetPlugin();
@@ -63,7 +66,7 @@ interface WebformScheduledTaskInterface extends ConfigEntityInterface {
   /**
    * Get the webform this task is associated with.
    *
-   * @return \Drupal\webform\WebformInterface
+   * @return WebformInterface
    *   The associated webform.
    */
   public function getWebform();
diff --git a/src/Form/WebformScheduledTaskForm.php b/src/Form/WebformScheduledTaskForm.php
index 46c6742..744abd0 100644
--- a/src/Form/WebformScheduledTaskForm.php
+++ b/src/Form/WebformScheduledTaskForm.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\webform_scheduled_tasks\Form;
 
+use Drupal\webform\WebformInterface;
+use Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface;
+use Drupal\Core\Plugin\DefaultPluginManager;
 use Drupal\Core\Datetime\DrupalDateTime;
 use Drupal\Core\Entity\EntityForm;
 use Drupal\Core\Form\FormStateInterface;
@@ -17,7 +20,7 @@ class WebformScheduledTaskForm extends EntityForm {
   /**
    * The associated webform.
    *
-   * @var \Drupal\webform\WebformInterface
+   * @var WebformInterface
    */
   protected $webform;
 
@@ -35,7 +38,7 @@ class WebformScheduledTaskForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
     $form = parent::form($form, $form_state);
 
-    /** @var \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $schedule */
+    /** @var WebformScheduledTaskInterface $schedule */
     $schedule = $this->entity;
 
     if ($schedule->isNew()) {
@@ -164,7 +167,7 @@ class WebformScheduledTaskForm extends EntityForm {
   public function validateForm(array &$form, FormStateInterface $form_state) {
     parent::validateForm($form, $form_state);
 
-    /** @var \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $schedule */
+    /** @var WebformScheduledTaskInterface $schedule */
     $schedule = $this->entity;
     if (!$schedule->isNew()) {
       $this->validatePluginForm($form['task_settings'], $schedule->getTaskPlugin(), $form, $form_state);
@@ -176,7 +179,7 @@ class WebformScheduledTaskForm extends EntityForm {
    * {@inheritdoc}
    */
   public function save(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $schedule */
+    /** @var WebformScheduledTaskInterface $schedule */
     $schedule = $this->entity;
     if (!$schedule->isNew()) {
       $this->submitPluginForm($form['task_settings'], $schedule->getTaskPlugin(), $form, $form_state);
@@ -203,7 +206,7 @@ class WebformScheduledTaskForm extends EntityForm {
    * {@inheritdoc}
    */
   public function resume(array $form, FormStateInterface $form_state) {
-    /** @var \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $schedule */
+    /** @var WebformScheduledTaskInterface $schedule */
     $schedule = $this->entity;
 
     // Resume the task, but queue it up to run from the current time to the next
@@ -220,11 +223,11 @@ class WebformScheduledTaskForm extends EntityForm {
    *   The key that will be used to store this plugin form.
    * @param string $label
    *   The label of the section.
-   * @param \Drupal\Core\Plugin\PluginFormInterface $plugin
+   * @param PluginFormInterface $plugin
    *   The plugin to add a form for.
    * @param array $parent_form
    *   The parent form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The parent form state.
    *
    * @return array
@@ -249,11 +252,11 @@ class WebformScheduledTaskForm extends EntityForm {
    *
    * @param array $plugin_form
    *   The plugin form.
-   * @param \Drupal\Core\Plugin\PluginFormInterface $plugin
+   * @param PluginFormInterface $plugin
    *   The plugin.
    * @param array $parent_form
    *   The parent form.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
+   * @param FormStateInterface $form_state
    *   The form state.
    */
   protected function validatePluginForm(array $plugin_form, PluginFormInterface $plugin, array $parent_form, FormStateInterface $form_state) {
@@ -279,7 +282,7 @@ class WebformScheduledTaskForm extends EntityForm {
    *   An array for options for a select list.
    */
   protected function pluginManagerOptionsList($manager) {
-    /** @var \Drupal\Core\Plugin\DefaultPluginManager $manager */
+    /** @var DefaultPluginManager $manager */
     $manager = \Drupal::service($manager);
     return array_column($manager->getDefinitions(), 'label', 'id');
   }
diff --git a/src/Iterator/WebformIteratorAggregate.php b/src/Iterator/WebformIteratorAggregate.php
index bc641e9..17bc0af 100644
--- a/src/Iterator/WebformIteratorAggregate.php
+++ b/src/Iterator/WebformIteratorAggregate.php
@@ -27,7 +27,7 @@ class WebformIteratorAggregate implements \IteratorAggregate, \Countable {
   /**
    * The webform submission storage.
    *
-   * @var \Drupal\Core\Entity\ContentEntityStorageInterface
+   * @var ContentEntityStorageInterface
    */
   protected $submissionStorage;
 
@@ -61,7 +61,7 @@ class WebformIteratorAggregate implements \IteratorAggregate, \Countable {
   /**
    * Create an iterator aggregate from an entity query.
    *
-   * @param \Drupal\Core\Entity\Query\QueryInterface $query
+   * @param QueryInterface $query
    *   An un-executed entity query for webform submissions.
    *
    * @return static
diff --git a/src/Plugin/WebformScheduledTasks/ResultSet/SubmissionsCompletedSinceLastSuccess.php b/src/Plugin/WebformScheduledTasks/ResultSet/SubmissionsCompletedSinceLastSuccess.php
index e463370..d4f8464 100644
--- a/src/Plugin/WebformScheduledTasks/ResultSet/SubmissionsCompletedSinceLastSuccess.php
+++ b/src/Plugin/WebformScheduledTasks/ResultSet/SubmissionsCompletedSinceLastSuccess.php
@@ -22,14 +22,14 @@ class SubmissionsCompletedSinceLastSuccess extends ResultSetPluginBase {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
   /**
    * The time interface.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
diff --git a/src/Plugin/WebformScheduledTasks/ResultSetPluginBase.php b/src/Plugin/WebformScheduledTasks/ResultSetPluginBase.php
index 8557468..5b06c44 100644
--- a/src/Plugin/WebformScheduledTasks/ResultSetPluginBase.php
+++ b/src/Plugin/WebformScheduledTasks/ResultSetPluginBase.php
@@ -17,14 +17,14 @@ abstract class ResultSetPluginBase extends PluginBase implements ResultSetPlugin
   /**
    * A query object for submissions.
    *
-   * @var \Drupal\Core\Entity\Query\QueryInterface
+   * @var QueryInterface
    */
   protected $submissionQuery;
 
   /**
    * The scheduled task this task is attached to.
    *
-   * @var \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface
+   * @var WebformScheduledTaskInterface
    */
   protected $scheduledTask;
 
diff --git a/src/Plugin/WebformScheduledTasks/ScheduledTaskAwarePluginInterface.php b/src/Plugin/WebformScheduledTasks/ScheduledTaskAwarePluginInterface.php
index faf10c0..b19f99c 100644
--- a/src/Plugin/WebformScheduledTasks/ScheduledTaskAwarePluginInterface.php
+++ b/src/Plugin/WebformScheduledTasks/ScheduledTaskAwarePluginInterface.php
@@ -12,7 +12,7 @@ interface ScheduledTaskAwarePluginInterface {
   /**
    * Set the scheduled task as context for this plugin.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The scheduled task for context.
    *
    * @return $this
@@ -22,7 +22,7 @@ interface ScheduledTaskAwarePluginInterface {
   /**
    * Get the scheduled task.
    *
-   * @return \Drupal\webform_scheduled_tasks\Plugin\WebformScheduledTasks\ScheduledTaskNotifyInterface
+   * @return ScheduledTaskNotifyInterface
    *   A scheduled task.
    *
    * @throws \Exception
diff --git a/src/Plugin/WebformScheduledTasks/Task/EmailedExport.php b/src/Plugin/WebformScheduledTasks/Task/EmailedExport.php
index 06cea6a..4ff4859 100644
--- a/src/Plugin/WebformScheduledTasks/Task/EmailedExport.php
+++ b/src/Plugin/WebformScheduledTasks/Task/EmailedExport.php
@@ -31,33 +31,33 @@ class EmailedExport extends TaskPluginBase implements ContainerFactoryPluginInte
   /**
    * The submission exporter.
    *
-   * @var \Drupal\webform\WebformSubmissionExporterInterface
+   * @var WebformSubmissionExporterInterface
    */
   protected $exporter;
 
   /**
    * The exporter manager.
    *
-   * @var \Drupal\webform\Plugin\WebformExporterManagerInterface
+   * @var WebformExporterManagerInterface
    */
   protected $exporterManager;
 
   /**
    * The mail manager.
    *
-   * @var \Drupal\Core\Mail\MailManagerInterface
+   * @var MailManagerInterface
    */
   protected $mailManager;
 
   /**
    * The file usage service.
    *
-   * @var \Drupal\file\FileUsage\FileUsageInterface
+   * @var FileUsageInterface
    */
   protected $fileUsage;
 
   /**
-   * @var \Drupal\Core\File\FileSystemInterface
+   * @var FileSystemInterface
    */
   protected $fileSystem;
 
@@ -283,7 +283,7 @@ class EmailedExport extends TaskPluginBase implements ContainerFactoryPluginInte
     }
 
     $this->emailRecipients('export_summary_filesystem', [
-      'file_url' => file_create_url($unique_destination_file_uri),
+      'file_url' => \Drupal::service('file_url_generator')->generateAbsoluteString($unique_destination_file_uri),
       'task_id' => $this->getScheduledTask()->id(),
       'attachments' => $email_attachments,
     ]);
@@ -371,7 +371,7 @@ class EmailedExport extends TaskPluginBase implements ContainerFactoryPluginInte
   /**
    * Get an exporter with initialized settings.
    *
-   * @return \Drupal\webform\WebformSubmissionExporterInterface
+   * @return WebformSubmissionExporterInterface
    *   The submissions exporter.
    */
   protected function initializeExporter() {
diff --git a/src/Plugin/WebformScheduledTasks/TaskPluginBase.php b/src/Plugin/WebformScheduledTasks/TaskPluginBase.php
index 646fbbb..85d3e3f 100644
--- a/src/Plugin/WebformScheduledTasks/TaskPluginBase.php
+++ b/src/Plugin/WebformScheduledTasks/TaskPluginBase.php
@@ -14,7 +14,7 @@ abstract class TaskPluginBase extends PluginBase implements TaskPluginInterface
   /**
    * The scheduled task this task is attached to.
    *
-   * @var \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface
+   * @var WebformScheduledTaskInterface
    */
   protected $scheduledTask;
 
diff --git a/src/Plugin/WebformScheduledTasks/TaskPluginInterface.php b/src/Plugin/WebformScheduledTasks/TaskPluginInterface.php
index f963462..90c6762 100644
--- a/src/Plugin/WebformScheduledTasks/TaskPluginInterface.php
+++ b/src/Plugin/WebformScheduledTasks/TaskPluginInterface.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\webform_scheduled_tasks\Plugin\WebformScheduledTasks;
 
+use Drupal\webform_scheduled_tasks\Exception\RetryScheduledTaskException;
+use Drupal\webform_scheduled_tasks\Exception\HaltScheduledTaskException;
 use Drupal\Component\Plugin\ConfigurableInterface;
 use Drupal\Component\Plugin\DependentPluginInterface;
 use Drupal\Component\Plugin\PluginInspectionInterface;
@@ -19,8 +21,8 @@ interface TaskPluginInterface extends PluginInspectionInterface, PluginFormInter
    *   An iterator of webform submissions to process.
    *
    * @throws \Exception
-   * @throws \Drupal\webform_scheduled_tasks\Exception\RetryScheduledTaskException
-   * @throws \Drupal\webform_scheduled_tasks\Exception\HaltScheduledTaskException
+   * @throws RetryScheduledTaskException
+   * @throws HaltScheduledTaskException
    */
   public function executeTask(\Iterator $submissions);
 
diff --git a/src/SchedulingState.php b/src/SchedulingState.php
index 38d156d..782d4aa 100644
--- a/src/SchedulingState.php
+++ b/src/SchedulingState.php
@@ -23,7 +23,7 @@ class SchedulingState implements SchedulingStateInterface {
   /**
    * The state service.
    *
-   * @var \Drupal\Core\State\StateInterface
+   * @var StateInterface
    */
   protected $state;
 
diff --git a/src/SchedulingStateInterface.php b/src/SchedulingStateInterface.php
index 7a0023d..a31db43 100644
--- a/src/SchedulingStateInterface.php
+++ b/src/SchedulingStateInterface.php
@@ -12,7 +12,7 @@ interface SchedulingStateInterface {
   /**
    * Check if a time has been scheduled for a task to be run.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The scheduled task.
    *
    * @return bool
@@ -23,7 +23,7 @@ interface SchedulingStateInterface {
   /**
    * Get the next time a task is scheduled to run.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The scheduled task.
    *
    * @return int|null
@@ -34,7 +34,7 @@ interface SchedulingStateInterface {
   /**
    * Set the next scheduled time a task should run.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The scheduled task.
    * @param int $timestamp
    *   The timestmap.
@@ -44,7 +44,7 @@ interface SchedulingStateInterface {
   /**
    * Halt a scheduled task.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The task.
    * @param string $message
    *   (Optional) The message to provide the user.
@@ -54,7 +54,7 @@ interface SchedulingStateInterface {
   /**
    * Check if a task has been halted.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The task.
    *
    * @return bool
@@ -65,7 +65,7 @@ interface SchedulingStateInterface {
   /**
    * Get the message associated with a halted task, if one exists.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The task.
    *
    * @return string
@@ -79,7 +79,7 @@ interface SchedulingStateInterface {
   /**
    * Resume a task.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $scheduledTask
+   * @param WebformScheduledTaskInterface $scheduledTask
    *   The task.
    */
   public function resumeTask(WebformScheduledTaskInterface $scheduledTask);
diff --git a/src/TaskRunner.php b/src/TaskRunner.php
index 319b563..bc30ee8 100644
--- a/src/TaskRunner.php
+++ b/src/TaskRunner.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_scheduled_tasks;
 
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Component\Datetime\TimeInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface;
@@ -16,14 +17,14 @@ class TaskRunner implements TaskRunnerInterface {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManager
+   * @var EntityTypeManager
    */
   protected $entityTypeManager;
 
   /**
    * The time service.
    *
-   * @var \Drupal\Component\Datetime\TimeInterface
+   * @var TimeInterface
    */
   protected $time;
 
diff --git a/src/TaskRunnerInterface.php b/src/TaskRunnerInterface.php
index b0b3a8f..57242bc 100644
--- a/src/TaskRunnerInterface.php
+++ b/src/TaskRunnerInterface.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_scheduled_tasks;
 
+use Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface;
 /**
  * An interface for the task runner.
  */
@@ -10,7 +11,7 @@ interface TaskRunnerInterface {
   /**
    * Execute all pending tasks.
    *
-   * @param \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface[] $tasks
+   * @param WebformScheduledTaskInterface[] $tasks
    *   A list of tasks to execute, regardless of their eligibility.
    */
   public function executeTasks(array $tasks);
@@ -18,7 +19,7 @@ interface TaskRunnerInterface {
   /**
    * Get a list of pending tasks ready to be executed based on the schedule.
    *
-   * @return \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface[]
+   * @return WebformScheduledTaskInterface[]
    *   A list of tasks ready to execute based on the schedule.
    */
   public function getPendingTasks();
diff --git a/src/WebformScheduledTaskListBuilder.php b/src/WebformScheduledTaskListBuilder.php
index 07375a4..721cd8d 100644
--- a/src/WebformScheduledTaskListBuilder.php
+++ b/src/WebformScheduledTaskListBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\webform_scheduled_tasks;
 
+use Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface;
 use Drupal\Core\Config\Entity\ConfigEntityListBuilder;
 use Drupal\Core\Entity\EntityInterface;
 
@@ -38,7 +39,7 @@ class WebformScheduledTaskListBuilder extends ConfigEntityListBuilder {
    * {@inheritdoc}
    */
   public function buildRow(EntityInterface $entity) {
-    /** @var \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface $entity */
+    /** @var WebformScheduledTaskInterface $entity */
     return [
       'label' => $entity->label(),
       'type' => $entity->getTaskPlugin()->getPluginDefinition()['label'],
diff --git a/tests/src/Functional/EmailedExportFileDownloadAccessTest.php b/tests/src/Functional/EmailedExportFileDownloadAccessTest.php
index b2b5f29..b866d4d 100644
--- a/tests/src/Functional/EmailedExportFileDownloadAccessTest.php
+++ b/tests/src/Functional/EmailedExportFileDownloadAccessTest.php
@@ -31,7 +31,7 @@ class EmailedExportFileDownloadAccessTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $dir = EmailedExport::DESTINATION_DIRECTORY;
     $this->container->get('file_system')->prepareDirectory($dir,  FileSystemInterface::CREATE_DIRECTORY);
diff --git a/tests/src/Functional/ScheduledTaskAdminFormTest.php b/tests/src/Functional/ScheduledTaskAdminFormTest.php
index dba96d1..728d2a0 100644
--- a/tests/src/Functional/ScheduledTaskAdminFormTest.php
+++ b/tests/src/Functional/ScheduledTaskAdminFormTest.php
@@ -31,7 +31,7 @@ class ScheduledTaskAdminFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_actions_block');
 
diff --git a/tests/src/Functional/ScheduledTaskListBuilderTest.php b/tests/src/Functional/ScheduledTaskListBuilderTest.php
index dc5f8e9..30f3172 100644
--- a/tests/src/Functional/ScheduledTaskListBuilderTest.php
+++ b/tests/src/Functional/ScheduledTaskListBuilderTest.php
@@ -32,7 +32,7 @@ class ScheduledTaskListBuilderTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_actions_block');
 
diff --git a/tests/src/Functional/ScheduledTaskRunTest.php b/tests/src/Functional/ScheduledTaskRunTest.php
index df83701..e28e9c0 100644
--- a/tests/src/Functional/ScheduledTaskRunTest.php
+++ b/tests/src/Functional/ScheduledTaskRunTest.php
@@ -33,7 +33,7 @@ class ScheduledTaskRunTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_actions_block');
 
@@ -65,7 +65,8 @@ class ScheduledTaskRunTest extends BrowserTestBase {
 
     // Create three form submissions.
     foreach (range(1, 3) as $i) {
-      $this->drupalPostForm('webform/contact', [
+      $this->drupalGet('webform/contact');
+      $this->submitForm([
         'subject' => 'Test submission',
         'message' => 'Test message',
       ], 'Send message');
diff --git a/tests/src/FunctionalJavascript/EmailedExportUiTest.php b/tests/src/FunctionalJavascript/EmailedExportUiTest.php
index 4b2acc8..7b442ec 100644
--- a/tests/src/FunctionalJavascript/EmailedExportUiTest.php
+++ b/tests/src/FunctionalJavascript/EmailedExportUiTest.php
@@ -30,7 +30,7 @@ class EmailedExportUiTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->drupalPlaceBlock('local_actions_block');
 
diff --git a/tests/src/Kernel/AllSubmissionsTest.php b/tests/src/Kernel/AllSubmissionsTest.php
index ee603e0..a8646f7 100644
--- a/tests/src/Kernel/AllSubmissionsTest.php
+++ b/tests/src/Kernel/AllSubmissionsTest.php
@@ -30,7 +30,7 @@ class AllSubmissionsTest extends KernelTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installSchema('webform', ['webform']);
diff --git a/tests/src/Kernel/EmailedExportTest.php b/tests/src/Kernel/EmailedExportTest.php
index 4c1776a..9ebd328 100644
--- a/tests/src/Kernel/EmailedExportTest.php
+++ b/tests/src/Kernel/EmailedExportTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\webform_scheduled_tasks\Kernel;
 
+use Drupal\webform\WebformInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface;
 use Drupal\Core\Archiver\ArchiveTar;
 use Drupal\Core\Test\AssertMailTrait;
 use Drupal\file\Entity\File;
@@ -44,14 +47,14 @@ class EmailedExportTest extends FileTestBase {
   /**
    * A test webform.
    *
-   * @var \Drupal\webform\WebformInterface
+   * @var WebformInterface
    */
   protected $testWebform;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
     $this->installSchema('webform', ['webform']);
     $this->installSchema('file', ['file_usage']);
@@ -401,7 +404,7 @@ class EmailedExportTest extends FileTestBase {
    * @param array $values
    *   Values to save with the webform.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|\Drupal\webform\Entity\Webform
+   * @return EntityInterface|Webform
    *   A test webform.
    */
   protected function createTestWebform(array $values = []) {
@@ -431,7 +434,7 @@ class EmailedExportTest extends FileTestBase {
    * @param array $settings
    *   Settings for the task plugin.
    *
-   * @return \Drupal\webform_scheduled_tasks\Entity\WebformScheduledTaskInterface
+   * @return WebformScheduledTaskInterface
    *   A scheduled task.
    */
   protected function createTestTask(array $settings = []) {
