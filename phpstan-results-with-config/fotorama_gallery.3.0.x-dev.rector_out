modules/contrib/fotorama_gallery/fotorama_gallery.install
modules/contrib/fotorama_gallery/fotorama_gallery.module
modules/contrib/fotorama_gallery/src/Plugin/Field/FieldFormatter/FotoramaGalleryFormatter.php
modules/contrib/fotorama_gallery/tests/src/FunctionalJavascript/FotoramaGalleryImageFieldCreationTrait.php
modules/contrib/fotorama_gallery/tests/src/FunctionalJavascript/FotoramaGalleryTest.php

4 files with changes
====================

1) modules/contrib/fotorama_gallery/tests/src/FunctionalJavascript/FotoramaGalleryTest.php:31

    ---------- begin diff ----------
@@ @@
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();

     // Create a user with permissions to manage.
    ----------- end diff -----------

Applied rules:
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddReturnTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/fotorama_gallery/tests/src/FunctionalJavascript/FotoramaGalleryImageFieldCreationTrait.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\Tests\fotorama_gallery\FunctionalJavascript;

+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\field\Entity\FieldStorageConfig;

@@ @@
    * @param string $description
    *   (optional) A description for the field.
    *
-   * @return \Drupal\Core\Entity\EntityInterface|static
+   * @return EntityInterface|static
    *   A new entity object.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    */
   protected function createImageField($name, $type_name, array $storage_settings = [], array $field_settings = [], array $widget_settings = [], array $formatter_settings = [], $description = '') {
     FieldStorageConfig::create([
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/fotorama_gallery/src/Plugin/Field/FieldFormatter/FotoramaGalleryFormatter.php:595

    ---------- begin diff ----------
@@ @@

       $image_uri = $file->getFileUri();

-      $url = $image_style ? $image_style->buildUrl($image_uri) : file_create_url($image_uri);
+      $url = $image_style ? $image_style->buildUrl($image_uri) : \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);

       $image_url = Url::fromUri($url);
    ----------- end diff -----------

Applied rules:
 * FileCreateUrlRector
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/fotorama_gallery/fotorama_gallery.install:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Asset\LibraryDiscovery;
 /**
  * @file
  * Installation actions for Fotorama Gallery.
@@ @@
  * @see https://drupal.org/node/2231385
  */
 function _fotorama_gallery_verify_library() {
-  /** @var Drupal\Core\Asset\LibraryDiscovery $library_discovery */
+  /** @var LibraryDiscovery $library_discovery */
   $library_discovery = \Drupal::service('library.discovery');
   $library = $library_discovery->getLibraryByName('fotorama_gallery', 'fotorama');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [OK] 4 files have been changed by Rector                                       

