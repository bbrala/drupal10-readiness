modules/contrib/social_auth_hid/social_auth_hid.install
modules/contrib/social_auth_hid/social_auth_hid.module
modules/contrib/social_auth_hid/social_auth_hid.post_update.php
modules/contrib/social_auth_hid/src/Controller/HidAuthController.php
modules/contrib/social_auth_hid/src/EventSubscriber/SocialAuthEventSubscriber.php
modules/contrib/social_auth_hid/src/Form/HidAuthSettingsForm.php
modules/contrib/social_auth_hid/src/HidAuthManager.php
modules/contrib/social_auth_hid/src/Plugin/Network/HidAuth.php
modules/contrib/social_auth_hid/src/Plugin/Network/HidAuthInterface.php
modules/contrib/social_auth_hid/src/Routing/RouteSubscriber.php
modules/contrib/social_auth_hid/src/Settings/HidAuthSettings.php
modules/contrib/social_auth_hid/src/Settings/HidAuthSettingsInterface.php
modules/contrib/social_auth_hid/tests/src/Functional/SocialAuthHidSettingsFormTest.php

6 files with changes
====================

1) modules/contrib/social_auth_hid/src/Routing/RouteSubscriber.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_auth_hid\Routing;

+use Drupal\Core\Config\Config;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Routing\RouteSubscriberBase;
 use Symfony\Component\Routing\RouteCollection;
@@ @@
   /**
    * The config.
    *
-   * @var \Drupal\Core\Config\Config
+   * @var Config
    */
   protected $config;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   * @param ConfigFactoryInterface $configFactory
    *   Used for accessing configuration object factory.
    */
   public function __construct(ConfigFactoryInterface $configFactory) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/social_auth_hid/src/Plugin/Network/HidAuth.php:35

    ---------- begin diff ----------
@@ @@
   /**
    * The Social Auth Data Handler.
    *
-   * @var \Drupal\social_auth\SocialAuthDataHandler
+   * @var SocialAuthDataHandler
    */
   protected $dataHandler;

@@ @@
   /**
    * The logger factory.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
   /**
    * The request context object.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   protected $requestContext;

@@ @@
   /**
    * The site settings.
    *
-   * @var \Drupal\Core\Site\Settings
+   * @var Settings
    */
   protected $siteSettings;

@@ @@
   /**
    * HidAuth constructor.
    *
-   * @param \Drupal\social_auth\SocialAuthDataHandler $data_handler
+   * @param SocialAuthDataHandler $data_handler
    *   The data handler.
    * @param array $configuration
    *   A configuration array containing information about the plugin instance.
@@ @@
    *   The plugin_id for the plugin instance.
    * @param array $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory object.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
-   * @param \Drupal\Core\Routing\RequestContext $requestContext
+   * @param RequestContext $requestContext
    *   The Request Context Object.
-   * @param \Drupal\Core\Site\Settings $settings
+   * @param Settings $settings
    *   The settings factory.
    */
   public function __construct(SocialAuthDataHandler $data_handler,
@@ @@
   /**
    * Sets the underlying SDK library.
    *
-   * @return \League\OAuth2\Client\Provider\HumanitarianId|false
+   * @return HumanitarianId|false
    *   The initialized 3rd party library instance or FALSE if the settings
    *   are invalid.
    *
-   * @throws \Drupal\social_api\SocialApiException
+   * @throws SocialApiException
    *   If the SDK library does not exist.
    */
   protected function initSdk() {
@@ @@
     if (!class_exists($class_name)) {
       throw new SocialApiException(sprintf('The HumanitarianId Library for the league oAuth not found. Class: %s.', $class_name));
     }
-    /** @var \Drupal\social_auth_hid\Settings\HidAuthSettings $settings */
+    /** @var HidAuthSettings $settings */
     $settings = $this->settings;

     if ($this->validateConfig($settings)) {
@@ @@
   /**
    * Checks that module is configured.
    *
-   * @param \Drupal\social_auth_hid\Settings\HidAuthSettings $settings
+   * @param HidAuthSettings $settings
    *   The Humanitarian ID auth settings.
    *
    * @return bool
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/social_auth_hid/src/HidAuthManager.php:14

    ---------- begin diff ----------
@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   Used for accessing configuration object factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
+   * @param RequestStack $request_stack
    *   The current request.
    */
   public function __construct(ConfigFactory $config_factory, LoggerChannelFactoryInterface $logger_factory, RequestStack $request_stack) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


4) modules/contrib/social_auth_hid/src/Form/HidAuthSettingsForm.php:17

    ---------- begin diff ----------
@@ @@
   /**
    * The request context.
    *
-   * @var \Drupal\Core\Routing\RequestContext
+   * @var RequestContext
    */
   protected $requestContext;

@@ @@
   /**
    * Constructor.
    *
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param ConfigFactoryInterface $config_factory
    *   The configuration factory.
-   * @param \Drupal\Core\Routing\RouteProviderInterface $route_provider
+   * @param RouteProviderInterface $route_provider
    *   Used to check if route exists.
-   * @param \Drupal\Core\Routing\RequestContext $request_context
+   * @param RequestContext $request_context
    *   Holds information about the current request.
    */
   public function __construct(ConfigFactoryInterface $config_factory, RouteProviderInterface $route_provider, RequestContext $request_context) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


5) modules/contrib/social_auth_hid/src/EventSubscriber/SocialAuthEventSubscriber.php:18

    ---------- begin diff ----------
@@ @@
   /**
    * The messenger service.
    *
-   * @var \Drupal\Core\Messenger\MessengerInterface
+   * @var MessengerInterface
    */
   private $messenger;

@@ @@
   /**
    * The config factory service.
    *
-   * @var \Drupal\Core\Config\ConfigFactory
+   * @var ConfigFactory
    */
   private $configFactory;

@@ @@
   /**
    * The logger factory service.
    *
-   * @var \Drupal\Core\Logger\LoggerChannelFactoryInterface
+   * @var LoggerChannelFactoryInterface
    */
   protected $loggerFactory;

@@ @@
   /**
    * SocialAuthSubscriber constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\Core\Config\ConfigFactory $config_factory
+   * @param ConfigFactory $config_factory
    *   Used for accessing configuration object factory.
-   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger_factory
+   * @param LoggerChannelFactoryInterface $logger_factory
    *   The logger factory.
    */
   public function __construct(MessengerInterface $messenger, ConfigFactory $config_factory, LoggerChannelFactoryInterface $logger_factory) {
@@ @@
   /**
    * React to a user being created.
    *
-   * @param \Drupal\social_auth\Event\UserEvent $event
+   * @param UserEvent $event
    *   The user event object.
    */
   public function emailNotifications(UserEvent $event) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector


6) modules/contrib/social_auth_hid/src/Controller/HidAuthController.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\social_auth_hid\Controller;

+use League\OAuth2\Client\Provider\HumanitarianIdResourceOwner;
 use Drupal\Core\Messenger\MessengerInterface;
 use Drupal\social_api\Plugin\NetworkManager;
 use Drupal\social_auth\Controller\OAuth2ControllerBase;
@@ @@
   /**
    * HidAuthController constructor.
    *
-   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   * @param MessengerInterface $messenger
    *   The messenger service.
-   * @param \Drupal\social_api\Plugin\NetworkManager $network_manager
+   * @param NetworkManager $network_manager
    *   Used to get an instance of social_auth_google network plugin.
-   * @param \Drupal\social_auth\User\UserAuthenticator $user_authenticator
+   * @param UserAuthenticator $user_authenticator
    *   Manages user login/registration.
-   * @param \Drupal\social_auth_hid\HidAuthManager $hid_manager
+   * @param HidAuthManager $hid_manager
    *   Used to manage authentication methods.
-   * @param \Symfony\Component\HttpFoundation\RequestStack $request
+   * @param RequestStack $request
    *   Used to access GET parameters.
-   * @param \Drupal\social_auth\SocialAuthDataHandler $data_handler
+   * @param SocialAuthDataHandler $data_handler
    *   SocialAuthDataHandler object.
    */
   public function __construct(MessengerInterface $messenger,
@@ @@

     // If there are no errors, attempt to authenticate the user.
     if (!$response) {
-      /** @var \League\OAuth2\Client\Provider\HumanitarianIdResourceOwner|null $profile */
+      /** @var HumanitarianIdResourceOwner|null $profile */
       $profile = $this->processCallback();

       // If authentication was successful.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


 [OK] 6 files have been changed by Rector                                       

