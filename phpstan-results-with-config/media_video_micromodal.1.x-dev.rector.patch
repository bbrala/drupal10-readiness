diff --git a/media_video_micromodal.info.yml b/media_video_micromodal.info.yml
index 5404905..e6a82b9 100644
--- a/media_video_micromodal.info.yml
+++ b/media_video_micromodal.info.yml
@@ -1,7 +1,7 @@
 name: 'Media Video Micromodal'
 type: module
 description: 'Displays core media remote videos in a modal popup using micromodal.js.'
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^9.3 || ^10
 package: 'Media'
 dependencies:
   - drupal:media
diff --git a/media_video_micromodal.module b/media_video_micromodal.module
index 8fc2261..1c87fd7 100644
--- a/media_video_micromodal.module
+++ b/media_video_micromodal.module
@@ -1,5 +1,6 @@
 <?php
 
+use Drupal\media\Entity\Media;
 /**
  * @file
  * Contains media_video_micromodal.module.
@@ -56,7 +57,7 @@ function media_video_micromodal_theme_suggestions_media_video_micromodal(array $
   $suggestions = [];
   $hook_original = $variables['theme_hook_original'];
 
-  /** @var \Drupal\media\Entity\Media $media */
+  /** @var Media $media */
   if ($media = $variables['media'] ?? NULL) {
     $bundle = $media->bundle();
     $view_mode = $variables['view_mode'];
diff --git a/src/Plugin/Field/FieldFormatter/MicromodalFieldFormatter.php b/src/Plugin/Field/FieldFormatter/MicromodalFieldFormatter.php
index 05e89a8..9aa39ff 100644
--- a/src/Plugin/Field/FieldFormatter/MicromodalFieldFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/MicromodalFieldFormatter.php
@@ -39,28 +39,28 @@ class MicromodalFieldFormatter extends FormatterBase {
   /**
    * The entity type manager.
    *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   * @var EntityTypeManagerInterface
    */
   private EntityTypeManagerInterface $entityTypeManager;
 
   /**
    * The state.
    *
-   * @var \Drupal\Core\State\State
+   * @var State
    */
   private State $state;
 
   /**
    * Token utility.
    *
-   * @var \Drupal\Core\Utility\Token
+   * @var Token
    */
   protected Token $token;
 
   /**
    * Module handler.
    *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   * @var ModuleHandlerInterface
    */
   protected ModuleHandlerInterface $moduleHandler;
 
@@ -71,7 +71,7 @@ class MicromodalFieldFormatter extends FormatterBase {
    *   The plugin_id for the formatter.
    * @param mixed $plugin_definition
    *   The plugin implementation definition.
-   * @param \Drupal\Core\Field\FieldDefinitionInterface $field_definition
+   * @param FieldDefinitionInterface $field_definition
    *   The definition of the field to which the formatter is associated.
    * @param array $settings
    *   The formatter settings.
@@ -81,13 +81,13 @@ class MicromodalFieldFormatter extends FormatterBase {
    *   The view mode.
    * @param array $third_party_settings
    *   Any third party settings settings.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param EntityTypeManagerInterface $entity_type_manager
    *   The entity type manager.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param ModuleHandlerInterface $module_handler
    *   The module handler service.
-   * @param \Drupal\Core\Utility\Token $token
+   * @param Token $token
    *   The token service.
-   * @param \Drupal\Core\State\State $state
+   * @param State $state
    *   State.
    */
   public function __construct($plugin_id, $plugin_definition, FieldDefinitionInterface $field_definition, array $settings, $label, $view_mode, array $third_party_settings, EntityTypeManagerInterface $entity_type_manager, ModuleHandlerInterface $module_handler, Token $token, State $state) {
@@ -366,7 +366,7 @@ class MicromodalFieldFormatter extends FormatterBase {
               }
 
               // Render out the thumbnail - this is the linked item.
-              $linked_item = render($render_thumbnail);
+              $linked_item = \Drupal::service('renderer')->render($render_thumbnail);
 
             }
 
@@ -408,7 +408,7 @@ class MicromodalFieldFormatter extends FormatterBase {
               $linked_item_render = [
                 '#markup' => '<span class="' . implode(' ', $additional_classes) . '">' . $label . '</span>',
               ];
-              $linked_item = render($linked_item_render);
+              $linked_item = \Drupal::service('renderer')->render($linked_item_render);
             }
             else {
               $linked_item = $label;
