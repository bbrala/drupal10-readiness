diff --git a/tests/src/Functional/VerticalTabConfigurationTest.php b/tests/src/Functional/VerticalTabConfigurationTest.php
index 2c38b55..d36050e 100644
--- a/tests/src/Functional/VerticalTabConfigurationTest.php
+++ b/tests/src/Functional/VerticalTabConfigurationTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\paragraphs_tabs_widget\Functional;
 
+use Drupal\user\UserInterface;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\paragraphs_tabs_widget\Traits\VerticalTabsTestTrait;
 
@@ -31,14 +32,14 @@ class VerticalTabConfigurationTest extends BrowserTestBase {
   /**
    * A user with administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $sutAdminUser;
 
   /**
    * A user without administrative privileges.
    *
-   * @var \Drupal\user\UserInterface
+   * @var UserInterface
    */
   protected $sutNonAdminUser;
 
@@ -52,7 +53,7 @@ class VerticalTabConfigurationTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpRandomParagraphTypeWithRandomTextField();
@@ -63,7 +64,7 @@ class VerticalTabConfigurationTest extends BrowserTestBase {
     $this->sutNonAdminUser = $this->createUser(['administer node form display']);
 
     $as = $this->assertSession();
-    $this->xpathQuerySettingsButton = $as->buildXPathQuery('//input[@name=:settingsName]', [
+    $this->xpathQuerySettingsButton = $this->assertSession()->buildXPathQuery('//input[@name=:settingsName]', [
       ':settingsName' => $this->sutParagraphNodeFieldName . '_settings_edit',
     ]);
   }
@@ -86,7 +87,9 @@ class VerticalTabConfigurationTest extends BrowserTestBase {
     $settingsButton->click();
 
     // Check the field is not visible.
-    $this->assertNoField("fields[{$this->sutParagraphNodeFieldName}][settings_edit_form][settings][summary_selector]");
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Change assertion to buttonExists() if checking for a button.
+    $this->assertSession()->fieldNotExists("fields[{$this->sutParagraphNodeFieldName}][settings_edit_form][settings][summary_selector]");
   }
 
   /**
@@ -107,7 +110,9 @@ class VerticalTabConfigurationTest extends BrowserTestBase {
     $settingsButton->click();
 
     // Check the field is visible.
-    $this->assertField("fields[{$this->sutParagraphNodeFieldName}][settings_edit_form][settings][summary_selector]");
+    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
+    // Change assertion to buttonExists() if checking for a button.
+    $this->assertSession()->fieldExists("fields[{$this->sutParagraphNodeFieldName}][settings_edit_form][settings][summary_selector]");
   }
 
 }
diff --git a/tests/src/Functional/VerticalTabWidgetHtmlOutputTest.php b/tests/src/Functional/VerticalTabWidgetHtmlOutputTest.php
index 8486b70..ac11490 100644
--- a/tests/src/Functional/VerticalTabWidgetHtmlOutputTest.php
+++ b/tests/src/Functional/VerticalTabWidgetHtmlOutputTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\Tests\paragraphs_tabs_widget\Functional;
 
+use Drupal\user\Entity\User;
 use Drupal\Core\Url;
 use Drupal\Tests\BrowserTestBase;
 use Drupal\Tests\paragraphs_tabs_widget\Traits\VerticalTabsTestTrait;
@@ -31,14 +32,14 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
   /**
    * A user with administrative privileges in the system under test.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   protected $sutAdminUser;
 
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpRandomParagraphTypeWithRandomTextField();
@@ -63,7 +64,7 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
     $page->hasField($this->sutParagraphNodeFieldName);
 
     // Validate there is a label for the field/wrapper.
-    $label = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//label[text()=:fieldLabelText]', [
+    $label = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//label[text()=:fieldLabelText]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':fieldLabelText' => $this->sutParagraphNodeFieldLabel,
     ]));
@@ -71,14 +72,14 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
     $this->assertCount(1, $label, 'There is exactly one field label on the create node form.');
 
     // Validate the field/wrapper has the correct HTML attributes.
-    $vtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
+    $vtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
     ]));
     $this->assertNotEmpty($vtWrapper, 'Vertical tab wrapper is present.');
     $this->assertCount(1, $vtWrapper, 'There is exactly one vertical tab wrapper on the create node form.');
 
     // Validate the label is adjacent to the field/wrapper.
-    $labelAndVtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//label[text()=:fieldLabelText]/following-sibling::*[1][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
+    $labelAndVtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//label[text()=:fieldLabelText]/following-sibling::*[1][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':fieldLabelText' => $this->sutParagraphNodeFieldLabel,
     ]));
@@ -87,7 +88,7 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
     // Validate the field/wrapper has a "tab" detail element as a child element
     // (important because the JavaScript won't work if tabs are grandchildren or
     // later descendants).
-    $detailsTabIsChildOfVtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]', [
+    $detailsTabIsChildOfVtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
     ]));
     $this->assertNotEmpty($detailsTabIsChildOfVtWrapper, 'Details tab element is a child (i.e.: not a later descendant) of the vertical tab wrapper.');
@@ -95,7 +96,7 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
 
     // Validate that the paragraph's field is a descendant of a tab. This proves
     // the paragraph's form is inside the tab.
-    $paragraphFieldIsDescendantOfTab = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@name,:paraFieldMachName)]', [
+    $paragraphFieldIsDescendantOfTab = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@name,:paraFieldMachName)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       // The name of the field in the paragraph will be in square brackets
       // somewhere in the input element's name attribute according to Drupal's
@@ -108,7 +109,7 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
     // Validate the field/wrapper has an "add more" button as a child element
     // (important because the JavaScript won't work if the add more element is a
     // grandchild or later descendant).
-    $addMoreIsChildOfVtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/div[@data-paragraphs-tabs-widget-addmore-group=:nodeFieldMachName]', [
+    $addMoreIsChildOfVtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/div[@data-paragraphs-tabs-widget-addmore-group=:nodeFieldMachName]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
     ]));
     $this->assertNotEmpty($addMoreIsChildOfVtWrapper, 'Add more element is a child (i.e.: not a later descendant) of the vertical tab wrapper.');
@@ -151,21 +152,21 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
     $page = $this->getSession()->getPage();
 
     // Validate there is a label for the field/wrapper.
-    $label = $page->findAll('xpath', $as->buildXPathQuery('//label[text()=:fieldLabelText]', [
+    $label = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//label[text()=:fieldLabelText]', [
       ':fieldLabelText' => $this->sutParagraphNodeFieldLabel,
     ]));
     $this->assertNotEmpty($label, 'Field label is present.');
     $this->assertCount(1, $label, 'There is exactly one field label on the edit node form.');
 
     // Validate the field/wrapper has the correct HTML attributes.
-    $vtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
+    $vtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
     ]));
     $this->assertNotEmpty($vtWrapper, 'Vertical tab wrapper is present.');
     $this->assertCount(1, $vtWrapper, 'There is exactly one vertical tab wrapper on the edit node form.');
 
     // Validate the label is adjacent to the field/wrapper.
-    $labelAndVtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//label[text()=:fieldLabelText]/following-sibling::*[1][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
+    $labelAndVtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//label[text()=:fieldLabelText]/following-sibling::*[1][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
       ':fieldLabelText' => $this->sutParagraphNodeFieldLabel,
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
     ]));
@@ -174,7 +175,7 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
     // Validate the field/wrapper has a "tab" detail element as a child element
     // (important because the JavaScript won't work if tabs are grandchildren or
     // later descendants).
-    $detailsTabIsChildOfVtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]', [
+    $detailsTabIsChildOfVtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
     ]));
     $this->assertNotEmpty($detailsTabIsChildOfVtWrapper, 'Details tab element is a child (i.e.: not a later descendant) of the vertical tab wrapper.');
@@ -182,7 +183,7 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
 
     // Validate that the paragraph's field is a descendant of a tab. This proves
     // the paragraph's form is inside the tab.
-    $paragraphFieldIsDescendantOfTab = $page->findAll('xpath', $as->buildXPathQuery('//details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@name,:paraFieldMachName)]', [
+    $paragraphFieldIsDescendantOfTab = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//details[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@name,:paraFieldMachName)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       // The name of the field in the paragraph will be in square brackets
       // somewhere in the input element's name attribute according to Drupal's
@@ -194,14 +195,14 @@ class VerticalTabWidgetHtmlOutputTest extends BrowserTestBase {
 
     // Validate the paragraph field values we saved at the start of this test
     // are shown in the correct fields.
-    $this->assertEqual($paragraphFieldIsDescendantOfTab[0]->getValue(), $sutParagraphParagraphFieldValue1, 'Paragraph 1 field value matches what we saved.');
-    $this->assertEqual($paragraphFieldIsDescendantOfTab[1]->getValue(), $sutParagraphParagraphFieldValue2, 'Paragraph 2 field value matches what we saved.');
-    $this->assertEqual($paragraphFieldIsDescendantOfTab[2]->getValue(), $sutParagraphParagraphFieldValue3, 'Paragraph 3 field value matches what we saved.');
+    $this->assertEquals($paragraphFieldIsDescendantOfTab[0]->getValue(), $sutParagraphParagraphFieldValue1, 'Paragraph 1 field value matches what we saved.');
+    $this->assertEquals($paragraphFieldIsDescendantOfTab[1]->getValue(), $sutParagraphParagraphFieldValue2, 'Paragraph 2 field value matches what we saved.');
+    $this->assertEquals($paragraphFieldIsDescendantOfTab[2]->getValue(), $sutParagraphParagraphFieldValue3, 'Paragraph 3 field value matches what we saved.');
 
     // Validate the field/wrapper has an "add more" button as a child element
     // (important because the JavaScript won't work if the add more element is a
     // grandchild or later descendant).
-    $addMoreIsChildOfVtWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/div[@data-paragraphs-tabs-widget-addmore-group=:nodeFieldMachName]', [
+    $addMoreIsChildOfVtWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]/div[@data-paragraphs-tabs-widget-addmore-group=:nodeFieldMachName]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
     ]));
     $this->assertNotEmpty($addMoreIsChildOfVtWrapper, 'Add more element is a child (i.e.: not a later descendant) of the vertical tab wrapper.');
diff --git a/tests/src/FunctionalJavascript/VerticalTabWidgetJsTest.php b/tests/src/FunctionalJavascript/VerticalTabWidgetJsTest.php
index 39236c9..5a47937 100644
--- a/tests/src/FunctionalJavascript/VerticalTabWidgetJsTest.php
+++ b/tests/src/FunctionalJavascript/VerticalTabWidgetJsTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\paragraphs_tabs_widget\FunctionalJavascript;
 
+use Drupal\node\NodeInterface;
+use Drupal\user\Entity\User;
 use Drupal\Core\Url;
 use Drupal\FunctionalJavascriptTests\WebDriverTestBase;
 use Drupal\Tests\paragraphs_tabs_widget\Traits\VerticalTabsTestTrait;
@@ -31,14 +33,14 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
   /**
    * An editable node for the system under test.
    *
-   * @var \Drupal\node\NodeInterface
+   * @var NodeInterface
    */
   protected $sutNode;
 
   /**
    * A user with administrative privileges for the system under test.
    *
-   * @var \Drupal\user\Entity\User
+   * @var User
    */
   private $sutAdminUser;
 
@@ -59,7 +61,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->setUpRandomParagraphTypeWithRandomTextField();
@@ -99,7 +101,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // list.
     $this->drupalGet(Url::fromRoute('node.add', ['node_type' => $this->sutNodeType->id()])->toString());
     $page = $this->getSession()->getPage();
-    $vtAddButton = $page->findAll('xpath', $as->buildXPathQuery('//*[contains(@class,:jsVtWrapperClass)]/*[contains(@class,:vtWrapperClass)]/ul[contains(@class,:vtMenuClass)]/*[@data-paragraphs-tabs-widget-addmore-group=:fieldName]', [
+    $vtAddButton = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[contains(@class,:jsVtWrapperClass)]/*[contains(@class,:vtWrapperClass)]/ul[contains(@class,:vtMenuClass)]/*[@data-paragraphs-tabs-widget-addmore-group=:fieldName]', [
       ':jsVtWrapperClass' => 'js-form-type-vertical-tabs',
       ':vtWrapperClass' => 'vertical-tabs',
       ':vtMenuClass' => 'vertical-tabs__menu',
@@ -121,7 +123,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // vertical tabs menu list.
     $this->drupalGet($this->sutNode->toUrl('edit-form')->toString());
     $page = $this->getSession()->getPage();
-    $vtAddButton = $page->findAll('xpath', $as->buildXPathQuery('//*[contains(@class,:jsVtWrapperClass)]/*[contains(@class,:vtWrapperClass)]/ul[contains(@class,:vtMenuClass)]/*[@data-paragraphs-tabs-widget-addmore-group=:fieldName]', [
+    $vtAddButton = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[contains(@class,:jsVtWrapperClass)]/*[contains(@class,:vtWrapperClass)]/ul[contains(@class,:vtMenuClass)]/*[@data-paragraphs-tabs-widget-addmore-group=:fieldName]', [
       ':jsVtWrapperClass' => 'js-form-type-vertical-tabs',
       ':vtWrapperClass' => 'vertical-tabs',
       ':vtMenuClass' => 'vertical-tabs__menu',
@@ -151,7 +153,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
 
     // Node/add: Find evidence that JavaScript ran on the page by looking for a
     // class not sent in the initial page response.
-    $fieldLabel = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:jsVtWrapperClass)]/label[text()=:fieldLabelText]', [
+    $fieldLabel = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:jsVtWrapperClass)]/label[text()=:fieldLabelText]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':jsVtWrapperClass' => 'js-form-type-vertical-tabs',
       ':fieldLabelText' => $this->sutParagraphNodeFieldLabel,
@@ -159,7 +161,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->assertNotEmpty($fieldLabel, "On the node/add page, the field's label's parent shows vertical-tabs class added by JavaScript.");
 
     // Node/add: Verify we can find a tab menu for the field.
-    $verticalTabsMenu = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//ul[contains(@class,:vtMenuClass)]', [
+    $verticalTabsMenu = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//ul[contains(@class,:vtMenuClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtMenuClass' => 'vertical-tabs__menu',
     ]));
@@ -168,7 +170,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // Node/add: Verify there is only one vertical tab menu item for the field,
     // i.e.: for the empty paragraph created by the base
     // entity_reference_paragraphs widget for new entities.
-    $verticalTabsMenuItems = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]', [
+    $verticalTabsMenuItems = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtMenuItemClass' => 'vertical-tabs__menu-item',
     ]));
@@ -176,7 +178,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
 
     // Node/add: Verify we can find a container for vertical tab panes for the
     // field.
-    $verticalTabsPanesWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
+    $verticalTabsPanesWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtPanesWrapperClass' => 'vertical-tabs__panes',
     ]));
@@ -185,7 +187,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // Node/add: Verify there is only one vertical tab pane for the field, i.e.:
     // for the empty paragraph created by the base entity_reference_paragraphs
     // widget for new entities. Verify this tab pane is visible.
-    $verticalTabsPanes = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
+    $verticalTabsPanes = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtPanesWrapperClass' => 'vertical-tabs__panes',
       ':vtPaneClass' => 'vertical-tabs__pane',
@@ -215,7 +217,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
 
     // Node/edit: Find evidence that JavaScript ran on the page by looking for a
     // class not sent in the initial page response.
-    $fieldLabel = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:jsVtWrapperClass)]/label[text()=:fieldLabelText]', [
+    $fieldLabel = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:jsVtWrapperClass)]/label[text()=:fieldLabelText]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':jsVtWrapperClass' => 'js-form-type-vertical-tabs',
       ':fieldLabelText' => $this->sutParagraphNodeFieldLabel,
@@ -223,7 +225,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->assertNotEmpty($fieldLabel, "On the node/edit page, the field's label's parent shows vertical-tabs class added by JavaScript.");
 
     // Node/edit: Verify we can find a tab menu for the field.
-    $verticalTabsMenu = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//ul[contains(@class,:vtMenuClass)]', [
+    $verticalTabsMenu = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//ul[contains(@class,:vtMenuClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtMenuClass' => 'vertical-tabs__menu',
     ]));
@@ -231,7 +233,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
 
     // Node/edit: Verify there are two vertical tab menu items for the field,
     // i.e.: one for each of the paragraphs we created in the setUp().
-    $verticalTabsMenuItems = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]', [
+    $verticalTabsMenuItems = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtMenuItemClass' => 'vertical-tabs__menu-item',
     ]));
@@ -239,7 +241,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
 
     // Node/edit: Verify we can find a container for vertical tab panes for the
     // field.
-    $verticalTabsPanesWrapper = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
+    $verticalTabsPanesWrapper = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)][@data-paragraphs-tabs-widget-group=:nodeFieldMachName][@data-vertical-tabs-panes]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtPanesWrapperClass' => 'vertical-tabs__panes',
     ]));
@@ -249,7 +251,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // one for each of the paragraphs we created in the setUp(). Verify the
     // first one is visible and the second one is not visible, i.e.: acting like
     // tabs.
-    $verticalTabsPanes = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
+    $verticalTabsPanes = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtPanesWrapperClass' => 'vertical-tabs__panes',
       ':vtPaneClass' => 'vertical-tabs__pane',
@@ -274,7 +276,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->drupalLogin($this->sutAdminUser);
 
     // Build any xpath queries we will use multiple times.
-    $xpathQueryMenuItemSummary = $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]//*[contains(@class,:vtMenuItemSummaryClass)]', [
+    $xpathQueryMenuItemSummary = $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]//*[contains(@class,:vtMenuItemSummaryClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtMenuItemClass' => 'vertical-tabs__menu-item',
       ':vtMenuItemSummaryClass' => 'vertical-tabs__menu-item-summary',
@@ -298,7 +300,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // one tab summary, and verify the first tab summary is now the random
     // string.
     $randomFieldValue = $this->randomString();
-    $field = $page->find('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//input[contains(@name,:paragraphFieldMachName)]', [
+    $field = $page->find('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//input[contains(@name,:paragraphFieldMachName)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':paragraphFieldMachName' => $this->sutParagraphParagraphFieldName,
     ]));
@@ -326,7 +328,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->drupalLogin($this->sutAdminUser);
 
     // Build any xpath queries we will use multiple times.
-    $xpathQueryMenuItemSummary = $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]//*[contains(@class,:vtMenuItemSummaryClass)]', [
+    $xpathQueryMenuItemSummary = $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//li[contains(@class,:vtMenuItemClass)]//*[contains(@class,:vtMenuItemSummaryClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtMenuItemClass' => 'vertical-tabs__menu-item',
       ':vtMenuItemSummaryClass' => 'vertical-tabs__menu-item-summary',
@@ -343,8 +345,8 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // two random strings.
     $vtMenuItemSummariesBefore = $page->findAll('xpath', $xpathQueryMenuItemSummary);
     $this->assertCount(2, $vtMenuItemSummariesBefore, 'There is initially two menu item summaries on the node/edit page.');
-    $this->assertEqual($vtMenuItemSummariesBefore[0]->getText(), $this->sutParagraph1RandomValue, 'The first menu item summary on the node/edit page is the value of the first paragraph field.');
-    $this->assertEqual($vtMenuItemSummariesBefore[1]->getText(), $this->sutParagraph2RandomValue, 'The second menu item summary on the node/edit page is the value of the second paragraph field.');
+    $this->assertEquals($vtMenuItemSummariesBefore[0]->getText(), $this->sutParagraph1RandomValue, 'The first menu item summary on the node/edit page is the value of the first paragraph field.');
+    $this->assertEquals($vtMenuItemSummariesBefore[1]->getText(), $this->sutParagraph2RandomValue, 'The second menu item summary on the node/edit page is the value of the second paragraph field.');
 
     // Node/edit: Generate a random string. Click the second tab summary to
     // make the contents of that tab visible. Find the summary-controlling field
@@ -356,7 +358,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     // random string we just generated.
     $newParagraph2RandomValue = $this->randomString();
     $vtMenuItemSummariesBefore[1]->click();
-    $fields = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//input[contains(@name,:paragraphFieldMachName)]', [
+    $fields = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//input[contains(@name,:paragraphFieldMachName)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':paragraphFieldMachName' => $this->sutParagraphParagraphFieldName,
     ]));
@@ -366,8 +368,8 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     });
     $vtMenuItemSummariesAfter = $page->findAll('xpath', $xpathQueryMenuItemSummary);
     $this->assertCount(2, $vtMenuItemSummariesAfter, 'There are still two menu item summaries on the node/edit page.');
-    $this->assertEqual($vtMenuItemSummariesBefore[0]->getText(), $this->sutParagraph1RandomValue, 'The first menu item summary on the node/edit page is still the value of the first paragraph field.');
-    $this->assertEqual($vtMenuItemSummariesBefore[1]->getText(), $newParagraph2RandomValue, 'The second menu item summary on the node/edit page now matches the random value we set.');
+    $this->assertEquals($vtMenuItemSummariesBefore[0]->getText(), $this->sutParagraph1RandomValue, 'The first menu item summary on the node/edit page is still the value of the first paragraph field.');
+    $this->assertEquals($vtMenuItemSummariesBefore[1]->getText(), $newParagraph2RandomValue, 'The second menu item summary on the node/edit page now matches the random value we set.');
   }
 
   /**
@@ -378,12 +380,12 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->drupalLogin($this->sutAdminUser);
 
     // Prepare any xpath queries we will use multiple times.
-    $xpathQueryVtPanes = $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
+    $xpathQueryVtPanes = $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtPanesWrapperClass' => 'vertical-tabs__panes',
       ':vtPaneClass' => 'vertical-tabs__pane',
     ]);
-    $xpathQueryConfirmRemoveButton = $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:confirmButtonSelector)]', [
+    $xpathQueryConfirmRemoveButton = $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:confirmButtonSelector)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':confirmButtonSelector' => '-top-links-confirm-remove-button',
     ]);
@@ -397,7 +399,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->assertCount(1, $verticalTabsPanesPageLoad, 'There is initially 1 vertical tab pane on the node/add page.');
 
     // Find and click the add button. Wait for AJAX to finish.
-    $addButton = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-addmore-group]//input[contains(@class,:addMoreSubmit)]', [
+    $addButton = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-addmore-group]//input[contains(@class,:addMoreSubmit)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':addMoreSubmit' => 'field-add-more-submit',
     ]));
@@ -414,7 +416,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
 
     // Find and click the remove button for the first pane. Wait for AJAX to
     // finish. Click the confirm button. Wait for AJAX to finish.
-    $removeButtons = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:removeButtonSelector)]', [
+    $removeButtons = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:removeButtonSelector)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':removeButtonSelector' => '-top-links-remove-button',
     ]));
@@ -445,12 +447,12 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->drupalLogin($this->sutAdminUser);
 
     // Prepare any xpath queries we will use multiple times.
-    $xpathQueryVtPanes = $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
+    $xpathQueryVtPanes = $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[contains(@class,:vtPanesWrapperClass)]/*[contains(@class,:vtPaneClass)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':vtPanesWrapperClass' => 'vertical-tabs__panes',
       ':vtPaneClass' => 'vertical-tabs__pane',
     ]);
-    $xpathQueryConfirmRemoveButton = $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:confirmButtonSelector)]', [
+    $xpathQueryConfirmRemoveButton = $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:confirmButtonSelector)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':confirmButtonSelector' => '-top-links-confirm-remove-button',
     ]);
@@ -464,7 +466,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
     $this->assertCount(2, $verticalTabsPanesPageLoad, 'There are initially 2 vertical tab panes on the node/edit page.');
 
     // Find and click the add button. Wait for AJAX to finish.
-    $addButton = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-addmore-group]//input[contains(@class,:addMoreSubmit)]', [
+    $addButton = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraphs-tabs-widget-addmore-group]//input[contains(@class,:addMoreSubmit)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':addMoreSubmit' => 'field-add-more-submit',
     ]));
@@ -481,7 +483,7 @@ class VerticalTabWidgetJsTest extends WebDriverTestBase {
 
     // Find and click the remove button for the first pane. Wait for AJAX to
     // finish. Click the confirm button. Wait for AJAX to finish.
-    $removeButtons = $page->findAll('xpath', $as->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:removeButtonSelector)]', [
+    $removeButtons = $page->findAll('xpath', $this->assertSession()->buildXPathQuery('//*[@data-paragraphs-tabs-widget-group-wrapper=:nodeFieldMachName]//*[@data-paragraph-tabs-widget-tab-group=:nodeFieldMachName]//input[contains(@data-drupal-selector,:removeButtonSelector)]', [
       ':nodeFieldMachName' => $this->sutParagraphNodeFieldName,
       ':removeButtonSelector' => '-top-links-remove-button',
     ]));
diff --git a/tests/src/Traits/VerticalTabsTestTrait.php b/tests/src/Traits/VerticalTabsTestTrait.php
index 5d035ae..fc717b9 100644
--- a/tests/src/Traits/VerticalTabsTestTrait.php
+++ b/tests/src/Traits/VerticalTabsTestTrait.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\paragraphs_tabs_widget\Traits;
 
+use Drupal\node\NodeTypeInterface;
+use Drupal\Core\Entity\EntityStorageException;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\node\Entity\NodeType;
 use Drupal\paragraphs\Entity\Paragraph;
@@ -17,7 +19,7 @@ trait VerticalTabsTestTrait {
   /**
    * A node entity type for the system under test.
    *
-   * @var \Drupal\node\NodeTypeInterface
+   * @var NodeTypeInterface
    */
   protected $sutNodeType;
 
@@ -58,10 +60,10 @@ trait VerticalTabsTestTrait {
    *   paragraph entity bundle. See \Drupal\Core\Entity\EntityBase::create() for
    *   more information.
    *
-   * @return \Drupal\paragraphs\ParagraphInterface
+   * @return ParagraphInterface
    *   The created paragraph entity.
    *
-   * @throws \Drupal\Core\Entity\EntityStorageException
+   * @throws EntityStorageException
    *   Throws an Entity Storage Exception if the new paragraph cannot be stored.
    */
   protected function drupalCreateParagraph(array $values = []) {
