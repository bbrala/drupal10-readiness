modules/contrib/comment_revisionref/comment_revisionref.module
modules/contrib/comment_revisionref/src/CommentRevisionref.php
modules/contrib/comment_revisionref/src/CommentRevisionrefHooks.php
modules/contrib/comment_revisionref/tests/src/Functional/AdminPageTest.php

3 files with changes
====================

1) modules/contrib/comment_revisionref/tests/src/Functional/AdminPageTest.php:32

    ---------- begin diff ----------
@@ @@
   public function testAdminPage() {
     $this->drupalLogin($this->rootUser);
     $this->drupalGet('admin');
-    $this->assertResponse(200);
+    $this->assertSession()->statusCodeEquals(200);

     // Ensure that the test is not marked as risky because of no assertions.
     // see https://gitlab.com/weitzman/drupal-test-traits/-/commit/82bf5059908f9073b3468cb7313960da72176d9a
    ----------- end diff -----------

Applied rules:
 * AssertResponseRector
 * ExceptionAnnotationRector
 * RemoveDataProviderTestPrefixRector
 * ArgumentRemoverRector
 * RenameAnnotationRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * ChangeMethodVisibilityRector


2) modules/contrib/comment_revisionref/src/CommentRevisionrefHooks.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\comment_revisionref;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
 use Drupal\comment\CommentInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Entity\RevisionableInterface;
@@ @@
   /**
    * Implements hook_entity_prepare_form().
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function hookEntityPrepareForm(EntityInterface $entity, $operation, FormStateInterface $form_state) {
     if ($entity instanceof CommentInterface) {
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


3) modules/contrib/comment_revisionref/src/CommentRevisionref.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\comment_revisionref;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Entity\EntityFieldManagerInterface;
+use Drupal\comment\CommentTypeInterface;
 class CommentRevisionref {

   /**
@@ @@
    * @return string|null
    *   The field name, or NULL if none is found.
    *
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function applicableFieldName($commentBundleId, $hostBundleId) {
-    /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager */
+    /** @var EntityFieldManagerInterface $entityFieldManager */
     $entityFieldManager = \Drupal::service('entity_field.manager');

     $entityTypeManager = \Drupal::entityTypeManager();
@@ @@
     $commentEntityType = $entityTypeManager->getDefinition('comment');
     $commentBundleStorage = $entityTypeManager->getStorage($commentEntityType->getBundleEntityType());

-    /** @var \Drupal\comment\CommentTypeInterface $commentType */
+    /** @var CommentTypeInterface $commentType */
     $commentType = $commentBundleStorage->load($commentBundleId);
     $hostEntityTypeId = $commentType->getTargetEntityTypeId();
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


 [OK] 3 files have been changed by Rector                                       

