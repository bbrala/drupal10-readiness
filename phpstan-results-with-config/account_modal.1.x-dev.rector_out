modules/contrib/account_modal/account_modal.install
modules/contrib/account_modal/account_modal.module
modules/contrib/account_modal/src/AccountModalAjaxHelper.php
modules/contrib/account_modal/src/AccountPageHelper.php
modules/contrib/account_modal/src/AjaxCommand/RefreshPageCommand.php
modules/contrib/account_modal/src/Event/AccountModalEvents.php
modules/contrib/account_modal/src/Event/PagesEvent.php
modules/contrib/account_modal/src/Form/AccountModalSettingsForm.php

5 files with changes
====================

1) modules/contrib/account_modal/src/Form/AccountModalSettingsForm.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\account_modal\Form;

+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\account_modal\AccountPageHelper;
 use Drupal\Core\Form\ConfigFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
       '#default_value' => $config->get('messages_position'),
     ];

-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
+    /** @var ModuleHandlerInterface $moduleHandler */
     $moduleHandler = \Drupal::service('module_handler');
     $profileIsInstalled = $moduleHandler->moduleExists('profile');
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


2) modules/contrib/account_modal/src/Event/PagesEvent.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\account_modal\Event;

-use Symfony\Component\EventDispatcher\Event;
+use Symfony\Contracts\EventDispatcher\Event;

 /**
  * Defines the cart empty event.
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * RenameClassRector
 * WrapReturnRector
 * AddParamTypeDeclarationRector
 * ChangeMethodVisibilityRector


3) modules/contrib/account_modal/src/AccountPageHelper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\account_modal;

+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Drupal\account_modal\Event\AccountModalEvents;
 use Drupal\account_modal\Event\PagesEvent;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
@@ @@
       ],
     ];

-    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
+    /** @var ModuleHandlerInterface $moduleHandler */
     $moduleHandler = \Drupal::service('module_handler');
     $profileIsInstalled = $moduleHandler->moduleExists('profile');

@@ @@
     }

     $event = new PagesEvent($pages);
-    /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher */
+    /** @var EventDispatcherInterface $eventDispatcher */
     $eventDispatcher = \Drupal::service('event_dispatcher');
-    $eventDispatcher->dispatch(AccountModalEvents::PAGES, $event);
+    $eventDispatcher->dispatch($event, AccountModalEvents::PAGES);
     return $event->getPages();
   }
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * MakeDispatchFirstArgumentEventRector
 * WrapReturnRector


4) modules/contrib/account_modal/src/AccountModalAjaxHelper.php:1

    ---------- begin diff ----------
@@ @@

 namespace Drupal\account_modal;

+use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
+use Drupal\Component\Plugin\Exception\PluginNotFoundException;
+use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Render\RendererInterface;
+use Drupal\user\UserInterface;
+use Drupal\Core\Entity\EntityFormBuilderInterface;
 use Drupal\account_modal\AjaxCommand\RefreshPageCommand;
 use Drupal\block\Entity\Block;
 use Drupal\Core\Ajax\AjaxResponse;
@@ @@
   /**
    * @param $pageId
    * @param array $form
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\Core\Ajax\AjaxResponse
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return AjaxResponse
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function ajaxCallback($pageId, array $form, FormStateInterface $formState) {
     $response = new AjaxResponse();
@@ @@
       elseif ($pageId === 'register') {
         \Drupal::messenger()->addMessage(t('You have successfully created an account.'));

-        /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
+        /** @var ModuleHandlerInterface $moduleHandler */
         $moduleHandler = \Drupal::service('module_handler');
         $profileIsInstalled = $moduleHandler->moduleExists('profile');

@@ @@
       }
     }

-    /** @var \Drupal\Core\Render\RendererInterface $renderer */
+    /** @var RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
     $messagesElement = [
       '#type' => 'container',
@@ @@
   }

   /**
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\account_modal\AjaxCommand\RefreshPageCommand|\Drupal\Core\Ajax\RedirectCommand
+   * @return RefreshPageCommand|RedirectCommand
    */
   public static function redirectCommand(FormStateInterface $formState) {
     global $base_url;
@@ @@
   }

   /**
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\user\UserInterface|null
+   * @return UserInterface|null
    */
   public static function getUidFromFormState(FormStateInterface $formState) {
     $values = &$formState->getValues();
@@ @@
   }

   /**
-   * @param \Drupal\Core\Form\FormStateInterface $formState
+   * @param FormStateInterface $formState
    *
-   * @return \Drupal\Core\Ajax\OpenModalDialogCommand
-   * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
-   * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
+   * @return OpenModalDialogCommand
+   * @throws InvalidPluginDefinitionException
+   * @throws PluginNotFoundException
    */
   public static function newProfileCommand(FormStateInterface $formState) {
     $config = \Drupal::config('account_modal.settings');
@@ @@
       'is_default' => TRUE,
     ]);

-    /** @var \Drupal\Core\Entity\EntityFormBuilderInterface $entityFormBuilder */
+    /** @var EntityFormBuilderInterface $entityFormBuilder */
     $entityFormBuilder = \Drupal::service('entity.form_builder');
     $form = $entityFormBuilder->getForm($profile, 'add', [
       'uid' => $uid,
@@ @@
         continue;
       }

-      /** @var \Drupal\Core\Render\RendererInterface $renderer */
+      /** @var RendererInterface $renderer */
       $renderer = \Drupal::service('renderer');
       $block = Block::load($id);
       $blockView = $view_builder->view($block);
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector
 * PseudoNamespaceToNamespaceRector
 * WrapReturnRector


5) modules/contrib/account_modal/account_modal.module:0

    ---------- begin diff ----------
@@ @@
 <?php

+use Drupal\Core\Url;
+use Drupal\Component\Serialization\Json;
 use Drupal\account_modal\AccountModalAjaxHelper;
 use Drupal\account_modal\AccountPageHelper;
 use Drupal\Core\Form\FormStateInterface;
@@ @@
  * Implements hook_link_alter().
  */
 function account_modal_link_alter(&$variables) {
-  /** @var \Drupal\Core\Url $url */
+  /** @var Url $url */
   $url = $variables['url'];

   if (!$url->isRouted()) {
@@ @@

   $variables['options']['attributes']['class'][] = 'use-ajax';
   $variables['options']['attributes']['data-dialog-type'] = 'modal';
-  $variables['options']['attributes']['data-dialog-options'] = \Drupal\Component\Serialization\Json::encode([
+  $variables['options']['attributes']['data-dialog-options'] = Json::encode([
     'width' => $dialog_width,
     'height' => $dialog_height,
     'dialogClass' => 'account-modal account-modal--' . $page,
    ----------- end diff -----------

Applied rules:
 * ArgumentRemoverRector


 [WARNING] 1 nodes were removed                                                 

 [OK] 5 files have been changed by Rector                                       

